package
org
apache
xalan
xsltc
dom
import
java
util
Vector
import
org
apache
xalan
xsltc
DOM
import
org
apache
xalan
xsltc
Translet
import
org
apache
xalan
xsltc
NodeIterator
import
org
apache
xalan
xsltc
dom
Axis
public
abstract
class
NodeCounter
implements
Axis
public
static
final
int
END
DOM
NULL
protected
int
_node
END
protected
int
_nodeType
DOM
FIRST_TYPE
protected
int
_value
Integer
MIN_VALUE
public
final
DOM
_document
public
final
NodeIterator
_iterator
public
final
Translet
_translet
protected
String
_format
protected
String
_lang
protected
String
_letterValue
protected
String
_groupSep
protected
int
_groupSize
private
boolean
separFirst
private
boolean
separLast
private
Vector
separToks
private
Vector
formatToks
private
int
nSepars
private
int
nFormats
private
static
String
Thousands
private
static
String
Hundreds
private
static
String
Tens
private
static
String
Ones
protected
NodeCounter
Translet
translet
DOM
document
NodeIterator
iterator
_translet
translet
_document
document
_iterator
iterator
abstract
public
NodeCounter
setStartNode
int
node
public
NodeCounter
setValue
int
value
_value
value
return
this
protected
void
setFormatting
String
format
String
lang
String
letterValue
String
groupSep
String
groupSize
_lang
lang
_format
format
_groupSep
groupSep
_letterValue
letterValue
try
_groupSize
Integer
parseInt
groupSize
catch
NumberFormatException
e
_groupSize
final
int
length
_format
length
boolean
isFirst
separFirst
separLast
separToks
new
Vector
formatToks
new
Vector
for
int
j
i
i
length
char
c
_format
charAt
i
for
j
i
Character
isLetterOrDigit
c
if
i
length
break
c
_format
charAt
i
if
i
j
if
isFirst
separToks
addElement
isFirst
separFirst
formatToks
addElement
_format
substring
j
i
if
i
length
break
c
_format
charAt
i
for
j
i
Character
isLetterOrDigit
c
if
i
length
break
c
_format
charAt
i
isFirst
if
i
j
separToks
addElement
_format
substring
j
i
nSepars
separToks
size
nFormats
formatToks
size
if
nSepars
nFormats
separLast
if
separFirst
nSepars
if
separLast
nSepars
if
nSepars
separToks
insertElementAt
nSepars
if
separFirst
nSepars
public
NodeCounter
setDefaultFormatting
setFormatting
return
this
abstract
public
String
getCounter
public
String
getCounter
String
format
String
lang
String
letterValue
String
groupSep
String
groupSize
setFormatting
format
lang
letterValue
groupSep
groupSize
return
getCounter
public
boolean
matchesCount
int
node
return
_nodeType
_document
getType
node
public
boolean
matchesFrom
int
node
return
protected
String
formatNumbers
int
value
return
formatNumbers
new
int
value
protected
String
formatNumbers
int
values
final
int
nValues
values
length
final
int
length
_format
length
boolean
isEmpty
for
int
i
i
nValues
i
if
values
i
Integer
MIN_VALUE
isEmpty
if
isEmpty
return
boolean
isFirst
int
t
n
s
final
StringBuffer
buffer
new
StringBuffer
if
separFirst
buffer
append
String
separToks
elementAt
while
n
nValues
final
int
value
values
n
if
value
Integer
MIN_VALUE
if
isFirst
buffer
append
String
separToks
elementAt
s
formatValue
value
String
formatToks
elementAt
t
buffer
if
t
nFormats
t
if
s
nSepars
s
isFirst
n
if
separLast
buffer
append
String
separToks
lastElement
return
buffer
toString
private
void
formatValue
int
value
String
format
StringBuffer
buffer
char
c
format
charAt
if
Character
isDigit
c
char
zero
char
c
Character
getNumericValue
c
StringBuffer
temp
buffer
if
_groupSize
temp
new
StringBuffer
String
s
int
n
value
while
n
s
char
int
zero
n
s
n
n
for
int
i
i
format
length
s
length
i
temp
append
zero
temp
append
s
if
_groupSize
for
int
i
i
temp
length
i
if
i
temp
length
i
_groupSize
buffer
append
_groupSep
buffer
append
temp
charAt
i
else
if
c
_letterValue
equals
buffer
append
romanValue
value
else
if
c
_letterValue
equals
buffer
append
romanValue
value
toUpperCase
else
int
min
int
c
int
max
int
c
while
Character
isLetterOrDigit
char
max
max
buffer
append
alphaValue
value
min
max
private
String
alphaValue
int
value
int
min
int
max
if
value
return
value
int
range
max
min
char
last
char
value
range
min
if
value
range
return
alphaValue
value
range
min
max
last
else
return
last
private
String
romanValue
int
n
if
n
n
return
n
return
Thousands
n
Hundreds
n
Tens
n
Ones
n
