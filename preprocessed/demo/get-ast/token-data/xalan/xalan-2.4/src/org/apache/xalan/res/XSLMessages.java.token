package
org
apache
xalan
res
import
java
util
Locale
import
java
util
ResourceBundle
import
java
util
ListResourceBundle
import
java
util
MissingResourceException
import
org
apache
xpath
res
XPATHErrorResources
public
class
XSLMessages
private
Locale
fLocale
Locale
getDefault
private
static
ResourceBundle
XSLTBundle
private
static
ResourceBundle
XPATHBundle
private
static
final
String
XSLT_ERROR_RESOURCES
private
static
final
String
XPATH_ERROR_RESOURCES
private
static
String
BAD_CODE
private
static
String
FORMAT_FAILED
public
void
setLocale
Locale
locale
fLocale
locale
public
Locale
getLocale
return
fLocale
public
static
final
String
createXPATHWarning
int
errorCode
Object
args
if
XPATHBundle
XPATHBundle
loadResourceBundle
XPATH_ERROR_RESOURCES
ResourceBundle
fResourceBundle
XPATHBundle
if
fResourceBundle
String
msgKey
XPATHErrorResources
getWarningKey
errorCode
return
createXPATHMsg
fResourceBundle
msgKey
args
else
return
public
static
final
String
createXPATHMessage
int
errorCode
Object
args
if
XPATHBundle
XPATHBundle
loadResourceBundle
XPATH_ERROR_RESOURCES
ResourceBundle
fResourceBundle
XPATHBundle
if
fResourceBundle
String
msgKey
XPATHErrorResources
getMessageKey
errorCode
return
createXPATHMsg
fResourceBundle
msgKey
args
else
return
public
static
final
String
createXPATHMessage
String
msgKey
Object
args
if
XPATHBundle
XPATHBundle
loadResourceBundle
XPATH_ERROR_RESOURCES
ResourceBundle
fResourceBundle
XPATHBundle
if
fResourceBundle
return
createXPATHMsg
fResourceBundle
msgKey
args
else
return
public
static
final
String
createXPATHMsg
ResourceBundle
fResourceBundle
String
msgKey
Object
args
String
fmsg
boolean
throwex
String
msg
if
msgKey
msg
fResourceBundle
getString
msgKey
if
msg
msg
fResourceBundle
getString
XPATHErrorResources
BAD_CODE
throwex
if
args
try
int
n
args
length
for
int
i
i
n
i
if
args
i
args
i
fmsg
java
text
MessageFormat
format
msg
args
catch
Exception
e
fmsg
fResourceBundle
getString
XPATHErrorResources
FORMAT_FAILED
fmsg
msg
else
fmsg
msg
if
throwex
throw
new
RuntimeException
fmsg
return
fmsg
public
static
final
String
createWarning
int
errorCode
Object
args
if
XSLTBundle
XSLTBundle
loadResourceBundle
XSLT_ERROR_RESOURCES
ResourceBundle
fResourceBundle
XSLTBundle
if
fResourceBundle
String
msgKey
XSLTErrorResources
getWarningKey
errorCode
return
createMsg
fResourceBundle
msgKey
args
else
return
public
static
final
String
createMessage
String
msgKey
Object
args
if
XSLTBundle
XSLTBundle
loadResourceBundle
XSLT_ERROR_RESOURCES
ResourceBundle
fResourceBundle
XSLTBundle
if
fResourceBundle
return
createMsg
fResourceBundle
msgKey
args
else
return
public
static
final
String
createMessage
int
errorCode
Object
args
if
XSLTBundle
XSLTBundle
loadResourceBundle
XSLT_ERROR_RESOURCES
ResourceBundle
fResourceBundle
XSLTBundle
if
fResourceBundle
String
msgKey
XSLTErrorResources
getMessageKey
errorCode
return
createMsg
fResourceBundle
msgKey
args
else
return
public
static
final
String
createMsg
ResourceBundle
fResourceBundle
String
msgKey
Object
args
String
fmsg
boolean
throwex
String
msg
if
msgKey
msg
fResourceBundle
getString
msgKey
if
msg
msg
fResourceBundle
getString
BAD_CODE
throwex
if
args
try
int
n
args
length
for
int
i
i
n
i
if
args
i
args
i
fmsg
java
text
MessageFormat
format
msg
args
catch
Exception
e
fmsg
fResourceBundle
getString
FORMAT_FAILED
fmsg
msg
else
fmsg
msg
if
throwex
throw
new
RuntimeException
fmsg
return
fmsg
public
String
createMessage
String
bundleName
int
errorCode
Object
args
throws
Exception
boolean
throwex
int
majorCode
int
minorCode
String
fmsg
ResourceBundle
aResourceBundle
aResourceBundle
loadResourceBundle
bundleName
String
msgKey
XSLTErrorResources
getMessageKey
errorCode
String
msg
if
msgKey
msg
aResourceBundle
getString
msgKey
if
msg
msg
aResourceBundle
getString
BAD_CODE
throwex
if
args
try
int
n
args
length
for
int
i
i
n
i
if
args
i
args
i
fmsg
java
text
MessageFormat
format
msg
args
catch
Exception
e
fmsg
aResourceBundle
getString
FORMAT_FAILED
fmsg
msg
else
fmsg
msg
if
throwex
throw
new
RuntimeException
fmsg
return
fmsg
public
static
final
ResourceBundle
loadResourceBundle
String
className
throws
MissingResourceException
Locale
locale
Locale
getDefault
try
return
ResourceBundle
getBundle
className
locale
catch
MissingResourceException
e
try
return
ResourceBundle
getBundle
XSLT_ERROR_RESOURCES
new
Locale
catch
MissingResourceException
e2
throw
new
MissingResourceException
className
className
private
static
final
String
getResourceSuffix
Locale
locale
String
suffix
locale
getLanguage
String
country
locale
getCountry
if
country
equals
suffix
country
return
suffix
