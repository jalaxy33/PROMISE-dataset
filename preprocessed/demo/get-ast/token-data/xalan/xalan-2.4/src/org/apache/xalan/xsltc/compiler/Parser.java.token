package
org
apache
xalan
xsltc
compiler
import
java
io
import
java
net
URL
import
java
util
Vector
import
java
util
Hashtable
import
java
util
Properties
import
java
util
Dictionary
import
java
util
Enumeration
import
java
util
StringTokenizer
import
java
util
Stack
import
java
net
MalformedURLException
import
javax
xml
parsers
import
org
w3c
dom
import
org
xml
sax
import
java_cup
runtime
Symbol
import
org
apache
xalan
xsltc
compiler
util
import
org
apache
xalan
xsltc
runtime
AttributeList
public
class
Parser
implements
Constants
ContentHandler
private
static
final
String
XSL
private
static
final
String
TRANSLET
private
Locator
_locator
private
XSLTC
_xsltc
private
XPathParser
_xpathParser
private
Vector
_errors
private
Vector
_warnings
private
Hashtable
_instructionClasses
private
Hashtable
_instructionAttrs
private
Hashtable
_qNames
private
Hashtable
_namespaces
private
QName
_useAttributeSets
private
QName
_excludeResultPrefixes
private
QName
_extensionElementPrefixes
private
Hashtable
_variableScope
private
Stylesheet
_currentStylesheet
private
SymbolTable
_symbolTable
private
Output
_output
private
Template
_template
private
boolean
_rootNamespaceDef
private
SyntaxTreeNode
_root
private
String
_target
private
int
_currentImportPrecedence
public
Parser
XSLTC
xsltc
_xsltc
xsltc
public
void
init
_qNames
new
Hashtable
_namespaces
new
Hashtable
_instructionClasses
new
Hashtable
_instructionAttrs
new
Hashtable
_variableScope
new
Hashtable
_template
_errors
new
Vector
_warnings
new
Vector
_symbolTable
new
SymbolTable
_xpathParser
new
XPathParser
this
_currentStylesheet
_currentImportPrecedence
initStdClasses
initInstructionAttrs
initExtClasses
initSymbolTable
_useAttributeSets
getQName
XSLT_URI
XSL
_excludeResultPrefixes
getQName
XSLT_URI
XSL
_extensionElementPrefixes
getQName
XSLT_URI
XSL
public
void
setOutput
Output
output
if
_output
if
_output
getImportPrecedence
output
getImportPrecedence
_output
disable
_output
output
else
output
disable
else
_output
output
public
Output
getOutput
return
_output
public
Properties
getOutputProperties
return
getTopLevelStylesheet
getOutputProperties
public
void
addVariable
Variable
var
addVariableOrParam
var
public
void
addParameter
Param
param
addVariableOrParam
param
private
void
addVariableOrParam
VariableBase
var
Object
existing
_variableScope
get
var
getName
if
existing
if
existing
instanceof
Stack
Stack
stack
Stack
existing
stack
push
var
else
if
existing
instanceof
VariableBase
Stack
stack
new
Stack
stack
push
existing
stack
push
var
_variableScope
put
var
getName
stack
else
_variableScope
put
var
getName
var
public
void
removeVariable
QName
name
Object
existing
_variableScope
get
name
if
existing
instanceof
Stack
Stack
stack
Stack
existing
if
stack
isEmpty
stack
pop
if
stack
isEmpty
return
_variableScope
remove
name
public
VariableBase
lookupVariable
QName
name
Object
existing
_variableScope
get
name
if
existing
instanceof
VariableBase
return
VariableBase
existing
else
if
existing
instanceof
Stack
Stack
stack
Stack
existing
return
VariableBase
stack
peek
return
public
void
setXSLTC
XSLTC
xsltc
_xsltc
xsltc
public
XSLTC
getXSLTC
return
_xsltc
public
int
getCurrentImportPrecedence
return
_currentImportPrecedence
public
int
getNextImportPrecedence
return
_currentImportPrecedence
public
void
setCurrentStylesheet
Stylesheet
stylesheet
_currentStylesheet
stylesheet
public
Stylesheet
getCurrentStylesheet
return
_currentStylesheet
public
Stylesheet
getTopLevelStylesheet
return
_xsltc
getStylesheet
public
QName
getQNameSafe
final
String
stringRep
final
int
colon
stringRep
lastIndexOf
if
colon
final
String
prefix
stringRep
substring
colon
final
String
localname
stringRep
substring
colon
String
namespace
if
prefix
equals
XMLNS_PREFIX
namespace
_symbolTable
lookupNamespace
prefix
if
namespace
namespace
EMPTYSTRING
return
getQName
namespace
prefix
localname
else
final
String
uri
stringRep
equals
XMLNS_PREFIX
_symbolTable
lookupNamespace
EMPTYSTRING
return
getQName
uri
stringRep
public
QName
getQName
final
String
stringRep
return
getQName
stringRep
public
QName
getQNameIgnoreDefaultNs
final
String
stringRep
return
getQName
stringRep
public
QName
getQName
final
String
stringRep
boolean
reportError
return
getQName
stringRep
reportError
private
QName
getQName
final
String
stringRep
boolean
reportError
boolean
ignoreDefaultNs
final
int
colon
stringRep
lastIndexOf
if
colon
final
String
prefix
stringRep
substring
colon
final
String
localname
stringRep
substring
colon
String
namespace
if
prefix
equals
XMLNS_PREFIX
namespace
_symbolTable
lookupNamespace
prefix
if
namespace
reportError
final
int
line
_locator
getLineNumber
ErrorMsg
err
new
ErrorMsg
ErrorMsg
NAMESPACE_UNDEF_ERR
line
prefix
reportError
ERROR
err
return
getQName
namespace
prefix
localname
else
if
stringRep
equals
XMLNS_PREFIX
ignoreDefaultNs
final
String
defURI
ignoreDefaultNs
_symbolTable
lookupNamespace
EMPTYSTRING
return
getQName
defURI
stringRep
public
QName
getQName
String
namespace
String
prefix
String
localname
if
namespace
namespace
equals
EMPTYSTRING
QName
name
QName
_qNames
get
localname
if
name
name
new
QName
prefix
localname
_qNames
put
localname
name
return
name
else
Dictionary
space
Dictionary
_namespaces
get
namespace
if
space
final
QName
name
new
QName
namespace
prefix
localname
_namespaces
put
namespace
space
new
Hashtable
space
put
localname
name
return
name
else
QName
name
QName
space
get
localname
if
name
name
new
QName
namespace
prefix
localname
space
put
localname
name
return
name
public
QName
getQName
String
scope
String
name
return
getQName
scope
name
public
QName
getQName
QName
scope
QName
name
return
getQName
scope
toString
name
toString
public
QName
getUseAttributeSets
return
_useAttributeSets
public
QName
getExtensionElementPrefixes
return
_extensionElementPrefixes
public
QName
getExcludeResultPrefixes
return
_excludeResultPrefixes
public
Stylesheet
makeStylesheet
SyntaxTreeNode
element
throws
CompilerException
try
Stylesheet
stylesheet
if
element
instanceof
Stylesheet
stylesheet
Stylesheet
element
else
stylesheet
new
Stylesheet
stylesheet
setSimplified
stylesheet
addElement
element
stylesheet
setAttributes
element
getAttributes
if
element
lookupNamespace
EMPTYSTRING
element
addPrefixMapping
EMPTYSTRING
EMPTYSTRING
stylesheet
setParser
this
return
stylesheet
catch
ClassCastException
e
ErrorMsg
err
new
ErrorMsg
ErrorMsg
NOT_STYLESHEET_ERR
element
throw
new
CompilerException
err
toString
public
void
createAST
Stylesheet
stylesheet
try
if
stylesheet
stylesheet
parseContents
this
final
int
precedence
stylesheet
getImportPrecedence
final
Enumeration
elements
stylesheet
elements
while
elements
hasMoreElements
Object
child
elements
nextElement
if
child
instanceof
Text
final
int
l
_locator
getLineNumber
ErrorMsg
err
new
ErrorMsg
ErrorMsg
ILLEGAL_TEXT_NODE_ERR
l
reportError
ERROR
err
if
errorsFound
stylesheet
typeCheck
_symbolTable
catch
TypeCheckError
e
reportError
ERROR
new
ErrorMsg
e
toString
public
SyntaxTreeNode
parse
XMLReader
reader
InputSource
input
try
reader
setContentHandler
this
reader
parse
input
return
SyntaxTreeNode
getStylesheet
_root
catch
IOException
e
if
_xsltc
debug
e
printStackTrace
reportError
ERROR
new
ErrorMsg
e
getMessage
catch
SAXException
e
Throwable
ex
e
getException
if
_xsltc
debug
e
printStackTrace
if
ex
ex
printStackTrace
reportError
ERROR
new
ErrorMsg
e
getMessage
catch
CompilerException
e
if
_xsltc
debug
e
printStackTrace
reportError
ERROR
new
ErrorMsg
e
getMessage
catch
Exception
e
if
_xsltc
debug
e
printStackTrace
reportError
ERROR
new
ErrorMsg
e
getMessage
return
public
SyntaxTreeNode
parse
InputSource
input
try
final
SAXParserFactory
factory
SAXParserFactory
newInstance
try
factory
setFeature
Constants
NAMESPACE_FEATURE
catch
Exception
e
factory
setNamespaceAware
final
SAXParser
parser
factory
newSAXParser
final
XMLReader
reader
parser
getXMLReader
return
parse
reader
input
catch
ParserConfigurationException
e
ErrorMsg
err
new
ErrorMsg
ErrorMsg
SAX_PARSER_CONFIG_ERR
reportError
ERROR
err
catch
SAXParseException
e
reportError
ERROR
new
ErrorMsg
e
getMessage
e
getLineNumber
catch
SAXException
e
reportError
ERROR
new
ErrorMsg
e
getMessage
return
public
SyntaxTreeNode
getDocumentRoot
return
_root
private
String
_PImedia
private
String
_PItitle
private
String
_PIcharset
protected
void
setPIParameters
String
media
String
title
String
charset
_PImedia
media
_PItitle
title
_PIcharset
charset
private
SyntaxTreeNode
getStylesheet
SyntaxTreeNode
root
throws
CompilerException
if
_target
if
_rootNamespaceDef
ErrorMsg
msg
new
ErrorMsg
ErrorMsg
MISSING_XSLT_URI_ERR
throw
new
CompilerException
msg
toString
return
root
if
_target
charAt
SyntaxTreeNode
element
findStylesheet
root
_target
substring
if
element
ErrorMsg
msg
new
ErrorMsg
ErrorMsg
MISSING_XSLT_TARGET_ERR
_target
root
throw
new
CompilerException
msg
toString
return
element
else
return
loadExternalStylesheet
_target
private
SyntaxTreeNode
findStylesheet
SyntaxTreeNode
root
String
href
if
root
return
if
root
instanceof
Stylesheet
String
id
root
getAttribute
if
id
equals
href
return
root
Vector
children
root
getContents
if
children
final
int
count
children
size
for
int
i
i
count
i
SyntaxTreeNode
child
SyntaxTreeNode
children
elementAt
i
SyntaxTreeNode
node
findStylesheet
child
href
if
node
return
node
return
private
SyntaxTreeNode
loadExternalStylesheet
String
location
throws
CompilerException
InputSource
source
if
new
File
location
exists
source
new
InputSource
location
else
source
new
InputSource
location
SyntaxTreeNode
external
SyntaxTreeNode
parse
source
return
external
private
void
initAttrTable
String
elementName
String
attrs
_instructionAttrs
put
getQName
XSLT_URI
XSL
elementName
attrs
private
void
initInstructionAttrs
initAttrTable
new
String
initAttrTable
new
String
initAttrTable
new
String
initAttrTable
new
String
initAttrTable
new
String
initAttrTable
new
String
initAttrTable
new
String
initAttrTable
new
String
initAttrTable
new
String
initAttrTable
new
String
initAttrTable
new
String
initAttrTable
new
String
initAttrTable
new
String
initAttrTable
new
String
initAttrTable
new
String
initAttrTable
new
String
initAttrTable
new
String
initAttrTable
new
String
initAttrTable
new
String
initAttrTable
new
String
initAttrTable
new
String
initAttrTable
new
String
initAttrTable
new
String
initAttrTable
new
String
initAttrTable
new
String
initAttrTable
new
String
initAttrTable
new
String
initAttrTable
new
String
initAttrTable
new
String
initAttrTable
new
String
initAttrTable
new
String
initAttrTable
new
String
initAttrTable
new
String
initAttrTable
new
String
initAttrTable
new
String
private
void
initStdClasses
initStdClass
initStdClass
initStdClass
initStdClass
initStdClass
initStdClass
initStdClass
initStdClass
initStdClass
initStdClass
initStdClass
initStdClass
initStdClass
initStdClass
initStdClass
initStdClass
initStdClass
initStdClass
initStdClass
initStdClass
initStdClass
initStdClass
initStdClass
initStdClass
initStdClass
initStdClass
initStdClass
initStdClass
initStdClass
initStdClass
initStdClass
initStdClass
initStdClass
initStdClass
initStdClass
private
void
initStdClass
String
elementName
String
className
_instructionClasses
put
getQName
XSLT_URI
XSL
elementName
COMPILER_PACKAGE
className
public
boolean
elementSupported
String
namespace
String
localName
return
_instructionClasses
get
getQName
namespace
XSL
localName
public
boolean
functionSupported
String
fname
return
_symbolTable
lookupPrimop
fname
private
void
initExtClasses
initExtClass
private
void
initExtClass
String
elementName
String
className
_instructionClasses
put
getQName
TRANSLET_URI
TRANSLET
elementName
COMPILER_PACKAGE
className
private
void
initSymbolTable
MethodType
I_V
new
MethodType
Type
Int
Type
Void
MethodType
I_R
new
MethodType
Type
Int
Type
Real
MethodType
I_S
new
MethodType
Type
Int
Type
String
MethodType
I_D
new
MethodType
Type
Int
Type
NodeSet
MethodType
R_I
new
MethodType
Type
Real
Type
Int
MethodType
R_V
new
MethodType
Type
Real
Type
Void
MethodType
R_R
new
MethodType
Type
Real
Type
Real
MethodType
R_D
new
MethodType
Type
Real
Type
NodeSet
MethodType
R_O
new
MethodType
Type
Real
Type
Reference
MethodType
I_I
new
MethodType
Type
Int
Type
Int
MethodType
D_O
new
MethodType
Type
NodeSet
Type
Reference
MethodType
D_V
new
MethodType
Type
NodeSet
Type
Void
MethodType
D_S
new
MethodType
Type
NodeSet
Type
String
MethodType
D_D
new
MethodType
Type
NodeSet
Type
NodeSet
MethodType
A_V
new
MethodType
Type
Node
Type
Void
MethodType
S_V
new
MethodType
Type
String
Type
Void
MethodType
S_S
new
MethodType
Type
String
Type
String
MethodType
S_A
new
MethodType
Type
String
Type
Node
MethodType
S_D
new
MethodType
Type
String
Type
NodeSet
MethodType
S_O
new
MethodType
Type
String
Type
Reference
MethodType
B_O
new
MethodType
Type
Boolean
Type
Reference
MethodType
B_V
new
MethodType
Type
Boolean
Type
Void
MethodType
B_B
new
MethodType
Type
Boolean
Type
Boolean
MethodType
B_S
new
MethodType
Type
Boolean
Type
String
MethodType
D_X
new
MethodType
Type
NodeSet
Type
Object
MethodType
R_RR
new
MethodType
Type
Real
Type
Real
Type
Real
MethodType
I_II
new
MethodType
Type
Int
Type
Int
Type
Int
MethodType
B_RR
new
MethodType
Type
Boolean
Type
Real
Type
Real
MethodType
B_II
new
MethodType
Type
Boolean
Type
Int
Type
Int
MethodType
S_SS
new
MethodType
Type
String
Type
String
Type
String
MethodType
S_DS
new
MethodType
Type
String
Type
Real
Type
String
MethodType
S_SR
new
MethodType
Type
String
Type
String
Type
Real
MethodType
D_SS
new
MethodType
Type
NodeSet
Type
String
Type
String
MethodType
D_SD
new
MethodType
Type
NodeSet
Type
String
Type
NodeSet
MethodType
B_BB
new
MethodType
Type
Boolean
Type
Boolean
Type
Boolean
MethodType
B_SS
new
MethodType
Type
Boolean
Type
String
Type
String
MethodType
S_SD
new
MethodType
Type
String
Type
String
Type
NodeSet
MethodType
S_DSS
new
MethodType
Type
String
Type
Real
Type
String
Type
String
MethodType
S_SRR
new
MethodType
Type
String
Type
String
Type
Real
Type
Real
MethodType
S_SSS
new
MethodType
Type
String
Type
String
Type
String
Type
String
_symbolTable
addPrimop
A_V
_symbolTable
addPrimop
I_V
_symbolTable
addPrimop
I_V
_symbolTable
addPrimop
B_V
_symbolTable
addPrimop
B_V
_symbolTable
addPrimop
B_B
_symbolTable
addPrimop
S_V
_symbolTable
addPrimop
S_A
_symbolTable
addPrimop
S_V
_symbolTable
addPrimop
S_A
_symbolTable
addPrimop
R_R
_symbolTable
addPrimop
R_R
_symbolTable
addPrimop
R_R
_symbolTable
addPrimop
B_SS
_symbolTable
addPrimop
R_O
_symbolTable
addPrimop
R_V
_symbolTable
addPrimop
B_O
_symbolTable
addPrimop
S_O
_symbolTable
addPrimop
S_V
_symbolTable
addPrimop
S_SSS
_symbolTable
addPrimop
I_V
_symbolTable
addPrimop
I_S
_symbolTable
addPrimop
B_SS
_symbolTable
addPrimop
S_DS
_symbolTable
addPrimop
S_DSS
_symbolTable
addPrimop
S_S
_symbolTable
addPrimop
D_SS
_symbolTable
addPrimop
D_SD
_symbolTable
addPrimop
D_S
_symbolTable
addPrimop
D_D
_symbolTable
addPrimop
S_V
_symbolTable
addPrimop
B_S
_symbolTable
addPrimop
B_S
_symbolTable
addPrimop
D_S
_symbolTable
addPrimop
D_V
_symbolTable
addPrimop
I_D
_symbolTable
addPrimop
R_D
_symbolTable
addPrimop
S_V
_symbolTable
addPrimop
S_D
_symbolTable
addPrimop
S_V
_symbolTable
addPrimop
S_D
_symbolTable
addPrimop
S_SR
_symbolTable
addPrimop
S_SRR
_symbolTable
addPrimop
S_SS
_symbolTable
addPrimop
S_SS
_symbolTable
addPrimop
S_V
_symbolTable
addPrimop
S_S
_symbolTable
addPrimop
S_S
_symbolTable
addPrimop
D_X
_symbolTable
addPrimop
R_RR
_symbolTable
addPrimop
R_RR
_symbolTable
addPrimop
R_RR
_symbolTable
addPrimop
R_RR
_symbolTable
addPrimop
R_RR
_symbolTable
addPrimop
I_II
_symbolTable
addPrimop
I_II
_symbolTable
addPrimop
I_II
_symbolTable
addPrimop
B_RR
_symbolTable
addPrimop
B_RR
_symbolTable
addPrimop
B_RR
_symbolTable
addPrimop
B_RR
_symbolTable
addPrimop
B_II
_symbolTable
addPrimop
B_II
_symbolTable
addPrimop
B_II
_symbolTable
addPrimop
B_II
_symbolTable
addPrimop
B_BB
_symbolTable
addPrimop
B_BB
_symbolTable
addPrimop
B_BB
_symbolTable
addPrimop
B_BB
_symbolTable
addPrimop
B_BB
_symbolTable
addPrimop
B_BB
_symbolTable
addPrimop
R_R
_symbolTable
addPrimop
I_I
public
SymbolTable
getSymbolTable
return
_symbolTable
public
Template
getTemplate
return
_template
public
void
setTemplate
Template
template
_template
template
private
int
_templateIndex
public
int
getTemplateIndex
return
_templateIndex
private
boolean
versionIsOne
public
SyntaxTreeNode
makeInstance
String
uri
String
prefix
String
local
Attributes
attributes
SyntaxTreeNode
node
QName
qname
getQName
uri
prefix
local
String
className
String
_instructionClasses
get
qname
if
className
try
final
Class
clazz
Class
forName
className
node
SyntaxTreeNode
clazz
newInstance
node
setQName
qname
node
setParser
this
if
_locator
node
setLineNumber
_locator
getLineNumber
if
node
instanceof
Stylesheet
_xsltc
setStylesheet
Stylesheet
node
checkForSuperfluousAttributes
node
attributes
catch
ClassNotFoundException
e
ErrorMsg
err
new
ErrorMsg
ErrorMsg
CLASS_NOT_FOUND_ERR
node
reportError
ERROR
err
catch
Exception
e
ErrorMsg
err
new
ErrorMsg
ErrorMsg
INTERNAL_ERR
e
getMessage
node
reportError
FATAL
err
else
if
uri
if
uri
equals
XSLT_URI
node
new
UnsupportedElement
uri
prefix
local
UnsupportedElement
element
UnsupportedElement
node
ErrorMsg
msg
new
ErrorMsg
ErrorMsg
UNSUPPORTED_XSL_ERR
_locator
getLineNumber
local
element
setErrorMessage
msg
else
if
uri
equals
TRANSLET_URI
node
new
UnsupportedElement
uri
prefix
local
UnsupportedElement
element
UnsupportedElement
node
ErrorMsg
msg
new
ErrorMsg
ErrorMsg
UNSUPPORTED_EXT_ERR
_locator
getLineNumber
local
element
setErrorMessage
msg
else
Stylesheet
sheet
_xsltc
getStylesheet
if
sheet
sheet
isExtension
uri
if
sheet
SyntaxTreeNode
_parentStack
peek
node
new
UnsupportedElement
uri
prefix
local
UnsupportedElement
elem
UnsupportedElement
node
ErrorMsg
msg
new
ErrorMsg
ErrorMsg
UNSUPPORTED_EXT_ERR
_locator
getLineNumber
prefix
local
elem
setErrorMessage
msg
if
node
node
new
LiteralElement
if
node
node
instanceof
LiteralElement
LiteralElement
node
setQName
qname
return
node
private
void
checkForSuperfluousAttributes
SyntaxTreeNode
node
Attributes
attrs
QName
qname
node
getQName
boolean
isStylesheet
node
instanceof
Stylesheet
String
legal
String
_instructionAttrs
get
qname
if
versionIsOne
legal
int
j
final
int
n
attrs
getLength
for
int
i
i
n
i
final
String
attrQName
attrs
getQName
i
if
isStylesheet
attrQName
equals
versionIsOne
attrs
getValue
i
equals
if
attrQName
startsWith
attrQName
indexOf
continue
for
j
j
legal
length
j
if
attrQName
equalsIgnoreCase
legal
j
break
if
j
legal
length
final
ErrorMsg
err
new
ErrorMsg
ErrorMsg
ILLEGAL_ATTRIBUTE_ERR
attrQName
node
reportError
WARNING
err
public
Expression
parseExpression
SyntaxTreeNode
parent
String
exp
return
Expression
parseTopLevel
parent
exp
public
Expression
parseExpression
SyntaxTreeNode
parent
String
attr
String
def
String
exp
parent
getAttribute
attr
if
exp
length
def
exp
def
return
Expression
parseTopLevel
parent
exp
exp
public
Pattern
parsePattern
SyntaxTreeNode
parent
String
pattern
return
Pattern
parseTopLevel
parent
pattern
pattern
public
Pattern
parsePattern
SyntaxTreeNode
parent
String
attr
String
def
String
pattern
parent
getAttribute
attr
if
pattern
length
def
pattern
def
return
Pattern
parseTopLevel
parent
pattern
pattern
private
SyntaxTreeNode
parseTopLevel
SyntaxTreeNode
parent
String
text
String
expression
int
line
if
_locator
line
_locator
getLineNumber
try
_xpathParser
setScanner
new
XPathLexer
new
StringReader
text
Symbol
result
_xpathParser
parse
expression
line
if
result
final
SyntaxTreeNode
node
SyntaxTreeNode
result
value
if
node
node
setParser
this
node
setParent
parent
node
setLineNumber
line
return
node
reportError
ERROR
new
ErrorMsg
ErrorMsg
XPATH_PARSER_ERR
expression
parent
catch
Exception
e
if
_xsltc
debug
e
printStackTrace
reportError
ERROR
new
ErrorMsg
ErrorMsg
XPATH_PARSER_ERR
expression
parent
SyntaxTreeNode
Dummy
setParser
this
return
SyntaxTreeNode
Dummy
public
boolean
errorsFound
return
_errors
size
public
void
printErrors
final
int
size
_errors
size
if
size
System
err
println
ErrorMsg
getCompileErrorMessage
for
int
i
i
size
i
System
err
println
_errors
elementAt
i
public
void
printWarnings
final
int
size
_warnings
size
if
size
System
err
println
ErrorMsg
getCompileWarningMessage
for
int
i
i
size
i
System
err
println
_warnings
elementAt
i
public
void
reportError
final
int
category
final
ErrorMsg
error
switch
category
case
Constants
INTERNAL
_errors
addElement
error
break
case
Constants
UNSUPPORTED
_errors
addElement
error
break
case
Constants
FATAL
_errors
addElement
error
break
case
Constants
ERROR
_errors
addElement
error
break
case
Constants
WARNING
_warnings
addElement
error
break
public
Vector
getErrors
return
_errors
public
Vector
getWarnings
return
_warnings
private
Stack
_parentStack
private
Hashtable
_prefixMapping
public
void
startDocument
_root
_target
_prefixMapping
_parentStack
new
Stack
public
void
endDocument
public
void
startPrefixMapping
String
prefix
String
uri
if
_prefixMapping
_prefixMapping
new
Hashtable
_prefixMapping
put
prefix
uri
public
void
endPrefixMapping
String
prefix
public
void
startElement
String
uri
String
localname
String
qname
Attributes
attributes
throws
SAXException
final
int
col
qname
lastIndexOf
final
String
prefix
col
qname
substring
col
SyntaxTreeNode
element
makeInstance
uri
prefix
localname
attributes
if
element
ErrorMsg
err
new
ErrorMsg
ErrorMsg
ELEMENT_PARSE_ERR
prefix
localname
throw
new
SAXException
err
toString
if
_root
if
_prefixMapping
_prefixMapping
containsValue
Constants
XSLT_URI
_rootNamespaceDef
else
_rootNamespaceDef
_root
element
else
SyntaxTreeNode
parent
SyntaxTreeNode
_parentStack
peek
parent
addElement
element
element
setParent
parent
element
setAttributes
Attributes
new
AttributeList
attributes
element
setPrefixMapping
_prefixMapping
if
element
instanceof
Stylesheet
getSymbolTable
setCurrentNode
element
Stylesheet
element
excludeExtensionPrefixes
this
_prefixMapping
_parentStack
push
element
public
void
endElement
String
uri
String
localname
String
qname
_parentStack
pop
public
void
characters
char
ch
int
start
int
length
String
string
new
String
ch
start
length
SyntaxTreeNode
parent
SyntaxTreeNode
_parentStack
peek
if
string
length
return
if
parent
instanceof
Text
Text
parent
setText
string
return
if
parent
instanceof
Stylesheet
return
SyntaxTreeNode
bro
parent
lastChild
if
bro
bro
instanceof
Text
Text
text
Text
bro
if
text
isTextElement
if
length
int
ch
text
setText
string
return
parent
addElement
new
Text
string
private
String
getTokenValue
String
token
final
int
start
token
indexOf
final
int
stop
token
lastIndexOf
return
token
substring
start
stop
public
void
processingInstruction
String
name
String
value
if
_target
name
equals
String
href
String
media
String
title
String
charset
StringTokenizer
tokens
new
StringTokenizer
value
while
tokens
hasMoreElements
String
token
String
tokens
nextElement
if
token
startsWith
href
getTokenValue
token
else
if
token
startsWith
media
getTokenValue
token
else
if
token
startsWith
title
getTokenValue
token
else
if
token
startsWith
charset
getTokenValue
token
if
_PImedia
_PImedia
equals
media
_PItitle
_PImedia
equals
title
_PIcharset
_PImedia
equals
charset
_target
href
public
void
ignorableWhitespace
char
ch
int
start
int
length
public
void
skippedEntity
String
name
public
void
setDocumentLocator
Locator
locator
_locator
locator
