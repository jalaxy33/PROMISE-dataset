package
org
apache
xalan
xsltc
runtime
import
java
util
Locale
import
java
util
ResourceBundle
import
java
text
NumberFormat
import
java
text
MessageFormat
import
java
text
FieldPosition
import
java
text
DecimalFormat
import
java
text
DecimalFormatSymbols
import
org
xml
sax
AttributeList
import
org
apache
xalan
xsltc
import
org
apache
xalan
xsltc
DOM
import
org
apache
xalan
xsltc
NodeIterator
import
org
apache
xalan
xsltc
dom
Axis
import
org
apache
xalan
xsltc
dom
DOMAdapter
import
org
apache
xalan
xsltc
dom
MultiDOM
import
org
apache
xalan
xsltc
dom
AbsoluteIterator
import
org
apache
xalan
xsltc
dom
SingletonIterator
import
org
apache
xalan
xsltc
dom
DOMImpl
import
org
apache
xalan
xsltc
dom
DOMBuilder
import
org
apache
xalan
xsltc
dom
StepIterator
import
org
w3c
dom
NodeList
import
org
w3c
dom
DOMException
import
org
w3c
dom
Document
import
javax
xml
parsers
DocumentBuilderFactory
import
javax
xml
parsers
DocumentBuilder
import
org
apache
xalan
xsltc
trax
DOM2SAX
public
final
class
BasisLibrary
implements
Operators
private
final
static
String
EMPTYSTRING
public
static
int
countF
NodeIterator
iterator
return
iterator
getLast
public
static
double
sumF
NodeIterator
iterator
DOM
dom
try
double
result
int
node
while
node
iterator
next
NodeIterator
END
result
Double
parseDouble
dom
getNodeValue
node
return
result
catch
NumberFormatException
e
return
Double
NaN
public
static
String
stringF
int
node
DOM
dom
return
dom
getNodeValue
node
public
static
String
stringF
Object
obj
DOM
dom
if
obj
instanceof
NodeIterator
return
dom
getNodeValue
NodeIterator
obj
reset
next
else
if
obj
instanceof
Node
return
dom
getNodeValue
Node
obj
node
else
if
obj
instanceof
DOM
return
DOM
obj
getStringValue
else
return
obj
toString
public
static
String
stringF
Object
obj
int
node
DOM
dom
if
obj
instanceof
NodeIterator
return
dom
getNodeValue
NodeIterator
obj
reset
next
else
if
obj
instanceof
Node
return
dom
getNodeValue
Node
obj
node
else
if
obj
instanceof
DOM
return
DOM
obj
getStringValue
else
if
obj
instanceof
Double
Double
d
Double
obj
final
String
result
d
toString
final
int
length
result
length
if
result
charAt
length
result
charAt
length
return
result
substring
length
else
return
result
else
if
obj
return
obj
toString
else
return
stringF
node
dom
public
static
double
numberF
int
node
DOM
dom
return
stringToReal
dom
getNodeValue
node
public
static
double
numberF
Object
obj
DOM
dom
if
obj
instanceof
Double
return
Double
obj
doubleValue
else
if
obj
instanceof
Integer
return
Integer
obj
doubleValue
else
if
obj
instanceof
Boolean
return
Boolean
obj
booleanValue
else
if
obj
instanceof
String
return
stringToReal
String
obj
else
if
obj
instanceof
NodeIterator
NodeIterator
iter
NodeIterator
obj
return
stringToReal
dom
getNodeValue
iter
reset
next
else
if
obj
instanceof
Node
return
stringToReal
dom
getNodeValue
Node
obj
node
else
if
obj
instanceof
DOM
return
stringToReal
DOM
obj
getStringValue
else
final
String
className
obj
getClass
getName
runTimeError
INVALID_ARGUMENT_ERR
className
return
public
static
boolean
booleanF
Object
obj
if
obj
instanceof
Double
final
double
temp
Double
obj
doubleValue
return
temp
Double
isNaN
temp
else
if
obj
instanceof
Integer
return
Integer
obj
doubleValue
else
if
obj
instanceof
Boolean
return
Boolean
obj
booleanValue
else
if
obj
instanceof
String
return
String
obj
equals
EMPTYSTRING
else
if
obj
instanceof
NodeIterator
NodeIterator
iter
NodeIterator
obj
return
iter
reset
next
NodeIterator
END
else
if
obj
instanceof
Node
return
else
if
obj
instanceof
DOM
String
temp
DOM
obj
getStringValue
return
temp
equals
EMPTYSTRING
else
final
String
className
obj
getClass
getName
runTimeError
INVALID_ARGUMENT_ERR
className
return
public
static
String
substringF
String
value
double
start
try
final
int
strlen
value
length
int
istart
int
Math
round
start
if
Double
isNaN
start
return
EMPTYSTRING
if
istart
strlen
return
EMPTYSTRING
if
istart
istart
return
value
substring
istart
catch
IndexOutOfBoundsException
e
runTimeError
RUN_TIME_INTERNAL_ERR
return
public
static
String
substringF
String
value
double
start
double
length
try
final
int
strlen
value
length
int
istart
int
Math
round
start
int
isum
istart
int
Math
round
length
if
Double
isInfinite
length
isum
Integer
MAX_VALUE
if
Double
isNaN
start
Double
isNaN
length
return
EMPTYSTRING
if
Double
isInfinite
start
return
EMPTYSTRING
if
istart
strlen
return
EMPTYSTRING
if
isum
return
EMPTYSTRING
if
istart
istart
if
isum
strlen
return
value
substring
istart
else
return
value
substring
istart
isum
catch
IndexOutOfBoundsException
e
runTimeError
RUN_TIME_INTERNAL_ERR
return
public
static
String
substring_afterF
String
value
String
substring
final
int
index
value
indexOf
substring
if
index
return
value
substring
index
substring
length
else
return
EMPTYSTRING
public
static
String
substring_beforeF
String
value
String
substring
final
int
index
value
indexOf
substring
if
index
return
value
substring
index
else
return
EMPTYSTRING
public
static
String
translateF
String
value
String
from
String
to
final
int
tol
to
length
final
int
froml
from
length
final
int
valuel
value
length
final
StringBuffer
result
new
StringBuffer
for
int
j
i
i
valuel
i
final
char
ch
value
charAt
i
for
j
j
froml
j
if
ch
from
charAt
j
if
j
tol
result
append
to
charAt
j
break
if
j
froml
result
append
ch
return
result
toString
public
static
String
normalize_spaceF
int
node
DOM
dom
return
normalize_spaceF
dom
getNodeValue
node
public
static
String
normalize_spaceF
String
value
int
i
n
value
length
StringBuffer
result
new
StringBuffer
while
i
n
isWhiteSpace
value
charAt
i
i
while
while
i
n
isWhiteSpace
value
charAt
i
result
append
value
charAt
i
if
i
n
break
while
i
n
isWhiteSpace
value
charAt
i
i
if
i
n
result
append
return
result
toString
public
static
String
generate_idF
int
node
if
node
return
node
else
return
EMPTYSTRING
public
static
String
getLocalName
String
value
int
idx
value
lastIndexOf
if
idx
value
value
substring
idx
idx
value
lastIndexOf
if
idx
value
value
substring
idx
return
value
public
static
void
unresolved_externalF
String
name
runTimeError
EXTERNAL_FUNC_ERR
name
public
static
String
namespace_uriF
NodeIterator
iter
DOM
dom
return
namespace_uriF
iter
next
dom
public
static
String
system_propertyF
String
name
if
name
equals
return
if
name
equals
return
if
name
equals
return
runTimeError
INVALID_ARGUMENT_ERR
name
return
EMPTYSTRING
public
static
String
namespace_uriF
int
node
DOM
dom
final
String
value
dom
getNodeName
node
final
int
colon
value
lastIndexOf
if
colon
return
value
substring
colon
else
return
EMPTYSTRING
public
static
NodeIterator
nodesetF
Object
obj
if
obj
instanceof
DOM
final
DOMAdapter
adapter
DOMAdapter
obj
return
new
SingletonIterator
DOM
ROOTNODE
adapter
getMultiDOMMask
else
if
obj
instanceof
NodeIterator
return
NodeIterator
obj
else
final
String
className
obj
getClass
getName
runTimeError
DATA_CONVERSION_ERR
className
return
private
static
boolean
isWhiteSpace
char
ch
return
ch
ch
ch
ch
private
static
boolean
compareStrings
String
lstring
String
rstring
int
op
DOM
dom
switch
op
case
EQ
return
lstring
equals
rstring
case
NE
return
lstring
equals
rstring
case
GT
return
numberF
lstring
dom
numberF
rstring
dom
case
LT
return
numberF
lstring
dom
numberF
rstring
dom
case
GE
return
numberF
lstring
dom
numberF
rstring
dom
case
LE
return
numberF
lstring
dom
numberF
rstring
dom
default
runTimeError
RUN_TIME_INTERNAL_ERR
return
public
static
boolean
compare
NodeIterator
left
NodeIterator
right
int
op
int
node
DOM
dom
int
lnode
left
reset
while
lnode
left
next
NodeIterator
END
final
String
lvalue
dom
getNodeValue
lnode
int
rnode
right
reset
while
rnode
right
next
NodeIterator
END
if
compareStrings
lvalue
dom
getNodeValue
rnode
op
dom
return
return
public
static
boolean
compare
int
node
NodeIterator
nodeSet
int
op
DOM
dom
final
String
lvalue
dom
getNodeValue
node
int
rnode
while
rnode
nodeSet
next
NodeIterator
END
if
compareStrings
lvalue
dom
getNodeValue
rnode
op
dom
return
return
public
static
boolean
compare
int
node
NodeIterator
iterator
int
op
int
dummy
DOM
dom
int
rnode
String
value
switch
op
case
EQ
value
dom
getNodeValue
node
while
rnode
iterator
next
NodeIterator
END
if
value
equals
dom
getNodeValue
rnode
return
break
case
NE
value
dom
getNodeValue
node
while
rnode
iterator
next
NodeIterator
END
if
value
equals
dom
getNodeValue
rnode
return
break
case
LT
while
rnode
iterator
next
NodeIterator
END
if
rnode
node
return
break
case
GT
while
rnode
iterator
next
NodeIterator
END
if
rnode
node
return
break
return
public
static
boolean
compare
NodeIterator
left
final
double
rnumber
final
int
op
final
int
node
DOM
dom
return
compare
left
rnumber
op
dom
public
static
boolean
compare
NodeIterator
left
final
double
rnumber
final
int
op
DOM
dom
int
node
switch
op
case
EQ
while
node
left
next
NodeIterator
END
if
numberF
dom
getNodeValue
node
dom
rnumber
return
break
case
NE
while
node
left
next
NodeIterator
END
if
numberF
dom
getNodeValue
node
dom
rnumber
return
break
case
GT
while
node
left
next
NodeIterator
END
if
numberF
dom
getNodeValue
node
dom
rnumber
return
break
case
LT
while
node
left
next
NodeIterator
END
if
numberF
dom
getNodeValue
node
dom
rnumber
return
break
case
GE
while
node
left
next
NodeIterator
END
if
numberF
dom
getNodeValue
node
dom
rnumber
return
break
case
LE
while
node
left
next
NodeIterator
END
if
numberF
dom
getNodeValue
node
dom
rnumber
return
break
default
runTimeError
RUN_TIME_INTERNAL_ERR
return
public
static
boolean
compare
NodeIterator
left
final
String
rstring
int
op
DOM
dom
int
node
while
node
left
next
NodeIterator
END
if
compareStrings
dom
getNodeValue
node
rstring
op
dom
return
return
public
static
boolean
compare
NodeIterator
left
final
String
rstring
int
op
int
node
DOM
dom
if
compareStrings
dom
getNodeValue
node
rstring
op
dom
return
else
return
public
static
boolean
compare
Object
left
Object
right
int
op
int
node
DOM
dom
boolean
result
boolean
hasSimpleArgs
hasSimpleType
left
hasSimpleType
right
if
op
EQ
op
NE
if
left
instanceof
Node
right
instanceof
Node
if
left
instanceof
Boolean
right
new
Boolean
booleanF
right
hasSimpleArgs
if
right
instanceof
Boolean
left
new
Boolean
booleanF
left
hasSimpleArgs
if
hasSimpleArgs
switch
op
case
GT
return
numberF
left
dom
numberF
right
dom
case
LT
return
numberF
left
dom
numberF
right
dom
case
GE
return
numberF
left
dom
numberF
right
dom
case
LE
return
numberF
left
dom
numberF
right
dom
default
runTimeError
RUN_TIME_INTERNAL_ERR
if
hasSimpleArgs
if
left
instanceof
Boolean
right
instanceof
Boolean
result
booleanF
left
booleanF
right
else
if
left
instanceof
Double
right
instanceof
Double
left
instanceof
Integer
right
instanceof
Integer
result
numberF
left
dom
numberF
right
dom
else
result
stringF
left
dom
equals
stringF
right
dom
if
op
Operators
NE
result
result
else
if
left
instanceof
Node
left
new
SingletonIterator
Node
left
node
if
right
instanceof
Node
right
new
SingletonIterator
Node
right
node
if
hasSimpleType
left
left
instanceof
DOM
right
instanceof
NodeIterator
final
Object
temp
right
right
left
left
temp
if
left
instanceof
DOM
if
right
instanceof
Boolean
result
Boolean
right
booleanValue
return
result
op
Operators
EQ
final
String
sleft
DOM
left
getStringValue
if
right
instanceof
Number
result
Number
right
doubleValue
stringToReal
sleft
else
if
right
instanceof
String
result
sleft
equals
String
right
else
if
right
instanceof
DOM
result
sleft
equals
DOM
right
getStringValue
if
op
Operators
NE
result
result
return
result
NodeIterator
iter
NodeIterator
left
reset
if
right
instanceof
NodeIterator
result
compare
iter
NodeIterator
right
op
node
dom
else
if
right
instanceof
String
result
compare
iter
String
right
op
dom
else
if
right
instanceof
Number
final
double
temp
Number
right
doubleValue
result
compare
iter
temp
op
dom
else
if
right
instanceof
Boolean
boolean
temp
Boolean
right
booleanValue
result
iter
reset
next
NodeIterator
END
temp
else
if
right
instanceof
DOM
result
compare
iter
DOM
right
getStringValue
op
dom
else
if
right
return
else
final
String
className
right
getClass
getName
runTimeError
INVALID_ARGUMENT_ERR
className
return
result
public
static
boolean
testLanguage
String
testLang
DOM
dom
int
node
String
nodeLang
dom
getLanguage
node
if
nodeLang
return
else
nodeLang
nodeLang
toLowerCase
testLang
testLang
toLowerCase
if
testLang
length
return
nodeLang
startsWith
testLang
else
return
nodeLang
equals
testLang
private
static
boolean
hasSimpleType
Object
obj
return
obj
instanceof
Boolean
obj
instanceof
Double
obj
instanceof
Integer
obj
instanceof
String
obj
instanceof
Node
obj
instanceof
DOM
public
static
double
stringToReal
String
s
try
return
Double
valueOf
s
doubleValue
catch
NumberFormatException
e
return
Double
NaN
public
static
int
stringToInt
String
s
try
return
Integer
parseInt
s
catch
NumberFormatException
e
return
private
static
double
lowerBounds
private
static
double
upperBounds
private
static
DecimalFormat
defaultFormatter
private
static
String
defaultPattern
static
NumberFormat
f
NumberFormat
getInstance
Locale
getDefault
f
setMaximumFractionDigits
Integer
MAX_VALUE
defaultFormatter
f
instanceof
DecimalFormat
DecimalFormat
f
new
DecimalFormat
defaultFormatter
setGroupingUsed
public
static
String
realToString
double
d
final
double
m
Math
abs
d
if
m
lowerBounds
m
upperBounds
final
String
result
Double
toString
d
final
int
length
result
length
if
result
charAt
length
result
charAt
length
return
result
substring
length
else
return
result
else
if
Double
isNaN
d
Double
isInfinite
d
return
Double
toString
d
return
formatNumber
d
defaultPattern
defaultFormatter
public
static
int
realToInt
double
d
return
int
d
private
static
FieldPosition
_fieldPosition
new
FieldPosition
public
static
String
formatNumber
double
number
String
pattern
DecimalFormat
formatter
try
StringBuffer
result
new
StringBuffer
if
pattern
defaultPattern
formatter
applyLocalizedPattern
pattern
String
localizedPattern
formatter
toPattern
int
index
localizedPattern
indexOf
if
index
localizedPattern
charAt
index
StringBuffer
newpattern
new
StringBuffer
newpattern
append
localizedPattern
substring
index
newpattern
append
newpattern
append
localizedPattern
substring
index
formatter
applyLocalizedPattern
newpattern
toString
else
if
index
StringBuffer
newpattern
new
StringBuffer
newpattern
append
newpattern
append
localizedPattern
formatter
applyLocalizedPattern
newpattern
toString
formatter
format
number
result
_fieldPosition
return
result
toString
catch
IllegalArgumentException
e
runTimeError
FORMAT_NUMBER_ERR
Double
toString
number
pattern
return
EMPTYSTRING
public
static
NodeIterator
referenceToNodeSet
Object
obj
if
obj
instanceof
Node
return
new
SingletonIterator
Node
obj
node
else
if
obj
instanceof
NodeIterator
return
NodeIterator
obj
cloneIterator
else
final
String
className
obj
getClass
getName
runTimeError
DATA_CONVERSION_ERR
className
return
public
static
NodeIterator
nodeList2Iterator
org
w3c
dom
NodeList
nodeList
Translet
translet
DOM
dom
int
size
nodeList
getLength
DocumentBuilderFactory
dfac
DocumentBuilderFactory
newInstance
DocumentBuilder
docbldr
try
docbldr
dfac
newDocumentBuilder
catch
javax
xml
parsers
ParserConfigurationException
e
runTimeError
RUN_TIME_INTERNAL_ERR
e
getMessage
return
Document
doc
docbldr
newDocument
org
w3c
dom
Node
topElementNode
doc
appendChild
doc
createElementNS
for
int
i
i
size
i
org
w3c
dom
Node
curr
nodeList
item
i
int
nodeType
curr
getNodeType
if
nodeType
org
w3c
dom
Node
DOCUMENT_NODE
continue
String
value
try
value
curr
getNodeValue
catch
DOMException
ex
runTimeError
RUN_TIME_INTERNAL_ERR
ex
getMessage
return
String
namespaceURI
curr
getNamespaceURI
String
nodeName
curr
getNodeName
org
w3c
dom
Node
newNode
switch
nodeType
case
org
w3c
dom
Node
ATTRIBUTE_NODE
newNode
doc
createAttributeNS
namespaceURI
nodeName
break
case
org
w3c
dom
Node
CDATA_SECTION_NODE
newNode
doc
createCDATASection
value
break
case
org
w3c
dom
Node
COMMENT_NODE
newNode
doc
createComment
value
break
case
org
w3c
dom
Node
DOCUMENT_FRAGMENT_NODE
newNode
doc
createDocumentFragment
break
case
org
w3c
dom
Node
DOCUMENT_TYPE_NODE
break
case
org
w3c
dom
Node
ELEMENT_NODE
newNode
doc
createElementNS
namespaceURI
nodeName
break
case
org
w3c
dom
Node
ENTITY_NODE
break
case
org
w3c
dom
Node
ENTITY_REFERENCE_NODE
newNode
doc
createEntityReference
nodeName
break
case
org
w3c
dom
Node
NOTATION_NODE
break
case
org
w3c
dom
Node
PROCESSING_INSTRUCTION_NODE
newNode
doc
createProcessingInstruction
nodeName
value
break
case
org
w3c
dom
Node
TEXT_NODE
newNode
doc
createTextNode
value
break
try
topElementNode
appendChild
newNode
catch
DOMException
e
runTimeError
RUN_TIME_INTERNAL_ERR
e
getMessage
return
DOMImpl
idom
new
DOMImpl
final
DOM2SAX
dom2sax
new
DOM2SAX
doc
final
DOMBuilder
domBuilder
idom
getBuilder
dom2sax
setContentHandler
domBuilder
try
dom2sax
parse
catch
java
io
IOException
e
runTimeError
RUN_TIME_INTERNAL_ERR
e
getMessage
return
catch
org
xml
sax
SAXException
e
runTimeError
RUN_TIME_INTERNAL_ERR
e
getMessage
return
if
dom
instanceof
MultiDOM
final
MultiDOM
multiDOM
MultiDOM
dom
DOMAdapter
domAdapter
new
DOMAdapter
idom
translet
getNamesArray
translet
getNamespaceArray
multiDOM
addDOMAdapter
domAdapter
NodeIterator
iter1
multiDOM
getAxisIterator
Axis
CHILD
NodeIterator
iter2
multiDOM
getAxisIterator
Axis
CHILD
NodeIterator
iter
new
AbsoluteIterator
new
StepIterator
iter1
iter2
iter
setStartNode
DOM
ROOTNODE
domAdapter
getMultiDOMMask
return
iter
else
runTimeError
RUN_TIME_INTERNAL_ERR
return
public
static
DOM
referenceToResultTree
Object
obj
try
return
DOM
obj
catch
IllegalArgumentException
e
final
String
className
obj
getClass
getName
runTimeError
DATA_CONVERSION_ERR
className
return
public
static
NodeIterator
getSingleNode
NodeIterator
iterator
int
node
iterator
next
return
new
SingletonIterator
node
private
static
char
_characterArray
new
char
public
static
void
copy
Object
obj
TransletOutputHandler
handler
int
node
DOM
dom
try
if
obj
instanceof
NodeIterator
NodeIterator
iter
NodeIterator
obj
dom
copy
iter
reset
handler
else
if
obj
instanceof
Node
dom
copy
Node
obj
node
handler
else
if
obj
instanceof
DOM
DOM
obj
copy
handler
else
String
string
obj
toString
final
int
length
string
length
if
length
_characterArray
length
_characterArray
new
char
length
string
getChars
length
_characterArray
handler
characters
_characterArray
length
catch
TransletException
e
runTimeError
RUN_TIME_COPY_ERR
public
static
String
getPrefix
String
qname
final
int
index
qname
indexOf
return
index
qname
substring
index
private
static
int
prefixIndex
public
static
String
generatePrefix
return
prefixIndex
public
static
String
makeQName
String
localName
String
prefix
return
new
StringBuffer
prefix
append
append
localName
toString
public
static
final
int
RUN_TIME_INTERNAL_ERR
public
static
final
int
RUN_TIME_COPY_ERR
public
static
final
int
DATA_CONVERSION_ERR
public
static
final
int
EXTERNAL_FUNC_ERR
public
static
final
int
EQUALITY_EXPR_ERR
public
static
final
int
INVALID_ARGUMENT_ERR
public
static
final
int
FORMAT_NUMBER_ERR
public
static
final
int
ITERATOR_CLONE_ERR
public
static
final
int
AXIS_SUPPORT_ERR
public
static
final
int
TYPED_AXIS_SUPPORT_ERR
public
static
final
int
STRAY_ATTRIBUTE_ERR
public
static
final
int
STRAY_NAMESPACE_ERR
public
static
final
int
NAMESPACE_PREFIX_ERR
public
static
final
int
DOM_ADAPTER_INIT_ERR
private
static
String
_errorMessages
public
final
static
String
ERROR_MESSAGES_KEY
static
String
resource
ResourceBundle
bundle
ResourceBundle
getBundle
resource
_errorMessages
bundle
getStringArray
ERROR_MESSAGES_KEY
public
static
void
runTimeError
int
code
throw
new
RuntimeException
_errorMessages
code
public
static
void
runTimeError
int
code
Object
args
final
String
message
MessageFormat
format
_errorMessages
code
args
throw
new
RuntimeException
message
public
static
void
runTimeError
int
code
Object
arg0
runTimeError
code
new
Object
arg0
public
static
void
runTimeError
int
code
Object
arg0
Object
arg1
runTimeError
code
new
Object
arg0
arg1
public
static
void
consoleOutput
String
msg
System
out
println
msg
public
static
String
replace
String
base
char
ch
String
str
return
base
indexOf
ch
base
replace
base
String
valueOf
ch
new
String
str
public
static
String
replace
String
base
String
delim
String
str
final
int
len
base
length
final
StringBuffer
result
new
StringBuffer
for
int
i
i
len
i
final
char
ch
base
charAt
i
final
int
k
delim
indexOf
ch
if
k
result
append
str
k
else
result
append
ch
return
result
toString
