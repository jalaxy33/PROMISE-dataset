package
org
apache
xml
utils
import
org
w3c
dom
import
org
xml
sax
import
org
xml
sax
ext
LexicalHandler
import
org
xml
sax
helpers
LocatorImpl
import
org
apache
xpath
DOM2Helper
import
org
apache
xpath
DOMHelper
import
org
apache
xml
utils
NodeConsumer
public
class
TreeWalker
private
ContentHandler
m_contentHandler
protected
DOMHelper
m_dh
private
LocatorImpl
m_locator
new
LocatorImpl
public
ContentHandler
getContentHandler
return
m_contentHandler
public
void
setContentHandler
ContentHandler
ch
m_contentHandler
ch
public
TreeWalker
ContentHandler
contentHandler
DOMHelper
dh
String
systemId
this
m_contentHandler
contentHandler
m_contentHandler
setDocumentLocator
m_locator
if
systemId
m_locator
setSystemId
systemId
else
try
m_locator
setSystemId
System
getProperty
catch
SecurityException
se
m_locator
setSystemId
m_dh
dh
public
TreeWalker
ContentHandler
contentHandler
DOMHelper
dh
this
m_contentHandler
contentHandler
m_contentHandler
setDocumentLocator
m_locator
try
m_locator
setSystemId
System
getProperty
catch
SecurityException
se
m_locator
setSystemId
m_dh
dh
public
TreeWalker
ContentHandler
contentHandler
this
m_contentHandler
contentHandler
if
m_contentHandler
m_contentHandler
setDocumentLocator
m_locator
try
m_locator
setSystemId
System
getProperty
catch
SecurityException
se
m_locator
setSystemId
m_dh
new
org
apache
xpath
DOM2Helper
public
void
traverse
Node
pos
throws
org
xml
sax
SAXException
this
m_contentHandler
startDocument
Node
top
pos
while
pos
startNode
pos
Node
nextNode
pos
getFirstChild
while
nextNode
endNode
pos
if
top
equals
pos
break
nextNode
pos
getNextSibling
if
nextNode
pos
pos
getParentNode
if
pos
top
equals
pos
if
pos
endNode
pos
nextNode
break
pos
nextNode
this
m_contentHandler
endDocument
public
void
traverse
Node
pos
Node
top
throws
org
xml
sax
SAXException
this
m_contentHandler
startDocument
while
pos
startNode
pos
Node
nextNode
pos
getFirstChild
while
nextNode
endNode
pos
if
top
top
equals
pos
break
nextNode
pos
getNextSibling
if
nextNode
pos
pos
getParentNode
if
pos
top
top
equals
pos
nextNode
break
pos
nextNode
this
m_contentHandler
endDocument
boolean
nextIsRaw
private
final
void
dispatachChars
Node
node
throws
org
xml
sax
SAXException
if
m_contentHandler
instanceof
org
apache
xml
dtm
ref
dom2dtm
DOM2DTM
CharacterNodeHandler
org
apache
xml
dtm
ref
dom2dtm
DOM2DTM
CharacterNodeHandler
m_contentHandler
characters
node
else
String
data
Text
node
getData
this
m_contentHandler
characters
data
toCharArray
data
length
protected
void
startNode
Node
node
throws
org
xml
sax
SAXException
if
m_contentHandler
instanceof
NodeConsumer
NodeConsumer
m_contentHandler
setOriginatingNode
node
if
node
instanceof
Locator
Locator
loc
Locator
node
m_locator
setColumnNumber
loc
getColumnNumber
m_locator
setLineNumber
loc
getLineNumber
m_locator
setPublicId
loc
getPublicId
m_locator
setSystemId
loc
getSystemId
else
m_locator
setColumnNumber
m_locator
setLineNumber
switch
node
getNodeType
case
Node
COMMENT_NODE
String
data
Comment
node
getData
if
m_contentHandler
instanceof
LexicalHandler
LexicalHandler
lh
LexicalHandler
this
m_contentHandler
lh
comment
data
toCharArray
data
length
break
case
Node
DOCUMENT_FRAGMENT_NODE
break
case
Node
DOCUMENT_NODE
break
case
Node
ELEMENT_NODE
NamedNodeMap
atts
Element
node
getAttributes
int
nAttrs
atts
getLength
for
int
i
i
nAttrs
i
Node
attr
atts
item
i
String
attrName
attr
getNodeName
if
attrName
equals
attrName
startsWith
int
index
String
prefix
index
attrName
indexOf
attrName
substring
index
this
m_contentHandler
startPrefixMapping
prefix
attr
getNodeValue
String
ns
m_dh
getNamespaceOfNode
node
if
ns
ns
this
m_contentHandler
startElement
ns
m_dh
getLocalNameOfNode
node
node
getNodeName
new
AttList
atts
m_dh
break
case
Node
PROCESSING_INSTRUCTION_NODE
ProcessingInstruction
pi
ProcessingInstruction
node
String
name
pi
getNodeName
if
name
equals
nextIsRaw
else
this
m_contentHandler
processingInstruction
pi
getNodeName
pi
getData
break
case
Node
CDATA_SECTION_NODE
boolean
isLexH
m_contentHandler
instanceof
LexicalHandler
LexicalHandler
lh
isLexH
LexicalHandler
this
m_contentHandler
if
isLexH
lh
startCDATA
dispatachChars
node
if
isLexH
lh
endCDATA
break
case
Node
TEXT_NODE
if
nextIsRaw
nextIsRaw
m_contentHandler
processingInstruction
javax
xml
transform
Result
PI_DISABLE_OUTPUT_ESCAPING
dispatachChars
node
m_contentHandler
processingInstruction
javax
xml
transform
Result
PI_ENABLE_OUTPUT_ESCAPING
else
dispatachChars
node
break
case
Node
ENTITY_REFERENCE_NODE
EntityReference
eref
EntityReference
node
if
m_contentHandler
instanceof
LexicalHandler
LexicalHandler
this
m_contentHandler
startEntity
eref
getNodeName
else
break
default
protected
void
endNode
Node
node
throws
org
xml
sax
SAXException
switch
node
getNodeType
case
Node
DOCUMENT_NODE
break
case
Node
ELEMENT_NODE
String
ns
m_dh
getNamespaceOfNode
node
if
ns
ns
this
m_contentHandler
endElement
ns
m_dh
getLocalNameOfNode
node
node
getNodeName
NamedNodeMap
atts
Element
node
getAttributes
int
nAttrs
atts
getLength
for
int
i
i
nAttrs
i
Node
attr
atts
item
i
String
attrName
attr
getNodeName
if
attrName
equals
attrName
startsWith
int
index
String
prefix
index
attrName
indexOf
attrName
substring
index
this
m_contentHandler
endPrefixMapping
prefix
break
case
Node
CDATA_SECTION_NODE
break
case
Node
ENTITY_REFERENCE_NODE
EntityReference
eref
EntityReference
node
if
m_contentHandler
instanceof
LexicalHandler
LexicalHandler
lh
LexicalHandler
this
m_contentHandler
lh
endEntity
eref
getNodeName
break
default
