package
org
apache
xalan
xsltc
compiler
import
java
util
Vector
import
java
util
Enumeration
import
java
util
Hashtable
import
org
apache
xalan
xsltc
compiler
util
Type
import
org
apache
bcel
generic
import
org
apache
bcel
classfile
JavaClass
import
org
apache
xalan
xsltc
compiler
util
public
final
class
Template
extends
TopLevelElement
private
QName
_name
private
QName
_mode
private
Pattern
_pattern
private
double
_priority
private
int
_position
private
boolean
_disabled
private
boolean
_compiled
private
boolean
_hasParams
private
boolean
_simplified
public
boolean
hasParams
return
_hasParams
public
void
hasParams
boolean
hasParams
_hasParams
hasParams
public
boolean
isSimplified
return
_simplified
public
void
setSimplified
_simplified
public
void
disable
_disabled
public
boolean
disabled
return
_disabled
public
double
getPriority
return
_priority
public
int
getPosition
return
_position
public
boolean
isNamed
return
_name
public
Pattern
getPattern
return
_pattern
public
QName
getName
return
_name
public
void
setName
QName
qname
if
_name
_name
qname
public
QName
getModeName
return
_mode
public
int
compareTo
Object
template
Template
other
Template
template
if
_priority
other
_priority
return
else
if
_priority
other
_priority
return
else
if
_position
other
_position
return
else
if
_position
other
_position
return
else
return
public
void
display
int
indent
Util
println
indent
indent
if
_name
indent
indent
Util
println
_name
else
if
_pattern
indent
indent
Util
println
_pattern
toString
if
_mode
indent
indent
Util
println
_mode
displayContents
indent
IndentIncrement
private
boolean
resolveNamedTemplates
Template
other
Parser
parser
if
other
return
SymbolTable
stable
parser
getSymbolTable
final
int
us
this
getImportPrecedence
final
int
them
other
getImportPrecedence
if
us
them
other
disable
return
else
if
us
them
stable
addTemplate
other
this
disable
return
else
return
private
Stylesheet
_stylesheet
public
Stylesheet
getStylesheet
return
_stylesheet
public
void
parseContents
Parser
parser
final
String
name
getAttribute
final
String
mode
getAttribute
final
String
match
getAttribute
final
String
priority
getAttribute
_stylesheet
super
getStylesheet
if
name
length
_name
parser
getQNameIgnoreDefaultNs
name
if
mode
length
_mode
parser
getQNameIgnoreDefaultNs
mode
if
match
length
_pattern
parser
parsePattern
this
if
priority
length
_priority
Double
parseDouble
priority
else
if
_pattern
_priority
_pattern
getPriority
else
_priority
Double
NaN
_position
parser
getTemplateIndex
if
_name
Template
other
parser
getSymbolTable
addTemplate
this
if
resolveNamedTemplates
other
parser
ErrorMsg
err
new
ErrorMsg
ErrorMsg
TEMPLATE_REDEF_ERR
_name
this
parser
reportError
Constants
ERROR
err
parser
setTemplate
this
parseChildren
parser
parser
setTemplate
public
void
parseSimplified
Stylesheet
stylesheet
Parser
parser
_stylesheet
stylesheet
setParent
stylesheet
_name
_mode
_priority
Double
NaN
_pattern
parser
parsePattern
this
final
Vector
contents
_stylesheet
getContents
final
SyntaxTreeNode
root
SyntaxTreeNode
contents
elementAt
if
root
instanceof
LiteralElement
addElement
root
root
setParent
this
contents
set
this
parser
setTemplate
this
root
parseContents
parser
parser
setTemplate
public
Type
typeCheck
SymbolTable
stable
throws
TypeCheckError
if
_pattern
_pattern
typeCheck
stable
return
typeCheckContents
stable
public
void
translate
ClassGenerator
classGen
MethodGenerator
methodGen
final
ConstantPoolGen
cpg
classGen
getConstantPool
final
InstructionList
il
methodGen
getInstructionList
if
_disabled
return
String
className
classGen
getClassName
if
_compiled
isNamed
String
methodName
Util
escape
_name
toString
il
append
classGen
loadTranslet
il
append
methodGen
loadDOM
il
append
methodGen
loadIterator
il
append
methodGen
loadHandler
il
append
methodGen
loadCurrentNode
il
append
new
INVOKEVIRTUAL
cpg
addMethodref
className
methodName
DOM_INTF_SIG
NODE_ITERATOR_SIG
TRANSLET_OUTPUT_SIG
return
if
_compiled
return
_compiled
final
InstructionHandle
start
il
getEnd
translateContents
classGen
methodGen
final
InstructionHandle
end
il
getEnd
il
setPositions
