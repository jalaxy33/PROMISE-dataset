package
org
apache
xalan
transformer
import
java
util
Vector
import
java
text
NumberFormat
import
java
text
CollationKey
import
org
apache
xml
dtm
DTM
import
org
apache
xml
dtm
DTMIterator
import
org
apache
xpath
axes
ContextNodeList
import
org
apache
xpath
XPathContext
import
org
apache
xpath
NodeSetDTM
import
org
apache
xpath
objects
XObject
import
org
apache
xpath
objects
XNodeSet
import
org
apache
xml
utils
NodeVector
import
javax
xml
transform
TransformerException
public
class
NodeSorter
XPathContext
m_execContext
Vector
m_keys
public
NodeSorter
XPathContext
p
m_execContext
p
public
void
sort
DTMIterator
v
Vector
keys
XPathContext
support
throws
javax
xml
transform
TransformerException
m_keys
keys
int
n
v
getLength
Vector
nodes
new
Vector
for
int
i
i
n
i
NodeCompareElem
elem
new
NodeCompareElem
v
item
i
nodes
addElement
elem
Vector
scratchVector
new
Vector
mergesort
nodes
scratchVector
n
support
for
int
i
i
n
i
v
setItem
NodeCompareElem
nodes
elementAt
i
m_node
i
v
setCurrentPos
int
compare
NodeCompareElem
n1
NodeCompareElem
n2
int
kIndex
XPathContext
support
throws
TransformerException
int
result
NodeSortKey
k
NodeSortKey
m_keys
elementAt
kIndex
if
k
m_treatAsNumbers
double
n1Num
n2Num
if
kIndex
n1Num
Double
n1
m_key1Value
doubleValue
n2Num
Double
n2
m_key1Value
doubleValue
else
if
kIndex
n1Num
Double
n1
m_key2Value
doubleValue
n2Num
Double
n2
m_key2Value
doubleValue
else
XObject
r1
k
m_selectPat
execute
m_execContext
n1
m_node
k
m_namespaceContext
XObject
r2
k
m_selectPat
execute
m_execContext
n2
m_node
k
m_namespaceContext
n1Num
r1
num
n2Num
r2
num
if
n1Num
n2Num
kIndex
m_keys
size
result
compare
n1
n2
kIndex
support
else
double
diff
if
Double
isNaN
n1Num
if
Double
isNaN
n2Num
diff
else
diff
else
if
Double
isNaN
n2Num
diff
else
diff
n1Num
n2Num
result
int
diff
k
m_descending
diff
k
m_descending
else
CollationKey
n1String
n2String
if
kIndex
n1String
CollationKey
n1
m_key1Value
n2String
CollationKey
n2
m_key1Value
else
if
kIndex
n1String
CollationKey
n1
m_key2Value
n2String
CollationKey
n2
m_key2Value
else
XObject
r1
k
m_selectPat
execute
m_execContext
n1
m_node
k
m_namespaceContext
XObject
r2
k
m_selectPat
execute
m_execContext
n2
m_node
k
m_namespaceContext
n1String
k
m_col
getCollationKey
r1
str
n2String
k
m_col
getCollationKey
r2
str
result
n1String
compareTo
n2String
if
k
m_caseOrderUpper
String
tempN1
n1String
getSourceString
toLowerCase
String
tempN2
n2String
getSourceString
toLowerCase
if
tempN1
equals
tempN2
result
result
result
if
k
m_descending
result
result
if
result
if
kIndex
m_keys
size
result
compare
n1
n2
kIndex
support
if
result
DTM
dtm
support
getDTM
n1
m_node
result
dtm
isNodeAfter
n1
m_node
n2
m_node
return
result
void
mergesort
Vector
a
Vector
b
int
l
int
r
XPathContext
support
throws
TransformerException
if
r
l
int
m
r
l
mergesort
a
b
l
m
support
mergesort
a
b
m
r
support
int
i
j
k
for
i
m
i
l
i
if
i
b
size
b
insertElementAt
a
elementAt
i
i
else
b
setElementAt
a
elementAt
i
i
i
l
for
j
m
j
r
j
if
r
m
j
b
size
b
insertElementAt
a
elementAt
j
r
m
j
else
b
setElementAt
a
elementAt
j
r
m
j
j
r
int
compVal
for
k
l
k
r
k
if
i
j
compVal
else
compVal
compare
NodeCompareElem
b
elementAt
i
NodeCompareElem
b
elementAt
j
support
if
compVal
a
setElementAt
b
elementAt
i
k
i
else
if
compVal
a
setElementAt
b
elementAt
j
k
j
class
NodeCompareElem
int
m_node
int
maxkey
Object
m_key1Value
Object
m_key2Value
NodeCompareElem
int
node
throws
javax
xml
transform
TransformerException
boolean
tryNextKey
m_node
node
if
m_keys
isEmpty
NodeSortKey
k1
NodeSortKey
m_keys
elementAt
XObject
r
k1
m_selectPat
execute
m_execContext
node
k1
m_namespaceContext
if
r
tryNextKey
double
d
if
k1
m_treatAsNumbers
d
r
num
m_key1Value
new
Double
d
else
m_key1Value
k1
m_col
getCollationKey
r
str
if
r
getType
XObject
CLASS_NODESET
DTMIterator
ni
XNodeSet
r
iterRaw
int
current
ni
getCurrentNode
if
DTM
NULL
current
current
ni
nextNode
tryNextKey
DTM
NULL
current
if
m_keys
size
NodeSortKey
k2
NodeSortKey
m_keys
elementAt
if
tryNextKey
if
k2
m_treatAsNumbers
m_key2Value
new
Double
else
m_key2Value
k2
m_col
getCollationKey
else
XObject
r2
k2
m_selectPat
execute
m_execContext
node
k2
m_namespaceContext
if
k2
m_treatAsNumbers
d
r2
num
m_key2Value
new
Double
d
else
m_key2Value
k2
m_col
getCollationKey
r2
str
