package
org
apache
xalan
xsltc
dom
import
java
io
Externalizable
import
java
io
ObjectInput
import
java
io
ObjectOutput
import
java
io
IOException
import
java
util
Dictionary
import
java
util
Enumeration
import
java
util
Stack
import
org
w3c
dom
Node
import
org
w3c
dom
NodeList
import
org
w3c
dom
DOMException
import
org
w3c
dom
NamedNodeMap
import
org
w3c
dom
Document
import
org
xml
sax
import
org
xml
sax
ext
import
org
xml
sax
helpers
AttributesImpl
import
org
apache
xalan
xsltc
import
org
apache
xalan
xsltc
util
IntegerArray
import
org
apache
xalan
xsltc
runtime
BasisLibrary
import
org
apache
xalan
xsltc
runtime
SAXAdapter
import
org
apache
xalan
xsltc
runtime
Hashtable
public
final
class
DOMImpl
implements
DOM
Externalizable
private
final
static
String
EMPTYSTRING
private
final
static
NodeIterator
EMPTYITERATOR
new
NodeIterator
public
NodeIterator
reset
return
this
public
NodeIterator
setStartNode
int
node
return
this
public
int
next
return
NULL
public
void
setMark
public
void
gotoMark
public
int
getLast
return
public
int
getPosition
return
public
NodeIterator
cloneIterator
return
this
public
boolean
isReverse
return
public
NodeIterator
resetOnce
return
this
public
NodeIterator
includeSelf
return
this
public
void
setRestartable
boolean
isRestartable
private
int
_treeNodeLimit
private
int
_firstAttributeNode
private
short
_type
private
Hashtable
_types
private
String
_namesArray
private
int
_parent
private
int
_nextSibling
private
int
_offsetOrChild
private
int
_lengthOrAttr
private
char
_text
private
String
_uriArray
private
String
_prefixArray
private
short
_namespace
private
short
_prefix
private
Hashtable
_nsIndex
new
Hashtable
private
BitArray
_whitespace
private
BitArray
_dontEscape
private
String
_documentURI
static
private
int
_documentURIIndex
private
Node
_nodes
private
NodeList
_nodeLists
private
static
NodeList
EmptyNodeList
private
static
NamedNodeMap
EmptyNamedNodeMap
private
final
static
String
XML_LANG_ATTRIBUTE
public
void
setDocumentURI
String
uri
_documentURI
uri
public
String
getDocumentURI
return
_documentURI
_documentURI
_documentURIIndex
public
String
getDocumentURI
int
node
return
getDocumentURI
public
void
setupMapping
String
names
String
namespaces
public
String
lookupNamespace
int
node
String
prefix
throws
TransletException
int
anode
nsnode
final
AncestorIterator
ancestors
new
AncestorIterator
if
isElement
node
ancestors
includeSelf
ancestors
setStartNode
node
while
anode
ancestors
next
NULL
final
NodeIterator
namespaces
new
NamespaceIterator
setStartNode
anode
while
nsnode
namespaces
next
NULL
if
_prefixArray
_prefix
nsnode
equals
prefix
return
getNodeValue
nsnode
throw
new
TransletException
prefix
public
boolean
isElement
final
int
node
final
int
type
_type
node
return
node
_firstAttributeNode
type
NTYPES
public
boolean
isAttribute
final
int
node
final
int
type
_type
node
return
node
_firstAttributeNode
type
NTYPES
public
int
getSize
return
_type
length
public
void
setFilter
StripFilter
filter
public
boolean
lessThan
int
node1
int
node2
if
node1
_firstAttributeNode
node1
_parent
node1
if
node2
_firstAttributeNode
node2
_parent
node2
return
node2
_treeNodeLimit
node1
node2
public
Node
makeNode
int
index
if
_nodes
_nodes
new
Node
_type
length
return
_nodes
index
_nodes
index
_nodes
index
new
NodeImpl
index
public
Node
makeNode
NodeIterator
iter
return
makeNode
iter
next
public
NodeList
makeNodeList
int
index
if
_nodeLists
_nodeLists
new
NodeList
_type
length
return
_nodeLists
index
_nodeLists
index
_nodeLists
index
new
NodeListImpl
index
public
NodeList
makeNodeList
NodeIterator
iter
return
new
NodeListImpl
iter
private
NodeList
getEmptyNodeList
return
EmptyNodeList
EmptyNodeList
EmptyNodeList
new
NodeListImpl
new
int
private
NamedNodeMap
getEmptyNamedNodeMap
return
EmptyNamedNodeMap
EmptyNamedNodeMap
EmptyNamedNodeMap
new
NamedNodeMapImpl
new
int
private
final
class
NotSupportedException
extends
DOMException
public
NotSupportedException
super
NOT_SUPPORTED_ERR
private
final
class
NodeListImpl
implements
NodeList
private
final
int
_nodes
public
NodeListImpl
int
node
_nodes
new
int
_nodes
node
public
NodeListImpl
int
nodes
_nodes
nodes
public
NodeListImpl
NodeIterator
iter
final
IntegerArray
list
new
IntegerArray
int
node
while
node
iter
next
NodeIterator
END
list
add
node
_nodes
list
toIntArray
public
int
getLength
return
_nodes
length
public
Node
item
int
index
return
makeNode
_nodes
index
private
final
class
NamedNodeMapImpl
implements
NamedNodeMap
private
final
int
_nodes
public
NamedNodeMapImpl
int
nodes
_nodes
nodes
public
int
getLength
return
_nodes
length
public
Node
getNamedItem
String
name
for
int
i
i
_nodes
length
i
if
name
equals
getNodeName
_nodes
i
return
makeNode
_nodes
i
return
public
Node
item
int
index
return
makeNode
_nodes
index
public
Node
removeNamedItem
String
name
throw
new
NotSupportedException
public
Node
setNamedItem
Node
node
throw
new
NotSupportedException
public
Node
getNamedItemNS
String
uri
String
local
return
getNamedItem
uri
local
public
Node
setNamedItemNS
Node
node
throw
new
NotSupportedException
public
Node
removeNamedItemNS
String
uri
String
local
throw
new
NotSupportedException
private
final
class
NodeImpl
implements
Node
private
final
int
_index
public
NodeImpl
int
index
_index
index
public
short
getNodeType
switch
_type
_index
case
ROOT
return
Node
DOCUMENT_NODE
case
TEXT
return
Node
TEXT_NODE
case
PROCESSING_INSTRUCTION
return
Node
PROCESSING_INSTRUCTION_NODE
case
COMMENT
return
Node
COMMENT_NODE
default
return
_index
_firstAttributeNode
Node
ELEMENT_NODE
Node
ATTRIBUTE_NODE
public
Node
getParentNode
final
int
parent
getParent
_index
return
parent
NULL
makeNode
parent
public
Node
appendChild
Node
node
throws
DOMException
throw
new
NotSupportedException
public
Node
cloneNode
boolean
deep
throw
new
NotSupportedException
public
NamedNodeMap
getAttributes
if
getNodeType
Node
ELEMENT_NODE
int
attribute
_lengthOrAttr
_index
while
_type
attribute
NAMESPACE
attribute
_nextSibling
attribute
if
attribute
NULL
final
IntegerArray
attributes
new
IntegerArray
do
attributes
add
attribute
while
attribute
_nextSibling
attribute
return
new
NamedNodeMapImpl
attributes
toIntArray
else
return
getEmptyNamedNodeMap
else
return
public
NodeList
getChildNodes
if
hasChildNodes
final
IntegerArray
children
new
IntegerArray
int
child
_offsetOrChild
_index
do
children
add
child
while
child
_nextSibling
child
return
new
NodeListImpl
children
toIntArray
else
return
getEmptyNodeList
public
Node
getFirstChild
return
hasChildNodes
makeNode
_offsetOrChild
_index
public
Node
getLastChild
return
hasChildNodes
makeNode
lastChild
_index
public
Node
getNextSibling
final
int
next
_nextSibling
_index
return
next
makeNode
next
public
String
getNodeName
switch
_type
_index
case
ROOT
return
case
TEXT
return
case
PROCESSING_INSTRUCTION
return
case
COMMENT
return
default
return
DOMImpl
this
getNodeName
_index
public
String
getNodeValue
throws
DOMException
return
DOMImpl
this
getNodeValue
_index
public
Document
getOwnerDocument
return
public
Node
getPreviousSibling
int
node
_parent
_index
if
node
NULL
int
prev
node
_offsetOrChild
node
while
node
_index
node
_nextSibling
prev
node
if
prev
return
makeNode
prev
return
public
boolean
hasChildNodes
switch
getNodeType
case
Node
ELEMENT_NODE
case
Node
DOCUMENT_NODE
return
_offsetOrChild
_index
default
return
public
Node
insertBefore
Node
n1
Node
n2
throws
DOMException
throw
new
NotSupportedException
public
Node
removeChild
Node
n
throws
DOMException
throw
new
NotSupportedException
public
Node
replaceChild
Node
n1
Node
n2
throws
DOMException
throw
new
NotSupportedException
public
void
setNodeValue
String
s
throws
DOMException
throw
new
NotSupportedException
public
void
normalize
throw
new
NotSupportedException
public
boolean
isSupported
String
feature
String
version
return
public
String
getNamespaceURI
return
_uriArray
_namespace
_type
_index
NTYPES
public
String
getPrefix
return
_prefixArray
_prefix
_index
public
void
setPrefix
String
prefix
throw
new
NotSupportedException
public
String
getLocalName
return
DOMImpl
this
getLocalName
_index
public
boolean
hasAttributes
int
attribute
_lengthOrAttr
_index
while
_type
attribute
NAMESPACE
attribute
_nextSibling
attribute
return
attribute
NULL
private
Filter
_elementFilter
private
Filter
getElementFilter
if
_elementFilter
_elementFilter
new
Filter
public
boolean
test
int
node
return
isElement
node
return
_elementFilter
private
final
class
TypeFilter
implements
Filter
private
final
int
_nodeType
public
TypeFilter
int
type
_nodeType
type
public
boolean
test
int
node
return
_type
node
_nodeType
public
Filter
getTypeFilter
int
type
return
new
TypeFilter
type
private
final
class
ChildrenIterator
extends
NodeIteratorBase
private
int
_currentChild
private
int
_last
public
NodeIterator
setStartNode
int
node
if
_isRestartable
if
node
_firstAttributeNode
node
NULL
if
node
_startNode
_last
_startNode
node
if
_includeSelf
_currentChild
else
if
hasChildren
node
_currentChild
_offsetOrChild
node
else
_currentChild
END
return
resetPosition
return
this
public
int
next
int
node
_currentChild
if
_includeSelf
if
node
node
_startNode
if
hasChildren
node
_currentChild
_offsetOrChild
node
else
_currentChild
END
return
node
_currentChild
_nextSibling
node
return
returnNode
node
public
void
setMark
_markedNode
_currentChild
public
void
gotoMark
_currentChild
_markedNode
public
int
getLast
if
_last
_last
int
node
_offsetOrChild
_startNode
while
node
_nextSibling
node
END
_last
return
_last
private
final
class
ParentIterator
extends
NodeIteratorBase
private
int
_node
private
int
_nodeType
public
NodeIterator
setStartNode
int
node
if
_isRestartable
_node
_parent
_startNode
node
return
resetPosition
return
this
public
NodeIterator
setNodeType
final
int
type
_nodeType
type
return
this
public
int
next
int
result
_node
if
_nodeType
_type
_node
_nodeType
result
END
else
result
_node
_node
END
return
returnNode
result
public
void
setMark
_markedNode
_node
public
void
gotoMark
_node
_markedNode
private
final
class
TypedChildrenIterator
extends
NodeIteratorBase
private
int
_nodeType
private
int
_currentChild
public
TypedChildrenIterator
int
nodeType
_nodeType
nodeType
public
NodeIterator
setStartNode
int
node
if
_isRestartable
if
node
_firstAttributeNode
node
NULL
_currentChild
hasChildren
node
_offsetOrChild
_startNode
node
END
return
resetPosition
return
this
public
NodeIterator
cloneIterator
try
final
TypedChildrenIterator
clone
TypedChildrenIterator
super
clone
clone
_nodeType
_nodeType
clone
setRestartable
return
clone
reset
catch
CloneNotSupportedException
e
BasisLibrary
runTimeError
BasisLibrary
ITERATOR_CLONE_ERR
e
toString
return
public
NodeIterator
reset
_currentChild
hasChildren
_startNode
_offsetOrChild
_startNode
END
return
resetPosition
public
int
next
final
short
type
_type
final
int
nodeType
_nodeType
final
int
nextSibling
_nextSibling
for
int
node
_currentChild
node
END
node
nextSibling
node
if
type
node
nodeType
_currentChild
nextSibling
node
return
returnNode
node
return
END
public
void
setMark
_markedNode
_currentChild
public
void
gotoMark
_currentChild
_markedNode
private
final
class
NamespaceChildrenIterator
extends
NodeIteratorBase
private
final
int
_nsType
private
int
_currentChild
public
NamespaceChildrenIterator
final
int
type
_nsType
type
public
NodeIterator
setStartNode
int
node
if
_isRestartable
if
node
_firstAttributeNode
node
NULL
_currentChild
hasChildren
node
_offsetOrChild
_startNode
node
END
return
resetPosition
return
this
public
int
next
for
int
node
_currentChild
node
END
node
_nextSibling
node
if
getNamespaceType
node
_nsType
_currentChild
_nextSibling
node
return
returnNode
node
return
END
public
void
setMark
_markedNode
_currentChild
public
void
gotoMark
_currentChild
_markedNode
private
final
class
NamespaceAttributeIterator
extends
NodeIteratorBase
private
final
int
_nsType
private
int
_attribute
public
NamespaceAttributeIterator
int
nsType
super
_nsType
nsType
public
NodeIterator
setStartNode
int
node
if
_isRestartable
for
node
_lengthOrAttr
_startNode
node
node
NULL
getNamespaceType
node
_nsType
node
_nextSibling
node
_attribute
node
return
resetPosition
return
this
public
int
next
final
int
save
_attribute
int
node
save
do
_attribute
_nextSibling
_attribute
while
_type
_attribute
NAMESPACE
for
node
_lengthOrAttr
_startNode
node
node
NULL
getNamespaceType
node
_nsType
node
_nextSibling
node
_attribute
node
return
returnNode
save
public
void
setMark
_markedNode
_attribute
public
void
gotoMark
_attribute
_markedNode
private
class
FollowingSiblingIterator
extends
NodeIteratorBase
private
int
_node
public
NodeIterator
setStartNode
int
node
if
_isRestartable
if
node
_firstAttributeNode
node
NULL
_node
_startNode
node
return
resetPosition
return
this
public
int
next
return
returnNode
_node
_nextSibling
_node
public
void
setMark
_markedNode
_node
public
void
gotoMark
_node
_markedNode
private
final
class
TypedFollowingSiblingIterator
extends
FollowingSiblingIterator
private
final
int
_nodeType
public
TypedFollowingSiblingIterator
int
type
_nodeType
type
public
int
next
int
node
while
node
super
next
NULL
if
_type
node
_nodeType
return
node
_position
return
END
private
final
class
AttributeIterator
extends
NodeIteratorBase
private
int
_attribute
public
NodeIterator
setStartNode
int
node
if
_isRestartable
if
isElement
node
_attribute
_lengthOrAttr
_startNode
node
while
_type
_attribute
NAMESPACE
_attribute
_nextSibling
_attribute
else
_attribute
NULL
return
resetPosition
return
this
public
int
next
final
int
node
_attribute
_attribute
_nextSibling
_attribute
return
returnNode
node
public
void
setMark
_markedNode
_attribute
public
void
gotoMark
_attribute
_markedNode
private
final
class
TypedAttributeIterator
extends
NodeIteratorBase
private
final
int
_nodeType
private
int
_attribute
public
TypedAttributeIterator
int
nodeType
_nodeType
nodeType
public
NodeIterator
setStartNode
int
node
if
_isRestartable
if
isElement
node
_attribute
END
return
resetPosition
for
node
_lengthOrAttr
_startNode
node
node
NULL
_type
node
_nodeType
node
_nextSibling
node
_attribute
node
return
resetPosition
return
this
public
NodeIterator
reset
int
node
_startNode
for
node
_lengthOrAttr
node
node
NULL
_type
node
_nodeType
node
_nextSibling
node
_attribute
node
return
resetPosition
public
int
next
final
int
node
_attribute
_attribute
NULL
return
returnNode
node
public
void
setMark
_markedNode
_attribute
public
void
gotoMark
_attribute
_markedNode
private
class
NamespaceIterator
extends
NodeIteratorBase
protected
int
_node
protected
int
_ns
public
NodeIterator
setStartNode
int
node
if
_isRestartable
if
isElement
node
_startNode
_node
node
_ns
_lengthOrAttr
_node
while
_ns
DOM
NULL
_type
_ns
NAMESPACE
_ns
_nextSibling
_ns
else
_ns
DOM
NULL
return
resetPosition
return
this
public
int
next
while
_node
NULL
final
int
node
_ns
_ns
_nextSibling
_ns
while
_ns
DOM
NULL
_node
DOM
NULL
_node
_parent
_node
_ns
_lengthOrAttr
_node
while
_ns
DOM
NULL
_type
_ns
NAMESPACE
_ns
_nextSibling
_ns
if
_type
node
NAMESPACE
return
returnNode
node
return
NULL
public
void
setMark
_markedNode
_ns
public
void
gotoMark
_ns
_markedNode
private
final
class
TypedNamespaceIterator
extends
NamespaceIterator
final
int
_uriType
public
TypedNamespaceIterator
int
type
_uriType
type
public
int
next
int
node
while
node
_ns
DOM
NULL
_ns
_nextSibling
_ns
while
_ns
DOM
NULL
_node
DOM
NULL
_node
_parent
_node
_ns
_lengthOrAttr
_node
while
_ns
DOM
NULL
_type
_ns
NAMESPACE
_ns
_nextSibling
_ns
if
_prefix
node
_uriType
return
returnNode
node
return
DOM
NULL
private
class
PrecedingSiblingIterator
extends
NodeIteratorBase
private
int
_node
private
int
_mom
public
boolean
isReverse
return
public
NodeIterator
setStartNode
int
node
if
_isRestartable
if
node
_firstAttributeNode
node
NULL
int
tmp
NULL
_startNode
node
_mom
_parent
node
_node
_offsetOrChild
_mom
while
_node
node
_node
NULL
tmp
_node
_node
_nextSibling
_node
_node
tmp
return
resetPosition
return
this
public
int
next
if
_node
NULL
return
NULL
int
current
_offsetOrChild
_mom
int
last
NULL
while
current
_node
current
NULL
last
current
current
_nextSibling
current
current
_node
_node
last
return
returnNode
current
public
void
setMark
_markedNode
_node
public
void
gotoMark
_node
_markedNode
private
final
class
TypedPrecedingSiblingIterator
extends
PrecedingSiblingIterator
private
final
int
_nodeType
public
TypedPrecedingSiblingIterator
int
type
_nodeType
type
public
int
next
int
node
while
node
super
next
NULL
_type
node
_nodeType
_position
return
node
private
class
PrecedingIterator
extends
NodeIteratorBase
private
int
_node
private
int
_mom
public
boolean
isReverse
return
public
NodeIterator
cloneIterator
try
final
PrecedingIterator
clone
PrecedingIterator
super
clone
clone
setRestartable
return
clone
reset
catch
CloneNotSupportedException
e
BasisLibrary
runTimeError
BasisLibrary
ITERATOR_CLONE_ERR
e
toString
return
public
NodeIterator
setStartNode
int
node
if
_isRestartable
if
node
_firstAttributeNode
node
_parent
node
_node
_startNode
node
_mom
_parent
_startNode
return
resetPosition
return
this
public
int
next
while
_node
ROOTNODE
if
_node
_mom
_mom
_parent
_mom
if
_node
_mom
return
returnNode
_node
return
NULL
public
NodeIterator
reset
_node
_startNode
_mom
_parent
_startNode
return
resetPosition
public
void
setMark
_markedNode
_node
public
void
gotoMark
_node
_markedNode
private
final
class
TypedPrecedingIterator
extends
PrecedingIterator
private
final
int
_nodeType
public
TypedPrecedingIterator
int
type
_nodeType
type
public
int
next
int
node
while
node
super
next
NULL
_type
node
_nodeType
_position
return
node
private
class
FollowingIterator
extends
NodeIteratorBase
protected
int
_node
public
NodeIterator
setStartNode
int
node
int
skip
if
_isRestartable
if
node
_firstAttributeNode
skip
node
_parent
node
int
child
_offsetOrChild
node
if
child
NULL
node
child
_startNode
node
int
current
while
node
lastChild
current
node
NULL
_node
current
skip
return
resetPosition
return
this
public
int
next
final
int
node
_node
return
node
_firstAttributeNode
returnNode
_node
node
NULL
public
void
setMark
_markedNode
_node
public
void
gotoMark
_node
_markedNode
private
final
class
TypedFollowingIterator
extends
FollowingIterator
private
final
int
_nodeType
public
TypedFollowingIterator
int
type
_nodeType
type
public
int
next
int
node
while
node
super
next
NULL
if
_type
node
_nodeType
return
node
_position
return
END
private
class
AncestorIterator
extends
NodeIteratorBase
protected
int
_index
protected
int
_last
public
final
boolean
isReverse
return
public
int
getLast
if
_last
return
_last
int
count
int
node
_startNode
while
node
_parent
node
ROOT
count
_last
count
return
count
public
NodeIterator
cloneIterator
try
final
AncestorIterator
clone
AncestorIterator
super
clone
clone
setRestartable
clone
_startNode
_startNode
return
clone
reset
catch
CloneNotSupportedException
e
BasisLibrary
runTimeError
BasisLibrary
ITERATOR_CLONE_ERR
e
toString
return
public
NodeIterator
setStartNode
int
node
if
_isRestartable
_last
if
_includeSelf
_startNode
node
else
if
node
_firstAttributeNode
_startNode
node
_parent
node
else
_startNode
_parent
node
_index
_startNode
return
resetPosition
return
this
public
NodeIterator
reset
_index
_startNode
return
resetPosition
public
int
next
if
_index
final
int
node
_index
_index
_index
_parent
_index
return
returnNode
node
return
NULL
public
void
setMark
_markedNode
_index
public
void
gotoMark
_index
_markedNode
private
final
class
TypedAncestorIterator
extends
AncestorIterator
private
final
int
_nodeType
public
TypedAncestorIterator
int
type
_nodeType
type
public
int
next
int
node
while
node
super
next
NULL
if
_type
node
_nodeType
return
node
_position
return
NULL
public
int
getLast
if
_last
return
_last
int
count
int
node
_startNode
do
if
_type
node
_nodeType
count
while
node
_parent
node
ROOT
_last
count
return
count
private
class
DescendantIterator
extends
NodeIteratorBase
protected
int
_node
protected
int
_limit
public
NodeIterator
setStartNode
int
node
_startNode
node
if
_isRestartable
_node
_startNode
_includeSelf
node
node
if
hasChildren
node
_limit
node
else
if
node
_nextSibling
node
_limit
_treeNodeLimit
else
_limit
leftmostDescendant
node
return
resetPosition
return
this
public
int
next
while
_node
_limit
if
_type
_node
TEXT
return
returnNode
_node
return
NULL
public
void
setMark
_markedNode
_node
public
void
gotoMark
_node
_markedNode
private
final
class
TypedDescendantIterator
extends
DescendantIterator
private
final
int
_nodeType
public
TypedDescendantIterator
int
nodeType
_nodeType
nodeType
public
int
next
final
int
limit
_limit
final
int
type
_nodeType
int
node
_node
while
node
limit
_type
node
type
node
return
node
limit
returnNode
_node
node
NULL
private
class
NthDescendantIterator
extends
DescendantIterator
final
NodeIterator
_source
final
int
_pos
final
int
_ourtype
public
NthDescendantIterator
NodeIterator
source
int
pos
int
type
_source
source
_ourtype
type
_pos
pos
public
void
setRestartable
boolean
isRestartable
_isRestartable
isRestartable
_source
setRestartable
isRestartable
public
NodeIterator
setStartNode
int
node
_source
setStartNode
node
return
this
public
int
next
int
node
while
node
_source
next
END
int
parent
_parent
node
int
child
_offsetOrChild
parent
int
pos
if
_ourtype
do
if
isElement
child
_type
child
_ourtype
pos
while
pos
_pos
child
_nextSibling
child
else
do
if
isElement
child
pos
while
pos
_pos
child
_nextSibling
child
if
node
child
return
node
return
END
public
NodeIterator
reset
_source
reset
return
this
private
final
class
TypedSingletonIterator
extends
SingletonIterator
private
final
int
_nodeType
public
TypedSingletonIterator
int
nodeType
_nodeType
nodeType
public
int
next
final
int
result
super
next
return
_type
result
_nodeType
result
NULL
private
final
class
StrippingIterator
extends
NodeIteratorBase
private
static
final
int
USE_PREDICATE
private
static
final
int
STRIP_SPACE
private
static
final
int
PRESERVE_SPACE
private
StripFilter
_filter
private
short
_mapping
private
final
NodeIterator
_source
private
boolean
_children
private
int
_action
USE_PREDICATE
private
int
_last
public
StrippingIterator
NodeIterator
source
short
mapping
StripFilter
filter
_filter
filter
_mapping
mapping
_source
source
if
_source
instanceof
ChildrenIterator
_source
instanceof
TypedChildrenIterator
_children
public
void
setRestartable
boolean
isRestartable
_isRestartable
isRestartable
_source
setRestartable
isRestartable
public
NodeIterator
setStartNode
int
node
if
_children
if
_filter
stripSpace
DOM
DOMImpl
this
node
_mapping
_type
node
_action
STRIP_SPACE
else
_action
PRESERVE_SPACE
_source
setStartNode
node
return
this
public
int
next
int
node
while
node
_source
next
END
switch
_action
case
STRIP_SPACE
if
_whitespace
getBit
node
continue
case
PRESERVE_SPACE
return
returnNode
node
case
USE_PREDICATE
default
if
_whitespace
getBit
node
_filter
stripSpace
DOM
DOMImpl
this
node
_mapping
_type
_parent
node
continue
return
returnNode
node
return
END
public
NodeIterator
reset
_source
reset
return
this
public
void
setMark
_source
setMark
public
void
gotoMark
_source
gotoMark
public
int
getLast
if
_last
return
_last
int
count
getPosition
int
node
_source
setMark
while
node
_source
next
END
switch
_action
case
STRIP_SPACE
if
_whitespace
getBit
node
continue
case
PRESERVE_SPACE
count
break
case
USE_PREDICATE
default
if
_whitespace
getBit
node
_filter
stripSpace
DOM
DOMImpl
this
node
_mapping
_type
_parent
node
continue
else
count
_source
gotoMark
_last
count
return
count
public
NodeIterator
strippingIterator
NodeIterator
iterator
short
mapping
StripFilter
filter
return
new
StrippingIterator
iterator
mapping
filter
private
final
class
NodeValueIterator
extends
NodeIteratorBase
private
NodeIterator
_source
private
String
_value
private
boolean
_op
private
final
boolean
_isReverse
private
int
_returnType
RETURN_PARENT
private
int
_pos
public
NodeValueIterator
NodeIterator
source
int
returnType
String
value
boolean
op
_source
source
_returnType
returnType
_value
value
_op
op
_isReverse
source
isReverse
public
boolean
isReverse
return
_isReverse
public
void
setRestartable
boolean
isRestartable
_isRestartable
isRestartable
_source
setRestartable
isRestartable
public
NodeIterator
cloneIterator
try
NodeValueIterator
clone
NodeValueIterator
super
clone
clone
_source
_source
cloneIterator
clone
setRestartable
return
clone
reset
catch
CloneNotSupportedException
e
BasisLibrary
runTimeError
BasisLibrary
ITERATOR_CLONE_ERR
e
toString
return
public
NodeIterator
reset
_source
reset
return
resetPosition
public
int
next
int
node
while
node
_source
next
END
String
val
getNodeValue
node
if
_value
equals
val
_op
if
_returnType
RETURN_CURRENT
return
returnNode
node
else
return
returnNode
_parent
node
return
END
public
NodeIterator
setStartNode
int
node
if
_isRestartable
_source
setStartNode
_startNode
node
return
resetPosition
return
this
public
void
setMark
_source
setMark
_pos
_position
public
void
gotoMark
_source
gotoMark
_position
_pos
public
NodeIterator
getNodeValueIterator
NodeIterator
iterator
int
type
String
value
boolean
op
return
new
NodeValueIterator
iterator
type
value
op
public
NodeIterator
orderNodes
NodeIterator
source
int
node
return
new
DupFilterIterator
source
private
int
leftmostDescendant
int
node
int
current
while
_type
current
node
NTYPES
node
_offsetOrChild
node
NULL
return
current
private
int
lastChild
int
node
if
isElement
node
node
ROOTNODE
int
child
if
child
_offsetOrChild
node
NULL
while
child
_nextSibling
node
child
NULL
return
node
return
public
int
getParent
final
int
node
return
_parent
node
public
int
getElementPosition
int
node
int
match
int
curr
_offsetOrChild
_parent
node
if
isElement
curr
match
while
curr
node
curr
_nextSibling
curr
if
isElement
curr
match
return
match
public
int
getAttributePosition
int
attr
int
match
int
curr
_lengthOrAttr
_parent
attr
while
curr
attr
curr
_nextSibling
curr
match
return
match
public
int
getTypedPosition
int
type
int
node
switch
type
case
ELEMENT
return
getElementPosition
node
case
ATTRIBUTE
return
getAttributePosition
node
case
type
_type
node
int
match
int
curr
_offsetOrChild
_parent
node
if
_type
curr
type
match
while
curr
node
curr
_nextSibling
curr
if
_type
curr
type
match
return
match
public
int
getTypedLast
int
type
int
node
if
type
type
_type
node
int
match
int
curr
_offsetOrChild
_parent
node
if
_type
curr
type
match
while
curr
NULL
curr
_nextSibling
curr
if
_type
curr
type
match
return
match
public
NodeIterator
getIterator
return
new
SingletonIterator
ROOTNODE
public
int
getType
final
int
node
return
node
_type
length
_type
node
public
int
getNamespaceType
final
int
node
final
int
type
_type
node
return
type
NTYPES
_namespace
type
NTYPES
public
short
getTypeArray
return
_type
public
String
getNodeValue
final
int
node
if
node
NULL
node
_treeNodeLimit
return
EMPTYSTRING
switch
_type
node
case
ROOT
return
getNodeValue
_offsetOrChild
node
case
TEXT
case
COMMENT
return
makeStringValue
node
case
PROCESSING_INSTRUCTION
final
String
pistr
makeStringValue
node
final
int
col
pistr
indexOf
return
col
pistr
substring
col
pistr
default
return
node
_firstAttributeNode
getElementValue
node
makeStringValue
node
private
String
getLocalName
int
node
final
int
type
_type
node
NTYPES
final
String
qname
_namesArray
type
final
String
uri
_uriArray
_namespace
type
if
uri
final
int
len
uri
length
if
len
return
qname
substring
len
return
qname
private
Hashtable
setupMapping
String
namesArray
final
int
nNames
namesArray
length
final
Hashtable
types
new
Hashtable
nNames
for
int
i
i
nNames
i
types
put
namesArray
i
new
Integer
i
NTYPES
return
types
public
int
getGeneralizedType
final
String
name
final
Integer
type
Integer
_types
get
name
if
type
final
int
code
name
charAt
ATTRIBUTE
ELEMENT
_types
put
name
new
Integer
code
return
code
else
return
type
intValue
public
short
getMapping
String
names
int
i
final
int
namesLength
names
length
final
int
mappingLength
_namesArray
length
NTYPES
final
short
result
new
short
mappingLength
for
i
i
NTYPES
i
result
i
short
i
for
i
NTYPES
i
mappingLength
i
final
int
type
i
NTYPES
final
String
name
_namesArray
type
final
String
uri
_uriArray
_namespace
type
int
len
if
uri
len
uri
length
if
len
len
result
i
short
name
length
name
charAt
len
ATTRIBUTE
ELEMENT
for
i
i
namesLength
i
result
getGeneralizedType
names
i
short
i
NTYPES
return
result
public
short
getReverseMapping
String
names
int
i
final
short
result
new
short
names
length
NTYPES
for
i
i
NTYPES
i
result
i
short
i
for
i
i
names
length
i
result
i
NTYPES
short
getGeneralizedType
names
i
if
result
i
NTYPES
ELEMENT
result
i
NTYPES
NO_TYPE
return
result
public
short
getNamespaceMapping
String
namespaces
int
i
final
int
nsLength
namespaces
length
final
int
mappingLength
_uriArray
length
final
short
result
new
short
mappingLength
for
i
i
mappingLength
i
result
i
for
i
i
nsLength
i
Integer
type
Integer
_nsIndex
get
namespaces
i
if
type
result
type
intValue
short
i
return
result
public
short
getReverseNamespaceMapping
String
namespaces
int
i
final
int
length
namespaces
length
final
short
result
new
short
length
for
i
i
length
i
Integer
type
Integer
_nsIndex
get
namespaces
i
result
i
type
type
shortValue
return
result
public
void
writeExternal
ObjectOutput
out
throws
IOException
out
writeInt
_treeNodeLimit
out
writeInt
_firstAttributeNode
out
writeObject
_documentURI
out
writeObject
_type
out
writeObject
_namespace
out
writeObject
_prefix
out
writeObject
_parent
out
writeObject
_nextSibling
out
writeObject
_offsetOrChild
out
writeObject
_lengthOrAttr
out
writeObject
_text
out
writeObject
_namesArray
out
writeObject
_uriArray
out
writeObject
_prefixArray
out
writeObject
_whitespace
if
_dontEscape
out
writeObject
_dontEscape
else
out
writeObject
new
BitArray
out
flush
public
void
readExternal
ObjectInput
in
throws
IOException
ClassNotFoundException
_treeNodeLimit
in
readInt
_firstAttributeNode
in
readInt
_documentURI
String
in
readObject
_type
short
in
readObject
_namespace
short
in
readObject
_prefix
short
in
readObject
_parent
int
in
readObject
_nextSibling
int
in
readObject
_offsetOrChild
int
in
readObject
_lengthOrAttr
int
in
readObject
_text
char
in
readObject
_namesArray
String
in
readObject
_uriArray
String
in
readObject
_prefixArray
String
in
readObject
_whitespace
BitArray
in
readObject
_dontEscape
BitArray
in
readObject
if
_dontEscape
size
_dontEscape
_types
setupMapping
_namesArray
public
DOMImpl
this
public
DOMImpl
int
size
_type
new
short
size
_parent
new
int
size
_nextSibling
new
int
size
_offsetOrChild
new
int
size
_lengthOrAttr
new
int
size
_text
new
char
size
_whitespace
new
BitArray
size
_prefix
new
short
size
public
void
print
int
node
int
level
switch
_type
node
case
ROOT
print
_offsetOrChild
node
level
break
case
TEXT
case
COMMENT
case
PROCESSING_INSTRUCTION
System
out
print
makeStringValue
node
break
default
final
String
name
getNodeName
node
System
out
print
name
for
int
a
_lengthOrAttr
node
a
NULL
a
_nextSibling
a
System
out
print
getNodeName
a
makeStringValue
a
System
out
print
for
int
child
_offsetOrChild
node
child
NULL
child
_nextSibling
child
print
child
level
System
out
println
name
break
public
String
getNodeName
final
int
node
final
short
type
_type
node
switch
type
case
DOM
ROOT
case
DOM
TEXT
case
DOM
ELEMENT
case
DOM
ATTRIBUTE
case
DOM
COMMENT
return
EMPTYSTRING
case
DOM
NAMESPACE
final
int
index
_prefix
node
return
index
_prefixArray
length
_prefixArray
index
EMPTYSTRING
case
DOM
PROCESSING_INSTRUCTION
final
String
pistr
makeStringValue
node
final
int
col
pistr
indexOf
return
col
pistr
substring
col
pistr
default
String
name
getLocalName
node
if
node
_firstAttributeNode
name
name
substring
final
int
pi
_prefix
node
if
pi
final
String
prefix
_prefixArray
pi
if
prefix
EMPTYSTRING
name
prefix
name
return
name
public
String
getNamespaceName
final
int
node
if
_type
node
NAMESPACE
return
EMPTYSTRING
else
final
int
type
getNamespaceType
node
final
String
name
_uriArray
type
return
name
EMPTYSTRING
name
private
String
makeStringValue
final
int
node
return
new
String
_text
_offsetOrChild
node
_lengthOrAttr
node
public
int
getAttributeNode
final
int
type
final
int
element
for
int
attr
_lengthOrAttr
element
attr
NULL
attr
_nextSibling
attr
if
_type
attr
type
return
attr
return
NULL
public
String
getAttributeValue
final
int
type
final
int
element
final
int
attr
getAttributeNode
type
element
return
attr
NULL
makeStringValue
attr
EMPTYSTRING
public
boolean
hasAttribute
final
int
type
final
int
node
return
getAttributeNode
type
node
NULL
public
String
getAttributeValue
final
String
name
final
int
element
return
getAttributeValue
getGeneralizedType
name
element
private
boolean
hasChildren
final
int
node
if
node
_firstAttributeNode
final
int
type
_type
node
return
type
NTYPES
type
ROOT
_offsetOrChild
node
return
public
NodeIterator
getChildren
final
int
node
return
hasChildren
node
new
ChildrenIterator
EMPTYITERATOR
public
NodeIterator
getTypedChildren
final
int
type
return
new
TypedChildrenIterator
type
public
NodeIterator
getAxisIterator
final
int
axis
NodeIterator
iterator
switch
axis
case
Axis
SELF
iterator
new
SingletonIterator
break
case
Axis
CHILD
iterator
new
ChildrenIterator
break
case
Axis
PARENT
return
new
ParentIterator
case
Axis
ANCESTOR
return
new
AncestorIterator
case
Axis
ANCESTORORSELF
return
new
AncestorIterator
includeSelf
case
Axis
ATTRIBUTE
return
new
AttributeIterator
case
Axis
DESCENDANT
iterator
new
DescendantIterator
break
case
Axis
DESCENDANTORSELF
iterator
new
DescendantIterator
includeSelf
break
case
Axis
FOLLOWING
iterator
new
FollowingIterator
break
case
Axis
PRECEDING
iterator
new
PrecedingIterator
break
case
Axis
FOLLOWINGSIBLING
iterator
new
FollowingSiblingIterator
break
case
Axis
PRECEDINGSIBLING
iterator
new
PrecedingSiblingIterator
break
case
Axis
NAMESPACE
iterator
new
NamespaceIterator
break
default
BasisLibrary
runTimeError
BasisLibrary
AXIS_SUPPORT_ERR
Axis
names
axis
return
iterator
public
NodeIterator
getTypedAxisIterator
int
axis
int
type
if
axis
Axis
CHILD
type
ELEMENT
return
new
TypedChildrenIterator
type
if
type
NO_TYPE
return
EMPTYITERATOR
if
type
ELEMENT
axis
Axis
NAMESPACE
return
new
FilterIterator
getAxisIterator
axis
getElementFilter
else
switch
axis
case
Axis
SELF
return
new
TypedSingletonIterator
type
case
Axis
PARENT
return
new
ParentIterator
setNodeType
type
case
Axis
ANCESTOR
return
new
TypedAncestorIterator
type
case
Axis
ANCESTORORSELF
return
new
TypedAncestorIterator
type
includeSelf
case
Axis
ATTRIBUTE
return
new
TypedAttributeIterator
type
case
Axis
DESCENDANT
return
new
TypedDescendantIterator
type
case
Axis
DESCENDANTORSELF
return
new
TypedDescendantIterator
type
includeSelf
case
Axis
FOLLOWING
return
new
TypedFollowingIterator
type
case
Axis
PRECEDING
return
new
TypedPrecedingIterator
type
case
Axis
FOLLOWINGSIBLING
return
new
TypedFollowingSiblingIterator
type
case
Axis
PRECEDINGSIBLING
return
new
TypedPrecedingSiblingIterator
type
case
Axis
NAMESPACE
return
type
ELEMENT
NodeIterator
new
NamespaceIterator
NodeIterator
new
TypedNamespaceIterator
type
default
BasisLibrary
runTimeError
BasisLibrary
TYPED_AXIS_SUPPORT_ERR
Axis
names
axis
return
public
NodeIterator
getNamespaceAxisIterator
int
axis
int
ns
if
ns
NO_TYPE
return
EMPTYITERATOR
else
switch
axis
case
Axis
CHILD
return
new
NamespaceChildrenIterator
ns
case
Axis
ATTRIBUTE
return
new
NamespaceAttributeIterator
ns
default
BasisLibrary
runTimeError
BasisLibrary
TYPED_AXIS_SUPPORT_ERR
Axis
names
axis
return
public
NodeIterator
getTypedDescendantIterator
int
type
return
type
ELEMENT
NodeIterator
new
FilterIterator
new
DescendantIterator
getElementFilter
NodeIterator
new
TypedDescendantIterator
type
public
NodeIterator
getNthDescendant
int
type
int
n
boolean
includeself
NodeIterator
source
type
ELEMENT
NodeIterator
new
FilterIterator
new
DescendantIterator
getElementFilter
NodeIterator
new
TypedDescendantIterator
type
if
includeself
NodeIteratorBase
source
includeSelf
return
new
NthDescendantIterator
source
n
type
public
void
characters
final
int
textNode
TransletOutputHandler
handler
throws
TransletException
handler
characters
_text
_offsetOrChild
textNode
_lengthOrAttr
textNode
public
void
copy
NodeIterator
nodes
TransletOutputHandler
handler
throws
TransletException
int
node
while
node
nodes
next
NULL
copy
node
handler
public
void
copy
TransletOutputHandler
handler
throws
TransletException
copy
ROOTNODE
handler
public
void
copy
final
int
node
TransletOutputHandler
handler
throws
TransletException
final
int
type
_type
node
switch
type
case
ROOT
for
int
c
_offsetOrChild
node
c
NULL
c
_nextSibling
c
copy
c
handler
break
case
PROCESSING_INSTRUCTION
copyPI
node
handler
break
case
COMMENT
handler
comment
new
String
_text
_offsetOrChild
node
_lengthOrAttr
node
break
case
TEXT
boolean
last
boolean
escapeBit
if
_dontEscape
escapeBit
_dontEscape
getBit
node
if
escapeBit
last
handler
setEscaping
handler
characters
_text
_offsetOrChild
node
_lengthOrAttr
node
if
_dontEscape
escapeBit
handler
setEscaping
last
break
case
ATTRIBUTE
shallowCopy
node
handler
break
case
NAMESPACE
shallowCopy
node
handler
break
default
if
isElement
node
final
String
name
copyElement
node
type
handler
for
int
a
_lengthOrAttr
node
a
NULL
a
_nextSibling
a
if
_type
a
NAMESPACE
final
String
uri
getNamespaceName
a
if
uri
EMPTYSTRING
final
String
prefix
_prefixArray
_prefix
a
handler
namespace
prefix
uri
handler
attribute
getNodeName
a
makeStringValue
a
else
handler
namespace
_prefixArray
_prefix
a
makeStringValue
a
for
int
c
_offsetOrChild
node
c
NULL
c
_nextSibling
c
copy
c
handler
handler
endElement
name
else
final
String
uri
getNamespaceName
node
if
uri
EMPTYSTRING
final
String
prefix
_prefixArray
_prefix
node
handler
namespace
prefix
uri
handler
attribute
getNodeName
node
makeStringValue
node
break
private
void
copyPI
final
int
node
TransletOutputHandler
handler
throws
TransletException
final
char
text
_text
final
int
start
_offsetOrChild
node
final
int
length
_lengthOrAttr
node
int
i
start
while
text
i
i
final
int
len
i
start
final
String
target
new
String
text
start
len
final
String
value
new
String
text
i
length
len
handler
processingInstruction
target
value
public
String
shallowCopy
final
int
node
TransletOutputHandler
handler
throws
TransletException
final
int
type
_type
node
switch
type
case
ROOT
return
EMPTYSTRING
case
TEXT
handler
characters
_text
_offsetOrChild
node
_lengthOrAttr
node
return
case
PROCESSING_INSTRUCTION
copyPI
node
handler
return
case
COMMENT
final
String
comment
new
String
_text
_offsetOrChild
node
_lengthOrAttr
node
handler
comment
comment
return
case
NAMESPACE
handler
namespace
_prefixArray
_prefix
node
makeStringValue
node
return
default
if
isElement
node
return
copyElement
node
type
handler
else
final
String
uri
getNamespaceName
node
if
uri
EMPTYSTRING
final
String
prefix
_prefixArray
_prefix
node
handler
namespace
prefix
uri
handler
attribute
getNodeName
node
makeStringValue
node
return
private
String
copyElement
int
node
int
type
TransletOutputHandler
handler
throws
TransletException
type
type
NTYPES
String
name
_namesArray
type
final
int
pi
_prefix
node
final
int
ui
_namespace
type
if
pi
final
String
prefix
_prefixArray
pi
final
String
uri
_uriArray
ui
final
String
local
getLocalName
node
name
prefix
equals
EMPTYSTRING
local
prefix
local
handler
startElement
name
handler
namespace
prefix
uri
else
if
ui
handler
startElement
name
getLocalName
node
handler
namespace
EMPTYSTRING
_uriArray
ui
else
handler
startElement
name
for
int
a
_lengthOrAttr
node
a
NULL
a
_nextSibling
a
if
_type
a
NAMESPACE
handler
namespace
_prefixArray
_prefix
a
makeStringValue
a
return
name
private
String
_cachedStringValue
public
String
getStringValue
if
_cachedStringValue
_cachedStringValue
getElementValue
ROOTNODE
return
_cachedStringValue
public
String
getElementValue
final
int
element
final
int
child
_offsetOrChild
element
if
child
NULL
return
EMPTYSTRING
if
_type
child
TEXT
_nextSibling
child
NULL
return
makeStringValue
child
else
return
stringValueAux
new
StringBuffer
element
toString
private
StringBuffer
stringValueAux
StringBuffer
buffer
final
int
element
for
int
child
_offsetOrChild
element
child
NULL
child
_nextSibling
child
switch
_type
child
case
TEXT
buffer
append
_text
_offsetOrChild
child
_lengthOrAttr
child
break
case
PROCESSING_INSTRUCTION
case
COMMENT
break
default
stringValueAux
buffer
child
return
buffer
public
String
getTreeString
StringBuffer
buf
new
StringBuffer
buf
getElementString
buf
ROOTNODE
return
buf
toString
private
StringBuffer
getElementString
StringBuffer
buffer
int
element
String
name
if
isElement
element
if
name
getNodeName
element
buffer
append
buffer
append
name
int
attribute
_lengthOrAttr
element
while
attribute
NULL
if
_type
attribute
NAMESPACE
buffer
append
append
getNodeName
attribute
append
append
getNodeValue
attribute
append
attribute
_nextSibling
attribute
if
_offsetOrChild
element
NULL
buffer
append
return
buffer
buffer
append
for
int
child
_offsetOrChild
element
child
NULL
child
_nextSibling
child
switch
_type
child
case
COMMENT
buffer
append
buffer
append
_text
_offsetOrChild
child
_lengthOrAttr
child
buffer
append
break
case
TEXT
buffer
append
_text
_offsetOrChild
child
_lengthOrAttr
child
break
case
PROCESSING_INSTRUCTION
buffer
append
buffer
append
_text
_offsetOrChild
child
_lengthOrAttr
child
buffer
append
break
default
getElementString
buffer
child
if
isElement
element
name
buffer
append
buffer
append
name
buffer
append
return
buffer
public
String
getLanguage
int
node
final
Integer
langType
Integer
_types
get
XML_LANG_ATTRIBUTE
if
langType
final
int
type
langType
intValue
while
node
DOM
NULL
int
attr
_lengthOrAttr
node
while
attr
DOM
NULL
if
_type
attr
type
return
getNodeValue
attr
attr
_nextSibling
attr
node
getParent
node
return
public
DOMBuilder
getBuilder
return
new
DOMBuilderImpl
public
TransletOutputHandler
getOutputDomBuilder
return
new
SAXAdapter
new
DOMBuilderImpl
private
static
final
boolean
isWhitespaceChar
char
c
return
c
c
c
c
private
final
class
DOMBuilderImpl
implements
DOMBuilder
private
final
static
int
ATTR_ARRAY_SIZE
private
final
static
int
REUSABLE_TEXT_SIZE
private
final
static
int
INIT_STACK_LENGTH
private
Hashtable
_shortTexts
private
Hashtable
_names
private
int
_nextNameCode
NTYPES
private
int
_parentStackLength
INIT_STACK_LENGTH
private
int
_parentStack
new
int
INIT_STACK_LENGTH
private
int
_previousSiblingStack
new
int
INIT_STACK_LENGTH
private
int
_sp
private
int
_baseOffset
private
int
_currentOffset
private
int
_currentNode
private
int
_currentAttributeNode
private
short
_type2
new
short
ATTR_ARRAY_SIZE
private
short
_prefix2
new
short
ATTR_ARRAY_SIZE
private
int
_parent2
new
int
ATTR_ARRAY_SIZE
private
int
_nextSibling2
new
int
ATTR_ARRAY_SIZE
private
int
_offset
new
int
ATTR_ARRAY_SIZE
private
int
_length
new
int
ATTR_ARRAY_SIZE
private
Hashtable
_nsPrefixes
new
Hashtable
private
int
_uriCount
private
int
_prefixCount
private
int
_nextNamespace
DOM
NULL
private
int
_lastNamespace
DOM
NULL
private
int
_xmlSpaceStack
new
int
private
int
_idx
private
boolean
_preserve
private
static
final
String
XML_STRING
private
static
final
String
XMLSPACE_STRING
private
static
final
String
PRESERVE_STRING
private
static
final
String
XML_PREFIX
private
static
final
String
XMLNS_PREFIX
private
boolean
_escaping
private
boolean
_disableEscaping
public
DOMBuilderImpl
_xmlSpaceStack
DOM
ROOTNODE
private
String
getNamespaceURI
String
prefix
final
Stack
stack
Stack
_nsPrefixes
get
prefix
return
stack
stack
empty
String
stack
peek
EMPTYSTRING
private
void
xmlSpaceDefine
String
val
final
int
node
final
boolean
setting
val
equals
PRESERVE_STRING
if
setting
_preserve
_xmlSpaceStack
_idx
node
_preserve
setting
private
void
xmlSpaceRevert
final
int
node
if
node
_xmlSpaceStack
_idx
_idx
_preserve
_preserve
private
int
nextNode
final
int
index
_currentNode
if
index
_type
length
resizeArrays
_type
length
index
return
index
private
int
nextAttributeNode
final
int
index
_currentAttributeNode
if
index
_type2
length
resizeArrays2
_type2
length
index
return
index
private
void
resizeTextArray
final
int
newSize
final
char
newText
new
char
newSize
System
arraycopy
_text
newText
_currentOffset
_text
newText
private
void
linkChildren
final
int
node
_parent
node
_parentStack
_sp
if
_previousSiblingStack
_sp
_nextSibling
_previousSiblingStack
_sp
node
else
_offsetOrChild
_parentStack
_sp
node
_previousSiblingStack
_sp
node
private
void
linkParent
final
int
node
if
_sp
_parentStackLength
int
length
_parentStackLength
_parentStackLength
length
INIT_STACK_LENGTH
final
int
newParent
new
int
_parentStackLength
System
arraycopy
_parentStack
newParent
length
_parentStack
newParent
final
int
newSibling
new
int
_parentStackLength
System
arraycopy
_previousSiblingStack
newSibling
length
_previousSiblingStack
newSibling
_parentStack
_sp
node
private
short
makeElementNode
String
uri
String
localname
throws
SAXException
final
String
name
if
uri
EMPTYSTRING
name
uri
localname
else
name
localname
Integer
obj
Integer
_names
get
name
if
obj
_names
put
name
obj
new
Integer
_nextNameCode
return
short
obj
intValue
private
short
makeElementNode
String
name
int
col
throws
SAXException
if
col
final
String
uri
getNamespaceURI
name
substring
col
name
uri
name
substring
col
else
final
String
uri
getNamespaceURI
EMPTYSTRING
if
uri
equals
EMPTYSTRING
name
uri
name
Integer
obj
Integer
_names
get
name
if
obj
_names
put
name
obj
new
Integer
_nextNameCode
return
short
obj
intValue
private
short
registerPrefix
String
prefix
Stack
stack
Stack
_nsPrefixes
get
prefix
if
stack
Integer
obj
Integer
stack
elementAt
return
short
obj
intValue
return
private
int
maybeReuseText
final
int
length
final
int
base
_baseOffset
if
length
REUSABLE_TEXT_SIZE
char
chars
new
char
length
System
arraycopy
_text
base
chars
length
final
Integer
offsetObj
Integer
_shortTexts
get
chars
if
offsetObj
_currentOffset
base
return
offsetObj
intValue
else
_shortTexts
put
chars
new
Integer
base
_baseOffset
_currentOffset
return
base
private
void
storeTextRef
final
int
node
final
int
length
_currentOffset
_baseOffset
_offsetOrChild
node
maybeReuseText
length
_lengthOrAttr
node
length
private
int
makeTextNode
boolean
isWhitespace
if
_currentOffset
_baseOffset
final
int
node
nextNode
final
int
limit
_currentOffset
if
isWhitespace
_whitespace
setBit
node
else
if
_preserve
int
i
_baseOffset
while
isWhitespaceChar
_text
i
i
limit
if
i
limit
isWhitespaceChar
_text
i
_whitespace
setBit
node
_type
node
TEXT
linkChildren
node
storeTextRef
node
if
_disableEscaping
if
_dontEscape
_dontEscape
new
BitArray
_whitespace
size
_dontEscape
setBit
node
_disableEscaping
return
node
return
private
void
storeAttrValRef
final
int
attributeNode
final
int
length
_currentOffset
_baseOffset
_offset
attributeNode
maybeReuseText
length
_length
attributeNode
length
private
int
makeNamespaceNode
String
prefix
String
uri
throws
SAXException
final
int
node
nextAttributeNode
_type2
node
NAMESPACE
characters
uri
storeAttrValRef
node
return
node
private
int
makeAttributeNode
int
parent
Attributes
attList
int
i
throws
SAXException
final
int
node
nextAttributeNode
final
String
qname
attList
getQName
i
String
localName
attList
getLocalName
i
final
String
value
attList
getValue
i
StringBuffer
namebuf
new
StringBuffer
EMPTYSTRING
if
qname
startsWith
XMLSPACE_STRING
xmlSpaceDefine
attList
getValue
i
parent
if
localName
localName
EMPTYSTRING
final
String
uri
attList
getURI
i
if
uri
uri
equals
EMPTYSTRING
namebuf
append
uri
namebuf
append
namebuf
append
namebuf
append
localName
length
localName
qname
String
name
namebuf
toString
Integer
obj
Integer
_names
get
name
if
obj
_type2
node
short
_nextNameCode
_names
put
name
obj
new
Integer
_nextNameCode
else
_type2
node
short
obj
intValue
final
int
col
qname
lastIndexOf
if
col
_prefix2
node
registerPrefix
qname
substring
col
characters
attList
getValue
i
storeAttrValRef
node
return
node
public
void
characters
char
ch
int
start
int
length
if
_currentOffset
length
_text
length
resizeTextArray
Math
max
_text
length
_currentOffset
length
System
arraycopy
ch
start
_text
_currentOffset
length
_currentOffset
length
_disableEscaping
_escaping
public
void
startDocument
throws
SAXException
_shortTexts
new
Hashtable
_names
new
Hashtable
_sp
_parentStack
ROOTNODE
_currentNode
ROOTNODE
_currentAttributeNode
_type2
NAMESPACE
definePrefixAndUri
EMPTYSTRING
EMPTYSTRING
startPrefixMapping
XML_PREFIX
_lengthOrAttr
ROOTNODE
_nextNamespace
_parent2
_nextNamespace
ROOTNODE
_nextNamespace
DOM
NULL
public
void
endDocument
makeTextNode
_shortTexts
final
int
namesSize
_nextNameCode
NTYPES
_namesArray
new
String
namesSize
Enumeration
keys
_names
keys
while
keys
hasMoreElements
final
String
name
String
keys
nextElement
final
Integer
idx
Integer
_names
get
name
_namesArray
idx
intValue
NTYPES
name
_names
_types
setupMapping
_namesArray
resizeTextArray
_currentOffset
_firstAttributeNode
_currentNode
shiftAttributes
_currentNode
resizeArrays
_currentNode
_currentAttributeNode
_currentNode
appendAttributes
_treeNodeLimit
_currentNode
_currentAttributeNode
_namespace
new
short
namesSize
_uriArray
new
String
_uriCount
for
int
i
i
namesSize
i
final
String
qname
_namesArray
i
final
int
col
_namesArray
i
lastIndexOf
if
qname
startsWith
XML_STRING
col
final
String
uri
_namesArray
i
substring
col
final
Integer
idx
Integer
_nsIndex
get
uri
if
idx
_namespace
i
idx
shortValue
_uriArray
idx
intValue
uri
_prefixArray
new
String
_prefixCount
Enumeration
p
_nsPrefixes
keys
while
p
hasMoreElements
final
String
prefix
String
p
nextElement
final
Stack
stack
Stack
_nsPrefixes
get
prefix
final
Integer
I
Integer
stack
elementAt
_prefixArray
I
shortValue
prefix
public
void
startElement
String
uri
String
localName
String
qname
Attributes
attributes
throws
SAXException
makeTextNode
final
int
node
nextNode
linkChildren
node
linkParent
node
_lengthOrAttr
node
DOM
NULL
int
last
final
int
count
attributes
getLength
if
_nextNamespace
DOM
NULL
_lengthOrAttr
node
_nextNamespace
while
_nextNamespace
DOM
NULL
_parent2
_nextNamespace
node
_nextNamespace
_nextSibling2
last
_nextNamespace
if
_nextNamespace
DOM
NULL
count
_nextSibling2
last
_currentAttributeNode
if
localName
localName
EMPTYSTRING
boolean
attrsAdded
if
count
int
attr
_currentAttributeNode
if
_lengthOrAttr
node
DOM
NULL
_lengthOrAttr
node
attr
for
int
i
i
count
i
if
attributes
getQName
i
startsWith
XMLNS_PREFIX
attr
makeAttributeNode
node
attributes
i
_parent2
attr
node
_nextSibling2
attr
attr
attrsAdded
_nextSibling2
attrsAdded
last
last
attr
DOM
NULL
final
int
col
qname
lastIndexOf
_type
node
uri
localName
length
makeElementNode
uri
localName
makeElementNode
qname
col
if
col
_prefix
node
registerPrefix
qname
substring
col
public
void
endElement
String
uri
String
localName
String
qname
makeTextNode
xmlSpaceRevert
_parentStack
_sp
_previousSiblingStack
_sp
public
void
processingInstruction
String
target
String
data
throws
SAXException
makeTextNode
final
int
node
nextNode
_type
node
PROCESSING_INSTRUCTION
linkChildren
node
characters
target
characters
characters
data
storeTextRef
node
public
void
ignorableWhitespace
char
ch
int
start
int
length
if
_currentOffset
length
_text
length
resizeTextArray
Math
max
_text
length
_currentOffset
length
System
arraycopy
ch
start
_text
_currentOffset
length
_currentOffset
length
makeTextNode
public
void
setDocumentLocator
Locator
locator
public
void
skippedEntity
String
name
public
void
startPrefixMapping
String
prefix
String
uri
throws
SAXException
final
Stack
stack
definePrefixAndUri
prefix
uri
makeTextNode
int
attr
makeNamespaceNode
prefix
uri
if
_nextNamespace
DOM
NULL
_nextNamespace
attr
else
_nextSibling2
attr
attr
_nextSibling2
attr
DOM
NULL
_prefix2
attr
Integer
stack
elementAt
shortValue
private
Stack
definePrefixAndUri
String
prefix
String
uri
throws
SAXException
Stack
stack
Stack
_nsPrefixes
get
prefix
if
stack
stack
new
Stack
stack
push
new
Integer
_prefixCount
_nsPrefixes
put
prefix
stack
Integer
idx
if
idx
Integer
_nsIndex
get
uri
_nsIndex
put
uri
idx
new
Integer
_uriCount
stack
push
uri
return
stack
public
void
endPrefixMapping
String
prefix
final
Stack
stack
Stack
_nsPrefixes
get
prefix
if
stack
stack
empty
stack
pop
public
void
comment
char
ch
int
start
int
length
makeTextNode
if
_currentOffset
length
_text
length
resizeTextArray
Math
max
_text
length
_currentOffset
length
System
arraycopy
ch
start
_text
_currentOffset
length
_currentOffset
length
final
int
node
makeTextNode
_type
node
COMMENT
public
void
startCDATA
public
void
endCDATA
public
void
startDTD
String
name
String
publicId
String
systemId
public
void
endDTD
public
void
startEntity
String
name
public
void
endEntity
String
name
private
void
characters
final
String
string
final
int
length
string
length
if
_currentOffset
length
_text
length
resizeTextArray
Math
max
_text
length
_currentOffset
length
string
getChars
length
_text
_currentOffset
_currentOffset
length
private
void
resizeArrays
final
int
newSize
int
length
if
length
newSize
newSize
_currentNode
length
_currentNode
final
short
newType
new
short
newSize
System
arraycopy
_type
newType
length
_type
newType
final
int
newParent
new
int
newSize
System
arraycopy
_parent
newParent
length
_parent
newParent
final
int
newNextSibling
new
int
newSize
System
arraycopy
_nextSibling
newNextSibling
length
_nextSibling
newNextSibling
final
int
newOffsetOrChild
new
int
newSize
System
arraycopy
_offsetOrChild
newOffsetOrChild
length
_offsetOrChild
newOffsetOrChild
final
int
newLengthOrAttr
new
int
newSize
System
arraycopy
_lengthOrAttr
newLengthOrAttr
length
_lengthOrAttr
newLengthOrAttr
_whitespace
resize
newSize
if
_dontEscape
_dontEscape
resize
newSize
final
short
newPrefix
new
short
newSize
System
arraycopy
_prefix
newPrefix
length
_prefix
newPrefix
private
void
resizeArrays2
final
int
newSize
final
int
length
if
newSize
length
final
short
newType
new
short
newSize
System
arraycopy
_type2
newType
length
_type2
newType
final
int
newParent
new
int
newSize
System
arraycopy
_parent2
newParent
length
_parent2
newParent
final
int
newNextSibling
new
int
newSize
System
arraycopy
_nextSibling2
newNextSibling
length
_nextSibling2
newNextSibling
final
int
newOffset
new
int
newSize
System
arraycopy
_offset
newOffset
length
_offset
newOffset
final
int
newLength
new
int
newSize
System
arraycopy
_length
newLength
length
_length
newLength
final
short
newPrefix
new
short
newSize
System
arraycopy
_prefix2
newPrefix
length
_prefix2
newPrefix
private
void
shiftAttributes
final
int
shift
int
i
int
next
final
int
limit
_currentAttributeNode
int
lastParent
for
i
i
limit
i
if
_parent2
i
lastParent
lastParent
_parent2
i
_lengthOrAttr
lastParent
i
shift
next
_nextSibling2
i
_nextSibling2
i
next
next
shift
private
void
appendAttributes
final
int
len
_currentAttributeNode
if
len
final
int
dst
_currentNode
System
arraycopy
_type2
_type
dst
len
System
arraycopy
_prefix2
_prefix
dst
len
System
arraycopy
_parent2
_parent
dst
len
System
arraycopy
_nextSibling2
_nextSibling
dst
len
System
arraycopy
_offset
_offsetOrChild
dst
len
System
arraycopy
_length
_lengthOrAttr
dst
len
public
boolean
setEscaping
boolean
value
final
boolean
temp
_escaping
_escaping
value
return
temp
