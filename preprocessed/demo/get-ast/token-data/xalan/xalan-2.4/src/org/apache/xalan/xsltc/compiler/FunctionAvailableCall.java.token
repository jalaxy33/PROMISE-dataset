package
org
apache
xalan
xsltc
compiler
import
java
util
Vector
import
java
lang
reflect
Modifier
import
java
lang
reflect
Method
import
org
apache
xalan
xsltc
compiler
util
Type
import
org
apache
bcel
generic
import
org
apache
xalan
xsltc
compiler
util
import
org
apache
xalan
xsltc
runtime
TransletLoader
final
class
FunctionAvailableCall
extends
FunctionCall
private
Expression
_arg
private
String
_nameOfFunct
private
String
_namespaceOfFunct
private
boolean
_isFunctionAvailable
public
FunctionAvailableCall
QName
fname
Vector
arguments
super
fname
arguments
_arg
Expression
arguments
elementAt
_type
if
_arg
instanceof
LiteralExpr
LiteralExpr
arg
LiteralExpr
_arg
_namespaceOfFunct
arg
getNamespace
_nameOfFunct
arg
getValue
if
_namespaceOfFunct
_namespaceOfFunct
startsWith
JAVA_EXT_XSLTC
_namespaceOfFunct
startsWith
JAVA_EXT_XALAN
_isFunctionAvailable
hasMethods
public
Type
typeCheck
SymbolTable
stable
throws
TypeCheckError
if
_type
return
_type
if
_arg
instanceof
LiteralExpr
return
_type
Type
Boolean
ErrorMsg
err
new
ErrorMsg
ErrorMsg
NEED_LITERAL_ERR
this
throw
new
TypeCheckError
err
public
Object
evaluateAtCompileTime
return
getResult
Boolean
TRUE
Boolean
FALSE
private
String
getClassName
String
argValue
int
colonSep
argValue
indexOf
if
colonSep
argValue
argValue
substring
colonSep
int
lastDot
argValue
lastIndexOf
if
lastDot
argValue
argValue
substring
lastDot
return
argValue
private
String
getMethodName
String
argValue
int
lastDot
argValue
lastIndexOf
if
lastDot
argValue
argValue
substring
lastDot
return
argValue
private
String
getExternalFunctionName
int
colonIndex
_nameOfFunct
indexOf
String
uri
_namespaceOfFunct
_nameOfFunct
substring
colonIndex
try
return
getClassNameFromUri
uri
catch
TypeCheckError
e
return
private
boolean
hasMethods
LiteralExpr
arg
LiteralExpr
_arg
final
String
externalFunctName
getExternalFunctionName
if
externalFunctName
return
final
String
className
getClassName
externalFunctName
try
TransletLoader
loader
new
TransletLoader
final
Class
clazz
loader
loadClass
className
if
clazz
final
ErrorMsg
msg
new
ErrorMsg
ErrorMsg
CLASS_NOT_FOUND_ERR
className
getParser
reportError
Constants
ERROR
msg
else
final
String
methodName
getMethodName
externalFunctName
final
Method
methods
clazz
getDeclaredMethods
for
int
i
i
methods
length
i
final
int
mods
methods
i
getModifiers
if
Modifier
isPublic
mods
Modifier
isStatic
mods
methods
i
getName
equals
methodName
return
catch
ClassNotFoundException
e
final
ErrorMsg
msg
new
ErrorMsg
ErrorMsg
CLASS_NOT_FOUND_ERR
className
getParser
reportError
Constants
ERROR
msg
return
public
boolean
getResult
if
_nameOfFunct
return
if
_namespaceOfFunct
_namespaceOfFunct
equals
EMPTYSTRING
_namespaceOfFunct
equals
EXT_XALAN
_namespaceOfFunct
equals
TRANSLET_URI
final
Parser
parser
getParser
_isFunctionAvailable
parser
functionSupported
Util
getLocalName
_nameOfFunct
return
_isFunctionAvailable
public
void
translate
ClassGenerator
classGen
MethodGenerator
methodGen
final
ConstantPoolGen
cpg
classGen
getConstantPool
methodGen
getInstructionList
append
new
PUSH
cpg
getResult
