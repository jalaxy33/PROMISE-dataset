package
org
apache
xalan
xsltc
cmdline
getopt
import
java
util
ArrayList
import
java
util
ListIterator
import
java
util
List
import
org
apache
xalan
xsltc
cmdline
getopt
IllegalArgumentException
import
org
apache
xalan
xsltc
cmdline
getopt
MissingOptArgException
public
class
GetOpt
public
GetOpt
String
args
String
optString
theOptions
new
ArrayList
int
currOptIndex
theCmdArgs
new
ArrayList
theOptionMatcher
new
OptionMatcher
optString
for
int
i
i
args
length
i
String
token
args
i
int
tokenLength
token
length
if
token
equals
currOptIndex
i
break
else
if
token
startsWith
tokenLength
theOptions
add
new
Option
token
charAt
else
if
token
startsWith
tokenLength
for
int
j
j
tokenLength
j
theOptions
add
new
Option
token
charAt
j
else
if
token
startsWith
if
theOptions
size
currOptIndex
i
break
else
int
indexoflast
indexoflast
theOptions
size
Option
op
Option
theOptions
get
indexoflast
char
opLetter
op
getArgLetter
if
op
hasArg
theOptionMatcher
hasArg
opLetter
op
setArg
token
else
currOptIndex
i
break
theOptionsIterator
theOptions
listIterator
for
int
i
currOptIndex
i
args
length
i
String
token
args
i
theCmdArgs
add
token
public
void
printOptions
for
ListIterator
it
theOptions
listIterator
it
hasNext
Option
opt
Option
it
next
System
out
print
opt
getArgLetter
String
arg
opt
getArgument
if
arg
System
out
print
arg
System
out
println
public
int
getNextOption
throws
IllegalArgumentException
MissingOptArgException
int
retval
if
theOptionsIterator
hasNext
theCurrentOption
Option
theOptionsIterator
next
char
c
theCurrentOption
getArgLetter
boolean
shouldHaveArg
theOptionMatcher
hasArg
c
String
arg
theCurrentOption
getArgument
if
theOptionMatcher
match
c
throw
new
IllegalArgumentException
c
else
if
shouldHaveArg
arg
throw
new
MissingOptArgException
c
retval
c
return
retval
public
String
getOptionArg
String
retval
String
tmp
theCurrentOption
getArgument
char
c
theCurrentOption
getArgLetter
if
theOptionMatcher
hasArg
c
retval
tmp
return
retval
public
String
getCmdArgs
String
retval
new
String
theCmdArgs
size
int
i
for
ListIterator
it
theCmdArgs
listIterator
it
hasNext
retval
i
String
it
next
return
retval
private
Option
theCurrentOption
private
ListIterator
theOptionsIterator
private
List
theOptions
private
List
theCmdArgs
private
OptionMatcher
theOptionMatcher
class
Option
private
char
theArgLetter
private
String
theArgument
public
Option
char
argLetter
theArgLetter
argLetter
public
void
setArg
String
arg
theArgument
arg
public
boolean
hasArg
return
theArgument
public
char
getArgLetter
return
theArgLetter
public
String
getArgument
return
theArgument
class
OptionMatcher
public
OptionMatcher
String
optString
theOptString
optString
public
boolean
match
char
c
boolean
retval
if
theOptString
indexOf
c
retval
return
retval
public
boolean
hasArg
char
c
boolean
retval
int
index
theOptString
indexOf
c
if
index
theOptString
length
retval
else
if
theOptString
charAt
index
retval
return
retval
private
String
theOptString
