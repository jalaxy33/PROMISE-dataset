package
org
apache
xalan
xsltc
compiler
import
java
util
Vector
import
java
util
StringTokenizer
import
org
apache
xalan
xsltc
compiler
util
Type
import
org
apache
xalan
xsltc
compiler
util
ReferenceType
import
org
apache
bcel
classfile
JavaClass
import
org
apache
bcel
classfile
Field
import
org
apache
bcel
classfile
Method
import
org
apache
bcel
generic
import
org
apache
xalan
xsltc
dom
import
org
apache
xalan
xsltc
compiler
util
final
class
Whitespace
extends
TopLevelElement
public
static
final
int
USE_PREDICATE
public
static
final
int
STRIP_SPACE
public
static
final
int
PRESERVE_SPACE
public
static
final
int
RULE_NONE
public
static
final
int
RULE_ELEMENT
public
static
final
int
RULE_NAMESPACE
public
static
final
int
RULE_ALL
private
String
_elementList
private
int
_action
private
int
_importPrecedence
private
final
static
class
WhitespaceRule
private
final
int
_action
private
String
_namespace
private
String
_element
private
int
_type
private
int
_priority
public
WhitespaceRule
int
action
String
element
int
precedence
_action
action
final
int
colon
element
indexOf
if
colon
_namespace
element
substring
colon
_element
element
substring
colon
element
length
else
_namespace
Constants
EMPTYSTRING
_element
element
_priority
precedence
if
_element
equals
if
_namespace
Constants
EMPTYSTRING
_type
RULE_ALL
_priority
else
_type
RULE_NAMESPACE
_priority
else
_type
RULE_ELEMENT
public
int
compareTo
WhitespaceRule
other
return
_priority
other
_priority
_priority
other
_priority
public
int
getAction
return
_action
public
int
getStrength
return
_type
public
int
getPriority
return
_priority
public
String
getElement
return
_element
public
String
getNamespace
return
_namespace
public
void
parseContents
Parser
parser
_action
_qname
getLocalPart
endsWith
STRIP_SPACE
PRESERVE_SPACE
_importPrecedence
parser
getCurrentImportPrecedence
_elementList
getAttribute
if
_elementList
_elementList
length
reportError
this
parser
ErrorMsg
REQUIRED_ATTR_ERR
return
final
SymbolTable
stable
parser
getSymbolTable
StringTokenizer
list
new
StringTokenizer
_elementList
StringBuffer
elements
new
StringBuffer
Constants
EMPTYSTRING
while
list
hasMoreElements
String
token
list
nextToken
String
prefix
String
namespace
int
col
if
col
token
indexOf
prefix
token
substring
col
else
prefix
Constants
EMPTYSTRING
namespace
lookupNamespace
prefix
if
namespace
elements
append
namespace
token
substring
col
token
length
else
elements
append
token
if
list
hasMoreElements
elements
append
_elementList
elements
toString
public
Vector
getRules
final
Vector
rules
new
Vector
final
StringTokenizer
list
new
StringTokenizer
_elementList
while
list
hasMoreElements
rules
add
new
WhitespaceRule
_action
list
nextToken
_importPrecedence
return
rules
private
static
WhitespaceRule
findContradictingRule
Vector
rules
WhitespaceRule
rule
for
int
i
i
rules
size
i
WhitespaceRule
currentRule
WhitespaceRule
rules
elementAt
i
if
currentRule
rule
return
switch
currentRule
getStrength
case
RULE_ALL
return
currentRule
case
RULE_ELEMENT
if
rule
getElement
equals
currentRule
getElement
break
case
RULE_NAMESPACE
if
rule
getNamespace
equals
currentRule
getNamespace
return
currentRule
break
return
private
static
int
prioritizeRules
Vector
rules
WhitespaceRule
currentRule
int
defaultAction
PRESERVE_SPACE
quicksort
rules
rules
size
boolean
strip
for
int
i
i
rules
size
i
currentRule
WhitespaceRule
rules
elementAt
i
if
currentRule
getAction
STRIP_SPACE
strip
if
strip
rules
removeAllElements
return
PRESERVE_SPACE
for
int
idx
idx
rules
size
currentRule
WhitespaceRule
rules
elementAt
idx
if
findContradictingRule
rules
currentRule
rules
remove
idx
else
if
currentRule
getStrength
RULE_ALL
defaultAction
currentRule
getAction
for
int
i
idx
i
rules
size
i
rules
removeElementAt
i
idx
if
rules
size
return
defaultAction
do
currentRule
WhitespaceRule
rules
lastElement
if
currentRule
getAction
defaultAction
rules
removeElementAt
rules
size
else
break
while
rules
size
return
defaultAction
public
static
void
compileStripSpace
BranchHandle
strip
int
sCount
InstructionList
il
final
InstructionHandle
target
il
append
ICONST_1
il
append
IRETURN
for
int
i
i
sCount
i
strip
i
setTarget
target
public
static
void
compilePreserveSpace
BranchHandle
preserve
int
pCount
InstructionList
il
final
InstructionHandle
target
il
append
ICONST_0
il
append
IRETURN
for
int
i
i
pCount
i
preserve
i
setTarget
target
private
static
void
compilePredicate
Vector
rules
int
defaultAction
ClassGenerator
classGen
final
ConstantPoolGen
cpg
classGen
getConstantPool
final
InstructionList
il
new
InstructionList
final
XSLTC
xsltc
classGen
getParser
getXSLTC
final
MethodGenerator
stripSpace
new
MethodGenerator
ACC_PUBLIC
ACC_FINAL
org
apache
bcel
generic
Type
BOOLEAN
new
org
apache
bcel
generic
Type
Util
getJCRefType
DOM_INTF_SIG
org
apache
bcel
generic
Type
INT
org
apache
bcel
generic
Type
INT
new
String
classGen
getClassName
il
cpg
classGen
addInterface
final
int
paramDom
stripSpace
getLocalIndex
final
int
paramCurrent
stripSpace
getLocalIndex
final
int
paramType
stripSpace
getLocalIndex
BranchHandle
strip
new
BranchHandle
rules
size
BranchHandle
preserve
new
BranchHandle
rules
size
int
sCount
int
pCount
for
int
i
i
rules
size
i
WhitespaceRule
rule
WhitespaceRule
rules
elementAt
i
final
int
gns
cpg
addInterfaceMethodref
DOM_INTF
final
int
strcmp
cpg
addMethodref
if
rule
getStrength
RULE_NAMESPACE
il
append
new
ALOAD
paramDom
il
append
new
ILOAD
paramCurrent
il
append
new
INVOKEINTERFACE
gns
il
append
new
PUSH
cpg
rule
getNamespace
il
append
new
INVOKEVIRTUAL
strcmp
il
append
ICONST_0
if
rule
getAction
STRIP_SPACE
strip
sCount
il
append
new
IF_ICMPEQ
else
preserve
pCount
il
append
new
IF_ICMPEQ
else
if
rule
getStrength
RULE_ELEMENT
final
Parser
parser
classGen
getParser
QName
qname
if
rule
getNamespace
Constants
EMPTYSTRING
qname
parser
getQName
rule
getNamespace
rule
getElement
else
qname
parser
getQName
rule
getElement
final
int
elementType
xsltc
registerElement
qname
il
append
new
ILOAD
paramType
il
append
new
PUSH
cpg
elementType
if
rule
getAction
STRIP_SPACE
strip
sCount
il
append
new
IF_ICMPEQ
else
preserve
pCount
il
append
new
IF_ICMPEQ
if
defaultAction
STRIP_SPACE
compileStripSpace
strip
sCount
il
compilePreserveSpace
preserve
pCount
il
else
compilePreserveSpace
preserve
pCount
il
compileStripSpace
strip
sCount
il
stripSpace
stripAttributes
stripSpace
setMaxLocals
stripSpace
setMaxStack
stripSpace
removeNOPs
classGen
addMethod
stripSpace
getMethod
private
static
void
compileDefault
int
defaultAction
ClassGenerator
classGen
final
ConstantPoolGen
cpg
classGen
getConstantPool
final
InstructionList
il
new
InstructionList
final
XSLTC
xsltc
classGen
getParser
getXSLTC
final
MethodGenerator
stripSpace
new
MethodGenerator
ACC_PUBLIC
ACC_FINAL
org
apache
bcel
generic
Type
BOOLEAN
new
org
apache
bcel
generic
Type
Util
getJCRefType
DOM_INTF_SIG
org
apache
bcel
generic
Type
INT
org
apache
bcel
generic
Type
INT
new
String
classGen
getClassName
il
cpg
classGen
addInterface
if
defaultAction
STRIP_SPACE
il
append
ICONST_1
else
il
append
ICONST_0
il
append
IRETURN
stripSpace
stripAttributes
stripSpace
setMaxLocals
stripSpace
setMaxStack
stripSpace
removeNOPs
classGen
addMethod
stripSpace
getMethod
public
static
int
translateRules
Vector
rules
ClassGenerator
classGen
final
int
defaultAction
prioritizeRules
rules
if
rules
size
compileDefault
defaultAction
classGen
return
defaultAction
compilePredicate
rules
defaultAction
classGen
return
USE_PREDICATE
private
static
void
quicksort
Vector
rules
int
p
int
r
while
p
r
final
int
q
partition
rules
p
r
quicksort
rules
p
q
p
q
private
static
int
partition
Vector
rules
int
p
int
r
final
WhitespaceRule
x
WhitespaceRule
rules
elementAt
p
r
int
i
p
j
r
while
while
x
compareTo
WhitespaceRule
rules
elementAt
j
while
x
compareTo
WhitespaceRule
rules
elementAt
i
if
i
j
final
WhitespaceRule
tmp
WhitespaceRule
rules
elementAt
i
rules
setElementAt
rules
elementAt
j
i
rules
setElementAt
tmp
j
else
return
j
public
Type
typeCheck
SymbolTable
stable
throws
TypeCheckError
return
Type
Void
public
void
translate
ClassGenerator
classGen
MethodGenerator
methodGen
