package
org
apache
xml
dtm
ref
sax2dtm
import
java
util
Hashtable
import
java
util
Vector
import
javax
xml
transform
Source
import
javax
xml
transform
SourceLocator
import
org
apache
xalan
transformer
XalanProperties
import
org
apache
xalan
res
XSLTErrorResources
import
org
apache
xalan
res
XSLMessages
import
org
apache
xml
dtm
import
org
apache
xml
dtm
ref
import
org
apache
xml
utils
StringVector
import
org
apache
xml
utils
IntVector
import
org
apache
xml
utils
FastStringBuffer
import
org
apache
xml
utils
IntStack
import
org
apache
xml
utils
SuballocatedIntVector
import
org
apache
xml
utils
SystemIDResolver
import
org
apache
xml
utils
WrappedRuntimeException
import
org
apache
xml
utils
XMLCharacterRecognizer
import
org
apache
xml
utils
XMLString
import
org
apache
xml
utils
XMLStringFactory
import
org
xml
sax
import
org
xml
sax
ext
public
class
SAX2DTM
extends
DTMDefaultBaseIterators
implements
EntityResolver
DTDHandler
ContentHandler
ErrorHandler
DeclHandler
LexicalHandler
private
static
final
boolean
DEBUG
private
IncrementalSAXSource
m_incrementalSAXSource
protected
FastStringBuffer
m_chars
new
FastStringBuffer
protected
SuballocatedIntVector
m_data
transient
protected
IntStack
m_parents
new
IntStack
transient
protected
int
m_previous
transient
protected
java
util
Vector
m_prefixMappings
new
java
util
Vector
transient
protected
IntStack
m_contextIndexes
new
IntStack
transient
private
int
m_textType
DTM
TEXT_NODE
transient
private
int
m_coalescedTextType
DTM
TEXT_NODE
transient
private
Locator
m_locator
transient
private
boolean
m_insideDTD
protected
DTMTreeWalker
m_walker
new
DTMTreeWalker
private
DTMStringPool
m_valuesOrPrefixes
new
DTMStringPool
protected
boolean
m_endDocumentOccured
protected
SuballocatedIntVector
m_dataOrQName
protected
Hashtable
m_idAttributes
new
Hashtable
static
final
String
m_fixednames
private
Vector
m_entities
private
static
final
int
ENTITY_FIELD_PUBLICID
private
static
final
int
ENTITY_FIELD_SYSTEMID
private
static
final
int
ENTITY_FIELD_NOTATIONNAME
private
static
final
int
ENTITY_FIELD_NAME
private
static
final
int
ENTITY_FIELDS_PER
private
int
m_textPendingStart
protected
boolean
m_useSourceLocationProperty
protected
StringVector
m_sourceSystemId
protected
IntVector
m_sourceLine
protected
IntVector
m_sourceColumn
public
SAX2DTM
DTMManager
mgr
Source
source
int
dtmIdentity
DTMWSFilter
whiteSpaceFilter
XMLStringFactory
xstringfactory
boolean
doIndexing
super
mgr
source
dtmIdentity
whiteSpaceFilter
xstringfactory
doIndexing
m_data
new
SuballocatedIntVector
m_data
addElement
m_dataOrQName
new
SuballocatedIntVector
m_initialblocksize
m_useSourceLocationProperty
org
apache
xalan
processor
TransformerFactoryImpl
m_source_location
m_sourceSystemId
m_useSourceLocationProperty
new
StringVector
m_sourceLine
m_useSourceLocationProperty
new
IntVector
m_sourceColumn
m_useSourceLocationProperty
new
IntVector
protected
int
_dataOrQName
int
identity
if
identity
m_size
return
m_dataOrQName
elementAt
identity
while
boolean
isMore
nextNode
if
isMore
return
NULL
else
if
identity
m_size
return
m_dataOrQName
elementAt
identity
public
void
clearCoRoutine
clearCoRoutine
public
void
clearCoRoutine
boolean
callDoTerminate
if
m_incrementalSAXSource
if
callDoTerminate
m_incrementalSAXSource
deliverMoreNodes
m_incrementalSAXSource
public
void
setIncrementalSAXSource
IncrementalSAXSource
incrementalSAXSource
m_incrementalSAXSource
incrementalSAXSource
incrementalSAXSource
setContentHandler
this
incrementalSAXSource
setLexicalHandler
this
incrementalSAXSource
setDTDHandler
this
public
ContentHandler
getContentHandler
if
m_incrementalSAXSource
instanceof
IncrementalSAXSource_Filter
return
ContentHandler
m_incrementalSAXSource
else
return
this
public
LexicalHandler
getLexicalHandler
if
m_incrementalSAXSource
instanceof
IncrementalSAXSource_Filter
return
LexicalHandler
m_incrementalSAXSource
else
return
this
public
EntityResolver
getEntityResolver
return
this
public
DTDHandler
getDTDHandler
return
this
public
ErrorHandler
getErrorHandler
return
this
public
DeclHandler
getDeclHandler
return
this
public
boolean
needsTwoThreads
return
m_incrementalSAXSource
public
void
dispatchCharactersEvents
int
nodeHandle
ContentHandler
ch
boolean
normalize
throws
SAXException
int
identity
makeNodeIdentity
nodeHandle
int
type
_type
identity
if
isTextType
type
int
dataIndex
m_dataOrQName
elementAt
identity
int
offset
m_data
elementAt
dataIndex
int
length
m_data
elementAt
dataIndex
if
normalize
m_chars
sendNormalizedSAXcharacters
ch
offset
length
else
m_chars
sendSAXcharacters
ch
offset
length
else
int
firstChild
_firstch
identity
if
DTM
NULL
firstChild
int
offset
int
length
int
level
_level
identity
identity
firstChild
while
DTM
NULL
identity
_level
identity
level
type
_type
identity
if
isTextType
type
int
dataIndex
_dataOrQName
identity
if
offset
offset
m_data
elementAt
dataIndex
length
m_data
elementAt
dataIndex
identity
getNextNodeIdentity
identity
if
length
if
normalize
m_chars
sendNormalizedSAXcharacters
ch
offset
length
else
m_chars
sendSAXcharacters
ch
offset
length
else
if
type
DTM
ELEMENT_NODE
int
dataIndex
_dataOrQName
identity
if
dataIndex
dataIndex
dataIndex
dataIndex
m_data
elementAt
dataIndex
String
str
m_valuesOrPrefixes
indexToString
dataIndex
if
normalize
FastStringBuffer
sendNormalizedSAXcharacters
str
toCharArray
str
length
ch
else
ch
characters
str
toCharArray
str
length
public
String
getNodeName
int
nodeHandle
int
expandedTypeID
getExpandedTypeID
nodeHandle
int
namespaceID
m_expandedNameTable
getNamespaceID
expandedTypeID
if
namespaceID
int
type
getNodeType
nodeHandle
if
type
DTM
NAMESPACE_NODE
if
m_expandedNameTable
getLocalName
expandedTypeID
return
else
return
m_expandedNameTable
getLocalName
expandedTypeID
else
if
m_expandedNameTable
getLocalNameID
expandedTypeID
return
m_fixednames
type
else
return
m_expandedNameTable
getLocalName
expandedTypeID
else
int
qnameIndex
m_dataOrQName
elementAt
makeNodeIdentity
nodeHandle
if
qnameIndex
qnameIndex
qnameIndex
qnameIndex
m_data
elementAt
qnameIndex
return
m_valuesOrPrefixes
indexToString
qnameIndex
public
String
getNodeNameX
int
nodeHandle
int
expandedTypeID
getExpandedTypeID
nodeHandle
int
namespaceID
m_expandedNameTable
getNamespaceID
expandedTypeID
if
namespaceID
String
name
m_expandedNameTable
getLocalName
expandedTypeID
if
name
return
else
return
name
else
int
qnameIndex
m_dataOrQName
elementAt
makeNodeIdentity
nodeHandle
if
qnameIndex
qnameIndex
qnameIndex
qnameIndex
m_data
elementAt
qnameIndex
return
m_valuesOrPrefixes
indexToString
qnameIndex
public
boolean
isAttributeSpecified
int
attributeHandle
return
public
String
getDocumentTypeDeclarationSystemIdentifier
error
XSLMessages
createMessage
XSLTErrorResources
ER_METHOD_NOT_SUPPORTED
return
protected
int
getNextNodeIdentity
int
identity
identity
while
identity
m_size
if
m_incrementalSAXSource
return
DTM
NULL
nextNode
return
identity
public
void
dispatchToEvents
int
nodeHandle
org
xml
sax
ContentHandler
ch
throws
org
xml
sax
SAXException
DTMTreeWalker
treeWalker
m_walker
ContentHandler
prevCH
treeWalker
getcontentHandler
if
prevCH
treeWalker
new
DTMTreeWalker
treeWalker
setcontentHandler
ch
treeWalker
setDTM
this
try
treeWalker
traverse
nodeHandle
finally
treeWalker
setcontentHandler
protected
int
getNumberOfNodes
return
m_size
protected
boolean
nextNode
if
m_incrementalSAXSource
return
if
m_endDocumentOccured
clearCoRoutine
return
Object
gotMore
m_incrementalSAXSource
deliverMoreNodes
if
gotMore
instanceof
Boolean
if
gotMore
instanceof
RuntimeException
throw
RuntimeException
gotMore
else
if
gotMore
instanceof
Exception
throw
new
WrappedRuntimeException
Exception
gotMore
clearCoRoutine
return
if
gotMore
Boolean
TRUE
clearCoRoutine
return
private
final
boolean
isTextType
int
type
return
DTM
TEXT_NODE
type
DTM
CDATA_SECTION_NODE
type
protected
int
addNode
int
type
int
expandedTypeID
int
parentIndex
int
previousSibling
int
dataOrPrefix
boolean
canHaveFirstChild
int
nodeIndex
m_size
if
m_dtmIdent
size
nodeIndex
DTMManager
IDENT_DTM_NODE_BITS
try
if
m_mgr
throw
new
ClassCastException
DTMManagerDefault
mgrD
DTMManagerDefault
m_mgr
int
id
mgrD
getFirstFreeDTMID
mgrD
addDTM
this
id
nodeIndex
m_dtmIdent
addElement
id
DTMManager
IDENT_DTM_NODE_BITS
catch
ClassCastException
e
error
XSLMessages
createMessage
XSLTErrorResources
ER_NO_DTMIDS_AVAIL
m_firstch
addElement
canHaveFirstChild
NOTPROCESSED
DTM
NULL
m_nextsib
addElement
NOTPROCESSED
m_prevsib
addElement
previousSibling
m_parent
addElement
parentIndex
m_exptype
addElement
expandedTypeID
m_dataOrQName
addElement
dataOrPrefix
if
m_useSourceLocationProperty
m_locator
m_sourceSystemId
addElement
m_locator
getSystemId
m_sourceLine
addElement
m_locator
getLineNumber
m_sourceColumn
addElement
m_locator
getColumnNumber
if
m_sourceSystemId
size
m_size
System
err
println
m_size
m_sourceSystemId
size
System
exit
if
DTM
NULL
previousSibling
m_nextsib
setElementAt
nodeIndex
previousSibling
switch
type
case
DTM
NAMESPACE_NODE
declareNamespaceInContext
parentIndex
nodeIndex
break
case
DTM
ATTRIBUTE_NODE
break
default
if
DTM
NULL
parentIndex
NOTPROCESSED
m_firstch
elementAt
parentIndex
m_firstch
setElementAt
nodeIndex
parentIndex
break
return
nodeIndex
public
String
getNodeValue
int
nodeHandle
int
identity
makeNodeIdentity
nodeHandle
int
type
_type
identity
if
isTextType
type
int
dataIndex
_dataOrQName
identity
int
offset
m_data
elementAt
dataIndex
int
length
m_data
elementAt
dataIndex
return
m_chars
getString
offset
length
else
if
DTM
ELEMENT_NODE
type
DTM
DOCUMENT_FRAGMENT_NODE
type
DTM
DOCUMENT_NODE
type
return
else
int
dataIndex
_dataOrQName
identity
if
dataIndex
dataIndex
dataIndex
dataIndex
m_data
elementAt
dataIndex
return
m_valuesOrPrefixes
indexToString
dataIndex
public
String
getLocalName
int
nodeHandle
return
m_expandedNameTable
getLocalName
_exptype
makeNodeIdentity
nodeHandle
public
String
getUnparsedEntityURI
String
name
String
url
if
m_entities
return
url
int
n
m_entities
size
for
int
i
i
n
i
ENTITY_FIELDS_PER
String
ename
String
m_entities
elementAt
i
ENTITY_FIELD_NAME
if
ename
ename
equals
name
String
nname
String
m_entities
elementAt
i
ENTITY_FIELD_NOTATIONNAME
if
nname
url
String
m_entities
elementAt
i
ENTITY_FIELD_SYSTEMID
if
url
url
String
m_entities
elementAt
i
ENTITY_FIELD_PUBLICID
break
return
url
public
String
getPrefix
int
nodeHandle
int
identity
makeNodeIdentity
nodeHandle
int
type
_type
identity
if
DTM
ELEMENT_NODE
type
int
prefixIndex
_dataOrQName
identity
if
prefixIndex
return
else
String
qname
m_valuesOrPrefixes
indexToString
prefixIndex
return
getPrefix
qname
else
if
DTM
ATTRIBUTE_NODE
type
int
prefixIndex
_dataOrQName
identity
if
prefixIndex
prefixIndex
m_data
elementAt
prefixIndex
String
qname
m_valuesOrPrefixes
indexToString
prefixIndex
return
getPrefix
qname
return
public
int
getAttributeNode
int
nodeHandle
String
namespaceURI
String
name
for
int
attrH
getFirstAttribute
nodeHandle
DTM
NULL
attrH
attrH
getNextAttribute
attrH
String
attrNS
getNamespaceURI
attrH
String
attrName
getLocalName
attrH
boolean
nsMatch
namespaceURI
attrNS
namespaceURI
namespaceURI
equals
attrNS
if
nsMatch
name
equals
attrName
return
attrH
return
DTM
NULL
public
String
getDocumentTypeDeclarationPublicIdentifier
error
XSLMessages
createMessage
XSLTErrorResources
ER_METHOD_NOT_SUPPORTED
return
public
String
getNamespaceURI
int
nodeHandle
return
m_expandedNameTable
getNamespace
_exptype
makeNodeIdentity
nodeHandle
public
XMLString
getStringValue
int
nodeHandle
int
identity
makeNodeIdentity
nodeHandle
int
type
if
identity
DTM
NULL
type
DTM
NULL
else
type
_type
identity
if
isTextType
type
int
dataIndex
_dataOrQName
identity
int
offset
m_data
elementAt
dataIndex
int
length
m_data
elementAt
dataIndex
return
m_xstrf
newstr
m_chars
offset
length
else
int
firstChild
_firstch
identity
if
DTM
NULL
firstChild
int
offset
int
length
int
level
_level
identity
identity
firstChild
while
DTM
NULL
identity
_level
identity
level
type
_type
identity
if
isTextType
type
int
dataIndex
_dataOrQName
identity
if
offset
offset
m_data
elementAt
dataIndex
length
m_data
elementAt
dataIndex
identity
getNextNodeIdentity
identity
if
length
return
m_xstrf
newstr
m_chars
offset
length
else
if
type
DTM
ELEMENT_NODE
int
dataIndex
_dataOrQName
identity
if
dataIndex
dataIndex
dataIndex
dataIndex
m_data
elementAt
dataIndex
return
m_xstrf
newstr
m_valuesOrPrefixes
indexToString
dataIndex
return
m_xstrf
emptystr
public
int
getElementById
String
elementId
Integer
intObj
boolean
isMore
do
intObj
Integer
m_idAttributes
get
elementId
if
intObj
return
makeNodeHandle
intObj
intValue
if
isMore
m_endDocumentOccured
break
isMore
nextNode
while
intObj
return
DTM
NULL
private
String
getPrefix
String
qname
String
uri
String
prefix
int
uriIndex
if
uri
uri
length
do
uriIndex
m_prefixMappings
indexOf
uri
uriIndex
while
uriIndex
if
uriIndex
prefix
String
m_prefixMappings
elementAt
uriIndex
else
if
qname
int
indexOfNSSep
qname
indexOf
if
qname
equals
prefix
else
if
qname
startsWith
prefix
qname
substring
indexOfNSSep
else
prefix
indexOfNSSep
qname
substring
indexOfNSSep
else
prefix
else
if
qname
int
indexOfNSSep
qname
indexOf
if
qname
equals
prefix
else
if
qname
startsWith
prefix
qname
substring
indexOfNSSep
else
prefix
indexOfNSSep
qname
substring
indexOfNSSep
else
prefix
return
prefix
public
void
setIDAttribute
String
id
int
elem
m_idAttributes
put
id
new
Integer
elem
protected
void
charactersFlush
if
m_textPendingStart
int
length
m_chars
size
m_textPendingStart
boolean
doStrip
if
getShouldStripWhitespace
doStrip
m_chars
isWhitespace
m_textPendingStart
length
if
doStrip
m_chars
setLength
m_textPendingStart
else
int
exName
m_expandedNameTable
getExpandedTypeID
DTM
TEXT_NODE
int
dataIndex
m_data
size
m_previous
addNode
m_coalescedTextType
exName
m_parents
peek
m_previous
dataIndex
m_data
addElement
m_textPendingStart
m_data
addElement
length
m_textPendingStart
m_textType
m_coalescedTextType
DTM
TEXT_NODE
public
InputSource
resolveEntity
String
publicId
String
systemId
throws
SAXException
return
public
void
notationDecl
String
name
String
publicId
String
systemId
throws
SAXException
public
void
unparsedEntityDecl
String
name
String
publicId
String
systemId
String
notationName
throws
SAXException
if
m_entities
m_entities
new
Vector
try
systemId
SystemIDResolver
getAbsoluteURI
systemId
getDocumentBaseURI
catch
Exception
e
throw
new
org
xml
sax
SAXException
e
m_entities
addElement
publicId
m_entities
addElement
systemId
m_entities
addElement
notationName
m_entities
addElement
name
public
void
setDocumentLocator
Locator
locator
m_locator
locator
public
void
startDocument
throws
SAXException
if
DEBUG
System
out
println
int
doc
addNode
DTM
DOCUMENT_NODE
m_expandedNameTable
getExpandedTypeID
DTM
DOCUMENT_NODE
DTM
NULL
DTM
NULL
m_parents
push
doc
m_previous
DTM
NULL
m_contextIndexes
push
m_prefixMappings
size
public
void
endDocument
throws
SAXException
if
DEBUG
System
out
println
charactersFlush
m_nextsib
setElementAt
NULL
if
m_firstch
elementAt
NOTPROCESSED
m_firstch
setElementAt
NULL
if
DTM
NULL
m_previous
m_nextsib
setElementAt
DTM
NULL
m_previous
m_parents
m_prefixMappings
m_contextIndexes
m_endDocumentOccured
public
void
startPrefixMapping
String
prefix
String
uri
throws
SAXException
if
DEBUG
System
out
println
prefix
uri
if
prefix
prefix
m_prefixMappings
addElement
prefix
m_prefixMappings
addElement
uri
public
void
endPrefixMapping
String
prefix
throws
SAXException
if
DEBUG
System
out
println
prefix
if
prefix
prefix
int
index
m_contextIndexes
peek
do
index
m_prefixMappings
indexOf
prefix
index
while
index
index
if
index
m_prefixMappings
setElementAt
index
m_prefixMappings
setElementAt
index
protected
boolean
declAlreadyDeclared
String
prefix
int
startDecls
m_contextIndexes
peek
java
util
Vector
prefixMappings
m_prefixMappings
int
nDecls
prefixMappings
size
for
int
i
startDecls
i
nDecls
i
String
prefixDecl
String
prefixMappings
elementAt
i
if
prefixDecl
continue
if
prefixDecl
equals
prefix
return
return
boolean
m_pastFirstElement
public
void
startElement
String
uri
String
localName
String
qName
Attributes
attributes
throws
SAXException
if
DEBUG
System
out
println
uri
localName
qName
attributes
boolean
DEBUG_ATTRS
if
DEBUG_ATTRS
attributes
int
n
attributes
getLength
if
n
System
out
println
else
for
int
i
i
n
i
System
out
println
attributes
getURI
i
attributes
getLocalName
i
attributes
getQName
i
attributes
getType
i
attributes
getValue
i
charactersFlush
int
exName
m_expandedNameTable
getExpandedTypeID
uri
localName
DTM
ELEMENT_NODE
String
prefix
getPrefix
qName
uri
int
prefixIndex
prefix
m_valuesOrPrefixes
stringToIndex
qName
int
elemNode
addNode
DTM
ELEMENT_NODE
exName
m_parents
peek
m_previous
prefixIndex
if
m_indexing
indexNode
exName
elemNode
m_parents
push
elemNode
int
startDecls
m_contextIndexes
peek
int
nDecls
m_prefixMappings
size
int
prev
DTM
NULL
if
m_pastFirstElement
prefix
String
declURL
exName
m_expandedNameTable
getExpandedTypeID
prefix
DTM
NAMESPACE_NODE
int
val
m_valuesOrPrefixes
stringToIndex
declURL
prev
addNode
DTM
NAMESPACE_NODE
exName
elemNode
prev
val
m_pastFirstElement
for
int
i
startDecls
i
nDecls
i
prefix
String
m_prefixMappings
elementAt
i
if
prefix
continue
String
declURL
String
m_prefixMappings
elementAt
i
exName
m_expandedNameTable
getExpandedTypeID
prefix
DTM
NAMESPACE_NODE
int
val
m_valuesOrPrefixes
stringToIndex
declURL
prev
addNode
DTM
NAMESPACE_NODE
exName
elemNode
prev
val
int
n
attributes
getLength
for
int
i
i
n
i
String
attrUri
attributes
getURI
i
String
attrQName
attributes
getQName
i
String
valString
attributes
getValue
i
prefix
getPrefix
attrQName
attrUri
int
nodeType
if
attrQName
attrQName
equals
attrQName
startsWith
if
declAlreadyDeclared
prefix
continue
nodeType
DTM
NAMESPACE_NODE
else
nodeType
DTM
ATTRIBUTE_NODE
if
attributes
getType
i
equalsIgnoreCase
setIDAttribute
valString
elemNode
if
valString
valString
int
val
m_valuesOrPrefixes
stringToIndex
valString
String
attrLocalName
attributes
getLocalName
i
if
prefix
prefixIndex
m_valuesOrPrefixes
stringToIndex
attrQName
int
dataIndex
m_data
size
m_data
addElement
prefixIndex
m_data
addElement
val
val
dataIndex
exName
m_expandedNameTable
getExpandedTypeID
attrUri
attrLocalName
nodeType
prev
addNode
nodeType
exName
elemNode
prev
val
if
DTM
NULL
prev
m_nextsib
setElementAt
DTM
NULL
prev
if
m_wsfilter
short
wsv
m_wsfilter
getShouldStripSpace
makeNodeHandle
elemNode
this
boolean
shouldStrip
DTMWSFilter
INHERIT
wsv
getShouldStripWhitespace
DTMWSFilter
STRIP
wsv
pushShouldStripWhitespace
shouldStrip
m_previous
DTM
NULL
m_contextIndexes
push
m_prefixMappings
size
public
void
endElement
String
uri
String
localName
String
qName
throws
SAXException
if
DEBUG
System
out
println
uri
localName
qName
charactersFlush
m_prefixMappings
setSize
m_contextIndexes
pop
m_prefixMappings
setSize
m_contextIndexes
pop
m_contextIndexes
push
m_prefixMappings
size
int
lastNode
m_previous
m_previous
m_parents
pop
if
NOTPROCESSED
m_firstch
elementAt
m_previous
m_firstch
setElementAt
DTM
NULL
m_previous
else
if
DTM
NULL
lastNode
m_nextsib
setElementAt
DTM
NULL
lastNode
popShouldStripWhitespace
public
void
characters
char
ch
int
start
int
length
throws
SAXException
if
m_textPendingStart
m_textPendingStart
m_chars
size
m_coalescedTextType
m_textType
m_chars
append
ch
start
length
if
m_textType
DTM
TEXT_NODE
m_coalescedTextType
DTM
TEXT_NODE
public
void
ignorableWhitespace
char
ch
int
start
int
length
throws
SAXException
characters
ch
start
length
public
void
processingInstruction
String
target
String
data
throws
SAXException
if
DEBUG
System
out
println
target
data
charactersFlush
int
exName
m_expandedNameTable
getExpandedTypeID
target
DTM
PROCESSING_INSTRUCTION_NODE
int
dataIndex
m_valuesOrPrefixes
stringToIndex
data
m_previous
addNode
DTM
PROCESSING_INSTRUCTION_NODE
exName
m_parents
peek
m_previous
dataIndex
public
void
skippedEntity
String
name
throws
SAXException
public
void
warning
SAXParseException
e
throws
SAXException
System
err
println
e
getMessage
public
void
error
SAXParseException
e
throws
SAXException
throw
e
public
void
fatalError
SAXParseException
e
throws
SAXException
throw
e
public
void
elementDecl
String
name
String
model
throws
SAXException
public
void
attributeDecl
String
eName
String
aName
String
type
String
valueDefault
String
value
throws
SAXException
public
void
internalEntityDecl
String
name
String
value
throws
SAXException
public
void
externalEntityDecl
String
name
String
publicId
String
systemId
throws
SAXException
public
void
startDTD
String
name
String
publicId
String
systemId
throws
SAXException
m_insideDTD
public
void
endDTD
throws
SAXException
m_insideDTD
public
void
startEntity
String
name
throws
SAXException
public
void
endEntity
String
name
throws
SAXException
public
void
startCDATA
throws
SAXException
m_textType
DTM
CDATA_SECTION_NODE
public
void
endCDATA
throws
SAXException
m_textType
DTM
TEXT_NODE
public
void
comment
char
ch
int
start
int
length
throws
SAXException
if
m_insideDTD
return
charactersFlush
int
exName
m_expandedNameTable
getExpandedTypeID
DTM
COMMENT_NODE
int
dataIndex
m_valuesOrPrefixes
stringToIndex
new
String
ch
start
length
m_previous
addNode
DTM
COMMENT_NODE
exName
m_parents
peek
m_previous
dataIndex
public
void
setProperty
String
property
Object
value
public
SourceLocator
getSourceLocatorFor
int
node
if
m_useSourceLocationProperty
node
makeNodeIdentity
node
return
new
NodeLocator
m_sourceSystemId
elementAt
node
m_sourceLine
elementAt
node
m_sourceColumn
elementAt
node
else
if
m_locator
return
new
NodeLocator
m_locator
getSystemId
return
