package
org
apache
xalan
xsltc
runtime
output
import
java
util
Stack
import
java
io
IOException
import
org
xml
sax
ContentHandler
import
org
xml
sax
ext
LexicalHandler
import
org
apache
xalan
xsltc
TransletException
import
org
apache
xalan
xsltc
runtime
Hashtable
import
org
xml
sax
SAXException
import
org
apache
xalan
xsltc
runtime
BasisLibrary
public
class
SAXXMLOutput
extends
SAXOutput
private
static
final
char
BEGCDATA
toCharArray
private
static
final
char
ENDCDATA
toCharArray
private
static
final
char
CNTCDATA
toCharArray
public
SAXXMLOutput
ContentHandler
handler
String
encoding
throws
IOException
super
handler
encoding
initCDATA
initNamespaces
public
SAXXMLOutput
ContentHandler
handler
LexicalHandler
lex
String
encoding
throws
IOException
super
handler
lex
encoding
initCDATA
initNamespaces
public
void
endDocument
throws
TransletException
try
if
_startTagOpen
closeStartTag
else
if
_cdataTagOpen
closeCDATA
_saxHandler
endDocument
catch
SAXException
e
throw
new
TransletException
e
public
void
startElement
String
elementName
throws
TransletException
try
if
_startTagOpen
closeStartTag
else
if
_cdataTagOpen
closeCDATA
if
_firstElement
if
_doctypeSystem
_lexHandler
startDTD
elementName
_doctypePublic
_doctypeSystem
_firstElement
_depth
_elementName
elementName
_attributes
clear
_startTagOpen
catch
SAXException
e
throw
new
TransletException
e
public
void
attribute
String
name
final
String
value
throws
TransletException
if
_startTagOpen
final
String
patchedName
patchName
name
final
String
localName
getLocalName
patchedName
final
String
uri
getNamespaceURI
patchedName
final
int
index
localName
_attributes
getIndex
name
_attributes
getIndex
uri
localName
if
index
_attributes
setAttribute
index
uri
localName
patchedName
value
else
_attributes
addAttribute
uri
localName
patchedName
value
public
void
characters
char
ch
int
off
int
len
throws
TransletException
try
if
_startTagOpen
closeStartTag
Integer
I
Integer
_cdataStack
peek
if
I
intValue
_depth
_cdataTagOpen
startCDATA
ch
off
len
else
_saxHandler
characters
ch
off
len
catch
SAXException
e
throw
new
TransletException
e
public
void
endElement
String
elementName
throws
TransletException
try
if
_startTagOpen
closeStartTag
else
if
_cdataTagOpen
closeCDATA
_saxHandler
endElement
getNamespaceURI
elementName
getLocalName
elementName
elementName
popNamespaces
if
Integer
_cdataStack
peek
intValue
_depth
_cdataStack
pop
_depth
catch
SAXException
e
throw
new
TransletException
e
public
void
namespace
final
String
prefix
final
String
uri
throws
TransletException
if
_startTagOpen
pushNamespace
prefix
uri
else
if
prefix
EMPTYSTRING
uri
EMPTYSTRING
return
BasisLibrary
runTimeError
BasisLibrary
STRAY_NAMESPACE_ERR
prefix
uri
public
void
processingInstruction
String
target
String
data
throws
TransletException
try
if
_startTagOpen
closeStartTag
else
if
_cdataTagOpen
closeCDATA
_saxHandler
processingInstruction
target
data
catch
SAXException
e
throw
new
TransletException
e
protected
boolean
pushNamespace
String
prefix
String
uri
try
if
super
pushNamespace
prefix
uri
_saxHandler
startPrefixMapping
prefix
uri
return
catch
SAXException
e
return
protected
boolean
popNamespace
String
prefix
try
if
super
popNamespace
prefix
_saxHandler
endPrefixMapping
prefix
return
catch
SAXException
e
return
protected
void
closeStartTag
throws
TransletException
try
_startTagOpen
final
String
localName
getLocalName
_elementName
final
String
uri
getNamespaceURI
_elementName
_saxHandler
startElement
uri
localName
_elementName
_attributes
if
_cdata
final
StringBuffer
expandedName
uri
EMPTYSTRING
new
StringBuffer
_elementName
new
StringBuffer
uri
append
append
localName
if
_cdata
containsKey
expandedName
toString
_cdataStack
push
new
Integer
_depth
catch
SAXException
e
throw
new
TransletException
e
public
void
startCDATA
throws
TransletException
try
_saxHandler
characters
BEGCDATA
BEGCDATA
length
_cdataTagOpen
catch
SAXException
e
throw
new
TransletException
e
public
void
closeCDATA
throws
TransletException
try
_saxHandler
characters
ENDCDATA
ENDCDATA
length
_cdataTagOpen
catch
SAXException
e
throw
new
TransletException
e
private
void
startCDATA
char
ch
int
off
int
len
throws
SAXException
final
int
limit
off
len
int
offset
off
_saxHandler
characters
BEGCDATA
BEGCDATA
length
for
int
i
offset
i
limit
i
if
ch
i
ch
i
ch
i
_saxHandler
characters
ch
offset
i
offset
_saxHandler
characters
CNTCDATA
CNTCDATA
length
offset
i
i
if
offset
limit
_saxHandler
characters
ch
offset
limit
offset
_cdataTagOpen
