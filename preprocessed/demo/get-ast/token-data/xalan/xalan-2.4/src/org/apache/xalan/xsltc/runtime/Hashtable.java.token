package
org
apache
xalan
xsltc
runtime
import
java
io
import
java
util
Enumeration
class
HashtableEntry
int
hash
Object
key
Object
value
HashtableEntry
next
protected
Object
clone
HashtableEntry
entry
new
HashtableEntry
entry
hash
hash
entry
key
key
entry
value
value
entry
next
next
HashtableEntry
next
clone
return
entry
public
class
Hashtable
private
transient
HashtableEntry
table
private
transient
int
count
private
int
threshold
private
float
loadFactor
public
Hashtable
int
initialCapacity
float
loadFactor
if
initialCapacity
initialCapacity
if
loadFactor
loadFactor
this
loadFactor
loadFactor
table
new
HashtableEntry
initialCapacity
threshold
int
initialCapacity
loadFactor
public
Hashtable
int
initialCapacity
this
initialCapacity
public
Hashtable
this
public
int
size
return
count
public
boolean
isEmpty
return
count
public
Enumeration
keys
return
new
HashtableEnumerator
table
public
Enumeration
elements
return
new
HashtableEnumerator
table
public
boolean
contains
Object
value
if
value
throw
new
NullPointerException
int
i
HashtableEntry
e
HashtableEntry
tab
table
for
i
tab
length
i
for
e
tab
i
e
e
e
next
if
e
value
equals
value
return
return
public
boolean
containsKey
Object
key
HashtableEntry
e
HashtableEntry
tab
table
int
hash
key
hashCode
int
index
hash
tab
length
for
e
tab
index
e
e
e
next
if
e
hash
hash
e
key
equals
key
return
return
public
Object
get
Object
key
HashtableEntry
e
HashtableEntry
tab
table
int
hash
key
hashCode
int
index
hash
tab
length
for
e
tab
index
e
e
e
next
if
e
hash
hash
e
key
equals
key
return
e
value
return
protected
void
rehash
HashtableEntry
e
old
int
i
index
int
oldCapacity
table
length
HashtableEntry
oldTable
table
int
newCapacity
oldCapacity
HashtableEntry
newTable
new
HashtableEntry
newCapacity
threshold
int
newCapacity
loadFactor
table
newTable
for
i
oldCapacity
i
for
old
oldTable
i
old
e
old
old
old
next
index
e
hash
newCapacity
e
next
newTable
index
newTable
index
e
public
Object
put
Object
key
Object
value
if
value
throw
new
NullPointerException
HashtableEntry
e
HashtableEntry
tab
table
int
hash
key
hashCode
int
index
hash
tab
length
for
e
tab
index
e
e
e
next
if
e
hash
hash
e
key
equals
key
Object
old
e
value
e
value
value
return
old
if
count
threshold
rehash
return
put
key
value
e
new
HashtableEntry
e
hash
hash
e
key
key
e
value
value
e
next
tab
index
tab
index
e
count
return
public
Object
remove
Object
key
HashtableEntry
e
prev
HashtableEntry
tab
table
int
hash
key
hashCode
int
index
hash
tab
length
for
e
tab
index
prev
e
prev
e
e
e
next
if
e
hash
hash
e
key
equals
key
if
prev
prev
next
e
next
else
tab
index
e
next
count
return
e
value
return
public
void
clear
HashtableEntry
tab
table
for
int
index
tab
length
index
tab
index
count
public
String
toString
int
i
int
max
size
StringBuffer
buf
new
StringBuffer
Enumeration
k
keys
Enumeration
e
elements
buf
append
for
i
i
max
i
String
s1
k
nextElement
toString
String
s2
e
nextElement
toString
buf
append
s1
s2
if
i
max
buf
append
buf
append
return
buf
toString
class
HashtableEnumerator
implements
Enumeration
boolean
keys
int
index
HashtableEntry
table
HashtableEntry
entry
HashtableEnumerator
HashtableEntry
table
boolean
keys
this
table
table
this
keys
keys
this
index
table
length
public
boolean
hasMoreElements
if
entry
return
while
index
if
entry
table
index
return
return
public
Object
nextElement
if
entry
while
index
entry
table
index
if
entry
HashtableEntry
e
entry
entry
e
next
return
keys
e
key
e
value
return
