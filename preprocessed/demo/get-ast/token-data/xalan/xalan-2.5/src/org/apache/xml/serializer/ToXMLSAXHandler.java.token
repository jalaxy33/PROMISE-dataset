package
org
apache
xml
serializer
import
java
io
IOException
import
java
io
OutputStream
import
java
io
Writer
import
java
util
Properties
import
javax
xml
transform
Result
import
org
w3c
dom
Node
import
org
xml
sax
Attributes
import
org
xml
sax
ContentHandler
import
org
xml
sax
Locator
import
org
xml
sax
SAXException
import
org
xml
sax
ext
LexicalHandler
public
class
ToXMLSAXHandler
extends
ToSAXHandler
protected
boolean
m_escapeSetting
public
ToXMLSAXHandler
m_prefixMap
new
NamespaceMappings
initCDATA
public
Properties
getOutputFormat
return
public
OutputStream
getOutputStream
return
public
Writer
getWriter
return
public
void
indent
int
n
throws
SAXException
public
boolean
reset
return
public
void
serialize
Node
node
throws
IOException
public
boolean
setEscaping
boolean
escape
throws
SAXException
boolean
oldEscapeSetting
m_escapeSetting
m_escapeSetting
escape
if
escape
processingInstruction
Result
PI_ENABLE_OUTPUT_ESCAPING
else
processingInstruction
Result
PI_DISABLE_OUTPUT_ESCAPING
return
oldEscapeSetting
public
void
setOutputFormat
Properties
format
public
void
setOutputStream
OutputStream
output
public
void
setWriter
Writer
writer
public
void
attributeDecl
String
arg0
String
arg1
String
arg2
String
arg3
String
arg4
throws
SAXException
public
void
elementDecl
String
arg0
String
arg1
throws
SAXException
public
void
externalEntityDecl
String
arg0
String
arg1
String
arg2
throws
SAXException
public
void
internalEntityDecl
String
arg0
String
arg1
throws
SAXException
public
void
endDocument
throws
SAXException
flushPending
m_saxHandler
endDocument
super
fireEndDoc
protected
void
closeStartTag
throws
SAXException
m_startTagOpen
final
String
localName
getLocalName
m_elementName
final
String
uri
getNamespaceURI
m_elementName
if
m_needToCallStartDocument
startDocumentInternal
m_saxHandler
startElement
uri
localName
m_elementName
m_attributes
m_attributes
clear
if
m_state
m_state
setCurrentNode
pushCdataSectionState
public
void
closeCDATA
throws
SAXException
m_saxHandler
characters
ENDCDATA
ENDCDATA
length
m_cdataTagOpen
public
void
endElement
String
namespaceURI
String
localName
String
qName
throws
SAXException
flushPending
if
namespaceURI
if
m_elementURI
namespaceURI
m_elementURI
else
namespaceURI
getNamespaceURI
qName
if
localName
if
m_elementLocalName
localName
m_elementLocalName
else
localName
getLocalName
qName
m_saxHandler
endElement
namespaceURI
localName
qName
super
fireEndElem
qName
m_prefixMap
popNamespaces
m_currentElemDepth
m_currentElemDepth
m_startTagOpen
m_cdataSectionStates
pop
public
void
endPrefixMapping
String
prefix
throws
SAXException
return
public
void
ignorableWhitespace
char
arg0
int
arg1
int
arg2
throws
SAXException
m_saxHandler
ignorableWhitespace
arg0
arg1
arg2
public
void
setDocumentLocator
Locator
arg0
m_saxHandler
setDocumentLocator
arg0
public
void
skippedEntity
String
arg0
throws
SAXException
m_saxHandler
skippedEntity
arg0
public
void
startPrefixMapping
String
prefix
String
uri
throws
SAXException
startPrefixMapping
prefix
uri
public
boolean
startPrefixMapping
String
prefix
String
uri
boolean
shouldFlush
throws
org
xml
sax
SAXException
boolean
pushed
int
pushDepth
if
shouldFlush
flushPending
pushDepth
m_currentElemDepth
else
pushDepth
m_currentElemDepth
pushed
m_prefixMap
pushNamespace
prefix
uri
pushDepth
if
pushed
m_saxHandler
startPrefixMapping
prefix
uri
String
name
if
EMPTYSTRING
equals
prefix
name
addAttributeAlways
XMLNS_URI
prefix
name
uri
else
if
EMPTYSTRING
equals
uri
name
prefix
addAttributeAlways
XMLNS_URI
prefix
name
uri
return
pushed
public
void
comment
char
arg0
int
arg1
int
arg2
throws
SAXException
flushPending
if
m_lexHandler
m_lexHandler
comment
arg0
arg1
arg2
super
fireCommentEvent
arg0
arg1
arg2
public
void
endCDATA
throws
SAXException
if
m_lexHandler
m_lexHandler
endCDATA
public
void
endDTD
throws
SAXException
if
m_lexHandler
m_lexHandler
endDTD
public
void
startEntity
String
arg0
throws
SAXException
if
m_lexHandler
m_lexHandler
startEntity
arg0
public
void
characters
String
chars
throws
SAXException
final
char
arr
chars
toCharArray
this
characters
arr
arr
length
public
ToXMLSAXHandler
ContentHandler
handler
String
encoding
super
handler
encoding
initCDATA
m_prefixMap
new
NamespaceMappings
public
ToXMLSAXHandler
ContentHandler
handler
LexicalHandler
lex
String
encoding
super
handler
lex
encoding
initCDATA
m_prefixMap
new
NamespaceMappings
public
void
startElement
String
elementNamespaceURI
String
elementLocalName
String
elementName
throws
SAXException
startElement
elementNamespaceURI
elementLocalName
elementName
public
void
startElement
String
elementName
throws
SAXException
startElement
elementName
public
void
characters
char
ch
int
off
int
len
throws
SAXException
flushPending
if
m_cdataSectionStates
peekOrFalse
startCDATA
ch
off
len
else
m_saxHandler
characters
ch
off
len
fireCharEvent
ch
off
len
public
void
endElement
String
elemName
throws
SAXException
endElement
elemName
public
void
namespaceAfterStartElement
final
String
prefix
final
String
uri
throws
SAXException
startPrefixMapping
prefix
uri
public
void
processingInstruction
String
target
String
data
throws
SAXException
flushPending
m_saxHandler
processingInstruction
target
data
super
fireEscapingEvent
target
data
protected
boolean
popNamespace
String
prefix
try
if
m_prefixMap
popNamespace
prefix
m_saxHandler
endPrefixMapping
prefix
return
catch
SAXException
e
return
public
void
startCDATA
throws
SAXException
m_saxHandler
characters
BEGCDATA
BEGCDATA
length
m_cdataTagOpen
private
void
startCDATA
char
ch
int
off
int
len
throws
SAXException
final
int
limit
off
len
int
offset
off
m_saxHandler
characters
BEGCDATA
BEGCDATA
length
for
int
i
offset
i
limit
i
if
ch
i
ch
i
ch
i
m_saxHandler
characters
ch
offset
i
offset
m_saxHandler
characters
CNTCDATA
CNTCDATA
length
offset
i
i
if
offset
limit
m_saxHandler
characters
ch
offset
limit
offset
m_cdataTagOpen
public
void
startElement
String
namespaceURI
String
localName
String
name
Attributes
atts
throws
SAXException
flushPending
super
startElement
namespaceURI
localName
name
atts
if
m_needToOutputDocTypeDecl
String
doctypeSystem
getDoctypeSystem
if
doctypeSystem
m_lexHandler
String
doctypePublic
getDoctypePublic
if
doctypeSystem
m_lexHandler
startDTD
name
doctypePublic
doctypeSystem
m_needToOutputDocTypeDecl
m_currentElemDepth
if
namespaceURI
ensurePrefixIsDeclared
namespaceURI
name
m_elementLocalName
localName
m_elementURI
namespaceURI
m_elementName
name
if
atts
addAttributes
atts
m_startTagOpen
pushCdataSectionState
private
void
ensurePrefixIsDeclared
String
ns
String
rawName
throws
org
xml
sax
SAXException
if
ns
ns
length
int
index
String
prefix
index
rawName
indexOf
rawName
substring
index
if
prefix
String
foundURI
m_prefixMap
lookupNamespace
prefix
if
foundURI
foundURI
equals
ns
this
startPrefixMapping
prefix
ns
this
addAttributeAlways
prefix
prefix
length
prefix
ns
public
void
addAttribute
String
uri
String
localName
String
rawName
String
type
String
value
throws
SAXException
if
m_startTagOpen
ensurePrefixIsDeclared
uri
rawName
addAttributeAlways
uri
localName
rawName
type
value
