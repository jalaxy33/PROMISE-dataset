package
org
apache
xml
serializer
import
java
io
IOException
import
java
io
OutputStream
import
java
io
UnsupportedEncodingException
import
java
util
Properties
import
javax
xml
transform
Result
import
org
apache
xml
res
XMLErrorResources
import
org
apache
xml
res
XMLMessages
import
org
apache
xml
utils
BoolStack
import
org
apache
xml
utils
Trie
import
org
xml
sax
Attributes
import
org
xml
sax
SAXException
public
class
ToHTMLStream
extends
ToStream
protected
BoolStack
m_isRawStack
new
BoolStack
private
boolean
m_inBlockElem
protected
static
CharInfo
m_htmlcharInfo
CharInfo
getCharInfo
CharInfo
HTML_ENTITIES_RESOURCE
static
Trie
m_elementFlags
new
Trie
static
m_elementFlags
put
new
ElemDesc
ElemDesc
EMPTY
m_elementFlags
put
new
ElemDesc
ElemDesc
EMPTY
ElemDesc
BLOCK
m_elementFlags
put
new
ElemDesc
ElemDesc
BLOCK
m_elementFlags
put
new
ElemDesc
ElemDesc
BLOCK
m_elementFlags
put
new
ElemDesc
ElemDesc
EMPTY
ElemDesc
BLOCK
m_elementFlags
put
new
ElemDesc
ElemDesc
WHITESPACESENSITIVE
m_elementFlags
put
new
ElemDesc
ElemDesc
BLOCK
m_elementFlags
put
new
ElemDesc
ElemDesc
BLOCK
m_elementFlags
put
new
ElemDesc
ElemDesc
BLOCK
m_elementFlags
put
new
ElemDesc
ElemDesc
FONTSTYLE
m_elementFlags
put
new
ElemDesc
ElemDesc
FONTSTYLE
m_elementFlags
put
new
ElemDesc
ElemDesc
FONTSTYLE
m_elementFlags
put
new
ElemDesc
ElemDesc
FONTSTYLE
m_elementFlags
put
new
ElemDesc
ElemDesc
FONTSTYLE
m_elementFlags
put
new
ElemDesc
ElemDesc
PHRASE
m_elementFlags
put
new
ElemDesc
ElemDesc
PHRASE
m_elementFlags
put
new
ElemDesc
ElemDesc
PHRASE
m_elementFlags
put
new
ElemDesc
ElemDesc
PHRASE
m_elementFlags
put
new
ElemDesc
ElemDesc
PHRASE
m_elementFlags
put
new
ElemDesc
ElemDesc
PHRASE
m_elementFlags
put
new
ElemDesc
ElemDesc
PHRASE
m_elementFlags
put
new
ElemDesc
ElemDesc
PHRASE
m_elementFlags
put
new
ElemDesc
ElemDesc
PHRASE
m_elementFlags
put
new
ElemDesc
ElemDesc
PHRASE
m_elementFlags
put
new
ElemDesc
ElemDesc
SPECIAL
ElemDesc
ASPECIAL
m_elementFlags
put
new
ElemDesc
ElemDesc
SPECIAL
ElemDesc
ASPECIAL
m_elementFlags
put
new
ElemDesc
ElemDesc
SPECIAL
ElemDesc
ASPECIAL
m_elementFlags
put
new
ElemDesc
ElemDesc
SPECIAL
ElemDesc
ASPECIAL
m_elementFlags
put
new
ElemDesc
ElemDesc
SPECIAL
ElemDesc
ASPECIAL
ElemDesc
EMPTY
ElemDesc
BLOCK
m_elementFlags
put
new
ElemDesc
ElemDesc
BLOCK
m_elementFlags
put
new
ElemDesc
ElemDesc
BLOCK
ElemDesc
BLOCKFORM
ElemDesc
BLOCKFORMFIELDSET
m_elementFlags
put
new
ElemDesc
ElemDesc
BLOCK
ElemDesc
BLOCKFORM
ElemDesc
BLOCKFORMFIELDSET
m_elementFlags
put
new
ElemDesc
ElemDesc
SPECIAL
m_elementFlags
put
new
ElemDesc
ElemDesc
SPECIAL
ElemDesc
ASPECIAL
ElemDesc
BLOCK
m_elementFlags
put
new
ElemDesc
ElemDesc
EMPTY
ElemDesc
BLOCK
m_elementFlags
put
new
ElemDesc
ElemDesc
HEADMISC
ElemDesc
EMPTY
ElemDesc
BLOCK
m_elementFlags
put
new
ElemDesc
ElemDesc
SPECIAL
ElemDesc
ASPECIAL
ElemDesc
EMPTY
ElemDesc
WHITESPACESENSITIVE
m_elementFlags
put
new
ElemDesc
ElemDesc
SPECIAL
ElemDesc
ASPECIAL
ElemDesc
HEADMISC
ElemDesc
WHITESPACESENSITIVE
m_elementFlags
put
new
ElemDesc
ElemDesc
EMPTY
m_elementFlags
put
new
ElemDesc
ElemDesc
BLOCK
ElemDesc
BLOCKFORM
ElemDesc
BLOCKFORMFIELDSET
ElemDesc
EMPTY
m_elementFlags
put
new
ElemDesc
ElemDesc
BLOCK
ElemDesc
BLOCKFORM
ElemDesc
BLOCKFORMFIELDSET
m_elementFlags
put
new
ElemDesc
ElemDesc
HEAD
ElemDesc
BLOCK
m_elementFlags
put
new
ElemDesc
ElemDesc
HEAD
ElemDesc
BLOCK
m_elementFlags
put
new
ElemDesc
ElemDesc
HEAD
ElemDesc
BLOCK
m_elementFlags
put
new
ElemDesc
ElemDesc
HEAD
ElemDesc
BLOCK
m_elementFlags
put
new
ElemDesc
ElemDesc
HEAD
ElemDesc
BLOCK
m_elementFlags
put
new
ElemDesc
ElemDesc
HEAD
ElemDesc
BLOCK
m_elementFlags
put
new
ElemDesc
ElemDesc
PREFORMATTED
ElemDesc
BLOCK
m_elementFlags
put
new
ElemDesc
ElemDesc
SPECIAL
ElemDesc
ASPECIAL
m_elementFlags
put
new
ElemDesc
ElemDesc
BLOCK
ElemDesc
BLOCKFORM
ElemDesc
BLOCKFORMFIELDSET
m_elementFlags
put
new
ElemDesc
m_elementFlags
put
new
ElemDesc
m_elementFlags
put
new
ElemDesc
ElemDesc
BLOCK
ElemDesc
BLOCKFORM
ElemDesc
BLOCKFORMFIELDSET
m_elementFlags
put
new
ElemDesc
ElemDesc
BLOCK
m_elementFlags
put
new
ElemDesc
ElemDesc
BLOCK
m_elementFlags
put
new
ElemDesc
ElemDesc
LIST
ElemDesc
BLOCK
m_elementFlags
put
new
ElemDesc
ElemDesc
LIST
ElemDesc
BLOCK
m_elementFlags
put
new
ElemDesc
ElemDesc
BLOCK
m_elementFlags
put
new
ElemDesc
ElemDesc
BLOCK
m_elementFlags
put
new
ElemDesc
ElemDesc
FORMCTRL
m_elementFlags
put
new
ElemDesc
ElemDesc
FORMCTRL
ElemDesc
INLINELABEL
ElemDesc
EMPTY
m_elementFlags
put
new
ElemDesc
ElemDesc
FORMCTRL
ElemDesc
INLINELABEL
m_elementFlags
put
new
ElemDesc
m_elementFlags
put
new
ElemDesc
m_elementFlags
put
new
ElemDesc
ElemDesc
FORMCTRL
ElemDesc
INLINELABEL
m_elementFlags
put
new
ElemDesc
ElemDesc
BLOCK
ElemDesc
BLOCKFORM
m_elementFlags
put
new
ElemDesc
m_elementFlags
put
new
ElemDesc
ElemDesc
FORMCTRL
ElemDesc
INLINELABEL
m_elementFlags
put
new
ElemDesc
ElemDesc
BLOCK
ElemDesc
BLOCKFORM
ElemDesc
BLOCKFORMFIELDSET
m_elementFlags
put
new
ElemDesc
ElemDesc
BLOCK
m_elementFlags
put
new
ElemDesc
ElemDesc
BLOCK
m_elementFlags
put
new
ElemDesc
ElemDesc
BLOCK
m_elementFlags
put
new
ElemDesc
ElemDesc
BLOCK
m_elementFlags
put
new
ElemDesc
ElemDesc
BLOCK
m_elementFlags
put
new
ElemDesc
ElemDesc
EMPTY
ElemDesc
BLOCK
m_elementFlags
put
new
ElemDesc
ElemDesc
BLOCK
m_elementFlags
put
new
ElemDesc
m_elementFlags
put
new
ElemDesc
m_elementFlags
put
new
ElemDesc
ElemDesc
BLOCK
ElemDesc
HEADELEM
m_elementFlags
put
new
ElemDesc
ElemDesc
BLOCK
m_elementFlags
put
new
ElemDesc
ElemDesc
EMPTY
ElemDesc
BLOCK
m_elementFlags
put
new
ElemDesc
ElemDesc
HEADMISC
ElemDesc
EMPTY
ElemDesc
BLOCK
m_elementFlags
put
new
ElemDesc
ElemDesc
HEADMISC
ElemDesc
RAW
ElemDesc
BLOCK
m_elementFlags
put
new
ElemDesc
ElemDesc
SPECIAL
ElemDesc
ASPECIAL
ElemDesc
HEADMISC
ElemDesc
RAW
m_elementFlags
put
new
ElemDesc
ElemDesc
BLOCK
ElemDesc
BLOCKFORM
ElemDesc
BLOCKFORMFIELDSET
m_elementFlags
put
new
ElemDesc
ElemDesc
BLOCK
m_elementFlags
put
new
ElemDesc
ElemDesc
FONTSTYLE
m_elementFlags
put
new
ElemDesc
ElemDesc
FONTSTYLE
m_elementFlags
put
new
ElemDesc
ElemDesc
FONTSTYLE
m_elementFlags
put
new
ElemDesc
ElemDesc
FONTSTYLE
m_elementFlags
put
new
ElemDesc
ElemDesc
FONTSTYLE
m_elementFlags
put
new
ElemDesc
ElemDesc
BLOCK
ElemDesc
BLOCKFORM
ElemDesc
BLOCKFORMFIELDSET
m_elementFlags
put
new
ElemDesc
ElemDesc
BLOCK
ElemDesc
BLOCKFORM
ElemDesc
BLOCKFORMFIELDSET
m_elementFlags
put
new
ElemDesc
ElemDesc
BLOCK
ElemDesc
BLOCKFORM
ElemDesc
BLOCKFORMFIELDSET
ElemDesc
elemDesc
elemDesc
ElemDesc
m_elementFlags
get
elemDesc
setAttr
ElemDesc
ATTRURL
elemDesc
setAttr
ElemDesc
ATTREMPTY
elemDesc
ElemDesc
m_elementFlags
get
elemDesc
setAttr
ElemDesc
ATTRURL
elemDesc
ElemDesc
m_elementFlags
get
elemDesc
setAttr
ElemDesc
ATTRURL
elemDesc
ElemDesc
m_elementFlags
get
elemDesc
setAttr
ElemDesc
ATTRURL
elemDesc
ElemDesc
m_elementFlags
get
elemDesc
setAttr
ElemDesc
ATTRURL
elemDesc
ElemDesc
m_elementFlags
get
elemDesc
setAttr
ElemDesc
ATTRURL
elemDesc
ElemDesc
m_elementFlags
get
elemDesc
setAttr
ElemDesc
ATTRURL
elemDesc
setAttr
ElemDesc
ATTRURL
elemDesc
ElemDesc
m_elementFlags
get
elemDesc
setAttr
ElemDesc
ATTRURL
elemDesc
ElemDesc
m_elementFlags
get
elemDesc
setAttr
ElemDesc
ATTRURL
elemDesc
setAttr
ElemDesc
ATTRURL
elemDesc
setAttr
ElemDesc
ATTREMPTY
elemDesc
setAttr
ElemDesc
ATTREMPTY
elemDesc
setAttr
ElemDesc
ATTREMPTY
elemDesc
setAttr
ElemDesc
ATTREMPTY
elemDesc
ElemDesc
m_elementFlags
get
elemDesc
setAttr
ElemDesc
ATTREMPTY
elemDesc
setAttr
ElemDesc
ATTREMPTY
elemDesc
ElemDesc
m_elementFlags
get
elemDesc
setAttr
ElemDesc
ATTREMPTY
elemDesc
ElemDesc
m_elementFlags
get
elemDesc
setAttr
ElemDesc
ATTREMPTY
elemDesc
setAttr
ElemDesc
ATTREMPTY
elemDesc
ElemDesc
m_elementFlags
get
elemDesc
setAttr
ElemDesc
ATTREMPTY
elemDesc
setAttr
ElemDesc
ATTREMPTY
elemDesc
ElemDesc
m_elementFlags
get
elemDesc
setAttr
ElemDesc
ATTREMPTY
elemDesc
ElemDesc
m_elementFlags
get
elemDesc
setAttr
ElemDesc
ATTRURL
elemDesc
setAttr
ElemDesc
ATTRURL
elemDesc
setAttr
ElemDesc
ATTREMPTY
elemDesc
ElemDesc
m_elementFlags
get
elemDesc
setAttr
ElemDesc
ATTRURL
elemDesc
setAttr
ElemDesc
ATTRURL
elemDesc
setAttr
ElemDesc
ATTRURL
elemDesc
setAttr
ElemDesc
ATTREMPTY
elemDesc
ElemDesc
m_elementFlags
get
elemDesc
setAttr
ElemDesc
ATTRURL
elemDesc
setAttr
ElemDesc
ATTRURL
elemDesc
setAttr
ElemDesc
ATTRURL
elemDesc
setAttr
ElemDesc
ATTRURL
elemDesc
setAttr
ElemDesc
ATTRURL
elemDesc
setAttr
ElemDesc
ATTREMPTY
elemDesc
ElemDesc
m_elementFlags
get
elemDesc
setAttr
ElemDesc
ATTRURL
elemDesc
ElemDesc
m_elementFlags
get
elemDesc
setAttr
ElemDesc
ATTRURL
elemDesc
ElemDesc
m_elementFlags
get
elemDesc
setAttr
ElemDesc
ATTRURL
elemDesc
setAttr
ElemDesc
ATTRURL
elemDesc
ElemDesc
m_elementFlags
get
elemDesc
setAttr
ElemDesc
ATTRURL
elemDesc
setAttr
ElemDesc
ATTRURL
elemDesc
ElemDesc
m_elementFlags
get
elemDesc
setAttr
ElemDesc
ATTRURL
elemDesc
ElemDesc
m_elementFlags
get
elemDesc
setAttr
ElemDesc
ATTRURL
elemDesc
ElemDesc
m_elementFlags
get
elemDesc
setAttr
ElemDesc
ATTRURL
static
private
ElemDesc
m_dummy
new
ElemDesc
ElemDesc
BLOCK
private
boolean
m_specialEscapeURLs
private
boolean
m_omitMetaTag
private
ElemDesc
m_elementDesc
public
void
setSpecialEscapeURLs
boolean
bool
m_specialEscapeURLs
bool
public
void
setOmitMetaTag
boolean
bool
m_omitMetaTag
bool
public
void
setOutputFormat
Properties
format
m_specialEscapeURLs
OutputPropertyUtils
getBooleanProperty
OutputPropertiesFactory
S_USE_URL_ESCAPING
format
m_omitMetaTag
OutputPropertyUtils
getBooleanProperty
OutputPropertiesFactory
S_OMIT_META_TAG
format
super
setOutputFormat
format
private
final
boolean
getSpecialEscapeURLs
return
m_specialEscapeURLs
private
final
boolean
getOmitMetaTag
return
m_omitMetaTag
private
final
ElemDesc
getElemDesc
String
name
if
name
Object
obj
m_elementFlags
get
name
if
obj
return
ElemDesc
obj
return
m_dummy
public
ToHTMLStream
super
m_charInfo
m_htmlcharInfo
m_prefixMap
new
NamespaceMappings
private
String
m_currentElementName
protected
void
startDocumentInternal
throws
org
xml
sax
SAXException
super
startDocumentInternal
m_needToCallStartDocument
m_needToOutputDocTypeDecl
m_startNewLine
setOmitXMLDeclaration
if
m_needToOutputDocTypeDecl
String
doctypeSystem
getDoctypeSystem
String
doctypePublic
getDoctypePublic
if
doctypeSystem
doctypePublic
try
m_writer
write
if
doctypePublic
m_writer
write
m_writer
write
doctypePublic
m_writer
write
if
doctypeSystem
if
doctypePublic
m_writer
write
else
m_writer
write
m_writer
write
doctypeSystem
m_writer
write
m_writer
write
outputLineSep
catch
IOException
e
throw
new
SAXException
e
m_needToOutputDocTypeDecl
public
final
void
endDocument
throws
org
xml
sax
SAXException
flushPending
if
m_doIndent
m_isprevtext
try
outputLineSep
catch
IOException
e
throw
new
SAXException
e
flushWriter
super
fireEndDoc
public
void
startElement
String
namespaceURI
String
localName
String
name
Attributes
atts
throws
org
xml
sax
SAXException
if
m_cdataTagOpen
closeCDATA
else
if
m_needToCallStartDocument
startDocumentInternal
if
namespaceURI
namespaceURI
length
super
startElement
namespaceURI
localName
name
atts
return
try
boolean
savedDoIndent
m_doIndent
boolean
noLineBreak
if
m_startTagOpen
closeStartTag
m_startTagOpen
ElemDesc
elemDesc
getElemDesc
name
m_elementLocalName
localName
m_elementURI
namespaceURI
m_elementName
name
m_elementDesc
elemDesc
boolean
isBlockElement
elemDesc
is
ElemDesc
BLOCK
boolean
isHeadElement
elemDesc
is
ElemDesc
HEADELEM
if
m_ispreserve
m_ispreserve
else
if
m_doIndent
m_currentElementName
m_inBlockElem
isBlockElement
m_startNewLine
indent
m_inBlockElem
isBlockElement
m_isRawStack
push
elemDesc
is
ElemDesc
RAW
m_currentElementName
name
m_writer
write
m_writer
write
name
if
atts
addAttributes
atts
m_startTagOpen
m_currentElemDepth
m_isprevtext
m_doIndent
savedDoIndent
if
isHeadElement
if
m_startTagOpen
closeStartTag
if
m_omitMetaTag
if
m_doIndent
indent
m_writer
write
String
encoding
getEncoding
String
encode
Encodings
getMimeEncoding
encoding
m_writer
write
encode
m_writer
write
m_writer
write
catch
IOException
e
throw
new
SAXException
e
public
final
void
endElement
String
namespaceURI
String
localName
String
name
throws
org
xml
sax
SAXException
if
m_cdataTagOpen
closeCDATA
if
namespaceURI
namespaceURI
length
super
endElement
namespaceURI
localName
name
return
m_currentElemDepth
m_isRawStack
pop
ElemDesc
elemDesc
getElemDesc
name
m_elementDesc
elemDesc
boolean
isBlockElement
elemDesc
is
ElemDesc
BLOCK
boolean
shouldIndent
if
m_ispreserve
m_ispreserve
else
if
m_doIndent
m_inBlockElem
isBlockElement
m_startNewLine
shouldIndent
m_inBlockElem
isBlockElement
try
if
m_startTagOpen
if
shouldIndent
indent
m_writer
write
m_writer
write
name
m_writer
write
m_currentElementName
name
m_cdataSectionStates
pop
if
m_preserves
isEmpty
m_preserves
pop
else
processAttributes
if
elemDesc
is
ElemDesc
EMPTY
m_writer
write
m_writer
write
m_writer
write
m_writer
write
name
m_writer
write
else
m_writer
write
if
elemDesc
is
ElemDesc
WHITESPACESENSITIVE
m_ispreserve
m_startTagOpen
m_isprevtext
catch
IOException
e
throw
new
SAXException
e
super
fireEndElem
name
protected
void
processAttribute
String
name
String
value
ElemDesc
elemDesc
throws
IOException
m_writer
write
if
value
length
value
equalsIgnoreCase
name
elemDesc
elemDesc
isAttrFlagSet
name
ElemDesc
ATTREMPTY
m_writer
write
name
else
m_writer
write
name
m_writer
write
m_writer
write
if
elemDesc
elemDesc
isAttrFlagSet
name
ElemDesc
ATTRURL
writeAttrURI
value
m_specialEscapeURLs
else
writeAttrString
value
this
getEncoding
m_writer
write
private
boolean
isASCIIDigit
char
c
return
c
c
private
String
makeHHString
int
i
String
s
Integer
toHexString
i
toUpperCase
if
s
length
s
s
return
s
private
boolean
isHHSign
String
str
boolean
sign
try
char
r
char
Integer
parseInt
str
catch
NumberFormatException
e
sign
return
sign
public
void
writeAttrURI
String
string
boolean
doURLEscaping
throws
IOException
char
stringArray
string
toCharArray
int
len
stringArray
length
for
int
i
i
len
i
char
ch
stringArray
i
if
ch
ch
if
doURLEscaping
if
ch
m_writer
write
m_writer
write
makeHHString
ch
else
if
ch
int
high
ch
int
low
ch
m_writer
write
m_writer
write
makeHHString
high
m_writer
write
m_writer
write
makeHHString
low
else
if
isUTF16Surrogate
ch
int
highSurrogate
int
ch
int
wwww
highSurrogate
int
uuuuu
wwww
int
zzzz
highSurrogate
int
yyyyyy
highSurrogate
ch
stringArray
i
int
lowSurrogate
int
ch
yyyyyy
yyyyyy
lowSurrogate
int
xxxxxx
lowSurrogate
int
byte1
uuuuu
int
byte2
uuuuu
zzzz
int
byte3
yyyyyy
int
byte4
xxxxxx
m_writer
write
m_writer
write
makeHHString
byte1
m_writer
write
m_writer
write
makeHHString
byte2
m_writer
write
m_writer
write
makeHHString
byte3
m_writer
write
m_writer
write
makeHHString
byte4
else
int
high
ch
int
middle
ch
int
low
ch
m_writer
write
m_writer
write
makeHHString
high
m_writer
write
m_writer
write
makeHHString
middle
m_writer
write
m_writer
write
makeHHString
low
else
if
escapingNotNeeded
ch
m_writer
write
ch
else
m_writer
write
m_writer
write
Integer
toString
ch
m_writer
write
else
if
ch
m_writer
write
ch
else
if
ch
if
doURLEscaping
m_writer
write
else
m_writer
write
else
m_writer
write
ch
public
void
writeAttrString
String
string
String
encoding
throws
IOException
final
char
chars
string
toCharArray
final
int
strLen
chars
length
for
int
i
i
strLen
i
char
ch
chars
i
if
escapingNotNeeded
ch
m_charInfo
isSpecial
ch
m_writer
write
ch
else
if
ch
ch
m_writer
write
ch
else
if
ch
i
strLen
chars
i
m_writer
write
ch
else
int
pos
accumDefaultEntity
m_writer
ch
i
chars
strLen
if
i
pos
i
pos
else
if
isUTF16Surrogate
ch
i
writeUTF16Surrogate
ch
chars
i
strLen
String
entityName
m_charInfo
getEntityNameForChar
ch
if
entityName
m_writer
write
m_writer
write
entityName
m_writer
write
else
if
escapingNotNeeded
ch
m_writer
write
ch
else
m_writer
write
m_writer
write
Integer
toString
ch
m_writer
write
public
final
void
characters
char
chars
int
start
int
length
throws
org
xml
sax
SAXException
if
m_isRawStack
peekOrFalse
try
if
m_startTagOpen
closeStartTag
m_startTagOpen
m_ispreserve
writeNormalizedChars
chars
start
length
super
fireCharEvent
chars
start
length
return
catch
IOException
ioe
throw
new
org
xml
sax
SAXException
XMLMessages
createXMLMessage
XMLErrorResources
ER_OIERROR
ioe
else
super
characters
chars
start
length
public
final
void
cdata
char
ch
int
start
int
length
throws
org
xml
sax
SAXException
if
m_currentElementName
m_currentElementName
equalsIgnoreCase
m_currentElementName
equalsIgnoreCase
try
if
m_startTagOpen
closeStartTag
m_startTagOpen
m_ispreserve
if
shouldIndent
indent
writeNormalizedChars
ch
start
length
catch
IOException
ioe
throw
new
org
xml
sax
SAXException
XMLMessages
createXMLMessage
XMLErrorResources
ER_OIERROR
ioe
else
super
cdata
ch
start
length
public
void
processingInstruction
String
target
String
data
throws
org
xml
sax
SAXException
flushPending
if
target
equals
Result
PI_DISABLE_OUTPUT_ESCAPING
startNonEscaping
else
if
target
equals
Result
PI_ENABLE_OUTPUT_ESCAPING
endNonEscaping
else
try
if
m_startTagOpen
closeStartTag
m_startTagOpen
else
if
m_needToCallStartDocument
startDocumentInternal
if
shouldIndent
indent
m_writer
write
target
if
data
length
Character
isSpaceChar
data
charAt
m_writer
write
m_writer
write
data
if
m_currentElemDepth
outputLineSep
m_startNewLine
catch
IOException
e
throw
new
SAXException
e
super
fireEscapingEvent
target
data
public
final
void
entityReference
String
name
throws
org
xml
sax
SAXException
try
m_writer
write
m_writer
write
name
m_writer
write
catch
IOException
e
throw
new
SAXException
e
public
final
void
endElement
String
elemName
throws
SAXException
endElement
elemName
public
void
processAttributes
throws
IOException
SAXException
super
fireStartElem
m_elementName
int
nAttrs
if
nAttrs
m_attributes
getLength
for
int
i
i
nAttrs
i
processAttribute
m_attributes
getQName
i
m_attributes
getValue
i
m_elementDesc
m_attributes
clear
protected
void
closeStartTag
throws
SAXException
if
m_startTagOpen
try
processAttributes
m_writer
write
pushCdataSectionState
m_isprevtext
m_preserves
push
m_ispreserve
m_startTagOpen
catch
IOException
e
throw
new
SAXException
e
protected
synchronized
void
init
OutputStream
output
Properties
format
throws
UnsupportedEncodingException
if
format
format
OutputPropertiesFactory
getDefaultMethodProperties
Method
HTML
super
init
output
format
public
void
setOutputStream
OutputStream
output
try
Properties
format
if
m_format
format
OutputPropertiesFactory
getDefaultMethodProperties
Method
HTML
else
format
m_format
init
output
format
catch
UnsupportedEncodingException
uee
public
void
namespaceAfterStartElement
String
prefix
String
uri
throws
SAXException
if
m_elementURI
String
prefix1
getPrefixPart
m_elementName
if
prefix1
EMPTYSTRING
equals
prefix
m_elementURI
uri
startPrefixMapping
prefix
uri
