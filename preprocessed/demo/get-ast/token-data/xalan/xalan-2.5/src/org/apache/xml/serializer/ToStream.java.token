package
org
apache
xml
serializer
import
java
io
IOException
import
java
io
OutputStream
import
java
io
UnsupportedEncodingException
import
java
io
Writer
import
java
util
BitSet
import
java
util
Hashtable
import
java
util
Properties
import
java
util
StringTokenizer
import
java
util
Vector
import
javax
xml
transform
OutputKeys
import
javax
xml
transform
Transformer
import
org
apache
xml
res
XMLErrorResources
import
org
apache
xml
res
XMLMessages
import
org
apache
xml
utils
BoolStack
import
org
apache
xml
utils
FastStringBuffer
import
org
apache
xml
utils
QName
import
org
apache
xml
utils
SystemIDResolver
import
org
apache
xml
utils
TreeWalker
import
org
apache
xml
utils
WrappedRuntimeException
import
org
w3c
dom
Node
import
org
xml
sax
Attributes
import
org
xml
sax
ContentHandler
import
org
xml
sax
SAXException
abstract
public
class
ToStream
extends
SerializerBase
private
static
final
String
COMMENT_BEGIN
private
static
final
String
COMMENT_END
protected
BoolStack
m_disableOutputEscapingStates
new
BoolStack
boolean
m_triedToGetConverter
java
lang
reflect
Method
m_canConvertMeth
Object
m_charToByteConverter
protected
BoolStack
m_preserves
new
BoolStack
protected
boolean
m_ispreserve
protected
boolean
m_isprevtext
private
static
CharInfo
m_xmlcharInfo
CharInfo
getCharInfo
CharInfo
XML_ENTITIES_RESOURCE
protected
int
m_maxCharacter
Encodings
getLastPrintable
protected
final
char
m_lineSep
System
getProperty
toCharArray
protected
final
int
m_lineSepLen
m_lineSep
length
protected
CharInfo
m_charInfo
private
static
Hashtable
m_charInfos
boolean
m_shouldFlush
protected
boolean
m_spaceBeforeClose
boolean
m_startNewLine
protected
boolean
m_inDoctype
boolean
m_isUTF8
protected
Properties
m_format
protected
boolean
m_cdataStartCalled
public
ToStream
protected
void
closeCDATA
throws
org
xml
sax
SAXException
try
m_writer
write
CDATA_DELIMITER_CLOSE
m_cdataTagOpen
catch
IOException
e
throw
new
SAXException
e
public
void
serialize
Node
node
throws
IOException
try
TreeWalker
walker
new
TreeWalker
this
new
org
apache
xml
utils
DOM2Helper
walker
traverse
node
catch
org
xml
sax
SAXException
se
throw
new
WrappedRuntimeException
se
static
final
boolean
isUTF16Surrogate
char
c
return
c
private
boolean
m_escaping
protected
final
void
flushWriter
throws
org
xml
sax
SAXException
if
m_writer
try
if
m_writer
instanceof
WriterToUTF8Buffered
if
m_shouldFlush
WriterToUTF8Buffered
m_writer
flush
else
WriterToUTF8Buffered
m_writer
flushBuffer
if
m_writer
instanceof
WriterToUTF8
if
m_shouldFlush
m_writer
flush
else
if
m_writer
instanceof
WriterToASCI
if
m_shouldFlush
m_writer
flush
else
m_writer
flush
catch
IOException
ioe
throw
new
org
xml
sax
SAXException
ioe
public
OutputStream
getOutputStream
if
m_writer
instanceof
WriterToUTF8Buffered
return
WriterToUTF8Buffered
m_writer
getOutputStream
if
m_writer
instanceof
WriterToUTF8
return
WriterToUTF8
m_writer
getOutputStream
else
if
m_writer
instanceof
WriterToASCI
return
WriterToASCI
m_writer
getOutputStream
else
return
public
void
elementDecl
String
name
String
model
throws
SAXException
if
m_inExternalDTD
return
try
if
m_inDoctype
m_writer
write
m_writer
write
m_lineSep
m_lineSepLen
m_inDoctype
m_writer
write
m_writer
write
name
m_writer
write
m_writer
write
model
m_writer
write
m_writer
write
m_lineSep
m_lineSepLen
catch
IOException
e
throw
new
SAXException
e
public
void
internalEntityDecl
String
name
String
value
throws
SAXException
if
m_inExternalDTD
return
try
if
m_inDoctype
m_writer
write
m_writer
write
m_lineSep
m_lineSepLen
m_inDoctype
outputEntityDecl
name
value
catch
IOException
e
throw
new
SAXException
e
void
outputEntityDecl
String
name
String
value
throws
IOException
m_writer
write
m_writer
write
name
m_writer
write
m_writer
write
value
m_writer
write
m_writer
write
m_lineSep
m_lineSepLen
protected
final
void
outputLineSep
throws
IOException
m_writer
write
m_lineSep
m_lineSepLen
public
void
setOutputFormat
Properties
format
boolean
shouldFlush
m_shouldFlush
init
m_writer
format
m_shouldFlush
shouldFlush
private
synchronized
void
init
Writer
writer
Properties
format
boolean
defaultProperties
boolean
shouldFlush
m_shouldFlush
shouldFlush
if
m_tracer
writer
instanceof
SerializerTraceWriter
m_writer
new
SerializerTraceWriter
writer
m_tracer
else
m_writer
writer
m_format
format
setCdataSectionElements
OutputKeys
CDATA_SECTION_ELEMENTS
format
setIndentAmount
OutputPropertyUtils
getIntProperty
OutputPropertiesFactory
S_KEY_INDENT_AMOUNT
format
setIndent
OutputPropertyUtils
getBooleanProperty
OutputKeys
INDENT
format
boolean
shouldNotWriteXMLHeader
OutputPropertyUtils
getBooleanProperty
OutputKeys
OMIT_XML_DECLARATION
format
setOmitXMLDeclaration
shouldNotWriteXMLHeader
setDoctypeSystem
format
getProperty
OutputKeys
DOCTYPE_SYSTEM
String
doctypePublic
format
getProperty
OutputKeys
DOCTYPE_PUBLIC
setDoctypePublic
doctypePublic
if
format
get
OutputKeys
STANDALONE
String
val
format
getProperty
OutputKeys
STANDALONE
if
defaultProperties
setStandaloneInternal
val
else
setStandalone
val
setMediaType
format
getProperty
OutputKeys
MEDIA_TYPE
if
doctypePublic
if
doctypePublic
startsWith
m_spaceBeforeClose
String
encoding
getEncoding
if
encoding
encoding
Encodings
getMimeEncoding
format
getProperty
OutputKeys
ENCODING
setEncoding
encoding
m_isUTF8
encoding
equals
Encodings
DEFAULT_MIME_ENCODING
m_maxCharacter
Encodings
getLastPrintable
encoding
String
entitiesFileName
String
format
get
OutputPropertiesFactory
S_KEY_ENTITIES
if
entitiesFileName
m_charInfo
CharInfo
getCharInfo
entitiesFileName
private
synchronized
void
init
Writer
writer
Properties
format
init
writer
format
protected
synchronized
void
init
OutputStream
output
Properties
format
boolean
defaultProperties
throws
UnsupportedEncodingException
String
encoding
getEncoding
if
encoding
encoding
Encodings
getMimeEncoding
format
getProperty
OutputKeys
ENCODING
setEncoding
encoding
if
encoding
equalsIgnoreCase
m_isUTF8
if
output
instanceof
java
io
BufferedOutputStream
init
new
WriterToUTF8
output
format
defaultProperties
else
init
new
WriterToUTF8Buffered
output
format
defaultProperties
else
if
encoding
equals
encoding
equals
encoding
equals
init
new
WriterToASCI
output
format
defaultProperties
else
Writer
osw
try
osw
Encodings
getWriter
output
encoding
catch
UnsupportedEncodingException
uee
System
out
println
encoding
Encodings
DEFAULT_MIME_ENCODING
encoding
Encodings
DEFAULT_MIME_ENCODING
setEncoding
encoding
osw
Encodings
getWriter
output
encoding
m_maxCharacter
Encodings
getLastPrintable
encoding
init
osw
format
defaultProperties
public
Properties
getOutputFormat
return
m_format
public
void
setWriter
Writer
writer
if
m_tracer
writer
instanceof
SerializerTraceWriter
m_writer
new
SerializerTraceWriter
writer
m_tracer
else
m_writer
writer
public
void
setOutputStream
OutputStream
output
try
Properties
format
if
m_format
format
OutputPropertiesFactory
getDefaultMethodProperties
Method
XML
else
format
m_format
init
output
format
catch
UnsupportedEncodingException
uee
public
boolean
setEscaping
boolean
escape
final
boolean
temp
m_escaping
m_escaping
escape
return
temp
public
boolean
reset
m_needToCallStartDocument
return
protected
void
indent
throws
IOException
if
m_startNewLine
outputLineSep
if
m_indentAmount
printSpace
m_currentElemDepth
m_indentAmount
private
void
printSpace
int
n
throws
IOException
for
int
i
i
n
i
m_writer
write
public
void
attributeDecl
String
eName
String
aName
String
type
String
valueDefault
String
value
throws
SAXException
if
m_inExternalDTD
return
try
if
m_inDoctype
m_writer
write
m_writer
write
m_lineSep
m_lineSepLen
m_inDoctype
m_writer
write
m_writer
write
eName
m_writer
write
m_writer
write
aName
m_writer
write
m_writer
write
type
if
valueDefault
m_writer
write
m_writer
write
valueDefault
m_writer
write
m_writer
write
m_lineSep
m_lineSepLen
catch
IOException
e
throw
new
SAXException
e
public
Writer
getWriter
return
m_writer
public
void
externalEntityDecl
String
name
String
publicId
String
systemId
throws
SAXException
protected
boolean
escapingNotNeeded
char
ch
if
ch
if
ch
ch
ch
ch
return
else
return
if
m_charToByteConverter
m_triedToGetConverter
m_triedToGetConverter
try
m_charToByteConverter
Encodings
getCharToByteConverter
getEncoding
if
m_charToByteConverter
Class
argsTypes
new
Class
argsTypes
Character
TYPE
Class
convClass
m_charToByteConverter
getClass
m_canConvertMeth
convClass
getMethod
argsTypes
catch
Exception
e
System
err
println
e
getMessage
if
m_charToByteConverter
try
Object
args
new
Object
args
new
Character
ch
Boolean
bool
Boolean
m_canConvertMeth
invoke
m_charToByteConverter
args
return
bool
booleanValue
Character
isISOControl
ch
catch
java
lang
reflect
InvocationTargetException
ite
System
err
println
catch
java
lang
IllegalAccessException
iae
System
err
println
return
ch
m_maxCharacter
protected
int
writeUTF16Surrogate
char
c
char
ch
int
i
int
end
throws
IOException
int
surrogateValue
getURF16SurrogateValue
c
ch
i
end
i
m_writer
write
m_writer
write
m_writer
write
Integer
toString
surrogateValue
m_writer
write
return
i
int
getURF16SurrogateValue
char
c
char
ch
int
i
int
end
throws
IOException
int
next
if
i
end
throw
new
IOException
XMLMessages
createXMLMessage
XMLErrorResources
ER_INVALID_UTF16_SURROGATE
new
Object
Integer
toHexString
int
c
else
next
ch
i
if
next
next
throw
new
IOException
XMLMessages
createXMLMessage
XMLErrorResources
ER_INVALID_UTF16_SURROGATE
new
Object
Integer
toHexString
int
c
Integer
toHexString
next
next
c
next
return
next
protected
int
accumDefaultEntity
java
io
Writer
writer
char
ch
int
i
char
chars
int
len
boolean
escLF
throws
IOException
if
escLF
CharInfo
S_LINEFEED
ch
writer
write
m_lineSep
m_lineSepLen
else
if
m_charInfo
isSpecial
ch
String
entityRef
m_charInfo
getEntityNameForChar
ch
if
entityRef
writer
write
writer
write
entityRef
writer
write
else
return
i
else
return
i
return
i
void
writeNormalizedChars
char
ch
int
start
int
length
boolean
isCData
throws
IOException
org
xml
sax
SAXException
int
end
start
length
for
int
i
start
i
end
i
char
c
ch
i
if
CharInfo
S_LINEFEED
c
m_writer
write
m_lineSep
m_lineSepLen
else
if
isCData
escapingNotNeeded
c
if
m_cdataTagOpen
closeCDATA
if
isUTF16Surrogate
c
i
writeUTF16Surrogate
c
ch
i
end
else
m_writer
write
String
intStr
Integer
toString
int
c
m_writer
write
intStr
m_writer
write
else
if
isCData
i
end
c
ch
i
ch
i
m_writer
write
CDATA_CONTINUE
i
else
if
escapingNotNeeded
c
if
isCData
m_cdataTagOpen
m_writer
write
CDATA_DELIMITER_OPEN
m_cdataTagOpen
m_writer
write
c
else
if
isUTF16Surrogate
c
if
m_cdataTagOpen
closeCDATA
i
writeUTF16Surrogate
c
ch
i
end
else
if
m_cdataTagOpen
closeCDATA
m_writer
write
String
intStr
Integer
toString
int
c
m_writer
write
intStr
m_writer
write
public
void
endNonEscaping
throws
org
xml
sax
SAXException
m_disableOutputEscapingStates
pop
public
void
startNonEscaping
throws
org
xml
sax
SAXException
m_disableOutputEscapingStates
push
protected
void
cdata
char
ch
int
start
final
int
length
throws
org
xml
sax
SAXException
try
final
int
old_start
start
if
m_startTagOpen
closeStartTag
m_startTagOpen
m_ispreserve
if
shouldIndent
indent
boolean
writeCDataBrackets
length
escapingNotNeeded
ch
start
if
writeCDataBrackets
m_cdataTagOpen
m_writer
write
CDATA_DELIMITER_OPEN
m_cdataTagOpen
if
isEscapingDisabled
charactersRaw
ch
start
length
else
writeNormalizedChars
ch
start
length
if
writeCDataBrackets
if
ch
start
length
closeCDATA
super
fireCDATAEvent
ch
old_start
length
catch
IOException
ioe
throw
new
org
xml
sax
SAXException
XMLMessages
createXMLMessage
XMLErrorResources
ER_OIERROR
ioe
private
boolean
isEscapingDisabled
return
m_disableOutputEscapingStates
peekOrFalse
protected
void
charactersRaw
char
ch
int
start
int
length
throws
org
xml
sax
SAXException
if
m_inEntityRef
return
try
if
m_startTagOpen
closeStartTag
m_startTagOpen
m_ispreserve
m_writer
write
ch
start
length
catch
IOException
e
throw
new
SAXException
e
public
void
characters
char
chars
int
start
int
length
throws
org
xml
sax
SAXException
if
length
super
fireCharEvent
chars
start
length
return
if
m_startTagOpen
closeStartTag
m_startTagOpen
else
if
m_needToCallStartDocument
startDocumentInternal
if
m_cdataStartCalled
m_cdataSectionStates
peekOrFalse
cdata
chars
start
length
return
if
m_cdataTagOpen
closeCDATA
if
m_disableOutputEscapingStates
peekOrFalse
m_escaping
charactersRaw
chars
start
length
super
fireCharEvent
chars
start
length
return
if
m_startTagOpen
closeStartTag
int
startClean
start
int
lengthClean
int
end
start
length
boolean
checkWhite
final
int
maxCharacter
m_maxCharacter
final
BitSet
specialsMap
m_charInfo
m_specialsMap
try
for
int
i
start
i
end
i
char
ch
chars
i
if
checkWhite
ch
ch
ch
ch
ch
m_ispreserve
checkWhite
if
ch
ch
ch
ch
ch
specialsMap
get
ch
ch
lengthClean
else
if
escapingNotNeeded
ch
specialsMap
get
ch
ch
lengthClean
else
if
lengthClean
m_writer
write
chars
startClean
lengthClean
lengthClean
if
CharInfo
S_LINEFEED
ch
m_writer
write
m_lineSep
m_lineSepLen
startClean
i
else
startClean
accumDefaultEscape
m_writer
ch
i
chars
end
i
startClean
if
lengthClean
m_writer
write
chars
startClean
lengthClean
m_isprevtext
catch
IOException
e
throw
new
SAXException
e
super
fireCharEvent
chars
start
length
public
void
characters
String
s
throws
org
xml
sax
SAXException
characters
s
toCharArray
s
length
protected
int
accumDefaultEscape
Writer
writer
char
ch
int
i
char
chars
int
len
boolean
escLF
throws
IOException
int
pos
accumDefaultEntity
writer
ch
i
chars
len
escLF
if
i
pos
pos
if
ch
ch
int
next
if
i
len
throw
new
IOException
XMLMessages
createXMLMessage
XMLErrorResources
ER_INVALID_UTF16_SURROGATE
new
Object
Integer
toHexString
ch
else
next
chars
i
if
next
next
throw
new
IOException
XMLMessages
createXMLMessage
XMLErrorResources
ER_INVALID_UTF16_SURROGATE
new
Object
Integer
toHexString
ch
Integer
toHexString
next
next
ch
next
writer
write
writer
write
Integer
toString
next
writer
write
else
if
escapingNotNeeded
ch
m_charInfo
isSpecial
ch
writer
write
writer
write
Integer
toString
ch
writer
write
else
writer
write
ch
return
pos
public
void
startElement
String
namespaceURI
String
localName
String
name
Attributes
atts
throws
org
xml
sax
SAXException
if
m_inEntityRef
return
if
m_needToCallStartDocument
startDocumentInternal
m_needToCallStartDocument
else
if
m_cdataTagOpen
closeCDATA
try
if
m_needToOutputDocTypeDecl
getDoctypeSystem
outputDocTypeDecl
name
m_needToOutputDocTypeDecl
if
m_startTagOpen
closeStartTag
m_startTagOpen
if
namespaceURI
ensurePrefixIsDeclared
namespaceURI
name
m_elementLocalName
localName
m_elementURI
namespaceURI
m_elementName
name
m_ispreserve
if
shouldIndent
m_startNewLine
indent
m_startNewLine
m_writer
write
m_writer
write
name
catch
IOException
e
throw
new
SAXException
e
if
atts
addAttributes
atts
m_startTagOpen
m_currentElemDepth
m_isprevtext
public
void
startElement
String
elementNamespaceURI
String
elementLocalName
String
elementName
throws
SAXException
startElement
elementNamespaceURI
elementLocalName
elementName
public
void
startElement
String
elementName
throws
SAXException
startElement
elementName
void
outputDocTypeDecl
String
name
boolean
closeDecl
throws
SAXException
if
m_cdataTagOpen
closeCDATA
try
m_writer
write
m_writer
write
name
String
doctypePublic
getDoctypePublic
if
doctypePublic
m_writer
write
m_writer
write
doctypePublic
m_writer
write
String
doctypeSystem
getDoctypeSystem
if
doctypeSystem
if
doctypePublic
m_writer
write
else
m_writer
write
m_writer
write
doctypeSystem
if
closeDecl
m_writer
write
m_writer
write
m_lineSep
m_lineSepLen
closeDecl
else
m_writer
write
boolean
dothis
if
dothis
if
closeDecl
m_writer
write
m_writer
write
m_lineSep
m_lineSepLen
catch
IOException
e
throw
new
SAXException
e
public
void
processAttributes
throws
IOException
SAXException
super
fireStartElem
m_elementName
int
nAttrs
if
nAttrs
m_attributes
getLength
String
encoding
getEncoding
for
int
i
i
nAttrs
i
final
String
name
m_attributes
getQName
i
final
String
value
m_attributes
getValue
i
m_writer
write
m_writer
write
name
m_writer
write
writeAttrString
m_writer
value
encoding
m_writer
write
m_attributes
clear
public
void
writeAttrString
Writer
writer
String
string
String
encoding
throws
IOException
final
char
stringChars
string
toCharArray
final
int
len
stringChars
length
for
int
i
i
len
i
char
ch
stringChars
i
if
escapingNotNeeded
ch
m_charInfo
isSpecial
ch
writer
write
ch
else
if
CharInfo
S_CARRIAGERETURN
ch
i
len
CharInfo
S_LINEFEED
stringChars
i
i
ch
CharInfo
S_LINEFEED
accumDefaultEscape
writer
ch
i
stringChars
len
public
void
endElement
String
namespaceURI
String
localName
String
name
throws
org
xml
sax
SAXException
if
m_inEntityRef
return
m_prefixMap
popNamespaces
m_currentElemDepth
m_currentElemDepth
try
if
m_startTagOpen
processAttributes
if
m_spaceBeforeClose
m_writer
write
else
m_writer
write
else
if
m_cdataTagOpen
closeCDATA
if
shouldIndent
indent
m_writer
write
m_writer
write
m_writer
write
name
m_writer
write
m_cdataSectionStates
pop
catch
IOException
e
throw
new
SAXException
e
if
m_startTagOpen
m_ispreserve
m_preserves
isEmpty
m_preserves
pop
m_isprevtext
m_startTagOpen
super
fireEndElem
name
public
void
endElement
String
name
throws
org
xml
sax
SAXException
endElement
name
public
void
startPrefixMapping
String
prefix
String
uri
throws
org
xml
sax
SAXException
startPrefixMapping
prefix
uri
public
boolean
startPrefixMapping
String
prefix
String
uri
boolean
shouldFlush
throws
org
xml
sax
SAXException
boolean
pushed
int
pushDepth
if
shouldFlush
flushPending
pushDepth
m_currentElemDepth
else
pushDepth
m_currentElemDepth
pushed
m_prefixMap
pushNamespace
prefix
uri
pushDepth
if
pushed
String
name
if
EMPTYSTRING
equals
prefix
name
addAttributeAlways
XMLNS_URI
prefix
name
uri
else
if
EMPTYSTRING
equals
uri
name
prefix
addAttributeAlways
XMLNS_URI
prefix
name
uri
return
pushed
public
void
comment
char
ch
int
start
int
length
throws
org
xml
sax
SAXException
int
start_old
start
if
m_inEntityRef
return
if
m_startTagOpen
closeStartTag
m_startTagOpen
else
if
m_needToCallStartDocument
startDocumentInternal
m_needToCallStartDocument
try
if
shouldIndent
indent
final
int
limit
start
length
boolean
wasDash
if
m_cdataTagOpen
closeCDATA
m_writer
write
COMMENT_BEGIN
for
int
i
start
i
limit
i
if
wasDash
ch
i
m_writer
write
ch
start
i
start
m_writer
write
start
i
wasDash
ch
i
if
length
final
int
remainingChars
limit
start
if
remainingChars
m_writer
write
ch
start
remainingChars
if
ch
limit
m_writer
write
m_writer
write
COMMENT_END
catch
IOException
e
throw
new
SAXException
e
m_startNewLine
super
fireCommentEvent
ch
start_old
length
public
void
endCDATA
throws
org
xml
sax
SAXException
if
m_cdataTagOpen
closeCDATA
m_cdataStartCalled
public
void
endDTD
throws
org
xml
sax
SAXException
try
if
m_needToOutputDocTypeDecl
outputDocTypeDecl
m_elementName
m_needToOutputDocTypeDecl
if
m_inDoctype
m_writer
write
else
m_writer
write
m_writer
write
m_lineSep
m_lineSepLen
catch
IOException
e
throw
new
SAXException
e
public
void
endPrefixMapping
String
prefix
throws
org
xml
sax
SAXException
public
void
ignorableWhitespace
char
ch
int
start
int
length
throws
org
xml
sax
SAXException
if
length
return
characters
ch
start
length
public
void
skippedEntity
String
name
throws
org
xml
sax
SAXException
public
void
startCDATA
throws
org
xml
sax
SAXException
m_cdataStartCalled
public
void
startEntity
String
name
throws
org
xml
sax
SAXException
if
name
equals
m_inExternalDTD
m_inEntityRef
protected
void
closeStartTag
throws
SAXException
if
m_startTagOpen
try
processAttributes
m_writer
write
catch
IOException
e
throw
new
SAXException
e
pushCdataSectionState
m_isprevtext
m_preserves
push
m_ispreserve
m_startTagOpen
public
void
startDTD
String
name
String
publicId
String
systemId
throws
org
xml
sax
SAXException
setDoctypeSystem
systemId
setDoctypePublic
publicId
m_elementName
name
m_inDoctype
public
int
getIndentAmount
return
m_indentAmount
public
void
setIndentAmount
int
m_indentAmount
this
m_indentAmount
m_indentAmount
protected
boolean
shouldIndent
return
m_doIndent
m_ispreserve
m_isprevtext
private
void
setCdataSectionElements
String
key
Properties
props
String
s
props
getProperty
key
if
s
Vector
v
new
Vector
int
l
s
length
boolean
inCurly
FastStringBuffer
buf
new
FastStringBuffer
for
int
i
i
l
i
char
c
s
charAt
i
if
Character
isWhitespace
c
if
inCurly
if
buf
length
addCdataSectionElement
buf
toString
v
buf
reset
continue
else
if
c
inCurly
else
if
c
inCurly
buf
append
c
if
buf
length
addCdataSectionElement
buf
toString
v
buf
reset
setCdataSectionElements
v
private
void
addCdataSectionElement
String
URI_and_localName
Vector
v
StringTokenizer
tokenizer
new
StringTokenizer
URI_and_localName
QName
qname
String
s1
tokenizer
nextToken
String
s2
tokenizer
hasMoreTokens
tokenizer
nextToken
if
s2
v
addElement
v
addElement
s1
else
v
addElement
s1
v
addElement
s2
public
void
setCdataSectionElements
Vector
URI_and_localNames
m_cdataSectionElements
URI_and_localNames
protected
String
ensureAttributesNamespaceIsDeclared
String
ns
String
localName
String
rawName
throws
org
xml
sax
SAXException
if
ns
ns
length
int
index
String
prefixFromRawName
index
rawName
indexOf
rawName
substring
index
if
index
String
uri
m_prefixMap
lookupNamespace
prefixFromRawName
if
uri
uri
equals
ns
return
else
this
startPrefixMapping
prefixFromRawName
ns
this
addAttribute
prefixFromRawName
prefixFromRawName
ns
return
prefixFromRawName
else
String
prefix
m_prefixMap
lookupPrefix
ns
if
prefix
prefix
m_prefixMap
generateNextPrefix
this
startPrefixMapping
prefix
ns
this
addAttribute
prefix
prefix
ns
return
prefix
return
private
void
ensurePrefixIsDeclared
String
ns
String
rawName
throws
org
xml
sax
SAXException
if
ns
ns
length
int
index
String
prefix
index
rawName
indexOf
rawName
substring
index
if
prefix
String
foundURI
m_prefixMap
lookupNamespace
prefix
if
foundURI
foundURI
equals
ns
this
startPrefixMapping
prefix
ns
this
addAttributeAlways
prefix
prefix
length
prefix
ns
public
void
flushPending
try
if
m_needToCallStartDocument
startDocumentInternal
m_needToCallStartDocument
if
m_startTagOpen
closeStartTag
m_startTagOpen
if
m_cdataTagOpen
closeCDATA
m_cdataTagOpen
catch
SAXException
e
public
void
setContentHandler
ContentHandler
ch
public
void
addAttributeAlways
String
uri
String
localName
String
rawName
String
type
String
value
int
index
index
m_attributes
getIndex
rawName
if
index
String
old_value
if
m_tracer
old_value
m_attributes
getValue
index
if
value
equals
old_value
old_value
m_attributes
setValue
index
value
if
old_value
firePseudoAttributes
else
m_attributes
addAttribute
uri
localName
rawName
type
value
if
m_tracer
firePseudoAttributes
protected
void
firePseudoAttributes
int
nAttrs
if
m_tracer
nAttrs
m_attributes
getLength
String
encoding
getEncoding
StringBuffer
sb
new
StringBuffer
java
io
Writer
writer
new
ToStream
WritertoStringBuffer
sb
try
for
int
i
i
nAttrs
i
final
String
name
m_attributes
getQName
i
final
String
value
m_attributes
getValue
i
sb
append
sb
append
name
sb
append
writeAttrString
writer
value
encoding
sb
append
catch
IOException
ioe
char
ch
sb
toString
toCharArray
m_tracer
fireGenerateEvent
SerializerTrace
EVENTTYPE_OUTPUT_PSEUDO_CHARACTERS
ch
ch
length
private
class
WritertoStringBuffer
extends
java
io
Writer
final
private
StringBuffer
m_stringbuf
WritertoStringBuffer
StringBuffer
sb
m_stringbuf
sb
public
void
write
char
arg0
int
arg1
int
arg2
throws
IOException
m_stringbuf
append
arg0
arg1
arg2
public
void
flush
throws
IOException
public
void
close
throws
IOException
public
void
write
int
i
m_stringbuf
append
char
i
public
void
write
String
s
m_stringbuf
append
s
public
void
setTransformer
Transformer
transformer
super
setTransformer
transformer
if
m_tracer
m_writer
instanceof
SerializerTraceWriter
m_writer
new
SerializerTraceWriter
m_writer
m_tracer
