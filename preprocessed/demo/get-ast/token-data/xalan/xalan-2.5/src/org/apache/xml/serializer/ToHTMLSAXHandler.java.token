package
org
apache
xml
serializer
import
java
io
IOException
import
java
io
OutputStream
import
java
io
Writer
import
java
util
Properties
import
javax
xml
transform
Result
import
org
w3c
dom
Node
import
org
xml
sax
Attributes
import
org
xml
sax
ContentHandler
import
org
xml
sax
Locator
import
org
xml
sax
SAXException
import
org
xml
sax
ext
LexicalHandler
public
class
ToHTMLSAXHandler
extends
ToSAXHandler
protected
boolean
m_escapeSetting
public
Properties
getOutputFormat
return
public
OutputStream
getOutputStream
return
public
Writer
getWriter
return
public
void
indent
int
n
throws
SAXException
public
boolean
reset
return
public
void
serialize
Node
node
throws
IOException
return
public
boolean
setEscaping
boolean
escape
throws
SAXException
boolean
oldEscapeSetting
m_escapeSetting
m_escapeSetting
escape
if
escape
processingInstruction
Result
PI_ENABLE_OUTPUT_ESCAPING
else
processingInstruction
Result
PI_DISABLE_OUTPUT_ESCAPING
return
oldEscapeSetting
public
void
setIndent
boolean
indent
public
void
setOutputFormat
Properties
format
public
void
setOutputStream
OutputStream
output
public
void
setWriter
Writer
writer
public
void
attributeDecl
String
eName
String
aName
String
type
String
valueDefault
String
value
throws
SAXException
public
void
elementDecl
String
name
String
model
throws
SAXException
return
public
void
externalEntityDecl
String
arg0
String
arg1
String
arg2
throws
SAXException
public
void
internalEntityDecl
String
name
String
value
throws
SAXException
public
void
endElement
String
uri
String
localName
String
qName
throws
SAXException
flushPending
m_saxHandler
endElement
uri
localName
qName
super
fireEndElem
qName
public
void
endPrefixMapping
String
prefix
throws
SAXException
public
void
ignorableWhitespace
char
ch
int
start
int
length
throws
SAXException
public
void
processingInstruction
String
arg0
String
arg1
throws
SAXException
flushPending
m_saxHandler
processingInstruction
arg0
arg1
super
fireEscapingEvent
arg0
arg1
public
void
setDocumentLocator
Locator
arg0
public
void
skippedEntity
String
arg0
throws
SAXException
public
void
startElement
String
namespaceURI
String
localName
String
qName
Attributes
atts
throws
SAXException
flushPending
super
startElement
namespaceURI
localName
qName
atts
m_saxHandler
startElement
namespaceURI
localName
qName
atts
m_startTagOpen
public
void
comment
char
ch
int
start
int
length
throws
SAXException
flushPending
m_lexHandler
comment
ch
start
length
super
fireCommentEvent
ch
start
length
return
public
void
endCDATA
throws
SAXException
return
public
void
endDTD
throws
SAXException
public
void
startCDATA
throws
SAXException
public
void
startEntity
String
arg0
throws
SAXException
public
void
endDocument
throws
SAXException
flushPending
m_saxHandler
endDocument
super
fireEndDoc
protected
void
closeStartTag
throws
SAXException
m_startTagOpen
m_saxHandler
startElement
EMPTYSTRING
m_elementName
m_elementName
m_attributes
m_attributes
clear
public
void
close
return
public
void
characters
String
chars
throws
SAXException
this
characters
chars
toCharArray
chars
length
return
public
ToHTMLSAXHandler
ContentHandler
handler
String
encoding
super
handler
encoding
public
ToHTMLSAXHandler
ContentHandler
handler
LexicalHandler
lex
String
encoding
super
handler
lex
encoding
public
void
startElement
String
elementNamespaceURI
String
elementLocalName
String
elementName
throws
SAXException
super
startElement
elementNamespaceURI
elementLocalName
elementName
flushPending
if
m_lexHandler
String
doctypeSystem
getDoctypeSystem
String
doctypePublic
getDoctypePublic
if
doctypeSystem
doctypePublic
m_lexHandler
startDTD
elementName
doctypePublic
doctypeSystem
m_lexHandler
m_currentElemDepth
m_elementName
elementName
m_elementLocalName
elementLocalName
m_elementURI
elementNamespaceURI
m_startTagOpen
public
void
startElement
String
elementName
throws
SAXException
this
startElement
elementName
public
void
endElement
String
elementName
throws
SAXException
flushPending
m_saxHandler
endElement
EMPTYSTRING
elementName
elementName
super
fireEndElem
elementName
public
void
characters
char
ch
int
off
int
len
throws
SAXException
flushPending
m_saxHandler
characters
ch
off
len
super
fireCharEvent
ch
off
len
public
void
flushPending
if
m_needToCallStartDocument
try
startDocumentInternal
m_needToCallStartDocument
catch
SAXException
e
if
m_startTagOpen
try
closeStartTag
catch
SAXException
se
m_startTagOpen
public
boolean
startPrefixMapping
String
prefix
String
uri
boolean
shouldFlush
throws
SAXException
if
shouldFlush
flushPending
m_saxHandler
startPrefixMapping
prefix
uri
return
public
void
startPrefixMapping
String
prefix
String
uri
throws
org
xml
sax
SAXException
startPrefixMapping
prefix
uri
public
void
namespaceAfterStartElement
final
String
prefix
final
String
uri
throws
SAXException
if
m_elementURI
String
prefix1
getPrefixPart
m_elementName
if
prefix1
EMPTYSTRING
equals
prefix
m_elementURI
uri
startPrefixMapping
prefix
uri
