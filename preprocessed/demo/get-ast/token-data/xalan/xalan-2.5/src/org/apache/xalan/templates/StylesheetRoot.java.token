package
org
apache
xalan
templates
import
java
text
DecimalFormatSymbols
import
java
util
Hashtable
import
java
util
Properties
import
java
util
Vector
import
javax
xml
transform
ErrorListener
import
javax
xml
transform
Templates
import
javax
xml
transform
Transformer
import
javax
xml
transform
TransformerConfigurationException
import
javax
xml
transform
TransformerException
import
org
apache
xalan
extensions
ExtensionNamespacesManager
import
org
apache
xalan
processor
XSLTSchema
import
org
apache
xalan
res
XSLMessages
import
org
apache
xalan
res
XSLTErrorResources
import
org
apache
xalan
transformer
TransformerImpl
import
org
apache
xml
dtm
DTM
import
org
apache
xml
dtm
ref
ExpandedNameTable
import
org
apache
xml
utils
IntStack
import
org
apache
xml
utils
QName
import
org
apache
xpath
XPath
import
org
apache
xpath
XPathContext
public
class
StylesheetRoot
extends
StylesheetComposed
implements
java
io
Serializable
Templates
public
StylesheetRoot
ErrorListener
errorListener
throws
TransformerConfigurationException
super
setStylesheetRoot
this
try
m_selectDefault
new
XPath
this
this
XPath
SELECT
errorListener
initDefaultRule
errorListener
catch
TransformerException
se
throw
new
TransformerConfigurationException
XSLMessages
createMessage
XSLTErrorResources
ER_CANNOT_INIT_DEFAULT_TEMPLATES
se
private
Hashtable
m_availElems
public
StylesheetRoot
XSLTSchema
schema
ErrorListener
listener
throws
TransformerConfigurationException
this
listener
m_availElems
schema
getElemsAvailable
public
boolean
isRoot
return
public
Hashtable
getAvailableElements
return
m_availElems
private
ExtensionNamespacesManager
m_extNsMgr
public
ExtensionNamespacesManager
getExtensionNamespacesManager
if
m_extNsMgr
m_extNsMgr
new
ExtensionNamespacesManager
return
m_extNsMgr
public
Vector
getExtensions
return
m_extNsMgr
m_extNsMgr
getExtensions
public
Transformer
newTransformer
return
new
TransformerImpl
this
public
Properties
getDefaultOutputProps
return
m_outputProperties
getProperties
public
Properties
getOutputProperties
return
Properties
getDefaultOutputProps
clone
public
void
recompose
throws
TransformerException
Vector
recomposableElements
new
Vector
if
m_globalImportList
Vector
importList
new
Vector
addImports
this
importList
m_globalImportList
new
StylesheetComposed
importList
size
for
int
i
j
importList
size
i
importList
size
i
m_globalImportList
j
StylesheetComposed
importList
elementAt
i
m_globalImportList
j
recomposeIncludes
m_globalImportList
j
m_globalImportList
j
recomposeImports
int
n
getGlobalImportCount
for
int
i
i
n
i
StylesheetComposed
imported
getGlobalImport
i
imported
recompose
recomposableElements
QuickSort2
recomposableElements
recomposableElements
size
m_outputProperties
new
OutputProperties
org
apache
xml
serializer
Method
UNKNOWN
m_attrSets
new
Hashtable
m_decimalFormatSymbols
new
Hashtable
m_keyDecls
new
Vector
m_namespaceAliasComposed
new
Hashtable
m_templateList
new
TemplateList
m_variables
new
Vector
for
int
i
recomposableElements
size
i
i
ElemTemplateElement
recomposableElements
elementAt
i
recompose
this
initComposeState
m_templateList
compose
this
m_outputProperties
compose
this
m_outputProperties
endCompose
this
n
getGlobalImportCount
for
int
i
i
n
i
StylesheetComposed
imported
this
getGlobalImport
i
int
includedCount
imported
getIncludeCountComposed
for
int
j
j
includedCount
j
Stylesheet
included
imported
getIncludeComposed
j
composeTemplates
included
if
m_extNsMgr
m_extNsMgr
registerUnregisteredNamespaces
clearComposeState
void
composeTemplates
ElemTemplateElement
templ
throws
TransformerException
templ
compose
this
for
ElemTemplateElement
child
templ
getFirstChildElem
child
child
child
getNextSiblingElem
composeTemplates
child
templ
endCompose
this
private
StylesheetComposed
m_globalImportList
protected
void
addImports
Stylesheet
stylesheet
boolean
addToList
Vector
importList
int
n
stylesheet
getImportCount
if
n
for
int
i
i
n
i
Stylesheet
imported
stylesheet
getImport
i
addImports
imported
importList
n
stylesheet
getIncludeCount
if
n
for
int
i
i
n
i
Stylesheet
included
stylesheet
getInclude
i
addImports
included
importList
if
addToList
importList
addElement
stylesheet
public
StylesheetComposed
getGlobalImport
int
i
return
m_globalImportList
i
public
int
getGlobalImportCount
return
m_globalImportList
m_globalImportList
length
public
int
getImportNumber
StylesheetComposed
sheet
if
this
sheet
return
int
n
getGlobalImportCount
for
int
i
i
n
i
if
sheet
getGlobalImport
i
return
i
return
private
OutputProperties
m_outputProperties
void
recomposeOutput
OutputProperties
oprops
throws
TransformerException
m_outputProperties
copyFrom
oprops
public
OutputProperties
getOutputComposed
return
m_outputProperties
private
boolean
m_outputMethodSet
public
boolean
isOutputMethodSet
return
m_outputMethodSet
private
Hashtable
m_attrSets
void
recomposeAttributeSets
ElemAttributeSet
attrSet
Vector
attrSetList
Vector
m_attrSets
get
attrSet
getName
if
attrSetList
attrSetList
new
Vector
m_attrSets
put
attrSet
getName
attrSetList
attrSetList
addElement
attrSet
public
Vector
getAttributeSetComposed
QName
name
throws
ArrayIndexOutOfBoundsException
return
Vector
m_attrSets
get
name
private
Hashtable
m_decimalFormatSymbols
void
recomposeDecimalFormats
DecimalFormatProperties
dfp
DecimalFormatSymbols
oldDfs
DecimalFormatSymbols
m_decimalFormatSymbols
get
dfp
getName
if
oldDfs
m_decimalFormatSymbols
put
dfp
getName
dfp
getDecimalFormatSymbols
else
if
dfp
getDecimalFormatSymbols
equals
oldDfs
String
themsg
if
dfp
getName
equals
new
QName
themsg
XSLMessages
createWarning
XSLTErrorResources
WG_ONE_DEFAULT_XSLDECIMALFORMAT_ALLOWED
new
Object
else
themsg
XSLMessages
createWarning
XSLTErrorResources
WG_XSLDECIMALFORMAT_NAMES_MUST_BE_UNIQUE
new
Object
dfp
getName
error
themsg
public
DecimalFormatSymbols
getDecimalFormatComposed
QName
name
return
DecimalFormatSymbols
m_decimalFormatSymbols
get
name
private
Vector
m_keyDecls
void
recomposeKeys
KeyDeclaration
keyDecl
m_keyDecls
addElement
keyDecl
public
Vector
getKeysComposed
return
m_keyDecls
private
Hashtable
m_namespaceAliasComposed
void
recomposeNamespaceAliases
NamespaceAlias
nsAlias
m_namespaceAliasComposed
put
nsAlias
getStylesheetNamespace
nsAlias
public
NamespaceAlias
getNamespaceAliasComposed
String
uri
return
NamespaceAlias
m_namespaceAliasComposed
m_namespaceAliasComposed
get
uri
private
TemplateList
m_templateList
void
recomposeTemplates
ElemTemplate
template
m_templateList
setTemplate
template
public
final
TemplateList
getTemplateListComposed
return
m_templateList
public
final
void
setTemplateListComposed
TemplateList
templateList
m_templateList
templateList
public
ElemTemplate
getTemplateComposed
XPathContext
xctxt
int
targetNode
QName
mode
boolean
quietConflictWarnings
DTM
dtm
throws
TransformerException
return
m_templateList
getTemplate
xctxt
targetNode
mode
quietConflictWarnings
dtm
public
ElemTemplate
getTemplateComposed
XPathContext
xctxt
int
targetNode
QName
mode
int
maxImportLevel
int
endImportLevel
boolean
quietConflictWarnings
DTM
dtm
throws
TransformerException
return
m_templateList
getTemplate
xctxt
targetNode
mode
maxImportLevel
endImportLevel
quietConflictWarnings
dtm
public
ElemTemplate
getTemplateComposed
QName
qname
return
m_templateList
getTemplate
qname
private
Vector
m_variables
void
recomposeVariables
ElemVariable
elemVar
if
getVariableOrParamComposed
elemVar
getName
elemVar
setIsTopLevel
elemVar
setIndex
m_variables
size
m_variables
addElement
elemVar
public
ElemVariable
getVariableOrParamComposed
QName
qname
if
m_variables
int
n
m_variables
size
for
int
i
i
n
i
ElemVariable
var
ElemVariable
m_variables
elementAt
i
if
var
getName
equals
qname
return
var
return
public
Vector
getVariablesAndParamsComposed
return
m_variables
private
TemplateList
m_whiteSpaceInfoList
void
recomposeWhiteSpaceInfo
WhiteSpaceInfo
wsi
if
m_whiteSpaceInfoList
m_whiteSpaceInfoList
new
TemplateList
m_whiteSpaceInfoList
setTemplate
wsi
public
boolean
shouldCheckWhitespace
return
m_whiteSpaceInfoList
public
WhiteSpaceInfo
getWhiteSpaceInfo
XPathContext
support
int
targetElement
DTM
dtm
throws
TransformerException
if
m_whiteSpaceInfoList
return
WhiteSpaceInfo
m_whiteSpaceInfoList
getTemplate
support
targetElement
dtm
else
return
public
boolean
shouldStripWhiteSpace
XPathContext
support
int
targetElement
throws
TransformerException
if
m_whiteSpaceInfoList
while
DTM
NULL
targetElement
DTM
dtm
support
getDTM
targetElement
WhiteSpaceInfo
info
WhiteSpaceInfo
m_whiteSpaceInfoList
getTemplate
support
targetElement
dtm
if
info
return
info
getShouldStripSpace
int
parent
dtm
getParent
targetElement
if
DTM
NULL
parent
DTM
ELEMENT_NODE
dtm
getNodeType
parent
targetElement
parent
else
targetElement
DTM
NULL
return
public
boolean
canStripWhiteSpace
return
m_whiteSpaceInfoList
private
ElemTemplate
m_defaultTextRule
public
final
ElemTemplate
getDefaultTextRule
return
m_defaultTextRule
private
ElemTemplate
m_defaultRule
public
final
ElemTemplate
getDefaultRule
return
m_defaultRule
private
ElemTemplate
m_defaultRootRule
public
final
ElemTemplate
getDefaultRootRule
return
m_defaultRootRule
private
ElemTemplate
m_startRule
public
final
ElemTemplate
getStartRule
return
m_startRule
XPath
m_selectDefault
private
void
initDefaultRule
ErrorListener
errorListener
throws
TransformerException
m_defaultRule
new
ElemTemplate
m_defaultRule
setStylesheet
this
XPath
defMatch
new
XPath
this
this
XPath
MATCH
errorListener
m_defaultRule
setMatch
defMatch
ElemApplyTemplates
childrenElement
new
ElemApplyTemplates
childrenElement
setIsDefaultTemplate
childrenElement
setSelect
m_selectDefault
m_defaultRule
appendChild
childrenElement
m_startRule
m_defaultRule
m_defaultTextRule
new
ElemTemplate
m_defaultTextRule
setStylesheet
this
defMatch
new
XPath
this
this
XPath
MATCH
errorListener
m_defaultTextRule
setMatch
defMatch
ElemValueOf
elemValueOf
new
ElemValueOf
m_defaultTextRule
appendChild
elemValueOf
XPath
selectPattern
new
XPath
this
this
XPath
SELECT
errorListener
elemValueOf
setSelect
selectPattern
m_defaultRootRule
new
ElemTemplate
m_defaultRootRule
setStylesheet
this
defMatch
new
XPath
this
this
XPath
MATCH
errorListener
m_defaultRootRule
setMatch
defMatch
childrenElement
new
ElemApplyTemplates
childrenElement
setIsDefaultTemplate
m_defaultRootRule
appendChild
childrenElement
childrenElement
setSelect
m_selectDefault
private
void
QuickSort2
Vector
v
int
lo0
int
hi0
int
lo
lo0
int
hi
hi0
if
hi0
lo0
ElemTemplateElement
midNode
ElemTemplateElement
v
elementAt
lo0
hi0
while
lo
hi
while
lo
hi0
ElemTemplateElement
v
elementAt
lo
compareTo
midNode
lo
while
hi
lo0
ElemTemplateElement
v
elementAt
hi
compareTo
midNode
hi
if
lo
hi
ElemTemplateElement
node
ElemTemplateElement
v
elementAt
lo
v
setElementAt
v
elementAt
hi
lo
v
setElementAt
node
hi
lo
hi
if
lo0
hi
QuickSort2
v
lo0
hi
if
lo
hi0
QuickSort2
v
lo
hi0
private
ComposeState
m_composeState
void
initComposeState
m_composeState
new
ComposeState
ComposeState
getComposeState
return
m_composeState
private
void
clearComposeState
m_composeState
class
ComposeState
ComposeState
int
size
m_variables
size
for
int
i
i
size
i
ElemVariable
ev
ElemVariable
m_variables
elementAt
i
m_variableNames
addElement
ev
getName
private
ExpandedNameTable
m_ent
new
ExpandedNameTable
public
int
getQNameID
QName
qname
return
m_ent
getExpandedTypeID
qname
getNamespace
qname
getLocalName
org
apache
xml
dtm
DTM
ELEMENT_NODE
private
java
util
Vector
m_variableNames
new
java
util
Vector
int
addVariableName
final
org
apache
xml
utils
QName
qname
int
pos
m_variableNames
size
m_variableNames
addElement
qname
int
frameSize
m_variableNames
size
getGlobalsSize
if
frameSize
m_maxStackFrameSize
m_maxStackFrameSize
return
pos
void
resetStackFrameSize
m_maxStackFrameSize
int
getFrameSize
return
m_maxStackFrameSize
int
getCurrentStackFrameSize
return
m_variableNames
size
void
setCurrentStackFrameSize
int
sz
m_variableNames
setSize
sz
int
getGlobalsSize
return
m_variables
size
IntStack
m_marks
new
IntStack
void
pushStackMark
m_marks
push
getCurrentStackFrameSize
void
popStackMark
int
mark
m_marks
pop
setCurrentStackFrameSize
mark
java
util
Vector
getVariableNames
return
m_variableNames
private
int
m_maxStackFrameSize
