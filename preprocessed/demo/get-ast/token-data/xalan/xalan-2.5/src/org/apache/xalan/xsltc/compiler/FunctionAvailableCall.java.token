package
org
apache
xalan
xsltc
compiler
import
java
lang
reflect
Method
import
java
lang
reflect
Modifier
import
java
util
Vector
import
org
apache
bcel
generic
ConstantPoolGen
import
org
apache
bcel
generic
PUSH
import
org
apache
xalan
xsltc
compiler
util
ClassGenerator
import
org
apache
xalan
xsltc
compiler
util
ErrorMsg
import
org
apache
xalan
xsltc
compiler
util
MethodGenerator
import
org
apache
xalan
xsltc
compiler
util
Type
import
org
apache
xalan
xsltc
compiler
util
TypeCheckError
import
org
apache
xalan
xsltc
compiler
util
Util
import
org
apache
xalan
xsltc
runtime
TransletLoader
final
class
FunctionAvailableCall
extends
FunctionCall
private
Expression
_arg
private
String
_nameOfFunct
private
String
_namespaceOfFunct
private
boolean
_isFunctionAvailable
public
FunctionAvailableCall
QName
fname
Vector
arguments
super
fname
arguments
_arg
Expression
arguments
elementAt
_type
if
_arg
instanceof
LiteralExpr
LiteralExpr
arg
LiteralExpr
_arg
_namespaceOfFunct
arg
getNamespace
_nameOfFunct
arg
getValue
if
isInternalNamespace
_isFunctionAvailable
hasMethods
public
Type
typeCheck
SymbolTable
stable
throws
TypeCheckError
if
_type
return
_type
if
_arg
instanceof
LiteralExpr
return
_type
Type
Boolean
ErrorMsg
err
new
ErrorMsg
ErrorMsg
NEED_LITERAL_ERR
this
throw
new
TypeCheckError
err
public
Object
evaluateAtCompileTime
return
getResult
Boolean
TRUE
Boolean
FALSE
private
boolean
hasMethods
LiteralExpr
arg
LiteralExpr
_arg
String
className
getClassNameFromUri
_namespaceOfFunct
String
methodName
int
colonIndex
_nameOfFunct
indexOf
if
colonIndex
String
functionName
_nameOfFunct
substring
colonIndex
int
lastDotIndex
functionName
lastIndexOf
if
lastDotIndex
methodName
functionName
substring
lastDotIndex
if
className
className
equals
className
className
functionName
substring
lastDotIndex
else
className
functionName
substring
lastDotIndex
else
methodName
functionName
else
methodName
_nameOfFunct
if
className
methodName
return
if
methodName
indexOf
methodName
replaceDash
methodName
try
TransletLoader
loader
new
TransletLoader
final
Class
clazz
loader
loadClass
className
if
clazz
return
else
final
Method
methods
clazz
getMethods
for
int
i
i
methods
length
i
final
int
mods
methods
i
getModifiers
if
Modifier
isPublic
mods
Modifier
isStatic
mods
methods
i
getName
equals
methodName
return
catch
ClassNotFoundException
e
return
return
public
boolean
getResult
if
_nameOfFunct
return
if
isInternalNamespace
final
Parser
parser
getParser
_isFunctionAvailable
parser
functionSupported
Util
getLocalName
_nameOfFunct
return
_isFunctionAvailable
private
boolean
isInternalNamespace
return
_namespaceOfFunct
_namespaceOfFunct
equals
EMPTYSTRING
_namespaceOfFunct
equals
TRANSLET_URI
public
void
translate
ClassGenerator
classGen
MethodGenerator
methodGen
final
ConstantPoolGen
cpg
classGen
getConstantPool
methodGen
getInstructionList
append
new
PUSH
cpg
getResult
