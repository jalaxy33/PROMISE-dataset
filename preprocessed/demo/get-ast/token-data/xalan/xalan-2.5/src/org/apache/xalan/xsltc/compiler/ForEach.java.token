package
org
apache
xalan
xsltc
compiler
import
java
util
Enumeration
import
java
util
Vector
import
org
apache
bcel
generic
BranchHandle
import
org
apache
bcel
generic
ConstantPoolGen
import
org
apache
bcel
generic
GOTO
import
org
apache
bcel
generic
IFGT
import
org
apache
bcel
generic
InstructionHandle
import
org
apache
bcel
generic
InstructionList
import
org
apache
xalan
xsltc
compiler
util
ClassGenerator
import
org
apache
xalan
xsltc
compiler
util
ErrorMsg
import
org
apache
xalan
xsltc
compiler
util
MethodGenerator
import
org
apache
xalan
xsltc
compiler
util
NodeSetType
import
org
apache
xalan
xsltc
compiler
util
NodeType
import
org
apache
xalan
xsltc
compiler
util
ReferenceType
import
org
apache
xalan
xsltc
compiler
util
ResultTreeType
import
org
apache
xalan
xsltc
compiler
util
Type
import
org
apache
xalan
xsltc
compiler
util
TypeCheckError
import
org
apache
xalan
xsltc
compiler
util
Util
final
class
ForEach
extends
Instruction
private
Expression
_select
private
Type
_type
public
void
display
int
indent
indent
indent
Util
println
indent
indent
IndentIncrement
Util
println
_select
toString
displayContents
indent
IndentIncrement
public
void
parseContents
Parser
parser
_select
parser
parseExpression
this
parseChildren
parser
if
_select
isDummy
reportError
this
parser
ErrorMsg
REQUIRED_ATTR_ERR
else
final
Expression
fpe
new
ForwardPositionExpr
_select
_select
setParent
fpe
fpe
setParser
_select
getParser
_select
fpe
public
Type
typeCheck
SymbolTable
stable
throws
TypeCheckError
_type
_select
typeCheck
stable
if
_type
instanceof
ReferenceType
_type
instanceof
NodeType
_select
new
CastExpr
_select
Type
NodeSet
typeCheckContents
stable
return
Type
Void
if
_type
instanceof
NodeSetType
_type
instanceof
ResultTreeType
typeCheckContents
stable
return
Type
Void
throw
new
TypeCheckError
this
public
void
translate
ClassGenerator
classGen
MethodGenerator
methodGen
final
ConstantPoolGen
cpg
classGen
getConstantPool
final
InstructionList
il
methodGen
getInstructionList
il
append
methodGen
loadCurrentNode
il
append
methodGen
loadIterator
final
Vector
sortObjects
new
Vector
Enumeration
children
elements
while
children
hasMoreElements
final
Object
child
children
nextElement
if
child
instanceof
Sort
sortObjects
addElement
child
if
_type
_type
instanceof
ResultTreeType
il
append
methodGen
loadDOM
if
sortObjects
size
ErrorMsg
msg
new
ErrorMsg
ErrorMsg
RESULT_TREE_SORT_ERR
this
getParser
reportError
WARNING
msg
_select
translate
classGen
methodGen
_type
translateTo
classGen
methodGen
Type
NodeSet
il
append
SWAP
il
append
methodGen
storeDOM
else
if
sortObjects
size
Sort
translateSortIterator
classGen
methodGen
_select
sortObjects
else
_select
translate
classGen
methodGen
if
_type
instanceof
ReferenceType
_select
startResetIterator
classGen
methodGen
il
append
methodGen
storeIterator
initializeVariables
classGen
methodGen
final
BranchHandle
nextNode
il
append
new
GOTO
final
InstructionHandle
loop
il
append
NOP
translateContents
classGen
methodGen
nextNode
setTarget
il
append
methodGen
loadIterator
il
append
methodGen
nextNode
il
append
DUP
il
append
methodGen
storeCurrentNode
il
append
new
IFGT
loop
if
_type
_type
instanceof
ResultTreeType
il
append
methodGen
storeDOM
il
append
methodGen
storeIterator
il
append
methodGen
storeCurrentNode
public
void
initializeVariables
ClassGenerator
classGen
MethodGenerator
methodGen
final
int
n
elementCount
for
int
i
i
n
i
final
Object
child
getContents
elementAt
i
if
child
instanceof
Variable
Variable
var
Variable
child
var
initialize
classGen
methodGen
