package
org
apache
xpath
compiler
import
java
util
Vector
import
org
apache
xml
utils
PrefixResolver
import
org
apache
xpath
res
XPATHErrorResources
class
Lexer
private
Compiler
m_compiler
PrefixResolver
m_namespaceContext
XPathParser
m_processor
static
final
int
TARGETEXTRA
private
int
m_patternMap
new
int
private
int
m_patternMapSize
Lexer
Compiler
compiler
PrefixResolver
resolver
XPathParser
xpathProcessor
m_compiler
compiler
m_namespaceContext
resolver
m_processor
xpathProcessor
void
tokenize
String
pat
throws
javax
xml
transform
TransformerException
tokenize
pat
void
tokenize
String
pat
Vector
targetStrings
throws
javax
xml
transform
TransformerException
m_compiler
m_currentPattern
pat
m_patternMapSize
m_compiler
m_opMap
new
OpMapVector
OpMap
MAXTOKENQUEUESIZE
OpMap
BLOCKTOKENQUEUESIZE
OpMap
MAPINDEX_LENGTH
int
nChars
pat
length
int
startSubstring
int
posOfNSSep
boolean
isStartOfPat
boolean
isAttrName
boolean
isNum
int
nesting
for
int
i
i
nChars
i
char
c
pat
charAt
i
switch
c
case
if
startSubstring
isNum
isStartOfPat
mapPatternElemPos
nesting
isStartOfPat
isAttrName
isAttrName
if
posOfNSSep
posOfNSSep
mapNSTokens
pat
startSubstring
posOfNSSep
i
else
addToTokenQueue
pat
substring
startSubstring
i
startSubstring
i
for
i
i
nChars
c
pat
charAt
i
i
if
c
i
nChars
addToTokenQueue
pat
substring
startSubstring
i
startSubstring
else
m_processor
error
XPATHErrorResources
ER_EXPECTED_DOUBLE_QUOTE
break
case
if
startSubstring
isNum
isStartOfPat
mapPatternElemPos
nesting
isStartOfPat
isAttrName
isAttrName
if
posOfNSSep
posOfNSSep
mapNSTokens
pat
startSubstring
posOfNSSep
i
else
addToTokenQueue
pat
substring
startSubstring
i
startSubstring
i
for
i
i
nChars
c
pat
charAt
i
i
if
c
i
nChars
addToTokenQueue
pat
substring
startSubstring
i
startSubstring
else
m_processor
error
XPATHErrorResources
ER_EXPECTED_SINGLE_QUOTE
break
case
case
case
case
if
startSubstring
isNum
isStartOfPat
mapPatternElemPos
nesting
isStartOfPat
isAttrName
isAttrName
if
posOfNSSep
posOfNSSep
mapNSTokens
pat
startSubstring
posOfNSSep
i
else
addToTokenQueue
pat
substring
startSubstring
i
startSubstring
break
case
isAttrName
case
if
c
if
isNum
startSubstring
break
isNum
case
case
case
case
case
case
case
case
case
case
case
case
case
case
case
case
if
startSubstring
isNum
isStartOfPat
mapPatternElemPos
nesting
isStartOfPat
isAttrName
isAttrName
if
posOfNSSep
posOfNSSep
mapNSTokens
pat
startSubstring
posOfNSSep
i
else
addToTokenQueue
pat
substring
startSubstring
i
startSubstring
else
if
c
isStartOfPat
isStartOfPat
mapPatternElemPos
nesting
isStartOfPat
isAttrName
else
if
c
isStartOfPat
mapPatternElemPos
nesting
isStartOfPat
isAttrName
isAttrName
if
nesting
if
c
if
targetStrings
recordTokenString
targetStrings
isStartOfPat
if
c
c
nesting
else
if
c
c
nesting
addToTokenQueue
pat
substring
i
i
break
case
if
i
if
posOfNSSep
i
if
startSubstring
if
startSubstring
i
addToTokenQueue
pat
substring
startSubstring
i
isNum
isAttrName
startSubstring
posOfNSSep
addToTokenQueue
pat
substring
i
i
break
else
posOfNSSep
i
default
if
startSubstring
startSubstring
i
isNum
Character
isDigit
c
else
if
isNum
isNum
Character
isDigit
c
if
startSubstring
isNum
isStartOfPat
mapPatternElemPos
nesting
isStartOfPat
isAttrName
if
posOfNSSep
m_namespaceContext
m_namespaceContext
handlesNullPrefixes
posOfNSSep
mapNSTokens
pat
startSubstring
posOfNSSep
nChars
else
addToTokenQueue
pat
substring
startSubstring
nChars
if
m_compiler
getTokenQueueSize
m_processor
error
XPATHErrorResources
ER_EMPTY_EXPRESSION
else
if
targetStrings
recordTokenString
targetStrings
m_processor
m_queueMark
private
boolean
mapPatternElemPos
int
nesting
boolean
isStart
boolean
isAttrName
if
nesting
if
m_patternMapSize
m_patternMap
length
int
patternMap
m_patternMap
int
len
m_patternMap
length
m_patternMap
new
int
m_patternMapSize
System
arraycopy
patternMap
m_patternMap
len
if
isStart
m_patternMap
m_patternMapSize
TARGETEXTRA
m_patternMap
m_patternMapSize
m_compiler
getTokenQueueSize
isAttrName
TARGETEXTRA
m_patternMapSize
isStart
return
isStart
private
int
getTokenQueuePosFromMap
int
i
int
pos
m_patternMap
i
return
pos
TARGETEXTRA
pos
TARGETEXTRA
pos
private
final
void
resetTokenMark
int
mark
int
qsz
m_compiler
getTokenQueueSize
m_processor
m_queueMark
mark
mark
qsz
mark
mark
if
m_processor
m_queueMark
qsz
m_processor
m_token
String
m_compiler
getTokenQueue
elementAt
m_processor
m_queueMark
m_processor
m_tokenChar
m_processor
m_token
charAt
else
m_processor
m_token
m_processor
m_tokenChar
final
int
getKeywordToken
String
key
int
tok
try
Integer
itok
Integer
Keywords
m_keywords
get
key
tok
itok
itok
intValue
catch
NullPointerException
npe
tok
catch
ClassCastException
cce
tok
return
tok
private
void
recordTokenString
Vector
targetStrings
int
tokPos
getTokenQueuePosFromMap
m_patternMapSize
resetTokenMark
tokPos
if
m_processor
lookahead
int
tok
getKeywordToken
m_processor
m_token
switch
tok
case
OpCodes
NODETYPE_COMMENT
targetStrings
addElement
PsuedoNames
PSEUDONAME_COMMENT
break
case
OpCodes
NODETYPE_TEXT
targetStrings
addElement
PsuedoNames
PSEUDONAME_TEXT
break
case
OpCodes
NODETYPE_NODE
targetStrings
addElement
PsuedoNames
PSEUDONAME_ANY
break
case
OpCodes
NODETYPE_ROOT
targetStrings
addElement
PsuedoNames
PSEUDONAME_ROOT
break
case
OpCodes
NODETYPE_ANYELEMENT
targetStrings
addElement
PsuedoNames
PSEUDONAME_ANY
break
case
OpCodes
NODETYPE_PI
targetStrings
addElement
PsuedoNames
PSEUDONAME_ANY
break
default
targetStrings
addElement
PsuedoNames
PSEUDONAME_ANY
else
if
m_processor
tokenIs
tokPos
resetTokenMark
tokPos
if
m_processor
lookahead
tokPos
targetStrings
addElement
m_compiler
getTokenQueue
elementAt
tokPos
private
final
void
addToTokenQueue
String
s
m_compiler
getTokenQueue
addElement
s
private
int
mapNSTokens
String
pat
int
startSubstring
int
posOfNSSep
int
posOfScan
throws
javax
xml
transform
TransformerException
String
prefix
if
startSubstring
posOfNSSep
prefix
pat
substring
startSubstring
posOfNSSep
String
uName
if
m_namespaceContext
prefix
equals
prefix
equals
try
if
prefix
length
uName
PrefixResolver
m_namespaceContext
getNamespaceForPrefix
prefix
else
if
addToTokenQueue
String
s
pat
substring
posOfNSSep
posOfScan
if
s
length
addToTokenQueue
s
return
else
uName
PrefixResolver
m_namespaceContext
getNamespaceForPrefix
prefix
catch
ClassCastException
cce
uName
m_namespaceContext
getNamespaceForPrefix
prefix
else
uName
prefix
if
uName
uName
length
addToTokenQueue
uName
addToTokenQueue
String
s
pat
substring
posOfNSSep
posOfScan
if
s
length
addToTokenQueue
s
else
m_processor
error
XPATHErrorResources
ER_PREFIX_MUST_RESOLVE
new
String
prefix
return
