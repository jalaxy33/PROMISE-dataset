package
org
apache
xpath
compiler
import
javax
xml
transform
ErrorListener
import
javax
xml
transform
TransformerException
import
org
apache
xalan
res
XSLMessages
import
org
apache
xml
utils
PrefixResolver
import
org
apache
xpath
XPathProcessorException
import
org
apache
xpath
objects
XNumber
import
org
apache
xpath
objects
XString
import
org
apache
xpath
res
XPATHErrorResources
public
class
XPathParser
static
public
final
String
CONTINUE_AFTER_FATAL_ERROR
private
OpMap
m_ops
transient
String
m_token
transient
char
m_tokenChar
int
m_queueMark
protected
final
static
int
FILTER_MATCH_FAILED
protected
final
static
int
FILTER_MATCH_PRIMARY
protected
final
static
int
FILTER_MATCH_PREDICATES
public
XPathParser
ErrorListener
errorListener
javax
xml
transform
SourceLocator
sourceLocator
m_errorListener
errorListener
m_sourceLocator
sourceLocator
PrefixResolver
m_namespaceContext
public
void
initXPath
Compiler
compiler
String
expression
PrefixResolver
namespaceContext
throws
javax
xml
transform
TransformerException
m_ops
compiler
m_namespaceContext
namespaceContext
Lexer
lexer
new
Lexer
compiler
namespaceContext
this
lexer
tokenize
expression
m_ops
setOp
OpCodes
OP_XPATH
m_ops
setOp
OpMap
MAPINDEX_LENGTH
try
nextToken
Expr
if
m_token
String
extraTokens
while
m_token
extraTokens
m_token
nextToken
if
m_token
extraTokens
error
XPATHErrorResources
ER_EXTRA_ILLEGAL_TOKENS
new
Object
extraTokens
catch
org
apache
xpath
XPathProcessorException
e
if
CONTINUE_AFTER_FATAL_ERROR
equals
e
getMessage
initXPath
compiler
namespaceContext
else
throw
e
compiler
shrink
public
void
initMatchPattern
Compiler
compiler
String
expression
PrefixResolver
namespaceContext
throws
javax
xml
transform
TransformerException
m_ops
compiler
m_namespaceContext
namespaceContext
Lexer
lexer
new
Lexer
compiler
namespaceContext
this
lexer
tokenize
expression
m_ops
setOp
OpCodes
OP_MATCHPATTERN
m_ops
setOp
OpMap
MAPINDEX_LENGTH
nextToken
Pattern
if
m_token
String
extraTokens
while
m_token
extraTokens
m_token
nextToken
if
m_token
extraTokens
error
XPATHErrorResources
ER_EXTRA_ILLEGAL_TOKENS
new
Object
extraTokens
m_ops
setOp
m_ops
getOp
OpMap
MAPINDEX_LENGTH
OpCodes
ENDOP
m_ops
setOp
OpMap
MAPINDEX_LENGTH
m_ops
getOp
OpMap
MAPINDEX_LENGTH
m_ops
shrink
private
ErrorListener
m_errorListener
javax
xml
transform
SourceLocator
m_sourceLocator
public
void
setErrorHandler
ErrorListener
handler
m_errorListener
handler
public
ErrorListener
getErrorListener
return
m_errorListener
final
boolean
tokenIs
String
s
return
m_token
m_token
equals
s
s
final
boolean
tokenIs
char
c
return
m_token
m_tokenChar
c
final
boolean
lookahead
char
c
int
n
int
pos
m_queueMark
n
boolean
b
if
pos
m_ops
getTokenQueueSize
pos
m_ops
getTokenQueueSize
String
tok
String
m_ops
m_tokenQueue
elementAt
pos
b
tok
length
tok
charAt
c
else
b
return
b
private
final
boolean
lookbehind
char
c
int
n
boolean
isToken
int
lookBehindPos
m_queueMark
n
if
lookBehindPos
String
lookbehind
String
m_ops
m_tokenQueue
elementAt
lookBehindPos
if
lookbehind
length
char
c0
lookbehind
lookbehind
charAt
isToken
c0
c0
c
else
isToken
else
isToken
return
isToken
private
final
boolean
lookbehindHasToken
int
n
boolean
hasToken
if
m_queueMark
n
String
lookbehind
String
m_ops
m_tokenQueue
elementAt
m_queueMark
n
char
c0
lookbehind
lookbehind
charAt
hasToken
c0
else
hasToken
return
hasToken
private
final
boolean
lookahead
String
s
int
n
boolean
isToken
if
m_queueMark
n
m_ops
getTokenQueueSize
String
lookahead
String
m_ops
m_tokenQueue
elementAt
m_queueMark
n
isToken
lookahead
lookahead
equals
s
s
else
isToken
s
return
isToken
private
final
void
nextToken
if
m_queueMark
m_ops
getTokenQueueSize
m_token
String
m_ops
m_tokenQueue
elementAt
m_queueMark
m_tokenChar
m_token
charAt
else
m_token
m_tokenChar
private
final
String
getTokenRelative
int
i
String
tok
int
relative
m_queueMark
i
if
relative
relative
m_ops
getTokenQueueSize
tok
String
m_ops
m_tokenQueue
elementAt
relative
else
tok
return
tok
private
final
void
prevToken
if
m_queueMark
m_queueMark
m_token
String
m_ops
m_tokenQueue
elementAt
m_queueMark
m_tokenChar
m_token
charAt
else
m_token
m_tokenChar
private
final
void
consumeExpected
String
expected
throws
javax
xml
transform
TransformerException
if
tokenIs
expected
nextToken
else
error
XPATHErrorResources
ER_EXPECTED_BUT_FOUND
new
Object
expected
m_token
throw
new
XPathProcessorException
CONTINUE_AFTER_FATAL_ERROR
private
final
void
consumeExpected
char
expected
throws
javax
xml
transform
TransformerException
if
tokenIs
expected
nextToken
else
error
XPATHErrorResources
ER_EXPECTED_BUT_FOUND
new
Object
String
valueOf
expected
m_token
throw
new
XPathProcessorException
CONTINUE_AFTER_FATAL_ERROR
void
warn
String
msg
Object
args
throws
TransformerException
String
fmsg
XSLMessages
createXPATHWarning
msg
args
ErrorListener
ehandler
this
getErrorListener
if
ehandler
ehandler
warning
new
TransformerException
fmsg
m_sourceLocator
else
System
err
println
fmsg
private
void
assertion
boolean
b
String
msg
if
b
String
fMsg
XSLMessages
createXPATHMessage
XPATHErrorResources
ER_INCORRECT_PROGRAMMER_ASSERTION
new
Object
msg
throw
new
RuntimeException
fMsg
void
error
String
msg
Object
args
throws
TransformerException
String
fmsg
XSLMessages
createXPATHMessage
msg
args
ErrorListener
ehandler
this
getErrorListener
TransformerException
te
new
TransformerException
fmsg
m_sourceLocator
if
ehandler
ehandler
fatalError
te
else
throw
te
protected
String
dumpRemainingTokenQueue
int
q
m_queueMark
String
returnMsg
if
q
m_ops
getTokenQueueSize
String
msg
while
q
m_ops
getTokenQueueSize
String
t
String
m_ops
m_tokenQueue
elementAt
q
msg
t
returnMsg
msg
else
returnMsg
return
returnMsg
final
int
getFunctionToken
String
key
int
tok
try
tok
Integer
Keywords
m_functions
get
key
intValue
catch
NullPointerException
npe
tok
catch
ClassCastException
cce
tok
return
tok
void
insertOp
int
pos
int
length
int
op
int
totalLen
m_ops
getOp
OpMap
MAPINDEX_LENGTH
for
int
i
totalLen
i
pos
i
m_ops
setOp
i
length
m_ops
getOp
i
m_ops
setOp
pos
op
m_ops
setOp
OpMap
MAPINDEX_LENGTH
totalLen
length
void
appendOp
int
length
int
op
int
totalLen
m_ops
getOp
OpMap
MAPINDEX_LENGTH
m_ops
setOp
totalLen
op
m_ops
setOp
totalLen
OpMap
MAPINDEX_LENGTH
length
m_ops
setOp
OpMap
MAPINDEX_LENGTH
totalLen
length
protected
void
Expr
throws
javax
xml
transform
TransformerException
OrExpr
protected
void
OrExpr
throws
javax
xml
transform
TransformerException
int
opPos
m_ops
getOp
OpMap
MAPINDEX_LENGTH
AndExpr
if
m_token
tokenIs
nextToken
insertOp
opPos
OpCodes
OP_OR
OrExpr
m_ops
setOp
opPos
OpMap
MAPINDEX_LENGTH
m_ops
getOp
OpMap
MAPINDEX_LENGTH
opPos
protected
void
AndExpr
throws
javax
xml
transform
TransformerException
int
opPos
m_ops
getOp
OpMap
MAPINDEX_LENGTH
EqualityExpr
if
m_token
tokenIs
nextToken
insertOp
opPos
OpCodes
OP_AND
AndExpr
m_ops
setOp
opPos
OpMap
MAPINDEX_LENGTH
m_ops
getOp
OpMap
MAPINDEX_LENGTH
opPos
protected
int
EqualityExpr
int
addPos
throws
javax
xml
transform
TransformerException
int
opPos
m_ops
getOp
OpMap
MAPINDEX_LENGTH
if
addPos
addPos
opPos
RelationalExpr
if
m_token
if
tokenIs
lookahead
nextToken
nextToken
insertOp
addPos
OpCodes
OP_NOTEQUALS
int
opPlusLeftHandLen
m_ops
getOp
OpMap
MAPINDEX_LENGTH
addPos
addPos
EqualityExpr
addPos
m_ops
setOp
addPos
OpMap
MAPINDEX_LENGTH
m_ops
getOp
addPos
opPlusLeftHandLen
opPlusLeftHandLen
addPos
else
if
tokenIs
nextToken
insertOp
addPos
OpCodes
OP_EQUALS
int
opPlusLeftHandLen
m_ops
getOp
OpMap
MAPINDEX_LENGTH
addPos
addPos
EqualityExpr
addPos
m_ops
setOp
addPos
OpMap
MAPINDEX_LENGTH
m_ops
getOp
addPos
opPlusLeftHandLen
opPlusLeftHandLen
addPos
return
addPos
protected
int
RelationalExpr
int
addPos
throws
javax
xml
transform
TransformerException
int
opPos
m_ops
getOp
OpMap
MAPINDEX_LENGTH
if
addPos
addPos
opPos
AdditiveExpr
if
m_token
if
tokenIs
nextToken
if
tokenIs
nextToken
insertOp
addPos
OpCodes
OP_LTE
else
insertOp
addPos
OpCodes
OP_LT
int
opPlusLeftHandLen
m_ops
getOp
OpMap
MAPINDEX_LENGTH
addPos
addPos
RelationalExpr
addPos
m_ops
setOp
addPos
OpMap
MAPINDEX_LENGTH
m_ops
getOp
addPos
opPlusLeftHandLen
opPlusLeftHandLen
addPos
else
if
tokenIs
nextToken
if
tokenIs
nextToken
insertOp
addPos
OpCodes
OP_GTE
else
insertOp
addPos
OpCodes
OP_GT
int
opPlusLeftHandLen
m_ops
getOp
OpMap
MAPINDEX_LENGTH
addPos
addPos
RelationalExpr
addPos
m_ops
setOp
addPos
OpMap
MAPINDEX_LENGTH
m_ops
getOp
addPos
opPlusLeftHandLen
opPlusLeftHandLen
addPos
return
addPos
protected
int
AdditiveExpr
int
addPos
throws
javax
xml
transform
TransformerException
int
opPos
m_ops
getOp
OpMap
MAPINDEX_LENGTH
if
addPos
addPos
opPos
MultiplicativeExpr
if
m_token
if
tokenIs
nextToken
insertOp
addPos
OpCodes
OP_PLUS
int
opPlusLeftHandLen
m_ops
getOp
OpMap
MAPINDEX_LENGTH
addPos
addPos
AdditiveExpr
addPos
m_ops
setOp
addPos
OpMap
MAPINDEX_LENGTH
m_ops
getOp
addPos
opPlusLeftHandLen
opPlusLeftHandLen
addPos
else
if
tokenIs
nextToken
insertOp
addPos
OpCodes
OP_MINUS
int
opPlusLeftHandLen
m_ops
getOp
OpMap
MAPINDEX_LENGTH
addPos
addPos
AdditiveExpr
addPos
m_ops
setOp
addPos
OpMap
MAPINDEX_LENGTH
m_ops
getOp
addPos
opPlusLeftHandLen
opPlusLeftHandLen
addPos
return
addPos
protected
int
MultiplicativeExpr
int
addPos
throws
javax
xml
transform
TransformerException
int
opPos
m_ops
getOp
OpMap
MAPINDEX_LENGTH
if
addPos
addPos
opPos
UnaryExpr
if
m_token
if
tokenIs
nextToken
insertOp
addPos
OpCodes
OP_MULT
int
opPlusLeftHandLen
m_ops
getOp
OpMap
MAPINDEX_LENGTH
addPos
addPos
MultiplicativeExpr
addPos
m_ops
setOp
addPos
OpMap
MAPINDEX_LENGTH
m_ops
getOp
addPos
opPlusLeftHandLen
opPlusLeftHandLen
addPos
else
if
tokenIs
nextToken
insertOp
addPos
OpCodes
OP_DIV
int
opPlusLeftHandLen
m_ops
getOp
OpMap
MAPINDEX_LENGTH
addPos
addPos
MultiplicativeExpr
addPos
m_ops
setOp
addPos
OpMap
MAPINDEX_LENGTH
m_ops
getOp
addPos
opPlusLeftHandLen
opPlusLeftHandLen
addPos
else
if
tokenIs
nextToken
insertOp
addPos
OpCodes
OP_MOD
int
opPlusLeftHandLen
m_ops
getOp
OpMap
MAPINDEX_LENGTH
addPos
addPos
MultiplicativeExpr
addPos
m_ops
setOp
addPos
OpMap
MAPINDEX_LENGTH
m_ops
getOp
addPos
opPlusLeftHandLen
opPlusLeftHandLen
addPos
else
if
tokenIs
nextToken
insertOp
addPos
OpCodes
OP_QUO
int
opPlusLeftHandLen
m_ops
getOp
OpMap
MAPINDEX_LENGTH
addPos
addPos
MultiplicativeExpr
addPos
m_ops
setOp
addPos
OpMap
MAPINDEX_LENGTH
m_ops
getOp
addPos
opPlusLeftHandLen
opPlusLeftHandLen
addPos
return
addPos
protected
void
UnaryExpr
throws
javax
xml
transform
TransformerException
int
opPos
m_ops
getOp
OpMap
MAPINDEX_LENGTH
boolean
isNeg
if
m_tokenChar
nextToken
appendOp
OpCodes
OP_NEG
isNeg
UnionExpr
if
isNeg
m_ops
setOp
opPos
OpMap
MAPINDEX_LENGTH
m_ops
getOp
OpMap
MAPINDEX_LENGTH
opPos
protected
void
StringExpr
throws
javax
xml
transform
TransformerException
int
opPos
m_ops
getOp
OpMap
MAPINDEX_LENGTH
appendOp
OpCodes
OP_STRING
Expr
m_ops
setOp
opPos
OpMap
MAPINDEX_LENGTH
m_ops
getOp
OpMap
MAPINDEX_LENGTH
opPos
protected
void
BooleanExpr
throws
javax
xml
transform
TransformerException
int
opPos
m_ops
getOp
OpMap
MAPINDEX_LENGTH
appendOp
OpCodes
OP_BOOL
Expr
int
opLen
m_ops
getOp
OpMap
MAPINDEX_LENGTH
opPos
if
opLen
error
XPATHErrorResources
ER_BOOLEAN_ARG_NO_LONGER_OPTIONAL
m_ops
setOp
opPos
OpMap
MAPINDEX_LENGTH
opLen
protected
void
NumberExpr
throws
javax
xml
transform
TransformerException
int
opPos
m_ops
getOp
OpMap
MAPINDEX_LENGTH
appendOp
OpCodes
OP_NUMBER
Expr
m_ops
setOp
opPos
OpMap
MAPINDEX_LENGTH
m_ops
getOp
OpMap
MAPINDEX_LENGTH
opPos
protected
void
UnionExpr
throws
javax
xml
transform
TransformerException
int
opPos
m_ops
getOp
OpMap
MAPINDEX_LENGTH
boolean
continueOrLoop
boolean
foundUnion
do
PathExpr
if
tokenIs
if
foundUnion
foundUnion
insertOp
opPos
OpCodes
OP_UNION
nextToken
else
break
while
continueOrLoop
m_ops
setOp
opPos
OpMap
MAPINDEX_LENGTH
m_ops
getOp
OpMap
MAPINDEX_LENGTH
opPos
protected
void
PathExpr
throws
javax
xml
transform
TransformerException
int
opPos
m_ops
getOp
OpMap
MAPINDEX_LENGTH
int
filterExprMatch
FilterExpr
if
filterExprMatch
FILTER_MATCH_FAILED
boolean
locationPathStarted
filterExprMatch
FILTER_MATCH_PREDICATES
if
tokenIs
nextToken
if
locationPathStarted
insertOp
opPos
OpCodes
OP_LOCATIONPATH
locationPathStarted
if
RelativeLocationPath
error
XPATHErrorResources
ER_EXPECTED_REL_LOC_PATH
if
locationPathStarted
m_ops
setOp
m_ops
getOp
OpMap
MAPINDEX_LENGTH
OpCodes
ENDOP
m_ops
setOp
OpMap
MAPINDEX_LENGTH
m_ops
getOp
OpMap
MAPINDEX_LENGTH
m_ops
setOp
opPos
OpMap
MAPINDEX_LENGTH
m_ops
getOp
OpMap
MAPINDEX_LENGTH
opPos
else
LocationPath
protected
int
FilterExpr
throws
javax
xml
transform
TransformerException
int
opPos
m_ops
getOp
OpMap
MAPINDEX_LENGTH
int
filterMatch
if
PrimaryExpr
if
tokenIs
insertOp
opPos
OpCodes
OP_LOCATIONPATH
while
tokenIs
Predicate
filterMatch
FILTER_MATCH_PREDICATES
else
filterMatch
FILTER_MATCH_PRIMARY
else
filterMatch
FILTER_MATCH_FAILED
return
filterMatch
protected
boolean
PrimaryExpr
throws
javax
xml
transform
TransformerException
boolean
matchFound
int
opPos
m_ops
getOp
OpMap
MAPINDEX_LENGTH
if
m_tokenChar
m_tokenChar
appendOp
OpCodes
OP_LITERAL
Literal
m_ops
setOp
opPos
OpMap
MAPINDEX_LENGTH
m_ops
getOp
OpMap
MAPINDEX_LENGTH
opPos
matchFound
else
if
m_tokenChar
nextToken
appendOp
OpCodes
OP_VARIABLE
QName
m_ops
setOp
opPos
OpMap
MAPINDEX_LENGTH
m_ops
getOp
OpMap
MAPINDEX_LENGTH
opPos
matchFound
else
if
m_tokenChar
nextToken
appendOp
OpCodes
OP_GROUP
Expr
consumeExpected
m_ops
setOp
opPos
OpMap
MAPINDEX_LENGTH
m_ops
getOp
OpMap
MAPINDEX_LENGTH
opPos
matchFound
else
if
m_token
m_tokenChar
m_token
length
Character
isDigit
m_token
charAt
Character
isDigit
m_tokenChar
appendOp
OpCodes
OP_NUMBERLIT
Number
m_ops
setOp
opPos
OpMap
MAPINDEX_LENGTH
m_ops
getOp
OpMap
MAPINDEX_LENGTH
opPos
matchFound
else
if
lookahead
lookahead
lookahead
matchFound
FunctionCall
else
matchFound
return
matchFound
protected
void
Argument
throws
javax
xml
transform
TransformerException
int
opPos
m_ops
getOp
OpMap
MAPINDEX_LENGTH
appendOp
OpCodes
OP_ARGUMENT
Expr
m_ops
setOp
opPos
OpMap
MAPINDEX_LENGTH
m_ops
getOp
OpMap
MAPINDEX_LENGTH
opPos
protected
boolean
FunctionCall
throws
javax
xml
transform
TransformerException
int
opPos
m_ops
getOp
OpMap
MAPINDEX_LENGTH
if
lookahead
appendOp
OpCodes
OP_EXTFUNCTION
m_ops
setOp
opPos
OpMap
MAPINDEX_LENGTH
m_queueMark
nextToken
consumeExpected
m_ops
setOp
opPos
OpMap
MAPINDEX_LENGTH
m_queueMark
nextToken
else
int
funcTok
getFunctionToken
m_token
if
funcTok
error
XPATHErrorResources
ER_COULDNOT_FIND_FUNCTION
new
Object
m_token
switch
funcTok
case
OpCodes
NODETYPE_PI
case
OpCodes
NODETYPE_COMMENT
case
OpCodes
NODETYPE_TEXT
case
OpCodes
NODETYPE_NODE
return
default
appendOp
OpCodes
OP_FUNCTION
m_ops
setOp
opPos
OpMap
MAPINDEX_LENGTH
funcTok
nextToken
consumeExpected
while
tokenIs
m_token
if
tokenIs
error
XPATHErrorResources
ER_FOUND_COMMA_BUT_NO_PRECEDING_ARG
Argument
if
tokenIs
consumeExpected
if
tokenIs
error
XPATHErrorResources
ER_FOUND_COMMA_BUT_NO_FOLLOWING_ARG
consumeExpected
m_ops
setOp
m_ops
getOp
OpMap
MAPINDEX_LENGTH
OpCodes
ENDOP
m_ops
setOp
OpMap
MAPINDEX_LENGTH
m_ops
getOp
OpMap
MAPINDEX_LENGTH
m_ops
setOp
opPos
OpMap
MAPINDEX_LENGTH
m_ops
getOp
OpMap
MAPINDEX_LENGTH
opPos
return
protected
void
LocationPath
throws
javax
xml
transform
TransformerException
int
opPos
m_ops
getOp
OpMap
MAPINDEX_LENGTH
appendOp
OpCodes
OP_LOCATIONPATH
boolean
seenSlash
tokenIs
if
seenSlash
appendOp
OpCodes
FROM_ROOT
m_ops
setOp
m_ops
getOp
OpMap
MAPINDEX_LENGTH
m_ops
setOp
m_ops
getOp
OpMap
MAPINDEX_LENGTH
OpCodes
NODETYPE_ROOT
nextToken
if
m_token
if
RelativeLocationPath
seenSlash
error
XPATHErrorResources
ER_EXPECTED_LOC_PATH
new
Object
m_token
m_ops
setOp
m_ops
getOp
OpMap
MAPINDEX_LENGTH
OpCodes
ENDOP
m_ops
setOp
OpMap
MAPINDEX_LENGTH
m_ops
getOp
OpMap
MAPINDEX_LENGTH
m_ops
setOp
opPos
OpMap
MAPINDEX_LENGTH
m_ops
getOp
OpMap
MAPINDEX_LENGTH
opPos
protected
boolean
RelativeLocationPath
throws
javax
xml
transform
TransformerException
if
Step
return
while
tokenIs
nextToken
if
Step
error
XPATHErrorResources
ER_EXPECTED_LOC_STEP
return
protected
boolean
Step
throws
javax
xml
transform
TransformerException
int
opPos
m_ops
getOp
OpMap
MAPINDEX_LENGTH
boolean
doubleSlash
tokenIs
if
doubleSlash
nextToken
appendOp
OpCodes
FROM_DESCENDANTS_OR_SELF
m_ops
setOp
OpMap
MAPINDEX_LENGTH
m_ops
getOp
OpMap
MAPINDEX_LENGTH
m_ops
setOp
m_ops
getOp
OpMap
MAPINDEX_LENGTH
OpCodes
NODETYPE_NODE
m_ops
setOp
OpMap
MAPINDEX_LENGTH
m_ops
getOp
OpMap
MAPINDEX_LENGTH
m_ops
setOp
opPos
OpMap
MAPINDEX_LENGTH
m_ops
getOp
OpMap
MAPINDEX_LENGTH
opPos
m_ops
setOp
opPos
OpMap
MAPINDEX_LENGTH
m_ops
getOp
OpMap
MAPINDEX_LENGTH
opPos
opPos
m_ops
getOp
OpMap
MAPINDEX_LENGTH
if
tokenIs
nextToken
if
tokenIs
error
XPATHErrorResources
ER_PREDICATE_ILLEGAL_SYNTAX
appendOp
OpCodes
FROM_SELF
m_ops
setOp
m_ops
getOp
OpMap
MAPINDEX_LENGTH
m_ops
setOp
m_ops
getOp
OpMap
MAPINDEX_LENGTH
OpCodes
NODETYPE_NODE
else
if
tokenIs
nextToken
appendOp
OpCodes
FROM_PARENT
m_ops
setOp
m_ops
getOp
OpMap
MAPINDEX_LENGTH
m_ops
setOp
m_ops
getOp
OpMap
MAPINDEX_LENGTH
OpCodes
NODETYPE_NODE
else
if
tokenIs
tokenIs
tokenIs
m_token
Character
isLetter
m_token
charAt
Basis
while
tokenIs
Predicate
m_ops
setOp
opPos
OpMap
MAPINDEX_LENGTH
m_ops
getOp
OpMap
MAPINDEX_LENGTH
opPos
else
if
doubleSlash
error
XPATHErrorResources
ER_EXPECTED_LOC_STEP
return
return
protected
void
Basis
throws
javax
xml
transform
TransformerException
int
opPos
m_ops
getOp
OpMap
MAPINDEX_LENGTH
int
axesType
if
lookahead
axesType
AxisName
nextToken
nextToken
else
if
tokenIs
axesType
OpCodes
FROM_ATTRIBUTES
appendOp
axesType
nextToken
else
axesType
OpCodes
FROM_CHILDREN
appendOp
axesType
m_ops
setOp
OpMap
MAPINDEX_LENGTH
m_ops
getOp
OpMap
MAPINDEX_LENGTH
NodeTest
axesType
m_ops
setOp
opPos
OpMap
MAPINDEX_LENGTH
m_ops
getOp
OpMap
MAPINDEX_LENGTH
opPos
protected
int
AxisName
throws
javax
xml
transform
TransformerException
Object
val
Keywords
m_axisnames
get
m_token
if
val
error
XPATHErrorResources
ER_ILLEGAL_AXIS_NAME
new
Object
m_token
int
axesType
Integer
val
intValue
appendOp
axesType
return
axesType
protected
void
NodeTest
int
axesType
throws
javax
xml
transform
TransformerException
if
lookahead
Object
nodeTestOp
Keywords
m_nodetypes
get
m_token
if
nodeTestOp
error
XPATHErrorResources
ER_UNKNOWN_NODETYPE
new
Object
m_token
else
nextToken
int
nt
Integer
nodeTestOp
intValue
m_ops
setOp
m_ops
getOp
OpMap
MAPINDEX_LENGTH
nt
m_ops
setOp
OpMap
MAPINDEX_LENGTH
m_ops
getOp
OpMap
MAPINDEX_LENGTH
consumeExpected
if
OpCodes
NODETYPE_PI
nt
if
tokenIs
Literal
consumeExpected
else
m_ops
setOp
m_ops
getOp
OpMap
MAPINDEX_LENGTH
OpCodes
NODENAME
m_ops
setOp
OpMap
MAPINDEX_LENGTH
m_ops
getOp
OpMap
MAPINDEX_LENGTH
if
lookahead
if
tokenIs
m_ops
setOp
m_ops
getOp
OpMap
MAPINDEX_LENGTH
OpCodes
ELEMWILDCARD
else
m_ops
setOp
m_ops
getOp
OpMap
MAPINDEX_LENGTH
m_queueMark
if
Character
isLetter
m_tokenChar
tokenIs
error
XPATHErrorResources
ER_EXPECTED_NODE_TEST
nextToken
consumeExpected
else
m_ops
setOp
m_ops
getOp
OpMap
MAPINDEX_LENGTH
OpCodes
EMPTY
m_ops
setOp
OpMap
MAPINDEX_LENGTH
m_ops
getOp
OpMap
MAPINDEX_LENGTH
if
tokenIs
m_ops
setOp
m_ops
getOp
OpMap
MAPINDEX_LENGTH
OpCodes
ELEMWILDCARD
else
if
OpCodes
FROM_NAMESPACE
axesType
String
prefix
String
this
m_ops
m_tokenQueue
elementAt
m_queueMark
String
namespace
PrefixResolver
m_namespaceContext
getNamespaceForPrefix
prefix
this
m_ops
m_tokenQueue
setElementAt
namespace
m_queueMark
m_ops
setOp
m_ops
getOp
OpMap
MAPINDEX_LENGTH
m_queueMark
if
Character
isLetter
m_tokenChar
tokenIs
error
XPATHErrorResources
ER_EXPECTED_NODE_TEST
m_ops
setOp
OpMap
MAPINDEX_LENGTH
m_ops
getOp
OpMap
MAPINDEX_LENGTH
nextToken
protected
void
Predicate
throws
javax
xml
transform
TransformerException
if
tokenIs
nextToken
PredicateExpr
consumeExpected
protected
void
PredicateExpr
throws
javax
xml
transform
TransformerException
int
opPos
m_ops
getOp
OpMap
MAPINDEX_LENGTH
appendOp
OpCodes
OP_PREDICATE
Expr
m_ops
setOp
m_ops
getOp
OpMap
MAPINDEX_LENGTH
OpCodes
ENDOP
m_ops
setOp
OpMap
MAPINDEX_LENGTH
m_ops
getOp
OpMap
MAPINDEX_LENGTH
m_ops
setOp
opPos
OpMap
MAPINDEX_LENGTH
m_ops
getOp
OpMap
MAPINDEX_LENGTH
opPos
protected
void
QName
throws
javax
xml
transform
TransformerException
if
lookahead
m_ops
setOp
m_ops
getOp
OpMap
MAPINDEX_LENGTH
m_queueMark
m_ops
setOp
OpMap
MAPINDEX_LENGTH
m_ops
getOp
OpMap
MAPINDEX_LENGTH
nextToken
consumeExpected
else
m_ops
setOp
m_ops
getOp
OpMap
MAPINDEX_LENGTH
OpCodes
EMPTY
m_ops
setOp
OpMap
MAPINDEX_LENGTH
m_ops
getOp
OpMap
MAPINDEX_LENGTH
m_ops
setOp
m_ops
getOp
OpMap
MAPINDEX_LENGTH
m_queueMark
m_ops
setOp
OpMap
MAPINDEX_LENGTH
m_ops
getOp
OpMap
MAPINDEX_LENGTH
nextToken
protected
void
NCName
m_ops
setOp
m_ops
getOp
OpMap
MAPINDEX_LENGTH
m_queueMark
m_ops
setOp
OpMap
MAPINDEX_LENGTH
m_ops
getOp
OpMap
MAPINDEX_LENGTH
nextToken
protected
void
Literal
throws
javax
xml
transform
TransformerException
int
last
m_token
length
char
c0
m_tokenChar
char
cX
m_token
charAt
last
if
c0
cX
c0
cX
int
tokenQueuePos
m_queueMark
m_ops
m_tokenQueue
setElementAt
tokenQueuePos
Object
obj
new
XString
m_token
substring
last
m_ops
m_tokenQueue
setElementAt
obj
tokenQueuePos
m_ops
setOp
m_ops
getOp
OpMap
MAPINDEX_LENGTH
tokenQueuePos
m_ops
setOp
OpMap
MAPINDEX_LENGTH
m_ops
getOp
OpMap
MAPINDEX_LENGTH
nextToken
else
error
XPATHErrorResources
ER_PATTERN_LITERAL_NEEDS_BE_QUOTED
new
Object
m_token
protected
void
Number
throws
javax
xml
transform
TransformerException
if
m_token
double
num
try
num
Double
valueOf
m_token
doubleValue
catch
NumberFormatException
nfe
num
error
XPATHErrorResources
ER_COULDNOT_BE_FORMATTED_TO_NUMBER
new
Object
m_token
m_ops
m_tokenQueue
setElementAt
new
XNumber
num
m_queueMark
m_ops
setOp
m_ops
getOp
OpMap
MAPINDEX_LENGTH
m_queueMark
m_ops
setOp
OpMap
MAPINDEX_LENGTH
m_ops
getOp
OpMap
MAPINDEX_LENGTH
nextToken
protected
void
Pattern
throws
javax
xml
transform
TransformerException
while
LocationPathPattern
if
tokenIs
nextToken
else
break
protected
void
LocationPathPattern
throws
javax
xml
transform
TransformerException
int
opPos
m_ops
getOp
OpMap
MAPINDEX_LENGTH
final
int
RELATIVE_PATH_NOT_PERMITTED
final
int
RELATIVE_PATH_PERMITTED
final
int
RELATIVE_PATH_REQUIRED
int
relativePathStatus
RELATIVE_PATH_NOT_PERMITTED
appendOp
OpCodes
OP_LOCATIONPATHPATTERN
if
lookahead
tokenIs
Keywords
FUNC_ID_STRING
tokenIs
Keywords
FUNC_KEY_STRING
IdKeyPattern
if
tokenIs
nextToken
if
tokenIs
appendOp
OpCodes
MATCH_ANY_ANCESTOR
nextToken
else
appendOp
OpCodes
MATCH_IMMEDIATE_ANCESTOR
m_ops
setOp
m_ops
getOp
OpMap
MAPINDEX_LENGTH
m_ops
setOp
m_ops
getOp
OpMap
MAPINDEX_LENGTH
OpCodes
NODETYPE_FUNCTEST
relativePathStatus
RELATIVE_PATH_REQUIRED
else
if
tokenIs
if
lookahead
appendOp
OpCodes
MATCH_ANY_ANCESTOR
nextToken
relativePathStatus
RELATIVE_PATH_REQUIRED
else
appendOp
OpCodes
FROM_ROOT
relativePathStatus
RELATIVE_PATH_PERMITTED
m_ops
setOp
m_ops
getOp
OpMap
MAPINDEX_LENGTH
m_ops
setOp
m_ops
getOp
OpMap
MAPINDEX_LENGTH
OpCodes
NODETYPE_ROOT
nextToken
else
relativePathStatus
RELATIVE_PATH_REQUIRED
if
relativePathStatus
RELATIVE_PATH_NOT_PERMITTED
if
tokenIs
m_token
RelativePathPattern
else
if
relativePathStatus
RELATIVE_PATH_REQUIRED
error
XPATHErrorResources
ER_EXPECTED_REL_PATH_PATTERN
m_ops
setOp
m_ops
getOp
OpMap
MAPINDEX_LENGTH
OpCodes
ENDOP
m_ops
setOp
OpMap
MAPINDEX_LENGTH
m_ops
getOp
OpMap
MAPINDEX_LENGTH
m_ops
setOp
opPos
OpMap
MAPINDEX_LENGTH
m_ops
getOp
OpMap
MAPINDEX_LENGTH
opPos
protected
void
IdKeyPattern
throws
javax
xml
transform
TransformerException
FunctionCall
protected
void
RelativePathPattern
throws
javax
xml
transform
TransformerException
boolean
trailingSlashConsumed
StepPattern
while
tokenIs
nextToken
trailingSlashConsumed
StepPattern
trailingSlashConsumed
protected
boolean
StepPattern
boolean
isLeadingSlashPermitted
throws
javax
xml
transform
TransformerException
return
AbbreviatedNodeTestStep
isLeadingSlashPermitted
protected
boolean
AbbreviatedNodeTestStep
boolean
isLeadingSlashPermitted
throws
javax
xml
transform
TransformerException
int
opPos
m_ops
getOp
OpMap
MAPINDEX_LENGTH
int
axesType
int
matchTypePos
if
tokenIs
axesType
OpCodes
MATCH_ATTRIBUTE
appendOp
axesType
nextToken
else
if
this
lookahead
if
tokenIs
axesType
OpCodes
MATCH_ATTRIBUTE
appendOp
axesType
else
if
tokenIs
matchTypePos
m_ops
getOp
OpMap
MAPINDEX_LENGTH
axesType
OpCodes
MATCH_IMMEDIATE_ANCESTOR
appendOp
axesType
else
axesType
this
error
XPATHErrorResources
ER_AXES_NOT_ALLOWED
new
Object
this
m_token
nextToken
nextToken
else
if
tokenIs
if
isLeadingSlashPermitted
error
XPATHErrorResources
ER_EXPECTED_STEP_PATTERN
axesType
OpCodes
MATCH_ANY_ANCESTOR
appendOp
axesType
nextToken
else
matchTypePos
m_ops
getOp
OpMap
MAPINDEX_LENGTH
axesType
OpCodes
MATCH_IMMEDIATE_ANCESTOR
appendOp
axesType
m_ops
setOp
OpMap
MAPINDEX_LENGTH
m_ops
getOp
OpMap
MAPINDEX_LENGTH
NodeTest
axesType
m_ops
setOp
opPos
OpMap
MAPINDEX_LENGTH
m_ops
getOp
OpMap
MAPINDEX_LENGTH
opPos
while
tokenIs
Predicate
boolean
trailingSlashConsumed
if
matchTypePos
tokenIs
lookahead
m_ops
setOp
matchTypePos
OpCodes
MATCH_ANY_ANCESTOR
nextToken
trailingSlashConsumed
else
trailingSlashConsumed
m_ops
setOp
opPos
OpMap
MAPINDEX_LENGTH
m_ops
getOp
OpMap
MAPINDEX_LENGTH
opPos
return
trailingSlashConsumed
