package
org
apache
xpath
import
org
apache
xalan
res
XSLMessages
import
org
apache
xml
utils
DOM2Helper
import
org
apache
xpath
axes
ContextNodeList
import
org
apache
xpath
res
XPATHErrorResources
import
org
w3c
dom
DOMException
import
org
w3c
dom
Node
import
org
w3c
dom
NodeList
import
org
w3c
dom
traversal
NodeFilter
import
org
w3c
dom
traversal
NodeIterator
public
class
NodeSet
implements
NodeList
NodeIterator
Cloneable
ContextNodeList
public
NodeSet
m_blocksize
m_mapSize
public
NodeSet
int
blocksize
m_blocksize
blocksize
m_mapSize
public
NodeSet
NodeList
nodelist
this
addNodes
nodelist
public
NodeSet
NodeSet
nodelist
this
addNodes
NodeIterator
nodelist
public
NodeSet
NodeIterator
ni
this
addNodes
ni
public
NodeSet
Node
node
this
addNode
node
public
Node
getRoot
return
public
NodeIterator
cloneWithReset
throws
CloneNotSupportedException
NodeSet
clone
NodeSet
clone
clone
reset
return
clone
public
void
reset
m_next
public
int
getWhatToShow
return
NodeFilter
SHOW_ALL
NodeFilter
SHOW_ENTITY_REFERENCE
public
NodeFilter
getFilter
return
public
boolean
getExpandEntityReferences
return
public
Node
nextNode
throws
DOMException
if
m_next
this
size
Node
next
this
elementAt
m_next
m_next
return
next
else
return
public
Node
previousNode
throws
DOMException
if
m_cacheNodes
throw
new
RuntimeException
XSLMessages
createXPATHMessage
XPATHErrorResources
ER_NODESET_CANNOT_ITERATE
if
m_next
m_next
return
this
elementAt
m_next
else
return
public
void
detach
public
boolean
isFresh
return
m_next
public
void
runTo
int
index
if
m_cacheNodes
throw
new
RuntimeException
XSLMessages
createXPATHMessage
XPATHErrorResources
ER_NODESET_CANNOT_INDEX
if
index
m_next
m_firstFree
m_next
index
else
m_next
m_firstFree
public
Node
item
int
index
runTo
index
return
Node
this
elementAt
index
public
int
getLength
runTo
return
this
size
public
void
addNode
Node
n
if
m_mutable
throw
new
RuntimeException
XSLMessages
createXPATHMessage
XPATHErrorResources
ER_NODESET_NOT_MUTABLE
this
addElement
n
public
void
insertNode
Node
n
int
pos
if
m_mutable
throw
new
RuntimeException
XSLMessages
createXPATHMessage
XPATHErrorResources
ER_NODESET_NOT_MUTABLE
insertElementAt
n
pos
public
void
removeNode
Node
n
if
m_mutable
throw
new
RuntimeException
XSLMessages
createXPATHMessage
XPATHErrorResources
ER_NODESET_NOT_MUTABLE
this
removeElement
n
public
void
addNodes
NodeList
nodelist
if
m_mutable
throw
new
RuntimeException
XSLMessages
createXPATHMessage
XPATHErrorResources
ER_NODESET_NOT_MUTABLE
if
nodelist
int
nChildren
nodelist
getLength
for
int
i
i
nChildren
i
Node
obj
nodelist
item
i
if
obj
addElement
obj
public
void
addNodes
NodeSet
ns
if
m_mutable
throw
new
RuntimeException
XSLMessages
createXPATHMessage
XPATHErrorResources
ER_NODESET_NOT_MUTABLE
addNodes
NodeIterator
ns
public
void
addNodes
NodeIterator
iterator
if
m_mutable
throw
new
RuntimeException
XSLMessages
createXPATHMessage
XPATHErrorResources
ER_NODESET_NOT_MUTABLE
if
iterator
Node
obj
while
obj
iterator
nextNode
addElement
obj
public
void
addNodesInDocOrder
NodeList
nodelist
XPathContext
support
if
m_mutable
throw
new
RuntimeException
XSLMessages
createXPATHMessage
XPATHErrorResources
ER_NODESET_NOT_MUTABLE
int
nChildren
nodelist
getLength
for
int
i
i
nChildren
i
Node
node
nodelist
item
i
if
node
addNodeInDocOrder
node
support
public
void
addNodesInDocOrder
NodeIterator
iterator
XPathContext
support
if
m_mutable
throw
new
RuntimeException
XSLMessages
createXPATHMessage
XPATHErrorResources
ER_NODESET_NOT_MUTABLE
Node
node
while
node
iterator
nextNode
addNodeInDocOrder
node
support
private
boolean
addNodesInDocOrder
int
start
int
end
int
testIndex
NodeList
nodelist
XPathContext
support
if
m_mutable
throw
new
RuntimeException
XSLMessages
createXPATHMessage
XPATHErrorResources
ER_NODESET_NOT_MUTABLE
boolean
foundit
int
i
Node
node
nodelist
item
testIndex
for
i
end
i
start
i
Node
child
Node
elementAt
i
if
child
node
i
break
if
DOM2Helper
isNodeAfter
node
child
insertElementAt
node
i
testIndex
if
testIndex
boolean
foundPrev
addNodesInDocOrder
i
testIndex
nodelist
support
if
foundPrev
addNodesInDocOrder
i
size
testIndex
nodelist
support
break
if
i
insertElementAt
node
return
foundit
public
int
addNodeInDocOrder
Node
node
boolean
test
XPathContext
support
if
m_mutable
throw
new
RuntimeException
XSLMessages
createXPATHMessage
XPATHErrorResources
ER_NODESET_NOT_MUTABLE
int
insertIndex
if
test
int
size
size
i
for
i
size
i
i
Node
child
Node
elementAt
i
if
child
node
i
break
if
DOM2Helper
isNodeAfter
node
child
break
if
i
insertIndex
i
insertElementAt
node
insertIndex
else
insertIndex
this
size
boolean
foundit
for
int
i
i
insertIndex
i
if
this
item
i
equals
node
foundit
break
if
foundit
addElement
node
return
insertIndex
public
int
addNodeInDocOrder
Node
node
XPathContext
support
if
m_mutable
throw
new
RuntimeException
XSLMessages
createXPATHMessage
XPATHErrorResources
ER_NODESET_NOT_MUTABLE
return
addNodeInDocOrder
node
support
transient
protected
int
m_next
public
int
getCurrentPos
return
m_next
public
void
setCurrentPos
int
i
if
m_cacheNodes
throw
new
RuntimeException
XSLMessages
createXPATHMessage
XPATHErrorResources
ER_NODESET_CANNOT_INDEX
m_next
i
public
Node
getCurrentNode
if
m_cacheNodes
throw
new
RuntimeException
XSLMessages
createXPATHMessage
XPATHErrorResources
ER_NODESET_CANNOT_INDEX
int
saved
m_next
Node
n
m_next
m_firstFree
elementAt
m_next
m_next
saved
return
n
transient
protected
boolean
m_mutable
transient
protected
boolean
m_cacheNodes
public
boolean
getShouldCacheNodes
return
m_cacheNodes
public
void
setShouldCacheNodes
boolean
b
if
isFresh
throw
new
RuntimeException
XSLMessages
createXPATHMessage
XPATHErrorResources
ER_CANNOT_CALL_SETSHOULDCACHENODE
m_cacheNodes
b
m_mutable
transient
private
int
m_last
public
int
getLast
return
m_last
public
void
setLast
int
last
m_last
last
private
int
m_blocksize
Node
m_map
protected
int
m_firstFree
private
int
m_mapSize
public
Object
clone
throws
CloneNotSupportedException
NodeSet
clone
NodeSet
super
clone
if
this
m_map
this
m_map
clone
m_map
clone
m_map
new
Node
this
m_map
length
System
arraycopy
this
m_map
clone
m_map
this
m_map
length
return
clone
public
int
size
return
m_firstFree
public
void
addElement
Node
value
if
m_mutable
throw
new
RuntimeException
XSLMessages
createXPATHMessage
XPATHErrorResources
ER_NODESET_NOT_MUTABLE
if
m_firstFree
m_mapSize
if
m_map
m_map
new
Node
m_blocksize
m_mapSize
m_blocksize
else
m_mapSize
m_blocksize
Node
newMap
new
Node
m_mapSize
System
arraycopy
m_map
newMap
m_firstFree
m_map
newMap
m_map
m_firstFree
value
m_firstFree
public
final
void
push
Node
value
int
ff
m_firstFree
if
ff
m_mapSize
if
m_map
m_map
new
Node
m_blocksize
m_mapSize
m_blocksize
else
m_mapSize
m_blocksize
Node
newMap
new
Node
m_mapSize
System
arraycopy
m_map
newMap
ff
m_map
newMap
m_map
ff
value
ff
m_firstFree
ff
public
final
Node
pop
m_firstFree
Node
n
m_map
m_firstFree
m_map
m_firstFree
return
n
public
final
Node
popAndTop
m_firstFree
m_map
m_firstFree
return
m_firstFree
m_map
m_firstFree
public
final
void
popQuick
m_firstFree
m_map
m_firstFree
public
final
Node
peepOrNull
return
m_map
m_firstFree
m_map
m_firstFree
public
final
void
pushPair
Node
v1
Node
v2
if
m_map
m_map
new
Node
m_blocksize
m_mapSize
m_blocksize
else
if
m_firstFree
m_mapSize
m_mapSize
m_blocksize
Node
newMap
new
Node
m_mapSize
System
arraycopy
m_map
newMap
m_firstFree
m_map
newMap
m_map
m_firstFree
v1
m_map
m_firstFree
v2
m_firstFree
public
final
void
popPair
m_firstFree
m_map
m_firstFree
m_map
m_firstFree
public
final
void
setTail
Node
n
m_map
m_firstFree
n
public
final
void
setTailSub1
Node
n
m_map
m_firstFree
n
public
final
Node
peepTail
return
m_map
m_firstFree
public
final
Node
peepTailSub1
return
m_map
m_firstFree
public
void
insertElementAt
Node
value
int
at
if
m_mutable
throw
new
RuntimeException
XSLMessages
createXPATHMessage
XPATHErrorResources
ER_NODESET_NOT_MUTABLE
if
m_map
m_map
new
Node
m_blocksize
m_mapSize
m_blocksize
else
if
m_firstFree
m_mapSize
m_mapSize
m_blocksize
Node
newMap
new
Node
m_mapSize
System
arraycopy
m_map
newMap
m_firstFree
m_map
newMap
if
at
m_firstFree
System
arraycopy
m_map
at
m_map
at
m_firstFree
at
m_map
at
value
m_firstFree
public
void
appendNodes
NodeSet
nodes
int
nNodes
nodes
size
if
m_map
m_mapSize
nNodes
m_blocksize
m_map
new
Node
m_mapSize
else
if
m_firstFree
nNodes
m_mapSize
m_mapSize
nNodes
m_blocksize
Node
newMap
new
Node
m_mapSize
System
arraycopy
m_map
newMap
m_firstFree
nNodes
m_map
newMap
System
arraycopy
nodes
m_map
m_map
m_firstFree
nNodes
m_firstFree
nNodes
public
void
removeAllElements
if
m_map
return
for
int
i
i
m_firstFree
i
m_map
i
m_firstFree
public
boolean
removeElement
Node
s
if
m_mutable
throw
new
RuntimeException
XSLMessages
createXPATHMessage
XPATHErrorResources
ER_NODESET_NOT_MUTABLE
if
m_map
return
for
int
i
i
m_firstFree
i
Node
node
m_map
i
if
node
node
equals
s
if
i
m_firstFree
System
arraycopy
m_map
i
m_map
i
m_firstFree
i
else
m_map
i
m_firstFree
return
return
public
void
removeElementAt
int
i
if
m_map
return
if
i
m_firstFree
System
arraycopy
m_map
i
m_map
i
m_firstFree
i
else
m_map
i
public
void
setElementAt
Node
node
int
index
if
m_mutable
throw
new
RuntimeException
XSLMessages
createXPATHMessage
XPATHErrorResources
ER_NODESET_NOT_MUTABLE
if
m_map
m_map
new
Node
m_blocksize
m_mapSize
m_blocksize
m_map
index
node
public
Node
elementAt
int
i
if
m_map
return
return
m_map
i
public
boolean
contains
Node
s
runTo
if
m_map
return
for
int
i
i
m_firstFree
i
Node
node
m_map
i
if
node
node
equals
s
return
return
public
int
indexOf
Node
elem
int
index
runTo
if
m_map
return
for
int
i
index
i
m_firstFree
i
Node
node
m_map
i
if
node
node
equals
elem
return
i
return
public
int
indexOf
Node
elem
runTo
if
m_map
return
for
int
i
i
m_firstFree
i
Node
node
m_map
i
if
node
node
equals
elem
return
i
return
