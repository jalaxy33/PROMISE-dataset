package
org
apache
xalan
lib
sql
import
java
lang
reflect
Method
import
java
sql
Connection
import
java
sql
DatabaseMetaData
import
java
sql
Driver
import
java
sql
DriverManager
import
java
sql
SQLException
import
java
util
Enumeration
import
java
util
Properties
import
java
util
Vector
import
org
apache
xalan
res
XSLMessages
import
org
apache
xalan
res
XSLTErrorResources
public
class
DefaultConnectionPool
implements
ConnectionPool
private
Driver
m_Driver
private
static
final
boolean
DEBUG
private
String
m_driver
new
String
private
String
m_url
new
String
private
int
m_PoolMinSize
private
Properties
m_ConnectionProtocol
new
Properties
private
Vector
m_pool
new
Vector
private
boolean
m_IsActive
public
DefaultConnectionPool
public
boolean
isEnabled
return
m_IsActive
public
void
setDriver
String
d
m_driver
d
public
void
setURL
String
url
m_url
url
public
void
freeUnused
for
int
x
x
m_pool
size
x
PooledConnection
pcon
PooledConnection
m_pool
elementAt
x
if
pcon
inUse
if
DEBUG
System
err
println
x
pcon
close
public
boolean
hasActiveConnections
return
m_pool
size
public
void
setPassword
String
p
m_ConnectionProtocol
put
p
public
void
setUser
String
u
m_ConnectionProtocol
put
u
public
void
setProtocol
Properties
p
Enumeration
e
p
keys
while
e
hasMoreElements
String
key
String
e
nextElement
m_ConnectionProtocol
put
key
p
getProperty
key
public
void
setMinConnections
int
n
m_PoolMinSize
n
public
boolean
testConnection
try
if
DEBUG
System
out
println
Connection
conn
getConnection
if
DEBUG
DatabaseMetaData
dma
conn
getMetaData
System
out
println
dma
getURL
System
out
println
dma
getDriverName
System
out
println
dma
getDriverVersion
System
out
println
if
conn
return
releaseConnection
conn
if
DEBUG
System
out
println
return
catch
Exception
e
if
DEBUG
System
out
println
e
printStackTrace
return
public
synchronized
Connection
getConnection
throws
IllegalArgumentException
SQLException
PooledConnection
pcon
if
m_pool
size
m_PoolMinSize
initializePool
for
int
x
x
m_pool
size
x
pcon
PooledConnection
m_pool
elementAt
x
if
pcon
inUse
pcon
setInUse
return
pcon
getConnection
Connection
con
createConnection
pcon
new
PooledConnection
con
pcon
setInUse
m_pool
addElement
pcon
return
pcon
getConnection
public
synchronized
void
releaseConnection
Connection
con
throws
SQLException
for
int
x
x
m_pool
size
x
PooledConnection
pcon
PooledConnection
m_pool
elementAt
x
if
pcon
getConnection
con
if
DEBUG
System
out
println
x
if
isEnabled
con
close
m_pool
removeElementAt
x
if
DEBUG
System
out
println
else
pcon
setInUse
break
public
synchronized
void
releaseConnectionOnError
Connection
con
throws
SQLException
for
int
x
x
m_pool
size
x
PooledConnection
pcon
PooledConnection
m_pool
elementAt
x
if
pcon
getConnection
con
if
DEBUG
System
out
println
x
con
close
m_pool
removeElementAt
x
if
DEBUG
System
out
println
break
private
Connection
createConnection
throws
SQLException
Connection
con
con
m_Driver
connect
m_url
m_ConnectionProtocol
return
con
public
synchronized
void
initializePool
throws
IllegalArgumentException
SQLException
if
m_driver
throw
new
IllegalArgumentException
XSLMessages
createMessage
XSLTErrorResources
ER_NO_DRIVER_NAME_SPECIFIED
if
m_url
throw
new
IllegalArgumentException
XSLMessages
createMessage
XSLTErrorResources
ER_NO_URL_SPECIFIED
if
m_PoolMinSize
throw
new
IllegalArgumentException
XSLMessages
createMessage
XSLTErrorResources
ER_POOLSIZE_LESS_THAN_ONE
try
Class
cls
try
Method
m
Thread
class
getMethod
ClassLoader
classLoader
ClassLoader
m
invoke
Thread
currentThread
cls
classLoader
loadClass
m_driver
catch
Exception
e
cls
Class
forName
m_driver
if
cls
cls
Class
forName
m_driver
m_Driver
Driver
cls
newInstance
DriverManager
registerDriver
m_Driver
catch
ClassNotFoundException
e
throw
new
IllegalArgumentException
XSLMessages
createMessage
XSLTErrorResources
ER_INVALID_DRIVER_NAME
catch
Exception
e
throw
new
IllegalArgumentException
XSLMessages
createMessage
XSLTErrorResources
ER_INVALID_DRIVER_NAME
if
m_IsActive
return
do
Connection
con
createConnection
if
con
PooledConnection
pcon
new
PooledConnection
con
addConnection
pcon
if
DEBUG
System
out
println
while
m_pool
size
m_PoolMinSize
private
void
addConnection
PooledConnection
value
m_pool
addElement
value
protected
void
finalize
throws
Throwable
if
DEBUG
System
out
println
for
int
x
x
m_pool
size
x
if
DEBUG
System
out
println
x
PooledConnection
pcon
PooledConnection
m_pool
elementAt
x
if
pcon
inUse
pcon
close
else
if
DEBUG
System
out
println
try
java
lang
Thread
sleep
pcon
close
catch
InterruptedException
ie
if
DEBUG
System
err
println
ie
getMessage
if
DEBUG
System
out
println
super
finalize
public
void
setPoolEnabled
boolean
flag
m_IsActive
flag
if
flag
freeUnused
