package
org
apache
xalan
xsltc
compiler
import
java
util
ArrayList
import
org
apache
bcel
classfile
Field
import
org
apache
bcel
generic
ALOAD
import
org
apache
bcel
generic
ASTORE
import
org
apache
bcel
generic
BranchHandle
import
org
apache
bcel
generic
CHECKCAST
import
org
apache
bcel
generic
ConstantPoolGen
import
org
apache
bcel
generic
GETFIELD
import
org
apache
bcel
generic
GOTO
import
org
apache
bcel
generic
IFNONNULL
import
org
apache
bcel
generic
INVOKESPECIAL
import
org
apache
bcel
generic
INVOKESTATIC
import
org
apache
bcel
generic
INVOKEVIRTUAL
import
org
apache
bcel
generic
InstructionList
import
org
apache
bcel
generic
L2I
import
org
apache
bcel
generic
LocalVariableGen
import
org
apache
bcel
generic
NEW
import
org
apache
bcel
generic
PUSH
import
org
apache
bcel
generic
PUTFIELD
import
org
apache
xalan
xsltc
compiler
util
ClassGenerator
import
org
apache
xalan
xsltc
compiler
util
MatchGenerator
import
org
apache
xalan
xsltc
compiler
util
MethodGenerator
import
org
apache
xalan
xsltc
compiler
util
NodeCounterGenerator
import
org
apache
xalan
xsltc
compiler
util
RealType
import
org
apache
xalan
xsltc
compiler
util
Type
import
org
apache
xalan
xsltc
compiler
util
TypeCheckError
import
org
apache
xalan
xsltc
compiler
util
Util
final
class
Number
extends
Instruction
implements
Closure
private
static
final
int
LEVEL_SINGLE
private
static
final
int
LEVEL_MULTIPLE
private
static
final
int
LEVEL_ANY
static
final
private
String
ClassNames
static
final
private
String
FieldNames
private
Pattern
_from
private
Pattern
_count
private
Expression
_value
private
AttributeValueTemplate
_lang
private
AttributeValueTemplate
_format
private
AttributeValueTemplate
_letterValue
private
AttributeValueTemplate
_groupingSeparator
private
AttributeValueTemplate
_groupingSize
private
int
_level
LEVEL_SINGLE
private
boolean
_formatNeeded
private
String
_className
private
ArrayList
_closureVars
public
boolean
inInnerClass
return
_className
public
Closure
getParentClosure
return
public
String
getInnerClassName
return
_className
public
void
addVariable
VariableRefBase
variableRef
if
_closureVars
_closureVars
new
ArrayList
if
_closureVars
contains
variableRef
_closureVars
add
variableRef
public
void
parseContents
Parser
parser
final
int
count
_attributes
getLength
for
int
i
i
count
i
final
String
name
_attributes
getQName
i
final
String
value
_attributes
getValue
i
if
name
equals
_value
parser
parseExpression
this
name
else
if
name
equals
_count
parser
parsePattern
this
name
else
if
name
equals
_from
parser
parsePattern
this
name
else
if
name
equals
if
value
equals
_level
LEVEL_SINGLE
else
if
value
equals
_level
LEVEL_MULTIPLE
else
if
value
equals
_level
LEVEL_ANY
else
if
name
equals
_format
new
AttributeValueTemplate
value
parser
this
_formatNeeded
else
if
name
equals
_lang
new
AttributeValueTemplate
value
parser
this
_formatNeeded
else
if
name
equals
_letterValue
new
AttributeValueTemplate
value
parser
this
_formatNeeded
else
if
name
equals
_groupingSeparator
new
AttributeValueTemplate
value
parser
this
_formatNeeded
else
if
name
equals
_groupingSize
new
AttributeValueTemplate
value
parser
this
_formatNeeded
public
Type
typeCheck
SymbolTable
stable
throws
TypeCheckError
if
_value
Type
tvalue
_value
typeCheck
stable
if
tvalue
instanceof
RealType
_value
new
CastExpr
_value
Type
Real
if
_count
_count
typeCheck
stable
if
_from
_from
typeCheck
stable
if
_format
_format
typeCheck
stable
if
_lang
_lang
typeCheck
stable
if
_letterValue
_letterValue
typeCheck
stable
if
_groupingSeparator
_groupingSeparator
typeCheck
stable
if
_groupingSize
_groupingSize
typeCheck
stable
return
Type
Void
public
boolean
hasValue
return
_value
public
boolean
isDefault
return
_from
_count
private
void
compileDefault
ClassGenerator
classGen
MethodGenerator
methodGen
int
index
ConstantPoolGen
cpg
classGen
getConstantPool
InstructionList
il
methodGen
getInstructionList
int
fieldIndexes
getXSLTC
getNumberFieldIndexes
if
fieldIndexes
_level
Field
defaultNode
new
Field
ACC_PRIVATE
cpg
addUtf8
FieldNames
_level
cpg
addUtf8
NODE_COUNTER_SIG
cpg
getConstantPool
classGen
addField
defaultNode
fieldIndexes
_level
cpg
addFieldref
classGen
getClassName
FieldNames
_level
NODE_COUNTER_SIG
il
append
classGen
loadTranslet
il
append
new
GETFIELD
fieldIndexes
_level
final
BranchHandle
ifBlock1
il
append
new
IFNONNULL
index
cpg
addMethodref
ClassNames
_level
TRANSLET_INTF_SIG
DOM_INTF_SIG
NODE_ITERATOR_SIG
NODE_COUNTER_SIG
il
append
classGen
loadTranslet
il
append
methodGen
loadDOM
il
append
methodGen
loadIterator
il
append
new
INVOKESTATIC
index
il
append
DUP
il
append
classGen
loadTranslet
il
append
SWAP
il
append
new
PUTFIELD
fieldIndexes
_level
final
BranchHandle
ifBlock2
il
append
new
GOTO
ifBlock1
setTarget
il
append
classGen
loadTranslet
il
append
new
GETFIELD
fieldIndexes
_level
ifBlock2
setTarget
il
append
NOP
private
void
compileConstructor
ClassGenerator
classGen
MethodGenerator
cons
final
InstructionList
il
new
InstructionList
final
ConstantPoolGen
cpg
classGen
getConstantPool
cons
new
MethodGenerator
ACC_PUBLIC
org
apache
bcel
generic
Type
VOID
new
org
apache
bcel
generic
Type
Util
getJCRefType
TRANSLET_INTF_SIG
Util
getJCRefType
DOM_INTF_SIG
Util
getJCRefType
NODE_ITERATOR_SIG
new
String
_className
il
cpg
il
append
ALOAD_0
il
append
ALOAD_1
il
append
ALOAD_2
il
append
new
ALOAD
int
index
cpg
addMethodref
ClassNames
_level
TRANSLET_INTF_SIG
DOM_INTF_SIG
NODE_ITERATOR_SIG
il
append
new
INVOKESPECIAL
index
il
append
RETURN
cons
stripAttributes
cons
setMaxLocals
cons
setMaxStack
classGen
addMethod
cons
getMethod
private
void
compileLocals
NodeCounterGenerator
nodeCounterGen
MatchGenerator
matchGen
InstructionList
il
int
field
LocalVariableGen
local
ConstantPoolGen
cpg
nodeCounterGen
getConstantPool
local
matchGen
addLocalVariable
Util
getJCRefType
NODE_ITERATOR_SIG
field
cpg
addFieldref
NODE_COUNTER
ITERATOR_FIELD_SIG
il
append
ALOAD_0
il
append
new
GETFIELD
field
il
append
new
ASTORE
local
getIndex
matchGen
setIteratorIndex
local
getIndex
local
matchGen
addLocalVariable
Util
getJCRefType
TRANSLET_SIG
field
cpg
addFieldref
NODE_COUNTER
il
append
ALOAD_0
il
append
new
GETFIELD
field
il
append
new
CHECKCAST
cpg
addClass
TRANSLET_CLASS
il
append
new
ASTORE
local
getIndex
nodeCounterGen
setTransletIndex
local
getIndex
local
matchGen
addLocalVariable
Util
getJCRefType
DOM_INTF_SIG
field
cpg
addFieldref
_className
DOM_INTF_SIG
il
append
ALOAD_0
il
append
new
GETFIELD
field
il
append
new
ASTORE
local
getIndex
matchGen
setDomIndex
local
getIndex
private
void
compilePatterns
ClassGenerator
classGen
MethodGenerator
methodGen
int
current
int
field
LocalVariableGen
local
MatchGenerator
matchGen
NodeCounterGenerator
nodeCounterGen
_className
getXSLTC
getHelperClassName
nodeCounterGen
new
NodeCounterGenerator
_className
ClassNames
_level
toString
ACC_PUBLIC
ACC_SUPER
classGen
getStylesheet
InstructionList
il
ConstantPoolGen
cpg
nodeCounterGen
getConstantPool
final
int
closureLen
_closureVars
_closureVars
size
for
int
i
i
closureLen
i
VariableBase
var
VariableRefBase
_closureVars
get
i
getVariable
nodeCounterGen
addField
new
Field
ACC_PUBLIC
cpg
addUtf8
var
getVariable
cpg
addUtf8
var
getType
toSignature
cpg
getConstantPool
compileConstructor
nodeCounterGen
if
_from
il
new
InstructionList
matchGen
new
MatchGenerator
ACC_PUBLIC
ACC_FINAL
org
apache
bcel
generic
Type
BOOLEAN
new
org
apache
bcel
generic
Type
org
apache
bcel
generic
Type
INT
new
String
_className
il
cpg
compileLocals
nodeCounterGen
matchGen
il
il
append
matchGen
loadContextNode
_from
translate
nodeCounterGen
matchGen
_from
synthesize
nodeCounterGen
matchGen
il
append
IRETURN
matchGen
stripAttributes
matchGen
setMaxLocals
matchGen
setMaxStack
matchGen
removeNOPs
nodeCounterGen
addMethod
matchGen
getMethod
if
_count
il
new
InstructionList
matchGen
new
MatchGenerator
ACC_PUBLIC
ACC_FINAL
org
apache
bcel
generic
Type
BOOLEAN
new
org
apache
bcel
generic
Type
org
apache
bcel
generic
Type
INT
new
String
_className
il
cpg
compileLocals
nodeCounterGen
matchGen
il
il
append
matchGen
loadContextNode
_count
translate
nodeCounterGen
matchGen
_count
synthesize
nodeCounterGen
matchGen
il
append
IRETURN
matchGen
stripAttributes
matchGen
setMaxLocals
matchGen
setMaxStack
matchGen
removeNOPs
nodeCounterGen
addMethod
matchGen
getMethod
getXSLTC
dumpClass
nodeCounterGen
getJavaClass
cpg
classGen
getConstantPool
il
methodGen
getInstructionList
final
int
index
cpg
addMethodref
_className
TRANSLET_INTF_SIG
DOM_INTF_SIG
NODE_ITERATOR_SIG
il
append
new
NEW
cpg
addClass
_className
il
append
DUP
il
append
classGen
loadTranslet
il
append
methodGen
loadDOM
il
append
methodGen
loadIterator
il
append
new
INVOKESPECIAL
index
for
int
i
i
closureLen
i
final
VariableRefBase
varRef
VariableRefBase
_closureVars
get
i
final
VariableBase
var
varRef
getVariable
final
Type
varType
var
getType
il
append
DUP
il
append
var
loadInstruction
il
append
new
PUTFIELD
cpg
addFieldref
_className
var
getVariable
varType
toSignature
public
void
translate
ClassGenerator
classGen
MethodGenerator
methodGen
int
index
final
ConstantPoolGen
cpg
classGen
getConstantPool
final
InstructionList
il
methodGen
getInstructionList
il
append
classGen
loadTranslet
if
hasValue
compileDefault
classGen
methodGen
_value
translate
classGen
methodGen
index
cpg
addMethodref
MATH_CLASS
il
append
new
INVOKESTATIC
index
il
append
new
L2I
index
cpg
addMethodref
NODE_COUNTER
NODE_COUNTER_SIG
il
append
new
INVOKEVIRTUAL
index
else
if
isDefault
compileDefault
classGen
methodGen
else
compilePatterns
classGen
methodGen
if
hasValue
il
append
methodGen
loadContextNode
index
cpg
addMethodref
NODE_COUNTER
SET_START_NODE
NODE_COUNTER_SIG
il
append
new
INVOKEVIRTUAL
index
if
_formatNeeded
if
_format
_format
translate
classGen
methodGen
else
il
append
new
PUSH
cpg
if
_lang
_lang
translate
classGen
methodGen
else
il
append
new
PUSH
cpg
if
_letterValue
_letterValue
translate
classGen
methodGen
else
il
append
new
PUSH
cpg
Constants
EMPTYSTRING
if
_groupingSeparator
_groupingSeparator
translate
classGen
methodGen
else
il
append
new
PUSH
cpg
Constants
EMPTYSTRING
if
_groupingSize
_groupingSize
translate
classGen
methodGen
else
il
append
new
PUSH
cpg
index
cpg
addMethodref
NODE_COUNTER
STRING_SIG
STRING_SIG
STRING_SIG
STRING_SIG
STRING_SIG
STRING_SIG
il
append
new
INVOKEVIRTUAL
index
else
index
cpg
addMethodref
NODE_COUNTER
NODE_COUNTER_SIG
il
append
new
INVOKEVIRTUAL
index
index
cpg
addMethodref
NODE_COUNTER
STRING_SIG
il
append
new
INVOKEVIRTUAL
index
il
append
methodGen
loadHandler
index
cpg
addMethodref
TRANSLET_CLASS
CHARACTERSW
CHARACTERSW_SIG
il
append
new
INVOKEVIRTUAL
index
