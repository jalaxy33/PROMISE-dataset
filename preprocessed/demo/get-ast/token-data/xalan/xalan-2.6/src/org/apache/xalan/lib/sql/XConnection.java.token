package
org
apache
xalan
lib
sql
import
java
math
BigDecimal
import
java
sql
Connection
import
java
sql
Date
import
java
sql
PreparedStatement
import
java
sql
ResultSet
import
java
sql
SQLException
import
java
sql
SQLWarning
import
java
sql
Statement
import
java
sql
Time
import
java
sql
Timestamp
import
java
util
Enumeration
import
java
util
Properties
import
java
util
StringTokenizer
import
java
util
Vector
import
org
apache
xalan
extensions
ExpressionContext
import
org
apache
xml
dtm
DTM
import
org
apache
xml
dtm
DTMManager
import
org
apache
xml
dtm
ref
DTMManagerDefault
import
org
apache
xpath
XPathContext
import
org
apache
xpath
objects
XBooleanStatic
import
org
w3c
dom
Element
import
org
w3c
dom
NamedNodeMap
import
org
w3c
dom
Node
import
org
w3c
dom
NodeList
import
javax
xml
transform
ErrorListener
import
javax
xml
transform
TransformerException
public
class
XConnection
private
static
final
boolean
DEBUG
private
ConnectionPool
m_ConnectionPool
private
Connection
m_Connection
private
boolean
m_DefaultPoolingEnabled
private
Vector
m_OpenSQLDocuments
new
Vector
private
ConnectionPoolManager
m_PoolMgr
new
ConnectionPoolManager
private
Vector
m_ParameterList
new
Vector
private
Exception
m_Error
private
SQLDocument
m_LastSQLDocumentWithError
private
boolean
m_FullErrors
private
SQLQueryParser
m_QueryParser
new
SQLQueryParser
private
boolean
m_IsDefaultPool
private
boolean
m_IsStreamingEnabled
private
boolean
m_InlineVariables
private
boolean
m_IsMultipleResultsEnabled
private
boolean
m_IsStatementCachingEnabled
public
XConnection
public
XConnection
ExpressionContext
exprContext
String
ConnPoolName
connect
exprContext
ConnPoolName
public
XConnection
ExpressionContext
exprContext
String
driver
String
dbURL
connect
exprContext
driver
dbURL
public
XConnection
ExpressionContext
exprContext
NodeList
list
connect
exprContext
list
public
XConnection
ExpressionContext
exprContext
String
driver
String
dbURL
String
user
String
password
connect
exprContext
driver
dbURL
user
password
public
XConnection
ExpressionContext
exprContext
String
driver
String
dbURL
Element
protocolElem
connect
exprContext
driver
dbURL
protocolElem
public
XBooleanStatic
connect
ExpressionContext
exprContext
String
ConnPoolName
try
m_ConnectionPool
m_PoolMgr
getPool
ConnPoolName
if
m_ConnectionPool
throw
new
java
lang
IllegalArgumentException
m_IsDefaultPool
return
new
XBooleanStatic
catch
Exception
e
setError
e
exprContext
return
new
XBooleanStatic
public
XBooleanStatic
connect
ExpressionContext
exprContext
String
driver
String
dbURL
try
init
driver
dbURL
new
Properties
return
new
XBooleanStatic
catch
SQLException
e
setError
e
exprContext
return
new
XBooleanStatic
catch
Exception
e
setError
e
exprContext
return
new
XBooleanStatic
public
XBooleanStatic
connect
ExpressionContext
exprContext
Element
protocolElem
try
initFromElement
protocolElem
return
new
XBooleanStatic
catch
SQLException
e
setError
e
exprContext
return
new
XBooleanStatic
catch
Exception
e
setError
e
exprContext
return
new
XBooleanStatic
public
XBooleanStatic
connect
ExpressionContext
exprContext
NodeList
list
try
initFromElement
Element
list
item
return
new
XBooleanStatic
catch
SQLException
e
setError
e
exprContext
return
new
XBooleanStatic
catch
Exception
e
setError
e
exprContext
return
new
XBooleanStatic
public
XBooleanStatic
connect
ExpressionContext
exprContext
String
driver
String
dbURL
String
user
String
password
try
Properties
prop
new
Properties
prop
put
user
prop
put
password
init
driver
dbURL
prop
return
new
XBooleanStatic
catch
SQLException
e
setError
e
exprContext
return
new
XBooleanStatic
catch
Exception
e
setError
e
exprContext
return
new
XBooleanStatic
public
XBooleanStatic
connect
ExpressionContext
exprContext
String
driver
String
dbURL
Element
protocolElem
try
Properties
prop
new
Properties
NamedNodeMap
atts
protocolElem
getAttributes
for
int
i
i
atts
getLength
i
prop
put
atts
item
i
getNodeName
atts
item
i
getNodeValue
init
driver
dbURL
prop
return
new
XBooleanStatic
catch
SQLException
e
setError
e
exprContext
return
new
XBooleanStatic
catch
Exception
e
setError
e
exprContext
return
new
XBooleanStatic
private
void
initFromElement
Element
e
throws
SQLException
Properties
prop
new
Properties
String
driver
String
dbURL
Node
n
e
getFirstChild
if
n
return
do
String
nName
n
getNodeName
if
nName
equalsIgnoreCase
driver
Node
n1
n
getFirstChild
if
n1
driver
n1
getNodeValue
if
nName
equalsIgnoreCase
dbURL
Node
n1
n
getFirstChild
if
n1
dbURL
n1
getNodeValue
if
nName
equalsIgnoreCase
String
s
Node
n1
n
getFirstChild
if
n1
s
n1
getNodeValue
prop
put
s
if
nName
equalsIgnoreCase
String
s
Node
n1
n
getFirstChild
if
n1
s
n1
getNodeValue
prop
put
s
if
nName
equalsIgnoreCase
String
Name
NamedNodeMap
attrs
n
getAttributes
Node
n1
attrs
getNamedItem
if
n1
String
s
Name
n1
getNodeValue
Node
n2
n
getFirstChild
if
n2
s
n2
getNodeValue
prop
put
Name
s
while
n
n
getNextSibling
init
driver
dbURL
prop
private
void
init
String
driver
String
dbURL
Properties
prop
throws
SQLException
Connection
con
if
DEBUG
System
out
println
String
user
prop
getProperty
if
user
user
String
passwd
prop
getProperty
if
passwd
passwd
String
poolName
driver
dbURL
user
passwd
ConnectionPool
cpool
m_PoolMgr
getPool
poolName
if
cpool
if
DEBUG
System
out
println
System
out
println
driver
System
out
println
dbURL
System
out
println
user
System
out
println
passwd
DefaultConnectionPool
defpool
new
DefaultConnectionPool
if
DEBUG
defpool
System
out
println
defpool
setDriver
driver
defpool
setURL
dbURL
defpool
setProtocol
prop
if
m_DefaultPoolingEnabled
defpool
setPoolEnabled
m_PoolMgr
registerPool
poolName
defpool
m_ConnectionPool
defpool
else
m_ConnectionPool
cpool
m_IsDefaultPool
try
con
m_ConnectionPool
getConnection
catch
SQLException
e
if
con
m_ConnectionPool
releaseConnectionOnError
con
con
throw
e
finally
if
con
m_ConnectionPool
releaseConnection
con
public
ConnectionPool
getConnectionPool
return
m_ConnectionPool
public
DTM
query
ExpressionContext
exprContext
String
queryString
SQLDocument
doc
try
if
DEBUG
System
out
println
if
m_ConnectionPool
return
SQLQueryParser
query
m_QueryParser
parse
this
queryString
SQLQueryParser
NO_INLINE_PARSER
doc
SQLDocument
getNewDocument
exprContext
doc
execute
this
query
m_OpenSQLDocuments
addElement
doc
catch
Exception
e
if
DEBUG
System
out
println
if
doc
if
doc
hasErrors
setError
e
doc
doc
checkWarnings
doc
close
doc
finally
if
DEBUG
System
out
println
return
doc
public
DTM
pquery
ExpressionContext
exprContext
String
queryString
return
pquery
exprContext
queryString
public
DTM
pquery
ExpressionContext
exprContext
String
queryString
String
typeInfo
SQLDocument
doc
try
if
DEBUG
System
out
println
if
m_ConnectionPool
return
SQLQueryParser
query
m_QueryParser
parse
this
queryString
SQLQueryParser
NO_OVERRIDE
if
m_InlineVariables
addTypeToData
typeInfo
query
setParameters
m_ParameterList
doc
SQLDocument
getNewDocument
exprContext
doc
execute
this
query
m_OpenSQLDocuments
addElement
doc
catch
Exception
e
if
DEBUG
System
out
println
if
doc
if
doc
hasErrors
setError
e
doc
doc
checkWarnings
doc
close
doc
finally
if
DEBUG
System
out
println
return
doc
private
void
addTypeToData
String
typeInfo
int
indx
if
typeInfo
m_ParameterList
StringTokenizer
plist
new
StringTokenizer
typeInfo
indx
while
plist
hasMoreTokens
String
value
plist
nextToken
QueryParameter
qp
QueryParameter
m_ParameterList
elementAt
indx
if
qp
qp
setTypeName
value
indx
public
void
addParameter
String
value
addParameterWithType
value
public
void
addParameterWithType
String
value
String
Type
m_ParameterList
addElement
new
QueryParameter
value
Type
public
void
addParameterFromElement
Element
e
NamedNodeMap
attrs
e
getAttributes
Node
Type
attrs
getNamedItem
Node
n1
e
getFirstChild
if
n1
String
value
n1
getNodeValue
if
value
value
m_ParameterList
addElement
new
QueryParameter
value
Type
getNodeValue
public
void
addParameterFromElement
NodeList
nl
int
count
nl
getLength
for
int
x
x
count
x
addParameters
Element
nl
item
x
private
void
addParameters
Element
elem
Node
n
elem
getFirstChild
if
n
return
do
if
n
getNodeType
Node
ELEMENT_NODE
NamedNodeMap
attrs
n
getAttributes
Node
Type
attrs
getNamedItem
String
TypeStr
if
Type
TypeStr
else
TypeStr
Type
getNodeValue
Node
n1
n
getFirstChild
if
n1
String
value
n1
getNodeValue
if
value
value
m_ParameterList
addElement
new
QueryParameter
value
TypeStr
while
n
n
getNextSibling
public
void
clearParameters
m_ParameterList
removeAllElements
public
void
enableDefaultConnectionPool
if
DEBUG
System
out
println
m_DefaultPoolingEnabled
if
m_ConnectionPool
return
if
m_IsDefaultPool
return
m_ConnectionPool
setPoolEnabled
public
void
disableDefaultConnectionPool
if
DEBUG
System
out
println
m_DefaultPoolingEnabled
if
m_ConnectionPool
return
if
m_IsDefaultPool
return
m_ConnectionPool
setPoolEnabled
public
void
enableStreamingMode
if
DEBUG
System
out
println
m_IsStreamingEnabled
public
void
disableStreamingMode
if
DEBUG
System
out
println
m_IsStreamingEnabled
public
DTM
getError
if
m_FullErrors
for
int
idx
idx
m_OpenSQLDocuments
size
idx
SQLDocument
doc
SQLDocument
m_OpenSQLDocuments
elementAt
idx
SQLWarning
warn
doc
checkWarnings
if
warn
setError
doc
warn
return
buildErrorDocument
public
void
close
throws
SQLException
if
DEBUG
System
out
println
while
m_OpenSQLDocuments
size
SQLDocument
d
SQLDocument
m_OpenSQLDocuments
elementAt
try
d
close
catch
Exception
se
m_OpenSQLDocuments
removeElementAt
if
m_Connection
m_ConnectionPool
releaseConnection
m_Connection
m_Connection
if
DEBUG
System
out
println
public
void
close
SQLDocument
sqldoc
throws
SQLException
if
DEBUG
System
out
println
sqldoc
int
size
m_OpenSQLDocuments
size
for
int
x
x
size
x
SQLDocument
d
SQLDocument
m_OpenSQLDocuments
elementAt
x
if
d
sqldoc
d
close
m_OpenSQLDocuments
removeElementAt
x
private
SQLErrorDocument
buildErrorDocument
SQLErrorDocument
eDoc
if
m_LastSQLDocumentWithError
ExpressionContext
ctx
m_LastSQLDocumentWithError
getExpressionContext
SQLWarning
warn
m_LastSQLDocumentWithError
checkWarnings
try
DTMManager
mgr
XPathContext
XPathExpressionContext
ctx
getDTMManager
DTMManagerDefault
mgrDefault
DTMManagerDefault
mgr
int
dtmIdent
mgrDefault
getFirstFreeDTMID
eDoc
new
SQLErrorDocument
mgr
dtmIdent
DTMManager
IDENT_DTM_NODE_BITS
m_Error
warn
m_FullErrors
mgrDefault
addDTM
eDoc
dtmIdent
m_Error
m_LastSQLDocumentWithError
catch
Exception
e
eDoc
return
eDoc
public
void
setError
Exception
excp
ExpressionContext
expr
try
ErrorListener
listen
expr
getErrorListener
if
listen
excp
listen
warning
new
TransformerException
excp
toString
expr
getXPathContext
getSAXLocator
excp
catch
Exception
e
public
void
setError
Exception
excp
SQLDocument
doc
SQLWarning
warn
ExpressionContext
cont
doc
getExpressionContext
m_LastSQLDocumentWithError
doc
try
ErrorListener
listen
cont
getErrorListener
if
listen
excp
listen
warning
new
TransformerException
excp
toString
cont
getXPathContext
getSAXLocator
excp
if
listen
warn
listen
warning
new
TransformerException
warn
toString
cont
getXPathContext
getSAXLocator
warn
if
excp
m_Error
excp
if
warn
SQLWarning
tw
new
SQLWarning
warn
getMessage
warn
getSQLState
warn
getErrorCode
SQLWarning
nw
warn
getNextWarning
while
nw
tw
setNextWarning
new
SQLWarning
nw
getMessage
nw
getSQLState
nw
getErrorCode
nw
nw
getNextWarning
tw
setNextWarning
new
SQLWarning
warn
getMessage
warn
getSQLState
warn
getErrorCode
catch
Exception
e
public
void
setFeature
String
feature
String
setting
boolean
value
if
equalsIgnoreCase
setting
value
if
equalsIgnoreCase
feature
m_IsStreamingEnabled
value
else
if
equalsIgnoreCase
feature
m_InlineVariables
value
else
if
equalsIgnoreCase
feature
m_IsMultipleResultsEnabled
value
else
if
equalsIgnoreCase
feature
m_IsStatementCachingEnabled
value
else
if
equalsIgnoreCase
feature
m_DefaultPoolingEnabled
value
if
m_ConnectionPool
return
if
m_IsDefaultPool
return
m_ConnectionPool
setPoolEnabled
value
else
if
equalsIgnoreCase
feature
m_FullErrors
value
public
String
getFeature
String
feature
String
value
if
equalsIgnoreCase
feature
value
m_IsStreamingEnabled
else
if
equalsIgnoreCase
feature
value
m_InlineVariables
else
if
equalsIgnoreCase
feature
value
m_IsMultipleResultsEnabled
else
if
equalsIgnoreCase
feature
value
m_IsStatementCachingEnabled
else
if
equalsIgnoreCase
feature
value
m_DefaultPoolingEnabled
else
if
equalsIgnoreCase
feature
value
m_FullErrors
return
value
protected
void
finalize
if
DEBUG
System
out
println
try
close
catch
Exception
e
