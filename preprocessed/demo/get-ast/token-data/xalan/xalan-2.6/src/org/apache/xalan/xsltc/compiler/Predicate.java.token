package
org
apache
xalan
xsltc
compiler
import
java
util
ArrayList
import
org
apache
bcel
classfile
Field
import
org
apache
bcel
generic
ASTORE
import
org
apache
bcel
generic
CHECKCAST
import
org
apache
bcel
generic
ConstantPoolGen
import
org
apache
bcel
generic
GETFIELD
import
org
apache
bcel
generic
INVOKESPECIAL
import
org
apache
bcel
generic
InstructionList
import
org
apache
bcel
generic
LocalVariableGen
import
org
apache
bcel
generic
NEW
import
org
apache
bcel
generic
PUSH
import
org
apache
bcel
generic
PUTFIELD
import
org
apache
xalan
xsltc
compiler
util
BooleanType
import
org
apache
xalan
xsltc
compiler
util
ClassGenerator
import
org
apache
xalan
xsltc
compiler
util
FilterGenerator
import
org
apache
xalan
xsltc
compiler
util
IntType
import
org
apache
xalan
xsltc
compiler
util
MethodGenerator
import
org
apache
xalan
xsltc
compiler
util
NumberType
import
org
apache
xalan
xsltc
compiler
util
ReferenceType
import
org
apache
xalan
xsltc
compiler
util
ResultTreeType
import
org
apache
xalan
xsltc
compiler
util
TestGenerator
import
org
apache
xalan
xsltc
compiler
util
Type
import
org
apache
xalan
xsltc
compiler
util
TypeCheckError
import
org
apache
xalan
xsltc
compiler
util
Util
final
class
Predicate
extends
Expression
implements
Closure
private
Expression
_exp
private
boolean
_canOptimize
private
boolean
_nthPositionFilter
private
boolean
_nthDescendant
int
_ptype
private
String
_className
private
ArrayList
_closureVars
private
Closure
_parentClosure
private
Expression
_value
private
Step
_step
public
Predicate
Expression
exp
_exp
exp
_exp
setParent
this
public
void
setParser
Parser
parser
super
setParser
parser
_exp
setParser
parser
public
boolean
isNthPositionFilter
return
_nthPositionFilter
public
boolean
isNthDescendant
return
_nthDescendant
public
void
dontOptimize
_canOptimize
public
boolean
hasPositionCall
return
_exp
hasPositionCall
public
boolean
hasLastCall
return
_exp
hasLastCall
public
boolean
inInnerClass
return
_className
public
Closure
getParentClosure
if
_parentClosure
SyntaxTreeNode
node
getParent
do
if
node
instanceof
Closure
_parentClosure
Closure
node
break
if
node
instanceof
TopLevelElement
break
node
node
getParent
while
node
return
_parentClosure
public
String
getInnerClassName
return
_className
public
void
addVariable
VariableRefBase
variableRef
if
_closureVars
_closureVars
new
ArrayList
if
_closureVars
contains
variableRef
_closureVars
add
variableRef
Closure
parentClosure
getParentClosure
if
parentClosure
parentClosure
addVariable
variableRef
public
int
getPosType
if
_ptype
SyntaxTreeNode
parent
getParent
if
parent
instanceof
StepPattern
_ptype
StepPattern
parent
getNodeType
else
if
parent
instanceof
AbsoluteLocationPath
AbsoluteLocationPath
path
AbsoluteLocationPath
parent
Expression
exp
path
getPath
if
exp
instanceof
Step
_ptype
Step
exp
getNodeType
else
if
parent
instanceof
VariableRefBase
final
VariableRefBase
ref
VariableRefBase
parent
final
VariableBase
var
ref
getVariable
final
Expression
exp
var
getExpression
if
exp
instanceof
Step
_ptype
Step
exp
getNodeType
else
if
parent
instanceof
Step
_ptype
Step
parent
getNodeType
return
_ptype
public
boolean
parentIsPattern
return
getParent
instanceof
Pattern
public
Expression
getExpr
return
_exp
public
String
toString
return
_exp
public
Type
typeCheck
SymbolTable
stable
throws
TypeCheckError
Type
texp
_exp
typeCheck
stable
if
texp
instanceof
ReferenceType
_exp
new
CastExpr
_exp
texp
Type
Real
if
texp
instanceof
ResultTreeType
_exp
new
CastExpr
_exp
Type
Boolean
_exp
new
CastExpr
_exp
Type
Real
texp
_exp
typeCheck
stable
if
texp
instanceof
NumberType
if
texp
instanceof
IntType
_exp
new
CastExpr
_exp
Type
Int
if
_canOptimize
_nthPositionFilter
_exp
hasLastCall
_exp
hasPositionCall
if
_nthPositionFilter
SyntaxTreeNode
parent
getParent
_nthDescendant
parent
instanceof
Step
parent
getParent
instanceof
AbsoluteLocationPath
return
_type
Type
NodeSet
_nthPositionFilter
_nthDescendant
final
QName
position
getParser
getQNameIgnoreDefaultNs
final
PositionCall
positionCall
new
PositionCall
position
positionCall
setParser
getParser
positionCall
setParent
this
_exp
new
EqualityExpr
EqualityExpr
EQ
positionCall
_exp
if
_exp
typeCheck
stable
Type
Boolean
_exp
new
CastExpr
_exp
Type
Boolean
return
_type
Type
Boolean
else
if
texp
instanceof
BooleanType
_exp
new
CastExpr
_exp
Type
Boolean
return
_type
Type
Boolean
private
void
compileFilter
ClassGenerator
classGen
MethodGenerator
methodGen
TestGenerator
testGen
LocalVariableGen
local
FilterGenerator
filterGen
_className
getXSLTC
getHelperClassName
filterGen
new
FilterGenerator
_className
toString
ACC_PUBLIC
ACC_SUPER
new
String
CURRENT_NODE_LIST_FILTER
classGen
getStylesheet
final
ConstantPoolGen
cpg
filterGen
getConstantPool
final
int
length
_closureVars
_closureVars
size
for
int
i
i
length
i
VariableBase
var
VariableRefBase
_closureVars
get
i
getVariable
filterGen
addField
new
Field
ACC_PUBLIC
cpg
addUtf8
var
getEscapedName
cpg
addUtf8
var
getType
toSignature
cpg
getConstantPool
final
InstructionList
il
new
InstructionList
testGen
new
TestGenerator
ACC_PUBLIC
ACC_FINAL
org
apache
bcel
generic
Type
BOOLEAN
new
org
apache
bcel
generic
Type
org
apache
bcel
generic
Type
INT
org
apache
bcel
generic
Type
INT
org
apache
bcel
generic
Type
INT
org
apache
bcel
generic
Type
INT
Util
getJCRefType
TRANSLET_SIG
Util
getJCRefType
NODE_ITERATOR_SIG
new
String
_className
il
cpg
local
testGen
addLocalVariable
Util
getJCRefType
DOM_INTF_SIG
final
String
className
classGen
getClassName
il
append
filterGen
loadTranslet
il
append
new
CHECKCAST
cpg
addClass
className
il
append
new
GETFIELD
cpg
addFieldref
className
DOM_FIELD
DOM_INTF_SIG
il
append
new
ASTORE
local
getIndex
testGen
setDomIndex
local
getIndex
_exp
translate
filterGen
testGen
il
append
IRETURN
testGen
stripAttributes
testGen
setMaxLocals
testGen
setMaxStack
testGen
removeNOPs
filterGen
addEmptyConstructor
ACC_PUBLIC
filterGen
addMethod
testGen
getMethod
getXSLTC
dumpClass
filterGen
getJavaClass
public
boolean
isBooleanTest
return
_exp
instanceof
BooleanExpr
public
boolean
isNodeValueTest
if
_canOptimize
return
return
getStep
getCompareValue
public
Step
getStep
if
_step
return
_step
if
_exp
return
if
_exp
instanceof
EqualityExpr
EqualityExpr
exp
EqualityExpr
_exp
Expression
left
exp
getLeft
Expression
right
exp
getRight
if
left
instanceof
CastExpr
left
CastExpr
left
getExpr
if
left
instanceof
Step
_step
Step
left
if
right
instanceof
CastExpr
right
CastExpr
right
getExpr
if
right
instanceof
Step
_step
Step
right
return
_step
public
Expression
getCompareValue
if
_value
return
_value
if
_exp
return
if
_exp
instanceof
EqualityExpr
EqualityExpr
exp
EqualityExpr
_exp
Expression
left
exp
getLeft
Expression
right
exp
getRight
if
left
instanceof
LiteralExpr
_value
left
return
_value
if
left
instanceof
VariableRefBase
left
getType
Type
String
_value
left
return
_value
if
right
instanceof
LiteralExpr
_value
right
return
_value
if
right
instanceof
VariableRefBase
right
getType
Type
String
_value
right
return
_value
return
public
void
translateFilter
ClassGenerator
classGen
MethodGenerator
methodGen
final
ConstantPoolGen
cpg
classGen
getConstantPool
final
InstructionList
il
methodGen
getInstructionList
compileFilter
classGen
methodGen
il
append
new
NEW
cpg
addClass
_className
il
append
DUP
il
append
new
INVOKESPECIAL
cpg
addMethodref
_className
final
int
length
_closureVars
_closureVars
size
for
int
i
i
length
i
VariableRefBase
varRef
VariableRefBase
_closureVars
get
i
VariableBase
var
varRef
getVariable
Type
varType
var
getType
il
append
DUP
Closure
variableClosure
_parentClosure
while
variableClosure
if
variableClosure
inInnerClass
break
variableClosure
variableClosure
getParentClosure
if
variableClosure
il
append
ALOAD_0
il
append
new
GETFIELD
cpg
addFieldref
variableClosure
getInnerClassName
var
getEscapedName
varType
toSignature
else
il
append
var
loadInstruction
il
append
new
PUTFIELD
cpg
addFieldref
_className
var
getEscapedName
varType
toSignature
public
void
translate
ClassGenerator
classGen
MethodGenerator
methodGen
final
ConstantPoolGen
cpg
classGen
getConstantPool
final
InstructionList
il
methodGen
getInstructionList
if
_nthPositionFilter
_nthDescendant
_exp
translate
classGen
methodGen
else
if
isNodeValueTest
getParent
instanceof
Step
_value
translate
classGen
methodGen
il
append
new
CHECKCAST
cpg
addClass
STRING_CLASS
il
append
new
PUSH
cpg
EqualityExpr
_exp
getOp
else
translateFilter
classGen
methodGen
