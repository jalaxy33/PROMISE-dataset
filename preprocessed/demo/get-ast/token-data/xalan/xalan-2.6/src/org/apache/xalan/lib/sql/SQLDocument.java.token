package
org
apache
xalan
lib
sql
import
java
util
Vector
import
org
apache
xalan
extensions
ExpressionContext
import
org
apache
xpath
XPathContext
import
org
apache
xml
dtm
DTMManager
import
org
apache
xml
dtm
DTM
import
java
sql
Connection
import
java
sql
Statement
import
java
sql
ResultSet
import
java
sql
ResultSetMetaData
import
java
sql
SQLException
import
java
sql
import
org
apache
xml
dtm
ref
public
class
SQLDocument
extends
DTMDocument
private
boolean
DEBUG
private
static
final
String
S_NAMESPACE
private
static
final
String
S_SQL
private
static
final
String
S_ROW_SET
private
static
final
String
S_METADATA
private
static
final
String
S_COLUMN_HEADER
private
static
final
String
S_ROW
private
static
final
String
S_COL
private
static
final
String
S_OUT_PARAMETERS
private
static
final
String
S_CATALOGUE_NAME
private
static
final
String
S_DISPLAY_SIZE
private
static
final
String
S_COLUMN_LABEL
private
static
final
String
S_COLUMN_NAME
private
static
final
String
S_COLUMN_TYPE
private
static
final
String
S_COLUMN_TYPENAME
private
static
final
String
S_PRECISION
private
static
final
String
S_SCALE
private
static
final
String
S_SCHEMA_NAME
private
static
final
String
S_TABLE_NAME
private
static
final
String
S_CASESENSITIVE
private
static
final
String
S_DEFINITELYWRITABLE
private
static
final
String
S_ISNULLABLE
private
static
final
String
S_ISSIGNED
private
static
final
String
S_ISWRITEABLE
private
static
final
String
S_ISSEARCHABLE
private
int
m_SQL_TypeID
private
int
m_MetaData_TypeID
private
int
m_ColumnHeader_TypeID
private
int
m_RowSet_TypeID
private
int
m_Row_TypeID
private
int
m_Col_TypeID
private
int
m_OutParameter_TypeID
private
int
m_ColAttrib_CATALOGUE_NAME_TypeID
private
int
m_ColAttrib_DISPLAY_SIZE_TypeID
private
int
m_ColAttrib_COLUMN_LABEL_TypeID
private
int
m_ColAttrib_COLUMN_NAME_TypeID
private
int
m_ColAttrib_COLUMN_TYPE_TypeID
private
int
m_ColAttrib_COLUMN_TYPENAME_TypeID
private
int
m_ColAttrib_PRECISION_TypeID
private
int
m_ColAttrib_SCALE_TypeID
private
int
m_ColAttrib_SCHEMA_NAME_TypeID
private
int
m_ColAttrib_TABLE_NAME_TypeID
private
int
m_ColAttrib_CASESENSITIVE_TypeID
private
int
m_ColAttrib_DEFINITELYWRITEABLE_TypeID
private
int
m_ColAttrib_ISNULLABLE_TypeID
private
int
m_ColAttrib_ISSIGNED_TypeID
private
int
m_ColAttrib_ISWRITEABLE_TypeID
private
int
m_ColAttrib_ISSEARCHABLE_TypeID
private
Statement
m_Statement
private
ExpressionContext
m_ExpressionContext
private
ConnectionPool
m_ConnectionPool
private
ResultSet
m_ResultSet
private
SQLQueryParser
m_QueryParser
private
int
m_ColHeadersIdx
private
int
m_ColCount
private
int
m_MetaDataIdx
DTM
NULL
private
int
m_RowSetIdx
DTM
NULL
private
int
m_SQLIdx
DTM
NULL
private
int
m_FirstRowIdx
DTM
NULL
private
int
m_LastRowIdx
DTM
NULL
private
boolean
m_StreamingMode
private
boolean
m_MultipleResults
private
boolean
m_HasErrors
private
boolean
m_IsStatementCachingEnabled
private
XConnection
m_XConnection
public
SQLDocument
DTMManager
mgr
int
ident
super
mgr
ident
public
static
SQLDocument
getNewDocument
ExpressionContext
exprContext
DTMManager
mgr
XPathContext
XPathExpressionContext
exprContext
getDTMManager
DTMManagerDefault
mgrDefault
DTMManagerDefault
mgr
int
dtmIdent
mgrDefault
getFirstFreeDTMID
SQLDocument
doc
new
SQLDocument
mgr
dtmIdent
DTMManager
IDENT_DTM_NODE_BITS
mgrDefault
addDTM
doc
dtmIdent
doc
setExpressionContext
exprContext
return
doc
protected
void
setExpressionContext
ExpressionContext
expr
m_ExpressionContext
expr
public
ExpressionContext
getExpressionContext
return
m_ExpressionContext
public
void
execute
XConnection
xconn
SQLQueryParser
query
throws
SQLException
try
m_StreamingMode
equals
xconn
getFeature
m_MultipleResults
equals
xconn
getFeature
m_IsStatementCachingEnabled
equals
xconn
getFeature
m_XConnection
xconn
m_QueryParser
query
executeSQLStatement
createExpandedNameTable
m_DocumentIdx
addElement
m_Document_TypeID
DTM
NULL
DTM
NULL
m_SQLIdx
addElement
m_SQL_TypeID
m_DocumentIdx
DTM
NULL
if
m_MultipleResults
extractSQLMetaData
m_ResultSet
getMetaData
addRowToDTMFromResultSet
catch
SQLException
e
m_HasErrors
throw
e
private
void
executeSQLStatement
throws
SQLException
m_ConnectionPool
m_XConnection
getConnectionPool
Connection
conn
m_ConnectionPool
getConnection
if
m_QueryParser
hasParameters
m_Statement
conn
createStatement
if
m_Statement
execute
m_QueryParser
getSQLQuery
throw
new
SQLException
else
if
m_QueryParser
isCallable
CallableStatement
cstmt
conn
prepareCall
m_QueryParser
getSQLQuery
m_QueryParser
registerOutputParameters
cstmt
m_QueryParser
populateStatement
cstmt
m_ExpressionContext
m_Statement
cstmt
if
cstmt
execute
throw
new
SQLException
else
PreparedStatement
stmt
conn
prepareStatement
m_QueryParser
getSQLQuery
m_QueryParser
populateStatement
stmt
m_ExpressionContext
m_Statement
stmt
if
stmt
execute
throw
new
SQLException
m_ResultSet
m_Statement
getResultSet
private
void
extractSQLMetaData
ResultSetMetaData
meta
m_MetaDataIdx
addElement
m_MetaData_TypeID
m_MultipleResults
m_RowSetIdx
m_SQLIdx
DTM
NULL
try
m_ColCount
meta
getColumnCount
m_ColHeadersIdx
new
int
m_ColCount
catch
Exception
e
m_XConnection
setError
e
this
checkWarnings
int
lastColHeaderIdx
DTM
NULL
int
i
for
i
i
m_ColCount
i
m_ColHeadersIdx
i
addElement
m_ColumnHeader_TypeID
m_MetaDataIdx
lastColHeaderIdx
lastColHeaderIdx
m_ColHeadersIdx
i
try
addAttributeToNode
meta
getColumnName
i
m_ColAttrib_COLUMN_NAME_TypeID
lastColHeaderIdx
catch
Exception
e
addAttributeToNode
S_ATTRIB_NOT_SUPPORTED
m_ColAttrib_COLUMN_NAME_TypeID
lastColHeaderIdx
try
addAttributeToNode
meta
getColumnLabel
i
m_ColAttrib_COLUMN_LABEL_TypeID
lastColHeaderIdx
catch
Exception
e
addAttributeToNode
S_ATTRIB_NOT_SUPPORTED
m_ColAttrib_COLUMN_LABEL_TypeID
lastColHeaderIdx
try
addAttributeToNode
meta
getCatalogName
i
m_ColAttrib_CATALOGUE_NAME_TypeID
lastColHeaderIdx
catch
Exception
e
addAttributeToNode
S_ATTRIB_NOT_SUPPORTED
m_ColAttrib_CATALOGUE_NAME_TypeID
lastColHeaderIdx
try
addAttributeToNode
new
Integer
meta
getColumnDisplaySize
i
m_ColAttrib_DISPLAY_SIZE_TypeID
lastColHeaderIdx
catch
Exception
e
addAttributeToNode
S_ATTRIB_NOT_SUPPORTED
m_ColAttrib_DISPLAY_SIZE_TypeID
lastColHeaderIdx
try
addAttributeToNode
new
Integer
meta
getColumnType
i
m_ColAttrib_COLUMN_TYPE_TypeID
lastColHeaderIdx
catch
Exception
e
addAttributeToNode
S_ATTRIB_NOT_SUPPORTED
m_ColAttrib_COLUMN_TYPE_TypeID
lastColHeaderIdx
try
addAttributeToNode
meta
getColumnTypeName
i
m_ColAttrib_COLUMN_TYPENAME_TypeID
lastColHeaderIdx
catch
Exception
e
addAttributeToNode
S_ATTRIB_NOT_SUPPORTED
m_ColAttrib_COLUMN_TYPENAME_TypeID
lastColHeaderIdx
try
addAttributeToNode
new
Integer
meta
getPrecision
i
m_ColAttrib_PRECISION_TypeID
lastColHeaderIdx
catch
Exception
e
addAttributeToNode
S_ATTRIB_NOT_SUPPORTED
m_ColAttrib_PRECISION_TypeID
lastColHeaderIdx
try
addAttributeToNode
new
Integer
meta
getScale
i
m_ColAttrib_SCALE_TypeID
lastColHeaderIdx
catch
Exception
e
addAttributeToNode
S_ATTRIB_NOT_SUPPORTED
m_ColAttrib_SCALE_TypeID
lastColHeaderIdx
try
addAttributeToNode
meta
getSchemaName
i
m_ColAttrib_SCHEMA_NAME_TypeID
lastColHeaderIdx
catch
Exception
e
addAttributeToNode
S_ATTRIB_NOT_SUPPORTED
m_ColAttrib_SCHEMA_NAME_TypeID
lastColHeaderIdx
try
addAttributeToNode
meta
getTableName
i
m_ColAttrib_TABLE_NAME_TypeID
lastColHeaderIdx
catch
Exception
e
addAttributeToNode
S_ATTRIB_NOT_SUPPORTED
m_ColAttrib_TABLE_NAME_TypeID
lastColHeaderIdx
try
addAttributeToNode
meta
isCaseSensitive
i
S_ISTRUE
S_ISFALSE
m_ColAttrib_CASESENSITIVE_TypeID
lastColHeaderIdx
catch
Exception
e
addAttributeToNode
S_ATTRIB_NOT_SUPPORTED
m_ColAttrib_CASESENSITIVE_TypeID
lastColHeaderIdx
try
addAttributeToNode
meta
isDefinitelyWritable
i
S_ISTRUE
S_ISFALSE
m_ColAttrib_DEFINITELYWRITEABLE_TypeID
lastColHeaderIdx
catch
Exception
e
addAttributeToNode
S_ATTRIB_NOT_SUPPORTED
m_ColAttrib_DEFINITELYWRITEABLE_TypeID
lastColHeaderIdx
try
addAttributeToNode
meta
isNullable
i
S_ISTRUE
S_ISFALSE
m_ColAttrib_ISNULLABLE_TypeID
lastColHeaderIdx
catch
Exception
e
addAttributeToNode
S_ATTRIB_NOT_SUPPORTED
m_ColAttrib_ISNULLABLE_TypeID
lastColHeaderIdx
try
addAttributeToNode
meta
isSigned
i
S_ISTRUE
S_ISFALSE
m_ColAttrib_ISSIGNED_TypeID
lastColHeaderIdx
catch
Exception
e
addAttributeToNode
S_ATTRIB_NOT_SUPPORTED
m_ColAttrib_ISSIGNED_TypeID
lastColHeaderIdx
try
addAttributeToNode
meta
isWritable
i
S_ISTRUE
S_ISFALSE
m_ColAttrib_ISWRITEABLE_TypeID
lastColHeaderIdx
catch
Exception
e
addAttributeToNode
S_ATTRIB_NOT_SUPPORTED
m_ColAttrib_ISWRITEABLE_TypeID
lastColHeaderIdx
try
addAttributeToNode
meta
isSearchable
i
S_ISTRUE
S_ISFALSE
m_ColAttrib_ISSEARCHABLE_TypeID
lastColHeaderIdx
catch
Exception
e
addAttributeToNode
S_ATTRIB_NOT_SUPPORTED
m_ColAttrib_ISSEARCHABLE_TypeID
lastColHeaderIdx
protected
void
createExpandedNameTable
super
createExpandedNameTable
m_SQL_TypeID
m_expandedNameTable
getExpandedTypeID
S_NAMESPACE
S_SQL
DTM
ELEMENT_NODE
m_MetaData_TypeID
m_expandedNameTable
getExpandedTypeID
S_NAMESPACE
S_METADATA
DTM
ELEMENT_NODE
m_ColumnHeader_TypeID
m_expandedNameTable
getExpandedTypeID
S_NAMESPACE
S_COLUMN_HEADER
DTM
ELEMENT_NODE
m_RowSet_TypeID
m_expandedNameTable
getExpandedTypeID
S_NAMESPACE
S_ROW_SET
DTM
ELEMENT_NODE
m_Row_TypeID
m_expandedNameTable
getExpandedTypeID
S_NAMESPACE
S_ROW
DTM
ELEMENT_NODE
m_Col_TypeID
m_expandedNameTable
getExpandedTypeID
S_NAMESPACE
S_COL
DTM
ELEMENT_NODE
m_OutParameter_TypeID
m_expandedNameTable
getExpandedTypeID
S_NAMESPACE
S_OUT_PARAMETERS
DTM
ELEMENT_NODE
m_ColAttrib_CATALOGUE_NAME_TypeID
m_expandedNameTable
getExpandedTypeID
S_NAMESPACE
S_CATALOGUE_NAME
DTM
ATTRIBUTE_NODE
m_ColAttrib_DISPLAY_SIZE_TypeID
m_expandedNameTable
getExpandedTypeID
S_NAMESPACE
S_DISPLAY_SIZE
DTM
ATTRIBUTE_NODE
m_ColAttrib_COLUMN_LABEL_TypeID
m_expandedNameTable
getExpandedTypeID
S_NAMESPACE
S_COLUMN_LABEL
DTM
ATTRIBUTE_NODE
m_ColAttrib_COLUMN_NAME_TypeID
m_expandedNameTable
getExpandedTypeID
S_NAMESPACE
S_COLUMN_NAME
DTM
ATTRIBUTE_NODE
m_ColAttrib_COLUMN_TYPE_TypeID
m_expandedNameTable
getExpandedTypeID
S_NAMESPACE
S_COLUMN_TYPE
DTM
ATTRIBUTE_NODE
m_ColAttrib_COLUMN_TYPENAME_TypeID
m_expandedNameTable
getExpandedTypeID
S_NAMESPACE
S_COLUMN_TYPENAME
DTM
ATTRIBUTE_NODE
m_ColAttrib_PRECISION_TypeID
m_expandedNameTable
getExpandedTypeID
S_NAMESPACE
S_PRECISION
DTM
ATTRIBUTE_NODE
m_ColAttrib_SCALE_TypeID
m_expandedNameTable
getExpandedTypeID
S_NAMESPACE
S_SCALE
DTM
ATTRIBUTE_NODE
m_ColAttrib_SCHEMA_NAME_TypeID
m_expandedNameTable
getExpandedTypeID
S_NAMESPACE
S_SCHEMA_NAME
DTM
ATTRIBUTE_NODE
m_ColAttrib_TABLE_NAME_TypeID
m_expandedNameTable
getExpandedTypeID
S_NAMESPACE
S_TABLE_NAME
DTM
ATTRIBUTE_NODE
m_ColAttrib_CASESENSITIVE_TypeID
m_expandedNameTable
getExpandedTypeID
S_NAMESPACE
S_CASESENSITIVE
DTM
ATTRIBUTE_NODE
m_ColAttrib_DEFINITELYWRITEABLE_TypeID
m_expandedNameTable
getExpandedTypeID
S_NAMESPACE
S_DEFINITELYWRITABLE
DTM
ATTRIBUTE_NODE
m_ColAttrib_ISNULLABLE_TypeID
m_expandedNameTable
getExpandedTypeID
S_NAMESPACE
S_ISNULLABLE
DTM
ATTRIBUTE_NODE
m_ColAttrib_ISSIGNED_TypeID
m_expandedNameTable
getExpandedTypeID
S_NAMESPACE
S_ISSIGNED
DTM
ATTRIBUTE_NODE
m_ColAttrib_ISWRITEABLE_TypeID
m_expandedNameTable
getExpandedTypeID
S_NAMESPACE
S_ISWRITEABLE
DTM
ATTRIBUTE_NODE
m_ColAttrib_ISSEARCHABLE_TypeID
m_expandedNameTable
getExpandedTypeID
S_NAMESPACE
S_ISSEARCHABLE
DTM
ATTRIBUTE_NODE
private
boolean
addRowToDTMFromResultSet
try
if
m_FirstRowIdx
DTM
NULL
m_RowSetIdx
addElement
m_RowSet_TypeID
m_SQLIdx
m_MultipleResults
m_RowSetIdx
m_MetaDataIdx
if
m_MultipleResults
extractSQLMetaData
m_ResultSet
getMetaData
if
m_ResultSet
next
if
m_StreamingMode
m_LastRowIdx
DTM
NULL
m_nextsib
setElementAt
DTM
NULL
m_LastRowIdx
m_ResultSet
close
if
m_MultipleResults
while
m_Statement
getMoreResults
m_Statement
getUpdateCount
m_ResultSet
m_Statement
getResultSet
else
m_ResultSet
if
m_ResultSet
m_FirstRowIdx
DTM
NULL
addRowToDTMFromResultSet
else
Vector
parameters
m_QueryParser
getParameters
if
parameters
int
outParamIdx
addElement
m_OutParameter_TypeID
m_SQLIdx
m_RowSetIdx
int
lastColID
DTM
NULL
for
int
indx
indx
parameters
size
indx
QueryParameter
parm
QueryParameter
parameters
elementAt
indx
if
parm
isOutput
Object
rawobj
CallableStatement
m_Statement
getObject
indx
lastColID
addElementWithData
rawobj
m_Col_TypeID
outParamIdx
lastColID
addAttributeToNode
parm
getName
m_ColAttrib_COLUMN_NAME_TypeID
lastColID
addAttributeToNode
parm
getName
m_ColAttrib_COLUMN_LABEL_TypeID
lastColID
addAttributeToNode
new
Integer
parm
getType
m_ColAttrib_COLUMN_TYPE_TypeID
lastColID
addAttributeToNode
parm
getTypeName
m_ColAttrib_COLUMN_TYPENAME_TypeID
lastColID
SQLWarning
warn
checkWarnings
if
warn
m_XConnection
setError
warn
return
if
m_FirstRowIdx
DTM
NULL
m_FirstRowIdx
addElement
m_Row_TypeID
m_RowSetIdx
m_MultipleResults
m_MetaDataIdx
DTM
NULL
m_LastRowIdx
m_FirstRowIdx
if
m_StreamingMode
m_nextsib
setElementAt
m_LastRowIdx
m_LastRowIdx
else
if
m_StreamingMode
m_LastRowIdx
addElement
m_Row_TypeID
m_RowSetIdx
m_LastRowIdx
int
colID
_firstch
m_LastRowIdx
int
pcolID
DTM
NULL
for
int
i
i
m_ColCount
i
Object
o
m_ResultSet
getObject
i
if
colID
DTM
NULL
pcolID
addElementWithData
o
m_Col_TypeID
m_LastRowIdx
pcolID
cloneAttributeFromNode
pcolID
m_ColHeadersIdx
i
else
int
dataIdent
_firstch
colID
if
dataIdent
DTM
NULL
error
else
m_ObjectArray
setAt
dataIdent
o
if
colID
DTM
NULL
colID
_nextsib
colID
catch
Exception
e
if
DEBUG
System
out
println
e
getLocalizedMessage
m_XConnection
setError
e
this
checkWarnings
m_HasErrors
return
public
boolean
hasErrors
return
m_HasErrors
public
void
close
try
SQLWarning
warn
checkWarnings
if
warn
m_XConnection
setError
warn
catch
Exception
e
try
if
m_ResultSet
m_ResultSet
close
m_ResultSet
catch
Exception
e
Connection
conn
try
if
m_Statement
conn
m_Statement
getConnection
m_Statement
close
m_Statement
catch
Exception
e
try
if
conn
if
m_HasErrors
m_ConnectionPool
releaseConnectionOnError
conn
else
m_ConnectionPool
releaseConnection
conn
catch
Exception
e
getManager
release
this
protected
boolean
nextNode
if
DEBUG
System
out
println
try
return
catch
Exception
e
return
protected
int
_nextsib
int
identity
if
m_ResultSet
int
id
_exptype
identity
if
id
m_Row_TypeID
identity
m_LastRowIdx
if
DEBUG
System
out
println
addRowToDTMFromResultSet
else
if
m_MultipleResults
identity
m_RowSetIdx
if
DEBUG
System
out
println
int
startIdx
m_RowSetIdx
while
startIdx
m_RowSetIdx
m_ResultSet
addRowToDTMFromResultSet
return
super
_nextsib
identity
public
void
documentRegistration
if
DEBUG
System
out
println
public
void
documentRelease
if
DEBUG
System
out
println
public
SQLWarning
checkWarnings
SQLWarning
warn
if
m_Statement
try
warn
m_Statement
getWarnings
m_Statement
clearWarnings
catch
SQLException
se
return
warn
