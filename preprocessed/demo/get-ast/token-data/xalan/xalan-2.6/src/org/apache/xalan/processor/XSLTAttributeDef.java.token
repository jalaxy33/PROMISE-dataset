package
org
apache
xalan
processor
import
java
lang
reflect
InvocationTargetException
import
java
lang
reflect
Method
import
java
util
StringTokenizer
import
java
util
Vector
import
javax
xml
transform
TransformerException
import
org
apache
xalan
res
XSLMessages
import
org
apache
xalan
res
XSLTErrorResources
import
org
apache
xalan
templates
AVT
import
org
apache
xalan
templates
Constants
import
org
apache
xalan
templates
ElemTemplateElement
import
org
apache
xml
utils
QName
import
org
apache
xml
utils
StringToIntTable
import
org
apache
xml
utils
StringVector
import
org
apache
xml
utils
XMLChar
import
org
apache
xpath
XPath
public
class
XSLTAttributeDef
static
final
int
FATAL
static
final
int
ERROR
static
final
int
WARNING
XSLTAttributeDef
String
namespace
String
name
int
type
boolean
required
boolean
supportsAVT
int
errorType
this
m_namespace
namespace
this
m_name
name
this
m_type
type
this
m_required
required
this
m_supportsAVT
supportsAVT
this
m_errorType
errorType
XSLTAttributeDef
String
namespace
String
name
int
type
boolean
supportsAVT
int
errorType
String
defaultVal
this
m_namespace
namespace
this
m_name
name
this
m_type
type
this
m_required
this
m_supportsAVT
supportsAVT
this
m_errorType
errorType
this
m_default
defaultVal
XSLTAttributeDef
String
namespace
String
name
boolean
required
boolean
supportsAVT
boolean
prefixedQNameValAllowed
int
errorType
String
k1
int
v1
String
k2
int
v2
this
m_namespace
namespace
this
m_name
name
this
m_type
prefixedQNameValAllowed
this
T_ENUM_OR_PQNAME
this
T_ENUM
this
m_required
required
this
m_supportsAVT
supportsAVT
this
m_errorType
errorType
m_enums
new
StringToIntTable
m_enums
put
k1
v1
m_enums
put
k2
v2
XSLTAttributeDef
String
namespace
String
name
boolean
required
boolean
supportsAVT
boolean
prefixedQNameValAllowed
int
errorType
String
k1
int
v1
String
k2
int
v2
String
k3
int
v3
this
m_namespace
namespace
this
m_name
name
this
m_type
prefixedQNameValAllowed
this
T_ENUM_OR_PQNAME
this
T_ENUM
this
m_required
required
this
m_supportsAVT
supportsAVT
this
m_errorType
errorType
m_enums
new
StringToIntTable
m_enums
put
k1
v1
m_enums
put
k2
v2
m_enums
put
k3
v3
XSLTAttributeDef
String
namespace
String
name
boolean
required
boolean
supportsAVT
boolean
prefixedQNameValAllowed
int
errorType
String
k1
int
v1
String
k2
int
v2
String
k3
int
v3
String
k4
int
v4
this
m_namespace
namespace
this
m_name
name
this
m_type
prefixedQNameValAllowed
this
T_ENUM_OR_PQNAME
this
T_ENUM
this
m_required
required
this
m_supportsAVT
supportsAVT
this
m_errorType
errorType
m_enums
new
StringToIntTable
m_enums
put
k1
v1
m_enums
put
k2
v2
m_enums
put
k3
v3
m_enums
put
k4
v4
static
final
int
T_CDATA
T_URL
T_AVT
T_PATTERN
T_EXPR
T_CHAR
T_NUMBER
T_YESNO
T_QNAME
T_QNAMES
T_ENUM
T_SIMPLEPATTERNLIST
T_NMTOKEN
T_STRINGLIST
T_PREFIX_URLLIST
T_ENUM_OR_PQNAME
T_NCNAME
T_AVT_QNAME
T_QNAMES_RESOLVE_NULL
T_PREFIXLIST
static
XSLTAttributeDef
m_foreignAttr
new
XSLTAttributeDef
XSLTAttributeDef
T_CDATA
WARNING
static
String
S_FOREIGNATTR_SETTER
private
String
m_namespace
String
getNamespace
return
m_namespace
private
String
m_name
String
getName
return
m_name
private
int
m_type
int
getType
return
m_type
private
StringToIntTable
m_enums
private
int
getEnum
String
key
return
m_enums
get
key
private
String
getEnumNames
return
m_enums
keys
private
String
m_default
String
getDefault
return
m_default
void
setDefault
String
def
m_default
def
private
boolean
m_required
boolean
getRequired
return
m_required
private
boolean
m_supportsAVT
boolean
getSupportsAVT
return
m_supportsAVT
int
m_errorType
this
WARNING
int
getErrorType
return
m_errorType
String
m_setterString
public
String
getSetterMethodName
if
m_setterString
if
m_foreignAttr
this
return
S_FOREIGNATTR_SETTER
else
if
m_name
equals
m_setterString
return
m_setterString
StringBuffer
outBuf
new
StringBuffer
outBuf
append
if
m_namespace
m_namespace
equals
Constants
S_XMLNAMESPACEURI
outBuf
append
int
n
m_name
length
for
int
i
i
n
i
char
c
m_name
charAt
i
if
c
i
c
m_name
charAt
i
c
Character
toUpperCase
c
else
if
i
c
Character
toUpperCase
c
outBuf
append
c
m_setterString
outBuf
toString
return
m_setterString
AVT
processAVT
StylesheetHandler
handler
String
uri
String
name
String
rawName
String
value
ElemTemplateElement
owner
throws
org
xml
sax
SAXException
try
AVT
avt
new
AVT
handler
uri
name
rawName
value
owner
return
avt
catch
TransformerException
te
throw
new
org
xml
sax
SAXException
te
Object
processCDATA
StylesheetHandler
handler
String
uri
String
name
String
rawName
String
value
ElemTemplateElement
owner
throws
org
xml
sax
SAXException
if
getSupportsAVT
try
AVT
avt
new
AVT
handler
uri
name
rawName
value
owner
return
avt
catch
TransformerException
te
throw
new
org
xml
sax
SAXException
te
else
return
value
Object
processCHAR
StylesheetHandler
handler
String
uri
String
name
String
rawName
String
value
ElemTemplateElement
owner
throws
org
xml
sax
SAXException
if
getSupportsAVT
try
AVT
avt
new
AVT
handler
uri
name
rawName
value
owner
if
avt
isSimple
value
length
handleError
handler
XSLTErrorResources
INVALID_TCHAR
new
Object
name
value
return
return
avt
catch
TransformerException
te
throw
new
org
xml
sax
SAXException
te
else
if
value
length
handleError
handler
XSLTErrorResources
INVALID_TCHAR
new
Object
name
value
return
return
new
Character
value
charAt
Object
processENUM
StylesheetHandler
handler
String
uri
String
name
String
rawName
String
value
ElemTemplateElement
owner
throws
org
xml
sax
SAXException
AVT
avt
if
getSupportsAVT
try
avt
new
AVT
handler
uri
name
rawName
value
owner
if
avt
isSimple
return
avt
catch
TransformerException
te
throw
new
org
xml
sax
SAXException
te
int
retVal
this
getEnum
value
if
retVal
StringToIntTable
INVALID_KEY
StringBuffer
enumNamesList
getListOfEnums
handleError
handler
XSLTErrorResources
INVALID_ENUM
new
Object
name
value
enumNamesList
toString
return
if
getSupportsAVT
return
avt
else
return
new
Integer
retVal
Object
processENUM_OR_PQNAME
StylesheetHandler
handler
String
uri
String
name
String
rawName
String
value
ElemTemplateElement
owner
throws
org
xml
sax
SAXException
Object
objToReturn
if
getSupportsAVT
try
AVT
avt
new
AVT
handler
uri
name
rawName
value
owner
if
avt
isSimple
return
avt
else
objToReturn
avt
catch
TransformerException
te
throw
new
org
xml
sax
SAXException
te
int
key
this
getEnum
value
if
key
StringToIntTable
INVALID_KEY
if
objToReturn
objToReturn
new
Integer
key
else
try
QName
qname
new
QName
value
handler
if
objToReturn
objToReturn
qname
if
qname
getPrefix
StringBuffer
enumNamesList
getListOfEnums
enumNamesList
append
handleError
handler
XSLTErrorResources
INVALID_ENUM
new
Object
name
value
enumNamesList
toString
return
catch
IllegalArgumentException
ie
StringBuffer
enumNamesList
getListOfEnums
enumNamesList
append
handleError
handler
XSLTErrorResources
INVALID_ENUM
new
Object
name
value
enumNamesList
toString
ie
return
catch
RuntimeException
re
StringBuffer
enumNamesList
getListOfEnums
enumNamesList
append
handleError
handler
XSLTErrorResources
INVALID_ENUM
new
Object
name
value
enumNamesList
toString
re
return
return
objToReturn
Object
processEXPR
StylesheetHandler
handler
String
uri
String
name
String
rawName
String
value
ElemTemplateElement
owner
throws
org
xml
sax
SAXException
try
XPath
expr
handler
createXPath
value
owner
return
expr
catch
TransformerException
te
org
xml
sax
SAXException
se
new
org
xml
sax
SAXException
te
throw
new
org
xml
sax
SAXException
te
Object
processNMTOKEN
StylesheetHandler
handler
String
uri
String
name
String
rawName
String
value
ElemTemplateElement
owner
throws
org
xml
sax
SAXException
if
getSupportsAVT
try
AVT
avt
new
AVT
handler
uri
name
rawName
value
owner
if
avt
isSimple
XMLChar
isValidNmtoken
value
handleError
handler
XSLTErrorResources
INVALID_NMTOKEN
new
Object
name
value
return
return
avt
catch
TransformerException
te
throw
new
org
xml
sax
SAXException
te
else
if
XMLChar
isValidNmtoken
value
handleError
handler
XSLTErrorResources
INVALID_NMTOKEN
new
Object
name
value
return
return
value
Object
processPATTERN
StylesheetHandler
handler
String
uri
String
name
String
rawName
String
value
ElemTemplateElement
owner
throws
org
xml
sax
SAXException
try
XPath
pattern
handler
createMatchPatternXPath
value
owner
return
pattern
catch
TransformerException
te
throw
new
org
xml
sax
SAXException
te
Object
processNUMBER
StylesheetHandler
handler
String
uri
String
name
String
rawName
String
value
ElemTemplateElement
owner
throws
org
xml
sax
SAXException
if
getSupportsAVT
Double
val
AVT
avt
try
avt
new
AVT
handler
uri
name
rawName
value
owner
if
avt
isSimple
val
Double
valueOf
value
catch
TransformerException
te
throw
new
org
xml
sax
SAXException
te
catch
NumberFormatException
nfe
handleError
handler
XSLTErrorResources
INVALID_NUMBER
new
Object
name
value
nfe
return
return
avt
else
try
return
Double
valueOf
value
catch
NumberFormatException
nfe
handleError
handler
XSLTErrorResources
INVALID_NUMBER
new
Object
name
value
nfe
return
Object
processQNAME
StylesheetHandler
handler
String
uri
String
name
String
rawName
String
value
ElemTemplateElement
owner
throws
org
xml
sax
SAXException
try
QName
qname
new
QName
value
handler
return
qname
catch
IllegalArgumentException
ie
handleError
handler
XSLTErrorResources
INVALID_QNAME
new
Object
name
value
ie
return
catch
RuntimeException
re
handleError
handler
XSLTErrorResources
INVALID_QNAME
new
Object
name
value
re
return
Object
processAVT_QNAME
StylesheetHandler
handler
String
uri
String
name
String
rawName
String
value
ElemTemplateElement
owner
throws
org
xml
sax
SAXException
AVT
avt
try
avt
new
AVT
handler
uri
name
rawName
value
owner
if
avt
isSimple
int
indexOfNSSep
value
indexOf
if
indexOfNSSep
String
prefix
value
substring
indexOfNSSep
if
XMLChar
isValidNCName
prefix
handleError
handler
XSLTErrorResources
INVALID_QNAME
new
Object
name
value
return
String
localName
indexOfNSSep
value
value
substring
indexOfNSSep
if
localName
localName
length
XMLChar
isValidNCName
localName
handleError
handler
XSLTErrorResources
INVALID_QNAME
new
Object
name
value
return
catch
TransformerException
te
throw
new
org
xml
sax
SAXException
te
return
avt
Object
processNCNAME
StylesheetHandler
handler
String
uri
String
name
String
rawName
String
value
ElemTemplateElement
owner
throws
org
xml
sax
SAXException
if
getSupportsAVT
AVT
avt
try
avt
new
AVT
handler
uri
name
rawName
value
owner
if
avt
isSimple
XMLChar
isValidNCName
value
handleError
handler
XSLTErrorResources
INVALID_NCNAME
new
Object
name
value
return
return
avt
catch
TransformerException
te
throw
new
org
xml
sax
SAXException
te
else
if
XMLChar
isValidNCName
value
handleError
handler
XSLTErrorResources
INVALID_NCNAME
new
Object
name
value
return
return
value
Vector
processQNAMES
StylesheetHandler
handler
String
uri
String
name
String
rawName
String
value
throws
org
xml
sax
SAXException
StringTokenizer
tokenizer
new
StringTokenizer
value
int
nQNames
tokenizer
countTokens
Vector
qnames
new
Vector
nQNames
for
int
i
i
nQNames
i
qnames
addElement
new
QName
tokenizer
nextToken
handler
return
qnames
final
Vector
processQNAMESRNU
StylesheetHandler
handler
String
uri
String
name
String
rawName
String
value
throws
org
xml
sax
SAXException
StringTokenizer
tokenizer
new
StringTokenizer
value
int
nQNames
tokenizer
countTokens
Vector
qnames
new
Vector
nQNames
String
defaultURI
handler
getNamespaceForPrefix
for
int
i
i
nQNames
i
String
tok
tokenizer
nextToken
if
tok
indexOf
qnames
addElement
new
QName
defaultURI
tok
else
qnames
addElement
new
QName
tok
handler
return
qnames
Vector
processSIMPLEPATTERNLIST
StylesheetHandler
handler
String
uri
String
name
String
rawName
String
value
ElemTemplateElement
owner
throws
org
xml
sax
SAXException
try
StringTokenizer
tokenizer
new
StringTokenizer
value
int
nPatterns
tokenizer
countTokens
Vector
patterns
new
Vector
nPatterns
for
int
i
i
nPatterns
i
XPath
pattern
handler
createMatchPatternXPath
tokenizer
nextToken
owner
patterns
addElement
pattern
return
patterns
catch
TransformerException
te
throw
new
org
xml
sax
SAXException
te
StringVector
processSTRINGLIST
StylesheetHandler
handler
String
uri
String
name
String
rawName
String
value
StringTokenizer
tokenizer
new
StringTokenizer
value
int
nStrings
tokenizer
countTokens
StringVector
strings
new
StringVector
nStrings
for
int
i
i
nStrings
i
strings
addElement
tokenizer
nextToken
return
strings
StringVector
processPREFIX_URLLIST
StylesheetHandler
handler
String
uri
String
name
String
rawName
String
value
throws
org
xml
sax
SAXException
StringTokenizer
tokenizer
new
StringTokenizer
value
int
nStrings
tokenizer
countTokens
StringVector
strings
new
StringVector
nStrings
for
int
i
i
nStrings
i
String
prefix
tokenizer
nextToken
String
url
handler
getNamespaceForPrefix
prefix
if
url
strings
addElement
url
else
throw
new
org
xml
sax
SAXException
XSLMessages
createMessage
XSLTErrorResources
ER_CANT_RESOLVE_NSPREFIX
new
Object
prefix
return
strings
StringVector
processPREFIX_LIST
StylesheetHandler
handler
String
uri
String
name
String
rawName
String
value
throws
org
xml
sax
SAXException
StringTokenizer
tokenizer
new
StringTokenizer
value
int
nStrings
tokenizer
countTokens
StringVector
strings
new
StringVector
nStrings
for
int
i
i
nStrings
i
String
prefix
tokenizer
nextToken
String
url
handler
getNamespaceForPrefix
prefix
if
prefix
equals
Constants
ATTRVAL_DEFAULT_PREFIX
url
strings
addElement
prefix
else
throw
new
org
xml
sax
SAXException
XSLMessages
createMessage
XSLTErrorResources
ER_CANT_RESOLVE_NSPREFIX
new
Object
prefix
return
strings
Object
processURL
StylesheetHandler
handler
String
uri
String
name
String
rawName
String
value
ElemTemplateElement
owner
throws
org
xml
sax
SAXException
if
getSupportsAVT
try
AVT
avt
new
AVT
handler
uri
name
rawName
value
owner
return
avt
catch
TransformerException
te
throw
new
org
xml
sax
SAXException
te
else
return
value
private
Boolean
processYESNO
StylesheetHandler
handler
String
uri
String
name
String
rawName
String
value
throws
org
xml
sax
SAXException
if
value
equals
value
equals
handleError
handler
XSLTErrorResources
INVALID_BOOLEAN
new
Object
name
value
return
return
new
Boolean
value
equals
Object
processValue
StylesheetHandler
handler
String
uri
String
name
String
rawName
String
value
ElemTemplateElement
owner
throws
org
xml
sax
SAXException
int
type
getType
Object
processedValue
switch
type
case
T_AVT
processedValue
processAVT
handler
uri
name
rawName
value
owner
break
case
T_CDATA
processedValue
processCDATA
handler
uri
name
rawName
value
owner
break
case
T_CHAR
processedValue
processCHAR
handler
uri
name
rawName
value
owner
break
case
T_ENUM
processedValue
processENUM
handler
uri
name
rawName
value
owner
break
case
T_EXPR
processedValue
processEXPR
handler
uri
name
rawName
value
owner
break
case
T_NMTOKEN
processedValue
processNMTOKEN
handler
uri
name
rawName
value
owner
break
case
T_PATTERN
processedValue
processPATTERN
handler
uri
name
rawName
value
owner
break
case
T_NUMBER
processedValue
processNUMBER
handler
uri
name
rawName
value
owner
break
case
T_QNAME
processedValue
processQNAME
handler
uri
name
rawName
value
owner
break
case
T_QNAMES
processedValue
processQNAMES
handler
uri
name
rawName
value
break
case
T_QNAMES_RESOLVE_NULL
processedValue
processQNAMESRNU
handler
uri
name
rawName
value
break
case
T_SIMPLEPATTERNLIST
processedValue
processSIMPLEPATTERNLIST
handler
uri
name
rawName
value
owner
break
case
T_URL
processedValue
processURL
handler
uri
name
rawName
value
owner
break
case
T_YESNO
processedValue
processYESNO
handler
uri
name
rawName
value
break
case
T_STRINGLIST
processedValue
processSTRINGLIST
handler
uri
name
rawName
value
break
case
T_PREFIX_URLLIST
processedValue
processPREFIX_URLLIST
handler
uri
name
rawName
value
break
case
T_ENUM_OR_PQNAME
processedValue
processENUM_OR_PQNAME
handler
uri
name
rawName
value
owner
break
case
T_NCNAME
processedValue
processNCNAME
handler
uri
name
rawName
value
owner
break
case
T_AVT_QNAME
processedValue
processAVT_QNAME
handler
uri
name
rawName
value
owner
break
case
T_PREFIXLIST
processedValue
processPREFIX_LIST
handler
uri
name
rawName
value
break
default
return
processedValue
void
setDefAttrValue
StylesheetHandler
handler
ElemTemplateElement
elem
throws
org
xml
sax
SAXException
setAttrValue
handler
this
getNamespace
this
getName
this
getName
this
getDefault
elem
private
Class
getPrimativeClass
Object
obj
if
obj
instanceof
XPath
return
XPath
class
Class
cl
obj
getClass
if
cl
Double
class
cl
double
class
if
cl
Float
class
cl
float
class
else
if
cl
Boolean
class
cl
boolean
class
else
if
cl
Byte
class
cl
byte
class
else
if
cl
Character
class
cl
char
class
else
if
cl
Short
class
cl
short
class
else
if
cl
Integer
class
cl
int
class
else
if
cl
Long
class
cl
long
class
return
cl
private
StringBuffer
getListOfEnums
StringBuffer
enumNamesList
new
StringBuffer
String
enumValues
this
getEnumNames
for
int
i
i
enumValues
length
i
if
i
enumNamesList
append
enumNamesList
append
enumValues
i
return
enumNamesList
boolean
setAttrValue
StylesheetHandler
handler
String
attrUri
String
attrLocalName
String
attrRawName
String
attrValue
ElemTemplateElement
elem
throws
org
xml
sax
SAXException
if
attrRawName
equals
attrRawName
startsWith
return
String
setterString
getSetterMethodName
if
setterString
try
Method
meth
Object
args
if
setterString
equals
S_FOREIGNATTR_SETTER
if
attrUri
attrUri
Class
sclass
attrUri
getClass
Class
argTypes
new
Class
sclass
sclass
sclass
sclass
meth
elem
getClass
getMethod
setterString
argTypes
args
new
Object
attrUri
attrLocalName
attrRawName
attrValue
else
Object
value
processValue
handler
attrUri
attrLocalName
attrRawName
attrValue
elem
if
value
return
Class
argTypes
new
Class
getPrimativeClass
value
try
meth
elem
getClass
getMethod
setterString
argTypes
catch
NoSuchMethodException
nsme
Class
cl
Object
value
getClass
argTypes
cl
meth
elem
getClass
getMethod
setterString
argTypes
args
new
Object
value
meth
invoke
elem
args
catch
NoSuchMethodException
nsme
if
setterString
equals
S_FOREIGNATTR_SETTER
handler
error
XSLTErrorResources
ER_FAILED_CALLING_METHOD
new
Object
setterString
nsme
return
catch
IllegalAccessException
iae
handler
error
XSLTErrorResources
ER_FAILED_CALLING_METHOD
new
Object
setterString
iae
return
catch
InvocationTargetException
nsme
handleError
handler
XSLTErrorResources
WG_ILLEGAL_ATTRIBUTE_VALUE
new
Object
Constants
ATTRNAME_NAME
getName
nsme
return
return
private
void
handleError
StylesheetHandler
handler
String
msg
Object
args
Exception
exc
throws
org
xml
sax
SAXException
switch
getErrorType
case
FATAL
case
ERROR
handler
error
msg
args
exc
break
case
WARNING
handler
warn
msg
args
default
break
