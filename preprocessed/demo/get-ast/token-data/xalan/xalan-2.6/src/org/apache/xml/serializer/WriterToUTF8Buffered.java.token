package
org
apache
xml
serializer
import
java
io
IOException
import
java
io
OutputStream
import
java
io
UnsupportedEncodingException
import
java
io
Writer
public
final
class
WriterToUTF8Buffered
extends
Writer
private
static
final
int
BYTES_MAX
private
static
final
int
CHARS_MAX
BYTES_MAX
private
final
OutputStream
m_os
private
final
byte
m_outputBytes
private
final
char
m_inputChars
private
int
count
public
WriterToUTF8Buffered
OutputStream
out
throws
UnsupportedEncodingException
m_os
out
m_outputBytes
new
byte
BYTES_MAX
m_inputChars
new
char
CHARS_MAX
count
public
void
write
final
int
c
throws
IOException
if
count
BYTES_MAX
flushBuffer
if
c
m_outputBytes
count
byte
c
else
if
c
m_outputBytes
count
byte
c
m_outputBytes
count
byte
c
else
m_outputBytes
count
byte
c
m_outputBytes
count
byte
c
m_outputBytes
count
byte
c
public
void
write
final
char
chars
final
int
start
final
int
length
throws
java
io
IOException
int
lengthx3
length
if
lengthx3
BYTES_MAX
count
flushBuffer
if
lengthx3
BYTES_MAX
final
int
chunks
length
CHARS_MAX
for
int
chunk
chunk
chunks
chunk
int
start_chunk
start
length
chunk
chunks
int
end_chunk
start
length
chunk
chunks
int
len_chunk
end_chunk
start_chunk
this
write
chars
start_chunk
len_chunk
return
final
int
n
length
start
final
byte
buf_loc
m_outputBytes
int
count_loc
count
int
i
start
char
c
for
i
n
c
chars
i
i
buf_loc
count_loc
byte
c
for
i
n
i
final
char
c
chars
i
if
c
buf_loc
count_loc
byte
c
else
if
c
buf_loc
count_loc
byte
c
buf_loc
count_loc
byte
c
else
buf_loc
count_loc
byte
c
buf_loc
count_loc
byte
c
buf_loc
count_loc
byte
c
count
count_loc
private
void
directWrite
final
char
chars
final
int
start
final
int
length
throws
java
io
IOException
if
length
BYTES_MAX
count
flushBuffer
if
length
BYTES_MAX
int
chunks
length
CHARS_MAX
for
int
chunk
chunk
chunks
chunk
int
start_chunk
start
length
chunk
chunks
int
end_chunk
start
length
chunk
chunks
int
len_chunk
end_chunk
start_chunk
this
directWrite
chars
start_chunk
len_chunk
return
final
int
n
length
start
final
byte
buf_loc
m_outputBytes
int
count_loc
count
for
int
i
start
i
n
i
buf_loc
count_loc
byte
buf_loc
i
count
count_loc
public
void
write
final
String
s
throws
IOException
final
int
length
s
length
int
lengthx3
length
if
lengthx3
BYTES_MAX
count
flushBuffer
if
lengthx3
BYTES_MAX
final
int
start
int
chunks
length
CHARS_MAX
for
int
chunk
chunk
chunks
chunk
int
start_chunk
start
length
chunk
chunks
int
end_chunk
start
length
chunk
chunks
int
len_chunk
end_chunk
start_chunk
s
getChars
start_chunk
end_chunk
m_inputChars
this
write
m_inputChars
len_chunk
return
s
getChars
length
m_inputChars
final
char
chars
m_inputChars
final
int
n
length
final
byte
buf_loc
m_outputBytes
int
count_loc
count
int
i
char
c
for
i
n
c
chars
i
i
buf_loc
count_loc
byte
c
for
i
n
i
final
char
c
chars
i
if
c
buf_loc
count_loc
byte
c
else
if
c
buf_loc
count_loc
byte
c
buf_loc
count_loc
byte
c
else
buf_loc
count_loc
byte
c
buf_loc
count_loc
byte
c
buf_loc
count_loc
byte
c
count
count_loc
public
void
flushBuffer
throws
IOException
if
count
m_os
write
m_outputBytes
count
count
public
void
flush
throws
java
io
IOException
flushBuffer
m_os
flush
public
void
close
throws
java
io
IOException
flushBuffer
m_os
close
public
OutputStream
getOutputStream
return
m_os
public
void
directWrite
final
String
s
throws
IOException
final
int
length
s
length
if
length
BYTES_MAX
count
flushBuffer
if
length
BYTES_MAX
final
int
start
int
chunks
length
CHARS_MAX
for
int
chunk
chunk
chunks
chunk
int
start_chunk
start
length
chunk
chunks
int
end_chunk
start
length
chunk
chunks
int
len_chunk
end_chunk
start_chunk
s
getChars
start_chunk
end_chunk
m_inputChars
this
directWrite
m_inputChars
len_chunk
return
s
getChars
length
m_inputChars
final
char
chars
m_inputChars
final
byte
buf_loc
m_outputBytes
int
count_loc
count
int
i
while
i
length
buf_loc
count_loc
byte
chars
i
count
count_loc
