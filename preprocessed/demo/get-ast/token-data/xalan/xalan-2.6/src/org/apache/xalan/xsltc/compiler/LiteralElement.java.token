package
org
apache
xalan
xsltc
compiler
import
java
util
Enumeration
import
java
util
Hashtable
import
java
util
Vector
import
org
apache
bcel
generic
ConstantPoolGen
import
org
apache
bcel
generic
InstructionList
import
org
apache
bcel
generic
PUSH
import
org
apache
xalan
xsltc
compiler
util
ClassGenerator
import
org
apache
xalan
xsltc
compiler
util
ErrorMsg
import
org
apache
xalan
xsltc
compiler
util
MethodGenerator
import
org
apache
xalan
xsltc
compiler
util
Type
import
org
apache
xalan
xsltc
compiler
util
TypeCheckError
import
org
apache
xalan
xsltc
compiler
util
Util
import
org
apache
xml
serializer
ElemDesc
import
org
apache
xml
serializer
ToHTMLStream
final
class
LiteralElement
extends
Instruction
private
String
_name
private
LiteralElement
_literalElemParent
private
Vector
_attributeElements
private
Hashtable
_accessedPrefixes
private
boolean
_allAttributesUnique
private
final
static
String
XMLNS_STRING
public
QName
getName
return
_qname
public
void
display
int
indent
indent
indent
Util
println
_name
displayContents
indent
IndentIncrement
private
String
accessedNamespace
String
prefix
if
_accessedPrefixes
return
else
return
String
_accessedPrefixes
get
prefix
public
void
registerNamespace
String
prefix
String
uri
SymbolTable
stable
boolean
declared
if
_literalElemParent
final
String
parentUri
_literalElemParent
accessedNamespace
prefix
if
parentUri
_literalElemParent
registerNamespace
prefix
uri
stable
declared
return
if
parentUri
equals
uri
return
if
_accessedPrefixes
_accessedPrefixes
new
Hashtable
else
if
declared
final
String
old
String
_accessedPrefixes
get
prefix
if
old
if
old
equals
uri
return
else
prefix
stable
generateNamespacePrefix
if
prefix
equals
_accessedPrefixes
put
prefix
uri
private
String
translateQName
QName
qname
SymbolTable
stable
String
localname
qname
getLocalPart
String
prefix
qname
getPrefix
if
prefix
prefix
Constants
EMPTYSTRING
else
if
prefix
equals
XMLNS_STRING
return
XMLNS_STRING
final
String
alternative
stable
lookupPrefixAlias
prefix
if
alternative
stable
excludeNamespaces
prefix
prefix
alternative
String
uri
lookupNamespace
prefix
if
uri
return
localname
registerNamespace
prefix
uri
stable
if
prefix
Constants
EMPTYSTRING
return
prefix
localname
else
return
localname
public
void
addAttribute
SyntaxTreeNode
attribute
if
_attributeElements
_attributeElements
new
Vector
_attributeElements
add
attribute
public
void
setFirstAttribute
SyntaxTreeNode
attribute
if
_attributeElements
_attributeElements
new
Vector
_attributeElements
insertElementAt
attribute
public
Type
typeCheck
SymbolTable
stable
throws
TypeCheckError
if
_attributeElements
final
int
count
_attributeElements
size
for
int
i
i
count
i
SyntaxTreeNode
node
SyntaxTreeNode
_attributeElements
elementAt
i
node
typeCheck
stable
typeCheckContents
stable
return
Type
Void
public
Enumeration
getNamespaceScope
SyntaxTreeNode
node
Hashtable
all
new
Hashtable
while
node
Hashtable
mapping
node
getPrefixMapping
if
mapping
Enumeration
prefixes
mapping
keys
while
prefixes
hasMoreElements
String
prefix
String
prefixes
nextElement
if
all
containsKey
prefix
all
put
prefix
mapping
get
prefix
node
node
getParent
return
all
keys
public
void
parseContents
Parser
parser
final
SymbolTable
stable
parser
getSymbolTable
stable
setCurrentNode
this
SyntaxTreeNode
_literalElemParent
getParent
while
_literalElemParent
_literalElemParent
instanceof
LiteralElement
_literalElemParent
_literalElemParent
getParent
if
_literalElemParent
instanceof
LiteralElement
_literalElemParent
_name
translateQName
_qname
stable
final
int
count
_attributes
getLength
for
int
i
i
count
i
final
QName
qname
parser
getQName
_attributes
getQName
i
final
String
uri
qname
getNamespace
final
String
val
_attributes
getValue
i
if
qname
parser
getUseAttributeSets
if
Util
isValidQNames
val
ErrorMsg
err
new
ErrorMsg
ErrorMsg
INVALID_QNAME_ERR
val
this
parser
reportError
Constants
ERROR
err
setFirstAttribute
new
UseAttributeSets
val
parser
else
if
qname
parser
getExtensionElementPrefixes
stable
excludeNamespaces
val
else
if
qname
parser
getExcludeResultPrefixes
stable
excludeNamespaces
val
else
final
String
prefix
qname
getPrefix
if
prefix
prefix
equals
XMLNS_PREFIX
prefix
qname
getLocalPart
equals
uri
uri
equals
XSLT_URI
continue
final
String
name
translateQName
qname
stable
LiteralAttribute
attr
new
LiteralAttribute
name
val
parser
addAttribute
attr
attr
setParent
this
attr
parseContents
parser
final
Enumeration
include
getNamespaceScope
this
while
include
hasMoreElements
final
String
prefix
String
include
nextElement
if
prefix
equals
final
String
uri
lookupNamespace
prefix
if
uri
stable
isExcludedNamespace
uri
registerNamespace
prefix
uri
stable
parseChildren
parser
for
int
i
i
count
i
final
QName
qname
parser
getQName
_attributes
getQName
i
final
String
val
_attributes
getValue
i
if
qname
parser
getExtensionElementPrefixes
stable
unExcludeNamespaces
val
else
if
qname
parser
getExcludeResultPrefixes
stable
unExcludeNamespaces
val
protected
boolean
contextDependent
return
dependentContents
public
void
translate
ClassGenerator
classGen
MethodGenerator
methodGen
final
ConstantPoolGen
cpg
classGen
getConstantPool
final
InstructionList
il
methodGen
getInstructionList
_allAttributesUnique
checkAttributesUnique
il
append
methodGen
loadHandler
il
append
new
PUSH
cpg
_name
il
append
DUP2
il
append
methodGen
startElement
int
j
while
j
elementCount
final
SyntaxTreeNode
item
SyntaxTreeNode
elementAt
j
if
item
instanceof
Variable
item
translate
classGen
methodGen
removeElement
item
else
j
if
_accessedPrefixes
boolean
declaresDefaultNS
Enumeration
e
_accessedPrefixes
keys
while
e
hasMoreElements
final
String
prefix
String
e
nextElement
final
String
uri
String
_accessedPrefixes
get
prefix
if
uri
Constants
EMPTYSTRING
prefix
Constants
EMPTYSTRING
if
prefix
Constants
EMPTYSTRING
declaresDefaultNS
il
append
methodGen
loadHandler
il
append
new
PUSH
cpg
prefix
il
append
new
PUSH
cpg
uri
il
append
methodGen
namespace
if
declaresDefaultNS
_parent
instanceof
XslElement
XslElement
_parent
declaresDefaultNS
il
append
methodGen
loadHandler
il
append
new
PUSH
cpg
Constants
EMPTYSTRING
il
append
new
PUSH
cpg
Constants
EMPTYSTRING
il
append
methodGen
namespace
if
_attributeElements
final
int
count
_attributeElements
size
for
int
i
i
count
i
SyntaxTreeNode
node
SyntaxTreeNode
_attributeElements
elementAt
i
if
node
instanceof
XslAttribute
node
translate
classGen
methodGen
translateContents
classGen
methodGen
il
append
methodGen
endElement
private
boolean
isHTMLOutput
return
getStylesheet
getOutputMethod
Stylesheet
HTML_OUTPUT
public
ElemDesc
getElemDesc
if
isHTMLOutput
return
ToHTMLStream
getElemDesc
_name
else
return
public
boolean
allAttributesUnique
return
_allAttributesUnique
private
boolean
checkAttributesUnique
boolean
hasHiddenXslAttribute
canProduceAttributeNodes
this
if
hasHiddenXslAttribute
return
if
_attributeElements
int
numAttrs
_attributeElements
size
Hashtable
attrsTable
for
int
i
i
numAttrs
i
SyntaxTreeNode
node
SyntaxTreeNode
_attributeElements
elementAt
i
if
node
instanceof
UseAttributeSets
return
else
if
node
instanceof
XslAttribute
if
attrsTable
attrsTable
new
Hashtable
for
int
k
k
i
k
SyntaxTreeNode
n
SyntaxTreeNode
_attributeElements
elementAt
k
if
n
instanceof
LiteralAttribute
LiteralAttribute
literalAttr
LiteralAttribute
n
attrsTable
put
literalAttr
getName
literalAttr
XslAttribute
xslAttr
XslAttribute
node
AttributeValue
attrName
xslAttr
getName
if
attrName
instanceof
AttributeValueTemplate
return
else
if
attrName
instanceof
SimpleAttributeValue
SimpleAttributeValue
simpleAttr
SimpleAttributeValue
attrName
String
name
simpleAttr
toString
if
name
attrsTable
get
name
return
else
if
name
attrsTable
put
name
xslAttr
return
private
boolean
canProduceAttributeNodes
SyntaxTreeNode
node
boolean
ignoreXslAttribute
Vector
contents
node
getContents
int
size
contents
size
for
int
i
i
size
i
SyntaxTreeNode
child
SyntaxTreeNode
contents
elementAt
i
if
child
instanceof
Text
Text
text
Text
child
if
text
isIgnore
continue
else
return
else
if
child
instanceof
LiteralElement
child
instanceof
ValueOf
child
instanceof
XslElement
child
instanceof
Comment
child
instanceof
Number
child
instanceof
ProcessingInstruction
return
else
if
child
instanceof
XslAttribute
if
ignoreXslAttribute
continue
else
return
else
if
child
instanceof
CallTemplate
child
instanceof
ApplyTemplates
child
instanceof
Copy
child
instanceof
CopyOf
return
else
if
child
instanceof
If
child
instanceof
ForEach
canProduceAttributeNodes
child
return
else
if
child
instanceof
Choose
Vector
chooseContents
child
getContents
int
num
chooseContents
size
for
int
k
k
num
k
SyntaxTreeNode
chooseChild
SyntaxTreeNode
chooseContents
elementAt
k
if
chooseChild
instanceof
When
chooseChild
instanceof
Otherwise
if
canProduceAttributeNodes
chooseChild
return
return
