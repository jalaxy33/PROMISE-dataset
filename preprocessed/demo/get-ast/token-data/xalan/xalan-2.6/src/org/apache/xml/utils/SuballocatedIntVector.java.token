package
org
apache
xml
utils
public
class
SuballocatedIntVector
protected
int
m_blocksize
protected
int
m_SHIFT
m_MASK
protected
static
final
int
NUMBLOCKS_DEFAULT
protected
int
m_numblocks
NUMBLOCKS_DEFAULT
protected
int
m_map
protected
int
m_firstFree
protected
int
m_map0
protected
int
m_buildCache
protected
int
m_buildCacheStartIndex
public
SuballocatedIntVector
this
public
SuballocatedIntVector
int
blocksize
int
numblocks
for
m_SHIFT
blocksize
m_SHIFT
m_blocksize
m_SHIFT
m_MASK
m_blocksize
m_numblocks
numblocks
m_map0
new
int
m_blocksize
m_map
new
int
numblocks
m_map
m_map0
m_buildCache
m_map0
m_buildCacheStartIndex
public
SuballocatedIntVector
int
blocksize
this
blocksize
NUMBLOCKS_DEFAULT
public
int
size
return
m_firstFree
public
void
setSize
int
sz
if
m_firstFree
sz
m_firstFree
sz
public
void
addElement
int
value
int
indexRelativeToCache
m_firstFree
m_buildCacheStartIndex
if
indexRelativeToCache
indexRelativeToCache
m_blocksize
m_buildCache
indexRelativeToCache
value
m_firstFree
else
int
index
m_firstFree
m_SHIFT
int
offset
m_firstFree
m_MASK
if
index
m_map
length
int
newsize
index
m_numblocks
int
newMap
new
int
newsize
System
arraycopy
m_map
newMap
m_map
length
m_map
newMap
int
block
m_map
index
if
block
block
m_map
index
new
int
m_blocksize
block
offset
value
m_buildCache
block
m_buildCacheStartIndex
m_firstFree
offset
m_firstFree
private
void
addElements
int
value
int
numberOfElements
if
m_firstFree
numberOfElements
m_blocksize
for
int
i
i
numberOfElements
i
m_map0
m_firstFree
value
else
int
index
m_firstFree
m_SHIFT
int
offset
m_firstFree
m_MASK
m_firstFree
numberOfElements
while
numberOfElements
if
index
m_map
length
int
newsize
index
m_numblocks
int
newMap
new
int
newsize
System
arraycopy
m_map
newMap
m_map
length
m_map
newMap
int
block
m_map
index
if
block
block
m_map
index
new
int
m_blocksize
int
copied
m_blocksize
offset
numberOfElements
m_blocksize
offset
numberOfElements
numberOfElements
copied
while
copied
block
offset
value
index
offset
private
void
addElements
int
numberOfElements
int
newlen
m_firstFree
numberOfElements
if
newlen
m_blocksize
int
index
m_firstFree
m_SHIFT
int
newindex
m_firstFree
numberOfElements
m_SHIFT
for
int
i
index
i
newindex
i
m_map
i
new
int
m_blocksize
m_firstFree
newlen
private
void
insertElementAt
int
value
int
at
if
at
m_firstFree
addElement
value
else
if
at
m_firstFree
int
index
at
m_SHIFT
if
index
m_map
length
int
newsize
index
m_numblocks
int
newMap
new
int
newsize
System
arraycopy
m_map
newMap
m_map
length
m_map
newMap
int
block
m_map
index
if
block
block
m_map
index
new
int
m_blocksize
int
offset
at
m_MASK
block
offset
value
m_firstFree
offset
else
int
index
at
m_SHIFT
int
maxindex
m_firstFree
m_SHIFT
m_firstFree
int
offset
at
m_MASK
int
push
while
index
maxindex
int
copylen
m_blocksize
offset
int
block
m_map
index
if
block
push
block
m_map
index
new
int
m_blocksize
else
push
block
m_blocksize
System
arraycopy
block
offset
block
offset
copylen
block
offset
value
value
push
offset
index
public
void
removeAllElements
m_firstFree
m_buildCache
m_map0
m_buildCacheStartIndex
private
boolean
removeElement
int
s
int
at
indexOf
s
if
at
return
removeElementAt
at
return
private
void
removeElementAt
int
at
if
at
m_firstFree
int
index
at
m_SHIFT
int
maxindex
m_firstFree
m_SHIFT
int
offset
at
m_MASK
while
index
maxindex
int
copylen
m_blocksize
offset
int
block
m_map
index
if
block
block
m_map
index
new
int
m_blocksize
else
System
arraycopy
block
offset
block
offset
copylen
if
index
maxindex
int
next
m_map
index
if
next
block
m_blocksize
next
next
else
block
m_blocksize
offset
index
m_firstFree
public
void
setElementAt
int
value
int
at
if
at
m_blocksize
m_map0
at
value
else
int
index
at
m_SHIFT
int
offset
at
m_MASK
if
index
m_map
length
int
newsize
index
m_numblocks
int
newMap
new
int
newsize
System
arraycopy
m_map
newMap
m_map
length
m_map
newMap
int
block
m_map
index
if
block
block
m_map
index
new
int
m_blocksize
block
offset
value
if
at
m_firstFree
m_firstFree
at
public
int
elementAt
int
i
if
i
m_blocksize
return
m_map0
i
return
m_map
i
m_SHIFT
i
m_MASK
private
boolean
contains
int
s
return
indexOf
s
public
int
indexOf
int
elem
int
index
if
index
m_firstFree
return
int
bindex
index
m_SHIFT
int
boffset
index
m_MASK
int
maxindex
m_firstFree
m_SHIFT
int
block
for
bindex
maxindex
bindex
block
m_map
bindex
if
block
for
int
offset
boffset
offset
m_blocksize
offset
if
block
offset
elem
return
offset
bindex
m_blocksize
boffset
int
maxoffset
m_firstFree
m_MASK
block
m_map
maxindex
for
int
offset
boffset
offset
maxoffset
offset
if
block
offset
elem
return
offset
maxindex
m_blocksize
return
public
int
indexOf
int
elem
return
indexOf
elem
private
int
lastIndexOf
int
elem
int
boffset
m_firstFree
m_MASK
for
int
index
m_firstFree
m_SHIFT
index
index
int
block
m_map
index
if
block
for
int
offset
boffset
offset
offset
if
block
offset
elem
return
offset
index
m_blocksize
boffset
return
public
final
int
getMap0
return
m_map0
public
final
int
getMap
return
m_map
