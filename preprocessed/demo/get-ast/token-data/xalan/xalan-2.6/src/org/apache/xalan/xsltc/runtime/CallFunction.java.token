package
org
apache
xalan
xsltc
runtime
import
java
util
Vector
import
java
lang
reflect
Modifier
import
java
lang
reflect
Constructor
import
java
lang
reflect
InvocationTargetException
import
java
lang
reflect
Method
import
java
lang
IllegalAccessException
import
java
lang
IllegalArgumentException
import
java
lang
InstantiationException
public
final
class
CallFunction
public
static
String
className
public
static
String
methodName
public
static
int
nArgs
public
static
Class
clazz
public
static
String
invokeMethod
String
_className
String
_methodName
Object
_arguments
className
_className
methodName
_methodName
int
size
_arguments
length
Object
arguments
new
Object
size
Object
object
_arguments
clazz
try
clazz
ObjectFactory
findProviderClass
className
ObjectFactory
findClassLoader
if
clazz
throw
new
RuntimeException
catch
ClassNotFoundException
e
throw
new
RuntimeException
for
int
i
j
i
size
i
j
arguments
i
_arguments
j
nArgs
size
if
methodName
Method
method
if
method
findMethods
arguments
throw
new
RuntimeException
try
Object
obj
method
invoke
object
arguments
return
obj
toString
catch
IllegalAccessException
e
throw
new
RuntimeException
catch
IllegalArgumentException
e
throw
new
RuntimeException
catch
InvocationTargetException
e
throw
new
RuntimeException
else
Constructor
constructor
if
constructor
findConstructor
arguments
throw
new
RuntimeException
try
Object
obs
constructor
newInstance
arguments
return
obs
toString
catch
InvocationTargetException
e
throw
new
RuntimeException
catch
IllegalAccessException
e
throw
new
RuntimeException
catch
IllegalArgumentException
e
throw
new
RuntimeException
catch
InstantiationException
e
throw
new
RuntimeException
private
static
Constructor
findConstructor
Object
arguments
Vector
constructors
final
Constructor
c_constructors
clazz
getConstructors
for
int
i
i
c_constructors
length
i
final
int
mods
c_constructors
i
getModifiers
if
Modifier
isPublic
mods
c_constructors
i
getParameterTypes
length
nArgs
if
constructors
constructors
new
Vector
constructors
addElement
c_constructors
i
if
constructors
throw
new
RuntimeException
className
methodName
int
nConstructors
constructors
size
boolean
accept
for
int
j
i
i
nConstructors
i
final
Constructor
constructor
Constructor
constructors
elementAt
i
final
Class
paramTypes
constructor
getParameterTypes
for
j
j
nArgs
j
Class
argumentClass
arguments
j
getClass
if
argumentClass
paramTypes
j
accept
else
if
argumentClass
isAssignableFrom
paramTypes
j
accept
else
accept
break
if
accept
return
constructor
return
private
static
Method
findMethods
Object
arguments
Vector
methods
final
Method
m_methods
clazz
getMethods
for
int
i
i
m_methods
length
i
final
int
mods
m_methods
i
getModifiers
if
Modifier
isPublic
mods
m_methods
i
getName
equals
methodName
m_methods
i
getParameterTypes
length
nArgs
if
methods
methods
new
Vector
methods
addElement
m_methods
i
if
methods
throw
new
RuntimeException
className
methodName
int
nMethods
methods
size
boolean
accept
for
int
j
i
i
nMethods
i
final
Method
method
Method
methods
elementAt
i
final
Class
paramTypes
method
getParameterTypes
for
j
j
nArgs
j
Class
argumentClass
arguments
j
getClass
if
argumentClass
paramTypes
j
accept
else
if
argumentClass
isAssignableFrom
paramTypes
j
accept
else
if
paramTypes
j
isPrimitive
arguments
j
isPrimitive
paramTypes
j
arguments
j
accept
else
accept
break
if
accept
return
method
return
public
static
Object
isPrimitive
Class
paramType
Object
argument
if
argument
getClass
Integer
class
return
typeCast
paramType
Integer
argument
else
if
argument
getClass
Float
class
return
typeCast
paramType
Float
argument
else
if
argument
getClass
Double
class
return
typeCast
paramType
Double
argument
else
if
argument
getClass
Long
class
return
typeCast
paramType
Long
argument
else
if
argument
getClass
Boolean
class
return
Boolean
argument
else
if
argument
getClass
Byte
class
return
Byte
argument
else
return
static
Object
typeCast
Class
paramType
Double
object
if
paramType
Long
TYPE
return
new
Long
object
longValue
else
if
paramType
Integer
TYPE
return
new
Integer
object
intValue
else
if
paramType
Float
TYPE
return
new
Float
object
floatValue
else
if
paramType
Short
TYPE
return
new
Short
object
shortValue
else
if
paramType
Byte
TYPE
return
new
Byte
object
byteValue
else
return
object
static
Object
typeCast
Class
paramType
Long
object
if
paramType
Integer
TYPE
return
new
Integer
object
intValue
else
if
paramType
Float
TYPE
return
new
Float
object
floatValue
else
if
paramType
Short
TYPE
return
new
Short
object
shortValue
else
if
paramType
Byte
TYPE
return
new
Byte
object
byteValue
else
return
object
static
Object
typeCast
Class
paramType
Integer
object
if
paramType
Double
TYPE
return
new
Double
object
doubleValue
else
if
paramType
Float
TYPE
return
new
Float
object
floatValue
else
if
paramType
Short
TYPE
return
new
Short
object
shortValue
else
if
paramType
Byte
TYPE
return
new
Byte
object
byteValue
else
return
object
static
Object
typeCast
Class
paramType
Float
object
if
paramType
Double
TYPE
return
new
Double
object
doubleValue
else
if
paramType
Integer
TYPE
return
new
Float
object
intValue
else
if
paramType
Short
TYPE
return
new
Short
object
shortValue
else
if
paramType
Byte
TYPE
return
new
Byte
object
byteValue
else
return
object
