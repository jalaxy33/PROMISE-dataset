package
org
apache
xalan
xsltc
compiler
import
org
apache
bcel
generic
ALOAD
import
org
apache
bcel
generic
ASTORE
import
org
apache
bcel
generic
ConstantPoolGen
import
org
apache
bcel
generic
INVOKEVIRTUAL
import
org
apache
bcel
generic
InstructionList
import
org
apache
bcel
generic
LocalVariableGen
import
org
apache
xalan
xsltc
compiler
util
ClassGenerator
import
org
apache
xalan
xsltc
compiler
util
ErrorMsg
import
org
apache
xalan
xsltc
compiler
util
MethodGenerator
import
org
apache
xalan
xsltc
compiler
util
Type
import
org
apache
xalan
xsltc
compiler
util
TypeCheckError
import
org
apache
xalan
xsltc
compiler
util
Util
import
org
apache
xml
utils
XMLChar
import
java
util
Vector
final
class
CallTemplate
extends
Instruction
private
QName
_name
private
Object
_parameters
private
Template
_calleeTemplate
public
void
display
int
indent
indent
indent
System
out
print
Util
println
_name
displayContents
indent
IndentIncrement
public
boolean
hasWithParams
return
elementCount
public
void
parseContents
Parser
parser
final
String
name
getAttribute
if
name
length
if
XMLChar
isValidQName
name
ErrorMsg
err
new
ErrorMsg
ErrorMsg
INVALID_QNAME_ERR
name
this
parser
reportError
Constants
ERROR
err
_name
parser
getQNameIgnoreDefaultNs
name
else
reportError
this
parser
ErrorMsg
REQUIRED_ATTR_ERR
parseChildren
parser
public
Type
typeCheck
SymbolTable
stable
throws
TypeCheckError
final
Template
template
stable
lookupTemplate
_name
if
template
typeCheckContents
stable
else
ErrorMsg
err
new
ErrorMsg
ErrorMsg
TEMPLATE_UNDEF_ERR
_name
this
throw
new
TypeCheckError
err
return
Type
Void
public
void
translate
ClassGenerator
classGen
MethodGenerator
methodGen
final
Stylesheet
stylesheet
classGen
getStylesheet
final
ConstantPoolGen
cpg
classGen
getConstantPool
final
InstructionList
il
methodGen
getInstructionList
if
stylesheet
hasLocalParams
hasContents
_calleeTemplate
getCalleeTemplate
if
_calleeTemplate
buildParameterList
else
final
int
push
cpg
addMethodref
TRANSLET_CLASS
PUSH_PARAM_FRAME
PUSH_PARAM_FRAME_SIG
il
append
classGen
loadTranslet
il
append
new
INVOKEVIRTUAL
push
translateContents
classGen
methodGen
final
String
className
stylesheet
getClassName
String
methodName
Util
escape
_name
toString
il
append
classGen
loadTranslet
il
append
methodGen
loadDOM
il
append
methodGen
loadIterator
il
append
methodGen
loadHandler
il
append
methodGen
loadCurrentNode
StringBuffer
methodSig
new
StringBuffer
DOM_INTF_SIG
NODE_ITERATOR_SIG
TRANSLET_OUTPUT_SIG
NODE_SIG
if
_calleeTemplate
Vector
calleeParams
_calleeTemplate
getParameters
int
numParams
_parameters
length
for
int
i
i
numParams
i
SyntaxTreeNode
node
SyntaxTreeNode
_parameters
i
methodSig
append
OBJECT_SIG
if
node
instanceof
Param
il
append
ACONST_NULL
else
node
translate
classGen
methodGen
methodSig
append
il
append
new
INVOKEVIRTUAL
cpg
addMethodref
className
methodName
methodSig
toString
if
_calleeTemplate
stylesheet
hasLocalParams
hasContents
final
int
pop
cpg
addMethodref
TRANSLET_CLASS
POP_PARAM_FRAME
POP_PARAM_FRAME_SIG
il
append
classGen
loadTranslet
il
append
new
INVOKEVIRTUAL
pop
public
Template
getCalleeTemplate
Stylesheet
stylesheet
getXSLTC
getStylesheet
Vector
templates
stylesheet
getAllValidTemplates
int
size
templates
size
for
int
i
i
size
i
Template
t
Template
templates
elementAt
i
if
t
getName
_name
t
isSimpleNamedTemplate
return
t
return
private
void
buildParameterList
Vector
defaultParams
_calleeTemplate
getParameters
int
numParams
defaultParams
size
_parameters
new
Object
numParams
for
int
i
i
numParams
i
_parameters
i
defaultParams
elementAt
i
int
count
elementCount
for
int
i
i
count
i
Object
node
elementAt
i
if
node
instanceof
WithParam
WithParam
withParam
WithParam
node
QName
name
withParam
getName
for
int
k
k
numParams
k
Object
object
_parameters
k
if
object
instanceof
Param
Param
object
getName
name
withParam
setDoParameterOptimization
_parameters
k
withParam
break
else
if
object
instanceof
WithParam
WithParam
object
getName
name
withParam
setDoParameterOptimization
_parameters
k
withParam
break
