package
org
apache
xalan
xsltc
compiler
import
org
apache
bcel
generic
ConstantPoolGen
import
org
apache
bcel
generic
INVOKESPECIAL
import
org
apache
bcel
generic
INVOKEVIRTUAL
import
org
apache
bcel
generic
InstructionList
import
org
apache
bcel
generic
NEW
import
org
apache
bcel
generic
PUSH
import
org
apache
xalan
xsltc
compiler
util
ClassGenerator
import
org
apache
xalan
xsltc
compiler
util
MethodGenerator
import
org
apache
xalan
xsltc
compiler
util
Type
import
org
apache
xalan
xsltc
compiler
util
TypeCheckError
final
class
Message
extends
Instruction
private
boolean
_terminate
public
void
parseContents
Parser
parser
String
termstr
getAttribute
if
termstr
_terminate
termstr
equals
parseChildren
parser
public
Type
typeCheck
SymbolTable
stable
throws
TypeCheckError
typeCheckContents
stable
return
Type
Void
public
void
translate
ClassGenerator
classGen
MethodGenerator
methodGen
final
ConstantPoolGen
cpg
classGen
getConstantPool
final
InstructionList
il
methodGen
getInstructionList
il
append
classGen
loadTranslet
switch
elementCount
case
il
append
new
PUSH
cpg
break
case
SyntaxTreeNode
child
SyntaxTreeNode
elementAt
if
child
instanceof
Text
il
append
new
PUSH
cpg
Text
child
getText
break
default
il
append
methodGen
loadHandler
il
append
new
NEW
cpg
addClass
STREAM_XML_OUTPUT
il
append
methodGen
storeHandler
il
append
new
NEW
cpg
addClass
STRING_WRITER
il
append
DUP
il
append
DUP
il
append
new
INVOKESPECIAL
cpg
addMethodref
STRING_WRITER
il
append
methodGen
loadHandler
il
append
new
INVOKESPECIAL
cpg
addMethodref
STREAM_XML_OUTPUT
il
append
methodGen
loadHandler
il
append
SWAP
il
append
new
INVOKEVIRTUAL
cpg
addMethodref
OUTPUT_BASE
WRITER_SIG
il
append
methodGen
loadHandler
il
append
new
PUSH
cpg
il
append
new
INVOKEVIRTUAL
cpg
addMethodref
OUTPUT_BASE
STRING_SIG
il
append
methodGen
loadHandler
il
append
ICONST_1
il
append
new
INVOKEVIRTUAL
cpg
addMethodref
OUTPUT_BASE
il
append
methodGen
loadHandler
il
append
new
INVOKEVIRTUAL
cpg
addMethodref
OUTPUT_BASE
translateContents
classGen
methodGen
il
append
methodGen
loadHandler
il
append
new
INVOKEVIRTUAL
cpg
addMethodref
OUTPUT_BASE
il
append
new
INVOKEVIRTUAL
cpg
addMethodref
STRING_WRITER
STRING_SIG
il
append
SWAP
il
append
methodGen
storeHandler
break
il
append
new
INVOKEVIRTUAL
cpg
addMethodref
TRANSLET_CLASS
STRING_SIG
if
_terminate
final
int
einit
cpg
addMethodref
il
append
new
NEW
cpg
addClass
il
append
DUP
il
append
new
PUSH
cpg
il
append
new
INVOKESPECIAL
einit
il
append
ATHROW
