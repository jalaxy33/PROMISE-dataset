package
org
apache
xml
serializer
import
java
io
IOException
import
javax
xml
transform
ErrorListener
import
javax
xml
transform
Result
import
javax
xml
transform
Transformer
import
javax
xml
transform
TransformerException
import
org
apache
xml
res
XMLErrorResources
import
org
apache
xml
res
XMLMessages
import
org
xml
sax
SAXException
public
class
ToXMLStream
extends
ToStream
boolean
m_cdataTagOpen
protected
static
CharInfo
m_xmlcharInfo
CharInfo
getCharInfo
CharInfo
XML_ENTITIES_RESOURCE
Method
XML
public
ToXMLStream
m_charInfo
m_xmlcharInfo
initCDATA
m_prefixMap
new
NamespaceMappings
public
void
CopyFrom
ToXMLStream
xmlListener
m_writer
xmlListener
m_writer
String
encoding
xmlListener
getEncoding
setEncoding
encoding
setOmitXMLDeclaration
xmlListener
getOmitXMLDeclaration
m_ispreserve
xmlListener
m_ispreserve
m_preserves
xmlListener
m_preserves
m_isprevtext
xmlListener
m_isprevtext
m_doIndent
xmlListener
m_doIndent
setIndentAmount
xmlListener
getIndentAmount
m_startNewLine
xmlListener
m_startNewLine
m_needToOutputDocTypeDecl
xmlListener
m_needToOutputDocTypeDecl
setDoctypeSystem
xmlListener
getDoctypeSystem
setDoctypePublic
xmlListener
getDoctypePublic
setStandalone
xmlListener
getStandalone
setMediaType
xmlListener
getMediaType
m_maxCharacter
xmlListener
m_maxCharacter
m_spaceBeforeClose
xmlListener
m_spaceBeforeClose
m_cdataStartCalled
xmlListener
m_cdataStartCalled
public
void
startDocumentInternal
throws
org
xml
sax
SAXException
if
m_needToCallStartDocument
super
startDocumentInternal
m_needToCallStartDocument
if
m_inEntityRef
return
m_needToOutputDocTypeDecl
m_startNewLine
if
getOmitXMLDeclaration
String
encoding
Encodings
getMimeEncoding
getEncoding
String
version
getVersion
if
version
version
String
standalone
if
m_standaloneWasSpecified
standalone
getStandalone
else
standalone
try
final
java
io
Writer
writer
m_writer
writer
write
writer
write
version
writer
write
writer
write
encoding
writer
write
writer
write
standalone
writer
write
if
m_doIndent
writer
write
m_lineSep
m_lineSepLen
catch
IOException
e
throw
new
SAXException
e
public
void
endDocument
throws
org
xml
sax
SAXException
flushPending
if
m_doIndent
m_isprevtext
try
outputLineSep
catch
IOException
e
throw
new
SAXException
e
flushWriter
if
m_tracer
super
fireEndDoc
public
void
startPreserving
throws
org
xml
sax
SAXException
m_preserves
push
m_ispreserve
public
void
endPreserving
throws
org
xml
sax
SAXException
m_ispreserve
m_preserves
isEmpty
m_preserves
pop
public
void
processingInstruction
String
target
String
data
throws
org
xml
sax
SAXException
if
m_inEntityRef
return
flushPending
if
target
equals
Result
PI_DISABLE_OUTPUT_ESCAPING
startNonEscaping
else
if
target
equals
Result
PI_ENABLE_OUTPUT_ESCAPING
endNonEscaping
else
try
if
m_elemContext
m_startTagOpen
closeStartTag
m_elemContext
m_startTagOpen
if
shouldIndent
indent
final
java
io
Writer
writer
m_writer
writer
write
writer
write
target
if
data
length
Character
isSpaceChar
data
charAt
writer
write
int
indexOfQLT
data
indexOf
if
indexOfQLT
if
indexOfQLT
writer
write
data
substring
indexOfQLT
writer
write
if
indexOfQLT
data
length
writer
write
data
substring
indexOfQLT
else
writer
write
data
writer
write
writer
write
if
m_elemContext
m_currentElemDepth
writer
write
m_lineSep
m_lineSepLen
m_startNewLine
catch
IOException
e
throw
new
SAXException
e
if
m_tracer
super
fireEscapingEvent
target
data
public
void
entityReference
String
name
throws
org
xml
sax
SAXException
if
m_elemContext
m_startTagOpen
closeStartTag
m_elemContext
m_startTagOpen
try
if
shouldIndent
indent
final
java
io
Writer
writer
m_writer
writer
write
writer
write
name
writer
write
catch
IOException
e
throw
new
SAXException
e
if
m_tracer
super
fireEntityReference
name
public
void
addUniqueAttribute
String
name
String
value
int
flags
throws
SAXException
if
m_elemContext
m_startTagOpen
try
final
String
patchedName
patchName
name
final
java
io
Writer
writer
m_writer
if
flags
NO_BAD_CHARS
m_xmlcharInfo
onlyQuotAmpLtGt
writer
write
writer
write
patchedName
writer
write
writer
write
value
writer
write
else
writer
write
writer
write
patchedName
writer
write
writeAttrString
writer
value
this
getEncoding
writer
write
catch
IOException
e
throw
new
SAXException
e
public
void
addAttribute
String
uri
String
localName
String
rawName
String
type
String
value
throws
SAXException
if
m_elemContext
m_startTagOpen
if
rawName
startsWith
String
prefixUsed
ensureAttributesNamespaceIsDeclared
uri
localName
rawName
if
prefixUsed
rawName
rawName
startsWith
prefixUsed
rawName
prefixUsed
localName
addAttributeAlways
uri
localName
rawName
type
value
else
String
msg
XMLMessages
createXMLMessage
XMLErrorResources
ER_ILLEGAL_ATTRIBUTE_POSITION
new
Object
localName
try
Transformer
tran
super
getTransformer
ErrorListener
errHandler
tran
getErrorListener
if
errHandler
m_sourceLocator
errHandler
warning
new
TransformerException
msg
m_sourceLocator
else
System
out
println
msg
catch
Exception
e
public
void
endElement
String
elemName
throws
SAXException
endElement
elemName
public
void
namespaceAfterStartElement
final
String
prefix
final
String
uri
throws
SAXException
if
m_elemContext
m_elementURI
String
prefix1
getPrefixPart
m_elemContext
m_elementName
if
prefix1
EMPTYSTRING
equals
prefix
m_elemContext
m_elementURI
uri
startPrefixMapping
prefix
uri
return
protected
boolean
pushNamespace
String
prefix
String
uri
try
if
m_prefixMap
pushNamespace
prefix
uri
m_elemContext
m_currentElemDepth
startPrefixMapping
prefix
uri
return
catch
SAXException
e
return
public
boolean
reset
boolean
wasReset
if
super
reset
resetToXMLStream
wasReset
return
wasReset
private
void
resetToXMLStream
this
m_cdataTagOpen
