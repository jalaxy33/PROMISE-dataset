package
fr
jayasoft
ivy
xml
import
java
io
File
import
java
io
IOException
import
java
io
InputStream
import
java
net
URL
import
java
text
ParseException
import
java
util
Arrays
import
java
util
Iterator
import
java
util
List
import
java
util
Map
import
javax
xml
parsers
SAXParserFactory
import
org
xml
sax
Attributes
import
org
xml
sax
SAXException
import
org
xml
sax
helpers
DefaultHandler
import
fr
jayasoft
ivy
Ivy
import
fr
jayasoft
ivy
ModuleId
import
fr
jayasoft
ivy
util
Configurator
import
fr
jayasoft
ivy
util
Message
public
class
XmlIvyConfigurationParser
extends
DefaultHandler
private
Configurator
_configurator
new
Configurator
private
List
_configuratorTags
Arrays
asList
new
String
private
Ivy
_ivy
private
String
_defaultResolver
private
String
_defaultCM
private
String
_defaultLatest
public
XmlIvyConfigurationParser
Ivy
ivy
_ivy
ivy
public
void
parse
URL
configuration
throws
ParseException
IOException
Map
typeDefs
_ivy
getTypeDefs
for
Iterator
iter
typeDefs
keySet
iterator
iter
hasNext
String
name
String
iter
next
_configurator
typeDef
name
Class
typeDefs
get
name
InputStream
stream
try
stream
configuration
openStream
SAXParserFactory
newInstance
newSAXParser
parse
stream
this
catch
IOException
e
throw
e
catch
Exception
e
ParseException
pe
new
ParseException
configuration
e
getMessage
pe
initCause
e
throw
pe
finally
if
stream
try
stream
close
catch
IOException
e
public
void
startElement
String
uri
String
localName
String
qName
Attributes
attributes
throws
SAXException
try
if
_configurator
getCurrent
_configurator
startCreateChild
qName
for
int
i
i
attributes
getLength
i
_configurator
setAttribute
attributes
getQName
i
_ivy
substitute
attributes
getValue
i
else
if
equals
qName
String
name
_ivy
substitute
attributes
getValue
String
className
_ivy
substitute
attributes
getValue
Class
clazz
Class
forName
className
_ivy
typeDef
name
clazz
_configurator
typeDef
name
clazz
else
if
equals
qName
String
propFilePath
_ivy
substitute
attributes
getValue
try
Message
verbose
propFilePath
_ivy
loadProperties
new
File
propFilePath
catch
Exception
ex
Message
verbose
propFilePath
_ivy
loadProperties
new
URL
propFilePath
else
if
equals
qName
String
cache
attributes
getValue
if
cache
_ivy
setDefaultCache
new
File
_ivy
substitute
cache
String
validate
attributes
getValue
if
validate
_ivy
setValidate
Boolean
valueOf
_ivy
substitute
validate
booleanValue
String
up2d
attributes
getValue
if
up2d
_ivy
setCheckUpToDate
Boolean
valueOf
_ivy
substitute
up2d
booleanValue
String
cacheIvyPattern
attributes
getValue
if
cacheIvyPattern
_ivy
setCacheIvyPattern
_ivy
substitute
cacheIvyPattern
String
cacheArtPattern
attributes
getValue
if
cacheArtPattern
_ivy
setCacheArtifactPattern
_ivy
substitute
cacheArtPattern
_defaultResolver
attributes
getValue
_defaultCM
attributes
getValue
_defaultLatest
attributes
getValue
else
if
_configuratorTags
contains
qName
_configurator
setRoot
_ivy
else
if
equals
qName
String
organisation
_ivy
substitute
attributes
getValue
String
module
_ivy
substitute
attributes
getValue
String
resolver
_ivy
substitute
attributes
getValue
_ivy
addModuleConfiguration
new
ModuleId
organisation
module
resolver
catch
Exception
ex
throw
new
SAXException
ex
public
void
endElement
String
uri
String
localName
String
qName
throws
SAXException
if
_configurator
getCurrent
if
_configuratorTags
contains
qName
_configurator
getDepth
_configurator
clear
else
_configurator
endCreateChild
public
void
endDocument
throws
SAXException
if
_defaultResolver
_ivy
setDefaultResolver
_ivy
substitute
_defaultResolver
if
_defaultCM
_ivy
setDefaultConflictManager
_ivy
getConflictManager
_ivy
substitute
_defaultCM
if
_defaultLatest
_ivy
setDefaultLatestStrategy
_ivy
getLatestStrategy
_ivy
substitute
_defaultLatest
