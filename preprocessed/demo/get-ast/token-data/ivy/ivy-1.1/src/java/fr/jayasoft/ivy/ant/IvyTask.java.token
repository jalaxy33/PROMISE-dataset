package
fr
jayasoft
ivy
ant
import
java
text
DateFormat
import
java
text
SimpleDateFormat
import
java
util
Date
import
fr
jayasoft
ivy
Ivy
import
fr
jayasoft
ivy
ModuleDescriptor
import
org
apache
tools
ant
BuildException
import
org
apache
tools
ant
Task
public
class
IvyTask
extends
Task
private
Boolean
_validate
protected
boolean
doValidate
Ivy
ivy
if
_validate
return
_validate
booleanValue
return
ivy
doValidate
public
boolean
isValidate
return
_validate
_validate
booleanValue
public
void
setValidate
boolean
validate
_validate
Boolean
valueOf
validate
protected
Ivy
getIvyInstance
Object
reference
getProject
getReference
if
reference
IvyConfigure
configure
new
IvyConfigure
configure
setProject
getProject
configure
execute
reference
getProject
getReference
if
reference
throw
new
BuildException
if
reference
instanceof
Ivy
throw
new
BuildException
reference
getClass
return
Ivy
reference
protected
void
setIvyInstance
Ivy
ivy
getProject
addReference
ivy
protected
void
setResolved
ModuleDescriptor
md
getProject
addReference
md
protected
void
ensureResolved
boolean
haltOnFailure
Object
reference
getProject
getReference
if
reference
IvyResolve
resolve
new
IvyResolve
resolve
setProject
getProject
resolve
setHaltonfailure
haltOnFailure
if
_validate
resolve
setValidate
_validate
booleanValue
resolve
execute
protected
String
splitConfs
String
conf
String
confs
conf
split
for
int
i
i
confs
length
i
confs
i
confs
i
trim
return
confs
protected
String
mergeConfs
String
conf
StringBuffer
buf
new
StringBuffer
for
int
i
i
conf
length
i
buf
append
conf
i
append
if
conf
length
buf
setLength
buf
length
return
buf
toString
private
static
final
DateFormat
DATE_FORMAT
new
SimpleDateFormat
protected
Date
getPubDate
String
date
Date
def
if
date
if
equalsIgnoreCase
date
return
new
Date
try
return
DATE_FORMAT
parse
date
catch
Exception
ex
throw
new
BuildException
date
else
return
def
protected
String
getProperty
String
value
Ivy
ivy
String
name
if
value
return
getProperty
ivy
name
else
return
ivy
substitute
value
protected
String
getProperty
Ivy
ivy
String
name
String
val
ivy
getVariable
name
val
val
getProject
getProperty
name
val
return
val
ivy
substitute
val
