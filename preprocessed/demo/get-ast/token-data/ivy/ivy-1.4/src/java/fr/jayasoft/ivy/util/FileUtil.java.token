package
fr
jayasoft
ivy
util
import
java
io
BufferedReader
import
java
io
File
import
java
io
FileInputStream
import
java
io
FileOutputStream
import
java
io
IOException
import
java
io
InputStream
import
java
io
OutputStream
import
java
net
URL
import
java
util
ArrayList
import
java
util
Collection
import
java
util
Collections
import
java
util
List
import
fr
jayasoft
ivy
url
URLHandlerRegistry
public
class
FileUtil
private
static
final
int
BUFFER_SIZE
public
static
void
copy
File
src
File
dest
CopyProgressListener
l
throws
IOException
copy
src
dest
l
public
static
void
copy
File
src
File
dest
CopyProgressListener
l
boolean
overwrite
throws
IOException
if
dest
exists
if
dest
isFile
throw
new
IOException
dest
if
overwrite
if
dest
canWrite
dest
delete
else
Message
verbose
dest
copy
new
FileInputStream
src
dest
l
long
srcLen
src
length
long
destLen
dest
length
if
srcLen
destLen
dest
delete
throw
new
IOException
src
toString
srcLen
dest
toString
destLen
dest
setLastModified
src
lastModified
public
static
void
copy
URL
src
File
dest
CopyProgressListener
l
throws
IOException
URLHandlerRegistry
getDefault
download
src
dest
l
public
static
void
copy
InputStream
src
File
dest
CopyProgressListener
l
throws
IOException
if
dest
getParentFile
dest
getParentFile
mkdirs
copy
src
new
FileOutputStream
dest
l
public
static
void
copy
InputStream
src
OutputStream
dest
CopyProgressListener
l
throws
IOException
try
CopyProgressEvent
evt
if
l
evt
new
CopyProgressEvent
byte
buffer
new
byte
BUFFER_SIZE
int
c
long
total
if
l
l
start
evt
while
c
src
read
buffer
if
Thread
currentThread
isInterrupted
throw
new
IOException
dest
write
buffer
c
total
c
if
l
l
progress
evt
update
buffer
c
total
if
l
l
end
evt
update
buffer
total
finally
try
src
close
catch
IOException
ex
dest
close
throw
ex
dest
close
public
static
String
readEntirely
BufferedReader
in
throws
IOException
StringBuffer
buf
new
StringBuffer
String
line
in
readLine
while
line
buf
append
line
line
in
readLine
in
close
return
buf
toString
public
static
String
concat
String
dir
String
file
return
dir
file
public
static
void
forceDelete
File
f
if
f
isDirectory
File
sub
f
listFiles
for
int
i
i
sub
length
i
forceDelete
sub
i
f
delete
public
static
List
getPathFiles
File
root
File
file
List
ret
new
ArrayList
while
file
file
getAbsolutePath
equals
root
getAbsolutePath
ret
add
file
file
file
getParentFile
if
root
ret
add
root
Collections
reverse
ret
return
ret
public
static
Collection
listAll
File
dir
return
listAll
dir
new
ArrayList
private
static
Collection
listAll
File
file
Collection
list
if
file
exists
list
add
file
if
file
isDirectory
File
files
file
listFiles
for
int
i
i
files
length
i
listAll
files
i
list
return
list
