package
fr
jayasoft
ivy
resolver
import
java
io
File
import
java
io
IOException
import
java
text
ParseException
import
fr
jayasoft
ivy
Artifact
import
fr
jayasoft
ivy
DependencyDescriptor
import
fr
jayasoft
ivy
DependencyResolver
import
fr
jayasoft
ivy
Ivy
import
fr
jayasoft
ivy
ResolveData
import
fr
jayasoft
ivy
ResolvedModuleRevision
import
fr
jayasoft
ivy
report
DownloadReport
import
fr
jayasoft
ivy
util
Message
public
class
DualResolver
extends
AbstractResolver
private
DependencyResolver
_ivyResolver
private
DependencyResolver
_artifactResolver
private
boolean
_allownomd
public
void
add
DependencyResolver
resolver
if
_ivyResolver
_ivyResolver
resolver
else
if
_artifactResolver
_artifactResolver
resolver
else
throw
new
IllegalStateException
public
ResolvedModuleRevision
getDependency
DependencyDescriptor
dd
ResolveData
data
throws
ParseException
if
_ivyResolver
_artifactResolver
throw
new
IllegalStateException
data
new
ResolveData
data
doValidate
data
final
ResolvedModuleRevision
mr
_ivyResolver
getDependency
dd
data
if
mr
if
getIvy
getIvy
isInterrupted
throw
new
RuntimeException
if
isAllownomd
Message
verbose
dd
getDependencyRevisionId
return
_artifactResolver
getDependency
dd
data
else
return
else
return
new
ResolvedModuleRevisionProxy
mr
this
public
void
reportFailure
_ivyResolver
reportFailure
_artifactResolver
reportFailure
public
void
reportFailure
Artifact
art
_ivyResolver
reportFailure
art
_artifactResolver
reportFailure
art
public
DownloadReport
download
Artifact
artifacts
Ivy
ivy
File
cache
boolean
useOrigin
return
_artifactResolver
download
artifacts
ivy
cache
useOrigin
public
DependencyResolver
getArtifactResolver
return
_artifactResolver
public
void
setArtifactResolver
DependencyResolver
artifactResolver
_artifactResolver
artifactResolver
public
DependencyResolver
getIvyResolver
return
_ivyResolver
public
void
setIvyResolver
DependencyResolver
ivyResolver
_ivyResolver
ivyResolver
public
void
publish
Artifact
artifact
File
src
boolean
overwrite
throws
IOException
if
equals
artifact
getType
_ivyResolver
publish
artifact
src
overwrite
else
_artifactResolver
publish
artifact
src
overwrite
public
void
dumpConfig
if
_ivyResolver
_artifactResolver
throw
new
IllegalStateException
Message
verbose
getName
_ivyResolver
getName
_artifactResolver
getName
public
boolean
exists
Artifact
artifact
return
_artifactResolver
exists
artifact
public
boolean
isAllownomd
return
_allownomd
public
void
setAllownomd
boolean
allownomd
_allownomd
allownomd
