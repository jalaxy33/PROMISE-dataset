package
fr
jayasoft
ivy
resolver
import
java
io
ByteArrayInputStream
import
java
io
File
import
java
io
IOException
import
java
util
Arrays
import
java
util
Collection
import
java
util
Date
import
java
util
Iterator
import
java
util
List
import
java
util
Map
import
fr
jayasoft
ivy
Artifact
import
fr
jayasoft
ivy
DefaultArtifact
import
fr
jayasoft
ivy
Ivy
import
fr
jayasoft
ivy
LatestStrategy
import
fr
jayasoft
ivy
ModuleDescriptor
import
fr
jayasoft
ivy
ModuleRevisionId
import
fr
jayasoft
ivy
report
DownloadReport
import
fr
jayasoft
ivy
repository
AbstractRepository
import
fr
jayasoft
ivy
repository
Repository
import
fr
jayasoft
ivy
repository
Resource
import
fr
jayasoft
ivy
util
ChecksumHelper
import
fr
jayasoft
ivy
util
FileUtil
import
fr
jayasoft
ivy
util
IvyPatternHelper
import
fr
jayasoft
ivy
util
Message
import
fr
jayasoft
ivy
version
VersionMatcher
public
class
RepositoryResolver
extends
AbstractResourceResolver
private
Repository
_repository
private
Boolean
_alwaysCheckExactRevision
public
RepositoryResolver
public
Repository
getRepository
return
_repository
public
void
setRepository
Repository
repository
_repository
repository
public
void
setName
String
name
super
setName
name
if
_repository
instanceof
AbstractRepository
AbstractRepository
_repository
setName
name
protected
ResolvedResource
findResourceUsingPattern
ModuleRevisionId
mrid
String
pattern
Artifact
artifact
ResourceMDParser
rmdparser
Date
date
return
findResourceUsingPattern
getName
getRepository
getLatestStrategy
getIvy
getVersionMatcher
rmdparser
mrid
pattern
artifact
date
isAlwaysCheckExactRevision
public
static
ResolvedResource
findResourceUsingPattern
String
name
Repository
repository
LatestStrategy
strategy
VersionMatcher
versionMatcher
ResourceMDParser
rmdparser
ModuleRevisionId
mrid
String
pattern
Artifact
artifact
Date
date
boolean
alwaysCheckExactRevision
try
if
versionMatcher
isDynamic
mrid
alwaysCheckExactRevision
String
resourceName
IvyPatternHelper
substitute
pattern
mrid
artifact
Message
debug
resourceName
Resource
res
repository
getResource
resourceName
boolean
reachable
res
exists
if
reachable
String
revision
pattern
indexOf
IvyPatternHelper
REVISION_KEY
name
mrid
getRevision
return
new
ResolvedResource
res
revision
else
if
versionMatcher
isDynamic
mrid
return
findDynamicResourceUsingPattern
name
repository
strategy
versionMatcher
rmdparser
mrid
pattern
artifact
date
else
Message
debug
name
mrid
res
return
else
return
findDynamicResourceUsingPattern
name
repository
strategy
versionMatcher
rmdparser
mrid
pattern
artifact
date
catch
IOException
ex
throw
new
RuntimeException
name
mrid
IvyPatternHelper
substitute
pattern
mrid
artifact
ex
ex
private
static
ResolvedResource
findDynamicResourceUsingPattern
String
name
Repository
repository
LatestStrategy
strategy
VersionMatcher
versionMatcher
ResourceMDParser
rmdparser
ModuleRevisionId
mrid
String
pattern
Artifact
artifact
Date
date
ResolvedResource
rress
ResolverHelper
findAll
repository
mrid
pattern
artifact
if
rress
Message
debug
name
mrid
pattern
return
else
ResolvedResource
found
List
sorted
strategy
sort
rress
for
Iterator
iter
sorted
iterator
iter
hasNext
ResolvedResource
rres
ResolvedResource
iter
next
if
date
rres
getLastModified
date
getTime
Message
debug
name
rres
continue
ModuleRevisionId
foundMrid
ModuleRevisionId
newInstance
mrid
rres
getRevision
if
versionMatcher
accept
mrid
foundMrid
Message
debug
name
rres
continue
if
versionMatcher
needModuleDescriptor
mrid
foundMrid
ResolvedResource
r
rmdparser
parse
rres
getResource
rres
getRevision
ModuleDescriptor
md
MDResolvedResource
r
getResolvedModuleRevision
getDescriptor
if
md
isDefault
Message
debug
name
rres
continue
else
if
versionMatcher
accept
mrid
md
Message
debug
name
rres
continue
else
found
r
else
found
rres
if
found
Message
debug
name
mrid
pattern
else
if
found
getResource
exists
Message
debug
name
mrid
found
getResource
return
return
found
protected
long
get
Resource
resource
File
dest
throws
IOException
Message
verbose
getName
resource
getName
Message
debug
dest
if
dest
getParentFile
dest
getParentFile
mkdirs
_repository
get
resource
getName
dest
return
dest
length
public
void
publish
Artifact
artifact
File
src
boolean
overwrite
throws
IOException
String
destPattern
if
equals
artifact
getType
getIvyPatterns
isEmpty
destPattern
String
getIvyPatterns
get
else
if
getArtifactPatterns
isEmpty
destPattern
String
getArtifactPatterns
get
else
throw
new
IllegalStateException
artifact
this
ModuleRevisionId
mrid
artifact
getModuleRevisionId
if
isM2compatible
mrid
convertM2IdForResourceSearch
mrid
String
dest
IvyPatternHelper
substitute
destPattern
mrid
artifact
put
artifact
src
dest
overwrite
Message
info
artifact
getName
hidePassword
dest
private
void
put
Artifact
artifact
File
src
String
dest
boolean
overwrite
throws
IOException
_repository
put
artifact
src
dest
overwrite
String
checksums
getChecksumAlgorithms
for
int
i
i
checksums
length
i
putChecksum
artifact
src
dest
overwrite
checksums
i
private
void
putChecksum
Artifact
artifact
File
src
String
dest
boolean
overwrite
String
algorithm
throws
IOException
File
csFile
File
createTempFile
algorithm
try
FileUtil
copy
new
ByteArrayInputStream
ChecksumHelper
computeAsString
src
algorithm
getBytes
csFile
_repository
put
DefaultArtifact
cloneWithAnotherTypeAndExt
artifact
algorithm
artifact
getExt
algorithm
csFile
dest
algorithm
overwrite
finally
csFile
delete
public
DownloadReport
download
Artifact
artifacts
Ivy
ivy
File
cache
boolean
useOrigin
try
_repository
addTransferListener
ivy
return
super
download
artifacts
ivy
cache
useOrigin
finally
if
ivy
_repository
removeTransferListener
ivy
protected
void
findTokenValues
Collection
names
List
patterns
Map
tokenValues
String
token
for
Iterator
iter
patterns
iterator
iter
hasNext
String
pattern
String
iter
next
String
partiallyResolvedPattern
IvyPatternHelper
substituteTokens
pattern
tokenValues
String
values
ResolverHelper
listTokenValues
_repository
partiallyResolvedPattern
token
if
values
names
addAll
Arrays
asList
values
public
String
getTypeName
return
public
void
dumpConfig
super
dumpConfig
Message
debug
getRepository
public
void
setIvy
Ivy
ivy
super
setIvy
ivy
if
ivy
if
_alwaysCheckExactRevision
_alwaysCheckExactRevision
Boolean
valueOf
ivy
getVariable
public
boolean
isAlwaysCheckExactRevision
return
_alwaysCheckExactRevision
_alwaysCheckExactRevision
booleanValue
public
void
setAlwaysCheckExactRevision
boolean
alwaysCheckExactRevision
_alwaysCheckExactRevision
Boolean
valueOf
alwaysCheckExactRevision
