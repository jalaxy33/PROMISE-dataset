package
fr
jayasoft
ivy
import
java
io
File
import
java
io
IOException
import
java
text
ParseException
import
java
util
ArrayList
import
java
util
Arrays
import
java
util
Collection
import
java
util
Date
import
java
util
HashMap
import
java
util
Iterator
import
java
util
LinkedHashMap
import
java
util
LinkedHashSet
import
java
util
List
import
java
util
Map
import
fr
jayasoft
ivy
matcher
MatcherHelper
import
fr
jayasoft
ivy
matcher
PatternMatcher
import
fr
jayasoft
ivy
namespace
NameSpaceHelper
import
fr
jayasoft
ivy
namespace
Namespace
import
fr
jayasoft
ivy
namespace
NamespaceTransformer
import
fr
jayasoft
ivy
parser
ModuleDescriptorParser
import
fr
jayasoft
ivy
repository
Resource
import
fr
jayasoft
ivy
status
StatusManager
import
fr
jayasoft
ivy
util
Message
import
fr
jayasoft
ivy
version
VersionMatcher
import
fr
jayasoft
ivy
xml
XmlModuleDescriptorWriter
public
class
DefaultModuleDescriptor
implements
ModuleDescriptor
public
static
DefaultModuleDescriptor
newDefaultInstance
ModuleRevisionId
mrid
return
newDefaultInstance
mrid
public
static
DefaultModuleDescriptor
newCallerInstance
ModuleRevisionId
mrid
String
confs
boolean
transitive
boolean
changing
DefaultModuleDescriptor
moduleDescriptor
new
DefaultModuleDescriptor
ModuleRevisionId
newInstance
mrid
getOrganisation
mrid
getName
for
int
i
i
confs
length
i
moduleDescriptor
addConfiguration
new
Configuration
confs
i
moduleDescriptor
setLastModified
System
currentTimeMillis
DefaultDependencyDescriptor
dd
new
DefaultDependencyDescriptor
moduleDescriptor
mrid
changing
transitive
for
int
j
j
confs
length
j
dd
addDependencyConfiguration
confs
j
confs
j
moduleDescriptor
addDependency
dd
return
moduleDescriptor
public
static
DefaultModuleDescriptor
newCallerInstance
ModuleRevisionId
mrid
boolean
transitive
boolean
changing
DefaultModuleDescriptor
moduleDescriptor
new
DefaultModuleDescriptor
ModuleRevisionId
newInstance
moduleDescriptor
addConfiguration
new
Configuration
DEFAULT_CONFIGURATION
moduleDescriptor
setLastModified
System
currentTimeMillis
for
int
i
i
mrid
length
i
DefaultDependencyDescriptor
dd
new
DefaultDependencyDescriptor
moduleDescriptor
mrid
i
changing
transitive
dd
addDependencyConfiguration
DEFAULT_CONFIGURATION
moduleDescriptor
addDependency
dd
return
moduleDescriptor
public
static
DefaultModuleDescriptor
newDefaultInstance
ModuleRevisionId
mrid
DependencyArtifactDescriptor
artifacts
DefaultModuleDescriptor
moduleDescriptor
new
DefaultModuleDescriptor
mrid
moduleDescriptor
addConfiguration
new
Configuration
DEFAULT_CONFIGURATION
if
artifacts
artifacts
length
for
int
i
i
artifacts
length
i
moduleDescriptor
addArtifact
DEFAULT_CONFIGURATION
new
MDArtifact
moduleDescriptor
artifacts
i
getName
artifacts
i
getType
artifacts
i
getExt
artifacts
i
getUrl
else
moduleDescriptor
addArtifact
DEFAULT_CONFIGURATION
new
MDArtifact
moduleDescriptor
mrid
getName
moduleDescriptor
setLastModified
System
currentTimeMillis
return
moduleDescriptor
public
static
DefaultModuleDescriptor
newBasicInstance
ModuleRevisionId
mrid
Date
publicationDate
DefaultModuleDescriptor
moduleDescriptor
new
DefaultModuleDescriptor
mrid
publicationDate
moduleDescriptor
addConfiguration
new
Configuration
DEFAULT_CONFIGURATION
moduleDescriptor
addArtifact
DEFAULT_CONFIGURATION
new
MDArtifact
moduleDescriptor
mrid
getName
return
moduleDescriptor
public
static
ModuleDescriptor
transformInstance
ModuleDescriptor
md
Namespace
ns
NamespaceTransformer
t
ns
getToSystemTransformer
if
t
isIdentity
return
md
DefaultModuleDescriptor
nmd
new
DefaultModuleDescriptor
md
getParser
md
getResource
nmd
_revId
t
transform
md
getModuleRevisionId
nmd
_resolvedRevId
t
transform
md
getResolvedModuleRevisionId
nmd
_status
md
getStatus
nmd
_publicationDate
md
getPublicationDate
nmd
_resolvedPublicationDate
md
getResolvedPublicationDate
DependencyDescriptor
dd
md
getDependencies
for
int
i
i
dd
length
i
nmd
_dependencies
add
NameSpaceHelper
toSystem
dd
i
ns
Configuration
confs
md
getConfigurations
for
int
i
i
confs
length
i
nmd
_configurations
put
confs
i
getName
confs
i
Artifact
arts
md
getArtifacts
confs
i
getName
for
int
j
j
arts
length
j
nmd
addArtifact
confs
i
getName
NameSpaceHelper
transform
arts
j
t
nmd
setDefault
md
isDefault
if
md
instanceof
DefaultModuleDescriptor
DefaultModuleDescriptor
dmd
DefaultModuleDescriptor
md
nmd
_conflictManagers
putAll
dmd
_conflictManagers
else
Message
warn
md
nmd
_licenses
addAll
Arrays
asList
md
getLicenses
nmd
_homePage
md
getHomePage
nmd
_lastModified
md
getLastModified
nmd
_namespace
ns
return
nmd
private
ModuleRevisionId
_revId
private
ModuleRevisionId
_resolvedRevId
private
String
_status
StatusManager
getCurrent
getDefaultStatus
private
Date
_publicationDate
private
Date
_resolvedPublicationDate
private
List
_dependencies
new
ArrayList
private
Map
_configurations
new
LinkedHashMap
private
Map
_artifactsByConf
new
HashMap
private
Collection
_artifacts
new
LinkedHashSet
private
boolean
_isDefault
private
Map
_conflictManagers
new
LinkedHashMap
private
List
_licenses
new
ArrayList
private
String
_homePage
private
long
_lastModified
private
Namespace
_namespace
private
boolean
_mappingOverride
private
ModuleDescriptorParser
_parser
private
Resource
_resource
public
DefaultModuleDescriptor
ModuleRevisionId
id
String
status
Date
pubDate
this
id
status
pubDate
public
DefaultModuleDescriptor
ModuleRevisionId
id
String
status
Date
pubDate
boolean
isDefault
if
id
throw
new
NullPointerException
if
status
throw
new
NullPointerException
_revId
id
_resolvedRevId
id
_status
status
_publicationDate
pubDate
_resolvedPublicationDate
_publicationDate
new
Date
_publicationDate
_isDefault
isDefault
public
DefaultModuleDescriptor
ModuleDescriptorParser
parser
Resource
res
_parser
parser
_resource
res
public
boolean
isDefault
return
_isDefault
public
void
setPublicationDate
Date
publicationDate
_publicationDate
publicationDate
if
_resolvedPublicationDate
_resolvedPublicationDate
_publicationDate
new
Date
_publicationDate
public
Date
getPublicationDate
return
_publicationDate
public
void
setResolvedPublicationDate
Date
publicationDate
if
publicationDate
throw
new
NullPointerException
_resolvedPublicationDate
publicationDate
public
Date
getResolvedPublicationDate
return
_resolvedPublicationDate
public
void
setModuleRevisionId
ModuleRevisionId
revId
if
revId
throw
new
NullPointerException
_revId
revId
if
_resolvedRevId
_resolvedRevId
_revId
public
void
setResolvedModuleRevisionId
ModuleRevisionId
revId
_resolvedRevId
revId
public
void
setStatus
String
status
_status
status
public
void
addDependency
DependencyDescriptor
dependency
_dependencies
add
dependency
public
void
addConfiguration
Configuration
conf
_configurations
put
conf
getName
conf
public
void
addArtifact
String
conf
Artifact
artifact
Collection
artifacts
Collection
_artifactsByConf
get
conf
if
artifacts
artifacts
new
ArrayList
_artifactsByConf
put
conf
artifacts
artifacts
add
artifact
_artifacts
add
artifact
public
ModuleRevisionId
getModuleRevisionId
return
_revId
public
ModuleRevisionId
getResolvedModuleRevisionId
return
_resolvedRevId
public
String
getStatus
return
_status
public
Configuration
getConfigurations
return
Configuration
_configurations
values
toArray
new
Configuration
_configurations
size
public
String
getConfigurationsNames
return
String
_configurations
keySet
toArray
new
String
_configurations
size
public
String
getPublicConfigurationsNames
List
ret
new
ArrayList
for
Iterator
iter
_configurations
values
iterator
iter
hasNext
Configuration
conf
Configuration
iter
next
if
conf
getVisibility
Configuration
Visibility
PUBLIC
ret
add
conf
getName
return
String
ret
toArray
new
String
ret
size
public
Configuration
getConfiguration
String
confName
return
Configuration
_configurations
get
confName
public
Artifact
getArtifacts
String
conf
Collection
artifacts
Collection
_artifactsByConf
get
conf
if
artifacts
return
new
Artifact
else
return
Artifact
artifacts
toArray
new
Artifact
artifacts
size
public
Artifact
getAllArtifacts
return
Artifact
_artifacts
toArray
new
Artifact
_artifacts
size
public
DependencyDescriptor
getDependencies
return
DependencyDescriptor
_dependencies
toArray
new
DependencyDescriptor
_dependencies
size
public
boolean
dependsOn
VersionMatcher
matcher
ModuleDescriptor
md
for
Iterator
iter
_dependencies
iterator
iter
hasNext
DependencyDescriptor
dd
DependencyDescriptor
iter
next
if
dd
getDependencyId
equals
md
getModuleRevisionId
getModuleId
if
md
getResolvedModuleRevisionId
getRevision
return
else
if
matcher
accept
dd
getDependencyRevisionId
md
return
return
public
void
toIvyFile
File
destFile
throws
ParseException
IOException
if
_parser
_resource
_parser
toIvyFile
_resource
openStream
_resource
destFile
this
else
XmlModuleDescriptorWriter
write
this
destFile
public
String
toString
return
_revId
_status
_publicationDate
_configurations
_artifactsByConf
_dependencies
public
void
setDefault
boolean
b
_isDefault
b
private
static
class
ModuleIdMatcher
private
PatternMatcher
_matcher
private
ModuleId
_mid
public
ModuleIdMatcher
PatternMatcher
matcher
ModuleId
mid
_matcher
matcher
_mid
mid
public
boolean
matches
ModuleId
mid
return
MatcherHelper
matches
_matcher
_mid
mid
public
void
addConflictManager
ModuleId
moduleId
PatternMatcher
matcher
ConflictManager
manager
_conflictManagers
put
new
ModuleIdMatcher
matcher
moduleId
manager
public
ConflictManager
getConflictManager
ModuleId
moduleId
for
Iterator
iter
_conflictManagers
keySet
iterator
iter
hasNext
ModuleIdMatcher
matcher
ModuleIdMatcher
iter
next
if
matcher
matches
moduleId
return
ConflictManager
_conflictManagers
get
matcher
return
public
void
addLicense
License
license
_licenses
add
license
public
License
getLicenses
return
License
_licenses
toArray
new
License
_licenses
size
public
String
getHomePage
return
_homePage
public
void
setHomePage
String
homePage
_homePage
homePage
public
long
getLastModified
return
_lastModified
public
void
setLastModified
long
lastModified
_lastModified
lastModified
public
Namespace
getNamespace
if
_namespace
isNamespaceUseful
return
return
_namespace
public
boolean
isNamespaceUseful
for
Iterator
iter
_dependencies
iterator
iter
hasNext
DependencyDescriptor
dd
DependencyDescriptor
iter
next
if
dd
getAllDependencyArtifactsExcludes
length
return
return
public
void
setNamespace
Namespace
ns
_namespace
ns
public
void
check
for
Iterator
iter
_configurations
values
iterator
iter
hasNext
Configuration
conf
Configuration
iter
next
String
ext
conf
getExtends
for
int
i
i
ext
length
i
if
_configurations
containsKey
ext
i
trim
throw
new
IllegalStateException
ext
i
conf
getName
public
void
setMappingOverride
boolean
override
_mappingOverride
override
public
boolean
isMappingOverride
return
_mappingOverride
public
String
getAttribute
String
attName
return
_resolvedRevId
getAttribute
attName
public
Map
getAttributes
return
_resolvedRevId
getAttributes
public
String
getExtraAttribute
String
attName
return
_resolvedRevId
getExtraAttribute
attName
public
Map
getExtraAttributes
return
_resolvedRevId
getExtraAttributes
public
String
getStandardAttribute
String
attName
return
_resolvedRevId
getStandardAttribute
attName
public
Map
getStandardAttributes
return
_resolvedRevId
getStandardAttributes
public
ModuleDescriptorParser
getParser
return
_parser
public
Resource
getResource
return
_resource
