package
fr
jayasoft
ivy
resolver
import
java
io
File
import
java
io
IOException
import
java
net
MalformedURLException
import
java
net
URL
import
java
text
ParseException
import
java
text
SimpleDateFormat
import
java
util
ArrayList
import
java
util
Collection
import
java
util
Collections
import
java
util
Date
import
java
util
HashMap
import
java
util
Iterator
import
java
util
List
import
java
util
ListIterator
import
java
util
Map
import
fr
jayasoft
ivy
Artifact
import
fr
jayasoft
ivy
ArtifactOrigin
import
fr
jayasoft
ivy
DefaultArtifact
import
fr
jayasoft
ivy
DefaultModuleDescriptor
import
fr
jayasoft
ivy
DefaultModuleRevision
import
fr
jayasoft
ivy
DependencyDescriptor
import
fr
jayasoft
ivy
DependencyResolver
import
fr
jayasoft
ivy
Ivy
import
fr
jayasoft
ivy
IvyNode
import
fr
jayasoft
ivy
ModuleDescriptor
import
fr
jayasoft
ivy
ModuleId
import
fr
jayasoft
ivy
ModuleRevisionId
import
fr
jayasoft
ivy
ResolveData
import
fr
jayasoft
ivy
ResolvedModuleRevision
import
fr
jayasoft
ivy
event
download
EndArtifactDownloadEvent
import
fr
jayasoft
ivy
event
download
NeedArtifactEvent
import
fr
jayasoft
ivy
event
download
StartArtifactDownloadEvent
import
fr
jayasoft
ivy
parser
ModuleDescriptorParser
import
fr
jayasoft
ivy
parser
ModuleDescriptorParserRegistry
import
fr
jayasoft
ivy
report
ArtifactDownloadReport
import
fr
jayasoft
ivy
report
DownloadReport
import
fr
jayasoft
ivy
report
DownloadStatus
import
fr
jayasoft
ivy
repository
Resource
import
fr
jayasoft
ivy
repository
ResourceHelper
import
fr
jayasoft
ivy
repository
url
URLRepository
import
fr
jayasoft
ivy
repository
url
URLResource
import
fr
jayasoft
ivy
util
ChecksumHelper
import
fr
jayasoft
ivy
util
IvyPatternHelper
import
fr
jayasoft
ivy
util
Message
import
fr
jayasoft
ivy
xml
XmlModuleDescriptorParser
import
fr
jayasoft
ivy
xml
XmlModuleDescriptorWriter
public
abstract
class
BasicResolver
extends
AbstractResolver
public
static
final
SimpleDateFormat
DATE_FORMAT
new
SimpleDateFormat
protected
String
_workspaceName
private
boolean
_envDependent
private
List
_ivyattempts
new
ArrayList
private
Map
_artattempts
new
HashMap
private
Boolean
_checkmodified
private
boolean
_checkconsistency
private
boolean
_allownomd
private
String
_checksums
private
URLRepository
_extartifactrep
new
URLRepository
public
BasicResolver
_workspaceName
Ivy
getLocalHostName
public
String
getWorkspaceName
return
_workspaceName
public
void
setWorkspaceName
String
workspaceName
_workspaceName
workspaceName
public
boolean
isEnvDependent
return
_envDependent
public
void
setEnvDependent
boolean
envDependent
_envDependent
envDependent
public
boolean
isCheckmodified
if
_checkmodified
if
getIvy
String
check
getIvy
getVariable
return
check
Boolean
valueOf
check
booleanValue
else
return
else
return
_checkmodified
booleanValue
public
void
setCheckmodified
boolean
check
_checkmodified
Boolean
valueOf
check
public
ResolvedModuleRevision
getDependency
DependencyDescriptor
dd
ResolveData
data
throws
ParseException
DependencyDescriptor
systemDd
dd
dd
fromSystem
dd
clearIvyAttempts
boolean
downloaded
boolean
searched
ModuleRevisionId
mrid
dd
getDependencyRevisionId
int
index
mrid
getRevision
indexOf
if
index
mrid
getRevision
substring
index
equals
_workspaceName
Message
verbose
getName
mrid
getRevision
return
boolean
isDynamic
getIvy
getVersionMatcher
isDynamic
mrid
if
isDynamic
acceptLatest
Message
error
getClass
getName
mrid
return
boolean
isChangingRevision
getChangingMatcher
matches
mrid
getRevision
boolean
isChangingDependency
isChangingRevision
dd
isChanging
ResolvedModuleRevision
cachedRmr
boolean
checkedCache
if
isDynamic
isCheckmodified
isChangingDependency
cachedRmr
findModuleInCache
data
mrid
checkedCache
if
cachedRmr
if
cachedRmr
getDescriptor
isDefault
cachedRmr
getResolver
this
Message
verbose
getName
mrid
cachedRmr
getResolver
getName
else
Message
verbose
getName
mrid
return
toSystem
cachedRmr
checkInterrupted
URL
cachedIvyURL
ResolvedResource
ivyRef
findIvyFileRef
dd
data
checkInterrupted
searched
ModuleDescriptorParser
parser
ModuleDescriptor
md
ModuleDescriptor
systemMd
if
ivyRef
if
isAllownomd
Message
verbose
getName
mrid
logIvyNotFound
mrid
return
parser
XmlModuleDescriptorParser
getInstance
md
DefaultModuleDescriptor
newDefaultInstance
mrid
dd
getAllDependencyArtifactsIncludes
ResolvedResource
artifactRef
findFirstArtifactRef
md
dd
data
if
getIvy
getIvy
isInterrupted
throw
new
RuntimeException
if
artifactRef
Message
verbose
getName
mrid
logIvyNotFound
mrid
String
conf
md
getConfigurationsNames
for
int
i
i
conf
length
i
Artifact
artifacts
md
getArtifacts
conf
i
for
int
j
j
artifacts
length
j
logArtifactNotFound
artifacts
j
if
checkedCache
cachedRmr
findModuleInCache
data
mrid
if
cachedRmr
Message
verbose
getName
mrid
return
toSystem
cachedRmr
return
else
Message
verbose
getName
mrid
logIvyNotFound
mrid
if
isDynamic
md
setResolvedModuleRevisionId
ModuleRevisionId
newInstance
mrid
artifactRef
getRevision
else
ResolvedModuleRevision
rmr
if
ivyRef
instanceof
MDResolvedResource
rmr
MDResolvedResource
ivyRef
getResolvedModuleRevision
if
rmr
rmr
parse
ivyRef
dd
data
if
rmr
return
if
rmr
isDownloaded
return
toSystem
rmr
else
md
rmr
getDescriptor
parser
ModuleDescriptorParserRegistry
getInstance
getParser
ivyRef
getResource
cachedIvyURL
rmr
getLocalMDUrl
systemMd
toSystem
md
if
_checkconsistency
checkDescriptorConsistency
mrid
md
ivyRef
checkDescriptorConsistency
systemDd
getDependencyRevisionId
systemMd
ivyRef
else
if
md
instanceof
DefaultModuleDescriptor
String
revision
getRevision
ivyRef
mrid
md
DefaultModuleDescriptor
md
setModuleRevisionId
ModuleRevisionId
newInstance
mrid
revision
else
Message
warn
checkDescriptorConsistency
mrid
md
ivyRef
checkDescriptorConsistency
systemDd
getDependencyRevisionId
systemMd
ivyRef
if
systemMd
systemMd
toSystem
md
ModuleRevisionId
resolvedMrid
mrid
if
isDynamic
resolvedMrid
md
getResolvedModuleRevisionId
if
resolvedMrid
getRevision
resolvedMrid
getRevision
length
if
ivyRef
getRevision
ivyRef
getRevision
length
resolvedMrid
ModuleRevisionId
newInstance
resolvedMrid
getName
else
resolvedMrid
ModuleRevisionId
newInstance
resolvedMrid
ivyRef
getRevision
Message
verbose
resolvedMrid
getRevision
mrid
getModuleId
md
setResolvedModuleRevisionId
resolvedMrid
systemMd
setResolvedModuleRevisionId
toSystem
resolvedMrid
if
getIvy
getVersionMatcher
accept
mrid
md
Message
info
getName
md
getModuleRevisionId
getRevision
mrid
getRevision
return
if
data
getDate
long
pubDate
getPublicationDate
md
dd
data
if
pubDate
data
getDate
getTime
Message
info
getName
new
Date
pubDate
data
getDate
return
else
if
pubDate
Message
info
getName
mrid
return
md
setResolvedPublicationDate
new
Date
pubDate
systemMd
setResolvedPublicationDate
new
Date
pubDate
try
File
ivyFile
data
getIvy
getIvyFileInCache
data
getCache
systemMd
getResolvedModuleRevisionId
if
ivyRef
XmlModuleDescriptorWriter
write
systemMd
ivyFile
else
if
md
instanceof
DefaultModuleDescriptor
DefaultModuleDescriptor
dmd
DefaultModuleDescriptor
md
if
data
getIvy
logNotConvertedExclusionRule
dmd
isNamespaceUseful
Message
warn
ivyRef
getResource
getNamespace
getName
parser
toIvyFile
cachedIvyURL
openStream
ivyRef
getResource
ivyFile
systemMd
long
repLastModified
ivyRef
getLastModified
if
repLastModified
ivyFile
setLastModified
repLastModified
catch
Exception
e
if
ivyRef
Message
warn
resolvedMrid
else
e
printStackTrace
Message
warn
ivyRef
getResource
data
getIvy
saveResolver
data
getCache
systemMd
getName
data
getIvy
saveArtResolver
data
getCache
systemMd
getName
return
new
DefaultModuleRevision
this
this
systemMd
searched
downloaded
cachedIvyURL
private
String
getRevision
ResolvedResource
ivyRef
ModuleRevisionId
askedMrid
ModuleDescriptor
md
throws
ParseException
String
revision
ivyRef
getRevision
if
revision
Message
debug
askedMrid
if
getIvy
getVersionMatcher
isDynamic
askedMrid
if
md
getModuleRevisionId
getRevision
return
getName
else
Message
debug
askedMrid
revision
md
getModuleRevisionId
getRevision
else
Message
debug
askedMrid
revision
askedMrid
getRevision
return
revision
public
ResolvedModuleRevision
parse
ResolvedResource
ivyRef
DependencyDescriptor
dd
ResolveData
data
throws
ParseException
ModuleRevisionId
mrid
dd
getDependencyRevisionId
ModuleDescriptorParser
parser
ModuleDescriptorParserRegistry
getInstance
getParser
ivyRef
getResource
if
parser
Message
warn
ivyRef
getResource
return
Message
verbose
getName
mrid
Message
verbose
ivyRef
Message
debug
parser
boolean
isChangingRevision
getChangingMatcher
matches
mrid
getRevision
boolean
isChangingDependency
isChangingRevision
dd
isChanging
Date
cachedPublicationDate
ModuleRevisionId
resolvedMrid
mrid
if
getIvy
getVersionMatcher
isDynamic
mrid
resolvedMrid
ModuleRevisionId
newInstance
mrid
ivyRef
getRevision
IvyNode
node
getSystemNode
data
resolvedMrid
if
node
node
getModuleRevision
if
node
getDescriptor
node
getDescriptor
isDefault
Message
verbose
getName
resolvedMrid
else
Message
verbose
getName
resolvedMrid
return
searchedRmr
node
getModuleRevision
ResolvedModuleRevision
rmr
findModuleInCache
data
resolvedMrid
if
rmr
if
rmr
getDescriptor
isDefault
rmr
getResolver
this
Message
verbose
getName
mrid
rmr
getResolver
getName
else
if
isCheckmodified
isChangingDependency
Message
verbose
getName
mrid
return
searchedRmr
rmr
long
repLastModified
ivyRef
getLastModified
long
cacheLastModified
rmr
getDescriptor
getLastModified
if
rmr
getDescriptor
isDefault
repLastModified
cacheLastModified
Message
verbose
getName
resolvedMrid
return
searchedRmr
rmr
else
Message
verbose
getName
resolvedMrid
if
isChangingDependency
cachedPublicationDate
rmr
getDescriptor
getResolvedPublicationDate
URL
cachedIvyURL
File
ivyTempFile
try
if
ResourceHelper
equals
ivyRef
getResource
data
getIvy
getIvyFileInCache
data
getCache
toSystem
resolvedMrid
Message
error
getName
return
ivyTempFile
File
createTempFile
ivyTempFile
deleteOnExit
Message
debug
getName
ivyRef
getResource
ivyTempFile
getAndCheck
ivyRef
getResource
ivyTempFile
try
cachedIvyURL
ivyTempFile
toURL
catch
MalformedURLException
ex
Message
warn
ivyTempFile
ex
getMessage
return
catch
IOException
ex
Message
warn
ivyRef
getResource
ivyTempFile
ex
getMessage
return
try
ModuleDescriptor
md
parser
parseDescriptor
data
getIvy
cachedIvyURL
ivyRef
getResource
doValidate
data
Message
debug
getName
mrid
md
getModuleRevisionId
boolean
deleteOldArtifacts
if
cachedPublicationDate
cachedPublicationDate
equals
md
getResolvedPublicationDate
Message
verbose
dd
deleteOldArtifacts
if
deleteOldArtifacts
String
confs
rmr
getDescriptor
getConfigurationsNames
for
int
i
i
confs
length
i
Artifact
arts
rmr
getDescriptor
getArtifacts
confs
i
for
int
j
j
arts
length
j
Artifact
transformedArtifact
toSystem
arts
j
ArtifactOrigin
origin
data
getIvy
getSavedArtifactOrigin
data
getCache
transformedArtifact
File
artFile
data
getIvy
getArchiveFileInCache
data
getCache
transformedArtifact
origin
if
artFile
exists
Message
debug
artFile
artFile
delete
data
getIvy
removeSavedArtifactOrigin
data
getCache
transformedArtifact
else
if
isChangingDependency
Message
verbose
dd
return
new
DefaultModuleRevision
this
this
md
cachedIvyURL
catch
IOException
ex
Message
warn
ivyRef
getResource
ex
getMessage
return
protected
ResourceMDParser
getRMDParser
final
DependencyDescriptor
dd
final
ResolveData
data
return
new
ResourceMDParser
public
MDResolvedResource
parse
Resource
resource
String
rev
try
ResolvedModuleRevision
rmr
BasicResolver
this
parse
new
ResolvedResource
resource
rev
dd
data
if
rmr
return
else
return
new
MDResolvedResource
resource
rev
rmr
catch
ParseException
e
return
protected
ResourceMDParser
getDefaultRMDParser
final
ModuleId
mid
return
new
ResourceMDParser
public
MDResolvedResource
parse
Resource
resource
String
rev
return
new
MDResolvedResource
resource
rev
new
DefaultModuleRevision
BasicResolver
this
BasicResolver
this
DefaultModuleDescriptor
newDefaultInstance
new
ModuleRevisionId
mid
rev
private
void
checkDescriptorConsistency
ModuleRevisionId
mrid
ModuleDescriptor
md
ResolvedResource
ivyRef
throws
ParseException
boolean
ok
StringBuffer
errors
new
StringBuffer
if
mrid
getOrganisation
equals
md
getModuleRevisionId
getOrganisation
Message
error
getName
ivyRef
getResource
mrid
getOrganisation
md
getModuleRevisionId
getOrganisation
errors
append
mrid
getOrganisation
md
getModuleRevisionId
getOrganisation
ok
if
mrid
getName
equals
md
getModuleRevisionId
getName
Message
error
getName
ivyRef
getResource
mrid
getName
md
getModuleRevisionId
getName
errors
append
mrid
getName
md
getModuleRevisionId
getName
ok
if
ivyRef
getRevision
ivyRef
getRevision
startsWith
ModuleRevisionId
expectedMrid
ModuleRevisionId
newInstance
mrid
ivyRef
getRevision
if
getIvy
getVersionMatcher
accept
expectedMrid
md
Message
error
getName
ivyRef
getResource
ivyRef
getRevision
md
getModuleRevisionId
getRevision
errors
append
ivyRef
getRevision
md
getModuleRevisionId
getRevision
ok
if
getIvy
getStatusManager
isStatus
md
getStatus
Message
error
getName
ivyRef
getResource
md
getStatus
errors
append
md
getStatus
ok
if
ok
throw
new
ParseException
ivyRef
getResource
errors
protected
void
clearIvyAttempts
_ivyattempts
clear
clearArtifactAttempts
protected
ResolvedModuleRevision
searchedRmr
final
ResolvedModuleRevision
rmr
return
new
ResolvedModuleRevision
public
boolean
isSearched
return
public
boolean
isDownloaded
return
rmr
isDownloaded
public
ModuleDescriptor
getDescriptor
return
rmr
getDescriptor
public
Date
getPublicationDate
return
rmr
getPublicationDate
public
ModuleRevisionId
getId
return
rmr
getId
public
DependencyResolver
getResolver
return
rmr
getResolver
public
DependencyResolver
getArtifactResolver
return
rmr
getArtifactResolver
public
URL
getLocalMDUrl
return
rmr
getLocalMDUrl
protected
void
logIvyAttempt
String
attempt
_ivyattempts
add
attempt
Message
verbose
attempt
protected
void
logArtifactAttempt
Artifact
art
String
attempt
List
attempts
List
_artattempts
get
art
if
attempts
attempts
new
ArrayList
_artattempts
put
art
attempts
attempts
add
attempt
Message
verbose
attempt
public
void
reportFailure
for
ListIterator
iter
_ivyattempts
listIterator
iter
hasNext
String
m
String
iter
next
Message
warn
getName
m
for
Iterator
iter
_artattempts
keySet
iterator
iter
hasNext
Artifact
art
Artifact
iter
next
List
attempts
List
_artattempts
get
art
if
attempts
Message
warn
getName
art
for
ListIterator
iterator
attempts
listIterator
iterator
hasNext
String
m
String
iterator
next
Message
warn
m
public
void
reportFailure
Artifact
art
List
attempts
List
_artattempts
get
art
if
attempts
for
ListIterator
iter
attempts
listIterator
iter
hasNext
String
m
String
iter
next
Message
warn
getName
m
protected
boolean
acceptLatest
return
public
DownloadReport
download
Artifact
artifacts
Ivy
ivy
File
cache
boolean
useOrigin
clearArtifactAttempts
DownloadReport
dr
new
DownloadReport
for
int
i
i
artifacts
length
i
final
ArtifactDownloadReport
adr
new
ArtifactDownloadReport
artifacts
i
dr
addArtifactReport
adr
ivy
fireIvyEvent
new
NeedArtifactEvent
ivy
this
artifacts
i
ArtifactOrigin
origin
ivy
getSavedArtifactOrigin
cache
artifacts
i
File
archiveFile
ivy
getArchiveFileInCache
cache
artifacts
i
origin
useOrigin
if
archiveFile
exists
Message
verbose
artifacts
i
adr
setDownloadStatus
DownloadStatus
NO
adr
setSize
archiveFile
length
adr
setArtifactOrigin
origin
else
Artifact
artifact
fromSystem
artifacts
i
if
artifact
equals
artifacts
i
Message
verbose
getName
artifact
artifacts
i
long
start
System
currentTimeMillis
try
ResolvedResource
artifactRef
getArtifactRef
artifact
if
artifactRef
origin
new
ArtifactOrigin
artifactRef
getResource
isLocal
artifactRef
getResource
getName
if
useOrigin
artifactRef
getResource
isLocal
Message
verbose
artifacts
i
ivy
saveArtifactOrigin
cache
artifacts
i
origin
archiveFile
ivy
getArchiveFileInCache
cache
artifacts
i
origin
adr
setDownloadStatus
DownloadStatus
NO
adr
setSize
archiveFile
length
adr
setArtifactOrigin
origin
else
archiveFile
ivy
getArchiveFileInCache
cache
artifacts
i
origin
useOrigin
if
ResourceHelper
equals
artifactRef
getResource
archiveFile
Message
error
getName
return
Message
info
artifactRef
getResource
ivy
fireIvyEvent
new
StartArtifactDownloadEvent
ivy
this
artifacts
i
origin
File
tmp
ivy
getArchiveFileInCache
cache
new
DefaultArtifact
artifacts
i
getModuleRevisionId
artifacts
i
getPublicationDate
artifacts
i
getName
artifacts
i
getType
artifacts
i
getExt
artifacts
i
getExtraAttributes
origin
useOrigin
if
artifactRef
getResource
getName
equals
String
valueOf
artifacts
i
getUrl
Message
verbose
getName
artifactRef
getResource
getName
Message
debug
tmp
if
tmp
getParentFile
tmp
getParentFile
mkdirs
_extartifactrep
get
artifactRef
getResource
getName
tmp
adr
setSize
tmp
length
else
adr
setSize
getAndCheck
artifactRef
getResource
tmp
if
tmp
renameTo
archiveFile
Message
warn
artifacts
i
System
currentTimeMillis
start
adr
setDownloadStatus
DownloadStatus
FAILED
else
ivy
saveArtifactOrigin
cache
artifacts
i
origin
Message
info
artifacts
i
System
currentTimeMillis
start
adr
setDownloadStatus
DownloadStatus
SUCCESSFUL
adr
setArtifactOrigin
origin
else
logArtifactNotFound
artifacts
i
adr
setDownloadStatus
DownloadStatus
FAILED
catch
Exception
ex
Message
warn
artifacts
i
ex
getMessage
System
currentTimeMillis
start
adr
setDownloadStatus
DownloadStatus
FAILED
checkInterrupted
ivy
fireIvyEvent
new
EndArtifactDownloadEvent
ivy
this
artifacts
i
adr
archiveFile
return
dr
protected
void
clearArtifactAttempts
_artattempts
clear
public
boolean
exists
Artifact
artifact
ResolvedResource
artifactRef
getArtifactRef
artifact
if
artifactRef
return
artifactRef
getResource
exists
return
protected
long
getPublicationDate
ModuleDescriptor
md
DependencyDescriptor
dd
ResolveData
data
if
md
getPublicationDate
return
md
getPublicationDate
getTime
ResolvedResource
artifactRef
findFirstArtifactRef
md
dd
data
if
artifactRef
return
artifactRef
getLastModified
return
public
String
toString
return
getName
public
String
listTokenValues
String
token
Map
otherTokenValues
Collection
ret
findNames
otherTokenValues
token
return
String
ret
toArray
new
String
ret
size
public
OrganisationEntry
listOrganisations
Collection
names
findNames
Collections
EMPTY_MAP
IvyPatternHelper
ORGANISATION_KEY
OrganisationEntry
ret
new
OrganisationEntry
names
size
int
i
for
Iterator
iter
names
iterator
iter
hasNext
i
String
org
String
iter
next
ret
i
new
OrganisationEntry
this
org
return
ret
public
ModuleEntry
listModules
OrganisationEntry
org
Map
tokenValues
new
HashMap
tokenValues
put
IvyPatternHelper
ORGANISATION_KEY
org
getOrganisation
Collection
names
findNames
tokenValues
IvyPatternHelper
MODULE_KEY
ModuleEntry
ret
new
ModuleEntry
names
size
int
i
for
Iterator
iter
names
iterator
iter
hasNext
i
String
name
String
iter
next
ret
i
new
ModuleEntry
org
name
return
ret
public
RevisionEntry
listRevisions
ModuleEntry
mod
Map
tokenValues
new
HashMap
tokenValues
put
IvyPatternHelper
ORGANISATION_KEY
mod
getOrganisation
tokenValues
put
IvyPatternHelper
MODULE_KEY
mod
getModule
Collection
names
findNames
tokenValues
IvyPatternHelper
REVISION_KEY
RevisionEntry
ret
new
RevisionEntry
names
size
int
i
for
Iterator
iter
names
iterator
iter
hasNext
i
String
name
String
iter
next
ret
i
new
RevisionEntry
mod
name
return
ret
protected
abstract
Collection
findNames
Map
tokenValues
String
token
protected
abstract
ResolvedResource
findIvyFileRef
DependencyDescriptor
dd
ResolveData
data
protected
ResolvedResource
findFirstArtifactRef
ModuleDescriptor
md
DependencyDescriptor
dd
ResolveData
data
ResolvedResource
ret
String
conf
md
getConfigurationsNames
for
int
i
i
conf
length
i
Artifact
artifacts
md
getArtifacts
conf
i
for
int
j
j
artifacts
length
j
ret
getArtifactRef
artifacts
j
data
getDate
if
ret
return
ret
return
protected
long
getAndCheck
Resource
resource
File
dest
throws
IOException
long
size
get
resource
dest
String
checksums
getChecksumAlgorithms
boolean
checked
for
int
i
i
checksums
length
checked
i
checked
check
resource
dest
checksums
i
return
size
private
boolean
check
Resource
resource
File
dest
String
algorithm
throws
IOException
Resource
csRes
resource
clone
resource
getName
algorithm
if
csRes
exists
Message
debug
algorithm
resource
File
csFile
File
createTempFile
algorithm
try
get
csRes
csFile
if
ChecksumHelper
check
dest
csFile
algorithm
dest
delete
throw
new
IOException
algorithm
else
Message
verbose
algorithm
resource
return
finally
csFile
delete
else
return
protected
ResolvedResource
getArtifactRef
Artifact
artifact
Date
date
ResolvedResource
ret
findArtifactRef
artifact
date
if
ret
artifact
getUrl
URL
url
artifact
getUrl
Message
verbose
artifact
url
ret
new
ResolvedResource
new
URLResource
url
artifact
getModuleRevisionId
getRevision
return
ret
protected
abstract
ResolvedResource
findArtifactRef
Artifact
artifact
Date
date
protected
abstract
long
get
Resource
resource
File
dest
throws
IOException
protected
abstract
void
logIvyNotFound
ModuleRevisionId
mrid
protected
abstract
void
logArtifactNotFound
Artifact
artifact
public
boolean
isCheckconsistency
return
_checkconsistency
public
void
setCheckconsistency
boolean
checkConsitency
_checkconsistency
checkConsitency
public
boolean
isAllownomd
return
_allownomd
public
void
setAllownomd
boolean
b
_allownomd
b
public
String
getChecksumAlgorithms
String
csDef
_checksums
getIvy
getVariable
_checksums
if
csDef
return
new
String
String
checksums
csDef
split
List
algos
new
ArrayList
for
int
i
i
checksums
length
i
String
cs
checksums
i
trim
if
equals
cs
equals
cs
algos
add
cs
return
String
algos
toArray
new
String
algos
size
public
void
setChecksums
String
checksums
_checksums
checksums
