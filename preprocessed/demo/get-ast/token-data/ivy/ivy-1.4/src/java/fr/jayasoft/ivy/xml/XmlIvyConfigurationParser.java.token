package
fr
jayasoft
ivy
xml
import
java
io
File
import
java
io
IOException
import
java
io
InputStream
import
java
net
URL
import
java
text
ParseException
import
java
util
Arrays
import
java
util
HashMap
import
java
util
Iterator
import
java
util
List
import
java
util
Map
import
javax
xml
parsers
SAXParserFactory
import
org
xml
sax
Attributes
import
org
xml
sax
SAXException
import
org
xml
sax
helpers
DefaultHandler
import
fr
jayasoft
ivy
ConflictManager
import
fr
jayasoft
ivy
Ivy
import
fr
jayasoft
ivy
LatestStrategy
import
fr
jayasoft
ivy
ModuleId
import
fr
jayasoft
ivy
circular
CircularDependencyStrategy
import
fr
jayasoft
ivy
matcher
PatternMatcher
import
fr
jayasoft
ivy
status
StatusManager
import
fr
jayasoft
ivy
url
URLHandlerRegistry
import
fr
jayasoft
ivy
util
Configurator
import
fr
jayasoft
ivy
util
Message
public
class
XmlIvyConfigurationParser
extends
DefaultHandler
private
Configurator
_configurator
private
List
_configuratorTags
Arrays
asList
new
String
private
Ivy
_ivy
private
String
_defaultResolver
private
String
_defaultCM
private
String
_defaultLatest
private
String
_defaultCircular
private
String
_currentConfiguratorTag
public
XmlIvyConfigurationParser
Ivy
ivy
_ivy
ivy
public
void
parse
URL
configuration
throws
ParseException
IOException
_configurator
new
Configurator
Map
typeDefs
_ivy
getTypeDefs
for
Iterator
iter
typeDefs
keySet
iterator
iter
hasNext
String
name
String
iter
next
_configurator
typeDef
name
Class
typeDefs
get
name
doParse
configuration
private
void
doParse
URL
configuration
throws
IOException
ParseException
InputStream
stream
try
stream
URLHandlerRegistry
getDefault
openStream
configuration
SAXParserFactory
newInstance
newSAXParser
parse
stream
this
catch
IOException
e
throw
e
catch
Exception
e
ParseException
pe
new
ParseException
configuration
e
getMessage
pe
initCause
e
throw
pe
finally
if
stream
try
stream
close
catch
IOException
e
private
void
parse
Configurator
configurator
URL
configuration
throws
IOException
ParseException
_configurator
configurator
doParse
configuration
public
void
startElement
String
uri
String
localName
String
qName
Attributes
att
throws
SAXException
Map
attributes
new
HashMap
for
int
i
i
att
getLength
i
attributes
put
att
getQName
i
att
getValue
i
try
if
_configurator
getCurrent
if
equals
_currentConfiguratorTag
_configurator
getTypeDef
qName
String
name
String
attributes
get
if
name
attributes
put
else
if
_configurator
isTopLevelMacroRecord
name
indexOf
attributes
put
name
else
attributes
put
name
if
attributes
get
if
attributes
size
throw
new
IllegalArgumentException
attributes
size
qName
String
name
String
attributes
get
Object
child
if
equals
_currentConfiguratorTag
child
_ivy
getResolver
name
if
child
throw
new
IllegalArgumentException
name
else
if
equals
_currentConfiguratorTag
child
_ivy
getLatestStrategy
name
if
child
throw
new
IllegalArgumentException
name
else
if
equals
_currentConfiguratorTag
child
_ivy
getConflictManager
name
if
child
throw
new
IllegalArgumentException
name
if
child
throw
new
IllegalArgumentException
name
_configurator
addChild
qName
child
else
_configurator
startCreateChild
qName
for
Iterator
iter
attributes
keySet
iterator
iter
hasNext
String
attName
String
iter
next
_configurator
setAttribute
attName
_ivy
substitute
String
attributes
get
attName
else
if
equals
qName
String
urlStr
_ivy
substitute
String
attributes
get
URL
url
if
urlStr
String
file
_ivy
substitute
String
attributes
get
if
file
throw
new
IllegalArgumentException
else
url
new
File
file
toURL
else
url
new
URL
urlStr
_ivy
addClasspathURL
url
else
if
equals
qName
String
name
_ivy
substitute
String
attributes
get
String
className
_ivy
substitute
String
attributes
get
Class
clazz
_ivy
typeDef
name
className
_configurator
typeDef
name
clazz
else
if
equals
qName
String
name
_ivy
substitute
String
attributes
get
String
value
_ivy
substitute
String
attributes
get
String
override
_ivy
substitute
String
attributes
get
if
name
throw
new
IllegalArgumentException
if
value
throw
new
IllegalArgumentException
_ivy
setVariable
name
value
override
Boolean
valueOf
override
booleanValue
else
if
equals
qName
String
propFilePath
_ivy
substitute
String
attributes
get
String
override
_ivy
substitute
String
attributes
get
try
Message
verbose
propFilePath
_ivy
loadProperties
new
File
propFilePath
override
Boolean
valueOf
override
booleanValue
catch
Exception
fileEx
Message
verbose
propFilePath
try
_ivy
loadProperties
new
URL
propFilePath
override
Boolean
valueOf
override
booleanValue
catch
Exception
urlEx
throw
new
IllegalArgumentException
propFilePath
fileEx
urlEx
else
if
equals
qName
Map
variables
new
HashMap
_ivy
getVariables
try
String
propFilePath
_ivy
substitute
String
attributes
get
URL
ivyconfURL
if
propFilePath
propFilePath
_ivy
substitute
String
attributes
get
if
propFilePath
Message
error
return
else
Message
verbose
propFilePath
ivyconfURL
new
URL
propFilePath
_ivy
setConfigurationVariables
ivyconfURL
else
File
incFile
new
File
propFilePath
if
incFile
exists
Message
error
incFile
return
else
Message
verbose
propFilePath
_ivy
setConfigurationVariables
incFile
ivyconfURL
incFile
toURL
new
XmlIvyConfigurationParser
_ivy
parse
_configurator
ivyconfURL
finally
_ivy
setVariables
variables
else
if
equals
qName
String
cache
String
attributes
get
if
cache
_ivy
setDefaultCache
new
File
_ivy
substitute
cache
String
defaultBranch
String
attributes
get
if
defaultBranch
_ivy
setDefaultBranch
_ivy
substitute
defaultBranch
String
validate
String
attributes
get
if
validate
_ivy
setValidate
Boolean
valueOf
_ivy
substitute
validate
booleanValue
String
up2d
String
attributes
get
if
up2d
_ivy
setCheckUpToDate
Boolean
valueOf
_ivy
substitute
up2d
booleanValue
String
cacheIvyPattern
String
attributes
get
if
cacheIvyPattern
_ivy
setCacheIvyPattern
_ivy
substitute
cacheIvyPattern
String
cacheArtPattern
String
attributes
get
if
cacheArtPattern
_ivy
setCacheArtifactPattern
_ivy
substitute
cacheArtPattern
String
useRemoteConfig
String
attributes
get
if
useRemoteConfig
_ivy
setUseRemoteConfig
Boolean
valueOf
_ivy
substitute
useRemoteConfig
booleanValue
_defaultResolver
String
attributes
get
_defaultCM
String
attributes
get
_defaultLatest
String
attributes
get
_defaultCircular
String
attributes
get
else
if
equals
qName
_currentConfiguratorTag
qName
_configurator
setRoot
_ivy
if
equals
_ivy
substitute
String
attributes
get
_ivy
configureDefaultVersionMatcher
else
if
equals
qName
_currentConfiguratorTag
qName
StatusManager
m
new
StatusManager
String
defaultStatus
_ivy
substitute
String
attributes
get
if
defaultStatus
m
setDefaultStatus
defaultStatus
_ivy
setStatusManager
m
_configurator
setRoot
m
else
if
_configuratorTags
contains
qName
_currentConfiguratorTag
qName
_configurator
setRoot
_ivy
else
if
equals
qName
_currentConfiguratorTag
qName
Configurator
MacroDef
macrodef
_configurator
startMacroDef
String
attributes
get
macrodef
addAttribute
else
if
equals
qName
String
organisation
_ivy
substitute
String
attributes
get
String
module
_ivy
substitute
String
attributes
get
String
resolver
_ivy
substitute
String
attributes
get
String
branch
_ivy
substitute
String
attributes
get
String
cm
_ivy
substitute
String
attributes
get
String
matcher
_ivy
substitute
String
attributes
get
matcher
matcher
PatternMatcher
EXACT_OR_REGEXP
matcher
_ivy
addModuleConfiguration
new
ModuleId
organisation
module
_ivy
getMatcher
matcher
resolver
branch
cm
catch
Exception
ex
throw
new
SAXException
ex
getMessage
ex
public
void
endElement
String
uri
String
localName
String
qName
throws
SAXException
if
_configurator
getCurrent
if
_configuratorTags
contains
qName
_configurator
getDepth
_configurator
clear
_currentConfiguratorTag
else
if
equals
qName
_configurator
getDepth
_configurator
endMacroDef
_currentConfiguratorTag
else
_configurator
endCreateChild
public
void
endDocument
throws
SAXException
if
_defaultResolver
_ivy
setDefaultResolver
_ivy
substitute
_defaultResolver
if
_defaultCM
ConflictManager
conflictManager
_ivy
getConflictManager
_ivy
substitute
_defaultCM
if
conflictManager
throw
new
IllegalArgumentException
_ivy
substitute
_defaultCM
_ivy
setDefaultConflictManager
conflictManager
if
_defaultLatest
LatestStrategy
latestStrategy
_ivy
getLatestStrategy
_ivy
substitute
_defaultLatest
if
latestStrategy
throw
new
IllegalArgumentException
_ivy
substitute
_defaultLatest
_ivy
setDefaultLatestStrategy
latestStrategy
if
_defaultCircular
CircularDependencyStrategy
strategy
_ivy
getCircularDependencyStrategy
_ivy
substitute
_defaultCircular
if
strategy
throw
new
IllegalArgumentException
_ivy
substitute
_defaultCircular
_ivy
setCircularDependencyStrategy
strategy
