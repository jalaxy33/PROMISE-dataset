package
fr
jayasoft
ivy
xml
import
java
io
File
import
java
io
FileOutputStream
import
java
io
IOException
import
java
io
PrintWriter
import
java
util
Arrays
import
java
util
Collection
import
java
util
HashSet
import
fr
jayasoft
ivy
Artifact
import
fr
jayasoft
ivy
Configuration
import
fr
jayasoft
ivy
DefaultModuleDescriptor
import
fr
jayasoft
ivy
DependencyArtifactDescriptor
import
fr
jayasoft
ivy
DependencyDescriptor
import
fr
jayasoft
ivy
Ivy
import
fr
jayasoft
ivy
ModuleDescriptor
public
class
XmlModuleDescriptorWriter
public
static
void
write
ModuleDescriptor
md
File
output
throws
IOException
if
output
getParentFile
output
getParentFile
mkdirs
PrintWriter
out
new
PrintWriter
new
FileOutputStream
output
try
out
println
out
println
md
getModuleRevisionId
getOrganisation
out
println
md
getModuleRevisionId
getName
String
branch
md
getResolvedModuleRevisionId
getBranch
if
branch
out
println
branch
String
revision
md
getResolvedModuleRevisionId
getRevision
if
revision
out
println
revision
out
println
md
getStatus
out
println
Ivy
DATE_FORMAT
format
md
getResolvedPublicationDate
if
md
isDefault
out
println
if
md
instanceof
DefaultModuleDescriptor
DefaultModuleDescriptor
dmd
DefaultModuleDescriptor
md
if
dmd
getNamespace
dmd
getNamespace
getName
equals
out
println
dmd
getNamespace
getName
out
println
Configuration
confs
md
getConfigurations
if
confs
length
out
println
for
int
i
i
confs
length
i
out
print
out
print
confs
i
getName
out
print
confs
i
getVisibility
if
confs
i
getDescription
out
print
confs
i
getDescription
String
exts
confs
i
getExtends
if
exts
length
out
print
for
int
j
j
exts
length
j
out
print
exts
j
if
j
exts
length
out
print
out
print
out
println
out
println
out
println
Artifact
artifacts
md
getAllArtifacts
for
int
i
i
artifacts
length
i
out
print
out
print
artifacts
i
getName
out
print
artifacts
i
getType
out
print
artifacts
i
getExt
out
print
getConfs
md
artifacts
i
out
println
out
println
DependencyDescriptor
dds
md
getDependencies
if
dds
length
out
println
for
int
i
i
dds
length
i
out
print
out
print
dds
i
getDependencyRevisionId
getOrganisation
out
print
dds
i
getDependencyRevisionId
getName
out
print
dds
i
getDependencyRevisionId
getRevision
if
dds
i
isForce
out
print
dds
i
isForce
if
dds
i
isChanging
out
print
dds
i
isChanging
if
dds
i
isTransitive
out
print
dds
i
isTransitive
out
print
String
modConfs
dds
i
getModuleConfigurations
for
int
j
j
modConfs
length
j
String
depConfs
dds
i
getDependencyConfigurations
modConfs
j
out
print
modConfs
j
for
int
k
k
depConfs
length
k
out
print
depConfs
k
if
k
depConfs
length
out
print
if
j
modConfs
length
out
print
out
print
DependencyArtifactDescriptor
includes
dds
i
getAllDependencyArtifactsIncludes
if
includes
length
out
println
for
int
j
j
includes
length
j
out
print
out
print
includes
j
getName
out
print
includes
j
getType
out
print
includes
j
getExt
String
dadconfs
includes
j
getConfigurations
if
Arrays
asList
dadconfs
equals
Arrays
asList
md
getConfigurationsNames
out
print
for
int
k
k
dadconfs
length
k
out
print
dadconfs
k
if
k
dadconfs
length
out
print
out
print
out
println
DependencyArtifactDescriptor
excludes
dds
i
getAllDependencyArtifactsExcludes
if
excludes
length
if
includes
length
out
println
for
int
j
j
excludes
length
j
out
print
out
print
excludes
j
getId
getModuleId
getOrganisation
out
print
excludes
j
getId
getModuleId
getName
out
print
excludes
j
getName
out
print
excludes
j
getType
out
print
excludes
j
getExt
String
dadconfs
excludes
j
getConfigurations
if
Arrays
asList
dadconfs
equals
Arrays
asList
md
getConfigurationsNames
out
print
for
int
k
k
dadconfs
length
k
out
print
dadconfs
k
if
k
dadconfs
length
out
print
out
print
out
println
if
includes
length
excludes
length
out
println
else
out
println
out
println
out
println
finally
out
close
private
static
String
getConfs
ModuleDescriptor
md
Artifact
artifact
StringBuffer
ret
new
StringBuffer
String
confs
md
getConfigurationsNames
for
int
i
i
confs
length
i
if
Arrays
asList
md
getArtifacts
confs
i
contains
artifact
ret
append
confs
i
append
if
ret
length
ret
setLength
ret
length
return
ret
toString
