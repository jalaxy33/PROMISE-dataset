package
fr
jayasoft
ivy
latest
import
java
util
Comparator
import
java
util
HashMap
import
java
util
Map
import
fr
jayasoft
ivy
ArtifactInfo
public
class
LatestRevisionStrategy
extends
ComparatorLatestStrategy
public
static
class
SpecialMeaning
private
String
_name
private
Integer
_value
public
String
getName
return
_name
public
void
setName
String
name
_name
name
public
Integer
getValue
return
_value
public
void
setValue
Integer
value
_value
value
public
void
validate
if
_name
throw
new
IllegalStateException
if
_value
throw
new
IllegalStateException
private
static
final
Map
DEFAULT_SPECIAL_MEANINGS
static
DEFAULT_SPECIAL_MEANINGS
new
HashMap
DEFAULT_SPECIAL_MEANINGS
put
new
Integer
DEFAULT_SPECIAL_MEANINGS
put
new
Integer
DEFAULT_SPECIAL_MEANINGS
put
new
Integer
public
Comparator
COMPARATOR
new
Comparator
public
int
compare
Object
o1
Object
o2
String
rev1
ArtifactInfo
o1
getRevision
String
rev2
ArtifactInfo
o2
getRevision
if
rev1
startsWith
return
if
rev1
endsWith
rev2
startsWith
rev1
substring
rev1
length
return
if
rev2
startsWith
return
if
rev2
endsWith
rev1
startsWith
rev2
substring
rev2
length
return
rev1
rev1
replaceAll
rev1
rev1
replaceAll
rev2
rev2
replaceAll
rev2
rev2
replaceAll
String
parts1
rev1
split
String
parts2
rev2
split
int
i
for
i
parts1
length
i
parts2
length
i
if
parts1
i
equals
parts2
i
continue
boolean
is1Number
isNumber
parts1
i
boolean
is2Number
isNumber
parts2
i
if
is1Number
is2Number
return
if
is2Number
is1Number
return
if
is1Number
is2Number
return
Long
valueOf
parts1
i
compareTo
Long
valueOf
parts2
i
Map
specialMeanings
getSpecialMeanings
Integer
sm1
Integer
specialMeanings
get
parts1
i
toLowerCase
Integer
sm2
Integer
specialMeanings
get
parts2
i
toLowerCase
if
sm1
sm2
sm2
new
Integer
sm2
return
sm1
compareTo
sm2
if
sm2
return
new
Integer
compareTo
sm2
return
parts1
i
compareTo
parts2
i
if
i
parts1
length
return
isNumber
parts1
i
if
i
parts2
length
return
isNumber
parts2
i
return
private
boolean
isNumber
String
str
return
str
matches
private
Map
_specialMeanings
private
boolean
_usedefaultspecialmeanings
public
LatestRevisionStrategy
setComparator
COMPARATOR
setName
public
void
addConfiguredSpecialMeaning
SpecialMeaning
meaning
meaning
validate
getSpecialMeanings
put
meaning
getName
toLowerCase
meaning
getValue
public
synchronized
Map
getSpecialMeanings
if
_specialMeanings
_specialMeanings
new
HashMap
if
isUsedefaultspecialmeanings
_specialMeanings
putAll
DEFAULT_SPECIAL_MEANINGS
return
_specialMeanings
public
boolean
isUsedefaultspecialmeanings
return
_usedefaultspecialmeanings
public
void
setUsedefaultspecialmeanings
boolean
usedefaultspecialmeanings
_usedefaultspecialmeanings
usedefaultspecialmeanings
