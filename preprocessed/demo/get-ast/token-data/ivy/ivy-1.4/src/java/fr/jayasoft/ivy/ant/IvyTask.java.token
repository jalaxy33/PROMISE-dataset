package
fr
jayasoft
ivy
ant
import
java
text
DateFormat
import
java
text
SimpleDateFormat
import
java
util
Arrays
import
java
util
Date
import
java
util
HashMap
import
java
util
HashSet
import
java
util
Map
import
org
apache
tools
ant
BuildException
import
org
apache
tools
ant
Project
import
org
apache
tools
ant
Task
import
fr
jayasoft
ivy
Ivy
import
fr
jayasoft
ivy
IvyContext
import
fr
jayasoft
ivy
ModuleDescriptor
import
fr
jayasoft
ivy
report
ResolveReport
import
fr
jayasoft
ivy
util
Message
import
fr
jayasoft
ivy
util
StringUtils
public
class
IvyTask
extends
Task
public
static
final
String
ANT_PROJECT_CONTEXT_KEY
private
Boolean
_validate
protected
boolean
doValidate
Ivy
ivy
if
_validate
return
_validate
booleanValue
return
ivy
doValidate
public
boolean
isValidate
return
_validate
_validate
booleanValue
public
void
setValidate
boolean
validate
_validate
Boolean
valueOf
validate
protected
Ivy
getIvyInstance
ensureMessageInitialised
Object
ref
getProject
getReference
if
ref
ref
instanceof
Map
throw
new
BuildException
ref
ref
getClass
ref
getClass
getClassLoader
Map
instances
Map
ref
if
instances
instances
containsKey
Ivy
class
Message
verbose
IvyConfigure
configure
new
IvyConfigure
configure
setProject
getProject
configure
execute
instances
Map
getProject
getReference
if
instances
instances
containsKey
Ivy
class
throw
new
BuildException
return
Ivy
instances
get
Ivy
class
protected
void
ensureMessageInitialised
if
Message
isInitialised
Message
init
new
AntMessageImpl
this
protected
void
setIvyInstance
Ivy
ivy
getProject
addReference
ivy
if
ivy
Message
debug
getProject
ivy
ivy
getClass
getName
ivy
getClass
getClassLoader
Map
instances
Map
getProject
getReference
if
instances
instances
new
HashMap
getProject
addReference
instances
instances
put
ivy
getClass
ivy
protected
void
setResolved
ResolveReport
report
boolean
keep
ModuleDescriptor
md
report
getModuleDescriptor
String
confs
report
getConfigurations
if
keep
getProject
addReference
report
getProject
addReference
confs
getProject
addReference
md
String
suffix
md
getModuleRevisionId
getModuleId
getOrganisation
md
getModuleRevisionId
getModuleId
getName
getProject
addReference
suffix
report
getProject
addReference
suffix
md
getProject
addReference
suffix
confs
protected
void
ensureResolved
boolean
haltOnFailure
boolean
useOrigin
String
org
String
module
ensureResolved
haltOnFailure
useOrigin
org
module
protected
void
ensureResolved
boolean
haltOnFailure
boolean
useOrigin
boolean
transitive
String
org
String
module
String
conf
ensureMessageInitialised
String
confs
getConfsToResolve
org
module
conf
if
confs
length
IvyResolve
resolve
createResolve
haltOnFailure
useOrigin
resolve
setTransitive
transitive
resolve
setConf
StringUtils
join
confs
resolve
execute
protected
String
getConfsToResolve
String
org
String
module
String
conf
boolean
strict
ModuleDescriptor
reference
ModuleDescriptor
getResolvedDescriptor
org
module
strict
Message
debug
if
reference
Message
debug
if
conf
return
new
String
else
return
splitConfs
conf
else
if
conf
String
rconfs
getResolvedConfigurations
org
module
strict
String
confs
if
equals
conf
confs
reference
getConfigurationsNames
else
confs
splitConfs
conf
HashSet
rconfsSet
new
HashSet
Arrays
asList
rconfs
HashSet
confsSet
new
HashSet
Arrays
asList
confs
Message
debug
rconfsSet
Message
debug
confsSet
confsSet
removeAll
rconfsSet
Message
debug
confsSet
return
String
confsSet
toArray
new
String
confsSet
size
else
Message
debug
return
new
String
protected
String
getResolvedConfigurations
String
org
String
module
boolean
strict
return
String
getReference
org
module
strict
protected
Object
getResolvedDescriptor
String
org
String
module
return
getResolvedDescriptor
org
module
protected
Object
getResolvedDescriptor
String
org
String
module
boolean
strict
return
getReference
org
module
strict
private
Object
getReference
String
prefix
String
org
String
module
boolean
strict
Object
reference
if
org
module
reference
getProject
getReference
prefix
org
module
if
strict
reference
reference
getProject
getReference
prefix
return
reference
protected
ResolveReport
getResolvedReport
String
org
String
module
return
getResolvedReport
org
module
protected
ResolveReport
getResolvedReport
String
org
String
module
boolean
strict
return
ResolveReport
getReference
org
module
strict
protected
IvyResolve
createResolve
boolean
haltOnFailure
boolean
useOrigin
Message
verbose
IvyResolve
resolve
new
IvyResolve
resolve
setProject
getProject
resolve
setHaltonfailure
haltOnFailure
resolve
setUseOrigin
useOrigin
if
_validate
resolve
setValidate
_validate
booleanValue
return
resolve
protected
boolean
shouldResolve
String
org
String
module
ensureMessageInitialised
if
org
module
return
Object
reference
getResolvedDescriptor
org
module
return
reference
protected
String
splitConfs
String
conf
String
confs
conf
split
for
int
i
i
confs
length
i
confs
i
confs
i
trim
return
confs
protected
String
mergeConfs
String
conf
return
StringUtils
join
conf
private
static
final
DateFormat
DATE_FORMAT
new
SimpleDateFormat
protected
Date
getPubDate
String
date
Date
def
if
date
if
equalsIgnoreCase
date
return
new
Date
try
return
DATE_FORMAT
parse
date
catch
Exception
ex
throw
new
BuildException
date
else
return
def
protected
String
getProperty
String
value
Ivy
ivy
String
name
if
value
return
getProperty
ivy
name
else
value
ivy
substitute
value
Message
debug
name
value
return
value
protected
String
getProperty
Ivy
ivy
String
name
String
val
ivy
getVariable
name
if
val
val
ivy
substitute
getProject
getProperty
name
if
val
Message
debug
name
val
else
Message
debug
name
else
val
ivy
substitute
val
Message
debug
name
val
return
val
public
void
setProject
Project
project
super
setProject
project
IvyContext
getContext
set
ANT_PROJECT_CONTEXT_KEY
project
