package
fr
jayasoft
ivy
parser
import
java
io
IOException
import
java
net
URL
import
java
text
ParseException
import
java
util
ArrayList
import
java
util
Date
import
java
util
HashSet
import
java
util
List
import
java
util
Set
import
org
xml
sax
SAXException
import
org
xml
sax
SAXParseException
import
org
xml
sax
helpers
DefaultHandler
import
fr
jayasoft
ivy
Configuration
import
fr
jayasoft
ivy
DefaultDependencyDescriptor
import
fr
jayasoft
ivy
DefaultModuleDescriptor
import
fr
jayasoft
ivy
DependencyDescriptor
import
fr
jayasoft
ivy
Ivy
import
fr
jayasoft
ivy
ModuleDescriptor
import
fr
jayasoft
ivy
ModuleRevisionId
import
fr
jayasoft
ivy
repository
Resource
import
fr
jayasoft
ivy
repository
url
URLResource
import
fr
jayasoft
ivy
util
Message
public
abstract
class
AbstractModuleDescriptorParser
implements
ModuleDescriptorParser
public
ModuleDescriptor
parseDescriptor
Ivy
ivy
URL
descriptorURL
boolean
validate
throws
ParseException
IOException
return
parseDescriptor
ivy
descriptorURL
new
URLResource
descriptorURL
validate
protected
abstract
static
class
AbstractParser
extends
DefaultHandler
private
static
final
String
DEFAULT_CONF_MAPPING
private
String
_defaultConf
private
String
_defaultConfMapping
private
DefaultDependencyDescriptor
_defaultConfMappingDescriptor
private
Resource
_res
private
List
_errors
new
ArrayList
protected
DefaultModuleDescriptor
_md
private
ModuleDescriptorParser
_parser
protected
AbstractParser
ModuleDescriptorParser
parser
_parser
parser
public
ModuleDescriptorParser
getModuleDescriptorParser
return
_parser
protected
void
checkErrors
throws
ParseException
if
_errors
isEmpty
throw
new
ParseException
_errors
toString
protected
void
setResource
Resource
res
_res
res
_md
new
DefaultModuleDescriptor
_parser
res
_md
setLastModified
getLastModified
protected
Resource
getResource
return
_res
protected
String
getDefaultConfMapping
return
_defaultConfMapping
protected
void
setDefaultConfMapping
String
defaultConf
_defaultConfMapping
defaultConf
protected
void
parseDepsConfs
String
confs
DefaultDependencyDescriptor
dd
parseDepsConfs
confs
dd
_defaultConfMapping
protected
void
parseDepsConfs
String
confs
DefaultDependencyDescriptor
dd
boolean
useDefaultMappingToGuessRightOperande
parseDepsConfs
confs
dd
useDefaultMappingToGuessRightOperande
protected
void
parseDepsConfs
String
confs
DefaultDependencyDescriptor
dd
boolean
useDefaultMappingToGuessRightOperande
boolean
evaluateConditions
if
confs
return
String
conf
confs
split
parseDepsConfs
conf
dd
useDefaultMappingToGuessRightOperande
evaluateConditions
protected
void
parseDepsConfs
String
conf
DefaultDependencyDescriptor
dd
boolean
useDefaultMappingToGuessRightOperande
parseDepsConfs
conf
dd
useDefaultMappingToGuessRightOperande
protected
void
parseDepsConfs
String
conf
DefaultDependencyDescriptor
dd
boolean
useDefaultMappingToGuessRightOperande
boolean
evaluateConditions
replaceConfigurationWildcards
_md
for
int
i
i
conf
length
i
String
ops
conf
i
split
if
ops
length
String
modConfs
ops
split
if
useDefaultMappingToGuessRightOperande
for
int
j
j
modConfs
length
j
dd
addDependencyConfiguration
modConfs
j
trim
modConfs
j
trim
else
for
int
j
j
modConfs
length
j
String
depConfs
getDefaultConfMappingDescriptor
getDependencyConfigurations
modConfs
j
if
depConfs
length
for
int
k
k
depConfs
length
k
String
mappedDependency
evaluateConditions
evaluateCondition
depConfs
k
trim
dd
depConfs
k
trim
if
mappedDependency
dd
addDependencyConfiguration
modConfs
j
trim
mappedDependency
else
dd
addDependencyConfiguration
modConfs
j
trim
modConfs
j
trim
else
if
ops
length
String
modConfs
ops
split
String
depConfs
ops
split
for
int
j
j
modConfs
length
j
for
int
k
k
depConfs
length
k
String
mappedDependency
evaluateConditions
evaluateCondition
depConfs
k
trim
dd
depConfs
k
trim
if
mappedDependency
dd
addDependencyConfiguration
modConfs
j
trim
mappedDependency
else
addError
conf
i
dd
getDependencyRevisionId
if
_md
isMappingOverride
addExtendingConfigurations
conf
dd
useDefaultMappingToGuessRightOperande
private
String
evaluateCondition
String
conf
DefaultDependencyDescriptor
dd
if
conf
charAt
return
conf
int
endConditionIndex
conf
indexOf
if
endConditionIndex
addError
conf
dd
getDependencyRevisionId
return
String
condition
conf
substring
endConditionIndex
int
notEqualIndex
condition
indexOf
if
notEqualIndex
int
equalIndex
condition
indexOf
if
equalIndex
addError
conf
dd
getDependencyRevisionId
return
String
leftOp
condition
substring
equalIndex
trim
String
rightOp
condition
substring
equalIndex
trim
if
leftOp
equals
leftOp
equals
leftOp
String
attrValue
dd
getAttribute
leftOp
if
rightOp
equals
attrValue
return
else
String
leftOp
condition
substring
notEqualIndex
trim
String
rightOp
condition
substring
notEqualIndex
trim
if
leftOp
equals
leftOp
equals
leftOp
String
attrValue
dd
getAttribute
leftOp
if
rightOp
equals
attrValue
return
return
conf
substring
endConditionIndex
private
void
addExtendingConfigurations
String
confs
DefaultDependencyDescriptor
dd
boolean
useDefaultMappingToGuessRightOperande
for
int
i
i
confs
length
i
addExtendingConfigurations
confs
i
dd
useDefaultMappingToGuessRightOperande
private
void
addExtendingConfigurations
String
conf
DefaultDependencyDescriptor
dd
boolean
useDefaultMappingToGuessRightOperande
Set
configsToAdd
new
HashSet
Configuration
configs
_md
getConfigurations
for
int
i
i
configs
length
i
String
ext
configs
i
getExtends
for
int
j
j
ext
length
j
if
conf
equals
ext
j
String
configName
configs
i
getName
configsToAdd
add
configName
addExtendingConfigurations
configName
dd
useDefaultMappingToGuessRightOperande
String
confs
String
configsToAdd
toArray
new
String
configsToAdd
size
parseDepsConfs
confs
dd
useDefaultMappingToGuessRightOperande
protected
DependencyDescriptor
getDefaultConfMappingDescriptor
if
_defaultConfMappingDescriptor
_defaultConfMappingDescriptor
new
DefaultDependencyDescriptor
ModuleRevisionId
newInstance
parseDepsConfs
_defaultConfMapping
_defaultConfMappingDescriptor
return
_defaultConfMappingDescriptor
protected
void
addError
String
msg
if
_res
_errors
add
msg
_res
else
_errors
add
msg
public
void
warning
SAXParseException
ex
Message
warn
getLocationString
ex
ex
getMessage
public
void
error
SAXParseException
ex
addError
getLocationString
ex
ex
getMessage
public
void
fatalError
SAXParseException
ex
throws
SAXException
addError
getLocationString
ex
ex
getMessage
private
String
getLocationString
SAXParseException
ex
StringBuffer
str
new
StringBuffer
String
systemId
ex
getSystemId
if
systemId
int
index
systemId
lastIndexOf
if
index
systemId
systemId
substring
index
str
append
systemId
else
if
getResource
str
append
getResource
toString
str
append
str
append
ex
getLineNumber
str
append
str
append
ex
getColumnNumber
return
str
toString
protected
String
getDefaultConf
return
_defaultConfMapping
_defaultConfMapping
_defaultConf
_defaultConf
DEFAULT_CONF_MAPPING
protected
void
setDefaultConf
String
defaultConf
_defaultConf
defaultConf
public
ModuleDescriptor
getModuleDescriptor
throws
ParseException
checkErrors
return
_md
protected
Date
getDefaultPubDate
return
new
Date
_md
getLastModified
protected
long
getLastModified
long
last
getResource
getLastModified
if
last
return
last
else
Message
debug
getResource
return
System
currentTimeMillis
private
void
replaceConfigurationWildcards
ModuleDescriptor
md
Configuration
configs
md
getConfigurations
for
int
i
i
configs
length
i
configs
i
replaceWildcards
md
