package
fr
jayasoft
ivy
repository
vsftp
import
java
io
File
import
java
io
IOException
import
java
io
InputStreamReader
import
java
io
PrintWriter
import
java
io
Reader
import
java
text
SimpleDateFormat
import
java
util
ArrayList
import
java
util
List
import
java
util
Locale
import
java
util
regex
Pattern
import
fr
jayasoft
ivy
Ivy
import
fr
jayasoft
ivy
IvyContext
import
fr
jayasoft
ivy
event
IvyEvent
import
fr
jayasoft
ivy
event
IvyListener
import
fr
jayasoft
ivy
event
resolve
EndResolveEvent
import
fr
jayasoft
ivy
repository
AbstractRepository
import
fr
jayasoft
ivy
repository
BasicResource
import
fr
jayasoft
ivy
repository
Resource
import
fr
jayasoft
ivy
repository
TransferEvent
import
fr
jayasoft
ivy
util
IvyThread
import
fr
jayasoft
ivy
util
Message
public
class
VsftpRepository
extends
AbstractRepository
private
static
final
String
PROMPT
private
static
final
SimpleDateFormat
FORMAT
new
SimpleDateFormat
Locale
US
private
String
_host
private
String
_username
private
String
_authentication
private
Reader
_in
private
Reader
_err
private
PrintWriter
_out
private
volatile
StringBuffer
_errors
new
StringBuffer
private
long
_readTimeout
private
long
_reuseConnection
private
volatile
long
_lastCommand
private
volatile
boolean
_inCommand
private
Process
_process
private
Thread
_connectionCleaner
private
Thread
_errorsReader
private
volatile
long
_errorsLastUpdateTime
private
Ivy
_ivy
public
Resource
getResource
String
source
throws
IOException
initIvy
return
new
VsftpResource
this
source
private
void
initIvy
_ivy
IvyContext
getContext
getIvy
protected
Resource
getInitResource
String
source
throws
IOException
try
return
lslToResource
source
sendCommand
source
catch
IOException
ex
cleanup
ex
throw
ex
finally
cleanup
public
void
get
final
String
source
File
destination
throws
IOException
initIvy
try
fireTransferInitiated
getResource
source
TransferEvent
REQUEST_GET
File
destDir
destination
getParentFile
if
destDir
sendCommand
destDir
getAbsolutePath
if
destination
exists
destination
delete
int
index
source
lastIndexOf
String
srcName
index
source
source
substring
index
final
File
to
destDir
new
File
srcName
new
File
destDir
srcName
final
IOException
ex
new
IOException
Thread
get
new
IvyThread
public
void
run
initContext
try
sendCommand
source
getExpectedDownloadMessage
source
to
catch
IOException
e
ex
e
get
start
long
prevLength
long
lastUpdate
System
currentTimeMillis
long
timeout
_readTimeout
while
get
isAlive
checkInterrupted
long
length
to
exists
to
length
if
length
prevLength
fireTransferProgress
length
prevLength
lastUpdate
System
currentTimeMillis
prevLength
length
else
if
System
currentTimeMillis
lastUpdate
timeout
Message
verbose
timeout
get
interrupt
if
to
exists
to
delete
throw
new
IOException
source
getHost
try
get
join
catch
InterruptedException
e
if
to
exists
to
delete
return
if
ex
if
to
exists
to
delete
throw
ex
to
renameTo
destination
fireTransferCompleted
destination
length
catch
IOException
ex
fireTransferError
ex
cleanup
ex
throw
ex
finally
cleanup
public
List
list
String
parent
throws
IOException
initIvy
try
if
parent
endsWith
parent
parent
String
response
sendCommand
parent
if
response
startsWith
return
String
lines
response
split
List
ret
new
ArrayList
lines
length
for
int
i
i
lines
length
i
while
lines
i
endsWith
lines
i
endsWith
lines
i
lines
i
substring
lines
i
length
if
lines
i
trim
length
ret
add
parent
lines
i
substring
lines
i
lastIndexOf
return
ret
catch
IOException
ex
cleanup
ex
throw
ex
finally
cleanup
public
void
put
File
source
String
destination
boolean
overwrite
throws
IOException
initIvy
try
if
getResource
destination
exists
if
overwrite
sendCommand
destination
getExpectedRemoveMessage
destination
else
return
int
index
destination
lastIndexOf
String
destDir
if
index
destDir
destination
substring
index
mkdirs
destDir
sendCommand
destDir
String
to
destDir
destDir
source
getName
source
getName
sendCommand
source
getAbsolutePath
getExpectedUploadMessage
source
to
sendCommand
to
destination
catch
IOException
ex
cleanup
ex
throw
ex
finally
cleanup
private
void
mkdirs
String
destDir
throws
IOException
if
dirExists
destDir
return
if
destDir
endsWith
destDir
destDir
substring
destDir
length
int
index
destDir
lastIndexOf
if
index
mkdirs
destDir
substring
index
sendCommand
destDir
private
boolean
dirExists
String
dir
throws
IOException
return
sendCommand
dir
startsWith
protected
String
sendCommand
String
command
throws
IOException
return
sendCommand
command
_readTimeout
protected
void
sendCommand
String
command
Pattern
expectedResponse
throws
IOException
sendCommand
command
expectedResponse
_readTimeout
protected
void
sendCommand
String
command
Pattern
expectedResponse
long
timeout
throws
IOException
String
response
sendCommand
command
timeout
if
expectedResponse
matcher
response
matches
Message
debug
Message
debug
expectedResponse
Message
debug
response
throw
new
IOException
response
protected
String
sendCommand
String
command
boolean
sendErrorAsResponse
throws
IOException
return
sendCommand
command
sendErrorAsResponse
_readTimeout
protected
String
sendCommand
String
command
boolean
sendErrorAsResponse
boolean
single
throws
IOException
return
sendCommand
command
sendErrorAsResponse
single
_readTimeout
protected
String
sendCommand
String
command
boolean
sendErrorAsResponse
long
timeout
throws
IOException
return
sendCommand
command
sendErrorAsResponse
timeout
protected
String
sendCommand
String
command
boolean
sendErrorAsResponse
boolean
single
long
timeout
throws
IOException
single
checkInterrupted
_inCommand
_errorsLastUpdateTime
synchronized
this
if
single
_in
ensureConnectionOpened
Message
debug
command
getHost
updateLastCommandTime
_out
println
command
_out
flush
else
sendSingleCommand
command
try
return
readResponse
sendErrorAsResponse
timeout
finally
_inCommand
if
single
closeConnection
protected
String
readResponse
boolean
sendErrorAsResponse
throws
IOException
return
readResponse
sendErrorAsResponse
_readTimeout
protected
synchronized
String
readResponse
final
boolean
sendErrorAsResponse
long
timeout
throws
IOException
final
StringBuffer
response
new
StringBuffer
final
IOException
exc
new
IOException
final
boolean
done
new
boolean
Runnable
r
new
Runnable
public
void
run
synchronized
VsftpRepository
this
try
int
c
boolean
getPrompt
for
int
attempts
getPrompt
attempts
attempts
while
c
_in
read
attempts
response
append
char
c
if
response
length
PROMPT
length
response
substring
response
length
PROMPT
length
response
length
equals
PROMPT
response
setLength
response
length
PROMPT
length
getPrompt
break
if
getPrompt
try
Thread
sleep
catch
InterruptedException
e
break
if
getPrompt
if
_errorsLastUpdateTime
_errorsLastUpdateTime
_lastCommand
while
System
currentTimeMillis
_errorsLastUpdateTime
try
Thread
sleep
catch
InterruptedException
e
break
if
_errors
length
if
sendErrorAsResponse
response
append
_errors
_errors
setLength
else
throw
new
IOException
chomp
_errors
toString
chomp
response
done
catch
IOException
e
exc
e
finally
VsftpRepository
this
notify
Thread
reader
if
timeout
r
run
else
reader
new
IvyThread
r
reader
start
try
wait
timeout
catch
InterruptedException
e
updateLastCommandTime
if
exc
throw
exc
else
if
done
if
reader
reader
isAlive
reader
interrupt
for
int
i
i
reader
isAlive
i
try
Thread
sleep
catch
InterruptedException
e
break
if
reader
isAlive
reader
stop
throw
new
IOException
getHost
else
if
equals
response
Message
info
getHost
closeConnection
throw
new
IOException
getHost
Message
debug
response
getHost
return
response
toString
private
synchronized
void
sendSingleCommand
String
command
throws
IOException
exec
getSingleCommand
command
protected
synchronized
void
ensureConnectionOpened
throws
IOException
if
_in
Message
verbose
getUsername
getHost
String
connectionCommand
getConnectionCommand
exec
connectionCommand
try
readResponse
if
_reuseConnection
_connectionCleaner
new
IvyThread
public
void
run
initContext
try
long
sleep
while
_in
sleep
sleep
sleep
sleep
_reuseConnection
System
currentTimeMillis
_lastCommand
if
_inCommand
sleep
sleep
_reuseConnection
sleep
catch
InterruptedException
e
disconnect
_connectionCleaner
start
if
_ivy
_ivy
addIvyListener
new
IvyListener
public
void
progress
IvyEvent
event
disconnect
event
getSource
removeIvyListener
this
EndResolveEvent
NAME
catch
IOException
ex
closeConnection
throw
new
IOException
getUsername
getHost
getAuthentication
ex
getMessage
Message
verbose
getHost
private
void
updateLastCommandTime
_lastCommand
System
currentTimeMillis
private
void
exec
String
command
throws
IOException
Message
debug
command
_process
Runtime
getRuntime
exec
command
_in
new
InputStreamReader
_process
getInputStream
_err
new
InputStreamReader
_process
getErrorStream
_out
new
PrintWriter
_process
getOutputStream
_errorsReader
new
IvyThread
public
void
run
initContext
int
c
try
while
_err
c
_err
read
_errors
append
char
c
_errorsLastUpdateTime
System
currentTimeMillis
catch
IOException
e
_errorsReader
start
private
void
checkInterrupted
if
_ivy
_ivy
checkInterrupted
private
void
cleanup
Exception
ex
if
ex
getMessage
equals
getHost
closeConnection
else
disconnect
private
void
cleanup
if
_reuseConnection
disconnect
public
synchronized
void
disconnect
if
_in
Message
verbose
getHost
try
sendCommand
catch
IOException
e
finally
closeConnection
Message
verbose
getHost
private
synchronized
void
closeConnection
if
_connectionCleaner
_connectionCleaner
interrupt
if
_errorsReader
_errorsReader
interrupt
try
_process
destroy
catch
Exception
ex
try
_in
close
catch
Exception
e
try
_err
close
catch
Exception
e
try
_out
close
catch
Exception
e
_connectionCleaner
_errorsReader
_process
_in
_out
_err
Message
debug
getHost
protected
Resource
lslToResource
String
file
String
responseLine
if
responseLine
responseLine
startsWith
return
new
BasicResource
file
else
String
parts
responseLine
split
if
parts
length
Message
debug
responseLine
return
new
BasicResource
file
else
try
long
contentLength
Long
parseLong
parts
String
date
parts
parts
parts
parts
return
new
BasicResource
file
contentLength
FORMAT
parse
date
getTime
catch
Exception
ex
Message
warn
responseLine
ex
return
new
BasicResource
file
protected
String
getSingleCommand
String
command
return
_authentication
_username
_host
command
protected
String
getConnectionCommand
return
_authentication
_username
_host
protected
Pattern
getExpectedDownloadMessage
String
source
File
to
return
Pattern
compile
to
getName
protected
Pattern
getExpectedRemoveMessage
String
destination
return
Pattern
compile
protected
Pattern
getExpectedUploadMessage
File
source
String
to
return
Pattern
compile
source
getName
public
String
getAuthentication
return
_authentication
public
void
setAuthentication
String
authentication
_authentication
authentication
public
String
getHost
return
_host
public
void
setHost
String
host
_host
host
public
String
getUsername
return
_username
public
void
setUsername
String
username
_username
username
private
static
StringBuffer
chomp
StringBuffer
str
if
str
str
length
return
str
while
equals
str
substring
str
length
equals
str
substring
str
length
str
setLength
str
length
return
str
public
String
toString
return
getName
getUsername
getHost
getAuthentication
public
void
setReuseConnection
long
time
_reuseConnection
time
public
long
getReadTimeout
return
_readTimeout
public
void
setReadTimeout
long
readTimeout
_readTimeout
readTimeout
