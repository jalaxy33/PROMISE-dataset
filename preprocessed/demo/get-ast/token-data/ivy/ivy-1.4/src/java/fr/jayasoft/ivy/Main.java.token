package
fr
jayasoft
ivy
import
java
io
File
import
java
io
FileOutputStream
import
java
io
PrintWriter
import
java
lang
reflect
InvocationTargetException
import
java
lang
reflect
Method
import
java
net
URL
import
java
net
URLClassLoader
import
java
util
ArrayList
import
java
util
Arrays
import
java
util
Collection
import
java
util
Iterator
import
java
util
LinkedHashSet
import
java
util
List
import
org
apache
commons
cli
CommandLine
import
org
apache
commons
cli
CommandLineParser
import
org
apache
commons
cli
GnuParser
import
org
apache
commons
cli
HelpFormatter
import
org
apache
commons
cli
Option
import
org
apache
commons
cli
OptionBuilder
import
org
apache
commons
cli
Options
import
org
apache
commons
cli
ParseException
import
fr
jayasoft
ivy
report
ResolveReport
import
fr
jayasoft
ivy
url
CredentialsStore
import
fr
jayasoft
ivy
url
URLHandler
import
fr
jayasoft
ivy
url
URLHandlerDispatcher
import
fr
jayasoft
ivy
url
URLHandlerRegistry
import
fr
jayasoft
ivy
util
DefaultMessageImpl
import
fr
jayasoft
ivy
util
Message
import
fr
jayasoft
ivy
xml
XmlModuleDescriptorWriter
import
fr
jayasoft
ivy
xml
XmlReportParser
public
class
Main
private
static
Options
getOptions
Option
conf
OptionBuilder
withArgName
hasArg
withDescription
create
Option
cache
OptionBuilder
withArgName
hasArg
withDescription
create
Option
ivyfile
OptionBuilder
withArgName
hasArg
withDescription
create
Option
dependency
OptionBuilder
withArgName
hasArgs
withDescription
create
Option
confs
OptionBuilder
withArgName
hasArgs
withDescription
create
Option
retrieve
OptionBuilder
withArgName
hasArg
withDescription
create
Option
cachepath
OptionBuilder
withArgName
hasArg
withDescription
create
Option
revision
OptionBuilder
withArgName
hasArg
withDescription
create
Option
status
OptionBuilder
withArgName
hasArg
withDescription
create
Option
deliver
OptionBuilder
withArgName
hasArg
withDescription
create
Option
publishResolver
OptionBuilder
withArgName
hasArg
withDescription
create
Option
publishPattern
OptionBuilder
withArgName
hasArg
withDescription
create
Option
realm
OptionBuilder
withArgName
hasArg
withDescription
create
Option
host
OptionBuilder
withArgName
hasArg
withDescription
create
Option
username
OptionBuilder
withArgName
hasArg
withDescription
create
Option
passwd
OptionBuilder
withArgName
hasArg
withDescription
create
Option
main
OptionBuilder
withArgName
hasArg
withDescription
create
Option
args
OptionBuilder
withArgName
hasArgs
withDescription
create
Options
options
new
Options
options
addOption
options
addOption
options
addOption
options
addOption
options
addOption
options
addOption
options
addOption
options
addOption
options
addOption
options
addOption
conf
options
addOption
confs
options
addOption
cache
options
addOption
ivyfile
options
addOption
dependency
options
addOption
retrieve
options
addOption
cachepath
options
addOption
revision
options
addOption
status
options
addOption
deliver
options
addOption
publishResolver
options
addOption
publishPattern
options
addOption
realm
options
addOption
host
options
addOption
username
options
addOption
passwd
options
addOption
main
options
addOption
args
return
options
public
static
void
main
String
args
throws
Exception
Options
options
getOptions
CommandLineParser
parser
new
GnuParser
try
CommandLine
line
parser
parse
options
args
if
line
hasOption
usage
options
return
if
line
hasOption
Message
init
new
DefaultMessageImpl
Message
MSG_DEBUG
else
if
line
hasOption
Message
init
new
DefaultMessageImpl
Message
MSG_VERBOSE
else
if
line
hasOption
Message
init
new
DefaultMessageImpl
Message
MSG_WARN
else
if
line
hasOption
Message
init
new
DefaultMessageImpl
Message
MSG_ERR
else
Message
init
new
DefaultMessageImpl
Message
MSG_INFO
boolean
validate
line
hasOption
Ivy
ivy
new
Ivy
ivy
addAllVariables
System
getProperties
if
line
hasOption
ivy
setVariable
configureURLHandler
line
getOptionValue
line
getOptionValue
line
getOptionValue
line
getOptionValue
String
confPath
line
getOptionValue
if
equals
confPath
ivy
configureDefault
else
File
conffile
new
File
confPath
if
conffile
exists
error
options
conffile
else
if
conffile
isDirectory
error
options
conffile
ivy
configure
conffile
File
cache
new
File
ivy
substitute
line
getOptionValue
ivy
getDefaultCache
getAbsolutePath
if
cache
exists
cache
mkdirs
else
if
cache
isDirectory
error
options
cache
String
confs
if
line
hasOption
confs
line
getOptionValues
else
confs
new
String
File
ivyfile
if
line
hasOption
String
dep
line
getOptionValues
if
dep
length
error
options
ivyfile
File
createTempFile
ivyfile
deleteOnExit
DefaultModuleDescriptor
md
DefaultModuleDescriptor
newDefaultInstance
ModuleRevisionId
newInstance
dep
dep
DefaultDependencyDescriptor
dd
new
DefaultDependencyDescriptor
md
ModuleRevisionId
newInstance
dep
dep
dep
for
int
i
i
confs
length
i
dd
addDependencyConfiguration
confs
i
md
addDependency
dd
XmlModuleDescriptorWriter
write
md
ivyfile
confs
new
String
else
ivyfile
new
File
ivy
substitute
line
getOptionValue
if
ivyfile
exists
error
options
ivyfile
else
if
ivyfile
isDirectory
error
options
ivyfile
ResolveReport
report
ivy
resolve
ivyfile
toURL
confs
cache
validate
line
hasOption
if
report
hasError
System
exit
ModuleDescriptor
md
report
getModuleDescriptor
if
confs
length
equals
confs
confs
md
getConfigurationsNames
if
line
hasOption
String
retrievePattern
ivy
substitute
line
getOptionValue
if
retrievePattern
indexOf
retrievePattern
retrievePattern
ivy
retrieve
md
getModuleRevisionId
getModuleId
confs
cache
retrievePattern
line
hasOption
line
hasOption
if
line
hasOption
outputCachePath
ivy
cache
md
confs
line
getOptionValue
if
line
hasOption
ivy
deliver
md
getResolvedModuleRevisionId
ivy
substitute
line
getOptionValue
cache
ivy
substitute
line
getOptionValue
ivy
substitute
line
getOptionValue
new
DefaultPublishingDRResolver
validate
if
line
hasOption
ivy
publish
md
getResolvedModuleRevisionId
ivy
substitute
line
getOptionValue
cache
ivy
substitute
line
getOptionValue
line
getOptionValue
ivy
substitute
line
getOptionValue
validate
if
line
hasOption
invoke
ivy
cache
md
confs
line
getOptionValue
line
getOptionValues
catch
ParseException
exp
System
err
println
exp
getMessage
usage
options
private
static
void
outputCachePath
Ivy
ivy
File
cache
ModuleDescriptor
md
String
confs
String
outFile
try
String
pathSeparator
System
getProperty
StringBuffer
buf
new
StringBuffer
XmlReportParser
parser
new
XmlReportParser
Collection
all
new
LinkedHashSet
for
int
i
i
confs
length
i
Artifact
artifacts
parser
getArtifacts
md
getModuleRevisionId
getModuleId
confs
i
cache
all
addAll
Arrays
asList
artifacts
for
Iterator
iter
all
iterator
iter
hasNext
Artifact
artifact
Artifact
iter
next
buf
append
ivy
getArchiveFileInCache
cache
artifact
getCanonicalPath
if
iter
hasNext
buf
append
pathSeparator
PrintWriter
writer
new
PrintWriter
new
FileOutputStream
outFile
writer
println
buf
toString
writer
close
System
out
println
outFile
catch
Exception
ex
throw
new
RuntimeException
ex
getMessage
ex
private
static
void
invoke
Ivy
ivy
File
cache
ModuleDescriptor
md
String
confs
String
mainclass
String
args
List
urls
new
ArrayList
try
XmlReportParser
parser
new
XmlReportParser
Collection
all
new
LinkedHashSet
for
int
i
i
confs
length
i
Artifact
artifacts
parser
getArtifacts
md
getModuleRevisionId
getModuleId
confs
i
cache
all
addAll
Arrays
asList
artifacts
for
Iterator
iter
all
iterator
iter
hasNext
Artifact
artifact
Artifact
iter
next
urls
add
ivy
getArchiveFileInCache
cache
artifact
toURL
catch
Exception
ex
throw
new
RuntimeException
ex
getMessage
ex
URLClassLoader
classLoader
new
URLClassLoader
URL
urls
toArray
new
URL
urls
size
Main
class
getClassLoader
try
Class
c
classLoader
loadClass
mainclass
Method
mainMethod
c
getMethod
new
Class
String
class
mainMethod
invoke
new
Object
args
catch
ClassNotFoundException
cnfe
throw
new
RuntimeException
mainclass
cnfe
catch
SecurityException
e
throw
new
RuntimeException
mainclass
e
catch
NoSuchMethodException
e
throw
new
RuntimeException
mainclass
e
catch
IllegalAccessException
e
throw
new
RuntimeException
mainclass
e
catch
InvocationTargetException
e
throw
new
RuntimeException
mainclass
e
private
static
void
configureURLHandler
String
realm
String
host
String
username
String
passwd
CredentialsStore
INSTANCE
addCredentials
realm
host
username
passwd
URLHandlerDispatcher
dispatcher
new
URLHandlerDispatcher
URLHandler
httpHandler
URLHandlerRegistry
getHttp
dispatcher
setDownloader
httpHandler
dispatcher
setDownloader
httpHandler
URLHandlerRegistry
setDefault
dispatcher
private
static
void
error
Options
options
String
msg
System
err
println
msg
usage
options
System
exit
private
static
void
usage
Options
options
HelpFormatter
formatter
new
HelpFormatter
formatter
printHelp
options
