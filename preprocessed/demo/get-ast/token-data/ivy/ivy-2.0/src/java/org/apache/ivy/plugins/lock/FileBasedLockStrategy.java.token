package
org
apache
ivy
plugins
lock
import
java
io
File
import
java
io
IOException
import
java
io
RandomAccessFile
import
java
nio
channels
FileChannel
import
java
nio
channels
FileLock
import
java
util
HashMap
import
java
util
Map
import
org
apache
ivy
util
Message
public
abstract
class
FileBasedLockStrategy
extends
AbstractLockStrategy
private
static
final
int
SLEEP_TIME
private
static
final
long
DEFAULT_TIMEOUT
private
FileLocker
locker
private
long
timeout
DEFAULT_TIMEOUT
private
Map
currentLockCounters
new
HashMap
protected
FileBasedLockStrategy
this
new
CreateFileLocker
protected
FileBasedLockStrategy
boolean
debugLocking
this
new
CreateFileLocker
debugLocking
debugLocking
protected
FileBasedLockStrategy
FileLocker
locker
boolean
debugLocking
super
debugLocking
this
locker
locker
protected
boolean
acquireLock
File
file
throws
InterruptedException
if
isDebugLocking
debugLocking
file
long
start
System
currentTimeMillis
do
synchronized
this
if
hasLock
file
int
holdLocks
incrementLock
file
if
isDebugLocking
debugLocking
file
System
currentTimeMillis
start
holdLocks
return
if
locker
tryLock
file
if
isDebugLocking
debugLocking
file
System
currentTimeMillis
start
incrementLock
file
return
Thread
sleep
SLEEP_TIME
while
System
currentTimeMillis
start
timeout
return
protected
void
releaseLock
File
file
synchronized
this
int
holdLocks
decrementLock
file
if
holdLocks
locker
unlock
file
if
isDebugLocking
debugLocking
file
else
if
isDebugLocking
debugLocking
file
holdLocks
private
static
void
debugLocking
String
msg
Message
info
Thread
currentThread
System
currentTimeMillis
msg
private
boolean
hasLock
File
file
Integer
c
Integer
currentLockCounters
get
file
return
c
c
intValue
private
int
incrementLock
File
file
Integer
c
Integer
currentLockCounters
get
file
int
holdLocks
c
c
intValue
currentLockCounters
put
file
new
Integer
holdLocks
return
holdLocks
private
int
decrementLock
File
file
Integer
c
Integer
currentLockCounters
get
file
int
dc
c
c
intValue
currentLockCounters
put
file
new
Integer
dc
return
dc
public
static
interface
FileLocker
boolean
tryLock
File
f
void
unlock
File
f
public
static
class
CreateFileLocker
implements
FileLocker
private
boolean
debugLocking
public
CreateFileLocker
boolean
debugLocking
this
debugLocking
debugLocking
public
boolean
tryLock
File
file
try
if
file
getParentFile
exists
file
getParentFile
mkdirs
if
file
createNewFile
return
else
if
debugLocking
debugLocking
file
catch
IOException
e
Message
verbose
e
getMessage
file
return
public
void
unlock
File
file
file
delete
public
static
class
NIOFileLocker
implements
FileLocker
private
Map
locks
new
HashMap
private
boolean
debugLocking
public
NIOFileLocker
boolean
debugLocking
this
debugLocking
debugLocking
public
boolean
tryLock
File
file
try
if
file
getParentFile
exists
file
getParentFile
mkdirs
RandomAccessFile
raf
new
RandomAccessFile
file
FileChannel
channel
raf
getChannel
try
FileLock
l
channel
tryLock
if
l
synchronized
this
locks
put
file
l
return
else
if
debugLocking
debugLocking
file
finally
raf
close
catch
IOException
e
Message
verbose
e
getMessage
file
return
public
void
unlock
File
file
synchronized
this
FileLock
l
FileLock
locks
get
file
if
l
throw
new
IllegalArgumentException
file
try
l
release
catch
IOException
e
Message
error
file
e
getMessage
