package
org
apache
ivy
plugins
latest
import
java
util
Comparator
import
java
util
HashMap
import
java
util
Locale
import
java
util
Map
import
org
apache
ivy
core
IvyContext
import
org
apache
ivy
core
module
id
ModuleRevisionId
import
org
apache
ivy
plugins
version
VersionMatcher
public
class
LatestRevisionStrategy
extends
ComparatorLatestStrategy
final
class
MridComparator
implements
Comparator
public
int
compare
Object
o1
Object
o2
String
rev1
ModuleRevisionId
o1
getRevision
String
rev2
ModuleRevisionId
o2
getRevision
rev1
rev1
replaceAll
rev1
rev1
replaceAll
rev2
rev2
replaceAll
rev2
rev2
replaceAll
String
parts1
rev1
split
String
parts2
rev2
split
int
i
for
i
parts1
length
i
parts2
length
i
if
parts1
i
equals
parts2
i
continue
boolean
is1Number
isNumber
parts1
i
boolean
is2Number
isNumber
parts2
i
if
is1Number
is2Number
return
if
is2Number
is1Number
return
if
is1Number
is2Number
return
Long
valueOf
parts1
i
compareTo
Long
valueOf
parts2
i
Map
specialMeanings
getSpecialMeanings
Integer
sm1
Integer
specialMeanings
get
parts1
i
toLowerCase
Locale
US
Integer
sm2
Integer
specialMeanings
get
parts2
i
toLowerCase
Locale
US
if
sm1
sm2
sm2
new
Integer
sm2
return
sm1
compareTo
sm2
if
sm2
return
new
Integer
compareTo
sm2
return
parts1
i
compareTo
parts2
i
if
i
parts1
length
return
isNumber
parts1
i
if
i
parts2
length
return
isNumber
parts2
i
return
private
boolean
isNumber
String
str
return
str
matches
final
class
ArtifactInfoComparator
implements
Comparator
public
int
compare
Object
o1
Object
o2
String
rev1
ArtifactInfo
o1
getRevision
String
rev2
ArtifactInfo
o2
getRevision
VersionMatcher
vmatcher
IvyContext
getContext
getSettings
getVersionMatcher
ModuleRevisionId
mrid1
ModuleRevisionId
newInstance
rev1
ModuleRevisionId
mrid2
ModuleRevisionId
newInstance
rev2
if
vmatcher
isDynamic
mrid1
int
c
vmatcher
compare
mrid1
mrid2
mridComparator
return
c
else
if
vmatcher
isDynamic
mrid2
int
c
vmatcher
compare
mrid2
mrid1
mridComparator
return
c
return
mridComparator
compare
mrid1
mrid2
public
static
class
SpecialMeaning
private
String
name
private
Integer
value
public
String
getName
return
name
public
void
setName
String
name
this
name
name
public
Integer
getValue
return
value
public
void
setValue
Integer
value
this
value
value
public
void
validate
if
name
throw
new
IllegalStateException
if
value
throw
new
IllegalStateException
private
static
final
Map
DEFAULT_SPECIAL_MEANINGS
static
DEFAULT_SPECIAL_MEANINGS
new
HashMap
DEFAULT_SPECIAL_MEANINGS
put
new
Integer
DEFAULT_SPECIAL_MEANINGS
put
new
Integer
DEFAULT_SPECIAL_MEANINGS
put
new
Integer
private
final
Comparator
mridComparator
new
MridComparator
private
final
Comparator
artifactInfoComparator
new
ArtifactInfoComparator
private
Map
specialMeanings
private
boolean
usedefaultspecialmeanings
public
LatestRevisionStrategy
setComparator
artifactInfoComparator
setName
public
void
addConfiguredSpecialMeaning
SpecialMeaning
meaning
meaning
validate
getSpecialMeanings
put
meaning
getName
toLowerCase
Locale
US
meaning
getValue
public
synchronized
Map
getSpecialMeanings
if
specialMeanings
specialMeanings
new
HashMap
if
isUsedefaultspecialmeanings
specialMeanings
putAll
DEFAULT_SPECIAL_MEANINGS
return
specialMeanings
public
boolean
isUsedefaultspecialmeanings
return
usedefaultspecialmeanings
public
void
setUsedefaultspecialmeanings
boolean
usedefaultspecialmeanings
this
usedefaultspecialmeanings
usedefaultspecialmeanings
