package
org
apache
ivy
core
module
descriptor
import
java
io
File
import
java
io
IOException
import
java
text
ParseException
import
java
util
ArrayList
import
java
util
Arrays
import
java
util
Collection
import
java
util
Date
import
java
util
HashMap
import
java
util
Iterator
import
java
util
LinkedHashMap
import
java
util
LinkedHashSet
import
java
util
List
import
java
util
Map
import
java
util
Set
import
java
util
Stack
import
org
apache
ivy
core
module
id
ArtifactId
import
org
apache
ivy
core
module
id
ModuleId
import
org
apache
ivy
core
module
id
ModuleRevisionId
import
org
apache
ivy
core
module
id
ModuleRules
import
org
apache
ivy
core
module
status
StatusManager
import
org
apache
ivy
plugins
conflict
ConflictManager
import
org
apache
ivy
plugins
matcher
MapMatcher
import
org
apache
ivy
plugins
matcher
MatcherHelper
import
org
apache
ivy
plugins
matcher
PatternMatcher
import
org
apache
ivy
plugins
namespace
NameSpaceHelper
import
org
apache
ivy
plugins
namespace
Namespace
import
org
apache
ivy
plugins
namespace
NamespaceTransformer
import
org
apache
ivy
plugins
parser
ModuleDescriptorParser
import
org
apache
ivy
plugins
parser
xml
XmlModuleDescriptorParser
import
org
apache
ivy
plugins
parser
xml
XmlModuleDescriptorWriter
import
org
apache
ivy
plugins
repository
Resource
import
org
apache
ivy
plugins
version
VersionMatcher
import
org
apache
ivy
util
Message
public
class
DefaultModuleDescriptor
implements
ModuleDescriptor
public
static
DefaultModuleDescriptor
newDefaultInstance
ModuleRevisionId
mrid
return
newDefaultInstance
mrid
public
static
DefaultModuleDescriptor
newCallerInstance
ModuleRevisionId
mrid
String
confs
boolean
transitive
boolean
changing
DefaultModuleDescriptor
moduleDescriptor
new
DefaultModuleDescriptor
ModuleRevisionId
newInstance
mrid
getOrganisation
mrid
getName
for
int
i
i
confs
length
i
moduleDescriptor
addConfiguration
new
Configuration
confs
i
moduleDescriptor
setLastModified
System
currentTimeMillis
DefaultDependencyDescriptor
dd
new
DefaultDependencyDescriptor
moduleDescriptor
mrid
changing
transitive
for
int
j
j
confs
length
j
dd
addDependencyConfiguration
confs
j
confs
j
moduleDescriptor
addDependency
dd
return
moduleDescriptor
public
static
DefaultModuleDescriptor
newCallerInstance
ModuleRevisionId
mrid
boolean
transitive
boolean
changing
DefaultModuleDescriptor
moduleDescriptor
new
DefaultModuleDescriptor
ModuleRevisionId
newInstance
moduleDescriptor
addConfiguration
new
Configuration
DEFAULT_CONFIGURATION
moduleDescriptor
setLastModified
System
currentTimeMillis
for
int
i
i
mrid
length
i
DefaultDependencyDescriptor
dd
new
DefaultDependencyDescriptor
moduleDescriptor
mrid
i
changing
transitive
dd
addDependencyConfiguration
DEFAULT_CONFIGURATION
moduleDescriptor
addDependency
dd
return
moduleDescriptor
public
static
DefaultModuleDescriptor
newDefaultInstance
ModuleRevisionId
mrid
DependencyArtifactDescriptor
artifacts
DefaultModuleDescriptor
moduleDescriptor
new
DefaultModuleDescriptor
mrid
moduleDescriptor
addConfiguration
new
Configuration
DEFAULT_CONFIGURATION
if
artifacts
artifacts
length
for
int
i
i
artifacts
length
i
moduleDescriptor
addArtifact
DEFAULT_CONFIGURATION
new
MDArtifact
moduleDescriptor
artifacts
i
getName
artifacts
i
getType
artifacts
i
getExt
artifacts
i
getUrl
else
moduleDescriptor
addArtifact
DEFAULT_CONFIGURATION
new
MDArtifact
moduleDescriptor
mrid
getName
moduleDescriptor
setLastModified
System
currentTimeMillis
return
moduleDescriptor
public
static
DefaultModuleDescriptor
newBasicInstance
ModuleRevisionId
mrid
Date
publicationDate
DefaultModuleDescriptor
moduleDescriptor
new
DefaultModuleDescriptor
mrid
publicationDate
moduleDescriptor
addConfiguration
new
Configuration
DEFAULT_CONFIGURATION
moduleDescriptor
addArtifact
DEFAULT_CONFIGURATION
new
MDArtifact
moduleDescriptor
mrid
getName
return
moduleDescriptor
public
static
ModuleDescriptor
transformInstance
ModuleDescriptor
md
Namespace
ns
NamespaceTransformer
t
ns
getToSystemTransformer
if
t
isIdentity
return
md
DefaultModuleDescriptor
nmd
new
DefaultModuleDescriptor
md
getParser
md
getResource
nmd
revId
t
transform
md
getModuleRevisionId
nmd
resolvedRevId
t
transform
md
getResolvedModuleRevisionId
nmd
status
md
getStatus
nmd
publicationDate
md
getPublicationDate
nmd
resolvedPublicationDate
md
getResolvedPublicationDate
DependencyDescriptor
dd
md
getDependencies
for
int
i
i
dd
length
i
nmd
dependencies
add
NameSpaceHelper
toSystem
dd
i
ns
Configuration
confs
md
getConfigurations
for
int
i
i
confs
length
i
nmd
configurations
put
confs
i
getName
confs
i
Artifact
arts
md
getArtifacts
confs
i
getName
for
int
j
j
arts
length
j
nmd
addArtifact
confs
i
getName
NameSpaceHelper
transform
arts
j
t
nmd
setDefault
md
isDefault
if
md
instanceof
DefaultModuleDescriptor
DefaultModuleDescriptor
dmd
DefaultModuleDescriptor
md
nmd
conflictManagers
ModuleRules
dmd
conflictManagers
clone
nmd
dependencyDescriptorMediators
ModuleRules
dmd
dependencyDescriptorMediators
clone
else
Message
warn
md
nmd
licenses
addAll
Arrays
asList
md
getLicenses
nmd
homePage
md
getHomePage
nmd
description
md
getDescription
nmd
lastModified
md
getLastModified
nmd
extraAttributesNamespaces
md
getExtraAttributesNamespaces
nmd
extraInfo
md
getExtraInfo
nmd
namespace
ns
return
nmd
private
ModuleRevisionId
revId
private
ModuleRevisionId
resolvedRevId
private
String
status
StatusManager
getCurrent
getDefaultStatus
private
Date
publicationDate
private
Date
resolvedPublicationDate
private
List
dependencies
new
ArrayList
private
Map
configurations
new
LinkedHashMap
private
Map
artifactsByConf
new
HashMap
private
Collection
artifacts
new
LinkedHashSet
private
boolean
isDefault
private
ModuleRules
conflictManagers
new
ModuleRules
private
ModuleRules
dependencyDescriptorMediators
new
ModuleRules
private
List
licenses
new
ArrayList
private
String
homePage
private
String
description
private
long
lastModified
private
Namespace
namespace
private
boolean
mappingOverride
private
ModuleDescriptorParser
parser
private
Resource
resource
private
List
excludeRules
new
ArrayList
private
Artifact
metadataArtifact
private
Map
extraAttributesNamespaces
new
LinkedHashMap
private
Map
extraInfo
new
HashMap
public
DefaultModuleDescriptor
ModuleRevisionId
id
String
status
Date
pubDate
this
id
status
pubDate
public
DefaultModuleDescriptor
ModuleRevisionId
id
String
status
Date
pubDate
boolean
isDefault
if
id
throw
new
NullPointerException
if
status
throw
new
NullPointerException
this
revId
id
this
resolvedRevId
id
this
status
status
this
publicationDate
pubDate
this
resolvedPublicationDate
publicationDate
new
Date
publicationDate
this
isDefault
isDefault
this
parser
XmlModuleDescriptorParser
getInstance
public
DefaultModuleDescriptor
ModuleDescriptorParser
parser
Resource
res
this
parser
parser
resource
res
public
Artifact
getMetadataArtifact
if
metadataArtifact
metadataArtifact
DefaultArtifact
newIvyArtifact
resolvedRevId
resolvedPublicationDate
return
metadataArtifact
public
void
setModuleArtifact
Artifact
moduleArtifact
this
metadataArtifact
moduleArtifact
public
boolean
isDefault
return
isDefault
public
void
setPublicationDate
Date
publicationDate
this
publicationDate
publicationDate
if
resolvedPublicationDate
resolvedPublicationDate
publicationDate
new
Date
publicationDate
public
Date
getPublicationDate
return
publicationDate
public
void
setResolvedPublicationDate
Date
publicationDate
if
publicationDate
throw
new
NullPointerException
resolvedPublicationDate
publicationDate
public
Date
getResolvedPublicationDate
return
resolvedPublicationDate
public
String
getRevision
return
getResolvedModuleRevisionId
getRevision
public
void
setModuleRevisionId
ModuleRevisionId
revId
if
revId
throw
new
NullPointerException
this
revId
revId
if
resolvedRevId
resolvedRevId
revId
public
void
setResolvedModuleRevisionId
ModuleRevisionId
revId
resolvedRevId
revId
public
void
setStatus
String
status
this
status
status
public
void
addDependency
DependencyDescriptor
dependency
dependencies
add
dependency
public
void
addConfiguration
Configuration
conf
configurations
put
conf
getName
conf
public
void
addArtifact
String
conf
Artifact
artifact
if
configurations
containsKey
conf
throw
new
IllegalArgumentException
conf
this
Collection
artifacts
Collection
artifactsByConf
get
conf
if
artifacts
artifacts
new
ArrayList
artifactsByConf
put
conf
artifacts
artifacts
add
artifact
this
artifacts
add
artifact
public
ModuleRevisionId
getModuleRevisionId
return
revId
public
ModuleRevisionId
getResolvedModuleRevisionId
return
resolvedRevId
public
String
getStatus
return
status
public
Configuration
getConfigurations
return
Configuration
configurations
values
toArray
new
Configuration
configurations
size
public
String
getConfigurationsNames
return
String
configurations
keySet
toArray
new
String
configurations
size
public
String
getPublicConfigurationsNames
List
ret
new
ArrayList
for
Iterator
iter
configurations
values
iterator
iter
hasNext
Configuration
conf
Configuration
iter
next
if
conf
getVisibility
Configuration
Visibility
PUBLIC
ret
add
conf
getName
return
String
ret
toArray
new
String
ret
size
public
Configuration
getConfiguration
String
confName
return
Configuration
configurations
get
confName
public
Artifact
getArtifacts
String
conf
Collection
artifacts
Collection
artifactsByConf
get
conf
if
artifacts
return
new
Artifact
else
return
Artifact
artifacts
toArray
new
Artifact
artifacts
size
public
Artifact
getAllArtifacts
return
Artifact
artifacts
toArray
new
Artifact
artifacts
size
public
DependencyDescriptor
getDependencies
return
DependencyDescriptor
dependencies
toArray
new
DependencyDescriptor
dependencies
size
public
boolean
dependsOn
VersionMatcher
matcher
ModuleDescriptor
md
for
Iterator
iter
dependencies
iterator
iter
hasNext
DependencyDescriptor
dd
DependencyDescriptor
iter
next
if
dd
getDependencyId
equals
md
getModuleRevisionId
getModuleId
if
md
getResolvedModuleRevisionId
getRevision
return
else
if
matcher
accept
dd
getDependencyRevisionId
md
return
return
public
void
toIvyFile
File
destFile
throws
ParseException
IOException
if
parser
resource
parser
toIvyFile
resource
openStream
resource
destFile
this
else
XmlModuleDescriptorWriter
write
this
destFile
public
String
toString
return
revId
status
publicationDate
configurations
artifactsByConf
dependencies
public
void
setDefault
boolean
b
isDefault
b
public
void
addConflictManager
ModuleId
moduleId
PatternMatcher
matcher
ConflictManager
manager
conflictManagers
defineRule
new
MapMatcher
moduleId
getAttributes
matcher
manager
public
ConflictManager
getConflictManager
ModuleId
moduleId
return
ConflictManager
conflictManagers
getRule
moduleId
public
void
addDependencyDescriptorMediator
ModuleId
moduleId
PatternMatcher
matcher
DependencyDescriptorMediator
ddm
dependencyDescriptorMediators
defineRule
new
MapMatcher
moduleId
getAttributes
matcher
ddm
public
DependencyDescriptor
mediate
DependencyDescriptor
dd
Object
mediators
dependencyDescriptorMediators
getRules
dd
getDependencyId
for
int
i
i
mediators
length
i
dd
DependencyDescriptorMediator
mediators
i
mediate
dd
return
dd
public
ModuleRules
getAllDependencyDescriptorMediators
return
ModuleRules
dependencyDescriptorMediators
clone
public
void
addLicense
License
license
licenses
add
license
public
License
getLicenses
return
License
licenses
toArray
new
License
licenses
size
public
String
getHomePage
return
homePage
public
void
setHomePage
String
homePage
this
homePage
homePage
public
String
getDescription
return
description
public
void
setDescription
String
description
this
description
description
public
long
getLastModified
return
lastModified
public
void
setLastModified
long
lastModified
this
lastModified
lastModified
public
Namespace
getNamespace
return
namespace
public
boolean
isNamespaceUseful
for
Iterator
iter
dependencies
iterator
iter
hasNext
DependencyDescriptor
dd
DependencyDescriptor
iter
next
if
dd
getAllExcludeRules
length
return
return
public
void
setNamespace
Namespace
ns
namespace
ns
public
void
check
Stack
confs
new
Stack
for
Iterator
iter
configurations
values
iterator
iter
hasNext
Configuration
conf
Configuration
iter
next
String
ext
conf
getExtends
for
int
i
i
ext
length
i
confs
push
conf
getName
checkConf
confs
ext
i
trim
confs
pop
private
void
checkConf
Stack
confs
String
confName
int
index
confs
indexOf
confName
if
index
StringBuffer
cycle
new
StringBuffer
for
index
confs
size
index
cycle
append
confs
get
index
append
cycle
append
confName
throw
new
IllegalStateException
cycle
Configuration
conf
getConfiguration
confName
if
conf
throw
new
IllegalStateException
confName
confs
get
confs
size
String
ext
conf
getExtends
for
int
i
i
ext
length
i
confs
push
conf
getName
checkConf
confs
ext
i
trim
confs
pop
public
void
setMappingOverride
boolean
override
mappingOverride
override
public
boolean
isMappingOverride
return
mappingOverride
public
String
getAttribute
String
attName
return
resolvedRevId
getAttribute
attName
public
Map
getAttributes
return
resolvedRevId
getAttributes
public
String
getExtraAttribute
String
attName
return
resolvedRevId
getExtraAttribute
attName
public
Map
getExtraAttributes
return
resolvedRevId
getExtraAttributes
public
Map
getQualifiedExtraAttributes
return
resolvedRevId
getQualifiedExtraAttributes
public
ModuleDescriptorParser
getParser
return
parser
public
Resource
getResource
return
resource
public
void
addExcludeRule
ExcludeRule
rule
excludeRules
add
rule
public
boolean
canExclude
return
excludeRules
isEmpty
public
boolean
doesExclude
String
moduleConfigurations
ArtifactId
artifactId
if
namespace
artifactId
NameSpaceHelper
transform
artifactId
namespace
getFromSystemTransformer
ExcludeRule
rules
getExcludeRules
moduleConfigurations
for
int
i
i
rules
length
i
if
MatcherHelper
matches
rules
i
getMatcher
rules
i
getId
artifactId
return
return
public
ExcludeRule
getAllExcludeRules
return
ExcludeRule
excludeRules
toArray
new
ExcludeRule
excludeRules
size
public
ExcludeRule
getExcludeRules
String
moduleConfigurations
Set
rules
new
LinkedHashSet
for
Iterator
iter
excludeRules
iterator
iter
hasNext
ExcludeRule
rule
ExcludeRule
iter
next
String
ruleConfs
rule
getConfigurations
if
containsAny
ruleConfs
moduleConfigurations
rules
add
rule
return
ExcludeRule
rules
toArray
new
ExcludeRule
rules
size
private
boolean
containsAny
String
arr1
String
arr2
return
new
ArrayList
Arrays
asList
arr1
removeAll
Arrays
asList
arr2
public
Map
getExtraAttributesNamespaces
return
extraAttributesNamespaces
public
void
addExtraAttributeNamespace
String
prefix
String
namespace
extraAttributesNamespaces
put
prefix
namespace
public
void
addExtraInfo
String
infoKey
String
value
extraInfo
put
infoKey
value
public
Map
getExtraInfo
return
extraInfo
