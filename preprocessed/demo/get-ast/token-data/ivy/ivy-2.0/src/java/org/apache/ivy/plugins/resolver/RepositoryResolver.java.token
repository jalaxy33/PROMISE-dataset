package
org
apache
ivy
plugins
resolver
import
java
io
ByteArrayInputStream
import
java
io
File
import
java
io
IOException
import
java
text
ParseException
import
java
util
ArrayList
import
java
util
Arrays
import
java
util
Collection
import
java
util
Date
import
java
util
Iterator
import
java
util
List
import
java
util
Map
import
org
apache
ivy
core
IvyPatternHelper
import
org
apache
ivy
core
event
EventManager
import
org
apache
ivy
core
module
descriptor
Artifact
import
org
apache
ivy
core
module
descriptor
DefaultArtifact
import
org
apache
ivy
core
module
descriptor
ModuleDescriptor
import
org
apache
ivy
core
module
id
ModuleRevisionId
import
org
apache
ivy
core
report
DownloadReport
import
org
apache
ivy
core
resolve
DownloadOptions
import
org
apache
ivy
plugins
parser
ModuleDescriptorParser
import
org
apache
ivy
plugins
parser
ModuleDescriptorParserRegistry
import
org
apache
ivy
plugins
repository
AbstractRepository
import
org
apache
ivy
plugins
repository
Repository
import
org
apache
ivy
plugins
repository
Resource
import
org
apache
ivy
plugins
resolver
util
ResolvedResource
import
org
apache
ivy
plugins
resolver
util
ResolverHelper
import
org
apache
ivy
plugins
resolver
util
ResourceMDParser
import
org
apache
ivy
plugins
version
VersionMatcher
import
org
apache
ivy
util
ChecksumHelper
import
org
apache
ivy
util
FileUtil
import
org
apache
ivy
util
Message
public
class
RepositoryResolver
extends
AbstractPatternsBasedResolver
private
Repository
repository
private
Boolean
alwaysCheckExactRevision
public
RepositoryResolver
public
Repository
getRepository
return
repository
public
void
setRepository
Repository
repository
this
repository
repository
public
void
setName
String
name
super
setName
name
if
repository
instanceof
AbstractRepository
AbstractRepository
repository
setName
name
protected
ResolvedResource
findResourceUsingPattern
ModuleRevisionId
mrid
String
pattern
Artifact
artifact
ResourceMDParser
rmdparser
Date
date
String
name
getName
VersionMatcher
versionMatcher
getSettings
getVersionMatcher
try
if
versionMatcher
isDynamic
mrid
isAlwaysCheckExactRevision
String
resourceName
IvyPatternHelper
substitute
pattern
mrid
artifact
Message
debug
resourceName
logAttempt
resourceName
Resource
res
repository
getResource
resourceName
boolean
reachable
res
exists
if
reachable
String
revision
if
pattern
indexOf
IvyPatternHelper
REVISION_KEY
if
equals
artifact
getType
equals
artifact
getType
File
temp
File
createTempFile
artifact
getExt
temp
deleteOnExit
repository
get
res
getName
temp
ModuleDescriptorParser
parser
ModuleDescriptorParserRegistry
getInstance
getParser
res
ModuleDescriptor
md
parser
parseDescriptor
getSettings
temp
toURI
toURL
res
revision
md
getRevision
if
revision
revision
length
revision
name
else
revision
name
else
revision
mrid
getRevision
return
new
ResolvedResource
res
revision
else
if
versionMatcher
isDynamic
mrid
return
findDynamicResourceUsingPattern
rmdparser
mrid
pattern
artifact
date
else
Message
debug
name
mrid
res
return
else
return
findDynamicResourceUsingPattern
rmdparser
mrid
pattern
artifact
date
catch
IOException
ex
throw
new
RuntimeException
name
mrid
IvyPatternHelper
substitute
pattern
mrid
artifact
ex
ex
catch
ParseException
ex
throw
new
RuntimeException
name
mrid
IvyPatternHelper
substitute
pattern
mrid
artifact
ex
ex
private
ResolvedResource
findDynamicResourceUsingPattern
ResourceMDParser
rmdparser
ModuleRevisionId
mrid
String
pattern
Artifact
artifact
Date
date
String
name
getName
logAttempt
IvyPatternHelper
substitute
pattern
ModuleRevisionId
newInstance
mrid
IvyPatternHelper
getTokenString
IvyPatternHelper
REVISION_KEY
artifact
ResolvedResource
rress
listResources
repository
mrid
pattern
artifact
if
rress
Message
debug
name
mrid
pattern
return
else
ResolvedResource
found
findResource
rress
rmdparser
mrid
date
if
found
Message
debug
name
mrid
pattern
return
found
protected
Resource
getResource
String
source
throws
IOException
return
repository
getResource
source
protected
ResolvedResource
listResources
Repository
repository
ModuleRevisionId
mrid
String
pattern
Artifact
artifact
return
ResolverHelper
findAll
repository
mrid
pattern
artifact
protected
long
get
Resource
resource
File
dest
throws
IOException
Message
verbose
getName
resource
getName
Message
debug
dest
if
dest
getParentFile
dest
getParentFile
mkdirs
repository
get
resource
getName
dest
return
dest
length
public
void
publish
Artifact
artifact
File
src
boolean
overwrite
throws
IOException
String
destPattern
if
equals
artifact
getType
getIvyPatterns
isEmpty
destPattern
String
getIvyPatterns
get
else
if
getArtifactPatterns
isEmpty
destPattern
String
getArtifactPatterns
get
else
throw
new
IllegalStateException
artifact
this
ModuleRevisionId
mrid
artifact
getModuleRevisionId
if
isM2compatible
mrid
convertM2IdForResourceSearch
mrid
String
dest
getDestination
destPattern
artifact
mrid
put
artifact
src
dest
overwrite
Message
info
artifact
getName
hidePassword
dest
protected
String
getDestination
String
pattern
Artifact
artifact
ModuleRevisionId
mrid
return
IvyPatternHelper
substitute
pattern
mrid
artifact
protected
void
put
Artifact
artifact
File
src
String
dest
boolean
overwrite
throws
IOException
repository
put
artifact
src
dest
overwrite
String
checksums
getChecksumAlgorithms
for
int
i
i
checksums
length
i
putChecksum
artifact
src
dest
overwrite
checksums
i
protected
void
putChecksum
Artifact
artifact
File
src
String
dest
boolean
overwrite
String
algorithm
throws
IOException
File
csFile
File
createTempFile
algorithm
try
FileUtil
copy
new
ByteArrayInputStream
ChecksumHelper
computeAsString
src
algorithm
getBytes
csFile
repository
put
DefaultArtifact
cloneWithAnotherTypeAndExt
artifact
algorithm
artifact
getExt
algorithm
csFile
dest
algorithm
overwrite
finally
csFile
delete
public
DownloadReport
download
Artifact
artifacts
DownloadOptions
options
EventManager
eventManager
getEventManager
try
if
eventManager
repository
addTransferListener
eventManager
return
super
download
artifacts
options
finally
if
eventManager
repository
removeTransferListener
eventManager
protected
void
findTokenValues
Collection
names
List
patterns
Map
tokenValues
String
token
for
Iterator
iter
patterns
iterator
iter
hasNext
String
pattern
String
iter
next
String
partiallyResolvedPattern
IvyPatternHelper
substituteTokens
pattern
tokenValues
String
values
ResolverHelper
listTokenValues
repository
partiallyResolvedPattern
token
if
values
names
addAll
filterNames
new
ArrayList
Arrays
asList
values
protected
String
listTokenValues
String
pattern
String
token
return
ResolverHelper
listTokenValues
repository
pattern
token
protected
boolean
exist
String
path
try
Resource
resource
repository
getResource
path
return
resource
exists
catch
IOException
e
return
public
String
getTypeName
return
public
void
dumpSettings
super
dumpSettings
Message
debug
getRepository
public
void
setSettings
ResolverSettings
settings
super
setSettings
settings
if
settings
if
alwaysCheckExactRevision
alwaysCheckExactRevision
Boolean
valueOf
settings
getVariable
public
boolean
isAlwaysCheckExactRevision
return
alwaysCheckExactRevision
alwaysCheckExactRevision
booleanValue
public
void
setAlwaysCheckExactRevision
boolean
alwaysCheckExactRevision
this
alwaysCheckExactRevision
Boolean
valueOf
alwaysCheckExactRevision
