package
org
apache
ivy
core
import
java
util
ArrayList
import
java
util
Collections
import
java
util
HashMap
import
java
util
List
import
java
util
Map
import
java
util
Stack
import
java
util
regex
Matcher
import
java
util
regex
Pattern
import
org
apache
ivy
core
cache
ArtifactOrigin
import
org
apache
ivy
core
cache
RepositoryCacheManager
import
org
apache
ivy
core
module
descriptor
Artifact
import
org
apache
ivy
core
module
descriptor
DefaultArtifact
import
org
apache
ivy
core
module
id
ModuleRevisionId
import
org
apache
ivy
core
settings
IvyVariableContainer
import
org
apache
ivy
core
settings
IvyVariableContainerImpl
import
org
apache
ivy
util
Message
public
final
class
IvyPatternHelper
private
IvyPatternHelper
public
static
final
String
CONF_KEY
public
static
final
String
TYPE_KEY
public
static
final
String
EXT_KEY
public
static
final
String
ARTIFACT_KEY
public
static
final
String
BRANCH_KEY
public
static
final
String
REVISION_KEY
public
static
final
String
MODULE_KEY
public
static
final
String
ORGANISATION_KEY
public
static
final
String
ORGANISATION_KEY2
public
static
final
String
ORIGINAL_ARTIFACTNAME_KEY
private
static
final
Pattern
PARAM_PATTERN
Pattern
compile
private
static
final
Pattern
VAR_PATTERN
Pattern
compile
public
static
String
substitute
String
pattern
ModuleRevisionId
moduleRevision
return
substitute
pattern
moduleRevision
getOrganisation
moduleRevision
getName
moduleRevision
getBranch
moduleRevision
getRevision
moduleRevision
getAttributes
public
static
String
substitute
String
pattern
ModuleRevisionId
moduleRevision
String
artifact
String
type
String
ext
return
substitute
pattern
moduleRevision
new
DefaultArtifact
moduleRevision
artifact
type
ext
public
static
String
substitute
String
pattern
Artifact
artifact
return
substitute
pattern
artifact
String
public
static
String
substitute
String
pattern
Artifact
artifact
ArtifactOrigin
origin
return
substitute
pattern
artifact
getModuleRevisionId
artifact
origin
public
static
String
substitute
String
pattern
Artifact
artifact
String
conf
return
substitute
pattern
artifact
getModuleRevisionId
artifact
conf
public
static
String
substitute
String
pattern
ModuleRevisionId
mrid
Artifact
artifact
return
substitute
pattern
mrid
artifact
public
static
String
substitute
String
pattern
ModuleRevisionId
mrid
Artifact
artifact
String
conf
return
substitute
pattern
mrid
artifact
conf
public
static
String
substitute
String
pattern
ModuleRevisionId
mrid
Artifact
artifact
String
conf
ArtifactOrigin
origin
Map
attributes
new
HashMap
attributes
putAll
mrid
getAttributes
attributes
putAll
artifact
getAttributes
return
substitute
pattern
mrid
getOrganisation
mrid
getName
mrid
getBranch
mrid
getRevision
artifact
getName
artifact
getType
artifact
getExt
conf
origin
attributes
public
static
String
substitute
String
pattern
String
org
String
module
String
revision
String
artifact
String
type
String
ext
return
substitute
pattern
org
module
revision
artifact
type
ext
public
static
String
substitute
String
pattern
String
org
String
module
String
revision
String
artifact
String
type
String
ext
String
conf
return
substitute
pattern
org
module
revision
artifact
type
ext
conf
public
static
String
substitute
String
pattern
String
org
String
module
String
revision
String
artifact
String
type
String
ext
String
conf
Map
extraAttributes
return
substitute
pattern
org
module
revision
artifact
type
ext
conf
extraAttributes
public
static
String
substitute
String
pattern
String
org
String
module
String
revision
String
artifact
String
type
String
ext
String
conf
ArtifactOrigin
origin
Map
extraAttributes
return
substitute
pattern
org
module
revision
artifact
type
ext
conf
origin
extraAttributes
public
static
String
substitute
String
pattern
String
org
String
module
String
branch
String
revision
String
artifact
String
type
String
ext
String
conf
ArtifactOrigin
origin
Map
extraAttributes
Map
tokens
new
HashMap
extraAttributes
Collections
EMPTY_MAP
extraAttributes
tokens
put
ORGANISATION_KEY
org
org
tokens
put
ORGANISATION_KEY2
org
org
tokens
put
MODULE_KEY
module
module
tokens
put
BRANCH_KEY
branch
branch
tokens
put
REVISION_KEY
revision
revision
tokens
put
ARTIFACT_KEY
artifact
module
artifact
tokens
put
TYPE_KEY
type
type
tokens
put
EXT_KEY
ext
ext
tokens
put
CONF_KEY
conf
conf
tokens
put
ORIGINAL_ARTIFACTNAME_KEY
origin
new
OriginalArtifactNameValue
org
module
branch
revision
artifact
type
ext
new
OriginalArtifactNameValue
origin
return
substituteTokens
pattern
tokens
public
static
String
substituteVariables
String
pattern
Map
variables
return
substituteVariables
pattern
new
IvyVariableContainerImpl
variables
new
Stack
public
static
String
substituteVariables
String
pattern
IvyVariableContainer
variables
return
substituteVariables
pattern
variables
new
Stack
private
static
String
substituteVariables
String
pattern
IvyVariableContainer
variables
Stack
substituting
if
pattern
return
Matcher
m
VAR_PATTERN
matcher
pattern
boolean
useVariables
StringBuffer
sb
while
m
find
if
useVariables
useVariables
sb
new
StringBuffer
String
var
m
group
String
val
String
variables
getVariable
var
if
val
int
index
substituting
indexOf
var
if
index
List
cycle
new
ArrayList
substituting
subList
index
substituting
size
cycle
add
var
throw
new
IllegalArgumentException
cycle
substituting
push
var
val
substituteVariables
val
variables
substituting
substituting
pop
else
val
m
group
m
appendReplacement
sb
val
replaceAll
replaceAll
if
useVariables
m
appendTail
sb
return
sb
toString
else
return
pattern
public
static
String
substituteTokens
String
pattern
Map
tokens
StringBuffer
buffer
new
StringBuffer
char
chars
pattern
toCharArray
StringBuffer
optionalPart
StringBuffer
tokenBuffer
boolean
insideOptionalPart
boolean
insideToken
boolean
tokenSeen
boolean
tokenHadValue
for
int
i
i
chars
length
i
switch
chars
i
case
if
insideOptionalPart
throw
new
IllegalArgumentException
i
pattern
optionalPart
new
StringBuffer
insideOptionalPart
tokenSeen
tokenHadValue
break
case
if
insideOptionalPart
insideToken
throw
new
IllegalArgumentException
i
pattern
if
tokenHadValue
buffer
append
optionalPart
toString
else
if
tokenSeen
buffer
append
append
optionalPart
toString
append
insideOptionalPart
break
case
if
insideToken
throw
new
IllegalArgumentException
i
pattern
tokenBuffer
new
StringBuffer
insideToken
break
case
if
insideToken
throw
new
IllegalArgumentException
i
pattern
String
token
tokenBuffer
toString
Object
tokenValue
tokens
get
token
String
value
tokenValue
tokenValue
toString
if
insideOptionalPart
tokenHadValue
value
value
length
optionalPart
append
value
else
if
value
value
token
buffer
append
value
insideToken
tokenSeen
break
default
if
insideToken
tokenBuffer
append
chars
i
else
if
insideOptionalPart
optionalPart
append
chars
i
else
buffer
append
chars
i
break
if
insideToken
throw
new
IllegalArgumentException
pattern
if
insideOptionalPart
throw
new
IllegalArgumentException
pattern
return
buffer
toString
public
static
String
substituteVariable
String
pattern
String
variable
String
value
StringBuffer
buf
new
StringBuffer
pattern
substituteVariable
buf
variable
value
return
buf
toString
public
static
void
substituteVariable
StringBuffer
buf
String
variable
String
value
String
from
variable
int
fromLength
from
length
for
int
index
buf
indexOf
from
index
index
buf
indexOf
from
index
buf
replace
index
index
fromLength
value
public
static
String
substituteToken
String
pattern
String
token
String
value
StringBuffer
buf
new
StringBuffer
pattern
substituteToken
buf
token
value
return
buf
toString
public
static
void
substituteToken
StringBuffer
buf
String
token
String
value
String
from
getTokenString
token
int
fromLength
from
length
for
int
index
buf
indexOf
from
index
index
buf
indexOf
from
index
buf
replace
index
index
fromLength
value
public
static
String
getTokenString
String
token
return
token
public
static
String
substituteParams
String
pattern
Map
params
return
substituteParams
pattern
new
IvyVariableContainerImpl
params
new
Stack
private
static
String
substituteParams
String
pattern
IvyVariableContainer
params
Stack
substituting
if
pattern
return
Matcher
m
PARAM_PATTERN
matcher
pattern
StringBuffer
sb
new
StringBuffer
while
m
find
String
var
m
group
String
val
String
params
getVariable
var
if
val
int
index
substituting
indexOf
var
if
index
List
cycle
new
ArrayList
substituting
subList
index
substituting
size
cycle
add
var
throw
new
IllegalArgumentException
cycle
substituting
push
var
val
substituteVariables
val
params
substituting
substituting
pop
else
val
m
group
m
appendReplacement
sb
val
replaceAll
replaceAll
m
appendTail
sb
return
sb
toString
private
static
class
OriginalArtifactNameValue
private
String
org
private
String
moduleName
private
String
branch
private
String
revision
private
String
artifactName
private
String
artifactType
private
String
artifactExt
private
ArtifactOrigin
origin
public
OriginalArtifactNameValue
String
org
String
moduleName
String
branch
String
revision
String
artifactName
String
artifactType
String
artifactExt
this
org
org
this
moduleName
moduleName
this
branch
branch
this
revision
revision
this
artifactName
artifactName
this
artifactType
artifactType
this
artifactExt
artifactExt
public
OriginalArtifactNameValue
ArtifactOrigin
origin
this
origin
origin
public
String
toString
if
origin
ModuleRevisionId
revId
ModuleRevisionId
newInstance
org
moduleName
branch
revision
Artifact
artifact
new
DefaultArtifact
revId
artifactName
artifactType
artifactExt
RepositoryCacheManager
cacheManager
IvyContext
getContext
getSettings
getResolver
revId
getRepositoryCacheManager
origin
cacheManager
getSavedArtifactOrigin
artifact
if
ArtifactOrigin
isUnknown
origin
Message
debug
artifact
cacheManager
return
if
ArtifactOrigin
isUnknown
origin
return
String
location
origin
getLocation
int
lastPathIndex
location
lastIndexOf
if
lastPathIndex
lastPathIndex
location
lastIndexOf
int
lastColonIndex
location
lastIndexOf
return
location
substring
lastPathIndex
lastColonIndex
public
static
String
getTokenRoot
String
pattern
int
index
pattern
indexOf
if
index
return
pattern
else
return
pattern
substring
index
public
static
String
getFirstToken
String
pattern
if
pattern
return
int
startIndex
pattern
indexOf
if
startIndex
return
int
endIndex
pattern
indexOf
startIndex
if
endIndex
return
return
pattern
substring
startIndex
endIndex
