package
org
apache
ivy
core
sort
import
java
util
Collection
import
java
util
Iterator
import
java
util
LinkedList
import
java
util
List
import
org
apache
ivy
core
module
descriptor
DependencyDescriptor
import
org
apache
ivy
plugins
circular
CircularDependencyException
import
org
apache
ivy
plugins
circular
CircularDependencyStrategy
import
org
apache
ivy
plugins
version
VersionMatcher
import
org
apache
ivy
util
Message
public
class
ModuleDescriptorSorter
private
final
CollectionOfModulesToSort
moduleDescriptors
private
final
List
sorted
new
LinkedList
private
final
CircularDependencyStrategy
circularDepStrategy
public
ModuleDescriptorSorter
Collection
modulesDescriptorsToSort
VersionMatcher
matcher
NonMatchingVersionReporter
nonMatchingVersionReporter
CircularDependencyStrategy
circularDepStrategy
this
circularDepStrategy
circularDepStrategy
moduleDescriptors
new
CollectionOfModulesToSort
modulesDescriptorsToSort
matcher
nonMatchingVersionReporter
public
List
sortModuleDescriptors
throws
CircularDependencyException
Message
debug
moduleDescriptors
size
Iterator
moduleDescriptorsIterator
moduleDescriptors
iterator
while
moduleDescriptorsIterator
hasNext
ModuleInSort
next
ModuleInSort
moduleDescriptorsIterator
next
sortModuleDescriptorsHelp
next
next
return
sorted
private
void
sortModuleDescriptorsHelp
ModuleInSort
current
ModuleInSort
caller
throws
CircularDependencyException
if
current
isProcessed
return
if
current
checkLoop
caller
circularDepStrategy
return
DependencyDescriptor
descriptors
current
getDependencies
Message
debug
current
toString
descriptors
length
current
setCaller
caller
for
int
i
i
descriptors
length
i
ModuleInSort
child
moduleDescriptors
getModuleDescriptorDependency
descriptors
i
if
child
sortModuleDescriptorsHelp
child
current
current
endOfCall
Message
debug
current
toString
current
addToSortedListIfRequired
sorted
