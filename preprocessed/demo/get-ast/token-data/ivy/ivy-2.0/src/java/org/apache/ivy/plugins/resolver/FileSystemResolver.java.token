package
org
apache
ivy
plugins
resolver
import
java
io
File
import
java
io
IOException
import
java
util
Collection
import
java
util
HashMap
import
java
util
Iterator
import
java
util
List
import
java
util
Map
import
java
util
regex
Matcher
import
java
util
regex
Pattern
import
org
apache
ivy
core
IvyPatternHelper
import
org
apache
ivy
core
module
descriptor
Artifact
import
org
apache
ivy
core
module
id
ModuleRevisionId
import
org
apache
ivy
core
settings
IvyPattern
import
org
apache
ivy
plugins
repository
file
FileRepository
import
org
apache
ivy
util
Checks
import
org
apache
ivy
util
Message
public
class
FileSystemResolver
extends
RepositoryResolver
private
static
final
String
TRANSACTION_DESTINATION_SUFFIX
private
static
final
Pattern
TRANSACTION_PATTERN
Pattern
compile
private
String
transactional
private
Boolean
supportTransaction
private
String
baseTransactionPattern
private
Map
fullTransactionPatterns
new
HashMap
private
File
transactionTempDir
private
File
transactionDestDir
public
FileSystemResolver
setRepository
new
FileRepository
public
String
getTypeName
return
public
boolean
isLocal
return
getFileRepository
isLocal
public
void
setLocal
boolean
local
getFileRepository
setLocal
local
private
FileRepository
getFileRepository
return
FileRepository
getRepository
protected
String
getDestination
String
pattern
Artifact
artifact
ModuleRevisionId
mrid
if
supportTransaction
isTransactionStarted
String
destPattern
String
fullTransactionPatterns
get
pattern
if
destPattern
throw
new
IllegalArgumentException
pattern
fullTransactionPatterns
keySet
return
IvyPatternHelper
substitute
destPattern
mrid
artifact
else
return
super
getDestination
pattern
artifact
mrid
private
boolean
isTransactionStarted
return
transactionTempDir
public
void
abortPublishTransaction
throws
IOException
if
supportTransaction
if
isTransactionStarted
throw
new
IllegalStateException
try
getFileRepository
delete
transactionTempDir
Message
info
transactionTempDir
finally
closeTransaction
public
void
commitPublishTransaction
throws
IOException
if
supportTransaction
if
isTransactionStarted
throw
new
IllegalStateException
if
transactionDestDir
exists
throw
new
IOException
transactionDestDir
try
getFileRepository
move
transactionTempDir
transactionDestDir
Message
info
transactionTempDir
transactionDestDir
catch
IOException
ex
IOException
commitEx
try
getFileRepository
delete
transactionTempDir
commitEx
new
IOException
transactionDestDir
catch
IOException
deleteEx
commitEx
new
IOException
transactionDestDir
transactionTempDir
commitEx
initCause
ex
throw
commitEx
finally
closeTransaction
public
void
beginPublishTransaction
ModuleRevisionId
module
boolean
overwrite
throws
IOException
if
supportTransaction
if
isTransactionStarted
throw
new
IllegalStateException
if
overwrite
unsupportedTransaction
else
initTransaction
module
if
transactionDestDir
exists
unsupportedTransaction
transactionDestDir
closeTransaction
else
Message
verbose
transactionTempDir
transactionDestDir
protected
Collection
filterNames
Collection
values
if
supportTransaction
values
super
filterNames
values
for
Iterator
iterator
values
iterator
iterator
hasNext
String
v
String
iterator
next
if
v
endsWith
TRANSACTION_DESTINATION_SUFFIX
iterator
remove
return
values
else
return
super
filterNames
values
public
boolean
supportTransaction
if
equals
transactional
return
checkSupportTransaction
return
supportTransaction
booleanValue
private
void
closeTransaction
transactionTempDir
transactionDestDir
private
void
checkSupportTransaction
if
supportTransaction
supportTransaction
Boolean
FALSE
List
ivyPatterns
getIvyPatterns
List
artifactPatterns
getArtifactPatterns
if
ivyPatterns
size
String
pattern
String
ivyPatterns
get
Matcher
m
TRANSACTION_PATTERN
matcher
pattern
if
m
matches
unsupportedTransaction
return
else
baseTransactionPattern
m
group
fullTransactionPatterns
put
pattern
m
group
TRANSACTION_DESTINATION_SUFFIX
m
group
if
artifactPatterns
size
String
pattern
String
artifactPatterns
get
Matcher
m
TRANSACTION_PATTERN
matcher
pattern
if
m
matches
unsupportedTransaction
return
else
if
baseTransactionPattern
if
baseTransactionPattern
equals
m
group
unsupportedTransaction
return
else
fullTransactionPatterns
put
pattern
m
group
TRANSACTION_DESTINATION_SUFFIX
m
group
else
baseTransactionPattern
m
group
fullTransactionPatterns
put
pattern
m
group
TRANSACTION_DESTINATION_SUFFIX
m
group
supportTransaction
Boolean
TRUE
private
void
unsupportedTransaction
String
msg
String
fullMsg
getName
msg
if
equals
transactional
throw
new
IllegalStateException
fullMsg
else
Message
verbose
fullMsg
supportTransaction
Boolean
FALSE
private
void
initTransaction
ModuleRevisionId
module
transactionTempDir
Checks
checkAbsolute
IvyPatternHelper
substitute
baseTransactionPattern
ModuleRevisionId
newInstance
module
module
getRevision
TRANSACTION_DESTINATION_SUFFIX
transactionDestDir
Checks
checkAbsolute
IvyPatternHelper
substitute
baseTransactionPattern
module
public
String
getTransactional
return
transactional
public
void
setTransactional
String
transactional
this
transactional
transactional
public
void
addConfiguredIvy
IvyPattern
p
Checks
checkAbsolute
p
getPattern
super
addConfiguredIvy
p
public
void
addIvyPattern
String
pattern
Checks
checkAbsolute
pattern
super
addIvyPattern
pattern
public
void
addConfiguredArtifact
IvyPattern
p
Checks
checkAbsolute
p
getPattern
super
addConfiguredArtifact
p
public
void
addArtifactPattern
String
pattern
Checks
checkAbsolute
pattern
super
addArtifactPattern
pattern
