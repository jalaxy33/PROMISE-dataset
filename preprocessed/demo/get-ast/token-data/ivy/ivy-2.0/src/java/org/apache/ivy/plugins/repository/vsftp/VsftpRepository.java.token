package
org
apache
ivy
plugins
repository
vsftp
import
java
io
File
import
java
io
IOException
import
java
io
InputStreamReader
import
java
io
PrintWriter
import
java
io
Reader
import
java
text
SimpleDateFormat
import
java
util
ArrayList
import
java
util
List
import
java
util
Locale
import
java
util
regex
Pattern
import
org
apache
ivy
Ivy
import
org
apache
ivy
core
IvyContext
import
org
apache
ivy
core
IvyThread
import
org
apache
ivy
core
event
IvyEvent
import
org
apache
ivy
core
event
IvyListener
import
org
apache
ivy
core
event
resolve
EndResolveEvent
import
org
apache
ivy
plugins
repository
AbstractRepository
import
org
apache
ivy
plugins
repository
BasicResource
import
org
apache
ivy
plugins
repository
Resource
import
org
apache
ivy
plugins
repository
TransferEvent
import
org
apache
ivy
util
Checks
import
org
apache
ivy
util
Message
public
class
VsftpRepository
extends
AbstractRepository
private
static
final
int
LS_DATE_INDEX4
private
static
final
int
LS_DATE_INDEX3
private
static
final
int
LS_DATE_INDEX2
private
static
final
int
LS_DATE_INDEX1
private
static
final
int
LS_SIZE_INDEX
private
static
final
int
LS_PARTS_NUMBER
private
static
final
int
DISCONNECT_COMMAND_TIMEOUT
private
static
final
int
REUSE_CONNECTION_SLEEP_TIME
private
static
final
int
READER_ALIVE_SLEEP_TIME
private
static
final
int
MAX_READER_ALIVE_ATTEMPT
private
static
final
int
ERROR_SLEEP_TIME
private
static
final
int
PROMPT_SLEEP_TIME
private
static
final
int
MAX_READ_PROMPT_ATTEMPT
private
static
final
int
GET_JOIN_MAX_TIME
private
static
final
int
DEFAULT_REUSE_CONNECTION_TIME
private
static
final
int
DEFAULT_READ_TIMEOUT
private
static
final
String
PROMPT
private
static
final
SimpleDateFormat
FORMAT
new
SimpleDateFormat
Locale
US
private
String
host
private
String
username
private
String
authentication
private
Reader
in
private
Reader
err
private
PrintWriter
out
private
volatile
StringBuffer
errors
new
StringBuffer
private
long
readTimeout
DEFAULT_READ_TIMEOUT
private
long
reuseConnection
DEFAULT_REUSE_CONNECTION_TIME
private
volatile
long
lastCommand
private
volatile
boolean
inCommand
private
Process
process
private
Thread
connectionCleaner
private
Thread
errorsReader
private
volatile
long
errorsLastUpdateTime
private
Ivy
ivy
public
Resource
getResource
String
source
throws
IOException
initIvy
return
new
VsftpResource
this
source
private
void
initIvy
ivy
IvyContext
getContext
getIvy
protected
Resource
getInitResource
String
source
throws
IOException
try
return
lslToResource
source
sendCommand
source
catch
IOException
ex
cleanup
ex
throw
ex
finally
cleanup
public
void
get
final
String
source
File
destination
throws
IOException
initIvy
try
fireTransferInitiated
getResource
source
TransferEvent
REQUEST_GET
File
destDir
destination
getParentFile
if
destDir
sendCommand
destDir
getAbsolutePath
if
destination
exists
destination
delete
int
index
source
lastIndexOf
String
srcName
index
source
source
substring
index
final
File
to
destDir
Checks
checkAbsolute
srcName
new
File
destDir
srcName
final
IOException
ex
new
IOException
Thread
get
new
IvyThread
public
void
run
initContext
try
sendCommand
source
getExpectedDownloadMessage
source
to
catch
IOException
e
ex
e
get
start
long
prevLength
long
lastUpdate
System
currentTimeMillis
long
timeout
readTimeout
while
get
isAlive
checkInterrupted
long
length
to
exists
to
length
if
length
prevLength
fireTransferProgress
length
prevLength
lastUpdate
System
currentTimeMillis
prevLength
length
else
if
System
currentTimeMillis
lastUpdate
timeout
Message
verbose
timeout
get
interrupt
if
to
exists
to
delete
throw
new
IOException
source
getHost
try
get
join
GET_JOIN_MAX_TIME
catch
InterruptedException
e
if
to
exists
to
delete
return
if
ex
if
to
exists
to
delete
throw
ex
to
renameTo
destination
fireTransferCompleted
destination
length
catch
IOException
ex
fireTransferError
ex
cleanup
ex
throw
ex
finally
cleanup
public
List
list
String
parent
throws
IOException
initIvy
try
if
parent
endsWith
parent
parent
String
response
sendCommand
parent
if
response
startsWith
return
String
lines
response
split
List
ret
new
ArrayList
lines
length
for
int
i
i
lines
length
i
while
lines
i
endsWith
lines
i
endsWith
lines
i
lines
i
substring
lines
i
length
if
lines
i
trim
length
ret
add
parent
lines
i
substring
lines
i
lastIndexOf
return
ret
catch
IOException
ex
cleanup
ex
throw
ex
finally
cleanup
public
void
put
File
source
String
destination
boolean
overwrite
throws
IOException
initIvy
try
if
getResource
destination
exists
if
overwrite
sendCommand
destination
getExpectedRemoveMessage
destination
else
return
int
index
destination
lastIndexOf
String
destDir
if
index
destDir
destination
substring
index
mkdirs
destDir
sendCommand
destDir
String
to
destDir
destDir
source
getName
source
getName
sendCommand
source
getAbsolutePath
getExpectedUploadMessage
source
to
sendCommand
to
destination
catch
IOException
ex
cleanup
ex
throw
ex
finally
cleanup
private
void
mkdirs
String
destDir
throws
IOException
if
dirExists
destDir
return
if
destDir
endsWith
destDir
destDir
substring
destDir
length
int
index
destDir
lastIndexOf
if
index
mkdirs
destDir
substring
index
sendCommand
destDir
private
boolean
dirExists
String
dir
throws
IOException
return
sendCommand
dir
startsWith
protected
String
sendCommand
String
command
throws
IOException
return
sendCommand
command
readTimeout
protected
void
sendCommand
String
command
Pattern
expectedResponse
throws
IOException
sendCommand
command
expectedResponse
readTimeout
protected
void
sendCommand
String
command
Pattern
expectedResponse
long
timeout
throws
IOException
String
response
sendCommand
command
timeout
if
expectedResponse
matcher
response
matches
Message
debug
Message
debug
expectedResponse
Message
debug
response
throw
new
IOException
response
protected
String
sendCommand
String
command
boolean
sendErrorAsResponse
throws
IOException
return
sendCommand
command
sendErrorAsResponse
readTimeout
protected
String
sendCommand
String
command
boolean
sendErrorAsResponse
boolean
single
throws
IOException
return
sendCommand
command
sendErrorAsResponse
single
readTimeout
protected
String
sendCommand
String
command
boolean
sendErrorAsResponse
long
timeout
throws
IOException
return
sendCommand
command
sendErrorAsResponse
timeout
protected
String
sendCommand
String
command
boolean
sendErrorAsResponse
boolean
single
long
timeout
throws
IOException
single
checkInterrupted
inCommand
errorsLastUpdateTime
synchronized
this
if
single
in
ensureConnectionOpened
Message
debug
command
getHost
updateLastCommandTime
out
println
command
out
flush
else
sendSingleCommand
command
try
return
readResponse
sendErrorAsResponse
timeout
finally
inCommand
if
single
closeConnection
protected
String
readResponse
boolean
sendErrorAsResponse
throws
IOException
return
readResponse
sendErrorAsResponse
readTimeout
protected
synchronized
String
readResponse
final
boolean
sendErrorAsResponse
long
timeout
throws
IOException
final
StringBuffer
response
new
StringBuffer
final
IOException
exc
new
IOException
final
boolean
done
new
boolean
Runnable
r
new
Runnable
public
void
run
synchronized
VsftpRepository
this
try
int
c
boolean
getPrompt
for
int
attempts
getPrompt
attempts
MAX_READ_PROMPT_ATTEMPT
attempts
while
c
in
read
attempts
response
append
char
c
if
response
length
PROMPT
length
response
substring
response
length
PROMPT
length
response
length
equals
PROMPT
response
setLength
response
length
PROMPT
length
getPrompt
break
if
getPrompt
try
Thread
sleep
PROMPT_SLEEP_TIME
catch
InterruptedException
e
break
if
getPrompt
if
errorsLastUpdateTime
errorsLastUpdateTime
lastCommand
while
System
currentTimeMillis
errorsLastUpdateTime
PROMPT_SLEEP_TIME
try
Thread
sleep
ERROR_SLEEP_TIME
catch
InterruptedException
e
break
if
errors
length
if
sendErrorAsResponse
response
append
errors
errors
setLength
else
throw
new
IOException
chomp
errors
toString
chomp
response
done
catch
IOException
e
exc
e
finally
VsftpRepository
this
notify
Thread
reader
if
timeout
r
run
else
reader
new
IvyThread
r
reader
start
try
wait
timeout
catch
InterruptedException
e
updateLastCommandTime
if
exc
throw
exc
else
if
done
if
reader
reader
isAlive
reader
interrupt
for
int
i
i
MAX_READER_ALIVE_ATTEMPT
reader
isAlive
i
try
Thread
sleep
READER_ALIVE_SLEEP_TIME
catch
InterruptedException
e
break
if
reader
isAlive
reader
stop
throw
new
IOException
getHost
else
if
equals
response
Message
info
getHost
closeConnection
throw
new
IOException
getHost
Message
debug
response
getHost
return
response
toString
private
synchronized
void
sendSingleCommand
String
command
throws
IOException
exec
getSingleCommand
command
protected
synchronized
void
ensureConnectionOpened
throws
IOException
if
in
Message
verbose
getUsername
getHost
String
connectionCommand
getConnectionCommand
exec
connectionCommand
try
readResponse
if
reuseConnection
connectionCleaner
new
IvyThread
public
void
run
initContext
try
long
sleep
REUSE_CONNECTION_SLEEP_TIME
while
in
sleep
sleep
sleep
sleep
reuseConnection
System
currentTimeMillis
lastCommand
if
inCommand
sleep
sleep
reuseConnection
sleep
catch
InterruptedException
e
disconnect
connectionCleaner
start
if
ivy
ivy
getEventManager
addIvyListener
new
IvyListener
public
void
progress
IvyEvent
event
disconnect
event
getSource
removeIvyListener
this
EndResolveEvent
NAME
catch
IOException
ex
closeConnection
throw
new
IOException
getUsername
getHost
getAuthentication
ex
getMessage
Message
verbose
getHost
private
void
updateLastCommandTime
lastCommand
System
currentTimeMillis
private
void
exec
String
command
throws
IOException
Message
debug
command
process
Runtime
getRuntime
exec
command
in
new
InputStreamReader
process
getInputStream
err
new
InputStreamReader
process
getErrorStream
out
new
PrintWriter
process
getOutputStream
errorsReader
new
IvyThread
public
void
run
initContext
int
c
try
while
err
c
err
read
errors
append
char
c
errorsLastUpdateTime
System
currentTimeMillis
catch
IOException
e
errorsReader
start
private
void
checkInterrupted
if
ivy
ivy
checkInterrupted
private
void
cleanup
Exception
ex
if
ex
getMessage
equals
getHost
closeConnection
else
disconnect
private
void
cleanup
if
reuseConnection
disconnect
public
synchronized
void
disconnect
if
in
Message
verbose
getHost
try
sendCommand
DISCONNECT_COMMAND_TIMEOUT
catch
IOException
e
finally
closeConnection
Message
verbose
getHost
private
synchronized
void
closeConnection
if
connectionCleaner
connectionCleaner
interrupt
if
errorsReader
errorsReader
interrupt
try
process
destroy
catch
Exception
ex
try
in
close
catch
Exception
e
try
err
close
catch
Exception
e
try
out
close
catch
Exception
e
connectionCleaner
errorsReader
process
in
out
err
Message
debug
getHost
protected
Resource
lslToResource
String
file
String
responseLine
if
responseLine
responseLine
startsWith
return
new
BasicResource
file
else
String
parts
responseLine
split
if
parts
length
LS_PARTS_NUMBER
Message
debug
responseLine
return
new
BasicResource
file
else
try
long
contentLength
Long
parseLong
parts
LS_SIZE_INDEX
String
date
parts
LS_DATE_INDEX1
parts
LS_DATE_INDEX2
parts
LS_DATE_INDEX3
parts
LS_DATE_INDEX4
return
new
BasicResource
file
contentLength
FORMAT
parse
date
getTime
catch
Exception
ex
Message
warn
responseLine
ex
return
new
BasicResource
file
protected
String
getSingleCommand
String
command
return
authentication
username
host
command
protected
String
getConnectionCommand
return
authentication
username
host
protected
Pattern
getExpectedDownloadMessage
String
source
File
to
return
Pattern
compile
to
getName
protected
Pattern
getExpectedRemoveMessage
String
destination
return
Pattern
compile
protected
Pattern
getExpectedUploadMessage
File
source
String
to
return
Pattern
compile
source
getName
public
String
getAuthentication
return
authentication
public
void
setAuthentication
String
authentication
this
authentication
authentication
public
String
getHost
return
host
public
void
setHost
String
host
this
host
host
public
String
getUsername
return
username
public
void
setUsername
String
username
this
username
username
private
static
StringBuffer
chomp
StringBuffer
str
if
str
str
length
return
str
while
equals
str
substring
str
length
equals
str
substring
str
length
str
setLength
str
length
return
str
public
String
toString
return
getName
getUsername
getHost
getAuthentication
public
void
setReuseConnection
long
time
this
reuseConnection
time
public
long
getReadTimeout
return
readTimeout
public
void
setReadTimeout
long
readTimeout
this
readTimeout
readTimeout
