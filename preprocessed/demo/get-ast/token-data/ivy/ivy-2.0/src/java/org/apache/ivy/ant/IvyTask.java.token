package
org
apache
ivy
ant
import
java
text
DateFormat
import
java
text
SimpleDateFormat
import
java
util
Date
import
java
util
Locale
import
org
apache
ivy
Ivy
import
org
apache
ivy
core
IvyContext
import
org
apache
ivy
core
module
descriptor
ModuleDescriptor
import
org
apache
ivy
core
report
ResolveReport
import
org
apache
ivy
core
settings
IvySettings
import
org
apache
ivy
util
Message
import
org
apache
ivy
util
StringUtils
import
org
apache
tools
ant
BuildException
import
org
apache
tools
ant
Task
import
org
apache
tools
ant
types
Reference
public
abstract
class
IvyTask
extends
Task
public
static
final
String
ANT_PROJECT_CONTEXT_KEY
private
Boolean
validate
private
Reference
antIvyEngineRef
protected
boolean
doValidate
IvySettings
ivy
if
validate
return
validate
booleanValue
return
ivy
doValidate
public
boolean
isValidate
return
validate
validate
booleanValue
public
void
setValidate
boolean
validate
this
validate
Boolean
valueOf
validate
public
void
setSettingsRef
Reference
ref
antIvyEngineRef
ref
public
Reference
getSettingsRef
return
antIvyEngineRef
protected
IvySettings
getSettings
return
getIvyInstance
getSettings
protected
Ivy
getIvyInstance
Object
antIvyEngine
if
antIvyEngineRef
antIvyEngine
antIvyEngineRef
getReferencedObject
getProject
if
antIvyEngine
getClass
getName
equals
IvyAntSettings
class
getName
throw
new
BuildException
antIvyEngineRef
getRefId
getLocation
if
antIvyEngine
instanceof
IvyAntSettings
throw
new
BuildException
antIvyEngineRef
getRefId
getLocation
else
antIvyEngine
IvyAntSettings
getDefaultInstance
getProject
Ivy
ivy
IvyAntSettings
antIvyEngine
getConfiguredIvyInstance
AntMessageLogger
register
this
ivy
return
ivy
protected
void
setResolved
ResolveReport
report
boolean
keep
ModuleDescriptor
md
report
getModuleDescriptor
String
confs
report
getConfigurations
if
keep
getProject
addReference
report
getProject
addReference
confs
getProject
addReference
md
String
suffix
md
getModuleRevisionId
getModuleId
getOrganisation
md
getModuleRevisionId
getModuleId
getName
getProject
addReference
suffix
report
getProject
addReference
suffix
md
getProject
addReference
suffix
confs
protected
void
setResolved
ResolveReport
report
String
resolveId
boolean
keep
setResolved
report
keep
if
resolveId
ModuleDescriptor
md
report
getModuleDescriptor
String
confs
report
getConfigurations
getProject
addReference
resolveId
report
getProject
addReference
resolveId
md
getProject
addReference
resolveId
confs
protected
String
getResolvedConfigurations
String
org
String
module
boolean
strict
return
String
getReference
org
module
strict
protected
Object
getResolvedDescriptor
String
resolveId
return
getResolvedDescriptor
resolveId
protected
Object
getResolvedDescriptor
String
resolveId
boolean
strict
Object
result
getProject
getReference
resolveId
if
strict
result
throw
new
BuildException
resolveId
return
result
protected
Object
getResolvedDescriptor
String
org
String
module
return
getResolvedDescriptor
org
module
protected
Object
getResolvedDescriptor
String
org
String
module
boolean
strict
return
getReference
org
module
strict
private
Object
getReference
String
prefix
String
org
String
module
boolean
strict
Object
reference
if
org
module
reference
getProject
getReference
prefix
org
module
if
strict
reference
reference
getProject
getReference
prefix
return
reference
protected
ResolveReport
getResolvedReport
String
org
String
module
String
resolveId
ResolveReport
result
if
resolveId
result
ResolveReport
getReference
org
module
else
result
ResolveReport
getReference
resolveId
return
result
protected
String
splitConfs
String
conf
if
conf
return
String
confs
conf
split
for
int
i
i
confs
length
i
confs
i
confs
i
trim
return
confs
protected
String
mergeConfs
String
conf
return
StringUtils
join
conf
private
static
final
DateFormat
DATE_FORMAT
new
SimpleDateFormat
protected
Date
getPubDate
String
date
Date
def
if
date
if
equals
date
toLowerCase
Locale
US
return
new
Date
try
return
DATE_FORMAT
parse
date
catch
Exception
ex
throw
new
BuildException
date
else
return
def
protected
String
getProperty
String
value
IvySettings
ivy
String
name
if
value
return
getProperty
ivy
name
else
value
ivy
substitute
value
Message
debug
name
value
return
value
protected
String
getProperty
String
value
IvySettings
ivy
String
name
String
resolveId
if
resolveId
return
getProperty
value
ivy
name
else
return
getProperty
value
ivy
name
resolveId
protected
String
getProperty
IvySettings
ivy
String
name
String
resolveId
if
resolveId
return
getProperty
ivy
name
else
return
getProperty
ivy
name
resolveId
protected
String
getProperty
IvySettings
ivy
String
name
String
val
ivy
getVariable
name
if
val
val
ivy
substitute
getProject
getProperty
name
if
val
Message
debug
name
val
else
Message
debug
name
else
val
ivy
substitute
val
Message
debug
name
val
return
val
protected
void
prepareTask
getProject
setProperty
Ivy
getIvyVersion
IvyContext
pushNewCopyContext
IvyContext
getContext
setIvy
getIvyInstance
IvyContext
getContext
push
ANT_PROJECT_CONTEXT_KEY
getProject
protected
void
finalizeTask
if
IvyContext
getContext
pop
ANT_PROJECT_CONTEXT_KEY
getProject
Message
error
IvyContext
popContext
public
final
void
execute
throws
BuildException
try
prepareTask
doExecute
finally
finalizeTask
public
abstract
void
doExecute
throws
BuildException
public
String
toString
return
getClass
getName
getTaskName
protected
void
cacheAttributeNotSupported
throw
new
BuildException
