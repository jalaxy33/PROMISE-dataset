package
org
apache
ivy
core
cache
import
java
io
File
import
java
io
IOException
import
java
text
ParseException
import
java
util
Date
import
java
util
Map
import
java
util
regex
Pattern
import
org
apache
ivy
core
IvyPatternHelper
import
org
apache
ivy
core
module
descriptor
Artifact
import
org
apache
ivy
core
module
descriptor
DefaultArtifact
import
org
apache
ivy
core
module
descriptor
DependencyDescriptor
import
org
apache
ivy
core
module
descriptor
ModuleDescriptor
import
org
apache
ivy
core
module
id
ModuleRevisionId
import
org
apache
ivy
core
module
id
ModuleRules
import
org
apache
ivy
core
report
ArtifactDownloadReport
import
org
apache
ivy
core
report
DownloadStatus
import
org
apache
ivy
core
report
MetadataArtifactDownloadReport
import
org
apache
ivy
core
resolve
ResolvedModuleRevision
import
org
apache
ivy
core
settings
IvySettings
import
org
apache
ivy
plugins
IvySettingsAware
import
org
apache
ivy
plugins
lock
LockStrategy
import
org
apache
ivy
plugins
matcher
ExactPatternMatcher
import
org
apache
ivy
plugins
matcher
MapMatcher
import
org
apache
ivy
plugins
matcher
Matcher
import
org
apache
ivy
plugins
matcher
NoMatcher
import
org
apache
ivy
plugins
matcher
PatternMatcher
import
org
apache
ivy
plugins
namespace
NameSpaceHelper
import
org
apache
ivy
plugins
parser
ModuleDescriptorParser
import
org
apache
ivy
plugins
parser
ModuleDescriptorParserRegistry
import
org
apache
ivy
plugins
parser
ParserSettings
import
org
apache
ivy
plugins
parser
xml
XmlModuleDescriptorParser
import
org
apache
ivy
plugins
repository
ArtifactResourceResolver
import
org
apache
ivy
plugins
repository
ResourceDownloader
import
org
apache
ivy
plugins
repository
ResourceHelper
import
org
apache
ivy
plugins
resolver
DependencyResolver
import
org
apache
ivy
plugins
resolver
util
ResolvedResource
import
org
apache
ivy
util
Checks
import
org
apache
ivy
util
FileUtil
import
org
apache
ivy
util
Message
import
org
apache
ivy
util
PropertiesFile
public
class
DefaultRepositoryCacheManager
implements
RepositoryCacheManager
IvySettingsAware
private
static
final
String
DEFAULT_ARTIFACT_PATTERN
private
static
final
String
DEFAULT_DATA_FILE_PATTERN
private
static
final
String
DEFAULT_IVY_PATTERN
private
static
final
int
DEFAULT_MEMORY_CACHE_SIZE
private
IvySettings
settings
private
File
basedir
private
LockStrategy
lockStrategy
private
String
name
private
String
ivyPattern
private
String
dataFilePattern
DEFAULT_DATA_FILE_PATTERN
private
String
artifactPattern
private
String
lockStrategyName
private
String
changingPattern
private
String
changingMatcherName
PatternMatcher
EXACT_OR_REGEXP
private
Boolean
checkmodified
private
Boolean
useOrigin
private
ModuleRules
ttlRules
new
ModuleRules
private
Long
defaultTTL
private
ModuleDescriptorMemoryCache
memoryModuleDescrCache
public
DefaultRepositoryCacheManager
public
DefaultRepositoryCacheManager
String
name
IvySettings
settings
File
basedir
setName
name
setSettings
settings
setBasedir
basedir
public
IvySettings
getSettings
return
settings
public
void
setSettings
IvySettings
settings
this
settings
settings
public
File
getIvyFileInCache
ModuleRevisionId
mrid
String
file
IvyPatternHelper
substitute
getIvyPattern
DefaultArtifact
newIvyArtifact
mrid
return
new
File
getRepositoryCacheRoot
file
public
String
getIvyPattern
if
ivyPattern
if
settings
ivyPattern
settings
getDefaultCacheIvyPattern
if
ivyPattern
ivyPattern
DEFAULT_IVY_PATTERN
return
ivyPattern
public
String
getArtifactPattern
if
artifactPattern
if
settings
artifactPattern
settings
getDefaultCacheArtifactPattern
if
artifactPattern
artifactPattern
DEFAULT_ARTIFACT_PATTERN
return
artifactPattern
public
void
setArtifactPattern
String
artifactPattern
CacheUtil
checkCachePattern
artifactPattern
this
artifactPattern
artifactPattern
public
File
getBasedir
if
basedir
basedir
settings
getDefaultRepositoryCacheBasedir
return
basedir
public
void
setBasedir
File
cache
this
basedir
cache
public
long
getDefaultTTL
if
defaultTTL
defaultTTL
new
Long
parseDuration
settings
getVariable
return
defaultTTL
longValue
public
void
setDefaultTTL
long
defaultTTL
this
defaultTTL
new
Long
defaultTTL
public
void
setDefaultTTL
String
defaultTTL
this
defaultTTL
new
Long
parseDuration
defaultTTL
public
String
getDataFilePattern
return
dataFilePattern
public
void
setDataFilePattern
String
dataFilePattern
CacheUtil
checkCachePattern
dataFilePattern
this
dataFilePattern
dataFilePattern
public
void
setIvyPattern
String
ivyPattern
CacheUtil
checkCachePattern
ivyPattern
this
ivyPattern
ivyPattern
public
String
getName
return
name
public
void
setName
String
name
this
name
name
public
String
getChangingMatcherName
return
changingMatcherName
public
void
setChangingMatcher
String
changingMatcherName
this
changingMatcherName
changingMatcherName
public
String
getChangingPattern
return
changingPattern
public
void
setChangingPattern
String
changingPattern
this
changingPattern
changingPattern
public
void
addTTL
Map
attributes
PatternMatcher
matcher
long
duration
ttlRules
defineRule
new
MapMatcher
attributes
matcher
new
Long
duration
public
void
addConfiguredTtl
Map
attributes
String
duration
String
attributes
remove
if
duration
throw
new
IllegalArgumentException
String
matcher
String
attributes
remove
addTTL
attributes
matcher
ExactPatternMatcher
INSTANCE
settings
getMatcher
matcher
parseDuration
duration
public
void
setMemorySize
int
size
memoryModuleDescrCache
new
ModuleDescriptorMemoryCache
size
public
ModuleDescriptorMemoryCache
getMemoryCache
if
memoryModuleDescrCache
memoryModuleDescrCache
new
ModuleDescriptorMemoryCache
DEFAULT_MEMORY_CACHE_SIZE
return
memoryModuleDescrCache
private
static
final
Pattern
DURATION_PATTERN
Pattern
compile
private
static
final
int
MILLIS_IN_SECONDS
private
static
final
int
MILLIS_IN_MINUTES
MILLIS_IN_SECONDS
private
static
final
int
MILLIS_IN_HOUR
MILLIS_IN_MINUTES
private
static
final
int
MILLIS_IN_DAY
MILLIS_IN_HOUR
private
long
parseDuration
String
duration
if
duration
return
java
util
regex
Matcher
m
DURATION_PATTERN
matcher
duration
if
m
matches
int
days
getGroupIntValue
m
int
hours
getGroupIntValue
m
int
minutes
getGroupIntValue
m
int
seconds
getGroupIntValue
m
int
millis
getGroupIntValue
m
return
days
MILLIS_IN_DAY
hours
MILLIS_IN_HOUR
minutes
MILLIS_IN_MINUTES
seconds
MILLIS_IN_SECONDS
millis
else
throw
new
IllegalArgumentException
duration
DURATION_PATTERN
pattern
private
int
getGroupIntValue
java
util
regex
Matcher
m
int
groupNumber
String
g
m
group
groupNumber
return
g
g
length
Integer
parseInt
g
public
boolean
isCheckmodified
if
checkmodified
if
getSettings
String
check
getSettings
getVariable
return
check
Boolean
valueOf
check
booleanValue
else
return
else
return
checkmodified
booleanValue
public
void
setCheckmodified
boolean
check
checkmodified
Boolean
valueOf
check
public
boolean
isUseOrigin
if
useOrigin
if
getSettings
return
getSettings
isDefaultUseOrigin
else
return
else
return
useOrigin
booleanValue
public
void
setUseOrigin
boolean
b
useOrigin
Boolean
valueOf
b
public
File
getArchiveFileInCache
Artifact
artifact
ArtifactOrigin
origin
getSavedArtifactOrigin
artifact
return
getArchiveFileInCache
artifact
origin
public
File
getArchiveFileInCache
Artifact
artifact
ArtifactOrigin
origin
File
archive
new
File
getRepositoryCacheRoot
getArchivePathInCache
artifact
origin
if
archive
exists
ArtifactOrigin
isUnknown
origin
origin
isLocal
File
original
Checks
checkAbsolute
origin
getLocation
artifact
if
original
exists
return
original
return
archive
private
File
getArchiveFileInCache
Artifact
artifact
ArtifactOrigin
origin
boolean
useOrigin
if
useOrigin
ArtifactOrigin
isUnknown
origin
origin
isLocal
return
Checks
checkAbsolute
origin
getLocation
artifact
else
return
new
File
getRepositoryCacheRoot
getArchivePathInCache
artifact
origin
public
String
getArchivePathInCache
Artifact
artifact
return
IvyPatternHelper
substitute
getArtifactPattern
artifact
public
String
getArchivePathInCache
Artifact
artifact
ArtifactOrigin
origin
if
isOriginalMetadataArtifact
artifact
return
IvyPatternHelper
substitute
getIvyPattern
artifact
origin
else
return
IvyPatternHelper
substitute
getArtifactPattern
artifact
origin
private
void
saveResolver
ModuleDescriptor
md
String
name
PropertiesFile
cdf
getCachedDataFile
md
cdf
setProperty
name
cdf
save
public
void
saveResolvers
ModuleDescriptor
md
String
metadataResolverName
String
artifactResolverName
ModuleRevisionId
mrid
md
getResolvedModuleRevisionId
if
lockMetadataArtifact
mrid
Message
error
mrid
return
try
PropertiesFile
cdf
getCachedDataFile
md
cdf
setProperty
metadataResolverName
cdf
setProperty
artifactResolverName
cdf
save
finally
unlockMetadataArtifact
mrid
private
String
getSavedResolverName
ModuleDescriptor
md
PropertiesFile
cdf
getCachedDataFile
md
return
cdf
getProperty
private
String
getSavedArtResolverName
ModuleDescriptor
md
PropertiesFile
cdf
getCachedDataFile
md
return
cdf
getProperty
void
saveArtifactOrigin
Artifact
artifact
ArtifactOrigin
origin
PropertiesFile
cdf
getCachedDataFile
artifact
getModuleRevisionId
cdf
setProperty
getIsLocalKey
artifact
String
valueOf
origin
isLocal
cdf
setProperty
getLocationKey
artifact
origin
getLocation
cdf
save
private
void
removeSavedArtifactOrigin
Artifact
artifact
PropertiesFile
cdf
getCachedDataFile
artifact
getModuleRevisionId
cdf
remove
getLocationKey
artifact
cdf
remove
getIsLocalKey
artifact
cdf
save
public
ArtifactOrigin
getSavedArtifactOrigin
Artifact
artifact
ModuleRevisionId
mrid
artifact
getModuleRevisionId
if
lockMetadataArtifact
mrid
Message
error
mrid
return
ArtifactOrigin
unkwnown
artifact
try
PropertiesFile
cdf
getCachedDataFile
artifact
getModuleRevisionId
String
location
cdf
getProperty
getLocationKey
artifact
String
local
cdf
getProperty
getIsLocalKey
artifact
boolean
isLocal
Boolean
valueOf
local
booleanValue
if
location
return
ArtifactOrigin
unkwnown
artifact
return
new
ArtifactOrigin
artifact
isLocal
location
finally
unlockMetadataArtifact
mrid
private
String
getPrefixKey
Artifact
artifact
int
hashCode
artifact
getId
hashCode
return
artifact
getName
artifact
getType
artifact
getExt
hashCode
private
String
getLocationKey
Artifact
artifact
String
prefix
getPrefixKey
artifact
return
prefix
private
String
getIsLocalKey
Artifact
artifact
String
prefix
getPrefixKey
artifact
return
prefix
private
PropertiesFile
getCachedDataFile
ModuleDescriptor
md
return
getCachedDataFile
md
getResolvedModuleRevisionId
private
PropertiesFile
getCachedDataFile
ModuleRevisionId
mRevId
return
new
PropertiesFile
new
File
getRepositoryCacheRoot
IvyPatternHelper
substitute
getDataFilePattern
mRevId
mRevId
public
ResolvedModuleRevision
findModuleInCache
DependencyDescriptor
dd
ModuleRevisionId
requestedRevisionId
CacheMetadataOptions
options
String
expectedResolver
ModuleRevisionId
mrid
requestedRevisionId
if
isCheckmodified
dd
requestedRevisionId
options
Message
verbose
mrid
return
if
isChanging
dd
requestedRevisionId
options
Message
verbose
mrid
return
return
doFindModuleInCache
mrid
options
expectedResolver
private
ResolvedModuleRevision
doFindModuleInCache
ModuleRevisionId
mrid
CacheMetadataOptions
options
String
expectedResolver
if
lockMetadataArtifact
mrid
Message
error
mrid
return
try
if
settings
getVersionMatcher
isDynamic
mrid
String
resolvedRevision
getResolvedRevision
mrid
options
if
resolvedRevision
Message
verbose
mrid
resolvedRevision
mrid
ModuleRevisionId
newInstance
mrid
resolvedRevision
else
return
File
ivyFile
getIvyFileInCache
mrid
if
ivyFile
exists
try
XmlModuleDescriptorParser
parser
XmlModuleDescriptorParser
getInstance
ModuleDescriptor
depMD
getMdFromCache
parser
options
ivyFile
String
resolverName
getSavedResolverName
depMD
String
artResolverName
getSavedArtResolverName
depMD
DependencyResolver
resolver
settings
getResolver
resolverName
if
resolver
Message
debug
resolverName
mrid
resolver
settings
getResolver
depMD
getResolvedModuleRevisionId
if
resolver
Message
debug
depMD
getResolvedModuleRevisionId
resolver
getName
saveResolver
depMD
resolver
getName
DependencyResolver
artResolver
settings
getResolver
artResolverName
if
artResolver
artResolver
resolver
if
resolver
Message
debug
mrid
resolver
getName
ivyFile
if
expectedResolver
expectedResolver
equals
resolver
getName
MetadataArtifactDownloadReport
madr
new
MetadataArtifactDownloadReport
depMD
getMetadataArtifact
madr
setDownloadStatus
DownloadStatus
NO
madr
setSearched
madr
setLocalFile
ivyFile
madr
setSize
ivyFile
length
madr
setArtifactOrigin
getSavedArtifactOrigin
depMD
getMetadataArtifact
return
new
ResolvedModuleRevision
resolver
artResolver
depMD
madr
else
Message
debug
mrid
expectedResolver
resolver
getName
else
Message
debug
resolverName
mrid
catch
Exception
e
Message
debug
mrid
e
getMessage
else
Message
debug
mrid
ivyFile
finally
unlockMetadataArtifact
mrid
return
private
class
MyModuleDescriptorProvider
implements
ModuleDescriptorProvider
private
final
ModuleDescriptorParser
mdParser
public
MyModuleDescriptorProvider
ModuleDescriptorParser
mdParser
this
mdParser
mdParser
public
ModuleDescriptor
provideModule
ParserSettings
ivySettings
File
descriptorURL
boolean
validate
throws
ParseException
IOException
return
mdParser
parseDescriptor
ivySettings
descriptorURL
toURI
toURL
validate
private
ModuleDescriptor
getMdFromCache
XmlModuleDescriptorParser
mdParser
CacheMetadataOptions
options
File
ivyFile
throws
ParseException
IOException
ModuleDescriptorMemoryCache
cache
getMemoryCache
ModuleDescriptorProvider
mdProvider
new
MyModuleDescriptorProvider
mdParser
return
cache
get
ivyFile
settings
options
isValidate
mdProvider
private
ModuleDescriptor
getStaledMd
ModuleDescriptorParser
mdParser
CacheMetadataOptions
options
File
ivyFile
throws
ParseException
IOException
ModuleDescriptorMemoryCache
cache
getMemoryCache
ModuleDescriptorProvider
mdProvider
new
MyModuleDescriptorProvider
mdParser
return
cache
getStale
ivyFile
settings
options
isValidate
mdProvider
private
String
getResolvedRevision
ModuleRevisionId
mrid
CacheMetadataOptions
options
if
lockMetadataArtifact
mrid
Message
error
mrid
return
try
String
resolvedRevision
if
options
isForce
Message
verbose
mrid
return
PropertiesFile
cachedResolvedRevision
getCachedDataFile
mrid
String
expiration
cachedResolvedRevision
getProperty
if
expiration
Message
verbose
mrid
return
if
System
currentTimeMillis
Long
parseLong
expiration
Message
verbose
mrid
return
resolvedRevision
cachedResolvedRevision
getProperty
if
resolvedRevision
Message
verbose
mrid
return
return
resolvedRevision
finally
unlockMetadataArtifact
mrid
private
void
saveResolvedRevision
ModuleRevisionId
mrid
String
revision
if
lockMetadataArtifact
mrid
Message
error
mrid
return
try
PropertiesFile
cachedResolvedRevision
getCachedDataFile
mrid
cachedResolvedRevision
setProperty
getExpiration
mrid
cachedResolvedRevision
setProperty
revision
cachedResolvedRevision
save
finally
unlockMetadataArtifact
mrid
private
String
getExpiration
ModuleRevisionId
mrid
return
String
valueOf
System
currentTimeMillis
getTTL
mrid
public
long
getTTL
ModuleRevisionId
mrid
Long
ttl
Long
ttlRules
getRule
mrid
return
ttl
getDefaultTTL
ttl
longValue
public
String
toString
return
name
public
File
getRepositoryCacheRoot
return
getBasedir
public
LockStrategy
getLockStrategy
if
lockStrategy
if
lockStrategyName
lockStrategy
settings
getLockStrategy
lockStrategyName
else
lockStrategy
settings
getDefaultLockStrategy
return
lockStrategy
public
void
setLockStrategy
LockStrategy
lockStrategy
this
lockStrategy
lockStrategy
public
void
setLockStrategy
String
lockStrategyName
this
lockStrategyName
lockStrategyName
public
ArtifactDownloadReport
download
Artifact
artifact
ArtifactResourceResolver
resourceResolver
ResourceDownloader
resourceDownloader
CacheDownloadOptions
options
final
ArtifactDownloadReport
adr
new
ArtifactDownloadReport
artifact
boolean
useOrigin
isUseOrigin
ModuleRevisionId
mrid
artifact
getModuleRevisionId
if
lockMetadataArtifact
mrid
adr
setDownloadStatus
DownloadStatus
FAILED
adr
setDownloadDetails
mrid
return
adr
try
DownloadListener
listener
options
getListener
if
listener
listener
needArtifact
this
artifact
ArtifactOrigin
origin
getSavedArtifactOrigin
artifact
File
archiveFile
getArchiveFileInCache
artifact
origin
useOrigin
if
archiveFile
exists
options
isForce
adr
setDownloadStatus
DownloadStatus
NO
adr
setSize
archiveFile
length
adr
setArtifactOrigin
origin
adr
setLocalFile
archiveFile
else
long
start
System
currentTimeMillis
try
ResolvedResource
artifactRef
resourceResolver
resolve
artifact
if
artifactRef
origin
new
ArtifactOrigin
artifact
artifactRef
getResource
isLocal
artifactRef
getResource
getName
if
useOrigin
artifactRef
getResource
isLocal
saveArtifactOrigin
artifact
origin
archiveFile
getArchiveFileInCache
artifact
origin
adr
setDownloadStatus
DownloadStatus
NO
adr
setSize
archiveFile
length
adr
setArtifactOrigin
origin
adr
setLocalFile
archiveFile
else
archiveFile
getArchiveFileInCache
artifact
origin
useOrigin
if
ResourceHelper
equals
artifactRef
getResource
archiveFile
throw
new
IllegalStateException
resourceResolver
if
listener
listener
startArtifactDownload
this
artifactRef
artifact
origin
resourceDownloader
download
artifact
artifactRef
getResource
archiveFile
adr
setSize
archiveFile
length
saveArtifactOrigin
artifact
origin
adr
setDownloadTimeMillis
System
currentTimeMillis
start
adr
setDownloadStatus
DownloadStatus
SUCCESSFUL
adr
setArtifactOrigin
origin
adr
setLocalFile
archiveFile
else
adr
setDownloadStatus
DownloadStatus
FAILED
adr
setDownloadDetails
ArtifactDownloadReport
MISSING_ARTIFACT
adr
setDownloadTimeMillis
System
currentTimeMillis
start
catch
Exception
ex
adr
setDownloadStatus
DownloadStatus
FAILED
adr
setDownloadDetails
ex
getMessage
adr
setDownloadTimeMillis
System
currentTimeMillis
start
if
listener
listener
endArtifactDownload
this
artifact
adr
archiveFile
return
adr
finally
unlockMetadataArtifact
mrid
public
void
originalToCachedModuleDescriptor
DependencyResolver
resolver
ResolvedResource
orginalMetadataRef
Artifact
requestedMetadataArtifact
ResolvedModuleRevision
rmr
ModuleDescriptorWriter
writer
ModuleDescriptor
md
rmr
getDescriptor
Artifact
originalMetadataArtifact
getOriginalMetadataArtifact
requestedMetadataArtifact
File
mdFileInCache
getIvyFileInCache
md
getResolvedModuleRevisionId
ModuleRevisionId
mrid
requestedMetadataArtifact
getModuleRevisionId
if
lockMetadataArtifact
mrid
Message
warn
mrid
return
try
File
originalFileInCache
getArchiveFileInCache
originalMetadataArtifact
writer
write
orginalMetadataRef
md
originalFileInCache
mdFileInCache
saveResolvers
md
resolver
getName
resolver
getName
if
getSettings
getVersionMatcher
isDynamic
md
getModuleRevisionId
getTTL
md
getModuleRevisionId
saveResolvedRevision
md
getModuleRevisionId
rmr
getId
getRevision
if
md
isDefault
rmr
getReport
setOriginalLocalFile
originalFileInCache
rmr
getReport
setLocalFile
mdFileInCache
catch
RuntimeException
e
throw
e
catch
Exception
e
Message
warn
orginalMetadataRef
String
valueOf
md
getResolvedModuleRevisionId
String
valueOf
orginalMetadataRef
e
getClass
getName
e
getMessage
finally
unlockMetadataArtifact
mrid
public
ResolvedModuleRevision
cacheModuleDescriptor
DependencyResolver
resolver
final
ResolvedResource
mdRef
DependencyDescriptor
dd
Artifact
moduleArtifact
ResourceDownloader
downloader
CacheMetadataOptions
options
throws
ParseException
ModuleDescriptorParser
parser
ModuleDescriptorParserRegistry
getInstance
getParser
mdRef
getResource
Date
cachedPublicationDate
ArtifactDownloadReport
report
ModuleRevisionId
mrid
moduleArtifact
getModuleRevisionId
Artifact
originalMetadataArtifact
getOriginalMetadataArtifact
moduleArtifact
if
lockMetadataArtifact
mrid
Message
error
mrid
return
try
ResolvedModuleRevision
rmr
doFindModuleInCache
mrid
options
if
rmr
if
rmr
getDescriptor
isDefault
rmr
getResolver
resolver
Message
verbose
getName
mrid
rmr
getResolver
getName
else
if
isCheckmodified
dd
mrid
options
isChanging
dd
mrid
options
Message
verbose
getName
mrid
rmr
getReport
setSearched
return
rmr
long
repLastModified
mdRef
getLastModified
long
cacheLastModified
rmr
getDescriptor
getLastModified
if
rmr
getDescriptor
isDefault
repLastModified
cacheLastModified
Message
verbose
getName
mrid
rmr
getReport
setSearched
return
rmr
else
Message
verbose
getName
mrid
if
isChanging
dd
mrid
options
cachedPublicationDate
rmr
getDescriptor
getResolvedPublicationDate
report
download
originalMetadataArtifact
new
ArtifactResourceResolver
public
ResolvedResource
resolve
Artifact
artifact
return
mdRef
downloader
new
CacheDownloadOptions
setListener
options
getListener
setForce
Message
verbose
report
if
report
getDownloadStatus
DownloadStatus
FAILED
Message
warn
mdRef
getResource
report
getDownloadDetails
report
getDownloadTimeMillis
return
try
ModuleDescriptor
md
getStaledMd
parser
options
report
getLocalFile
if
md
throw
new
IllegalStateException
parser
parser
getClass
getName
mdRef
getResource
Message
debug
getName
mrid
md
getModuleRevisionId
boolean
deleteOldArtifacts
if
cachedPublicationDate
cachedPublicationDate
equals
md
getResolvedPublicationDate
Message
verbose
mrid
deleteOldArtifacts
if
deleteOldArtifacts
String
confs
md
getConfigurationsNames
for
int
i
i
confs
length
i
Artifact
arts
md
getArtifacts
confs
i
for
int
j
j
arts
length
j
Artifact
transformedArtifact
NameSpaceHelper
transform
arts
j
options
getNamespace
getToSystemTransformer
ArtifactOrigin
origin
getSavedArtifactOrigin
transformedArtifact
File
artFile
getArchiveFileInCache
transformedArtifact
origin
if
artFile
exists
Message
debug
artFile
artFile
delete
removeSavedArtifactOrigin
transformedArtifact
else
if
isChanging
dd
mrid
options
Message
verbose
mrid
MetadataArtifactDownloadReport
madr
new
MetadataArtifactDownloadReport
md
getMetadataArtifact
madr
setSearched
madr
setDownloadStatus
report
getDownloadStatus
madr
setDownloadDetails
report
getDownloadDetails
madr
setArtifactOrigin
report
getArtifactOrigin
madr
setDownloadTimeMillis
report
getDownloadTimeMillis
madr
setOriginalLocalFile
report
getLocalFile
madr
setSize
report
getSize
saveArtifactOrigin
md
getMetadataArtifact
report
getArtifactOrigin
return
new
ResolvedModuleRevision
resolver
resolver
md
madr
catch
IOException
ex
Message
warn
mdRef
getResource
ex
getMessage
return
finally
unlockMetadataArtifact
mrid
private
boolean
lockMetadataArtifact
ModuleRevisionId
mrid
Artifact
artifact
getDefaultMetadataArtifact
mrid
try
return
getLockStrategy
lockArtifact
artifact
getArchiveFileInCache
artifact
getDefaultMetadataArtifactOrigin
mrid
catch
InterruptedException
e
Thread
currentThread
interrupt
throw
new
RuntimeException
private
void
unlockMetadataArtifact
ModuleRevisionId
mrid
Artifact
artifact
getDefaultMetadataArtifact
mrid
getLockStrategy
unlockArtifact
artifact
getArchiveFileInCache
artifact
getDefaultMetadataArtifactOrigin
mrid
private
ArtifactOrigin
getDefaultMetadataArtifactOrigin
ModuleRevisionId
mrid
return
new
ArtifactOrigin
DefaultArtifact
newIvyArtifact
mrid
getIvyFileInCache
mrid
getPath
private
Artifact
getDefaultMetadataArtifact
ModuleRevisionId
mrid
return
new
DefaultArtifact
mrid
new
Date
public
Artifact
getOriginalMetadataArtifact
Artifact
moduleArtifact
return
DefaultArtifact
cloneWithAnotherType
moduleArtifact
moduleArtifact
getType
private
boolean
isOriginalMetadataArtifact
Artifact
artifact
return
artifact
isMetadata
artifact
getType
endsWith
private
boolean
isChanging
DependencyDescriptor
dd
ModuleRevisionId
requestedRevisionId
CacheMetadataOptions
options
return
dd
isChanging
getChangingMatcher
options
matches
requestedRevisionId
getRevision
private
Matcher
getChangingMatcher
CacheMetadataOptions
options
String
changingPattern
options
getChangingPattern
options
getChangingPattern
this
changingPattern
if
changingPattern
return
NoMatcher
INSTANCE
String
changingMatcherName
options
getChangingMatcherName
options
getChangingMatcherName
this
changingMatcherName
PatternMatcher
matcher
settings
getMatcher
changingMatcherName
if
matcher
throw
new
IllegalStateException
changingMatcherName
this
return
matcher
getMatcher
changingPattern
private
boolean
isCheckmodified
DependencyDescriptor
dd
ModuleRevisionId
requestedRevisionId
CacheMetadataOptions
options
if
options
isCheckmodified
return
options
isCheckmodified
booleanValue
return
isCheckmodified
public
void
clean
FileUtil
forceDelete
getBasedir
public
void
dumpSettings
Message
verbose
getName
Message
debug
getIvyPattern
Message
debug
getArtifactPattern
Message
debug
getLockStrategy
getName
Message
debug
getChangingPattern
Message
debug
getChangingMatcherName
