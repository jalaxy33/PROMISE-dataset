package
org
apache
ivy
plugins
resolver
import
java
io
File
import
java
io
FileInputStream
import
java
io
IOException
import
java
net
URL
import
java
text
ParseException
import
java
text
SimpleDateFormat
import
java
util
ArrayList
import
java
util
Arrays
import
java
util
Collection
import
java
util
Collections
import
java
util
Date
import
java
util
HashMap
import
java
util
Iterator
import
java
util
List
import
java
util
ListIterator
import
java
util
Map
import
java
util
Map
Entry
import
org
apache
ivy
core
IvyContext
import
org
apache
ivy
core
IvyPatternHelper
import
org
apache
ivy
core
LogOptions
import
org
apache
ivy
core
cache
ArtifactOrigin
import
org
apache
ivy
core
cache
ModuleDescriptorWriter
import
org
apache
ivy
core
cache
RepositoryCacheManager
import
org
apache
ivy
core
module
descriptor
Artifact
import
org
apache
ivy
core
module
descriptor
DefaultModuleDescriptor
import
org
apache
ivy
core
module
descriptor
DependencyDescriptor
import
org
apache
ivy
core
module
descriptor
ModuleDescriptor
import
org
apache
ivy
core
module
id
ModuleId
import
org
apache
ivy
core
module
id
ModuleRevisionId
import
org
apache
ivy
core
report
ArtifactDownloadReport
import
org
apache
ivy
core
report
DownloadReport
import
org
apache
ivy
core
report
DownloadStatus
import
org
apache
ivy
core
report
MetadataArtifactDownloadReport
import
org
apache
ivy
core
resolve
DownloadOptions
import
org
apache
ivy
core
resolve
IvyNode
import
org
apache
ivy
core
resolve
ResolveData
import
org
apache
ivy
core
resolve
ResolvedModuleRevision
import
org
apache
ivy
core
search
ModuleEntry
import
org
apache
ivy
core
search
OrganisationEntry
import
org
apache
ivy
core
search
RevisionEntry
import
org
apache
ivy
plugins
parser
ModuleDescriptorParser
import
org
apache
ivy
plugins
parser
ModuleDescriptorParserRegistry
import
org
apache
ivy
plugins
parser
xml
XmlModuleDescriptorWriter
import
org
apache
ivy
plugins
repository
ArtifactResourceResolver
import
org
apache
ivy
plugins
repository
Resource
import
org
apache
ivy
plugins
repository
ResourceDownloader
import
org
apache
ivy
plugins
repository
file
FileRepository
import
org
apache
ivy
plugins
repository
file
FileResource
import
org
apache
ivy
plugins
repository
url
URLRepository
import
org
apache
ivy
plugins
repository
url
URLResource
import
org
apache
ivy
plugins
resolver
util
MDResolvedResource
import
org
apache
ivy
plugins
resolver
util
ResolvedResource
import
org
apache
ivy
plugins
resolver
util
ResourceMDParser
import
org
apache
ivy
util
Checks
import
org
apache
ivy
util
ChecksumHelper
import
org
apache
ivy
util
HostUtil
import
org
apache
ivy
util
Message
public
abstract
class
BasicResolver
extends
AbstractResolver
public
static
final
String
DESCRIPTOR_OPTIONAL
public
static
final
String
DESCRIPTOR_REQUIRED
private
static
class
UnresolvedDependencyException
extends
RuntimeException
private
boolean
error
public
UnresolvedDependencyException
this
public
UnresolvedDependencyException
String
message
this
message
public
UnresolvedDependencyException
String
message
boolean
error
super
message
this
error
error
public
boolean
isError
return
error
public
static
final
SimpleDateFormat
DATE_FORMAT
new
SimpleDateFormat
private
String
workspaceName
private
boolean
envDependent
private
List
ivyattempts
new
ArrayList
private
Map
artattempts
new
HashMap
private
boolean
checkconsistency
private
boolean
allownomd
private
boolean
force
private
String
checksums
private
URLRepository
extartifactrep
new
URLRepository
public
BasicResolver
workspaceName
HostUtil
getLocalHostName
public
String
getWorkspaceName
return
workspaceName
public
void
setWorkspaceName
String
workspaceName
this
workspaceName
workspaceName
public
boolean
isEnvDependent
return
envDependent
public
void
setEnvDependent
boolean
envDependent
this
envDependent
envDependent
public
ResolvedModuleRevision
getDependency
DependencyDescriptor
dd
ResolveData
data
throws
ParseException
IvyContext
context
IvyContext
pushNewCopyContext
try
ResolvedModuleRevision
mr
data
getCurrentResolvedModuleRevision
if
mr
if
shouldReturnResolvedModule
dd
mr
return
mr
if
isForce
dd
dd
clone
ModuleRevisionId
newInstance
dd
getDependencyRevisionId
DependencyDescriptor
systemDd
dd
DependencyDescriptor
nsDd
fromSystem
dd
context
setDependencyDescriptor
systemDd
context
setResolveData
data
clearIvyAttempts
clearArtifactAttempts
ModuleRevisionId
systemMrid
systemDd
getDependencyRevisionId
ModuleRevisionId
nsMrid
nsDd
getDependencyRevisionId
checkRevision
systemMrid
boolean
isDynamic
getAndCheckIsDynamic
systemMrid
ResolvedModuleRevision
rmr
rmr
findModuleInCache
systemDd
data
if
rmr
if
rmr
getDescriptor
isDefault
rmr
getResolver
this
Message
verbose
getName
systemMrid
rmr
getResolver
getName
else
if
isForce
rmr
getResolver
this
Message
verbose
getName
systemMrid
rmr
getResolver
getName
else
Message
verbose
getName
systemMrid
return
checkLatest
checkForcedResolvedModuleRevision
rmr
data
checkInterrupted
ResolvedResource
ivyRef
findIvyFileRef
nsDd
data
checkInterrupted
ModuleDescriptor
nsMd
ModuleDescriptor
systemMd
if
ivyRef
if
isAllownomd
throw
new
UnresolvedDependencyException
getName
systemMrid
nsMd
DefaultModuleDescriptor
newDefaultInstance
nsMrid
nsDd
getAllDependencyArtifacts
ResolvedResource
artifactRef
findFirstArtifactRef
nsMd
nsDd
data
checkInterrupted
if
artifactRef
throw
new
UnresolvedDependencyException
getName
systemMrid
else
long
lastModified
artifactRef
getLastModified
if
lastModified
nsMd
instanceof
DefaultModuleDescriptor
DefaultModuleDescriptor
nsMd
setLastModified
lastModified
Message
verbose
getName
systemMrid
if
isDynamic
nsMd
setResolvedModuleRevisionId
ModuleRevisionId
newInstance
nsMrid
artifactRef
getRevision
systemMd
toSystem
nsMd
MetadataArtifactDownloadReport
madr
new
MetadataArtifactDownloadReport
systemMd
getMetadataArtifact
madr
setDownloadStatus
DownloadStatus
NO
madr
setSearched
rmr
new
ResolvedModuleRevision
this
this
systemMd
madr
isForce
else
if
ivyRef
instanceof
MDResolvedResource
rmr
MDResolvedResource
ivyRef
getResolvedModuleRevision
if
rmr
rmr
parse
ivyRef
systemDd
data
if
rmr
throw
new
UnresolvedDependencyException
if
rmr
getReport
isDownloaded
rmr
getReport
getLocalFile
return
checkLatest
checkForcedResolvedModuleRevision
rmr
data
else
nsMd
rmr
getDescriptor
systemMd
toSystem
nsMd
if
isCheckconsistency
checkDescriptorConsistency
systemMrid
systemMd
ivyRef
checkDescriptorConsistency
nsMrid
nsMd
ivyRef
else
if
systemMd
instanceof
DefaultModuleDescriptor
DefaultModuleDescriptor
defaultMd
DefaultModuleDescriptor
systemMd
ModuleRevisionId
revision
getRevision
ivyRef
systemMrid
systemMd
defaultMd
setModuleRevisionId
revision
defaultMd
setResolvedModuleRevisionId
revision
else
Message
warn
checkDescriptorConsistency
nsMrid
nsMd
ivyRef
checkDescriptorConsistency
systemMrid
systemMd
ivyRef
rmr
new
ResolvedModuleRevision
this
this
systemMd
toSystem
rmr
getReport
isForce
resolveAndCheckRevision
systemMd
systemMrid
ivyRef
isDynamic
resolveAndCheckPublicationDate
systemDd
systemMd
systemMrid
data
checkNotConvertedExclusionRule
systemMd
ivyRef
data
cacheModuleDescriptor
systemMd
systemMrid
ivyRef
rmr
return
checkLatest
checkForcedResolvedModuleRevision
rmr
data
catch
UnresolvedDependencyException
ex
if
ex
getMessage
length
if
ex
isError
Message
error
ex
getMessage
else
Message
verbose
ex
getMessage
return
data
getCurrentResolvedModuleRevision
finally
IvyContext
popContext
protected
boolean
shouldReturnResolvedModule
DependencyDescriptor
dd
ResolvedModuleRevision
mr
ModuleRevisionId
mrid
dd
getDependencyRevisionId
boolean
isDynamic
getSettings
getVersionMatcher
isDynamic
mrid
boolean
shouldReturn
mr
isForce
shouldReturn
isDynamic
mr
getDescriptor
isDefault
shouldReturn
isForce
return
shouldReturn
private
ResolvedModuleRevision
checkForcedResolvedModuleRevision
ResolvedModuleRevision
rmr
if
rmr
return
if
isForce
rmr
isForce
return
rmr
return
new
ResolvedModuleRevision
rmr
getResolver
rmr
getArtifactResolver
rmr
getDescriptor
rmr
getReport
private
void
cacheModuleDescriptor
ModuleDescriptor
systemMd
ModuleRevisionId
systemMrid
ResolvedResource
ivyRef
ResolvedModuleRevision
rmr
RepositoryCacheManager
cacheManager
getRepositoryCacheManager
final
ModuleDescriptorParser
parser
systemMd
getParser
Artifact
requestedMetadataArtifact
ivyRef
systemMd
getMetadataArtifact
parser
getMetadataArtifact
ModuleRevisionId
newInstance
systemMrid
ivyRef
getRevision
ivyRef
getResource
cacheManager
originalToCachedModuleDescriptor
this
ivyRef
requestedMetadataArtifact
rmr
new
ModuleDescriptorWriter
public
void
write
ResolvedResource
originalMdResource
ModuleDescriptor
md
File
src
File
dest
throws
IOException
ParseException
if
originalMdResource
XmlModuleDescriptorWriter
write
md
dest
else
parser
toIvyFile
new
FileInputStream
src
originalMdResource
getResource
dest
md
long
repLastModified
originalMdResource
getLastModified
if
repLastModified
dest
setLastModified
repLastModified
private
void
checkNotConvertedExclusionRule
ModuleDescriptor
systemMd
ResolvedResource
ivyRef
ResolveData
data
if
systemMd
isDefault
data
getSettings
logNotConvertedExclusionRule
systemMd
instanceof
DefaultModuleDescriptor
DefaultModuleDescriptor
dmd
DefaultModuleDescriptor
systemMd
if
dmd
isNamespaceUseful
Message
warn
ivyRef
getResource
getNamespace
getName
private
void
resolveAndCheckPublicationDate
DependencyDescriptor
systemDd
ModuleDescriptor
systemMd
ModuleRevisionId
systemMrid
ResolveData
data
if
data
getDate
long
pubDate
getPublicationDate
systemMd
systemDd
data
if
pubDate
data
getDate
getTime
throw
new
UnresolvedDependencyException
getName
new
Date
pubDate
data
getDate
else
if
pubDate
throw
new
UnresolvedDependencyException
getName
systemMrid
systemMd
setResolvedPublicationDate
new
Date
pubDate
private
void
checkModuleDescriptorRevision
ModuleDescriptor
systemMd
ModuleRevisionId
systemMrid
if
getSettings
getVersionMatcher
accept
systemMrid
systemMd
throw
new
UnresolvedDependencyException
getName
systemMd
getResolvedModuleRevisionId
getRevision
systemMrid
getRevision
private
boolean
getAndCheckIsDynamic
ModuleRevisionId
systemMrid
boolean
isDynamic
getSettings
getVersionMatcher
isDynamic
systemMrid
if
isDynamic
acceptLatest
throw
new
UnresolvedDependencyException
getClass
getName
systemMrid
return
isDynamic
private
void
checkRevision
ModuleRevisionId
systemMrid
int
index
systemMrid
getRevision
indexOf
if
index
systemMrid
getRevision
substring
index
equals
workspaceName
throw
new
UnresolvedDependencyException
getName
systemMrid
getRevision
private
void
resolveAndCheckRevision
ModuleDescriptor
systemMd
ModuleRevisionId
dependencyConstraint
ResolvedResource
ivyRef
boolean
isDynamic
ModuleRevisionId
resolvedMrid
systemMd
getResolvedModuleRevisionId
if
resolvedMrid
getRevision
resolvedMrid
getRevision
length
resolvedMrid
getRevision
startsWith
if
isDynamic
resolvedMrid
ModuleRevisionId
newInstance
resolvedMrid
dependencyConstraint
getRevision
else
if
ivyRef
resolvedMrid
systemMd
getMetadataArtifact
getModuleRevisionId
else
if
ivyRef
getRevision
ivyRef
getRevision
length
resolvedMrid
ModuleRevisionId
newInstance
resolvedMrid
getName
else
resolvedMrid
ModuleRevisionId
newInstance
resolvedMrid
ivyRef
getRevision
if
isDynamic
Message
verbose
toSystem
resolvedMrid
getRevision
dependencyConstraint
getModuleId
systemMd
setResolvedModuleRevisionId
resolvedMrid
checkModuleDescriptorRevision
systemMd
dependencyConstraint
private
ModuleRevisionId
getRevision
ResolvedResource
ivyRef
ModuleRevisionId
askedMrid
ModuleDescriptor
md
throws
ParseException
Map
allAttributes
new
HashMap
allAttributes
putAll
md
getQualifiedExtraAttributes
allAttributes
putAll
askedMrid
getQualifiedExtraAttributes
String
revision
ivyRef
getRevision
if
revision
Message
debug
askedMrid
if
getSettings
getVersionMatcher
isDynamic
askedMrid
if
md
getModuleRevisionId
getRevision
revision
getName
else
Message
debug
askedMrid
revision
askedMrid
getRevision
else
Message
debug
askedMrid
revision
askedMrid
getRevision
return
ModuleRevisionId
newInstance
askedMrid
getOrganisation
askedMrid
getName
askedMrid
getBranch
revision
allAttributes
public
ResolvedModuleRevision
parse
final
ResolvedResource
mdRef
DependencyDescriptor
dd
ResolveData
data
throws
ParseException
DependencyDescriptor
nsDd
dd
dd
toSystem
nsDd
ModuleRevisionId
mrid
dd
getDependencyRevisionId
ModuleDescriptorParser
parser
ModuleDescriptorParserRegistry
getInstance
getParser
mdRef
getResource
if
parser
Message
warn
mdRef
getResource
return
Message
verbose
getName
mrid
Message
verbose
mdRef
Message
debug
parser
ModuleRevisionId
resolvedMrid
mrid
if
getSettings
getVersionMatcher
isDynamic
mrid
resolvedMrid
ModuleRevisionId
newInstance
mrid
mdRef
getRevision
IvyNode
node
data
getNode
resolvedMrid
if
node
node
getModuleRevision
if
node
getDescriptor
node
getDescriptor
isDefault
Message
verbose
getName
resolvedMrid
else
Message
verbose
getName
resolvedMrid
node
getModuleRevision
getReport
setSearched
return
node
getModuleRevision
Artifact
moduleArtifact
parser
getMetadataArtifact
resolvedMrid
mdRef
getResource
return
getRepositoryCacheManager
cacheModuleDescriptor
this
mdRef
dd
moduleArtifact
downloader
getCacheOptions
data
protected
ResourceMDParser
getRMDParser
final
DependencyDescriptor
dd
final
ResolveData
data
return
new
ResourceMDParser
public
MDResolvedResource
parse
Resource
resource
String
rev
try
ResolvedModuleRevision
rmr
BasicResolver
this
parse
new
ResolvedResource
resource
rev
dd
data
if
rmr
return
else
return
new
MDResolvedResource
resource
rev
rmr
catch
ParseException
e
Message
warn
resource
e
getMessage
return
protected
ResourceMDParser
getDefaultRMDParser
final
ModuleId
mid
return
new
ResourceMDParser
public
MDResolvedResource
parse
Resource
resource
String
rev
DefaultModuleDescriptor
md
DefaultModuleDescriptor
newDefaultInstance
new
ModuleRevisionId
mid
rev
MetadataArtifactDownloadReport
madr
new
MetadataArtifactDownloadReport
md
getMetadataArtifact
madr
setDownloadStatus
DownloadStatus
NO
madr
setSearched
return
new
MDResolvedResource
resource
rev
new
ResolvedModuleRevision
BasicResolver
this
BasicResolver
this
md
madr
isForce
private
void
checkDescriptorConsistency
ModuleRevisionId
mrid
ModuleDescriptor
md
ResolvedResource
ivyRef
throws
ParseException
boolean
ok
StringBuffer
errors
new
StringBuffer
if
mrid
getOrganisation
equals
md
getModuleRevisionId
getOrganisation
Message
error
getName
ivyRef
getResource
mrid
getOrganisation
md
getModuleRevisionId
getOrganisation
errors
append
mrid
getOrganisation
md
getModuleRevisionId
getOrganisation
ok
if
mrid
getName
equals
md
getModuleRevisionId
getName
Message
error
getName
ivyRef
getResource
mrid
getName
md
getModuleRevisionId
getName
errors
append
mrid
getName
md
getModuleRevisionId
getName
ok
if
mrid
getBranch
mrid
getBranch
equals
md
getModuleRevisionId
getBranch
Message
error
getName
ivyRef
getResource
mrid
getBranch
md
getModuleRevisionId
getBranch
errors
append
mrid
getBranch
md
getModuleRevisionId
getBranch
ok
if
ivyRef
getRevision
ivyRef
getRevision
startsWith
ModuleRevisionId
expectedMrid
ModuleRevisionId
newInstance
mrid
ivyRef
getRevision
if
getSettings
getVersionMatcher
accept
expectedMrid
md
Message
error
getName
ivyRef
getResource
ivyRef
getRevision
md
getModuleRevisionId
getRevision
errors
append
ivyRef
getRevision
md
getModuleRevisionId
getRevision
ok
if
getSettings
getStatusManager
isStatus
md
getStatus
Message
error
getName
ivyRef
getResource
md
getStatus
errors
append
md
getStatus
ok
for
Iterator
it
mrid
getExtraAttributes
entrySet
iterator
it
hasNext
Entry
extra
Entry
it
next
if
extra
getValue
extra
getValue
equals
md
getExtraAttribute
String
extra
getKey
String
errorMsg
extra
getKey
ivyRef
getResource
extra
getValue
md
getExtraAttribute
String
extra
getKey
Message
error
getName
errorMsg
errors
append
errorMsg
ok
if
ok
throw
new
ParseException
ivyRef
getResource
errors
protected
void
clearIvyAttempts
ivyattempts
clear
clearArtifactAttempts
protected
void
logIvyAttempt
String
attempt
ivyattempts
add
attempt
Message
verbose
attempt
protected
void
logArtifactAttempt
Artifact
art
String
attempt
List
attempts
List
artattempts
get
art
if
attempts
attempts
new
ArrayList
artattempts
put
art
attempts
attempts
add
attempt
Message
verbose
attempt
protected
void
logAttempt
String
attempt
Artifact
currentArtifact
Artifact
IvyContext
getContext
get
getName
if
currentArtifact
logArtifactAttempt
currentArtifact
attempt
else
logIvyAttempt
attempt
public
void
reportFailure
Message
warn
getName
for
ListIterator
iter
ivyattempts
listIterator
iter
hasNext
String
m
String
iter
next
Message
warn
m
for
Iterator
iter
artattempts
keySet
iterator
iter
hasNext
Artifact
art
Artifact
iter
next
List
attempts
List
artattempts
get
art
if
attempts
Message
warn
art
for
ListIterator
iterator
attempts
listIterator
iterator
hasNext
String
m
String
iterator
next
Message
warn
m
public
void
reportFailure
Artifact
art
Message
warn
getName
List
attempts
List
artattempts
get
art
if
attempts
for
ListIterator
iter
attempts
listIterator
iter
hasNext
String
m
String
iter
next
Message
warn
m
protected
boolean
acceptLatest
return
public
DownloadReport
download
Artifact
artifacts
DownloadOptions
options
RepositoryCacheManager
cacheManager
getRepositoryCacheManager
clearArtifactAttempts
DownloadReport
dr
new
DownloadReport
for
int
i
i
artifacts
length
i
ArtifactDownloadReport
adr
cacheManager
download
artifacts
i
artifactResourceResolver
downloader
getCacheDownloadOptions
options
if
DownloadStatus
FAILED
adr
getDownloadStatus
if
ArtifactDownloadReport
MISSING_ARTIFACT
equals
adr
getDownloadDetails
Message
warn
adr
else
if
DownloadStatus
NO
adr
getDownloadStatus
Message
verbose
adr
else
if
LogOptions
LOG_QUIET
equals
options
getLog
Message
verbose
adr
else
Message
info
adr
dr
addArtifactReport
adr
checkInterrupted
return
dr
protected
void
clearArtifactAttempts
artattempts
clear
public
ArtifactDownloadReport
download
final
ArtifactOrigin
origin
DownloadOptions
options
Checks
checkNotNull
origin
return
getRepositoryCacheManager
download
origin
getArtifact
new
ArtifactResourceResolver
public
ResolvedResource
resolve
Artifact
artifact
try
Resource
resource
getResource
origin
getLocation
if
resource
return
String
revision
origin
getArtifact
getModuleRevisionId
getRevision
return
new
ResolvedResource
resource
revision
catch
IOException
e
return
downloader
getCacheDownloadOptions
options
protected
abstract
Resource
getResource
String
source
throws
IOException
public
boolean
exists
Artifact
artifact
ResolvedResource
artifactRef
getArtifactRef
artifact
if
artifactRef
return
artifactRef
getResource
exists
return
public
ArtifactOrigin
locate
Artifact
artifact
ArtifactOrigin
origin
getRepositoryCacheManager
getSavedArtifactOrigin
artifact
if
ArtifactOrigin
isUnknown
origin
return
origin
ResolvedResource
artifactRef
getArtifactRef
artifact
if
artifactRef
artifactRef
getResource
exists
return
new
ArtifactOrigin
artifact
artifactRef
getResource
isLocal
artifactRef
getResource
getName
return
protected
long
getPublicationDate
ModuleDescriptor
md
DependencyDescriptor
dd
ResolveData
data
if
md
getPublicationDate
return
md
getPublicationDate
getTime
ResolvedResource
artifactRef
findFirstArtifactRef
md
dd
data
if
artifactRef
return
artifactRef
getLastModified
return
public
String
toString
return
getName
public
String
listTokenValues
String
token
Map
otherTokenValues
Collection
ret
findNames
otherTokenValues
token
return
String
ret
toArray
new
String
ret
size
public
OrganisationEntry
listOrganisations
Collection
names
findNames
Collections
EMPTY_MAP
IvyPatternHelper
ORGANISATION_KEY
OrganisationEntry
ret
new
OrganisationEntry
names
size
int
i
for
Iterator
iter
names
iterator
iter
hasNext
i
String
org
String
iter
next
ret
i
new
OrganisationEntry
this
org
return
ret
public
ModuleEntry
listModules
OrganisationEntry
org
Map
tokenValues
new
HashMap
tokenValues
put
IvyPatternHelper
ORGANISATION_KEY
org
getOrganisation
Collection
names
findNames
tokenValues
IvyPatternHelper
MODULE_KEY
ModuleEntry
ret
new
ModuleEntry
names
size
int
i
for
Iterator
iter
names
iterator
iter
hasNext
i
String
name
String
iter
next
ret
i
new
ModuleEntry
org
name
return
ret
public
RevisionEntry
listRevisions
ModuleEntry
mod
Map
tokenValues
new
HashMap
tokenValues
put
IvyPatternHelper
ORGANISATION_KEY
mod
getOrganisation
tokenValues
put
IvyPatternHelper
MODULE_KEY
mod
getModule
Collection
names
findNames
tokenValues
IvyPatternHelper
REVISION_KEY
RevisionEntry
ret
new
RevisionEntry
names
size
int
i
for
Iterator
iter
names
iterator
iter
hasNext
i
String
name
String
iter
next
ret
i
new
RevisionEntry
mod
name
return
ret
protected
abstract
Collection
findNames
Map
tokenValues
String
token
protected
ResolvedResource
findFirstArtifactRef
ModuleDescriptor
md
DependencyDescriptor
dd
ResolveData
data
ResolvedResource
ret
String
conf
md
getConfigurationsNames
for
int
i
i
conf
length
i
Artifact
artifacts
md
getArtifacts
conf
i
for
int
j
j
artifacts
length
j
ret
getArtifactRef
artifacts
j
data
getDate
if
ret
return
ret
return
protected
long
getAndCheck
Resource
resource
File
dest
throws
IOException
long
size
get
resource
dest
String
checksums
getChecksumAlgorithms
boolean
checked
for
int
i
i
checksums
length
checked
i
checked
check
resource
dest
checksums
i
return
size
private
boolean
check
Resource
resource
File
dest
String
algorithm
throws
IOException
Resource
csRes
resource
clone
resource
getName
algorithm
if
csRes
exists
Message
debug
algorithm
resource
File
csFile
File
createTempFile
algorithm
try
get
csRes
csFile
try
ChecksumHelper
check
dest
csFile
algorithm
Message
verbose
algorithm
resource
return
catch
IOException
ex
dest
delete
throw
ex
finally
csFile
delete
else
return
protected
ResolvedResource
getArtifactRef
Artifact
artifact
Date
date
IvyContext
getContext
set
getName
artifact
try
ResolvedResource
ret
findArtifactRef
artifact
date
if
ret
artifact
getUrl
URL
url
artifact
getUrl
Message
verbose
artifact
url
logArtifactAttempt
artifact
url
toExternalForm
Resource
resource
if
equals
url
getProtocol
resource
new
FileResource
new
FileRepository
new
File
url
getPath
else
resource
new
URLResource
url
ret
new
ResolvedResource
resource
artifact
getModuleRevisionId
getRevision
return
ret
finally
IvyContext
getContext
set
getName
protected
abstract
ResolvedResource
findArtifactRef
Artifact
artifact
Date
date
protected
abstract
long
get
Resource
resource
File
dest
throws
IOException
public
boolean
isCheckconsistency
return
checkconsistency
public
void
setCheckconsistency
boolean
checkConsitency
checkconsistency
checkConsitency
public
void
setForce
boolean
force
this
force
force
public
boolean
isForce
return
force
public
boolean
isAllownomd
return
allownomd
public
void
setAllownomd
boolean
b
Message
deprecated
b
DESCRIPTOR_OPTIONAL
DESCRIPTOR_REQUIRED
allownomd
b
public
void
setDescriptor
String
descriptorRule
if
DESCRIPTOR_REQUIRED
equals
descriptorRule
allownomd
else
if
DESCRIPTOR_OPTIONAL
equals
descriptorRule
allownomd
else
throw
new
IllegalArgumentException
descriptorRule
Arrays
asList
new
String
DESCRIPTOR_REQUIRED
DESCRIPTOR_OPTIONAL
public
String
getChecksumAlgorithms
String
csDef
checksums
getSettings
getVariable
checksums
if
csDef
return
new
String
String
checksums
csDef
split
List
algos
new
ArrayList
for
int
i
i
checksums
length
i
String
cs
checksums
i
trim
if
equals
cs
equals
cs
algos
add
cs
return
String
algos
toArray
new
String
algos
size
public
void
setChecksums
String
checksums
this
checksums
checksums
private
final
ArtifactResourceResolver
artifactResourceResolver
new
ArtifactResourceResolver
public
ResolvedResource
resolve
Artifact
artifact
artifact
fromSystem
artifact
return
getArtifactRef
artifact
private
final
ResourceDownloader
downloader
new
ResourceDownloader
public
void
download
Artifact
artifact
Resource
resource
File
dest
throws
IOException
if
dest
exists
dest
delete
File
part
new
File
dest
getAbsolutePath
if
resource
getName
equals
String
valueOf
artifact
getUrl
if
part
getParentFile
part
getParentFile
mkdirs
extartifactrep
get
resource
getName
part
else
getAndCheck
resource
part
if
part
renameTo
dest
throw
new
IOException
part
dest
