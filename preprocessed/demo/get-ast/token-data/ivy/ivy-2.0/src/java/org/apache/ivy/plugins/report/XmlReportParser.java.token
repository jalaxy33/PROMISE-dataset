package
org
apache
ivy
plugins
report
import
java
io
File
import
java
text
ParseException
import
java
util
ArrayList
import
java
util
Date
import
java
util
HashMap
import
java
util
Iterator
import
java
util
List
import
java
util
Map
import
java
util
SortedMap
import
java
util
TreeMap
import
javax
xml
parsers
SAXParser
import
javax
xml
parsers
SAXParserFactory
import
org
apache
ivy
Ivy
import
org
apache
ivy
core
cache
ArtifactOrigin
import
org
apache
ivy
core
module
descriptor
Artifact
import
org
apache
ivy
core
module
descriptor
DefaultArtifact
import
org
apache
ivy
core
module
id
ModuleRevisionId
import
org
apache
ivy
core
report
ArtifactDownloadReport
import
org
apache
ivy
core
report
DownloadStatus
import
org
apache
ivy
core
report
MetadataArtifactDownloadReport
import
org
apache
ivy
util
extendable
ExtendableItemHelper
import
org
xml
sax
Attributes
import
org
xml
sax
SAXException
import
org
xml
sax
helpers
DefaultHandler
public
class
XmlReportParser
private
static
class
SaxXmlReportParser
private
final
class
XmlReportParserHandler
extends
DefaultHandler
private
String
organisation
private
String
module
private
String
branch
private
String
revision
private
int
position
private
Date
pubdate
private
boolean
skip
private
ModuleRevisionId
mrid
private
boolean
isDefault
private
SortedMap
revisionsMap
new
TreeMap
private
List
revisionArtifacts
public
void
startElement
String
uri
String
localName
String
qName
Attributes
attributes
throws
SAXException
if
equals
qName
organisation
attributes
getValue
module
attributes
getValue
else
if
equals
qName
revisionArtifacts
new
ArrayList
branch
attributes
getValue
revision
attributes
getValue
isDefault
Boolean
valueOf
attributes
getValue
booleanValue
String
pos
attributes
getValue
position
pos
getMaxPos
Integer
valueOf
pos
intValue
if
attributes
getValue
attributes
getValue
skip
else
revisionsMap
put
new
Integer
position
revisionArtifacts
mrid
ModuleRevisionId
newInstance
organisation
module
branch
revision
ExtendableItemHelper
getExtraAttributes
attributes
mrids
add
mrid
if
isDefault
defaultMrids
add
mrid
else
Artifact
metadataArtifact
DefaultArtifact
newIvyArtifact
mrid
pubdate
MetadataArtifactDownloadReport
madr
new
MetadataArtifactDownloadReport
metadataArtifact
metadataReports
put
mrid
madr
realMrids
add
mrid
try
pubdate
Ivy
DATE_FORMAT
parse
attributes
getValue
skip
catch
ParseException
e
throw
new
IllegalArgumentException
organisation
module
revision
attributes
getValue
else
if
equals
qName
if
skip
return
MetadataArtifactDownloadReport
madr
MetadataArtifactDownloadReport
metadataReports
get
mrid
if
madr
madr
setDownloadStatus
DownloadStatus
fromString
attributes
getValue
madr
setDownloadDetails
attributes
getValue
madr
setSize
Long
parseLong
attributes
getValue
madr
setDownloadTimeMillis
Long
parseLong
attributes
getValue
madr
setSearched
parseBoolean
attributes
getValue
if
attributes
getValue
madr
setLocalFile
new
File
attributes
getValue
if
attributes
getValue
madr
setOriginalLocalFile
new
File
attributes
getValue
if
attributes
getValue
if
ArtifactOrigin
isUnknown
attributes
getValue
madr
setArtifactOrigin
ArtifactOrigin
unkwnown
madr
getArtifact
else
madr
setArtifactOrigin
new
ArtifactOrigin
madr
getArtifact
parseBoolean
attributes
getValue
attributes
getValue
else
if
equals
qName
if
skip
return
String
status
attributes
getValue
String
artifactName
attributes
getValue
String
type
attributes
getValue
String
ext
attributes
getValue
Artifact
artifact
new
DefaultArtifact
mrid
pubdate
artifactName
type
ext
ExtendableItemHelper
getExtraAttributes
attributes
ArtifactDownloadReport
aReport
new
ArtifactDownloadReport
artifact
aReport
setDownloadStatus
DownloadStatus
fromString
status
aReport
setDownloadDetails
attributes
getValue
aReport
setSize
Long
parseLong
attributes
getValue
aReport
setDownloadTimeMillis
Long
parseLong
attributes
getValue
if
attributes
getValue
aReport
setLocalFile
new
File
attributes
getValue
revisionArtifacts
add
aReport
else
if
equals
qName
if
skip
return
ArtifactDownloadReport
aReport
ArtifactDownloadReport
revisionArtifacts
get
revisionArtifacts
size
if
ArtifactOrigin
isUnknown
attributes
getValue
aReport
setArtifactOrigin
ArtifactOrigin
unkwnown
aReport
getArtifact
else
aReport
setArtifactOrigin
new
ArtifactOrigin
aReport
getArtifact
parseBoolean
attributes
getValue
attributes
getValue
else
if
equals
qName
String
organisation
attributes
getValue
String
name
attributes
getValue
String
branch
attributes
getValue
String
revision
attributes
getValue
Map
extraAttributes
new
HashMap
for
int
i
i
attributes
getLength
i
String
attName
attributes
getQName
i
if
attName
startsWith
String
extraAttrName
attName
substring
length
String
extraAttrValue
attributes
getValue
i
extraAttributes
put
extraAttrName
extraAttrValue
mRevisionId
ModuleRevisionId
newInstance
organisation
name
branch
revision
extraAttributes
public
void
endElement
String
uri
String
localName
String
qname
throws
SAXException
if
equals
qname
for
Iterator
it
revisionsMap
values
iterator
it
hasNext
List
artifactReports
List
it
next
SaxXmlReportParser
this
artifactReports
addAll
artifactReports
for
Iterator
iter
artifactReports
iterator
iter
hasNext
ArtifactDownloadReport
artifactReport
ArtifactDownloadReport
iter
next
if
artifactReport
getDownloadStatus
DownloadStatus
FAILED
artifacts
add
artifactReport
getArtifact
private
int
getMaxPos
return
revisionsMap
isEmpty
Integer
revisionsMap
keySet
toArray
revisionsMap
size
intValue
private
List
mrids
private
List
defaultMrids
private
List
realMrids
private
List
artifacts
private
List
artifactReports
private
Map
metadataReports
private
ModuleRevisionId
mRevisionId
private
File
report
SaxXmlReportParser
File
report
artifacts
new
ArrayList
artifactReports
new
ArrayList
mrids
new
ArrayList
defaultMrids
new
ArrayList
realMrids
new
ArrayList
metadataReports
new
HashMap
this
report
report
public
void
parse
throws
Exception
SAXParser
saxParser
SAXParserFactory
newInstance
newSAXParser
saxParser
parse
report
new
XmlReportParserHandler
private
static
boolean
parseBoolean
String
str
return
str
str
equalsIgnoreCase
public
List
getArtifacts
return
artifacts
public
List
getArtifactReports
return
artifactReports
public
List
getModuleRevisionIds
return
mrids
public
List
getRealModuleRevisionIds
return
realMrids
public
ModuleRevisionId
getResolvedModule
return
mRevisionId
public
MetadataArtifactDownloadReport
getMetadataArtifactReport
ModuleRevisionId
id
return
MetadataArtifactDownloadReport
metadataReports
get
id
private
SaxXmlReportParser
parser
public
void
parse
File
report
throws
ParseException
if
report
exists
throw
new
IllegalStateException
report
getAbsolutePath
parser
new
SaxXmlReportParser
report
try
parser
parse
catch
Exception
e
ParseException
pe
new
ParseException
report
e
getMessage
pe
initCause
e
throw
pe
public
Artifact
getArtifacts
return
Artifact
parser
getArtifacts
toArray
new
Artifact
parser
getArtifacts
size
public
ArtifactDownloadReport
getArtifactReports
return
ArtifactDownloadReport
parser
getArtifactReports
toArray
new
ArtifactDownloadReport
parser
getArtifactReports
size
public
ModuleRevisionId
getDependencyRevisionIds
return
ModuleRevisionId
parser
getModuleRevisionIds
toArray
new
ModuleRevisionId
parser
getModuleRevisionIds
size
public
ModuleRevisionId
getRealDependencyRevisionIds
return
ModuleRevisionId
parser
getRealModuleRevisionIds
toArray
new
ModuleRevisionId
parser
getRealModuleRevisionIds
size
public
MetadataArtifactDownloadReport
getMetadataArtifactReport
ModuleRevisionId
id
return
parser
getMetadataArtifactReport
id
public
ModuleRevisionId
getResolvedModule
return
parser
getResolvedModule
