package
org
apache
ivy
plugins
parser
xml
import
java
io
File
import
java
io
FileOutputStream
import
java
io
IOException
import
java
io
OutputStreamWriter
import
java
io
PrintWriter
import
java
util
Arrays
import
java
util
Iterator
import
java
util
Map
import
java
util
Map
Entry
import
org
apache
ivy
Ivy
import
org
apache
ivy
core
IvyPatternHelper
import
org
apache
ivy
core
module
descriptor
Artifact
import
org
apache
ivy
core
module
descriptor
Configuration
import
org
apache
ivy
core
module
descriptor
DefaultModuleDescriptor
import
org
apache
ivy
core
module
descriptor
DependencyArtifactDescriptor
import
org
apache
ivy
core
module
descriptor
DependencyDescriptor
import
org
apache
ivy
core
module
descriptor
DependencyDescriptorMediator
import
org
apache
ivy
core
module
descriptor
ExcludeRule
import
org
apache
ivy
core
module
descriptor
IncludeRule
import
org
apache
ivy
core
module
descriptor
License
import
org
apache
ivy
core
module
descriptor
ModuleDescriptor
import
org
apache
ivy
core
module
descriptor
OverrideDependencyDescriptorMediator
import
org
apache
ivy
plugins
matcher
MapMatcher
import
org
apache
ivy
util
Message
import
org
apache
ivy
util
XMLHelper
import
org
apache
ivy
util
extendable
ExtendableItem
public
final
class
XmlModuleDescriptorWriter
private
XmlModuleDescriptorWriter
public
static
void
write
ModuleDescriptor
md
File
output
throws
IOException
write
md
output
public
static
void
write
ModuleDescriptor
md
String
licenseHeader
File
output
throws
IOException
if
output
getParentFile
output
getParentFile
mkdirs
PrintWriter
out
new
PrintWriter
new
OutputStreamWriter
new
FileOutputStream
output
try
out
println
if
licenseHeader
out
print
licenseHeader
StringBuffer
xmlNamespace
new
StringBuffer
Map
namespaces
md
getExtraAttributesNamespaces
for
Iterator
iter
namespaces
entrySet
iterator
iter
hasNext
Entry
ns
Entry
iter
next
xmlNamespace
append
append
ns
getKey
append
append
ns
getValue
append
out
println
xmlNamespace
printInfoTag
md
out
printConfigurations
md
out
printPublications
md
out
printDependencies
md
out
out
println
finally
out
close
private
static
void
printDependencies
ModuleDescriptor
md
PrintWriter
out
DependencyDescriptor
dds
md
getDependencies
if
dds
length
out
println
for
int
i
i
dds
length
i
out
print
out
print
XMLHelper
escape
dds
i
getDependencyRevisionId
getOrganisation
out
print
XMLHelper
escape
dds
i
getDependencyRevisionId
getName
if
dds
i
getDependencyRevisionId
getBranch
out
print
XMLHelper
escape
dds
i
getDependencyRevisionId
getBranch
out
print
XMLHelper
escape
dds
i
getDependencyRevisionId
getRevision
if
dds
i
getDynamicConstraintDependencyRevisionId
equals
dds
i
getDependencyRevisionId
if
dds
i
getDynamicConstraintDependencyRevisionId
getBranch
out
print
XMLHelper
escape
dds
i
getDynamicConstraintDependencyRevisionId
getBranch
out
print
XMLHelper
escape
dds
i
getDynamicConstraintDependencyRevisionId
getRevision
if
dds
i
isForce
out
print
dds
i
isForce
if
dds
i
isChanging
out
print
dds
i
isChanging
if
dds
i
isTransitive
out
print
dds
i
isTransitive
out
print
String
modConfs
dds
i
getModuleConfigurations
for
int
j
j
modConfs
length
j
String
depConfs
dds
i
getDependencyConfigurations
modConfs
j
out
print
XMLHelper
escape
modConfs
j
for
int
k
k
depConfs
length
k
out
print
XMLHelper
escape
depConfs
k
if
k
depConfs
length
out
print
if
j
modConfs
length
out
print
out
print
printExtraAttributes
dds
i
out
DependencyArtifactDescriptor
depArtifacts
dds
i
getAllDependencyArtifacts
if
depArtifacts
length
out
println
printDependencyArtefacts
md
out
depArtifacts
IncludeRule
includes
dds
i
getAllIncludeRules
if
includes
length
depArtifacts
length
out
println
printDependencyIncludeRules
md
out
includes
ExcludeRule
excludes
dds
i
getAllExcludeRules
if
excludes
length
includes
length
depArtifacts
length
out
println
printDependencyExcludeRules
md
out
excludes
if
includes
length
excludes
length
depArtifacts
length
out
println
else
out
println
printAllExcludes
md
out
printAllMediators
md
out
out
println
private
static
void
printAllMediators
ModuleDescriptor
md
PrintWriter
out
Map
mediators
md
getAllDependencyDescriptorMediators
getAllRules
for
Iterator
iterator
mediators
entrySet
iterator
iterator
hasNext
Map
Entry
mediatorRule
Map
Entry
iterator
next
MapMatcher
matcher
MapMatcher
mediatorRule
getKey
DependencyDescriptorMediator
mediator
DependencyDescriptorMediator
mediatorRule
getValue
if
mediator
instanceof
OverrideDependencyDescriptorMediator
OverrideDependencyDescriptorMediator
oddm
OverrideDependencyDescriptorMediator
mediator
out
print
out
print
XMLHelper
escape
String
matcher
getAttributes
get
IvyPatternHelper
ORGANISATION_KEY
out
print
XMLHelper
escape
String
matcher
getAttributes
get
IvyPatternHelper
MODULE_KEY
out
print
XMLHelper
escape
matcher
getPatternMatcher
getName
if
oddm
getBranch
out
print
XMLHelper
escape
oddm
getBranch
if
oddm
getVersion
out
print
XMLHelper
escape
oddm
getVersion
out
println
else
Message
verbose
mediator
getClass
private
static
void
printAllExcludes
ModuleDescriptor
md
PrintWriter
out
ExcludeRule
excludes
md
getAllExcludeRules
if
excludes
length
for
int
j
j
excludes
length
j
out
print
out
print
XMLHelper
escape
excludes
j
getId
getModuleId
getOrganisation
out
print
XMLHelper
escape
excludes
j
getId
getModuleId
getName
out
print
XMLHelper
escape
excludes
j
getId
getName
out
print
XMLHelper
escape
excludes
j
getId
getType
out
print
XMLHelper
escape
excludes
j
getId
getExt
String
ruleConfs
excludes
j
getConfigurations
if
Arrays
asList
ruleConfs
equals
Arrays
asList
md
getConfigurationsNames
out
print
for
int
k
k
ruleConfs
length
k
out
print
XMLHelper
escape
ruleConfs
k
if
k
ruleConfs
length
out
print
out
print
out
print
XMLHelper
escape
excludes
j
getMatcher
getName
out
println
private
static
void
printDependencyExcludeRules
ModuleDescriptor
md
PrintWriter
out
ExcludeRule
excludes
if
excludes
length
for
int
j
j
excludes
length
j
out
print
out
print
XMLHelper
escape
excludes
j
getId
getModuleId
getOrganisation
out
print
XMLHelper
escape
excludes
j
getId
getModuleId
getName
out
print
XMLHelper
escape
excludes
j
getId
getName
out
print
XMLHelper
escape
excludes
j
getId
getType
out
print
XMLHelper
escape
excludes
j
getId
getExt
String
ruleConfs
excludes
j
getConfigurations
if
Arrays
asList
ruleConfs
equals
Arrays
asList
md
getConfigurationsNames
out
print
for
int
k
k
ruleConfs
length
k
out
print
XMLHelper
escape
ruleConfs
k
if
k
ruleConfs
length
out
print
out
print
out
print
XMLHelper
escape
excludes
j
getMatcher
getName
out
println
private
static
void
printDependencyIncludeRules
ModuleDescriptor
md
PrintWriter
out
IncludeRule
includes
if
includes
length
for
int
j
j
includes
length
j
out
print
out
print
XMLHelper
escape
includes
j
getId
getName
out
print
XMLHelper
escape
includes
j
getId
getType
out
print
XMLHelper
escape
includes
j
getId
getExt
String
ruleConfs
includes
j
getConfigurations
if
Arrays
asList
ruleConfs
equals
Arrays
asList
md
getConfigurationsNames
out
print
for
int
k
k
ruleConfs
length
k
out
print
XMLHelper
escape
ruleConfs
k
if
k
ruleConfs
length
out
print
out
print
out
print
XMLHelper
escape
includes
j
getMatcher
getName
out
println
private
static
void
printDependencyArtefacts
ModuleDescriptor
md
PrintWriter
out
DependencyArtifactDescriptor
depArtifacts
if
depArtifacts
length
for
int
j
j
depArtifacts
length
j
out
print
out
print
XMLHelper
escape
depArtifacts
j
getName
out
print
XMLHelper
escape
depArtifacts
j
getType
out
print
XMLHelper
escape
depArtifacts
j
getExt
String
dadconfs
depArtifacts
j
getConfigurations
if
Arrays
asList
dadconfs
equals
Arrays
asList
md
getConfigurationsNames
out
print
for
int
k
k
dadconfs
length
k
out
print
XMLHelper
escape
dadconfs
k
if
k
dadconfs
length
out
print
out
print
printExtraAttributes
depArtifacts
j
out
out
println
private
static
void
printExtraAttributes
ExtendableItem
item
PrintWriter
out
String
prefix
printExtraAttributes
item
getQualifiedExtraAttributes
out
prefix
private
static
void
printExtraAttributes
Map
extra
PrintWriter
out
String
prefix
if
extra
return
String
delim
prefix
for
Iterator
iter
extra
entrySet
iterator
iter
hasNext
Map
Entry
entry
Map
Entry
iter
next
out
print
delim
entry
getKey
XMLHelper
escape
entry
getValue
toString
delim
private
static
void
printPublications
ModuleDescriptor
md
PrintWriter
out
out
println
Artifact
artifacts
md
getAllArtifacts
for
int
i
i
artifacts
length
i
out
print
out
print
XMLHelper
escape
artifacts
i
getName
out
print
XMLHelper
escape
artifacts
i
getType
out
print
XMLHelper
escape
artifacts
i
getExt
out
print
XMLHelper
escape
getConfs
md
artifacts
i
printExtraAttributes
artifacts
i
out
out
println
out
println
private
static
void
printConfigurations
ModuleDescriptor
md
PrintWriter
out
Configuration
confs
md
getConfigurations
if
confs
length
out
println
for
int
i
i
confs
length
i
out
print
out
print
XMLHelper
escape
confs
i
getName
out
print
XMLHelper
escape
confs
i
getVisibility
toString
if
confs
i
getDescription
out
print
XMLHelper
escape
confs
i
getDescription
String
exts
confs
i
getExtends
if
exts
length
out
print
for
int
j
j
exts
length
j
out
print
XMLHelper
escape
exts
j
if
j
exts
length
out
print
out
print
if
confs
i
getDeprecated
out
print
XMLHelper
escape
confs
i
getDeprecated
printExtraAttributes
confs
i
out
out
println
out
println
private
static
void
printInfoTag
ModuleDescriptor
md
PrintWriter
out
out
println
XMLHelper
escape
md
getModuleRevisionId
getOrganisation
out
println
XMLHelper
escape
md
getModuleRevisionId
getName
String
branch
md
getResolvedModuleRevisionId
getBranch
if
branch
out
println
XMLHelper
escape
branch
String
revision
md
getResolvedModuleRevisionId
getRevision
if
revision
out
println
XMLHelper
escape
revision
out
println
XMLHelper
escape
md
getStatus
out
println
Ivy
DATE_FORMAT
format
md
getResolvedPublicationDate
if
md
isDefault
out
println
if
md
instanceof
DefaultModuleDescriptor
DefaultModuleDescriptor
dmd
DefaultModuleDescriptor
md
if
dmd
getNamespace
dmd
getNamespace
getName
equals
out
println
XMLHelper
escape
dmd
getNamespace
getName
if
md
getExtraAttributes
isEmpty
printExtraAttributes
md
out
out
println
if
requireInnerInfoElement
md
out
println
License
licenses
md
getLicenses
for
int
i
i
licenses
length
i
License
license
licenses
i
out
print
if
license
getName
out
print
XMLHelper
escape
license
getName
if
license
getUrl
out
print
XMLHelper
escape
license
getUrl
out
println
if
md
getHomePage
md
getDescription
out
print
if
md
getHomePage
out
print
XMLHelper
escape
md
getHomePage
if
md
getDescription
md
getDescription
trim
length
out
println
out
println
XMLHelper
escape
md
getDescription
out
println
else
out
println
for
Iterator
it
md
getExtraInfo
entrySet
iterator
it
hasNext
Map
Entry
extraDescr
Map
Entry
it
next
if
extraDescr
getValue
String
extraDescr
getValue
length
continue
out
print
out
print
extraDescr
getKey
out
print
out
print
XMLHelper
escape
String
extraDescr
getValue
out
print
out
print
extraDescr
getKey
out
println
out
println
else
out
println
private
static
boolean
requireInnerInfoElement
ModuleDescriptor
md
return
md
getExtraInfo
size
md
getHomePage
md
getDescription
md
getDescription
trim
length
md
getLicenses
length
private
static
String
getConfs
ModuleDescriptor
md
Artifact
artifact
StringBuffer
ret
new
StringBuffer
String
confs
md
getConfigurationsNames
for
int
i
i
confs
length
i
if
Arrays
asList
md
getArtifacts
confs
i
contains
artifact
ret
append
confs
i
append
if
ret
length
ret
setLength
ret
length
return
ret
toString
