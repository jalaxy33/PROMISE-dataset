package
org
apache
ivy
core
settings
import
java
io
File
import
java
io
FileInputStream
import
java
io
FileNotFoundException
import
java
io
IOException
import
java
io
InputStream
import
java
lang
reflect
Field
import
java
net
MalformedURLException
import
java
net
URL
import
java
net
URLClassLoader
import
java
text
ParseException
import
java
util
ArrayList
import
java
util
Collection
import
java
util
HashMap
import
java
util
Iterator
import
java
util
LinkedHashMap
import
java
util
List
import
java
util
Map
import
java
util
Properties
import
org
apache
ivy
Ivy
import
org
apache
ivy
core
IvyPatternHelper
import
org
apache
ivy
core
NormalRelativeUrlResolver
import
org
apache
ivy
core
RelativeUrlResolver
import
org
apache
ivy
core
cache
CacheUtil
import
org
apache
ivy
core
cache
DefaultRepositoryCacheManager
import
org
apache
ivy
core
cache
DefaultResolutionCacheManager
import
org
apache
ivy
core
cache
RepositoryCacheManager
import
org
apache
ivy
core
cache
ResolutionCacheManager
import
org
apache
ivy
core
check
CheckEngineSettings
import
org
apache
ivy
core
deliver
DeliverEngineSettings
import
org
apache
ivy
core
install
InstallEngineSettings
import
org
apache
ivy
core
module
id
ModuleId
import
org
apache
ivy
core
module
id
ModuleRevisionId
import
org
apache
ivy
core
module
id
ModuleRules
import
org
apache
ivy
core
module
status
StatusManager
import
org
apache
ivy
core
publish
PublishEngineSettings
import
org
apache
ivy
core
repository
RepositoryManagementEngineSettings
import
org
apache
ivy
core
resolve
ResolveEngineSettings
import
org
apache
ivy
core
resolve
ResolveOptions
import
org
apache
ivy
core
retrieve
RetrieveEngineSettings
import
org
apache
ivy
core
sort
SortEngineSettings
import
org
apache
ivy
plugins
IvySettingsAware
import
org
apache
ivy
plugins
circular
CircularDependencyStrategy
import
org
apache
ivy
plugins
circular
ErrorCircularDependencyStrategy
import
org
apache
ivy
plugins
circular
IgnoreCircularDependencyStrategy
import
org
apache
ivy
plugins
circular
WarnCircularDependencyStrategy
import
org
apache
ivy
plugins
conflict
ConflictManager
import
org
apache
ivy
plugins
conflict
LatestCompatibleConflictManager
import
org
apache
ivy
plugins
conflict
LatestConflictManager
import
org
apache
ivy
plugins
conflict
NoConflictManager
import
org
apache
ivy
plugins
conflict
StrictConflictManager
import
org
apache
ivy
plugins
latest
LatestLexicographicStrategy
import
org
apache
ivy
plugins
latest
LatestRevisionStrategy
import
org
apache
ivy
plugins
latest
LatestStrategy
import
org
apache
ivy
plugins
latest
LatestTimeStrategy
import
org
apache
ivy
plugins
lock
ArtifactLockStrategy
import
org
apache
ivy
plugins
lock
LockStrategy
import
org
apache
ivy
plugins
lock
NoLockStrategy
import
org
apache
ivy
plugins
matcher
ExactOrRegexpPatternMatcher
import
org
apache
ivy
plugins
matcher
ExactPatternMatcher
import
org
apache
ivy
plugins
matcher
MapMatcher
import
org
apache
ivy
plugins
matcher
PatternMatcher
import
org
apache
ivy
plugins
matcher
RegexpPatternMatcher
import
org
apache
ivy
plugins
namespace
Namespace
import
org
apache
ivy
plugins
parser
ModuleDescriptorParser
import
org
apache
ivy
plugins
parser
ModuleDescriptorParserRegistry
import
org
apache
ivy
plugins
parser
ParserSettings
import
org
apache
ivy
plugins
report
LogReportOutputter
import
org
apache
ivy
plugins
report
ReportOutputter
import
org
apache
ivy
plugins
report
XmlReportOutputter
import
org
apache
ivy
plugins
resolver
ChainResolver
import
org
apache
ivy
plugins
resolver
DependencyResolver
import
org
apache
ivy
plugins
resolver
DualResolver
import
org
apache
ivy
plugins
resolver
ResolverSettings
import
org
apache
ivy
plugins
trigger
Trigger
import
org
apache
ivy
plugins
version
ChainVersionMatcher
import
org
apache
ivy
plugins
version
ExactVersionMatcher
import
org
apache
ivy
plugins
version
LatestVersionMatcher
import
org
apache
ivy
plugins
version
SubVersionMatcher
import
org
apache
ivy
plugins
version
VersionMatcher
import
org
apache
ivy
plugins
version
VersionRangeMatcher
import
org
apache
ivy
util
Checks
import
org
apache
ivy
util
FileUtil
import
org
apache
ivy
util
Message
import
org
apache
ivy
util
filter
Filter
import
org
apache
ivy
util
url
URLHandlerRegistry
public
class
IvySettings
implements
SortEngineSettings
PublishEngineSettings
ParserSettings
DeliverEngineSettings
CheckEngineSettings
InstallEngineSettings
ResolverSettings
ResolveEngineSettings
RetrieveEngineSettings
RepositoryManagementEngineSettings
private
static
final
long
INTERUPT_TIMEOUT
private
Map
typeDefs
new
HashMap
private
Map
resolversMap
new
HashMap
private
DependencyResolver
defaultResolver
private
DependencyResolver
dictatorResolver
private
String
defaultResolverName
private
File
defaultCache
private
String
defaultBranch
private
boolean
checkUpToDate
private
ModuleRules
moduleSettings
new
ModuleRules
private
Map
conflictsManager
new
HashMap
private
Map
latestStrategies
new
HashMap
private
Map
lockStrategies
new
HashMap
private
Map
namespaces
new
HashMap
private
Map
matchers
new
HashMap
private
Map
reportOutputters
new
HashMap
private
Map
versionMatchers
new
HashMap
private
Map
circularDependencyStrategies
new
HashMap
private
Map
repositoryCacheManagers
new
HashMap
private
List
triggers
new
ArrayList
private
IvyVariableContainer
variableContainer
new
IvyVariableContainerImpl
private
boolean
validate
private
LatestStrategy
defaultLatestStrategy
private
LockStrategy
defaultLockStrategy
private
ConflictManager
defaultConflictManager
private
CircularDependencyStrategy
circularDependencyStrategy
private
RepositoryCacheManager
defaultRepositoryCacheManager
private
ResolutionCacheManager
resolutionCacheManager
private
List
listingIgnore
new
ArrayList
private
boolean
repositoriesConfigured
private
boolean
useRemoteConfig
private
File
defaultUserDir
private
File
baseDir
new
File
getAbsoluteFile
private
List
classpathURLs
new
ArrayList
private
ClassLoader
classloader
private
Boolean
debugConflictResolution
private
boolean
logNotConvertedExclusionRule
private
VersionMatcher
versionMatcher
private
StatusManager
statusManager
private
Boolean
debugLocking
private
Boolean
dumpMemoryUsage
private
String
defaultCacheIvyPattern
private
String
defaultCacheArtifactPattern
private
boolean
defaultUseOrigin
private
String
defaultResolveMode
ResolveOptions
RESOLVEMODE_DEFAULT
public
IvySettings
this
new
IvyVariableContainerImpl
public
IvySettings
IvyVariableContainer
variableContainer
setVariableContainer
variableContainer
setVariable
getDefaultSettingsDir
setVariable
getBaseDir
getAbsolutePath
setDeprecatedVariable
String
ivyTypeDefs
System
getProperty
if
ivyTypeDefs
String
files
ivyTypeDefs
split
for
int
i
i
files
length
i
try
typeDefs
new
FileInputStream
Checks
checkAbsolute
files
i
trim
catch
FileNotFoundException
e
Message
warn
files
i
trim
catch
IOException
e
Message
warn
files
i
trim
e
getMessage
else
try
typeDefs
getSettingsURL
openStream
catch
IOException
e
Message
warn
LatestLexicographicStrategy
latestLexicographicStrategy
new
LatestLexicographicStrategy
LatestRevisionStrategy
latestRevisionStrategy
new
LatestRevisionStrategy
LatestTimeStrategy
latestTimeStrategy
new
LatestTimeStrategy
addLatestStrategy
latestRevisionStrategy
addLatestStrategy
latestLexicographicStrategy
addLatestStrategy
latestTimeStrategy
addLockStrategy
new
NoLockStrategy
addLockStrategy
new
ArtifactLockStrategy
debugLocking
addConflictManager
new
LatestConflictManager
latestRevisionStrategy
addConflictManager
new
LatestCompatibleConflictManager
latestRevisionStrategy
addConflictManager
new
LatestConflictManager
latestTimeStrategy
addConflictManager
new
NoConflictManager
addConflictManager
new
StrictConflictManager
addMatcher
ExactPatternMatcher
INSTANCE
addMatcher
RegexpPatternMatcher
INSTANCE
addMatcher
ExactOrRegexpPatternMatcher
INSTANCE
try
Class
globClazz
IvySettings
class
getClassLoader
loadClass
Field
instanceField
globClazz
getField
addMatcher
PatternMatcher
instanceField
get
catch
Exception
e
Message
info
addReportOutputter
new
LogReportOutputter
addReportOutputter
new
XmlReportOutputter
configureDefaultCircularDependencyStrategies
listingIgnore
add
listingIgnore
add
listingIgnore
add
listingIgnore
add
listingIgnore
add
listingIgnore
add
addSystemProperties
private
void
addSystemProperties
addAllVariables
System
getProperties
public
void
configureRepositories
boolean
remote
if
repositoriesConfigured
Properties
props
new
Properties
boolean
configured
if
useRemoteConfig
remote
try
URL
url
new
URL
Message
verbose
url
props
load
URLHandlerRegistry
getDefault
openStream
url
configured
catch
Exception
ex
Message
verbose
ex
getMessage
props
new
Properties
if
configured
InputStream
repositoryPropsStream
try
repositoryPropsStream
getSettingsURL
openStream
props
load
repositoryPropsStream
catch
IOException
e
Message
error
e
getMessage
if
repositoryPropsStream
try
repositoryPropsStream
close
catch
Exception
ex
addAllVariables
props
repositoriesConfigured
public
void
typeDefs
InputStream
stream
throws
IOException
typeDefs
stream
public
void
typeDefs
InputStream
stream
boolean
silentFail
throws
IOException
try
Properties
p
new
Properties
p
load
stream
typeDefs
p
silentFail
finally
stream
close
public
void
typeDefs
Properties
p
typeDefs
p
public
void
typeDefs
Properties
p
boolean
silentFail
for
Iterator
iter
p
keySet
iterator
iter
hasNext
String
name
String
iter
next
typeDef
name
p
getProperty
name
silentFail
public
void
load
File
settingsFile
throws
ParseException
IOException
Message
info
settingsFile
long
start
System
currentTimeMillis
setSettingsVariables
settingsFile
if
getVariable
setDefaultIvyUserDir
Checks
checkAbsolute
getVariable
else
getDefaultIvyUserDir
loadDefaultProperties
try
new
XmlSettingsParser
this
parse
settingsFile
toURI
toURL
catch
MalformedURLException
e
IllegalArgumentException
iae
new
IllegalArgumentException
settingsFile
iae
initCause
e
throw
iae
setVariable
getDefaultIvyUserDir
getAbsolutePath
Message
verbose
System
currentTimeMillis
start
dumpSettings
public
void
load
URL
settingsURL
throws
ParseException
IOException
Message
info
settingsURL
long
start
System
currentTimeMillis
setSettingsVariables
settingsURL
if
getVariable
setDefaultIvyUserDir
Checks
checkAbsolute
getVariable
else
getDefaultIvyUserDir
loadDefaultProperties
new
XmlSettingsParser
this
parse
settingsURL
setVariable
getDefaultIvyUserDir
getAbsolutePath
Message
verbose
System
currentTimeMillis
start
dumpSettings
public
void
defaultInit
throws
IOException
if
getVariable
setDefaultIvyUserDir
Checks
checkAbsolute
getVariable
else
getDefaultIvyUserDir
getDefaultCache
loadDefaultProperties
setVariable
getDefaultIvyUserDir
getAbsolutePath
dumpSettings
public
void
loadDefault
throws
ParseException
IOException
load
getDefaultSettingsURL
public
void
loadDefault14
throws
ParseException
IOException
load
getDefault14SettingsURL
private
void
loadDefaultProperties
throws
IOException
loadProperties
getDefaultPropertiesURL
public
static
URL
getDefaultPropertiesURL
return
getSettingsURL
public
static
URL
getDefaultSettingsURL
return
getSettingsURL
public
static
URL
getDefault14SettingsURL
return
getSettingsURL
private
String
getDefaultSettingsDir
String
ivysettingsLocation
getDefaultSettingsURL
toExternalForm
return
ivysettingsLocation
substring
ivysettingsLocation
length
length
private
static
URL
getSettingsURL
String
file
return
XmlSettingsParser
class
getResource
file
public
void
setSettingsVariables
File
settingsFile
try
setVariable
new
File
settingsFile
getAbsolutePath
getParent
setDeprecatedVariable
setVariable
settingsFile
getAbsolutePath
setDeprecatedVariable
setVariable
settingsFile
toURI
toURL
toExternalForm
setDeprecatedVariable
catch
MalformedURLException
e
IllegalArgumentException
iae
new
IllegalArgumentException
settingsFile
iae
initCause
e
throw
iae
private
void
setDeprecatedVariable
String
deprecatedKey
String
newKey
setVariable
deprecatedKey
getVariable
newKey
public
void
setSettingsVariables
URL
settingsURL
String
settingsURLStr
settingsURL
toExternalForm
setVariable
settingsURLStr
setDeprecatedVariable
int
slashIndex
settingsURLStr
lastIndexOf
if
slashIndex
setVariable
settingsURLStr
substring
slashIndex
setDeprecatedVariable
else
Message
warn
private
void
dumpSettings
Message
verbose
getDefaultCache
Message
verbose
getDefaultResolver
Message
debug
getDefaultLatestStrategy
Message
debug
getDefaultConflictManager
Message
debug
getCircularDependencyStrategy
Message
debug
doValidate
Message
debug
isCheckUpToDate
if
classpathURLs
isEmpty
Message
verbose
classpathURLs
size
for
Iterator
iter
classpathURLs
iterator
iter
hasNext
Message
debug
iter
next
Message
verbose
resolversMap
size
for
Iterator
iter
resolversMap
values
iterator
iter
hasNext
DependencyResolver
resolver
DependencyResolver
iter
next
resolver
dumpSettings
Message
debug
moduleSettings
dump
public
void
loadProperties
URL
url
throws
IOException
loadProperties
url
public
void
loadProperties
URL
url
boolean
overwrite
throws
IOException
loadProperties
url
openStream
overwrite
public
void
loadProperties
File
file
throws
IOException
loadProperties
file
public
void
loadProperties
File
file
boolean
overwrite
throws
IOException
loadProperties
new
FileInputStream
file
overwrite
private
void
loadProperties
InputStream
stream
boolean
overwrite
throws
IOException
try
Properties
properties
new
Properties
properties
load
stream
addAllVariables
properties
overwrite
finally
if
stream
try
stream
close
catch
IOException
e
public
void
setVariable
String
varName
String
value
setVariable
varName
value
public
void
setVariable
String
varName
String
value
boolean
overwrite
variableContainer
setVariable
varName
value
overwrite
public
void
addAllVariables
Map
variables
addAllVariables
variables
public
void
addAllVariables
Map
variables
boolean
overwrite
for
Iterator
iter
variables
keySet
iterator
iter
hasNext
String
key
String
iter
next
String
val
String
variables
get
key
setVariable
key
val
overwrite
public
String
substitute
String
str
return
IvyPatternHelper
substituteVariables
str
variableContainer
public
Map
substitute
Map
strings
Map
substituted
new
LinkedHashMap
for
Iterator
it
strings
entrySet
iterator
it
hasNext
Map
Entry
entry
Map
Entry
it
next
substituted
put
entry
getKey
substitute
String
entry
getValue
return
substituted
public
IvyVariableContainer
getVariables
return
variableContainer
public
Class
typeDef
String
name
String
className
return
typeDef
name
className
public
Class
typeDef
String
name
String
className
boolean
silentFail
Class
clazz
classForName
className
silentFail
if
clazz
typeDefs
put
name
clazz
return
clazz
private
Class
classForName
String
className
boolean
silentFail
try
return
getClassLoader
loadClass
className
catch
ClassNotFoundException
e
if
silentFail
Message
info
className
classpathURLs
return
else
throw
new
RuntimeException
className
classpathURLs
private
ClassLoader
getClassLoader
if
classloader
if
classpathURLs
isEmpty
classloader
Ivy
class
getClassLoader
else
classloader
new
URLClassLoader
URL
classpathURLs
toArray
new
URL
classpathURLs
size
Ivy
class
getClassLoader
return
classloader
public
void
addClasspathURL
URL
url
classpathURLs
add
url
classloader
public
Map
getTypeDefs
return
typeDefs
public
Class
getTypeDef
String
name
return
Class
typeDefs
get
name
public
void
addConfigured
DependencyResolver
resolver
addResolver
resolver
public
void
addConfigured
ModuleDescriptorParser
parser
ModuleDescriptorParserRegistry
getInstance
addParser
parser
public
void
addResolver
DependencyResolver
resolver
if
resolver
throw
new
NullPointerException
init
resolver
resolversMap
put
resolver
getName
resolver
if
resolver
instanceof
ChainResolver
List
subresolvers
ChainResolver
resolver
getResolvers
for
Iterator
iter
subresolvers
iterator
iter
hasNext
DependencyResolver
dr
DependencyResolver
iter
next
addResolver
dr
else
if
resolver
instanceof
DualResolver
DependencyResolver
ivyResolver
DualResolver
resolver
getIvyResolver
if
ivyResolver
addResolver
ivyResolver
DependencyResolver
artifactResolver
DualResolver
resolver
getArtifactResolver
if
artifactResolver
addResolver
artifactResolver
public
void
setDefaultCache
File
cacheDirectory
setVariable
cacheDirectory
getAbsolutePath
defaultCache
cacheDirectory
if
defaultRepositoryCacheManager
if
equals
defaultRepositoryCacheManager
getName
defaultRepositoryCacheManager
instanceof
DefaultRepositoryCacheManager
DefaultRepositoryCacheManager
defaultRepositoryCacheManager
setBasedir
defaultCache
public
void
setDefaultResolver
String
resolverName
checkResolverName
resolverName
defaultResolverName
resolverName
private
void
checkResolverName
String
resolverName
if
resolverName
resolversMap
containsKey
resolverName
throw
new
IllegalArgumentException
resolverName
public
void
addModuleConfiguration
Map
attributes
PatternMatcher
matcher
String
resolverName
String
branch
String
conflictManager
String
resolveMode
checkResolverName
resolverName
moduleSettings
defineRule
new
MapMatcher
attributes
matcher
new
ModuleSettings
resolverName
branch
conflictManager
resolveMode
public
File
resolveFile
String
fileName
return
FileUtil
resolveFile
baseDir
fileName
public
void
setBaseDir
File
baseDir
this
baseDir
baseDir
getAbsoluteFile
setVariable
this
baseDir
getAbsolutePath
setVariable
this
baseDir
getAbsolutePath
public
File
getBaseDir
return
baseDir
public
File
getDefaultIvyUserDir
if
defaultUserDir
if
getVariable
setDefaultIvyUserDir
Checks
checkAbsolute
getVariable
Message
verbose
defaultUserDir
else
setDefaultIvyUserDir
new
File
System
getProperty
Message
verbose
defaultUserDir
return
defaultUserDir
public
void
setDefaultIvyUserDir
File
defaultUserDir
this
defaultUserDir
defaultUserDir
setVariable
this
defaultUserDir
getAbsolutePath
setVariable
this
defaultUserDir
getAbsolutePath
public
File
getDefaultCache
if
defaultCache
String
cache
getVariable
if
cache
defaultCache
Checks
checkAbsolute
cache
else
setDefaultCache
new
File
getDefaultIvyUserDir
Message
verbose
defaultCache
return
defaultCache
public
void
setDefaultRepositoryCacheBasedir
String
repositoryCacheRoot
setVariable
repositoryCacheRoot
if
defaultRepositoryCacheManager
equals
defaultRepositoryCacheManager
getName
defaultRepositoryCacheManager
instanceof
DefaultRepositoryCacheManager
DefaultRepositoryCacheManager
defaultRepositoryCacheManager
setBasedir
getDefaultRepositoryCacheBasedir
public
void
setDefaultResolutionCacheBasedir
String
resolutionCacheRoot
setVariable
resolutionCacheRoot
if
resolutionCacheManager
resolutionCacheManager
instanceof
DefaultResolutionCacheManager
DefaultResolutionCacheManager
resolutionCacheManager
setBasedir
getDefaultResolutionCacheBasedir
public
File
getDefaultRepositoryCacheBasedir
String
repositoryCacheRoot
getVariable
if
repositoryCacheRoot
return
Checks
checkAbsolute
repositoryCacheRoot
else
return
getDefaultCache
public
File
getDefaultResolutionCacheBasedir
String
resolutionCacheRoot
getVariable
if
resolutionCacheRoot
return
Checks
checkAbsolute
resolutionCacheRoot
else
return
getDefaultCache
public
void
setDictatorResolver
DependencyResolver
resolver
dictatorResolver
resolver
public
DependencyResolver
getResolver
ModuleRevisionId
mrid
if
dictatorResolver
return
dictatorResolver
String
resolverName
getResolverName
mrid
return
getResolver
resolverName
public
DependencyResolver
getResolver
String
resolverName
if
dictatorResolver
return
dictatorResolver
DependencyResolver
resolver
DependencyResolver
resolversMap
get
resolverName
if
resolver
Message
error
resolverName
return
resolver
public
DependencyResolver
getDefaultResolver
if
dictatorResolver
return
dictatorResolver
if
defaultResolver
defaultResolver
DependencyResolver
resolversMap
get
defaultResolverName
return
defaultResolver
public
String
getResolverName
ModuleRevisionId
mrid
ModuleSettings
ms
ModuleSettings
moduleSettings
getRule
mrid
new
Filter
public
boolean
accept
Object
o
return
ModuleSettings
o
getResolverName
return
ms
defaultResolverName
ms
getResolverName
public
String
getDefaultBranch
ModuleId
moduleId
ModuleSettings
ms
ModuleSettings
moduleSettings
getRule
moduleId
new
Filter
public
boolean
accept
Object
o
return
ModuleSettings
o
getBranch
return
ms
getDefaultBranch
ms
getBranch
public
String
getDefaultBranch
return
defaultBranch
public
void
setDefaultBranch
String
defaultBranch
this
defaultBranch
defaultBranch
public
ConflictManager
getConflictManager
ModuleId
moduleId
ModuleSettings
ms
ModuleSettings
moduleSettings
getRule
moduleId
new
Filter
public
boolean
accept
Object
o
return
ModuleSettings
o
getConflictManager
if
ms
return
getDefaultConflictManager
else
ConflictManager
cm
getConflictManager
ms
getConflictManager
if
cm
throw
new
IllegalStateException
ms
getConflictManager
return
cm
public
String
getResolveMode
ModuleId
moduleId
ModuleSettings
ms
ModuleSettings
moduleSettings
getRule
moduleId
new
Filter
public
boolean
accept
Object
o
return
ModuleSettings
o
getResolveMode
return
ms
getDefaultResolveMode
ms
getResolveMode
public
String
getDefaultResolveMode
return
defaultResolveMode
public
void
setDefaultResolveMode
String
defaultResolveMode
this
defaultResolveMode
defaultResolveMode
public
void
addConfigured
ConflictManager
cm
addConflictManager
cm
getName
cm
public
ConflictManager
getConflictManager
String
name
if
equals
name
return
getDefaultConflictManager
return
ConflictManager
conflictsManager
get
name
public
void
addConflictManager
String
name
ConflictManager
cm
init
cm
conflictsManager
put
name
cm
public
void
addConfigured
LatestStrategy
latest
addLatestStrategy
latest
getName
latest
public
LatestStrategy
getLatestStrategy
String
name
if
equals
name
return
getDefaultLatestStrategy
return
LatestStrategy
latestStrategies
get
name
public
void
addLatestStrategy
String
name
LatestStrategy
latest
init
latest
latestStrategies
put
name
latest
public
void
addConfigured
LockStrategy
lockStrategy
addLockStrategy
lockStrategy
getName
lockStrategy
public
LockStrategy
getLockStrategy
String
name
if
equals
name
return
getDefaultLockStrategy
return
LockStrategy
lockStrategies
get
name
public
void
addLockStrategy
String
name
LockStrategy
lockStrategy
init
lockStrategy
lockStrategies
put
name
lockStrategy
public
void
addConfigured
Namespace
ns
addNamespace
ns
public
Namespace
getNamespace
String
name
if
equals
name
return
getSystemNamespace
return
Namespace
namespaces
get
name
public
Namespace
getSystemNamespace
return
Namespace
SYSTEM_NAMESPACE
public
void
addNamespace
Namespace
ns
init
ns
namespaces
put
ns
getName
ns
public
void
addConfigured
PatternMatcher
m
addMatcher
m
public
PatternMatcher
getMatcher
String
name
return
PatternMatcher
matchers
get
name
public
void
addMatcher
PatternMatcher
m
init
m
matchers
put
m
getName
m
public
void
addConfigured
RepositoryCacheManager
c
addRepositoryCacheManager
c
public
RepositoryCacheManager
getRepositoryCacheManager
String
name
return
RepositoryCacheManager
repositoryCacheManagers
get
name
public
void
addRepositoryCacheManager
RepositoryCacheManager
c
init
c
repositoryCacheManagers
put
c
getName
c
public
RepositoryCacheManager
getRepositoryCacheManagers
return
RepositoryCacheManager
repositoryCacheManagers
values
toArray
new
RepositoryCacheManager
repositoryCacheManagers
size
public
void
addConfigured
ReportOutputter
outputter
addReportOutputter
outputter
public
ReportOutputter
getReportOutputter
String
name
return
ReportOutputter
reportOutputters
get
name
public
void
addReportOutputter
ReportOutputter
outputter
init
outputter
reportOutputters
put
outputter
getName
outputter
public
ReportOutputter
getReportOutputters
return
ReportOutputter
reportOutputters
values
toArray
new
ReportOutputter
reportOutputters
size
public
void
addConfigured
VersionMatcher
vmatcher
addVersionMatcher
vmatcher
public
VersionMatcher
getVersionMatcher
String
name
return
VersionMatcher
versionMatchers
get
name
public
void
addVersionMatcher
VersionMatcher
vmatcher
init
vmatcher
versionMatchers
put
vmatcher
getName
vmatcher
if
versionMatcher
versionMatcher
new
ChainVersionMatcher
addVersionMatcher
new
ExactVersionMatcher
if
versionMatcher
instanceof
ChainVersionMatcher
ChainVersionMatcher
chain
ChainVersionMatcher
versionMatcher
chain
add
vmatcher
public
VersionMatcher
getVersionMatchers
return
VersionMatcher
versionMatchers
values
toArray
new
VersionMatcher
versionMatchers
size
public
VersionMatcher
getVersionMatcher
if
versionMatcher
configureDefaultVersionMatcher
return
versionMatcher
public
void
configureDefaultVersionMatcher
addVersionMatcher
new
LatestVersionMatcher
addVersionMatcher
new
SubVersionMatcher
addVersionMatcher
new
VersionRangeMatcher
public
CircularDependencyStrategy
getCircularDependencyStrategy
if
circularDependencyStrategy
circularDependencyStrategy
getCircularDependencyStrategy
return
circularDependencyStrategy
public
CircularDependencyStrategy
getCircularDependencyStrategy
String
name
if
equals
name
name
return
CircularDependencyStrategy
circularDependencyStrategies
get
name
public
void
setCircularDependencyStrategy
CircularDependencyStrategy
strategy
circularDependencyStrategy
strategy
public
void
addConfigured
CircularDependencyStrategy
strategy
addCircularDependencyStrategy
strategy
private
void
addCircularDependencyStrategy
CircularDependencyStrategy
strategy
circularDependencyStrategies
put
strategy
getName
strategy
private
void
configureDefaultCircularDependencyStrategies
addCircularDependencyStrategy
WarnCircularDependencyStrategy
getInstance
addCircularDependencyStrategy
ErrorCircularDependencyStrategy
getInstance
addCircularDependencyStrategy
IgnoreCircularDependencyStrategy
getInstance
public
StatusManager
getStatusManager
if
statusManager
statusManager
StatusManager
newDefaultInstance
return
statusManager
public
void
setStatusManager
StatusManager
statusManager
this
statusManager
statusManager
public
String
getIgnorableFilenames
return
String
listingIgnore
toArray
new
String
listingIgnore
size
public
void
filterIgnore
Collection
names
names
removeAll
listingIgnore
public
boolean
isCheckUpToDate
return
checkUpToDate
public
void
setCheckUpToDate
boolean
checkUpToDate
this
checkUpToDate
checkUpToDate
public
boolean
doValidate
return
validate
public
void
setValidate
boolean
validate
this
validate
validate
public
String
getVariable
String
name
return
variableContainer
getVariable
name
public
ConflictManager
getDefaultConflictManager
if
defaultConflictManager
defaultConflictManager
new
LatestConflictManager
getDefaultLatestStrategy
return
defaultConflictManager
public
void
setDefaultConflictManager
ConflictManager
defaultConflictManager
this
defaultConflictManager
defaultConflictManager
public
LatestStrategy
getDefaultLatestStrategy
if
defaultLatestStrategy
defaultLatestStrategy
new
LatestRevisionStrategy
return
defaultLatestStrategy
public
void
setDefaultLatestStrategy
LatestStrategy
defaultLatestStrategy
this
defaultLatestStrategy
defaultLatestStrategy
public
LockStrategy
getDefaultLockStrategy
if
defaultLockStrategy
defaultLockStrategy
new
NoLockStrategy
return
defaultLockStrategy
public
void
setDefaultLockStrategy
LockStrategy
defaultLockStrategy
this
defaultLockStrategy
defaultLockStrategy
public
RepositoryCacheManager
getDefaultRepositoryCacheManager
if
defaultRepositoryCacheManager
defaultRepositoryCacheManager
new
DefaultRepositoryCacheManager
this
getDefaultRepositoryCacheBasedir
addRepositoryCacheManager
defaultRepositoryCacheManager
return
defaultRepositoryCacheManager
public
void
setDefaultRepositoryCacheManager
RepositoryCacheManager
cache
this
defaultRepositoryCacheManager
cache
public
ResolutionCacheManager
getResolutionCacheManager
if
resolutionCacheManager
resolutionCacheManager
new
DefaultResolutionCacheManager
getDefaultResolutionCacheBasedir
return
resolutionCacheManager
public
void
setResolutionCacheManager
ResolutionCacheManager
resolutionCacheManager
this
resolutionCacheManager
resolutionCacheManager
public
void
addTrigger
Trigger
trigger
init
trigger
triggers
add
trigger
public
List
getTriggers
return
triggers
public
void
addConfigured
Trigger
trigger
addTrigger
trigger
public
boolean
isUseRemoteConfig
return
useRemoteConfig
public
void
setUseRemoteConfig
boolean
useRemoteConfig
this
useRemoteConfig
useRemoteConfig
public
boolean
logModulesInUse
String
var
getVariable
return
var
Boolean
valueOf
var
booleanValue
public
boolean
logModuleWhenFound
String
var
getVariable
return
var
Boolean
valueOf
var
booleanValue
public
boolean
logResolvedRevision
String
var
getVariable
return
var
Boolean
valueOf
var
booleanValue
public
boolean
debugConflictResolution
if
debugConflictResolution
String
var
getVariable
debugConflictResolution
Boolean
valueOf
var
Boolean
valueOf
var
booleanValue
return
debugConflictResolution
booleanValue
public
final
boolean
debugLocking
if
debugLocking
String
var
getVariable
debugLocking
Boolean
valueOf
var
Boolean
valueOf
var
booleanValue
return
debugLocking
booleanValue
public
boolean
dumpMemoryUsage
if
dumpMemoryUsage
String
var
getVariable
dumpMemoryUsage
Boolean
valueOf
var
Boolean
valueOf
var
booleanValue
return
dumpMemoryUsage
booleanValue
public
boolean
logNotConvertedExclusionRule
return
logNotConvertedExclusionRule
public
void
setLogNotConvertedExclusionRule
boolean
logNotConvertedExclusionRule
this
logNotConvertedExclusionRule
logNotConvertedExclusionRule
private
void
init
Object
obj
if
obj
instanceof
IvySettingsAware
IvySettingsAware
obj
setSettings
this
else
if
obj
instanceof
DependencyResolver
DependencyResolver
obj
setSettings
this
private
static
class
ModuleSettings
private
String
resolverName
private
String
branch
private
String
conflictManager
private
String
resolveMode
public
ModuleSettings
String
resolver
String
branchName
String
conflictMgr
String
resolveMode
this
resolverName
resolver
this
branch
branchName
this
conflictManager
conflictMgr
this
resolveMode
resolveMode
public
String
toString
return
resolverName
resolverName
branch
branch
conflictManager
conflictManager
resolveMode
resolveMode
public
String
getBranch
return
branch
public
String
getResolverName
return
resolverName
public
String
getConflictManager
return
conflictManager
public
String
getResolveMode
return
resolveMode
public
long
getInterruptTimeout
return
INTERUPT_TIMEOUT
public
Collection
getResolvers
return
resolversMap
values
public
Collection
getResolverNames
return
resolversMap
keySet
public
Collection
getMatcherNames
return
matchers
keySet
public
IvyVariableContainer
getVariableContainer
return
variableContainer
public
void
setVariableContainer
IvyVariableContainer
variables
variableContainer
variables
public
RelativeUrlResolver
getRelativeUrlResolver
return
new
NormalRelativeUrlResolver
public
void
setDefaultCacheIvyPattern
String
defaultCacheIvyPattern
CacheUtil
checkCachePattern
defaultCacheIvyPattern
this
defaultCacheIvyPattern
defaultCacheIvyPattern
public
String
getDefaultCacheIvyPattern
return
defaultCacheIvyPattern
public
void
setDefaultCacheArtifactPattern
String
defaultCacheArtifactPattern
CacheUtil
checkCachePattern
defaultCacheArtifactPattern
this
defaultCacheArtifactPattern
defaultCacheArtifactPattern
public
String
getDefaultCacheArtifactPattern
return
defaultCacheArtifactPattern
public
void
setDefaultUseOrigin
boolean
useOrigin
defaultUseOrigin
useOrigin
public
boolean
isDefaultUseOrigin
return
defaultUseOrigin
public
void
useDeprecatedUseOrigin
Message
deprecated
setDefaultUseOrigin
public
void
validate
validateAll
resolversMap
values
validateAll
conflictsManager
values
validateAll
latestStrategies
values
validateAll
lockStrategies
values
validateAll
repositoryCacheManagers
values
validateAll
reportOutputters
values
validateAll
circularDependencyStrategies
values
validateAll
versionMatchers
values
validateAll
namespaces
values
private
void
validateAll
Collection
values
for
Iterator
iterator
values
iterator
iterator
hasNext
Object
object
Object
iterator
next
if
object
instanceof
Validatable
Validatable
object
validate
