package
org
apache
ivy
plugins
parser
m2
import
java
io
File
import
java
io
FileOutputStream
import
java
io
IOException
import
java
io
OutputStreamWriter
import
java
io
PrintWriter
import
java
util
HashMap
import
java
util
Map
import
org
apache
ivy
Ivy
import
org
apache
ivy
core
module
descriptor
DependencyDescriptor
import
org
apache
ivy
core
module
descriptor
ModuleDescriptor
import
org
apache
ivy
core
module
id
ModuleRevisionId
import
org
apache
ivy
util
StringUtils
public
final
class
PomModuleDescriptorWriter
private
static
boolean
addIvyVersion
static
void
setAddIvyVersion
boolean
addIvyVersion
PomModuleDescriptorWriter
addIvyVersion
addIvyVersion
private
PomModuleDescriptorWriter
public
static
void
write
ModuleDescriptor
md
ConfigurationScopeMapping
mapping
File
output
throws
IOException
write
md
mapping
output
public
static
void
write
ModuleDescriptor
md
String
licenseHeader
ConfigurationScopeMapping
mapping
File
output
throws
IOException
if
output
getParentFile
output
getParentFile
mkdirs
PrintWriter
out
new
PrintWriter
new
OutputStreamWriter
new
FileOutputStream
output
try
out
println
if
licenseHeader
out
print
licenseHeader
out
println
out
println
out
println
Ivy
getIvyHomeURL
if
addIvyVersion
out
println
Ivy
getIvyVersion
Ivy
getIvyDate
out
println
out
println
out
println
out
println
printModuleId
md
out
printDependencies
md
mapping
out
out
println
finally
out
close
private
static
void
printModuleId
ModuleDescriptor
md
PrintWriter
out
ModuleRevisionId
mrid
md
getModuleRevisionId
out
println
mrid
getOrganisation
out
println
mrid
getName
out
println
if
mrid
getRevision
out
println
mrid
getRevision
if
md
getHomePage
out
println
md
getHomePage
private
static
void
printDependencies
ModuleDescriptor
md
ConfigurationScopeMapping
mapping
PrintWriter
out
DependencyDescriptor
dds
md
getDependencies
if
dds
length
out
println
for
int
i
i
dds
length
i
ModuleRevisionId
mrid
dds
i
getDependencyRevisionId
out
println
out
println
mrid
getOrganisation
out
println
mrid
getName
out
println
mrid
getRevision
String
scope
mapping
getScope
dds
i
getModuleConfigurations
if
scope
out
println
scope
if
mapping
isOptional
dds
i
getModuleConfigurations
out
println
out
println
out
println
public
static
final
ConfigurationScopeMapping
DEFAULT_MAPPING
new
ConfigurationScopeMapping
new
HashMap
put
put
put
put
put
public
static
class
ConfigurationScopeMapping
private
Map
scopes
public
ConfigurationScopeMapping
Map
scopesMapping
this
scopes
new
HashMap
scopesMapping
public
String
getScope
String
confs
return
String
scopes
get
StringUtils
join
confs
public
boolean
isOptional
String
confs
return
getScope
confs
