package
org
apache
ivy
core
resolve
import
java
util
ArrayList
import
java
util
Collection
import
java
util
Collections
import
java
util
Date
import
java
util
Iterator
import
java
util
LinkedHashMap
import
java
util
List
import
java
util
Map
import
java
util
Map
Entry
import
org
apache
ivy
core
event
EventManager
import
org
apache
ivy
core
module
descriptor
DependencyDescriptor
import
org
apache
ivy
core
module
descriptor
ModuleDescriptor
import
org
apache
ivy
core
module
id
ModuleRevisionId
import
org
apache
ivy
core
report
ConfigurationResolveReport
import
org
apache
ivy
util
Message
public
class
ResolveData
private
ResolveEngine
engine
private
Map
visitData
private
ConfigurationResolveReport
report
private
ResolveOptions
options
private
VisitNode
currentVisitNode
private
ResolvedModuleRevision
currentResolvedModuleRevision
public
ResolveData
ResolveData
data
boolean
validate
this
data
engine
new
ResolveOptions
data
options
setValidate
validate
data
report
data
visitData
setCurrentVisitNode
data
currentVisitNode
setCurrentResolvedModuleRevision
data
currentResolvedModuleRevision
public
ResolveData
ResolveEngine
engine
ResolveOptions
options
this
engine
options
new
LinkedHashMap
public
ResolveData
ResolveEngine
engine
ResolveOptions
options
ConfigurationResolveReport
report
this
engine
options
report
new
LinkedHashMap
public
ResolveData
ResolveEngine
engine
ResolveOptions
options
ConfigurationResolveReport
report
Map
visitData
this
engine
engine
this
report
report
this
visitData
visitData
this
options
options
public
ConfigurationResolveReport
getReport
return
report
public
IvyNode
getNode
ModuleRevisionId
mrid
VisitData
visitData
getVisitData
mrid
return
visitData
visitData
getNode
public
Collection
getNodes
Collection
nodes
new
ArrayList
for
Iterator
iter
visitData
values
iterator
iter
hasNext
VisitData
vdata
VisitData
iter
next
nodes
add
vdata
getNode
return
nodes
public
Collection
getNodeIds
return
visitData
keySet
public
VisitData
getVisitData
ModuleRevisionId
mrid
return
VisitData
visitData
get
mrid
public
VisitNode
getCurrentVisitNode
return
currentVisitNode
void
setCurrentVisitNode
VisitNode
currentVisitNode
this
currentVisitNode
currentVisitNode
public
void
register
VisitNode
node
register
node
getId
node
public
void
register
ModuleRevisionId
mrid
VisitNode
node
VisitData
visitData
getVisitData
mrid
if
visitData
visitData
new
VisitData
node
getNode
visitData
addVisitNode
node
this
visitData
put
mrid
visitData
else
visitData
setNode
node
getNode
visitData
addVisitNode
node
void
replaceNode
ModuleRevisionId
mrid
IvyNode
node
String
rootModuleConf
VisitData
visitData
getVisitData
mrid
if
visitData
throw
new
IllegalArgumentException
mrid
VisitData
keptVisitData
getVisitData
node
getId
if
keptVisitData
throw
new
IllegalArgumentException
node
node
getId
this
visitData
put
mrid
keptVisitData
keptVisitData
addVisitNodes
rootModuleConf
visitData
getVisitNodes
rootModuleConf
report
updateDependency
mrid
node
public
void
setReport
ConfigurationResolveReport
report
this
report
report
public
Date
getDate
return
options
getDate
public
boolean
isValidate
return
options
isValidate
public
boolean
isTransitive
return
options
isTransitive
public
ResolveOptions
getOptions
return
options
public
ResolveEngineSettings
getSettings
return
engine
getSettings
public
EventManager
getEventManager
return
engine
getEventManager
public
ResolveEngine
getEngine
return
engine
void
blacklist
IvyNode
node
for
Iterator
iter
visitData
entrySet
iterator
iter
hasNext
Entry
entry
Entry
iter
next
VisitData
vdata
VisitData
entry
getValue
if
vdata
getNode
node
node
getResolvedId
equals
entry
getKey
iter
remove
public
boolean
isBlacklisted
String
rootModuleConf
ModuleRevisionId
mrid
IvyNode
node
getNode
mrid
return
node
node
isBlacklisted
rootModuleConf
public
DependencyDescriptor
mediate
DependencyDescriptor
dd
VisitNode
current
getCurrentVisitNode
if
current
DependencyDescriptor
originalDD
dd
List
dependers
new
ArrayList
current
getPath
dependers
remove
dependers
size
Collections
reverse
dependers
for
Iterator
iterator
dependers
iterator
iterator
hasNext
VisitNode
n
VisitNode
iterator
next
ModuleDescriptor
md
n
getDescriptor
if
md
dd
md
mediate
dd
if
originalDD
dd
Message
verbose
originalDD
dd
return
getEngine
mediate
dd
getOptions
public
void
setCurrentResolvedModuleRevision
ResolvedModuleRevision
mr
this
currentResolvedModuleRevision
mr
public
ResolvedModuleRevision
getCurrentResolvedModuleRevision
return
currentResolvedModuleRevision
