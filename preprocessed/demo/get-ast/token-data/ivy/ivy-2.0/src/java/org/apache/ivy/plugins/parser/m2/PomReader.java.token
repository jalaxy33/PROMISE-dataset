package
org
apache
ivy
plugins
parser
m2
import
java
io
BufferedInputStream
import
java
io
FilterInputStream
import
java
io
IOException
import
java
io
InputStream
import
java
io
InputStreamReader
import
java
io
LineNumberReader
import
java
net
URL
import
java
util
ArrayList
import
java
util
HashMap
import
java
util
Iterator
import
java
util
LinkedList
import
java
util
List
import
java
util
Map
import
org
apache
ivy
core
IvyPatternHelper
import
org
apache
ivy
core
module
descriptor
License
import
org
apache
ivy
core
module
id
ModuleId
import
org
apache
ivy
core
module
id
ModuleRevisionId
import
org
apache
ivy
plugins
repository
Resource
import
org
apache
ivy
util
XMLHelper
import
org
w3c
dom
Document
import
org
w3c
dom
Element
import
org
w3c
dom
Node
import
org
w3c
dom
NodeList
import
org
xml
sax
EntityResolver
import
org
xml
sax
InputSource
import
org
xml
sax
SAXException
import
org
xml
sax
SAXParseException
public
class
PomReader
private
static
final
String
PACKAGING
private
static
final
String
DEPENDENCY
private
static
final
String
DEPENDENCIES
private
static
final
String
DEPENDENCY_MGT
private
static
final
String
PROJECT
private
static
final
String
MODEL
private
static
final
String
GROUP_ID
private
static
final
String
ARTIFACT_ID
private
static
final
String
VERSION
private
static
final
String
DESCRIPTION
private
static
final
String
HOMEPAGE
private
static
final
String
LICENSES
private
static
final
String
LICENSE
private
static
final
String
LICENSE_NAME
private
static
final
String
LICENSE_URL
private
static
final
String
PARENT
private
static
final
String
SCOPE
private
static
final
String
CLASSIFIER
private
static
final
String
OPTIONAL
private
static
final
String
EXCLUSIONS
private
static
final
String
EXCLUSION
private
static
final
String
DISTRIBUTION_MGT
private
static
final
String
RELOCATION
private
static
final
String
PROPERTIES
private
static
final
String
PLUGINS
private
static
final
String
PLUGIN
private
static
final
String
TYPE
private
HashMap
properties
new
HashMap
private
final
Element
projectElement
private
final
Element
parentElement
public
PomReader
URL
descriptorURL
Resource
res
throws
IOException
SAXException
InputStream
stream
new
AddDTDFilterInputStream
descriptorURL
openStream
try
Document
pomDomDoc
XMLHelper
parseToDom
stream
res
new
EntityResolver
public
InputSource
resolveEntity
String
publicId
String
systemId
throws
SAXException
IOException
if
systemId
systemId
endsWith
return
new
InputSource
PomReader
class
getResourceAsStream
return
projectElement
pomDomDoc
getDocumentElement
if
PROJECT
equals
projectElement
getNodeName
MODEL
equals
projectElement
getNodeName
throw
new
SAXParseException
res
getName
res
getName
parentElement
getFirstChildElement
projectElement
PARENT
finally
if
stream
try
stream
close
catch
IOException
e
public
boolean
hasParent
return
parentElement
public
void
setProperty
String
prop
String
val
if
properties
containsKey
prop
val
properties
put
prop
val
public
String
getGroupId
String
groupId
getFirstChildText
projectElement
GROUP_ID
if
groupId
groupId
getFirstChildText
parentElement
GROUP_ID
return
replaceProps
groupId
public
String
getParentGroupId
String
groupId
getFirstChildText
parentElement
GROUP_ID
if
groupId
groupId
getFirstChildText
projectElement
GROUP_ID
return
replaceProps
groupId
public
String
getArtifactId
String
val
getFirstChildText
projectElement
ARTIFACT_ID
if
val
val
getFirstChildText
parentElement
ARTIFACT_ID
return
replaceProps
val
public
String
getParentArtifactId
String
val
getFirstChildText
parentElement
ARTIFACT_ID
if
val
val
getFirstChildText
projectElement
ARTIFACT_ID
return
replaceProps
val
public
String
getVersion
String
val
getFirstChildText
projectElement
VERSION
if
val
val
getFirstChildText
parentElement
VERSION
return
replaceProps
val
public
String
getParentVersion
String
val
getFirstChildText
parentElement
VERSION
if
val
val
getFirstChildText
projectElement
VERSION
return
replaceProps
val
public
String
getPackaging
String
val
getFirstChildText
projectElement
PACKAGING
if
val
val
return
val
public
String
getHomePage
String
val
getFirstChildText
projectElement
HOMEPAGE
if
val
val
return
val
public
String
getDescription
String
val
getFirstChildText
projectElement
DESCRIPTION
if
val
val
return
val
trim
public
License
getLicenses
Element
licenses
getFirstChildElement
projectElement
LICENSES
if
licenses
return
new
License
licenses
normalize
List
lics
new
ArrayList
for
Iterator
it
getAllChilds
licenses
iterator
it
hasNext
Element
license
Element
it
next
if
LICENSE
equals
license
getNodeName
String
name
getFirstChildText
license
LICENSE_NAME
String
url
getFirstChildText
license
LICENSE_URL
if
name
url
continue
if
name
name
lics
add
new
License
name
url
return
License
lics
toArray
new
License
lics
size
public
ModuleRevisionId
getRelocation
Element
distrMgt
getFirstChildElement
projectElement
DISTRIBUTION_MGT
Element
relocation
getFirstChildElement
distrMgt
RELOCATION
if
relocation
return
else
String
relocGroupId
getFirstChildText
relocation
GROUP_ID
String
relocArtId
getFirstChildText
relocation
ARTIFACT_ID
String
relocVersion
getFirstChildText
relocation
VERSION
relocGroupId
relocGroupId
getGroupId
relocGroupId
relocArtId
relocArtId
getArtifactId
relocArtId
relocVersion
relocVersion
getVersion
relocVersion
return
ModuleRevisionId
newInstance
relocGroupId
relocArtId
relocVersion
public
List
getDependencies
Element
dependenciesElement
getFirstChildElement
projectElement
DEPENDENCIES
LinkedList
dependencies
new
LinkedList
if
dependenciesElement
NodeList
childs
dependenciesElement
getChildNodes
for
int
i
i
childs
getLength
i
Node
node
childs
item
i
if
node
instanceof
Element
DEPENDENCY
equals
node
getNodeName
dependencies
add
new
PomDependencyData
Element
node
return
dependencies
public
List
getDependencyMgt
Element
dependenciesElement
getFirstChildElement
projectElement
DEPENDENCY_MGT
dependenciesElement
getFirstChildElement
dependenciesElement
DEPENDENCIES
LinkedList
dependencies
new
LinkedList
if
dependenciesElement
NodeList
childs
dependenciesElement
getChildNodes
for
int
i
i
childs
getLength
i
Node
node
childs
item
i
if
node
instanceof
Element
DEPENDENCY
equals
node
getNodeName
dependencies
add
new
PomDependencyMgtElement
Element
node
return
dependencies
public
class
PomDependencyMgtElement
implements
PomDependencyMgt
private
final
Element
depElement
PomDependencyMgtElement
Element
depElement
this
depElement
depElement
public
String
getGroupId
String
val
getFirstChildText
depElement
GROUP_ID
return
replaceProps
val
public
String
getArtifactId
String
val
getFirstChildText
depElement
ARTIFACT_ID
return
replaceProps
val
public
String
getVersion
String
val
getFirstChildText
depElement
VERSION
return
replaceProps
val
public
String
getScope
String
val
getFirstChildText
depElement
SCOPE
return
replaceProps
val
public
List
getPlugins
LinkedList
plugins
new
LinkedList
Element
buildElement
getFirstChildElement
projectElement
if
buildElement
return
plugins
Element
pluginsElement
getFirstChildElement
buildElement
PLUGINS
if
pluginsElement
NodeList
childs
pluginsElement
getChildNodes
for
int
i
i
childs
getLength
i
Node
node
childs
item
i
if
node
instanceof
Element
PLUGIN
equals
node
getNodeName
plugins
add
new
PomPluginElement
Element
node
return
plugins
public
class
PomPluginElement
implements
PomDependencyMgt
private
Element
pluginElement
PomPluginElement
Element
pluginElement
this
pluginElement
pluginElement
public
String
getGroupId
String
val
getFirstChildText
pluginElement
GROUP_ID
return
replaceProps
val
public
String
getArtifactId
String
val
getFirstChildText
pluginElement
ARTIFACT_ID
return
replaceProps
val
public
String
getVersion
String
val
getFirstChildText
pluginElement
VERSION
return
replaceProps
val
public
String
getScope
return
public
class
PomDependencyData
extends
PomDependencyMgtElement
private
final
Element
depElement
PomDependencyData
Element
depElement
super
depElement
this
depElement
depElement
public
String
getScope
String
val
getFirstChildText
depElement
SCOPE
return
replaceProps
val
public
String
getClassifier
String
val
getFirstChildText
depElement
CLASSIFIER
return
replaceProps
val
public
String
getType
String
val
getFirstChildText
depElement
TYPE
return
replaceProps
val
public
boolean
isOptional
Element
e
getFirstChildElement
depElement
OPTIONAL
return
e
equalsIgnoreCase
getTextContent
e
public
List
getExcludedModules
Element
exclusionsElement
getFirstChildElement
depElement
EXCLUSIONS
LinkedList
exclusions
new
LinkedList
if
exclusionsElement
NodeList
childs
exclusionsElement
getChildNodes
for
int
i
i
childs
getLength
i
Node
node
childs
item
i
if
node
instanceof
Element
EXCLUSION
equals
node
getNodeName
String
groupId
getFirstChildText
Element
node
GROUP_ID
String
artifactId
getFirstChildText
Element
node
ARTIFACT_ID
if
groupId
artifactId
exclusions
add
ModuleId
newInstance
groupId
artifactId
return
exclusions
public
Map
getPomProperties
Map
pomProperties
new
HashMap
Element
propsEl
getFirstChildElement
projectElement
PROPERTIES
if
propsEl
propsEl
normalize
for
Iterator
it
getAllChilds
propsEl
iterator
it
hasNext
Element
prop
Element
it
next
pomProperties
put
prop
getNodeName
getTextContent
prop
return
pomProperties
private
String
replaceProps
String
val
if
val
return
else
return
IvyPatternHelper
substituteVariables
val
properties
trim
private
static
String
getTextContent
Element
element
StringBuffer
result
new
StringBuffer
NodeList
childNodes
element
getChildNodes
for
int
i
i
childNodes
getLength
i
Node
child
childNodes
item
i
switch
child
getNodeType
case
Node
CDATA_SECTION_NODE
case
Node
TEXT_NODE
result
append
child
getNodeValue
break
default
break
return
result
toString
private
static
String
getFirstChildText
Element
parentElem
String
name
Element
node
getFirstChildElement
parentElem
name
if
node
return
getTextContent
node
else
return
private
static
Element
getFirstChildElement
Element
parentElem
String
name
if
parentElem
return
NodeList
childs
parentElem
getChildNodes
for
int
i
i
childs
getLength
i
Node
node
childs
item
i
if
node
instanceof
Element
name
equals
node
getNodeName
return
Element
node
return
private
static
List
getAllChilds
Element
parent
List
r
new
LinkedList
if
parent
NodeList
childs
parent
getChildNodes
for
int
i
i
childs
getLength
i
Node
node
childs
item
i
if
node
instanceof
Element
r
add
node
return
r
private
static
final
class
AddDTDFilterInputStream
extends
FilterInputStream
private
static
final
int
MARK
private
static
final
String
DOCTYPE
private
int
count
private
byte
prefix
DOCTYPE
getBytes
private
AddDTDFilterInputStream
InputStream
in
throws
IOException
super
new
BufferedInputStream
in
this
in
mark
MARK
int
byte1
this
in
read
int
byte2
this
in
read
int
byte3
this
in
read
if
byte1
byte2
byte3
this
in
mark
MARK
else
this
in
reset
int
bytesToSkip
LineNumberReader
reader
new
LineNumberReader
new
InputStreamReader
this
in
String
firstLine
reader
readLine
if
firstLine
String
trimmed
firstLine
trim
if
trimmed
startsWith
int
endIndex
trimmed
indexOf
String
xmlDecl
trimmed
substring
endIndex
prefix
xmlDecl
DOCTYPE
getBytes
bytesToSkip
xmlDecl
getBytes
length
this
in
reset
for
int
i
i
bytesToSkip
i
this
in
read
public
int
read
throws
IOException
if
count
prefix
length
return
prefix
count
int
result
super
read
return
result
public
int
read
byte
b
int
off
int
len
throws
IOException
if
b
throw
new
NullPointerException
else
if
off
off
b
length
len
off
len
b
length
off
len
throw
new
IndexOutOfBoundsException
else
if
len
return
int
nbrBytesCopied
if
count
prefix
length
int
nbrBytesFromPrefix
Math
min
prefix
length
count
len
System
arraycopy
prefix
count
b
off
nbrBytesFromPrefix
nbrBytesCopied
nbrBytesFromPrefix
if
nbrBytesCopied
len
nbrBytesCopied
in
read
b
off
nbrBytesCopied
len
nbrBytesCopied
count
nbrBytesCopied
return
nbrBytesCopied
