package
org
apache
tools
ant
import
java
io
import
java
util
import
java
net
import
java
lang
reflect
public
class
Launcher
static
private
File
determineAntHome11
String
classpath
System
getProperty
StringTokenizer
tokenizer
new
StringTokenizer
classpath
System
getProperty
while
tokenizer
hasMoreTokens
String
path
tokenizer
nextToken
if
path
endsWith
File
antJarFile
new
File
path
File
libDirectory
new
File
antJarFile
getParent
File
antHome
new
File
libDirectory
getParent
return
antHome
return
static
private
File
determineAntHome
ClassLoader
systemClassLoader
try
String
className
Launcher
class
getName
replace
URL
classResource
systemClassLoader
getResource
className
String
fileComponent
classResource
getFile
if
classResource
getProtocol
equals
int
classFileIndex
fileComponent
lastIndexOf
className
if
classFileIndex
fileComponent
fileComponent
substring
classFileIndex
File
classFilesDir
new
File
fileComponent
File
buildDir
new
File
classFilesDir
getParent
File
devAntHome
new
File
buildDir
getParent
return
devAntHome
else
if
classResource
getProtocol
equals
int
classSeparatorIndex
fileComponent
lastIndexOf
if
classSeparatorIndex
fileComponent
fileComponent
substring
classSeparatorIndex
URL
antJarURL
new
URL
fileComponent
File
antJarFile
new
File
antJarURL
getFile
File
libDirectory
new
File
antJarFile
getParent
File
antHome
new
File
libDirectory
getParent
return
antHome
catch
MalformedURLException
e
e
printStackTrace
return
static
private
void
addDirJars
AntClassLoader
classLoader
File
jarDir
String
fileList
jarDir
list
new
FilenameFilter
public
boolean
accept
File
dir
String
name
return
name
endsWith
if
fileList
for
int
i
i
fileList
length
i
File
jarFile
new
File
jarDir
fileList
i
classLoader
addPathElement
jarFile
getAbsolutePath
static
private
void
addToolsJar
AntClassLoader
antLoader
String
javaHome
System
getProperty
if
javaHome
endsWith
javaHome
javaHome
substring
javaHome
length
System
out
println
javaHome
File
toolsJar
new
File
javaHome
if
toolsJar
exists
System
out
println
toolsJar
getPath
else
antLoader
addPathElement
toolsJar
getAbsolutePath
static
public
void
main
String
args
File
antHome
ClassLoader
systemClassLoader
Launcher
class
getClassLoader
if
systemClassLoader
antHome
determineAntHome11
else
antHome
determineAntHome
systemClassLoader
if
antHome
System
err
println
System
exit
System
out
println
antHome
AntClassLoader
antLoader
new
AntClassLoader
systemClassLoader
addToolsJar
antLoader
File
libDir
new
File
antHome
addDirJars
antLoader
libDir
File
optionalDir
new
File
antHome
addDirJars
antLoader
optionalDir
Properties
launchProperties
new
Properties
launchProperties
put
antHome
getAbsolutePath
try
Class
mainClass
antLoader
loadClass
antLoader
initializeClass
mainClass
final
Class
param
Class
forName
Properties
class
ClassLoader
class
final
Method
startMethod
mainClass
getMethod
param
final
Object
argument
args
launchProperties
systemClassLoader
startMethod
invoke
argument
catch
Exception
e
System
out
println
e
getClass
getName
e
getMessage
e
printStackTrace
