package
org
apache
tools
ant
import
java
io
import
java
util
import
javax
xml
parsers
import
org
w3c
dom
import
org
apache
tools
ant
util
DOMElementWriter
public
class
XmlLogger
implements
BuildListener
private
static
final
DocumentBuilder
builder
getDocumentBuilder
private
static
DocumentBuilder
getDocumentBuilder
try
return
DocumentBuilderFactory
newInstance
newDocumentBuilder
catch
Exception
exc
throw
new
ExceptionInInitializerError
exc
private
static
final
String
BUILD_TAG
private
static
final
String
TARGET_TAG
private
static
final
String
TASK_TAG
private
static
final
String
MESSAGE_TAG
private
static
final
String
NAME_ATTR
private
static
final
String
TIME_ATTR
private
static
final
String
PRIORITY_ATTR
private
static
final
String
LOCATION_ATTR
private
static
final
String
ERROR_ATTR
private
Document
doc
private
Hashtable
tasks
new
Hashtable
private
Hashtable
targets
new
Hashtable
private
Hashtable
threadStacks
new
Hashtable
private
TimedElement
buildElement
static
private
class
TimedElement
long
startTime
Element
element
public
XmlLogger
public
void
buildStarted
BuildEvent
event
buildElement
new
TimedElement
buildElement
startTime
System
currentTimeMillis
doc
builder
newDocument
buildElement
element
doc
createElement
BUILD_TAG
public
void
buildFinished
BuildEvent
event
long
totalTime
System
currentTimeMillis
buildElement
startTime
buildElement
element
setAttribute
TIME_ATTR
DefaultLogger
formatTime
totalTime
if
event
getException
buildElement
element
setAttribute
ERROR_ATTR
event
getException
toString
try
String
outFilename
event
getProject
getProperty
if
outFilename
outFilename
Writer
out
new
OutputStreamWriter
new
FileOutputStream
outFilename
out
write
new
DOMElementWriter
write
buildElement
element
out
out
flush
out
close
catch
IOException
exc
throw
new
BuildException
exc
buildElement
private
Stack
getStack
Stack
threadStack
Stack
threadStacks
get
Thread
currentThread
if
threadStack
threadStack
new
Stack
threadStacks
put
Thread
currentThread
threadStack
return
threadStack
public
void
targetStarted
BuildEvent
event
Target
target
event
getTarget
TimedElement
targetElement
new
TimedElement
targetElement
startTime
System
currentTimeMillis
targetElement
element
doc
createElement
TARGET_TAG
targetElement
element
setAttribute
NAME_ATTR
target
getName
targets
put
target
targetElement
getStack
push
targetElement
public
void
targetFinished
BuildEvent
event
Target
target
event
getTarget
TimedElement
targetElement
TimedElement
targets
get
target
if
targetElement
long
totalTime
System
currentTimeMillis
targetElement
startTime
targetElement
element
setAttribute
TIME_ATTR
DefaultLogger
formatTime
totalTime
TimedElement
parentElement
Stack
threadStack
getStack
if
threadStack
empty
TimedElement
poppedStack
TimedElement
threadStack
pop
if
poppedStack
targetElement
throw
new
RuntimeException
poppedStack
element
targetElement
element
if
threadStack
empty
parentElement
TimedElement
threadStack
peek
if
parentElement
buildElement
element
appendChild
targetElement
element
else
parentElement
element
appendChild
targetElement
element
public
void
taskStarted
BuildEvent
event
Task
task
event
getTask
TimedElement
taskElement
new
TimedElement
taskElement
startTime
System
currentTimeMillis
taskElement
element
doc
createElement
TASK_TAG
String
name
task
getClass
getName
int
pos
name
lastIndexOf
if
pos
name
name
substring
pos
taskElement
element
setAttribute
NAME_ATTR
name
taskElement
element
setAttribute
LOCATION_ATTR
event
getTask
getLocation
toString
tasks
put
task
taskElement
getStack
push
taskElement
public
void
taskFinished
BuildEvent
event
Task
task
event
getTask
TimedElement
taskElement
TimedElement
tasks
get
task
if
taskElement
long
totalTime
System
currentTimeMillis
taskElement
startTime
taskElement
element
setAttribute
TIME_ATTR
DefaultLogger
formatTime
totalTime
Target
target
task
getOwningTarget
TimedElement
targetElement
TimedElement
targets
get
target
if
targetElement
buildElement
element
appendChild
taskElement
element
else
targetElement
element
appendChild
taskElement
element
Stack
threadStack
getStack
if
threadStack
empty
TimedElement
poppedStack
TimedElement
threadStack
pop
if
poppedStack
taskElement
throw
new
RuntimeException
poppedStack
element
taskElement
element
public
void
messageLogged
BuildEvent
event
Element
messageElement
doc
createElement
MESSAGE_TAG
String
name
switch
event
getPriority
case
Project
MSG_ERR
name
break
case
Project
MSG_WARN
name
break
case
Project
MSG_INFO
name
break
default
name
break
messageElement
setAttribute
PRIORITY_ATTR
name
Text
messageText
doc
createCDATASection
event
getMessage
messageElement
appendChild
messageText
TimedElement
parentElement
Task
task
event
getTask
Target
target
event
getTarget
if
task
parentElement
TimedElement
tasks
get
task
if
parentElement
target
parentElement
TimedElement
targets
get
target
if
parentElement
Stack
threadStack
Stack
threadStacks
get
Thread
currentThread
if
threadStack
if
threadStack
empty
parentElement
TimedElement
threadStack
peek
if
parentElement
parentElement
element
appendChild
messageElement
else
buildElement
element
appendChild
messageElement
