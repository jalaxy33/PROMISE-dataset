package
org
apache
tools
ant
taskdefs
import
java
io
import
java
util
Enumeration
import
java
util
Hashtable
import
java
util
Stack
import
java
util
StringTokenizer
import
java
util
Vector
import
java
util
zip
import
org
apache
tools
ant
import
org
apache
tools
ant
types
import
org
apache
tools
ant
util
public
class
Zip
extends
MatchingTask
private
File
zipFile
private
File
baseDir
private
boolean
doCompress
protected
String
archiveType
private
static
long
emptyCrc
new
CRC32
getValue
protected
String
emptyBehavior
private
Vector
filesets
new
Vector
private
Hashtable
addedDirs
new
Hashtable
public
void
setZipfile
File
zipFile
this
zipFile
zipFile
public
void
setBasedir
File
baseDir
this
baseDir
baseDir
public
void
setCompress
boolean
c
doCompress
c
public
void
addFileset
FileSet
set
filesets
addElement
set
public
void
addZipfileset
ZipFileSet
set
filesets
addElement
set
public
void
setWhenempty
String
we
throws
BuildException
we
we
toLowerCase
if
equals
we
equals
we
equals
we
throw
new
BuildException
we
emptyBehavior
we
public
void
execute
throws
BuildException
if
baseDir
filesets
size
equals
archiveType
throw
new
BuildException
if
zipFile
throw
new
BuildException
archiveType
Vector
dss
new
Vector
if
baseDir
dss
addElement
getDirectoryScanner
baseDir
for
int
i
i
filesets
size
i
FileSet
fs
FileSet
filesets
elementAt
i
dss
addElement
fs
getDirectoryScanner
project
int
dssSize
dss
size
FileScanner
scanners
new
FileScanner
dssSize
dss
copyInto
scanners
if
isUpToDate
scanners
zipFile
return
log
archiveType
zipFile
getAbsolutePath
try
boolean
success
ZipOutputStream
zOut
new
ZipOutputStream
new
FileOutputStream
zipFile
try
if
doCompress
zOut
setMethod
ZipOutputStream
DEFLATED
else
zOut
setMethod
ZipOutputStream
STORED
initZipOutputStream
zOut
if
baseDir
addFiles
getDirectoryScanner
baseDir
zOut
addFiles
filesets
zOut
success
finally
try
if
zOut
zOut
close
catch
IOException
ex
if
success
throw
ex
catch
IOException
ioe
String
msg
archiveType
ioe
getMessage
if
zipFile
delete
msg
throw
new
BuildException
msg
ioe
location
finally
cleanUp
protected
void
addFiles
FileScanner
scanner
ZipOutputStream
zOut
String
prefix
String
fullpath
throws
IOException
if
prefix
length
fullpath
length
throw
new
BuildException
File
thisBaseDir
scanner
getBasedir
String
dirs
scanner
getIncludedDirectories
if
dirs
length
fullpath
length
throw
new
BuildException
for
int
i
i
dirs
length
i
String
name
dirs
i
replace
File
separatorChar
if
name
endsWith
name
addParentDirs
thisBaseDir
name
zOut
prefix
String
files
scanner
getIncludedFiles
if
files
length
fullpath
length
throw
new
BuildException
for
int
i
i
files
length
i
File
f
new
File
thisBaseDir
files
i
if
fullpath
length
addParentDirs
fullpath
zOut
zipFile
f
zOut
fullpath
else
String
name
files
i
replace
File
separatorChar
addParentDirs
thisBaseDir
name
zOut
prefix
zipFile
f
zOut
prefix
name
protected
void
addZipEntries
ZipFileSet
fs
DirectoryScanner
ds
ZipOutputStream
zOut
String
prefix
throws
IOException
ZipScanner
zipScanner
ZipScanner
ds
File
zipSrc
fs
getSrc
ZipEntry
entry
ZipInputStream
in
new
ZipInputStream
new
FileInputStream
zipSrc
while
entry
in
getNextEntry
String
vPath
entry
getName
if
zipScanner
match
vPath
addParentDirs
vPath
zOut
prefix
if
entry
isDirectory
zipFile
in
zOut
prefix
vPath
entry
getTime
protected
void
initZipOutputStream
ZipOutputStream
zOut
throws
IOException
BuildException
protected
boolean
isUpToDate
FileScanner
scanners
File
zipFile
throws
BuildException
String
fileNames
grabFileNames
scanners
File
files
grabFiles
scanners
fileNames
if
files
length
if
emptyBehavior
equals
log
archiveType
zipFile
Project
MSG_WARN
return
else
if
emptyBehavior
equals
throw
new
BuildException
archiveType
zipFile
location
else
if
zipFile
exists
return
log
archiveType
zipFile
Project
MSG_INFO
try
OutputStream
os
new
FileOutputStream
zipFile
try
byte
empty
new
byte
empty
empty
empty
empty
os
write
empty
finally
os
close
catch
IOException
ioe
throw
new
BuildException
ioe
location
return
else
for
int
i
i
files
length
i
if
files
i
equals
zipFile
throw
new
BuildException
location
if
zipFile
exists
return
SourceFileScanner
sfs
new
SourceFileScanner
this
MergingMapper
mm
new
MergingMapper
mm
setTo
zipFile
getAbsolutePath
for
int
i
i
scanners
length
i
if
sfs
restrict
fileNames
i
scanners
i
getBasedir
mm
length
return
return
protected
static
File
grabFiles
FileScanner
scanners
return
grabFiles
scanners
grabFileNames
scanners
protected
static
File
grabFiles
FileScanner
scanners
String
fileNames
Vector
files
new
Vector
for
int
i
i
fileNames
length
i
File
thisBaseDir
scanners
i
getBasedir
for
int
j
j
fileNames
i
length
j
files
addElement
new
File
thisBaseDir
fileNames
i
j
File
toret
new
File
files
size
files
copyInto
toret
return
toret
protected
static
String
grabFileNames
FileScanner
scanners
String
result
new
String
scanners
length
for
int
i
i
scanners
length
i
String
files
scanners
i
getIncludedFiles
String
dirs
scanners
i
getIncludedDirectories
result
i
new
String
files
length
dirs
length
System
arraycopy
files
result
i
files
length
System
arraycopy
dirs
result
i
files
length
dirs
length
return
result
protected
void
zipDir
File
dir
ZipOutputStream
zOut
String
vPath
throws
IOException
if
addedDirs
get
vPath
return
addedDirs
put
vPath
vPath
ZipEntry
ze
new
ZipEntry
vPath
if
dir
ze
setTime
dir
lastModified
ze
setSize
ze
setMethod
ZipEntry
STORED
ze
setCrc
emptyCrc
zOut
putNextEntry
ze
protected
void
zipFile
InputStream
in
ZipOutputStream
zOut
String
vPath
long
lastModified
throws
IOException
ZipEntry
ze
new
ZipEntry
vPath
ze
setTime
lastModified
if
doCompress
long
size
CRC32
cal
new
CRC32
if
in
markSupported
ByteArrayOutputStream
bos
new
ByteArrayOutputStream
byte
buffer
new
byte
int
count
do
size
count
cal
update
buffer
count
bos
write
buffer
count
count
in
read
buffer
buffer
length
while
count
in
new
ByteArrayInputStream
bos
toByteArray
else
in
mark
Integer
MAX_VALUE
byte
buffer
new
byte
int
count
do
size
count
cal
update
buffer
count
count
in
read
buffer
buffer
length
while
count
in
reset
ze
setSize
size
ze
setCrc
cal
getValue
zOut
putNextEntry
ze
byte
buffer
new
byte
int
count
do
zOut
write
buffer
count
count
in
read
buffer
buffer
length
while
count
protected
void
zipFile
File
file
ZipOutputStream
zOut
String
vPath
throws
IOException
if
file
equals
zipFile
throw
new
BuildException
location
FileInputStream
fIn
new
FileInputStream
file
try
zipFile
fIn
zOut
vPath
file
lastModified
finally
fIn
close
protected
void
addParentDirs
File
baseDir
String
entry
ZipOutputStream
zOut
String
prefix
throws
IOException
Stack
directories
new
Stack
int
slashPos
entry
length
while
slashPos
entry
lastIndexOf
int
slashPos
String
dir
entry
substring
slashPos
if
addedDirs
get
prefix
dir
break
directories
push
dir
while
directories
isEmpty
String
dir
String
directories
pop
File
f
if
baseDir
f
new
File
baseDir
dir
else
f
new
File
dir
zipDir
f
zOut
prefix
dir
protected
void
addFiles
Vector
filesets
ZipOutputStream
zOut
throws
IOException
for
int
i
i
filesets
size
i
FileSet
fs
FileSet
filesets
elementAt
i
DirectoryScanner
ds
fs
getDirectoryScanner
project
String
prefix
String
fullpath
if
fs
instanceof
ZipFileSet
ZipFileSet
zfs
ZipFileSet
fs
prefix
zfs
getPrefix
fullpath
zfs
getFullpath
if
prefix
length
prefix
endsWith
prefix
endsWith
prefix
if
prefix
length
addParentDirs
prefix
zOut
zipDir
zOut
prefix
else
if
fullpath
length
addParentDirs
fullpath
zOut
if
fs
instanceof
ZipFileSet
ZipFileSet
fs
getSrc
addZipEntries
ZipFileSet
fs
ds
zOut
prefix
else
addFiles
ds
zOut
prefix
fullpath
protected
void
cleanUp
