package
org
apache
tools
ant
import
java
io
import
java
util
import
org
xml
sax
import
org
w3c
dom
import
org
apache
tools
ant
taskdefs
import
javax
xml
parsers
public
class
ProjectHelper
private
static
SAXParserFactory
parserFactory
private
org
xml
sax
Parser
parser
private
Project
project
private
File
buildFile
private
File
buildFileParent
private
Locator
locator
public
static
void
configureProject
Project
project
File
buildFile
throws
BuildException
new
ProjectHelper
project
buildFile
parse
private
ProjectHelper
Project
project
File
buildFile
this
project
project
this
buildFile
new
File
buildFile
getAbsolutePath
buildFileParent
new
File
this
buildFile
getParent
private
void
parse
throws
BuildException
FileInputStream
inputStream
InputSource
inputSource
try
SAXParser
saxParser
getParserFactory
newSAXParser
parser
saxParser
getParser
String
uri
buildFile
getAbsolutePath
replace
for
int
index
uri
indexOf
index
index
uri
indexOf
uri
uri
substring
index
uri
substring
index
inputStream
new
FileInputStream
buildFile
inputSource
new
InputSource
inputStream
inputSource
setSystemId
uri
project
log
buildFile
uri
Project
MSG_VERBOSE
saxParser
parse
inputSource
new
RootHandler
catch
ParserConfigurationException
exc
throw
new
BuildException
exc
catch
SAXParseException
exc
Location
location
new
Location
buildFile
toString
exc
getLineNumber
exc
getColumnNumber
Throwable
t
exc
getException
if
t
instanceof
BuildException
BuildException
be
BuildException
t
if
be
getLocation
Location
UNKNOWN_LOCATION
be
setLocation
location
throw
be
throw
new
BuildException
exc
getMessage
t
location
catch
SAXException
exc
Throwable
t
exc
getException
if
t
instanceof
BuildException
throw
BuildException
t
throw
new
BuildException
exc
getMessage
t
catch
FileNotFoundException
exc
throw
new
BuildException
exc
catch
IOException
exc
throw
new
BuildException
exc
finally
if
inputStream
try
inputStream
close
catch
IOException
ioe
private
class
AbstractHandler
extends
HandlerBase
protected
DocumentHandler
parentHandler
public
AbstractHandler
DocumentHandler
parentHandler
this
parentHandler
parentHandler
parser
setDocumentHandler
this
public
void
startElement
String
tag
AttributeList
attrs
throws
SAXParseException
throw
new
SAXParseException
tag
locator
public
void
characters
char
buf
int
start
int
end
throws
SAXParseException
String
s
new
String
buf
start
end
trim
if
s
length
throw
new
SAXParseException
s
locator
protected
void
finished
public
void
endElement
String
name
throws
SAXException
finished
parser
setDocumentHandler
parentHandler
private
class
RootHandler
extends
HandlerBase
public
InputSource
resolveEntity
String
publicId
String
systemId
project
log
systemId
Project
MSG_VERBOSE
if
systemId
startsWith
String
path
systemId
substring
int
index
path
indexOf
while
index
path
path
substring
index
path
substring
index
index
path
indexOf
String
entitySystemId
path
index
path
indexOf
while
index
path
path
substring
index
path
substring
index
index
path
indexOf
File
file
new
File
path
if
file
isAbsolute
file
new
File
buildFileParent
path
try
InputSource
inputSource
new
InputSource
new
FileInputStream
file
inputSource
setSystemId
entitySystemId
return
inputSource
catch
FileNotFoundException
fne
project
log
file
getAbsolutePath
Project
MSG_WARN
return
public
void
startElement
String
tag
AttributeList
attrs
throws
SAXParseException
if
tag
equals
new
ProjectHandler
this
init
tag
attrs
else
throw
new
SAXParseException
locator
public
void
setDocumentLocator
Locator
locator
ProjectHelper
this
locator
locator
private
class
ProjectHandler
extends
AbstractHandler
public
ProjectHandler
DocumentHandler
parentHandler
super
parentHandler
public
void
init
String
tag
AttributeList
attrs
throws
SAXParseException
String
def
String
name
String
id
String
baseDir
for
int
i
i
attrs
getLength
i
String
key
attrs
getName
i
String
value
attrs
getValue
i
if
key
equals
def
value
else
if
key
equals
name
value
else
if
key
equals
id
value
else
if
key
equals
baseDir
value
else
throw
new
SAXParseException
attrs
getName
i
locator
if
def
throw
new
SAXParseException
locator
project
setDefaultTarget
def
if
name
project
setName
name
project
addReference
name
project
if
id
project
addReference
id
project
if
project
getProperty
project
setBasedir
project
getProperty
else
if
baseDir
project
setBasedir
buildFileParent
getAbsolutePath
else
if
new
File
baseDir
isAbsolute
project
setBasedir
baseDir
else
project
setBasedir
new
File
buildFileParent
baseDir
getAbsolutePath
public
void
startElement
String
name
AttributeList
attrs
throws
SAXParseException
if
name
equals
handleTaskdef
name
attrs
else
if
name
equals
handleProperty
name
attrs
else
if
name
equals
handleTarget
name
attrs
else
if
project
getDataTypeDefinitions
get
name
handleDataType
name
attrs
else
throw
new
SAXParseException
name
locator
private
void
handleTaskdef
String
name
AttributeList
attrs
throws
SAXParseException
new
TaskHandler
this
init
name
attrs
private
void
handleProperty
String
name
AttributeList
attrs
throws
SAXParseException
new
TaskHandler
this
init
name
attrs
private
void
handleTarget
String
tag
AttributeList
attrs
throws
SAXParseException
new
TargetHandler
this
init
tag
attrs
private
void
handleDataType
String
name
AttributeList
attrs
throws
SAXParseException
new
DataTypeHandler
this
init
name
attrs
private
class
TargetHandler
extends
AbstractHandler
private
Target
target
public
TargetHandler
DocumentHandler
parentHandler
super
parentHandler
public
void
init
String
tag
AttributeList
attrs
throws
SAXParseException
String
name
String
depends
String
ifCond
String
unlessCond
String
id
String
description
for
int
i
i
attrs
getLength
i
String
key
attrs
getName
i
String
value
attrs
getValue
i
if
key
equals
name
value
else
if
key
equals
depends
value
else
if
key
equals
ifCond
value
else
if
key
equals
unlessCond
value
else
if
key
equals
id
value
else
if
key
equals
description
value
else
throw
new
SAXParseException
key
locator
if
name
throw
new
SAXParseException
locator
target
new
Target
target
setName
name
target
setIf
ifCond
target
setUnless
unlessCond
target
setDescription
description
project
addTarget
name
target
if
id
id
equals
project
addReference
id
target
if
depends
length
StringTokenizer
tok
new
StringTokenizer
depends
while
tok
hasMoreTokens
target
addDependency
tok
nextToken
trim
public
void
startElement
String
name
AttributeList
attrs
throws
SAXParseException
new
TaskHandler
this
target
init
name
attrs
private
class
TaskHandler
extends
AbstractHandler
private
Target
target
private
Task
task
private
RuntimeConfigurable
wrapper
public
TaskHandler
DocumentHandler
parentHandler
Target
target
super
parentHandler
this
target
target
public
void
init
String
tag
AttributeList
attrs
throws
SAXParseException
try
task
project
createTask
tag
catch
BuildException
e
if
task
task
new
UnknownElement
tag
task
setProject
project
task
setLocation
new
Location
buildFile
toString
locator
getLineNumber
locator
getColumnNumber
configureId
task
attrs
if
target
task
setOwningTarget
target
target
addTask
task
task
init
wrapper
task
getRuntimeConfigurableWrapper
wrapper
setAttributes
attrs
else
task
init
configure
task
attrs
project
protected
void
finished
if
task
target
task
execute
public
void
characters
char
buf
int
start
int
end
throws
SAXParseException
if
wrapper
try
addText
task
buf
start
end
catch
BuildException
exc
throw
new
SAXParseException
exc
getMessage
locator
exc
else
wrapper
addText
buf
start
end
public
void
startElement
String
name
AttributeList
attrs
throws
SAXParseException
new
NestedElementHandler
this
task
wrapper
init
name
attrs
private
class
NestedElementHandler
extends
AbstractHandler
private
Object
target
private
Object
child
private
RuntimeConfigurable
parentWrapper
private
RuntimeConfigurable
childWrapper
public
NestedElementHandler
DocumentHandler
parentHandler
Object
target
RuntimeConfigurable
parentWrapper
super
parentHandler
if
target
instanceof
TaskAdapter
this
target
TaskAdapter
target
getProxy
else
this
target
target
this
parentWrapper
parentWrapper
public
void
init
String
propType
AttributeList
attrs
throws
SAXParseException
Class
targetClass
target
getClass
IntrospectionHelper
ih
IntrospectionHelper
getHelper
targetClass
try
if
target
instanceof
UnknownElement
child
new
UnknownElement
propType
toLowerCase
UnknownElement
target
addChild
UnknownElement
child
else
child
ih
createElement
target
propType
toLowerCase
configureId
child
attrs
if
parentWrapper
childWrapper
new
RuntimeConfigurable
child
childWrapper
setAttributes
attrs
parentWrapper
addChild
childWrapper
else
configure
child
attrs
project
catch
BuildException
exc
throw
new
SAXParseException
exc
getMessage
locator
exc
public
void
characters
char
buf
int
start
int
end
throws
SAXParseException
if
parentWrapper
try
addText
child
buf
start
end
catch
BuildException
exc
throw
new
SAXParseException
exc
getMessage
locator
exc
else
childWrapper
addText
buf
start
end
public
void
startElement
String
name
AttributeList
attrs
throws
SAXParseException
new
NestedElementHandler
this
child
childWrapper
init
name
attrs
private
class
DataTypeHandler
extends
AbstractHandler
private
Object
element
public
DataTypeHandler
DocumentHandler
parentHandler
super
parentHandler
public
void
init
String
propType
AttributeList
attrs
throws
SAXParseException
try
element
project
createDataType
propType
if
element
throw
new
BuildException
propType
configureId
element
attrs
configure
element
attrs
project
catch
BuildException
exc
throw
new
SAXParseException
exc
getMessage
locator
exc
public
void
characters
char
buf
int
start
int
end
throws
SAXParseException
try
addText
element
buf
start
end
catch
BuildException
exc
throw
new
SAXParseException
exc
getMessage
locator
exc
public
void
startElement
String
name
AttributeList
attrs
throws
SAXParseException
new
NestedElementHandler
this
element
init
name
attrs
public
static
void
configure
Object
target
AttributeList
attrs
Project
project
throws
BuildException
if
target
instanceof
TaskAdapter
target
TaskAdapter
target
getProxy
IntrospectionHelper
ih
IntrospectionHelper
getHelper
target
getClass
for
int
i
i
attrs
getLength
i
String
value
replaceProperties
project
attrs
getValue
i
project
getProperties
try
ih
setAttribute
project
target
attrs
getName
i
toLowerCase
value
catch
BuildException
be
if
attrs
getName
i
equals
throw
be
public
static
void
addText
Object
target
char
buf
int
start
int
end
throws
BuildException
addText
target
new
String
buf
start
end
public
static
void
addText
Object
target
String
text
throws
BuildException
if
text
text
trim
length
return
if
target
instanceof
TaskAdapter
target
TaskAdapter
target
getProxy
IntrospectionHelper
getHelper
target
getClass
addText
target
text
public
static
String
replaceProperties
Project
project
String
value
Hashtable
keys
throws
BuildException
StringBuffer
sb
new
StringBuffer
int
i
int
prev
int
pos
while
pos
value
indexOf
prev
if
pos
sb
append
value
substring
prev
pos
if
pos
value
length
sb
append
prev
pos
else
if
value
charAt
pos
sb
append
value
charAt
pos
prev
pos
else
int
endName
value
indexOf
pos
if
endName
throw
new
BuildException
value
String
n
value
substring
pos
endName
if
keys
containsKey
n
project
log
n
Project
MSG_VERBOSE
String
v
keys
containsKey
n
String
keys
get
n
n
sb
append
v
prev
endName
if
prev
value
length
sb
append
value
substring
prev
return
sb
toString
private
static
SAXParserFactory
getParserFactory
if
parserFactory
parserFactory
SAXParserFactory
newInstance
return
parserFactory
private
void
configureId
Object
target
AttributeList
attr
String
id
attr
getValue
if
id
project
addReference
id
target
