package
org
apache
tools
ant
taskdefs
optional
import
java
io
BufferedReader
import
java
io
BufferedWriter
import
java
io
File
import
java
io
FileInputStream
import
java
io
FileReader
import
java
io
FileOutputStream
import
java
io
FileWriter
import
java
io
InputStreamReader
import
java
io
IOException
import
java
io
OutputStreamWriter
import
java
io
PrintWriter
import
java
io
Reader
import
java
io
Writer
import
java
util
Vector
import
org
apache
tools
ant
BuildException
import
org
apache
tools
ant
DirectoryScanner
import
org
apache
tools
ant
Project
import
org
apache
tools
ant
Task
import
org
apache
tools
ant
types
FileSet
import
org
apache
tools
ant
types
RegularExpression
import
org
apache
tools
ant
types
Substitution
import
org
apache
tools
ant
util
FileUtils
import
org
apache
tools
ant
util
regexp
Regexp
public
class
ReplaceRegExp
extends
Task
private
File
file
private
String
flags
private
boolean
byline
private
Vector
filesets
private
RegularExpression
regex
private
Substitution
subs
private
static
final
FileUtils
FILE_UTILS
FileUtils
getFileUtils
private
String
encoding
public
ReplaceRegExp
super
this
file
this
filesets
new
Vector
this
flags
this
byline
this
regex
this
subs
public
void
setFile
File
file
this
file
file
public
void
setMatch
String
match
if
regex
throw
new
BuildException
regex
new
RegularExpression
regex
setPattern
match
public
void
setReplace
String
replace
if
subs
throw
new
BuildException
subs
new
Substitution
subs
setExpression
replace
public
void
setFlags
String
flags
this
flags
flags
public
void
setByLine
String
byline
Boolean
res
Boolean
valueOf
byline
if
res
res
Boolean
FALSE
this
byline
res
booleanValue
public
void
setByLine
boolean
byline
this
byline
byline
public
void
setEncoding
String
encoding
this
encoding
encoding
public
void
addFileset
FileSet
set
filesets
addElement
set
public
RegularExpression
createRegexp
if
regex
throw
new
BuildException
regex
new
RegularExpression
return
regex
public
Substitution
createSubstitution
if
subs
throw
new
BuildException
subs
new
Substitution
return
subs
protected
String
doReplace
RegularExpression
r
Substitution
s
String
input
int
options
String
res
input
Regexp
regexp
r
getRegexp
getProject
if
regexp
matches
input
options
log
Project
MSG_DEBUG
res
regexp
substitute
input
s
getExpression
getProject
options
return
res
protected
void
doReplace
File
f
int
options
throws
IOException
File
temp
FILE_UTILS
createTempFile
temp
deleteOnExit
Reader
r
Writer
w
try
if
encoding
r
new
FileReader
f
w
new
FileWriter
temp
else
r
new
InputStreamReader
new
FileInputStream
f
encoding
w
new
OutputStreamWriter
new
FileOutputStream
temp
encoding
BufferedReader
br
new
BufferedReader
r
BufferedWriter
bw
new
BufferedWriter
w
PrintWriter
pw
new
PrintWriter
bw
boolean
changes
log
regex
getPattern
getProject
subs
getExpression
getProject
f
getPath
byline
flags
length
flags
Project
MSG_VERBOSE
if
byline
StringBuffer
linebuf
new
StringBuffer
String
line
String
res
int
c
boolean
hasCR
do
c
br
read
if
c
if
hasCR
line
linebuf
toString
res
doReplace
regex
subs
line
options
if
res
equals
line
changes
pw
print
res
pw
print
linebuf
new
StringBuffer
else
hasCR
else
if
c
line
linebuf
toString
res
doReplace
regex
subs
line
options
if
res
equals
line
changes
pw
print
res
if
hasCR
pw
print
hasCR
pw
print
linebuf
new
StringBuffer
else
if
hasCR
c
line
linebuf
toString
res
doReplace
regex
subs
line
options
if
res
equals
line
changes
pw
print
res
if
hasCR
pw
print
hasCR
linebuf
new
StringBuffer
if
c
linebuf
append
char
c
while
c
pw
flush
else
String
buf
FileUtils
readFully
br
if
buf
buf
String
res
doReplace
regex
subs
buf
options
if
res
equals
buf
changes
pw
print
res
pw
flush
r
close
r
w
close
w
if
changes
log
Project
MSG_VERBOSE
try
FILE_UTILS
rename
temp
f
temp
catch
IOException
e
throw
new
BuildException
temp
getLocation
else
log
Project
MSG_DEBUG
finally
FileUtils
close
r
FileUtils
close
w
if
temp
temp
delete
public
void
execute
throws
BuildException
if
regex
throw
new
BuildException
if
subs
throw
new
BuildException
if
file
filesets
size
throw
new
BuildException
int
options
if
flags
indexOf
options
Regexp
REPLACE_ALL
if
flags
indexOf
options
Regexp
MATCH_CASE_INSENSITIVE
if
flags
indexOf
options
Regexp
MATCH_MULTILINE
if
flags
indexOf
options
Regexp
MATCH_SINGLELINE
if
file
file
exists
try
doReplace
file
options
catch
IOException
e
log
file
getAbsolutePath
e
toString
Project
MSG_ERR
else
if
file
log
file
getAbsolutePath
Project
MSG_ERR
int
sz
filesets
size
for
int
i
i
sz
i
FileSet
fs
FileSet
filesets
elementAt
i
DirectoryScanner
ds
fs
getDirectoryScanner
getProject
String
files
ds
getIncludedFiles
for
int
j
j
files
length
j
File
f
new
File
fs
getDir
getProject
files
j
if
f
exists
try
doReplace
f
options
catch
Exception
e
log
f
getAbsolutePath
e
toString
Project
MSG_ERR
else
log
f
getAbsolutePath
Project
MSG_ERR
