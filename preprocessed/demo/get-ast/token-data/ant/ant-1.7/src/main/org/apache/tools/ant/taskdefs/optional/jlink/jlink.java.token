package
org
apache
tools
ant
taskdefs
optional
jlink
import
java
io
BufferedInputStream
import
java
io
File
import
java
io
FileInputStream
import
java
io
FileOutputStream
import
java
io
IOException
import
java
io
InputStream
import
java
util
Enumeration
import
java
util
Vector
import
java
util
zip
CRC32
import
java
util
zip
Deflater
import
java
util
zip
ZipEntry
import
java
util
zip
ZipException
import
java
util
zip
ZipFile
import
java
util
zip
ZipOutputStream
public
class
jlink
private
String
outfile
private
Vector
mergefiles
new
Vector
private
Vector
addfiles
new
Vector
private
boolean
compression
byte
buffer
new
byte
public
void
setOutfile
String
outfile
if
outfile
return
this
outfile
outfile
public
void
addMergeFile
String
fileToMerge
if
fileToMerge
return
mergefiles
addElement
fileToMerge
public
void
addAddFile
String
fileToAdd
if
fileToAdd
return
addfiles
addElement
fileToAdd
public
void
addMergeFiles
String
filesToMerge
if
filesToMerge
return
for
int
i
i
filesToMerge
length
i
addMergeFile
filesToMerge
i
public
void
addAddFiles
String
filesToAdd
if
filesToAdd
return
for
int
i
i
filesToAdd
length
i
addAddFile
filesToAdd
i
public
void
setCompression
boolean
compress
this
compression
compress
public
void
link
throws
Exception
ZipOutputStream
output
new
ZipOutputStream
new
FileOutputStream
outfile
if
compression
output
setMethod
ZipOutputStream
DEFLATED
output
setLevel
Deflater
DEFAULT_COMPRESSION
else
output
setMethod
ZipOutputStream
STORED
Enumeration
merges
mergefiles
elements
while
merges
hasMoreElements
String
path
String
merges
nextElement
File
f
new
File
path
if
f
getName
endsWith
f
getName
endsWith
mergeZipJarContents
output
f
else
addAddFile
path
Enumeration
adds
addfiles
elements
while
adds
hasMoreElements
String
name
String
adds
nextElement
File
f
new
File
name
if
f
isDirectory
addDirContents
output
f
f
getName
compression
else
addFile
output
f
compression
if
output
try
output
close
catch
IOException
ioe
public
static
void
main
String
args
if
args
length
System
out
println
System
exit
jlink
linker
new
jlink
linker
setOutfile
args
for
int
i
i
args
length
i
linker
addMergeFile
args
i
try
linker
link
catch
Exception
ex
System
err
print
ex
getMessage
private
void
mergeZipJarContents
ZipOutputStream
output
File
f
throws
IOException
if
f
exists
return
ZipFile
zipf
new
ZipFile
f
Enumeration
entries
zipf
entries
while
entries
hasMoreElements
ZipEntry
inputEntry
ZipEntry
entries
nextElement
String
inputEntryName
inputEntry
getName
int
index
inputEntryName
indexOf
if
index
try
output
putNextEntry
processEntry
zipf
inputEntry
catch
ZipException
ex
String
mess
ex
getMessage
if
mess
indexOf
continue
else
throw
ex
InputStream
in
zipf
getInputStream
inputEntry
int
len
buffer
length
int
count
while
count
in
read
buffer
len
output
write
buffer
count
in
close
output
closeEntry
zipf
close
private
void
addDirContents
ZipOutputStream
output
File
dir
String
prefix
boolean
compress
throws
IOException
String
contents
dir
list
for
int
i
i
contents
length
i
String
name
contents
i
File
file
new
File
dir
name
if
file
isDirectory
addDirContents
output
file
prefix
name
compress
else
addFile
output
file
prefix
compress
private
String
getEntryName
File
file
String
prefix
String
name
file
getName
if
name
endsWith
InputStream
input
try
input
new
FileInputStream
file
String
className
ClassNameReader
getClassName
input
if
className
return
className
replace
catch
IOException
ioe
finally
if
input
try
input
close
catch
IOException
e
System
out
println
file
getPath
prefix
prefix
name
return
prefix
name
private
void
addFile
ZipOutputStream
output
File
file
String
prefix
boolean
compress
throws
IOException
if
file
exists
return
ZipEntry
entry
new
ZipEntry
getEntryName
file
prefix
entry
setTime
file
lastModified
entry
setSize
file
length
if
compress
entry
setCrc
calcChecksum
file
FileInputStream
input
new
FileInputStream
file
addToOutputStream
output
input
entry
private
void
addToOutputStream
ZipOutputStream
output
InputStream
input
ZipEntry
ze
throws
IOException
try
output
putNextEntry
ze
catch
ZipException
zipEx
input
close
return
int
numBytes
while
numBytes
input
read
buffer
output
write
buffer
numBytes
output
closeEntry
input
close
private
ZipEntry
processEntry
ZipFile
zip
ZipEntry
inputEntry
String
name
inputEntry
getName
if
inputEntry
isDirectory
name
endsWith
try
InputStream
input
zip
getInputStream
zip
getEntry
name
String
className
ClassNameReader
getClassName
input
input
close
if
className
name
className
replace
catch
IOException
ioe
ZipEntry
outputEntry
new
ZipEntry
name
outputEntry
setTime
inputEntry
getTime
outputEntry
setExtra
inputEntry
getExtra
outputEntry
setComment
inputEntry
getComment
outputEntry
setTime
inputEntry
getTime
if
compression
outputEntry
setMethod
ZipEntry
DEFLATED
else
outputEntry
setMethod
ZipEntry
STORED
outputEntry
setCrc
inputEntry
getCrc
outputEntry
setSize
inputEntry
getSize
return
outputEntry
private
long
calcChecksum
File
f
throws
IOException
BufferedInputStream
in
new
BufferedInputStream
new
FileInputStream
f
return
calcChecksum
in
private
long
calcChecksum
InputStream
in
throws
IOException
CRC32
crc
new
CRC32
int
len
buffer
length
int
count
int
haveRead
while
count
in
read
buffer
len
haveRead
count
crc
update
buffer
count
in
close
return
crc
getValue
