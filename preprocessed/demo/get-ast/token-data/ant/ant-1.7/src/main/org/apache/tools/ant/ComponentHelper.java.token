package
org
apache
tools
ant
import
java
lang
reflect
Method
import
java
lang
reflect
Modifier
import
java
lang
reflect
InvocationTargetException
import
java
io
InputStream
import
java
io
IOException
import
java
io
File
import
java
io
StringWriter
import
java
io
PrintWriter
import
java
util
Enumeration
import
java
util
Hashtable
import
java
util
HashSet
import
java
util
Iterator
import
java
util
Properties
import
java
util
Set
import
java
util
Stack
import
org
apache
tools
ant
taskdefs
Typedef
import
org
apache
tools
ant
taskdefs
Definer
import
org
apache
tools
ant
launch
Launcher
import
org
apache
tools
ant
util
FileUtils
public
class
ComponentHelper
private
AntTypeTable
antTypeTable
private
Hashtable
taskClassDefinitions
new
Hashtable
private
boolean
rebuildTaskClassDefinitions
private
Hashtable
typeClassDefinitions
new
Hashtable
private
boolean
rebuildTypeClassDefinitions
private
Set
checkedNamespaces
new
HashSet
private
Stack
antLibStack
new
Stack
private
String
antLibCurrentUri
private
ComponentHelper
next
private
Project
project
private
static
final
String
ERROR_NO_TASK_LIST_LOAD
private
static
final
String
ERROR_NO_TYPE_LIST_LOAD
public
static
final
String
COMPONENT_HELPER_REFERENCE
private
static
final
String
BUILD_SYSCLASSPATH_ONLY
private
static
final
String
ANT_PROPERTY_TASK
private
static
Properties
defaultDefinitions
new
Properties
public
static
ComponentHelper
getComponentHelper
Project
project
if
project
return
ComponentHelper
ph
ComponentHelper
project
getReference
COMPONENT_HELPER_REFERENCE
if
ph
return
ph
ph
new
ComponentHelper
ph
setProject
project
project
addReference
COMPONENT_HELPER_REFERENCE
ph
return
ph
protected
ComponentHelper
public
void
setNext
ComponentHelper
next
this
next
next
public
ComponentHelper
getNext
return
next
public
void
setProject
Project
project
this
project
project
antTypeTable
new
AntTypeTable
project
public
void
initSubProject
ComponentHelper
helper
AntTypeTable
typeTable
helper
antTypeTable
for
Iterator
i
typeTable
values
iterator
i
hasNext
AntTypeDefinition
def
AntTypeDefinition
i
next
antTypeTable
put
def
getName
def
for
Iterator
i
helper
checkedNamespaces
iterator
i
hasNext
checkedNamespaces
add
i
next
public
Object
createComponent
UnknownElement
ue
String
ns
String
componentType
throws
BuildException
Object
component
createComponent
componentType
if
component
instanceof
Task
Task
task
Task
component
task
setLocation
ue
getLocation
task
setTaskType
componentType
task
setTaskName
ue
getTaskName
task
setOwningTarget
ue
getOwningTarget
task
init
return
component
public
Object
createComponent
String
componentName
AntTypeDefinition
def
getDefinition
componentName
return
def
def
create
project
public
Class
getComponentClass
String
componentName
AntTypeDefinition
def
getDefinition
componentName
return
def
def
getExposedClass
project
public
AntTypeDefinition
getDefinition
String
componentName
checkNamespace
componentName
return
antTypeTable
getDefinition
componentName
public
void
initDefaultDefinitions
initTasks
initTypes
public
void
addTaskDefinition
String
taskName
Class
taskClass
checkTaskClass
taskClass
AntTypeDefinition
def
new
AntTypeDefinition
def
setName
taskName
def
setClassLoader
taskClass
getClassLoader
def
setClass
taskClass
def
setAdapterClass
TaskAdapter
class
def
setClassName
taskClass
getName
def
setAdaptToClass
Task
class
updateDataTypeDefinition
def
public
void
checkTaskClass
final
Class
taskClass
throws
BuildException
if
Modifier
isPublic
taskClass
getModifiers
final
String
message
taskClass
project
log
message
Project
MSG_ERR
throw
new
BuildException
message
if
Modifier
isAbstract
taskClass
getModifiers
final
String
message
taskClass
project
log
message
Project
MSG_ERR
throw
new
BuildException
message
try
taskClass
getConstructor
Class
catch
NoSuchMethodException
e
final
String
message
taskClass
project
log
message
Project
MSG_ERR
throw
new
BuildException
message
if
Task
class
isAssignableFrom
taskClass
TaskAdapter
checkTaskClass
taskClass
project
public
Hashtable
getTaskDefinitions
synchronized
taskClassDefinitions
synchronized
antTypeTable
if
rebuildTaskClassDefinitions
taskClassDefinitions
clear
for
Iterator
i
antTypeTable
keySet
iterator
i
hasNext
String
name
String
i
next
Class
clazz
antTypeTable
getExposedClass
name
if
clazz
continue
if
Task
class
isAssignableFrom
clazz
taskClassDefinitions
put
name
antTypeTable
getTypeClass
name
rebuildTaskClassDefinitions
return
taskClassDefinitions
public
Hashtable
getDataTypeDefinitions
synchronized
typeClassDefinitions
synchronized
antTypeTable
if
rebuildTypeClassDefinitions
typeClassDefinitions
clear
for
Iterator
i
antTypeTable
keySet
iterator
i
hasNext
String
name
String
i
next
Class
clazz
antTypeTable
getExposedClass
name
if
clazz
continue
if
Task
class
isAssignableFrom
clazz
typeClassDefinitions
put
name
antTypeTable
getTypeClass
name
rebuildTypeClassDefinitions
return
typeClassDefinitions
public
void
addDataTypeDefinition
String
typeName
Class
typeClass
AntTypeDefinition
def
new
AntTypeDefinition
def
setName
typeName
def
setClass
typeClass
updateDataTypeDefinition
def
project
log
typeName
typeClass
getName
Project
MSG_DEBUG
public
void
addDataTypeDefinition
AntTypeDefinition
def
updateDataTypeDefinition
def
public
Hashtable
getAntTypeTable
return
antTypeTable
public
Task
createTask
String
taskType
throws
BuildException
Task
task
createNewTask
taskType
if
task
taskType
equals
ANT_PROPERTY_TASK
addTaskDefinition
ANT_PROPERTY_TASK
org
apache
tools
ant
taskdefs
Property
class
task
createNewTask
taskType
return
task
private
Task
createNewTask
String
taskType
throws
BuildException
Class
c
getComponentClass
taskType
if
c
Task
class
isAssignableFrom
c
return
Object
obj
createComponent
taskType
if
obj
return
if
obj
instanceof
Task
throw
new
BuildException
taskType
obj
getClass
getName
Task
task
Task
obj
task
setTaskType
taskType
task
setTaskName
taskType
project
log
taskType
Project
MSG_DEBUG
return
task
public
Object
createDataType
String
typeName
throws
BuildException
return
createComponent
typeName
public
String
getElementName
Object
element
return
getElementName
element
public
String
getElementName
Object
o
boolean
brief
Class
elementClass
o
getClass
String
elementClassname
elementClass
getName
for
Iterator
i
antTypeTable
values
iterator
i
hasNext
AntTypeDefinition
def
AntTypeDefinition
i
next
if
elementClassname
equals
def
getClassName
elementClass
def
getExposedClass
project
String
name
def
getName
return
brief
name
name
return
getUnmappedElementName
o
getClass
brief
public
static
String
getElementName
Project
p
Object
o
boolean
brief
if
p
p
getProject
o
return
p
getUnmappedElementName
o
getClass
brief
getComponentHelper
p
getElementName
o
brief
private
static
String
getUnmappedElementName
Class
c
boolean
brief
if
brief
String
name
c
getName
return
name
substring
name
lastIndexOf
return
c
toString
private
static
Project
getProject
Object
o
if
o
instanceof
ProjectComponent
return
ProjectComponent
o
getProject
try
Method
m
o
getClass
getMethod
Class
if
Project
class
m
getReturnType
return
Project
m
invoke
o
Object
catch
Exception
e
return
private
boolean
validDefinition
AntTypeDefinition
def
return
def
getTypeClass
project
def
getExposedClass
project
private
boolean
sameDefinition
AntTypeDefinition
def
AntTypeDefinition
old
boolean
defValid
validDefinition
def
boolean
sameValidity
defValid
validDefinition
old
return
sameValidity
defValid
def
sameDefinition
old
project
private
void
updateDataTypeDefinition
AntTypeDefinition
def
String
name
def
getName
synchronized
antTypeTable
rebuildTaskClassDefinitions
rebuildTypeClassDefinitions
AntTypeDefinition
old
antTypeTable
getDefinition
name
if
old
if
sameDefinition
def
old
return
Class
oldClass
antTypeTable
getExposedClass
name
boolean
isTask
oldClass
Task
class
isAssignableFrom
oldClass
project
log
isTask
name
def
similarDefinition
old
project
Project
MSG_VERBOSE
Project
MSG_WARN
project
log
name
def
getClassName
Project
MSG_DEBUG
antTypeTable
put
name
def
public
void
enterAntLib
String
uri
antLibCurrentUri
uri
antLibStack
push
uri
public
String
getCurrentAntlibUri
return
antLibCurrentUri
public
void
exitAntLib
antLibStack
pop
antLibCurrentUri
antLibStack
size
String
antLibStack
peek
private
void
initTasks
ClassLoader
classLoader
getClassLoader
Properties
props
getDefaultDefinitions
Enumeration
e
props
propertyNames
while
e
hasMoreElements
String
name
String
e
nextElement
String
className
props
getProperty
name
AntTypeDefinition
def
new
AntTypeDefinition
def
setName
name
def
setClassName
className
def
setClassLoader
classLoader
def
setAdaptToClass
Task
class
def
setAdapterClass
TaskAdapter
class
antTypeTable
put
name
def
private
ClassLoader
getClassLoader
ClassLoader
classLoader
String
buildSysclasspath
project
getProperty
MagicNames
BUILD_SYSCLASSPATH
if
project
getCoreLoader
BUILD_SYSCLASSPATH_ONLY
equals
buildSysclasspath
classLoader
project
getCoreLoader
return
classLoader
private
static
synchronized
Properties
getDefaultDefinitions
boolean
type
throws
BuildException
int
idx
type
if
defaultDefinitions
idx
String
resource
type
MagicNames
TYPEDEFS_PROPERTIES_RESOURCE
MagicNames
TASKDEF_PROPERTIES_RESOURCE
String
errorString
type
ERROR_NO_TYPE_LIST_LOAD
ERROR_NO_TASK_LIST_LOAD
InputStream
in
try
in
ComponentHelper
class
getResourceAsStream
resource
if
in
throw
new
BuildException
errorString
Properties
p
new
Properties
p
load
in
defaultDefinitions
idx
p
catch
IOException
e
throw
new
BuildException
errorString
e
finally
FileUtils
close
in
return
defaultDefinitions
idx
private
void
initTypes
ClassLoader
classLoader
getClassLoader
Properties
props
getDefaultDefinitions
Enumeration
e
props
propertyNames
while
e
hasMoreElements
String
name
String
e
nextElement
String
className
props
getProperty
name
AntTypeDefinition
def
new
AntTypeDefinition
def
setName
name
def
setClassName
className
def
setClassLoader
classLoader
antTypeTable
put
name
def
private
synchronized
void
checkNamespace
String
componentName
String
uri
ProjectHelper
extractUriFromComponentName
componentName
if
equals
uri
uri
ProjectHelper
ANT_CORE_URI
if
uri
startsWith
ProjectHelper
ANTLIB_URI
return
if
checkedNamespaces
contains
uri
return
checkedNamespaces
add
uri
Typedef
definer
new
Typedef
definer
setProject
project
definer
init
definer
setURI
uri
definer
setTaskName
uri
definer
setResource
Definer
makeResourceFromURI
uri
definer
setOnError
new
Typedef
OnError
Typedef
OnError
POLICY_IGNORE
definer
execute
public
String
diagnoseCreationFailure
String
componentName
String
type
StringWriter
errorText
new
StringWriter
PrintWriter
out
new
PrintWriter
errorText
out
println
type
componentName
boolean
lowlevel
boolean
jars
boolean
definitions
boolean
antTask
String
home
System
getProperty
Launcher
USER_HOMEDIR
File
libDir
new
File
home
Launcher
USER_LIBDIR
String
antHomeLib
boolean
probablyIDE
String
anthome
System
getProperty
MagicNames
ANT_HOME
if
anthome
File
antHomeLibDir
new
File
anthome
antHomeLib
antHomeLibDir
getAbsolutePath
else
probablyIDE
antHomeLib
File
separatorChar
StringBuffer
dirListingText
new
StringBuffer
final
String
tab
dirListingText
append
tab
dirListingText
append
antHomeLib
dirListingText
append
if
probablyIDE
dirListingText
append
tab
dirListingText
append
else
dirListingText
append
tab
dirListingText
append
libDir
dirListingText
append
dirListingText
append
tab
dirListingText
append
String
dirListing
dirListingText
toString
AntTypeDefinition
def
getDefinition
componentName
if
def
boolean
isAntlib
componentName
indexOf
MagicNames
ANTLIB_PREFIX
out
println
out
println
out
println
out
println
if
isAntlib
out
println
out
println
out
println
out
println
dirListing
definitions
else
final
String
classname
def
getClassName
antTask
classname
startsWith
boolean
optional
classname
startsWith
optional
classname
startsWith
Class
clazz
try
clazz
def
innerGetTypeClass
catch
ClassNotFoundException
e
out
println
classname
jars
if
optional
out
println
out
println
out
println
dirListing
else
out
println
out
println
out
println
dirListing
definitions
catch
NoClassDefFoundError
ncdfe
jars
out
println
ncdfe
getMessage
if
optional
out
println
out
println
out
println
else
out
println
out
println
out
println
dirListing
if
clazz
try
def
innerCreateAndSet
clazz
project
out
println
catch
NoSuchMethodException
e
lowlevel
out
println
classname
catch
InstantiationException
e
lowlevel
out
println
classname
catch
IllegalAccessException
e
lowlevel
out
println
classname
catch
InvocationTargetException
ex
lowlevel
Throwable
t
ex
getTargetException
out
println
out
println
t
toString
t
printStackTrace
out
catch
NoClassDefFoundError
ncdfe
jars
out
println
classname
out
println
ncdfe
getMessage
out
println
out
println
dirListing
out
println
out
println
if
definitions
out
println
if
jars
out
println
if
lowlevel
out
println
if
antTask
out
println
else
out
println
out
println
type
out
println
else
out
println
out
println
out
flush
out
close
return
errorText
toString
private
static
class
AntTypeTable
extends
Hashtable
private
Project
project
AntTypeTable
Project
project
this
project
project
AntTypeDefinition
getDefinition
String
key
return
AntTypeDefinition
super
get
key
public
Object
get
Object
key
return
getTypeClass
String
key
Object
create
String
name
AntTypeDefinition
def
getDefinition
name
return
def
def
create
project
Class
getTypeClass
String
name
AntTypeDefinition
def
getDefinition
name
return
def
def
getTypeClass
project
Class
getExposedClass
String
name
AntTypeDefinition
def
getDefinition
name
return
def
def
getExposedClass
project
public
boolean
contains
Object
clazz
boolean
found
if
clazz
instanceof
Class
for
Iterator
i
values
iterator
i
hasNext
found
found
AntTypeDefinition
i
next
getExposedClass
project
clazz
return
found
public
boolean
containsValue
Object
value
return
contains
value
