package
org
apache
tools
ant
taskdefs
import
java
io
File
import
org
apache
tools
ant
AntClassLoader
import
org
apache
tools
ant
BuildException
import
org
apache
tools
ant
Project
import
org
apache
tools
ant
Task
import
org
apache
tools
ant
taskdefs
condition
Condition
import
org
apache
tools
ant
types
EnumeratedAttribute
import
org
apache
tools
ant
types
Path
import
org
apache
tools
ant
types
Reference
import
org
apache
tools
ant
util
FileUtils
import
org
apache
tools
ant
util
StringUtils
public
class
Available
extends
Task
implements
Condition
private
static
final
FileUtils
FILE_UTILS
FileUtils
getFileUtils
private
String
property
private
String
classname
private
String
filename
private
File
file
private
Path
filepath
private
String
resource
private
FileDir
type
private
Path
classpath
private
AntClassLoader
loader
private
String
value
private
boolean
isTask
private
boolean
ignoreSystemclasses
private
boolean
searchParents
public
void
setSearchParents
boolean
searchParents
this
searchParents
searchParents
public
void
setClasspath
Path
classpath
createClasspath
append
classpath
public
Path
createClasspath
if
this
classpath
this
classpath
new
Path
getProject
return
this
classpath
createPath
public
void
setClasspathRef
Reference
r
createClasspath
setRefid
r
public
void
setFilepath
Path
filepath
createFilepath
append
filepath
public
Path
createFilepath
if
this
filepath
this
filepath
new
Path
getProject
return
this
filepath
createPath
public
void
setProperty
String
property
this
property
property
public
void
setValue
String
value
this
value
value
public
void
setClassname
String
classname
if
equals
classname
this
classname
classname
public
void
setFile
File
file
this
file
file
this
filename
FILE_UTILS
removeLeadingPath
getProject
getBaseDir
file
public
void
setResource
String
resource
this
resource
resource
public
void
setType
String
type
log
Project
MSG_WARN
this
type
new
FileDir
this
type
setValue
type
public
void
setType
FileDir
type
this
type
type
public
void
setIgnoresystemclasses
boolean
ignore
this
ignoreSystemclasses
ignore
public
void
execute
throws
BuildException
if
property
throw
new
BuildException
getLocation
isTask
try
if
eval
String
oldvalue
getProject
getProperty
property
if
oldvalue
oldvalue
equals
value
log
StringUtils
LINE_SEP
Project
MSG_WARN
getProject
setProperty
property
value
finally
isTask
public
boolean
eval
throws
BuildException
try
if
classname
file
resource
throw
new
BuildException
getLocation
if
type
if
file
throw
new
BuildException
getLocation
if
classpath
classpath
setProject
getProject
this
loader
getProject
createClassLoader
classpath
String
appendix
if
isTask
appendix
property
else
setTaskName
if
classname
checkClass
classname
log
classname
appendix
Project
MSG_VERBOSE
return
if
file
checkFile
StringBuffer
buf
new
StringBuffer
if
type
buf
append
type
append
buf
append
filename
append
appendix
log
buf
toString
Project
MSG_VERBOSE
return
if
resource
checkResource
resource
log
resource
appendix
Project
MSG_VERBOSE
return
finally
if
loader
loader
cleanup
loader
if
isTask
setTaskName
return
private
boolean
checkFile
if
filepath
return
checkFile
file
filename
else
String
paths
filepath
list
for
int
i
i
paths
length
i
log
paths
i
Project
MSG_DEBUG
File
path
new
File
paths
i
if
path
exists
filename
equals
paths
i
if
type
log
path
Project
MSG_VERBOSE
return
else
if
type
isDir
path
isDirectory
log
path
Project
MSG_VERBOSE
return
else
if
type
isFile
path
isFile
log
path
Project
MSG_VERBOSE
return
return
File
parent
path
getParentFile
if
parent
parent
exists
filename
equals
parent
getAbsolutePath
if
type
log
parent
Project
MSG_VERBOSE
return
else
if
type
isDir
log
parent
Project
MSG_VERBOSE
return
return
if
path
exists
path
isDirectory
if
checkFile
new
File
path
filename
filename
path
return
while
searchParents
parent
parent
exists
if
checkFile
new
File
parent
filename
filename
parent
return
parent
parent
getParentFile
return
private
boolean
checkFile
File
f
String
text
if
type
if
type
isDir
if
f
isDirectory
log
text
Project
MSG_VERBOSE
return
f
isDirectory
else
if
type
isFile
if
f
isFile
log
text
Project
MSG_VERBOSE
return
f
isFile
if
f
exists
log
text
Project
MSG_VERBOSE
return
f
exists
private
boolean
checkResource
String
resource
if
loader
return
loader
getResourceAsStream
resource
else
ClassLoader
cL
this
getClass
getClassLoader
if
cL
return
cL
getResourceAsStream
resource
else
return
ClassLoader
getSystemResourceAsStream
resource
private
boolean
checkClass
String
classname
try
if
ignoreSystemclasses
loader
getProject
createClassLoader
classpath
loader
setParentFirst
loader
addJavaLibraries
if
loader
try
loader
findClass
classname
catch
SecurityException
se
return
else
return
else
if
loader
loader
loadClass
classname
else
ClassLoader
l
this
getClass
getClassLoader
if
l
Class
forName
classname
l
else
Class
forName
classname
return
catch
ClassNotFoundException
e
log
classname
Project
MSG_DEBUG
return
catch
NoClassDefFoundError
e
log
e
getMessage
classname
Project
MSG_DEBUG
return
public
static
class
FileDir
extends
EnumeratedAttribute
private
static
final
String
VALUES
public
String
getValues
return
VALUES
public
boolean
isDir
return
equalsIgnoreCase
getValue
public
boolean
isFile
return
equalsIgnoreCase
getValue
