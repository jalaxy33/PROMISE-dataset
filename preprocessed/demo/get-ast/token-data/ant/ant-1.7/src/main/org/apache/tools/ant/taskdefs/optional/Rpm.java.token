package
org
apache
tools
ant
taskdefs
optional
import
java
io
BufferedOutputStream
import
java
io
File
import
java
io
FileOutputStream
import
java
io
IOException
import
java
io
OutputStream
import
java
io
PrintStream
import
java
util
Enumeration
import
java
util
Vector
import
org
apache
tools
ant
BuildException
import
org
apache
tools
ant
Project
import
org
apache
tools
ant
Task
import
org
apache
tools
ant
util
FileUtils
import
org
apache
tools
ant
taskdefs
Execute
import
org
apache
tools
ant
taskdefs
ExecuteStreamHandler
import
org
apache
tools
ant
taskdefs
LogOutputStream
import
org
apache
tools
ant
taskdefs
LogStreamHandler
import
org
apache
tools
ant
taskdefs
PumpStreamHandler
import
org
apache
tools
ant
taskdefs
condition
Os
import
org
apache
tools
ant
types
Commandline
import
org
apache
tools
ant
types
Path
public
class
Rpm
extends
Task
private
static
final
String
PATH1
private
static
final
String
PATH2
private
static
final
String
PATH3
private
static
final
int
PATH_LEN
PATH1
length
private
String
specFile
private
File
topDir
private
String
command
private
String
rpmBuildCommand
private
boolean
cleanBuildDir
private
boolean
removeSpec
private
boolean
removeSource
private
File
output
private
File
error
private
boolean
failOnError
private
boolean
quiet
public
void
execute
throws
BuildException
Commandline
toExecute
new
Commandline
toExecute
setExecutable
rpmBuildCommand
guessRpmBuildCommand
rpmBuildCommand
if
topDir
toExecute
createArgument
setValue
toExecute
createArgument
setValue
topDir
toExecute
createArgument
setLine
command
if
cleanBuildDir
toExecute
createArgument
setValue
if
removeSpec
toExecute
createArgument
setValue
if
removeSource
toExecute
createArgument
setValue
toExecute
createArgument
setValue
specFile
ExecuteStreamHandler
streamhandler
OutputStream
outputstream
OutputStream
errorstream
if
error
output
if
quiet
streamhandler
new
LogStreamHandler
this
Project
MSG_INFO
Project
MSG_WARN
else
streamhandler
new
LogStreamHandler
this
Project
MSG_DEBUG
Project
MSG_DEBUG
else
if
output
try
BufferedOutputStream
bos
new
BufferedOutputStream
new
FileOutputStream
output
outputstream
new
PrintStream
bos
catch
IOException
e
throw
new
BuildException
e
getLocation
else
if
quiet
outputstream
new
LogOutputStream
this
Project
MSG_INFO
else
outputstream
new
LogOutputStream
this
Project
MSG_DEBUG
if
error
try
BufferedOutputStream
bos
new
BufferedOutputStream
new
FileOutputStream
error
errorstream
new
PrintStream
bos
catch
IOException
e
throw
new
BuildException
e
getLocation
else
if
quiet
errorstream
new
LogOutputStream
this
Project
MSG_WARN
else
errorstream
new
LogOutputStream
this
Project
MSG_DEBUG
streamhandler
new
PumpStreamHandler
outputstream
errorstream
Execute
exe
getExecute
toExecute
streamhandler
try
log
specFile
int
returncode
exe
execute
if
Execute
isFailure
returncode
String
msg
toExecute
getExecutable
returncode
if
failOnError
throw
new
BuildException
msg
else
log
msg
Project
MSG_ERR
catch
IOException
e
throw
new
BuildException
e
getLocation
finally
FileUtils
close
outputstream
FileUtils
close
errorstream
public
void
setTopDir
File
td
this
topDir
td
public
void
setCommand
String
c
this
command
c
public
void
setSpecFile
String
sf
if
sf
sf
trim
equals
throw
new
BuildException
getLocation
this
specFile
sf
public
void
setCleanBuildDir
boolean
cbd
cleanBuildDir
cbd
public
void
setRemoveSpec
boolean
rs
removeSpec
rs
public
void
setRemoveSource
boolean
rs
removeSource
rs
public
void
setOutput
File
output
this
output
output
public
void
setError
File
error
this
error
error
public
void
setRpmBuildCommand
String
c
this
rpmBuildCommand
c
public
void
setFailOnError
boolean
value
failOnError
value
public
void
setQuiet
boolean
value
quiet
value
protected
String
guessRpmBuildCommand
Vector
env
Execute
getProcEnvironment
String
path
for
Enumeration
e
env
elements
e
hasMoreElements
String
var
String
e
nextElement
if
var
startsWith
PATH1
var
startsWith
PATH2
var
startsWith
PATH3
path
var
substring
PATH_LEN
break
if
path
Path
p
new
Path
getProject
path
String
pElements
p
list
for
int
i
i
pElements
length
i
File
f
new
File
pElements
i
Os
isFamily
if
f
canRead
return
f
getAbsolutePath
return
protected
Execute
getExecute
Commandline
toExecute
ExecuteStreamHandler
streamhandler
Execute
exe
new
Execute
streamhandler
exe
setAntRun
getProject
if
topDir
topDir
getProject
getBaseDir
exe
setWorkingDirectory
topDir
exe
setCommandline
toExecute
getCommandline
return
exe
