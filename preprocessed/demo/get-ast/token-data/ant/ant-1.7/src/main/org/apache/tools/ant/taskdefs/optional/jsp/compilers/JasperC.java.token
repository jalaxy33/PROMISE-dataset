package
org
apache
tools
ant
taskdefs
optional
jsp
compilers
import
java
io
File
import
org
apache
tools
ant
AntClassLoader
import
org
apache
tools
ant
BuildException
import
org
apache
tools
ant
Project
import
org
apache
tools
ant
taskdefs
Java
import
org
apache
tools
ant
taskdefs
optional
jsp
JspC
import
org
apache
tools
ant
taskdefs
optional
jsp
JspMangler
import
org
apache
tools
ant
types
CommandlineJava
import
org
apache
tools
ant
types
Path
public
class
JasperC
extends
DefaultJspCompilerAdapter
JspMangler
mangler
public
JasperC
JspMangler
mangler
this
mangler
mangler
public
boolean
execute
throws
BuildException
getJspc
log
Project
MSG_VERBOSE
CommandlineJava
cmd
setupJasperCommand
try
Java
java
new
Java
owner
Path
p
getClasspath
if
getJspc
getClasspath
getProject
log
p
Project
MSG_DEBUG
else
getProject
log
p
Project
MSG_DEBUG
java
setClasspath
p
java
setDir
getProject
getBaseDir
java
setClassname
String
args
cmd
getJavaCommand
getArguments
for
int
i
i
args
length
i
java
createArg
setValue
args
i
java
setFailonerror
getJspc
getFailonerror
java
setFork
java
setTaskName
java
execute
return
catch
Exception
ex
if
ex
instanceof
BuildException
throw
BuildException
ex
else
throw
new
BuildException
ex
getJspc
getLocation
finally
getJspc
deleteEmptyJavaFiles
private
CommandlineJava
setupJasperCommand
CommandlineJava
cmd
new
CommandlineJava
JspC
jspc
getJspc
addArg
cmd
jspc
getDestdir
addArg
cmd
jspc
getPackage
if
isTomcat5x
addArg
cmd
jspc
getVerbose
else
getProject
log
addArg
cmd
jspc
getUriroot
addArg
cmd
jspc
getUribase
addArg
cmd
jspc
getIeplugin
addArg
cmd
jspc
getWebinc
addArg
cmd
jspc
getWebxml
addArg
cmd
if
jspc
isMapped
addArg
cmd
if
jspc
getWebApp
File
dir
jspc
getWebApp
getDirectory
addArg
cmd
dir
logAndAddFilesToCompile
getJspc
getJspc
getCompileList
cmd
return
cmd
public
JspMangler
createMangler
return
mangler
private
Path
getClasspath
Path
p
getJspc
getClasspath
if
p
p
new
Path
getProject
return
p
concatSystemClasspath
else
return
p
concatSystemClasspath
private
boolean
isTomcat5x
AntClassLoader
l
try
l
getProject
createClassLoader
getClasspath
l
loadClass
return
catch
ClassNotFoundException
e
return
finally
if
l
l
cleanup
