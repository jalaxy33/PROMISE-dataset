package
org
apache
tools
ant
taskdefs
optional
junit
import
java
io
File
import
java
io
FileOutputStream
import
java
io
OutputStream
import
java
io
BufferedOutputStream
import
org
apache
tools
ant
BuildException
import
org
apache
tools
ant
Task
import
org
apache
tools
ant
types
EnumeratedAttribute
public
class
FormatterElement
private
String
classname
private
String
extension
private
OutputStream
out
System
out
private
File
outFile
private
boolean
useFile
private
String
ifProperty
private
String
unlessProperty
public
static
final
String
XML_FORMATTER_CLASS_NAME
public
static
final
String
BRIEF_FORMATTER_CLASS_NAME
public
static
final
String
PLAIN_FORMATTER_CLASS_NAME
public
void
setType
TypeAttribute
type
if
equals
type
getValue
setClassname
XML_FORMATTER_CLASS_NAME
else
if
equals
type
getValue
setClassname
BRIEF_FORMATTER_CLASS_NAME
else
setClassname
PLAIN_FORMATTER_CLASS_NAME
public
void
setClassname
String
classname
this
classname
classname
if
XML_FORMATTER_CLASS_NAME
equals
classname
setExtension
else
if
PLAIN_FORMATTER_CLASS_NAME
equals
classname
setExtension
else
if
BRIEF_FORMATTER_CLASS_NAME
equals
classname
setExtension
public
String
getClassname
return
classname
public
void
setExtension
String
ext
this
extension
ext
public
String
getExtension
return
extension
void
setOutfile
File
out
this
outFile
out
public
void
setOutput
OutputStream
out
this
out
out
public
void
setUseFile
boolean
useFile
this
useFile
useFile
boolean
getUseFile
return
useFile
public
void
setIf
String
ifProperty
this
ifProperty
ifProperty
public
void
setUnless
String
unlessProperty
this
unlessProperty
unlessProperty
public
boolean
shouldUse
Task
t
if
ifProperty
t
getProject
getProperty
ifProperty
return
else
if
unlessProperty
t
getProject
getProperty
unlessProperty
return
return
JUnitTaskMirror
JUnitResultFormatterMirror
createFormatter
throws
BuildException
return
createFormatter
JUnitTaskMirror
JUnitResultFormatterMirror
createFormatter
ClassLoader
loader
throws
BuildException
if
classname
throw
new
BuildException
Class
f
try
if
loader
f
Class
forName
classname
else
f
Class
forName
classname
loader
catch
ClassNotFoundException
e
throw
new
BuildException
loader
classname
e
e
catch
NoClassDefFoundError
e
throw
new
BuildException
loader
classname
e
e
Object
o
try
o
f
newInstance
catch
InstantiationException
e
throw
new
BuildException
e
catch
IllegalAccessException
e
throw
new
BuildException
e
if
o
instanceof
JUnitTaskMirror
JUnitResultFormatterMirror
throw
new
BuildException
classname
JUnitTaskMirror
JUnitResultFormatterMirror
r
JUnitTaskMirror
JUnitResultFormatterMirror
o
if
useFile
outFile
try
out
new
BufferedOutputStream
new
FileOutputStream
outFile
catch
java
io
IOException
e
throw
new
BuildException
outFile
e
r
setOutput
out
return
r
public
static
class
TypeAttribute
extends
EnumeratedAttribute
public
String
getValues
return
new
String
