package
org
apache
tools
ant
taskdefs
import
java
io
File
import
java
util
List
import
java
util
Vector
import
java
util
ArrayList
import
java
util
StringTokenizer
import
org
apache
tools
ant
Task
import
org
apache
tools
ant
Project
import
org
apache
tools
ant
BuildException
import
org
apache
tools
ant
taskdefs
condition
Os
import
org
apache
tools
ant
types
Path
import
org
apache
tools
ant
types
Mapper
import
org
apache
tools
ant
types
Reference
import
org
apache
tools
ant
types
ResourceCollection
import
org
apache
tools
ant
types
EnumeratedAttribute
import
org
apache
tools
ant
types
resources
Union
import
org
apache
tools
ant
util
FileNameMapper
public
class
PathConvert
extends
Task
private
static
boolean
onWindows
Os
isFamily
private
Union
path
private
Reference
refid
private
String
targetOS
private
boolean
targetWindows
private
boolean
setonempty
private
String
property
private
Vector
prefixMap
new
Vector
private
String
pathSep
private
String
dirSep
private
Mapper
mapper
public
PathConvert
public
class
MapEntry
private
String
from
private
String
to
public
void
setFrom
String
from
this
from
from
public
void
setTo
String
to
this
to
to
public
String
apply
String
elem
if
from
to
throw
new
BuildException
String
cmpElem
onWindows
elem
toLowerCase
replace
elem
String
cmpFrom
onWindows
from
toLowerCase
replace
from
return
cmpElem
startsWith
cmpFrom
to
elem
substring
from
length
elem
public
static
class
TargetOs
extends
EnumeratedAttribute
public
String
getValues
return
new
String
public
Path
createPath
if
isReference
throw
noChildrenAllowed
Path
result
new
Path
getProject
add
result
return
result
public
void
add
ResourceCollection
rc
if
isReference
throw
noChildrenAllowed
getPath
add
rc
private
synchronized
Union
getPath
if
path
path
new
Union
path
setProject
getProject
return
path
public
MapEntry
createMap
MapEntry
entry
new
MapEntry
prefixMap
addElement
entry
return
entry
public
void
setTargetos
String
target
TargetOs
to
new
TargetOs
to
setValue
target
setTargetos
to
public
void
setTargetos
TargetOs
target
targetOS
target
getValue
targetWindows
targetOS
equals
targetOS
equals
public
void
setSetonempty
boolean
setonempty
this
setonempty
setonempty
public
void
setProperty
String
p
property
p
public
void
setRefid
Reference
r
if
path
throw
noChildrenAllowed
refid
r
public
void
setPathSep
String
sep
pathSep
sep
public
void
setDirSep
String
sep
dirSep
sep
public
boolean
isReference
return
refid
public
void
execute
throws
BuildException
Union
savedPath
path
String
savedPathSep
pathSep
String
savedDirSep
dirSep
try
if
isReference
Object
o
refid
getReferencedObject
getProject
if
o
instanceof
ResourceCollection
throw
new
BuildException
refid
getRefId
getPath
add
ResourceCollection
o
validateSetup
String
fromDirSep
onWindows
StringBuffer
rslt
new
StringBuffer
String
elems
path
list
if
mapper
FileNameMapper
impl
mapper
getImplementation
List
ret
new
ArrayList
for
int
i
i
elems
length
i
String
mapped
impl
mapFileName
elems
i
for
int
m
mapped
m
mapped
length
m
ret
add
mapped
m
elems
String
ret
toArray
new
String
ret
size
for
int
i
i
elems
length
i
String
elem
mapElement
elems
i
if
i
rslt
append
pathSep
StringTokenizer
stDirectory
new
StringTokenizer
elem
fromDirSep
while
stDirectory
hasMoreTokens
String
token
stDirectory
nextToken
rslt
append
fromDirSep
equals
token
dirSep
token
if
setonempty
rslt
length
String
value
rslt
toString
if
property
log
value
else
log
property
value
Project
MSG_VERBOSE
getProject
setNewProperty
property
value
finally
path
savedPath
dirSep
savedDirSep
pathSep
savedPathSep
private
String
mapElement
String
elem
int
size
prefixMap
size
if
size
for
int
i
i
size
i
MapEntry
entry
MapEntry
prefixMap
elementAt
i
String
newElem
entry
apply
elem
if
newElem
elem
elem
newElem
break
return
elem
public
void
addMapper
Mapper
mapper
if
this
mapper
throw
new
BuildException
this
mapper
mapper
public
void
add
FileNameMapper
fileNameMapper
Mapper
m
new
Mapper
getProject
m
add
fileNameMapper
addMapper
m
private
void
validateSetup
throws
BuildException
if
path
throw
new
BuildException
String
dsep
File
separator
String
psep
File
pathSeparator
if
targetOS
psep
targetWindows
dsep
targetWindows
if
pathSep
psep
pathSep
if
dirSep
dsep
dirSep
pathSep
psep
dirSep
dsep
private
BuildException
noChildrenAllowed
return
new
BuildException
