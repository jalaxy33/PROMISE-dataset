package
org
apache
tools
ant
import
java
lang
reflect
InvocationTargetException
import
java
lang
reflect
Constructor
public
class
AntTypeDefinition
private
String
name
private
Class
clazz
private
Class
adapterClass
private
Class
adaptToClass
private
String
className
private
ClassLoader
classLoader
public
void
setName
String
name
this
name
name
public
String
getName
return
name
public
void
setClass
Class
clazz
this
clazz
clazz
if
clazz
return
this
classLoader
classLoader
clazz
getClassLoader
classLoader
this
className
className
clazz
getName
className
public
void
setClassName
String
className
this
className
className
public
String
getClassName
return
className
public
void
setAdapterClass
Class
adapterClass
this
adapterClass
adapterClass
public
void
setAdaptToClass
Class
adaptToClass
this
adaptToClass
adaptToClass
public
void
setClassLoader
ClassLoader
classLoader
this
classLoader
classLoader
public
ClassLoader
getClassLoader
return
classLoader
public
Class
getExposedClass
Project
project
if
adaptToClass
Class
z
getTypeClass
project
if
z
adaptToClass
isAssignableFrom
z
return
z
return
adapterClass
getTypeClass
project
adapterClass
public
Class
getTypeClass
Project
project
try
return
innerGetTypeClass
catch
NoClassDefFoundError
ncdfe
project
log
ncdfe
getMessage
name
Project
MSG_DEBUG
catch
ClassNotFoundException
cnfe
project
log
className
name
Project
MSG_DEBUG
return
public
Class
innerGetTypeClass
throws
ClassNotFoundException
if
clazz
return
clazz
if
classLoader
clazz
Class
forName
className
else
clazz
classLoader
loadClass
className
return
clazz
public
Object
create
Project
project
return
icreate
project
private
Object
icreate
Project
project
Class
c
getTypeClass
project
if
c
return
Object
o
createAndSet
project
c
if
o
adapterClass
return
o
if
adaptToClass
if
adaptToClass
isAssignableFrom
o
getClass
return
o
TypeAdapter
adapterObject
TypeAdapter
createAndSet
project
adapterClass
if
adapterObject
return
adapterObject
setProxy
o
return
adapterObject
public
void
checkClass
Project
project
if
clazz
clazz
getTypeClass
project
if
clazz
throw
new
BuildException
getName
if
adapterClass
adaptToClass
adaptToClass
isAssignableFrom
clazz
TypeAdapter
adapter
TypeAdapter
createAndSet
project
adapterClass
if
adapter
throw
new
BuildException
adapter
checkProxyClass
clazz
private
Object
createAndSet
Project
project
Class
c
try
Object
o
innerCreateAndSet
c
project
return
o
catch
InvocationTargetException
ex
Throwable
t
ex
getTargetException
throw
new
BuildException
name
t
t
catch
NoClassDefFoundError
ncdfe
String
msg
name
c
ncdfe
getMessage
throw
new
BuildException
msg
ncdfe
catch
NoSuchMethodException
nsme
throw
new
BuildException
name
c
catch
InstantiationException
nsme
throw
new
BuildException
name
c
catch
IllegalAccessException
e
throw
new
BuildException
name
c
catch
Throwable
t
throw
new
BuildException
name
t
t
public
Object
innerCreateAndSet
Class
newclass
Project
project
throws
NoSuchMethodException
InstantiationException
IllegalAccessException
InvocationTargetException
Constructor
ctor
boolean
noArg
try
ctor
newclass
getConstructor
new
Class
noArg
catch
NoSuchMethodException
nse
ctor
newclass
getConstructor
new
Class
Project
class
noArg
Object
o
ctor
newInstance
noArg
new
Object
new
Object
project
project
setProjectReference
o
return
o
public
boolean
sameDefinition
AntTypeDefinition
other
Project
project
return
other
other
getClass
getClass
other
getTypeClass
project
equals
getTypeClass
project
other
getExposedClass
project
equals
getExposedClass
project
other
adapterClass
adapterClass
other
adaptToClass
adaptToClass
public
boolean
similarDefinition
AntTypeDefinition
other
Project
project
if
other
getClass
other
getClass
getClassName
equals
other
getClassName
extractClassname
adapterClass
equals
extractClassname
other
adapterClass
extractClassname
adaptToClass
equals
extractClassname
other
adaptToClass
return
ClassLoader
oldLoader
other
getClassLoader
ClassLoader
newLoader
getClassLoader
return
oldLoader
newLoader
oldLoader
instanceof
AntClassLoader
newLoader
instanceof
AntClassLoader
AntClassLoader
oldLoader
getClasspath
equals
AntClassLoader
newLoader
getClasspath
private
String
extractClassname
Class
c
return
c
c
getClass
getName
