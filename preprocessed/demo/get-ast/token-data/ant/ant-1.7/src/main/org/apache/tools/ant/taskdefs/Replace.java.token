package
org
apache
tools
ant
taskdefs
import
java
io
BufferedReader
import
java
io
BufferedWriter
import
java
io
File
import
java
io
FileInputStream
import
java
io
FileNotFoundException
import
java
io
FileOutputStream
import
java
io
FileReader
import
java
io
FileWriter
import
java
io
IOException
import
java
io
InputStreamReader
import
java
io
OutputStreamWriter
import
java
io
Reader
import
java
io
Writer
import
java
util
Enumeration
import
java
util
Properties
import
java
util
Vector
import
org
apache
tools
ant
BuildException
import
org
apache
tools
ant
DirectoryScanner
import
org
apache
tools
ant
Project
import
org
apache
tools
ant
util
FileUtils
import
org
apache
tools
ant
util
StringUtils
public
class
Replace
extends
MatchingTask
private
static
final
FileUtils
FILE_UTILS
FileUtils
getFileUtils
private
File
src
private
NestedString
token
private
NestedString
value
new
NestedString
private
File
propertyFile
private
File
replaceFilterFile
private
Properties
properties
private
Vector
replacefilters
new
Vector
private
File
dir
private
int
fileCount
private
int
replaceCount
private
boolean
summary
private
String
encoding
public
class
NestedString
private
StringBuffer
buf
new
StringBuffer
public
void
addText
String
val
buf
append
val
public
String
getText
return
buf
toString
public
class
Replacefilter
private
String
token
private
String
value
private
String
replaceValue
private
String
property
private
StringBuffer
inputBuffer
private
StringBuffer
outputBuffer
new
StringBuffer
public
void
validate
throws
BuildException
if
token
String
message
throw
new
BuildException
message
if
equals
token
String
message
throw
new
BuildException
message
if
value
property
String
message
throw
new
BuildException
message
if
property
if
propertyFile
String
message
throw
new
BuildException
message
if
properties
properties
getProperty
property
String
message
property
propertyFile
getPath
throw
new
BuildException
message
replaceValue
getReplaceValue
public
String
getReplaceValue
if
property
return
properties
getProperty
property
else
if
value
return
value
else
if
Replace
this
value
return
Replace
this
value
getText
else
return
public
void
setToken
String
token
this
token
token
public
String
getToken
return
token
public
void
setValue
String
value
this
value
value
public
String
getValue
return
value
public
void
setProperty
String
property
this
property
property
public
String
getProperty
return
property
StringBuffer
getOutputBuffer
return
outputBuffer
void
setInputBuffer
StringBuffer
input
inputBuffer
input
boolean
process
if
inputBuffer
length
token
length
int
pos
replace
pos
Math
max
inputBuffer
length
token
length
pos
outputBuffer
append
inputBuffer
substring
pos
inputBuffer
delete
pos
return
return
void
flush
replace
outputBuffer
append
inputBuffer
toString
inputBuffer
delete
inputBuffer
length
private
int
replace
int
found
inputBuffer
toString
indexOf
token
int
pos
while
found
inputBuffer
replace
found
found
token
length
replaceValue
pos
found
replaceValue
length
found
inputBuffer
toString
indexOf
token
pos
replaceCount
return
pos
private
class
FileInput
private
StringBuffer
outputBuffer
private
Reader
reader
private
char
buffer
private
static
final
int
BUFF_SIZE
FileInput
File
source
throws
IOException
outputBuffer
new
StringBuffer
buffer
new
char
BUFF_SIZE
if
encoding
reader
new
BufferedReader
new
FileReader
source
else
reader
new
BufferedReader
new
InputStreamReader
new
FileInputStream
source
encoding
StringBuffer
getOutputBuffer
return
outputBuffer
boolean
readChunk
throws
IOException
int
bufferLength
bufferLength
reader
read
buffer
if
bufferLength
return
outputBuffer
append
new
String
buffer
bufferLength
return
void
close
throws
IOException
reader
close
void
closeQuietly
FileUtils
close
reader
private
class
FileOutput
private
StringBuffer
inputBuffer
private
Writer
writer
FileOutput
File
out
throws
IOException
if
encoding
writer
new
BufferedWriter
new
FileWriter
out
else
writer
new
BufferedWriter
new
OutputStreamWriter
new
FileOutputStream
out
encoding
void
setInputBuffer
StringBuffer
input
inputBuffer
input
boolean
process
throws
IOException
writer
write
inputBuffer
toString
inputBuffer
delete
inputBuffer
length
return
void
flush
throws
IOException
process
writer
flush
void
close
throws
IOException
writer
close
void
closeQuietly
FileUtils
close
writer
public
void
execute
throws
BuildException
Vector
savedFilters
Vector
replacefilters
clone
Properties
savedProperties
properties
Properties
properties
clone
if
token
StringBuffer
val
new
StringBuffer
value
getText
stringReplace
val
stringReplace
val
StringUtils
LINE_SEP
StringBuffer
tok
new
StringBuffer
token
getText
stringReplace
tok
stringReplace
tok
StringUtils
LINE_SEP
Replacefilter
firstFilter
createPrimaryfilter
firstFilter
setToken
tok
toString
firstFilter
setValue
val
toString
try
if
replaceFilterFile
Properties
props
getProperties
replaceFilterFile
Enumeration
e
props
keys
while
e
hasMoreElements
String
tok
e
nextElement
toString
Replacefilter
replaceFilter
createReplacefilter
replaceFilter
setToken
tok
replaceFilter
setValue
props
getProperty
tok
validateAttributes
if
propertyFile
properties
getProperties
propertyFile
validateReplacefilters
fileCount
replaceCount
if
src
processFile
src
if
dir
DirectoryScanner
ds
super
getDirectoryScanner
dir
String
srcs
ds
getIncludedFiles
for
int
i
i
srcs
length
i
File
file
new
File
dir
srcs
i
processFile
file
if
summary
log
replaceCount
fileCount
Project
MSG_INFO
finally
replacefilters
savedFilters
properties
savedProperties
public
void
validateAttributes
throws
BuildException
if
src
dir
String
message
throw
new
BuildException
message
getLocation
if
propertyFile
propertyFile
exists
String
message
propertyFile
getPath
throw
new
BuildException
message
getLocation
if
token
replacefilters
size
String
message
throw
new
BuildException
message
getLocation
if
token
equals
token
getText
String
message
throw
new
BuildException
message
getLocation
public
void
validateReplacefilters
throws
BuildException
for
int
i
i
replacefilters
size
i
Replacefilter
element
Replacefilter
replacefilters
elementAt
i
element
validate
public
Properties
getProperties
File
propertyFile
throws
BuildException
Properties
props
new
Properties
FileInputStream
in
try
in
new
FileInputStream
propertyFile
props
load
in
catch
FileNotFoundException
e
String
message
propertyFile
getPath
throw
new
BuildException
message
catch
IOException
e
String
message
propertyFile
getPath
throw
new
BuildException
message
finally
FileUtils
close
in
return
props
private
void
processFile
File
src
throws
BuildException
if
src
exists
throw
new
BuildException
src
getPath
getLocation
File
temp
FileInput
in
FileOutput
out
try
in
new
FileInput
src
temp
FILE_UTILS
createTempFile
src
getParentFile
out
new
FileOutput
temp
int
repCountStart
replaceCount
logFilterChain
src
getPath
out
setInputBuffer
buildFilterChain
in
getOutputBuffer
while
in
readChunk
if
processFilterChain
out
process
flushFilterChain
out
flush
in
close
in
out
close
out
boolean
changes
replaceCount
repCountStart
if
changes
FILE_UTILS
rename
temp
src
temp
catch
IOException
ioe
throw
new
BuildException
src
ioe
getClass
getName
ioe
getMessage
ioe
getLocation
finally
if
in
in
closeQuietly
if
out
out
closeQuietly
if
temp
if
temp
delete
temp
deleteOnExit
private
void
flushFilterChain
for
int
i
i
replacefilters
size
i
Replacefilter
filter
Replacefilter
replacefilters
elementAt
i
filter
flush
private
boolean
processFilterChain
for
int
i
i
replacefilters
size
i
Replacefilter
filter
Replacefilter
replacefilters
elementAt
i
if
filter
process
return
return
private
StringBuffer
buildFilterChain
StringBuffer
inputBuffer
StringBuffer
buf
inputBuffer
for
int
i
i
replacefilters
size
i
Replacefilter
filter
Replacefilter
replacefilters
elementAt
i
filter
setInputBuffer
buf
buf
filter
getOutputBuffer
return
buf
private
void
logFilterChain
String
filename
for
int
i
i
replacefilters
size
i
Replacefilter
filter
Replacefilter
replacefilters
elementAt
i
log
filename
filter
getToken
filter
getReplaceValue
Project
MSG_VERBOSE
public
void
setFile
File
file
this
src
file
public
void
setSummary
boolean
summary
this
summary
summary
public
void
setReplaceFilterFile
File
replaceFilterFile
this
replaceFilterFile
replaceFilterFile
public
void
setDir
File
dir
this
dir
dir
public
void
setToken
String
token
createReplaceToken
addText
token
public
void
setValue
String
value
createReplaceValue
addText
value
public
void
setEncoding
String
encoding
this
encoding
encoding
public
NestedString
createReplaceToken
if
token
token
new
NestedString
return
token
public
NestedString
createReplaceValue
return
value
public
void
setPropertyFile
File
propertyFile
this
propertyFile
propertyFile
public
Replacefilter
createReplacefilter
Replacefilter
filter
new
Replacefilter
replacefilters
addElement
filter
return
filter
private
Replacefilter
createPrimaryfilter
Replacefilter
filter
new
Replacefilter
replacefilters
insertElementAt
filter
return
filter
private
void
stringReplace
StringBuffer
str
String
str1
String
str2
int
found
str
toString
indexOf
str1
while
found
str
replace
found
found
str1
length
str2
found
str
toString
indexOf
str1
found
str2
length
