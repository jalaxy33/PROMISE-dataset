package
org
apache
tools
ant
types
selectors
modifiedselector
import
java
util
Comparator
import
java
util
Vector
import
java
util
Iterator
import
java
io
File
import
org
apache
tools
ant
Project
import
org
apache
tools
ant
IntrospectionHelper
import
org
apache
tools
ant
BuildException
import
org
apache
tools
ant
BuildListener
import
org
apache
tools
ant
BuildEvent
import
org
apache
tools
ant
types
EnumeratedAttribute
import
org
apache
tools
ant
types
Parameter
import
org
apache
tools
ant
types
Path
import
org
apache
tools
ant
types
Resource
import
org
apache
tools
ant
types
resources
FileResource
import
org
apache
tools
ant
types
resources
selectors
ResourceSelector
import
org
apache
tools
ant
types
selectors
BaseExtendSelector
import
org
apache
tools
ant
util
FileUtils
import
org
apache
tools
ant
util
ResourceUtils
public
class
ModifiedSelector
extends
BaseExtendSelector
implements
BuildListener
ResourceSelector
private
CacheName
cacheName
private
String
cacheClass
private
AlgorithmName
algoName
private
String
algorithmClass
private
ComparatorName
compName
private
String
comparatorClass
private
boolean
update
private
boolean
selectDirectories
private
boolean
selectResourcesWithoutInputStream
private
boolean
delayUpdate
private
Comparator
comparator
private
Algorithm
algorithm
private
Cache
cache
private
int
modified
private
boolean
isConfigured
private
Vector
configParameter
new
Vector
private
Vector
specialParameter
new
Vector
private
ClassLoader
myClassLoader
private
Path
classpath
public
ModifiedSelector
public
void
verifySettings
configure
if
cache
setError
else
if
algorithm
setError
else
if
cache
isValid
setError
else
if
algorithm
isValid
setError
public
void
configure
if
isConfigured
return
isConfigured
Project
p
getProject
String
filename
File
cachefile
if
p
cachefile
new
File
p
getBaseDir
filename
getProject
addBuildListener
this
else
cachefile
new
File
filename
setDelayUpdate
Cache
defaultCache
new
PropertiesfileCache
cachefile
Algorithm
defaultAlgorithm
new
DigestAlgorithm
Comparator
defaultComparator
new
EqualComparator
update
selectDirectories
for
Iterator
itConfig
configParameter
iterator
itConfig
hasNext
Parameter
par
Parameter
itConfig
next
if
par
getName
indexOf
specialParameter
add
par
else
useParameter
par
configParameter
new
Vector
if
algoName
if
equals
algoName
getValue
algorithm
new
HashvalueAlgorithm
else
if
equals
algoName
getValue
algorithm
new
DigestAlgorithm
else
if
equals
algoName
getValue
algorithm
new
ChecksumAlgorithm
else
if
algorithmClass
algorithm
Algorithm
loadClass
algorithmClass
Algorithm
class
else
algorithm
defaultAlgorithm
if
cacheName
if
equals
cacheName
getValue
cache
new
PropertiesfileCache
else
if
cacheClass
cache
Cache
loadClass
cacheClass
Cache
class
else
cache
defaultCache
if
compName
if
equals
compName
getValue
comparator
new
EqualComparator
else
if
equals
compName
getValue
throw
new
BuildException
else
if
comparatorClass
comparator
Comparator
loadClass
comparatorClass
Comparator
class
else
comparator
defaultComparator
for
Iterator
itSpecial
specialParameter
iterator
itSpecial
hasNext
Parameter
par
Parameter
itSpecial
next
useParameter
par
specialParameter
new
Vector
protected
Object
loadClass
String
classname
String
msg
Class
type
try
ClassLoader
cl
getClassLoader
Class
clazz
if
cl
clazz
cl
loadClass
classname
else
clazz
Class
forName
classname
Object
rv
clazz
newInstance
if
type
isInstance
rv
throw
new
BuildException
classname
msg
return
rv
catch
ClassNotFoundException
e
throw
new
BuildException
classname
catch
Exception
e
throw
new
BuildException
e
public
boolean
isSelected
Resource
resource
if
resource
isFilesystemOnly
FileResource
fileResource
FileResource
resource
File
file
fileResource
getFile
String
filename
fileResource
getName
File
basedir
fileResource
getBaseDir
return
isSelected
basedir
filename
file
else
try
FileUtils
fu
FileUtils
getFileUtils
File
tmpFile
fu
createTempFile
Resource
tmpResource
new
FileResource
tmpFile
ResourceUtils
copyResource
resource
tmpResource
boolean
isSelected
isSelected
tmpFile
getParentFile
tmpFile
getName
resource
toLongString
tmpFile
delete
return
isSelected
catch
UnsupportedOperationException
uoe
log
resource
getName
selectResourcesWithoutInputStream
Project
MSG_INFO
return
selectResourcesWithoutInputStream
catch
Exception
e
throw
new
BuildException
e
public
boolean
isSelected
File
basedir
String
filename
File
file
return
isSelected
basedir
filename
file
getAbsolutePath
private
boolean
isSelected
File
basedir
String
filename
String
cacheKey
validate
File
f
new
File
basedir
filename
if
f
isDirectory
return
selectDirectories
String
cachedValue
String
valueOf
cache
get
f
getAbsolutePath
String
newValue
algorithm
getValue
f
boolean
rv
comparator
compare
cachedValue
newValue
if
update
rv
cache
put
f
getAbsolutePath
newValue
setModified
getModified
if
getDelayUpdate
saveCache
return
rv
protected
void
saveCache
if
getModified
cache
save
setModified
public
void
setAlgorithmClass
String
classname
algorithmClass
classname
public
void
setComparatorClass
String
classname
comparatorClass
classname
public
void
setCacheClass
String
classname
cacheClass
classname
public
void
setUpdate
boolean
update
this
update
update
public
void
setSeldirs
boolean
seldirs
selectDirectories
seldirs
public
void
setSelres
boolean
newValue
this
selectResourcesWithoutInputStream
newValue
public
int
getModified
return
modified
public
void
setModified
int
modified
this
modified
modified
public
boolean
getDelayUpdate
return
delayUpdate
public
void
setDelayUpdate
boolean
delayUpdate
this
delayUpdate
delayUpdate
public
void
addClasspath
Path
path
if
classpath
throw
new
BuildException
classpath
path
public
ClassLoader
getClassLoader
if
myClassLoader
myClassLoader
classpath
getClass
getClassLoader
getProject
createClassLoader
classpath
return
myClassLoader
public
void
setClassLoader
ClassLoader
loader
myClassLoader
loader
public
void
addParam
String
key
Object
value
Parameter
par
new
Parameter
par
setName
key
par
setValue
String
valueOf
value
configParameter
add
par
public
void
addParam
Parameter
parameter
configParameter
add
parameter
public
void
setParameters
Parameter
parameters
if
parameters
for
int
i
i
parameters
length
i
configParameter
add
parameters
i
public
void
useParameter
Parameter
parameter
String
key
parameter
getName
String
value
parameter
getValue
if
equals
key
CacheName
cn
new
CacheName
cn
setValue
value
setCache
cn
else
if
equals
key
AlgorithmName
an
new
AlgorithmName
an
setValue
value
setAlgorithm
an
else
if
equals
key
ComparatorName
cn
new
ComparatorName
cn
setValue
value
setComparator
cn
else
if
equals
key
boolean
updateValue
equalsIgnoreCase
value
setUpdate
updateValue
else
if
equals
key
boolean
updateValue
equalsIgnoreCase
value
setDelayUpdate
updateValue
else
if
equals
key
boolean
sdValue
equalsIgnoreCase
value
setSeldirs
sdValue
else
if
key
startsWith
String
name
key
substring
tryToSetAParameter
cache
name
value
else
if
key
startsWith
String
name
key
substring
tryToSetAParameter
algorithm
name
value
else
if
key
startsWith
String
name
key
substring
tryToSetAParameter
comparator
name
value
else
setError
key
protected
void
tryToSetAParameter
Object
obj
String
name
String
value
Project
prj
getProject
getProject
new
Project
IntrospectionHelper
iHelper
IntrospectionHelper
getHelper
prj
obj
getClass
try
iHelper
setAttribute
prj
obj
name
value
catch
org
apache
tools
ant
BuildException
e
public
String
toString
StringBuffer
buf
new
StringBuffer
buf
append
append
update
buf
append
append
selectDirectories
buf
append
append
cache
buf
append
append
algorithm
buf
append
append
comparator
buf
append
return
buf
toString
public
void
buildFinished
BuildEvent
event
if
getDelayUpdate
saveCache
public
void
targetFinished
BuildEvent
event
if
getDelayUpdate
saveCache
public
void
taskFinished
BuildEvent
event
if
getDelayUpdate
saveCache
public
void
buildStarted
BuildEvent
event
public
void
targetStarted
BuildEvent
event
public
void
taskStarted
BuildEvent
event
public
void
messageLogged
BuildEvent
event
public
Cache
getCache
return
cache
public
void
setCache
CacheName
name
cacheName
name
public
static
class
CacheName
extends
EnumeratedAttribute
public
String
getValues
return
new
String
public
Algorithm
getAlgorithm
return
algorithm
public
void
setAlgorithm
AlgorithmName
name
algoName
name
public
static
class
AlgorithmName
extends
EnumeratedAttribute
public
String
getValues
return
new
String
public
Comparator
getComparator
return
comparator
public
void
setComparator
ComparatorName
name
compName
name
public
static
class
ComparatorName
extends
EnumeratedAttribute
public
String
getValues
return
new
String
