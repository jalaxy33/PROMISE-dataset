package
org
apache
tools
ant
import
java
io
ByteArrayOutputStream
import
java
io
File
import
java
io
FileInputStream
import
java
io
IOException
import
java
io
InputStream
import
java
io
InputStreamReader
import
java
io
Reader
import
java
lang
reflect
Constructor
import
java
net
MalformedURLException
import
java
net
URL
import
java
util
Collections
import
java
util
Enumeration
import
java
util
HashMap
import
java
util
Hashtable
import
java
util
Map
import
java
util
StringTokenizer
import
java
util
Vector
import
java
util
jar
Attributes
import
java
util
jar
Attributes
Name
import
java
util
jar
JarFile
import
java
util
jar
Manifest
import
java
util
zip
ZipEntry
import
java
util
zip
ZipFile
import
org
apache
tools
ant
types
Path
import
org
apache
tools
ant
util
CollectionUtils
import
org
apache
tools
ant
util
FileUtils
import
org
apache
tools
ant
util
JavaEnvUtils
import
org
apache
tools
ant
util
LoaderUtils
import
org
apache
tools
ant
launch
Locator
public
class
AntClassLoader
extends
ClassLoader
implements
SubBuildListener
private
static
final
FileUtils
FILE_UTILS
FileUtils
getFileUtils
private
class
ResourceEnumeration
implements
Enumeration
private
String
resourceName
private
int
pathElementsIndex
private
URL
nextResource
ResourceEnumeration
String
name
this
resourceName
name
this
pathElementsIndex
findNextResource
public
boolean
hasMoreElements
return
this
nextResource
public
Object
nextElement
URL
ret
this
nextResource
findNextResource
return
ret
private
void
findNextResource
URL
url
while
pathElementsIndex
pathComponents
size
url
try
File
pathComponent
File
pathComponents
elementAt
pathElementsIndex
url
getResourceURL
pathComponent
this
resourceName
pathElementsIndex
catch
BuildException
e
this
nextResource
url
private
static
final
int
BUFFER_SIZE
private
static
final
int
NUMBER_OF_STRINGS
private
Vector
pathComponents
new
Vector
private
Project
project
private
boolean
parentFirst
private
Vector
systemPackages
new
Vector
private
Vector
loaderPackages
new
Vector
private
boolean
ignoreBase
private
ClassLoader
parent
private
Hashtable
zipFiles
new
Hashtable
private
static
Map
pathMap
Collections
synchronizedMap
new
HashMap
private
ClassLoader
savedContextLoader
private
boolean
isContextLoaderSaved
public
AntClassLoader
ClassLoader
parent
Project
project
Path
classpath
setParent
parent
setClassPath
classpath
setProject
project
public
AntClassLoader
setParent
public
AntClassLoader
Project
project
Path
classpath
setParent
setProject
project
setClassPath
classpath
public
AntClassLoader
ClassLoader
parent
Project
project
Path
classpath
boolean
parentFirst
this
project
classpath
if
parent
setParent
parent
setParentFirst
parentFirst
addJavaLibraries
public
AntClassLoader
Project
project
Path
classpath
boolean
parentFirst
this
project
classpath
parentFirst
public
AntClassLoader
ClassLoader
parent
boolean
parentFirst
setParent
parent
project
this
parentFirst
parentFirst
public
void
setProject
Project
project
this
project
project
if
project
project
addBuildListener
this
public
void
setClassPath
Path
classpath
pathComponents
removeAllElements
if
classpath
Path
actualClasspath
classpath
concatSystemClasspath
String
pathElements
actualClasspath
list
for
int
i
i
pathElements
length
i
try
addPathElement
pathElements
i
catch
BuildException
e
public
void
setParent
ClassLoader
parent
if
parent
this
parent
AntClassLoader
class
getClassLoader
else
this
parent
parent
public
void
setParentFirst
boolean
parentFirst
this
parentFirst
parentFirst
protected
void
log
String
message
int
priority
if
project
project
log
message
priority
public
void
setThreadContextLoader
if
isContextLoaderSaved
throw
new
BuildException
if
LoaderUtils
isContextLoaderAvailable
savedContextLoader
LoaderUtils
getContextClassLoader
ClassLoader
loader
this
if
project
equals
project
getProperty
loader
this
getClass
getClassLoader
LoaderUtils
setContextClassLoader
loader
isContextLoaderSaved
public
void
resetThreadContextLoader
if
LoaderUtils
isContextLoaderAvailable
isContextLoaderSaved
LoaderUtils
setContextClassLoader
savedContextLoader
savedContextLoader
isContextLoaderSaved
public
void
addPathElement
String
pathElement
throws
BuildException
File
pathComponent
project
project
resolveFile
pathElement
new
File
pathElement
try
addPathFile
pathComponent
catch
IOException
e
throw
new
BuildException
e
protected
void
addPathFile
File
pathComponent
throws
IOException
pathComponents
addElement
pathComponent
if
pathComponent
isDirectory
return
String
absPathPlusTimeAndLength
pathComponent
getAbsolutePath
pathComponent
lastModified
pathComponent
length
String
classpath
String
pathMap
get
absPathPlusTimeAndLength
if
classpath
ZipFile
jarFile
InputStream
manifestStream
try
jarFile
new
ZipFile
pathComponent
manifestStream
jarFile
getInputStream
new
ZipEntry
if
manifestStream
return
Reader
manifestReader
new
InputStreamReader
manifestStream
org
apache
tools
ant
taskdefs
Manifest
manifest
new
org
apache
tools
ant
taskdefs
Manifest
manifestReader
classpath
manifest
getMainSection
getAttributeValue
catch
org
apache
tools
ant
taskdefs
ManifestException
e
finally
if
manifestStream
manifestStream
close
if
jarFile
jarFile
close
if
classpath
classpath
pathMap
put
absPathPlusTimeAndLength
classpath
if
equals
classpath
URL
baseURL
FILE_UTILS
getFileURL
pathComponent
StringTokenizer
st
new
StringTokenizer
classpath
while
st
hasMoreTokens
String
classpathElement
st
nextToken
URL
libraryURL
new
URL
baseURL
classpathElement
if
libraryURL
getProtocol
equals
log
classpathElement
Project
MSG_VERBOSE
continue
String
decodedPath
Locator
decodeUri
libraryURL
getFile
File
libraryFile
new
File
decodedPath
if
libraryFile
exists
isInPath
libraryFile
addPathFile
libraryFile
public
String
getClasspath
StringBuffer
sb
new
StringBuffer
boolean
firstPass
Enumeration
componentEnum
pathComponents
elements
while
componentEnum
hasMoreElements
if
firstPass
sb
append
System
getProperty
else
firstPass
sb
append
File
componentEnum
nextElement
getAbsolutePath
return
sb
toString
public
synchronized
void
setIsolated
boolean
isolated
ignoreBase
isolated
public
static
void
initializeClass
Class
theClass
final
Constructor
cons
theClass
getDeclaredConstructors
if
cons
if
cons
length
cons
final
String
strs
new
String
NUMBER_OF_STRINGS
try
cons
newInstance
Object
strs
catch
Exception
e
public
void
addSystemPackageRoot
String
packageRoot
systemPackages
addElement
packageRoot
packageRoot
endsWith
public
void
addLoaderPackageRoot
String
packageRoot
loaderPackages
addElement
packageRoot
packageRoot
endsWith
public
Class
forceLoadClass
String
classname
throws
ClassNotFoundException
log
classname
Project
MSG_DEBUG
Class
theClass
findLoadedClass
classname
if
theClass
theClass
findClass
classname
return
theClass
public
Class
forceLoadSystemClass
String
classname
throws
ClassNotFoundException
log
classname
Project
MSG_DEBUG
Class
theClass
findLoadedClass
classname
if
theClass
theClass
findBaseClass
classname
return
theClass
public
InputStream
getResourceAsStream
String
name
InputStream
resourceStream
if
isParentFirst
name
resourceStream
loadBaseResource
name
if
resourceStream
log
name
Project
MSG_DEBUG
else
resourceStream
loadResource
name
if
resourceStream
log
name
Project
MSG_DEBUG
else
resourceStream
loadResource
name
if
resourceStream
log
name
Project
MSG_DEBUG
else
resourceStream
loadBaseResource
name
if
resourceStream
log
name
Project
MSG_DEBUG
if
resourceStream
log
name
Project
MSG_DEBUG
return
resourceStream
private
InputStream
loadResource
String
name
InputStream
stream
Enumeration
e
pathComponents
elements
while
e
hasMoreElements
stream
File
pathComponent
File
e
nextElement
stream
getResourceStream
pathComponent
name
return
stream
private
InputStream
loadBaseResource
String
name
if
parent
return
getSystemResourceAsStream
name
else
return
parent
getResourceAsStream
name
private
InputStream
getResourceStream
File
file
String
resourceName
try
if
file
exists
return
if
file
isDirectory
File
resource
new
File
file
resourceName
if
resource
exists
return
new
FileInputStream
resource
else
ZipFile
zipFile
ZipFile
zipFiles
get
file
if
zipFile
zipFile
new
ZipFile
file
zipFiles
put
file
zipFile
ZipEntry
entry
zipFile
getEntry
resourceName
if
entry
return
zipFile
getInputStream
entry
catch
Exception
e
log
e
getClass
getName
e
getMessage
resourceName
file
Project
MSG_VERBOSE
return
private
boolean
isParentFirst
String
resourceName
boolean
useParentFirst
parentFirst
for
Enumeration
e
systemPackages
elements
e
hasMoreElements
String
packageName
String
e
nextElement
if
resourceName
startsWith
packageName
useParentFirst
break
for
Enumeration
e
loaderPackages
elements
e
hasMoreElements
String
packageName
String
e
nextElement
if
resourceName
startsWith
packageName
useParentFirst
break
return
useParentFirst
private
ClassLoader
getRootLoader
ClassLoader
ret
getClass
getClassLoader
while
ret
ret
getParent
ret
ret
getParent
return
ret
public
URL
getResource
String
name
URL
url
if
isParentFirst
name
url
parent
super
getResource
name
parent
getResource
name
if
url
log
name
Project
MSG_DEBUG
else
Enumeration
e
pathComponents
elements
while
e
hasMoreElements
url
File
pathComponent
File
e
nextElement
url
getResourceURL
pathComponent
name
if
url
log
name
Project
MSG_DEBUG
if
url
isParentFirst
name
if
ignoreBase
url
getRootLoader
getRootLoader
getResource
name
else
url
parent
super
getResource
name
parent
getResource
name
if
url
log
name
Project
MSG_DEBUG
if
url
log
name
Project
MSG_DEBUG
return
url
protected
Enumeration
findResources
String
name
throws
IOException
Enumeration
mine
new
ResourceEnumeration
name
Enumeration
base
if
parent
parent
getParent
base
parent
getResources
name
else
base
new
CollectionUtils
EmptyEnumeration
if
isParentFirst
name
return
CollectionUtils
append
base
mine
else
if
ignoreBase
return
getRootLoader
mine
CollectionUtils
append
mine
getRootLoader
getResources
name
else
return
CollectionUtils
append
mine
base
protected
URL
getResourceURL
File
file
String
resourceName
try
if
file
exists
return
if
file
isDirectory
File
resource
new
File
file
resourceName
if
resource
exists
try
return
FILE_UTILS
getFileURL
resource
catch
MalformedURLException
ex
return
else
ZipFile
zipFile
ZipFile
zipFiles
get
file
if
zipFile
zipFile
new
ZipFile
file
zipFiles
put
file
zipFile
ZipEntry
entry
zipFile
getEntry
resourceName
if
entry
try
return
new
URL
FILE_UTILS
getFileURL
file
entry
catch
MalformedURLException
ex
return
catch
Exception
e
e
printStackTrace
return
protected
synchronized
Class
loadClass
String
classname
boolean
resolve
throws
ClassNotFoundException
Class
theClass
findLoadedClass
classname
if
theClass
return
theClass
if
isParentFirst
classname
try
theClass
findBaseClass
classname
log
classname
Project
MSG_DEBUG
catch
ClassNotFoundException
cnfe
theClass
findClass
classname
log
classname
Project
MSG_DEBUG
else
try
theClass
findClass
classname
log
classname
Project
MSG_DEBUG
catch
ClassNotFoundException
cnfe
if
ignoreBase
throw
cnfe
theClass
findBaseClass
classname
log
classname
Project
MSG_DEBUG
if
resolve
resolveClass
theClass
return
theClass
private
String
getClassFilename
String
classname
return
classname
replace
protected
Class
defineClassFromData
File
container
byte
classData
String
classname
throws
IOException
definePackage
container
classname
return
defineClass
classname
classData
classData
length
Project
class
getProtectionDomain
protected
void
definePackage
File
container
String
className
throws
IOException
int
classIndex
className
lastIndexOf
if
classIndex
return
String
packageName
className
substring
classIndex
if
getPackage
packageName
return
Manifest
manifest
getJarManifest
container
if
manifest
definePackage
packageName
else
definePackage
container
packageName
manifest
private
Manifest
getJarManifest
File
container
throws
IOException
if
container
isDirectory
return
JarFile
jarFile
try
jarFile
new
JarFile
container
return
jarFile
getManifest
finally
if
jarFile
jarFile
close
protected
void
definePackage
File
container
String
packageName
Manifest
manifest
String
sectionName
packageName
replace
String
specificationTitle
String
specificationVendor
String
specificationVersion
String
implementationTitle
String
implementationVendor
String
implementationVersion
String
sealedString
URL
sealBase
Attributes
sectionAttributes
manifest
getAttributes
sectionName
if
sectionAttributes
specificationTitle
sectionAttributes
getValue
Name
SPECIFICATION_TITLE
specificationVendor
sectionAttributes
getValue
Name
SPECIFICATION_VENDOR
specificationVersion
sectionAttributes
getValue
Name
SPECIFICATION_VERSION
implementationTitle
sectionAttributes
getValue
Name
IMPLEMENTATION_TITLE
implementationVendor
sectionAttributes
getValue
Name
IMPLEMENTATION_VENDOR
implementationVersion
sectionAttributes
getValue
Name
IMPLEMENTATION_VERSION
sealedString
sectionAttributes
getValue
Name
SEALED
Attributes
mainAttributes
manifest
getMainAttributes
if
mainAttributes
if
specificationTitle
specificationTitle
mainAttributes
getValue
Name
SPECIFICATION_TITLE
if
specificationVendor
specificationVendor
mainAttributes
getValue
Name
SPECIFICATION_VENDOR
if
specificationVersion
specificationVersion
mainAttributes
getValue
Name
SPECIFICATION_VERSION
if
implementationTitle
implementationTitle
mainAttributes
getValue
Name
IMPLEMENTATION_TITLE
if
implementationVendor
implementationVendor
mainAttributes
getValue
Name
IMPLEMENTATION_VENDOR
if
implementationVersion
implementationVersion
mainAttributes
getValue
Name
IMPLEMENTATION_VERSION
if
sealedString
sealedString
mainAttributes
getValue
Name
SEALED
if
sealedString
sealedString
equalsIgnoreCase
try
sealBase
new
URL
FileUtils
getFileUtils
toURI
container
getAbsolutePath
catch
MalformedURLException
e
definePackage
packageName
specificationTitle
specificationVersion
specificationVendor
implementationTitle
implementationVersion
implementationVendor
sealBase
private
Class
getClassFromStream
InputStream
stream
String
classname
File
container
throws
IOException
SecurityException
ByteArrayOutputStream
baos
new
ByteArrayOutputStream
int
bytesRead
byte
buffer
new
byte
BUFFER_SIZE
while
bytesRead
stream
read
buffer
BUFFER_SIZE
baos
write
buffer
bytesRead
byte
classData
baos
toByteArray
return
defineClassFromData
container
classData
classname
public
Class
findClass
String
name
throws
ClassNotFoundException
log
name
Project
MSG_DEBUG
return
findClassInComponents
name
protected
boolean
isInPath
File
component
for
Enumeration
e
pathComponents
elements
e
hasMoreElements
File
pathComponent
File
e
nextElement
if
pathComponent
equals
component
return
return
private
Class
findClassInComponents
String
name
throws
ClassNotFoundException
InputStream
stream
String
classFilename
getClassFilename
name
try
Enumeration
e
pathComponents
elements
while
e
hasMoreElements
File
pathComponent
File
e
nextElement
try
stream
getResourceStream
pathComponent
classFilename
if
stream
log
pathComponent
classFilename
Project
MSG_DEBUG
return
getClassFromStream
stream
name
pathComponent
catch
SecurityException
se
throw
se
catch
IOException
ioe
log
pathComponent
ioe
getMessage
Project
MSG_VERBOSE
throw
new
ClassNotFoundException
name
finally
try
if
stream
stream
close
catch
IOException
e
private
Class
findBaseClass
String
name
throws
ClassNotFoundException
if
parent
return
findSystemClass
name
else
return
parent
loadClass
name
public
synchronized
void
cleanup
for
Enumeration
e
zipFiles
elements
e
hasMoreElements
ZipFile
zipFile
ZipFile
e
nextElement
try
zipFile
close
catch
IOException
ioe
zipFiles
new
Hashtable
if
project
project
removeBuildListener
this
project
public
void
buildStarted
BuildEvent
event
public
void
buildFinished
BuildEvent
event
cleanup
public
void
subBuildFinished
BuildEvent
event
if
event
getProject
project
cleanup
public
void
subBuildStarted
BuildEvent
event
public
void
targetStarted
BuildEvent
event
public
void
targetFinished
BuildEvent
event
public
void
taskStarted
BuildEvent
event
public
void
taskFinished
BuildEvent
event
public
void
messageLogged
BuildEvent
event
public
void
addJavaLibraries
Vector
packages
JavaEnvUtils
getJrePackages
Enumeration
e
packages
elements
while
e
hasMoreElements
String
packageName
String
e
nextElement
addSystemPackageRoot
packageName
public
String
toString
return
getClasspath
