package
org
apache
tools
ant
types
import
java
lang
reflect
Method
import
java
io
File
import
java
io
FileInputStream
import
java
io
IOException
import
java
io
InputStream
import
java
net
MalformedURLException
import
java
net
URL
import
java
util
Enumeration
import
java
util
Vector
import
javax
xml
parsers
ParserConfigurationException
import
javax
xml
parsers
SAXParserFactory
import
javax
xml
transform
Source
import
javax
xml
transform
TransformerException
import
javax
xml
transform
URIResolver
import
javax
xml
transform
sax
SAXSource
import
org
apache
tools
ant
AntClassLoader
import
org
apache
tools
ant
BuildException
import
org
apache
tools
ant
Project
import
org
apache
tools
ant
util
FileUtils
import
org
apache
tools
ant
util
JAXPUtils
import
org
xml
sax
EntityResolver
import
org
xml
sax
InputSource
import
org
xml
sax
SAXException
import
org
xml
sax
XMLReader
public
class
XMLCatalog
extends
DataType
implements
Cloneable
EntityResolver
URIResolver
private
static
final
FileUtils
FILE_UTILS
FileUtils
getFileUtils
private
Vector
elements
new
Vector
private
Path
classpath
private
Path
catalogPath
public
static
final
String
APACHE_RESOLVER
public
static
final
String
CATALOG_RESOLVER
public
XMLCatalog
setChecked
private
Vector
getElements
return
getRef
elements
private
Path
getClasspath
return
getRef
classpath
public
Path
createClasspath
if
isReference
throw
noChildrenAllowed
if
this
classpath
this
classpath
new
Path
getProject
setChecked
return
this
classpath
createPath
public
void
setClasspath
Path
classpath
if
isReference
throw
tooManyAttributes
if
this
classpath
this
classpath
classpath
else
this
classpath
append
classpath
setChecked
public
void
setClasspathRef
Reference
r
if
isReference
throw
tooManyAttributes
createClasspath
setRefid
r
setChecked
public
Path
createCatalogPath
if
isReference
throw
noChildrenAllowed
if
this
catalogPath
this
catalogPath
new
Path
getProject
setChecked
return
this
catalogPath
createPath
public
void
setCatalogPathRef
Reference
r
if
isReference
throw
tooManyAttributes
createCatalogPath
setRefid
r
setChecked
public
Path
getCatalogPath
return
getRef
catalogPath
public
void
addDTD
ResourceLocation
dtd
throws
BuildException
if
isReference
throw
noChildrenAllowed
getElements
addElement
dtd
setChecked
public
void
addEntity
ResourceLocation
entity
throws
BuildException
addDTD
entity
public
void
addConfiguredXMLCatalog
XMLCatalog
catalog
if
isReference
throw
noChildrenAllowed
Vector
newElements
catalog
getElements
Vector
ourElements
getElements
Enumeration
e
newElements
elements
while
e
hasMoreElements
ourElements
addElement
e
nextElement
Path
nestedClasspath
catalog
getClasspath
createClasspath
append
nestedClasspath
Path
nestedCatalogPath
catalog
getCatalogPath
createCatalogPath
append
nestedCatalogPath
setChecked
public
void
setRefid
Reference
r
throws
BuildException
if
elements
isEmpty
throw
tooManyAttributes
super
setRefid
r
public
InputSource
resolveEntity
String
publicId
String
systemId
throws
SAXException
IOException
if
isReference
return
getRef
resolveEntity
publicId
systemId
dieOnCircularReference
log
publicId
systemId
Project
MSG_DEBUG
InputSource
inputSource
getCatalogResolver
resolveEntity
publicId
systemId
if
inputSource
log
systemId
Project
MSG_DEBUG
return
inputSource
public
Source
resolve
String
href
String
base
throws
TransformerException
if
isReference
return
getRef
resolve
href
base
dieOnCircularReference
SAXSource
source
String
uri
removeFragment
href
log
uri
base
Project
MSG_DEBUG
source
SAXSource
getCatalogResolver
resolve
uri
base
if
source
log
href
Project
MSG_DEBUG
source
new
SAXSource
URL
baseURL
try
if
base
baseURL
FILE_UTILS
getFileURL
getProject
getBaseDir
else
baseURL
new
URL
base
URL
url
uri
length
baseURL
new
URL
baseURL
uri
source
setInputSource
new
InputSource
url
toString
catch
MalformedURLException
ex
source
setInputSource
new
InputSource
uri
setEntityResolver
source
return
source
private
XMLCatalog
getRef
if
isReference
return
this
return
XMLCatalog
getCheckedRef
XMLCatalog
class
private
CatalogResolver
catalogResolver
private
CatalogResolver
getCatalogResolver
if
catalogResolver
AntClassLoader
loader
loader
getProject
createClassLoader
Path
systemClasspath
try
Class
clazz
Class
forName
APACHE_RESOLVER
loader
ClassLoader
apacheResolverLoader
clazz
getClassLoader
Class
baseResolverClass
Class
forName
CATALOG_RESOLVER
apacheResolverLoader
ClassLoader
baseResolverLoader
baseResolverClass
getClassLoader
clazz
Class
forName
APACHE_RESOLVER
baseResolverLoader
Object
obj
clazz
newInstance
catalogResolver
new
ExternalResolver
clazz
obj
catch
Throwable
ex
catalogResolver
new
InternalResolver
if
getCatalogPath
getCatalogPath
list
length
log
Project
MSG_WARN
log
ex
Project
MSG_DEBUG
return
catalogResolver
private
void
setEntityResolver
SAXSource
source
throws
TransformerException
XMLReader
reader
source
getXMLReader
if
reader
SAXParserFactory
spFactory
SAXParserFactory
newInstance
spFactory
setNamespaceAware
try
reader
spFactory
newSAXParser
getXMLReader
catch
ParserConfigurationException
ex
throw
new
TransformerException
ex
catch
SAXException
ex
throw
new
TransformerException
ex
reader
setEntityResolver
this
source
setXMLReader
reader
private
ResourceLocation
findMatchingEntry
String
publicId
Enumeration
e
getElements
elements
ResourceLocation
element
while
e
hasMoreElements
Object
o
e
nextElement
if
o
instanceof
ResourceLocation
element
ResourceLocation
o
if
element
getPublicId
equals
publicId
return
element
return
private
String
removeFragment
String
uri
String
result
uri
int
hashPos
uri
indexOf
if
hashPos
result
uri
substring
hashPos
return
result
private
InputSource
filesystemLookup
ResourceLocation
matchingEntry
String
uri
matchingEntry
getLocation
uri
uri
replace
File
separatorChar
URL
baseURL
if
matchingEntry
getBase
baseURL
matchingEntry
getBase
else
try
baseURL
FILE_UTILS
getFileURL
getProject
getBaseDir
catch
MalformedURLException
ex
throw
new
BuildException
InputSource
source
URL
url
try
url
new
URL
baseURL
uri
catch
MalformedURLException
ex
File
testFile
new
File
uri
if
testFile
exists
testFile
canRead
log
uri
Project
MSG_DEBUG
try
url
FILE_UTILS
getFileURL
testFile
catch
MalformedURLException
ex1
throw
new
BuildException
testFile
getAbsolutePath
else
log
uri
Project
MSG_DEBUG
if
url
url
getProtocol
equals
String
fileName
FILE_UTILS
fromURI
url
toString
if
fileName
log
fileName
Project
MSG_DEBUG
File
resFile
new
File
fileName
if
resFile
exists
resFile
canRead
try
source
new
InputSource
new
FileInputStream
resFile
String
sysid
JAXPUtils
getSystemId
resFile
source
setSystemId
sysid
log
sysid
Project
MSG_DEBUG
catch
IOException
ex
return
source
private
InputSource
classpathLookup
ResourceLocation
matchingEntry
InputSource
source
AntClassLoader
loader
Path
cp
classpath
if
cp
cp
classpath
concatSystemClasspath
else
cp
new
Path
getProject
concatSystemClasspath
loader
getProject
createClassLoader
cp
InputStream
is
loader
getResourceAsStream
matchingEntry
getLocation
if
is
source
new
InputSource
is
URL
entryURL
loader
getResource
matchingEntry
getLocation
String
sysid
entryURL
toExternalForm
source
setSystemId
sysid
log
sysid
Project
MSG_DEBUG
return
source
private
InputSource
urlLookup
ResourceLocation
matchingEntry
String
uri
matchingEntry
getLocation
URL
baseURL
if
matchingEntry
getBase
baseURL
matchingEntry
getBase
else
try
baseURL
FILE_UTILS
getFileURL
getProject
getBaseDir
catch
MalformedURLException
ex
throw
new
BuildException
InputSource
source
URL
url
try
url
new
URL
baseURL
uri
catch
MalformedURLException
ex
if
url
try
InputStream
is
url
openStream
if
is
source
new
InputSource
is
String
sysid
url
toExternalForm
source
setSystemId
sysid
log
sysid
Project
MSG_DEBUG
catch
IOException
ex
return
source
private
interface
CatalogResolver
extends
URIResolver
EntityResolver
InputSource
resolveEntity
String
publicId
String
systemId
Source
resolve
String
href
String
base
throws
TransformerException
private
class
InternalResolver
implements
CatalogResolver
public
InternalResolver
log
Project
MSG_VERBOSE
public
InputSource
resolveEntity
String
publicId
String
systemId
InputSource
result
ResourceLocation
matchingEntry
findMatchingEntry
publicId
if
matchingEntry
log
matchingEntry
getPublicId
matchingEntry
getLocation
Project
MSG_DEBUG
result
filesystemLookup
matchingEntry
if
result
result
classpathLookup
matchingEntry
if
result
result
urlLookup
matchingEntry
return
result
public
Source
resolve
String
href
String
base
throws
TransformerException
SAXSource
result
InputSource
source
ResourceLocation
matchingEntry
findMatchingEntry
href
if
matchingEntry
log
matchingEntry
getPublicId
matchingEntry
getLocation
Project
MSG_DEBUG
ResourceLocation
entryCopy
matchingEntry
if
base
try
URL
baseURL
new
URL
base
entryCopy
new
ResourceLocation
entryCopy
setBase
baseURL
catch
MalformedURLException
ex
entryCopy
setPublicId
matchingEntry
getPublicId
entryCopy
setLocation
matchingEntry
getLocation
source
filesystemLookup
entryCopy
if
source
source
classpathLookup
entryCopy
if
source
source
urlLookup
entryCopy
if
source
result
new
SAXSource
source
return
result
private
class
ExternalResolver
implements
CatalogResolver
private
Method
setXMLCatalog
private
Method
parseCatalog
private
Method
resolveEntity
private
Method
resolve
private
Object
resolverImpl
private
boolean
externalCatalogsProcessed
public
ExternalResolver
Class
resolverImplClass
Object
resolverImpl
this
resolverImpl
resolverImpl
try
setXMLCatalog
resolverImplClass
getMethod
new
Class
XMLCatalog
class
parseCatalog
resolverImplClass
getMethod
new
Class
String
class
resolveEntity
resolverImplClass
getMethod
new
Class
String
class
String
class
resolve
resolverImplClass
getMethod
new
Class
String
class
String
class
catch
NoSuchMethodException
ex
throw
new
BuildException
ex
log
Project
MSG_VERBOSE
public
InputSource
resolveEntity
String
publicId
String
systemId
InputSource
result
processExternalCatalogs
ResourceLocation
matchingEntry
findMatchingEntry
publicId
if
matchingEntry
log
matchingEntry
getPublicId
matchingEntry
getLocation
Project
MSG_DEBUG
result
filesystemLookup
matchingEntry
if
result
result
classpathLookup
matchingEntry
if
result
try
result
InputSource
resolveEntity
invoke
resolverImpl
new
Object
publicId
systemId
catch
Exception
ex
throw
new
BuildException
ex
else
try
result
InputSource
resolveEntity
invoke
resolverImpl
new
Object
publicId
systemId
catch
Exception
ex
throw
new
BuildException
ex
return
result
public
Source
resolve
String
href
String
base
throws
TransformerException
SAXSource
result
InputSource
source
processExternalCatalogs
ResourceLocation
matchingEntry
findMatchingEntry
href
if
matchingEntry
log
matchingEntry
getPublicId
matchingEntry
getLocation
Project
MSG_DEBUG
ResourceLocation
entryCopy
matchingEntry
if
base
try
URL
baseURL
new
URL
base
entryCopy
new
ResourceLocation
entryCopy
setBase
baseURL
catch
MalformedURLException
ex
entryCopy
setPublicId
matchingEntry
getPublicId
entryCopy
setLocation
matchingEntry
getLocation
source
filesystemLookup
entryCopy
if
source
source
classpathLookup
entryCopy
if
source
result
new
SAXSource
source
else
try
result
SAXSource
resolve
invoke
resolverImpl
new
Object
href
base
catch
Exception
ex
throw
new
BuildException
ex
else
try
result
SAXSource
resolve
invoke
resolverImpl
new
Object
href
base
catch
Exception
ex
throw
new
BuildException
ex
return
result
private
void
processExternalCatalogs
if
externalCatalogsProcessed
try
setXMLCatalog
invoke
resolverImpl
new
Object
XMLCatalog
this
catch
Exception
ex
throw
new
BuildException
ex
Path
catPath
getCatalogPath
if
catPath
log
getCatalogPath
Project
MSG_DEBUG
String
catPathList
getCatalogPath
list
for
int
i
i
catPathList
length
i
File
catFile
new
File
catPathList
i
log
catFile
Project
MSG_DEBUG
try
parseCatalog
invoke
resolverImpl
new
Object
catFile
getPath
catch
Exception
ex
throw
new
BuildException
ex
externalCatalogsProcessed
