package
org
apache
tools
ant
types
import
java
io
BufferedReader
import
java
io
File
import
java
io
FileReader
import
java
io
IOException
import
java
util
Enumeration
import
java
util
StringTokenizer
import
java
util
Vector
import
org
apache
tools
ant
BuildException
import
org
apache
tools
ant
Project
public
class
PatternSet
extends
DataType
implements
Cloneable
private
Vector
includeList
new
Vector
private
Vector
excludeList
new
Vector
private
Vector
includesFileList
new
Vector
private
Vector
excludesFileList
new
Vector
public
class
NameEntry
private
String
name
private
String
ifCond
private
String
unlessCond
public
void
setName
String
name
this
name
name
public
void
setIf
String
cond
ifCond
cond
public
void
setUnless
String
cond
unlessCond
cond
public
String
getName
return
name
public
String
evalName
Project
p
return
valid
p
name
private
boolean
valid
Project
p
if
ifCond
p
getProperty
ifCond
return
else
if
unlessCond
p
getProperty
unlessCond
return
return
public
String
toString
StringBuffer
buf
new
StringBuffer
if
name
buf
append
else
buf
append
name
if
ifCond
unlessCond
buf
append
String
connector
if
ifCond
buf
append
buf
append
ifCond
connector
if
unlessCond
buf
append
connector
buf
append
buf
append
unlessCond
return
buf
toString
public
PatternSet
super
public
void
setRefid
Reference
r
throws
BuildException
if
includeList
isEmpty
excludeList
isEmpty
throw
tooManyAttributes
super
setRefid
r
public
void
addConfiguredPatternset
PatternSet
p
if
isReference
throw
noChildrenAllowed
String
nestedIncludes
p
getIncludePatterns
getProject
String
nestedExcludes
p
getExcludePatterns
getProject
if
nestedIncludes
for
int
i
i
nestedIncludes
length
i
createInclude
setName
nestedIncludes
i
if
nestedExcludes
for
int
i
i
nestedExcludes
length
i
createExclude
setName
nestedExcludes
i
public
NameEntry
createInclude
if
isReference
throw
noChildrenAllowed
return
addPatternToList
includeList
public
NameEntry
createIncludesFile
if
isReference
throw
noChildrenAllowed
return
addPatternToList
includesFileList
public
NameEntry
createExclude
if
isReference
throw
noChildrenAllowed
return
addPatternToList
excludeList
public
NameEntry
createExcludesFile
if
isReference
throw
noChildrenAllowed
return
addPatternToList
excludesFileList
public
void
setIncludes
String
includes
if
isReference
throw
tooManyAttributes
if
includes
includes
length
StringTokenizer
tok
new
StringTokenizer
includes
while
tok
hasMoreTokens
createInclude
setName
tok
nextToken
public
void
setExcludes
String
excludes
if
isReference
throw
tooManyAttributes
if
excludes
excludes
length
StringTokenizer
tok
new
StringTokenizer
excludes
while
tok
hasMoreTokens
createExclude
setName
tok
nextToken
private
NameEntry
addPatternToList
Vector
list
NameEntry
result
new
NameEntry
list
addElement
result
return
result
public
void
setIncludesfile
File
includesFile
throws
BuildException
if
isReference
throw
tooManyAttributes
createIncludesFile
setName
includesFile
getAbsolutePath
public
void
setExcludesfile
File
excludesFile
throws
BuildException
if
isReference
throw
tooManyAttributes
createExcludesFile
setName
excludesFile
getAbsolutePath
private
void
readPatterns
File
patternfile
Vector
patternlist
Project
p
throws
BuildException
BufferedReader
patternReader
try
patternReader
new
BufferedReader
new
FileReader
patternfile
String
line
patternReader
readLine
while
line
if
line
length
line
p
replaceProperties
line
addPatternToList
patternlist
setName
line
line
patternReader
readLine
catch
IOException
ioe
String
msg
patternfile
throw
new
BuildException
msg
ioe
finally
if
patternReader
try
patternReader
close
catch
IOException
ioe
public
void
append
PatternSet
other
Project
p
if
isReference
throw
new
BuildException
String
incl
other
getIncludePatterns
p
if
incl
for
int
i
i
incl
length
i
createInclude
setName
incl
i
String
excl
other
getExcludePatterns
p
if
excl
for
int
i
i
excl
length
i
createExclude
setName
excl
i
public
String
getIncludePatterns
Project
p
if
isReference
return
getRef
p
getIncludePatterns
p
else
readFiles
p
return
makeArray
includeList
p
public
String
getExcludePatterns
Project
p
if
isReference
return
getRef
p
getExcludePatterns
p
else
readFiles
p
return
makeArray
excludeList
p
public
boolean
hasPatterns
Project
p
if
isReference
return
getRef
p
hasPatterns
p
else
return
includesFileList
size
excludesFileList
size
includeList
size
excludeList
size
private
PatternSet
getRef
Project
p
return
PatternSet
getCheckedRef
p
private
String
makeArray
Vector
list
Project
p
if
list
size
return
Vector
tmpNames
new
Vector
for
Enumeration
e
list
elements
e
hasMoreElements
NameEntry
ne
NameEntry
e
nextElement
String
pattern
ne
evalName
p
if
pattern
pattern
length
tmpNames
addElement
pattern
String
result
new
String
tmpNames
size
tmpNames
copyInto
result
return
result
private
void
readFiles
Project
p
if
includesFileList
size
Enumeration
e
includesFileList
elements
while
e
hasMoreElements
NameEntry
ne
NameEntry
e
nextElement
String
fileName
ne
evalName
p
if
fileName
File
inclFile
p
resolveFile
fileName
if
inclFile
exists
throw
new
BuildException
inclFile
getAbsolutePath
readPatterns
inclFile
includeList
p
includesFileList
removeAllElements
if
excludesFileList
size
Enumeration
e
excludesFileList
elements
while
e
hasMoreElements
NameEntry
ne
NameEntry
e
nextElement
String
fileName
ne
evalName
p
if
fileName
File
exclFile
p
resolveFile
fileName
if
exclFile
exists
throw
new
BuildException
exclFile
getAbsolutePath
readPatterns
exclFile
excludeList
p
excludesFileList
removeAllElements
public
String
toString
return
includeList
excludeList
public
Object
clone
try
PatternSet
ps
PatternSet
super
clone
ps
includeList
Vector
includeList
clone
ps
excludeList
Vector
excludeList
clone
ps
includesFileList
Vector
includesFileList
clone
ps
excludesFileList
Vector
excludesFileList
clone
return
ps
catch
CloneNotSupportedException
e
throw
new
BuildException
e
