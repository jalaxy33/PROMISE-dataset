package
org
apache
tools
ant
taskdefs
import
java
io
BufferedOutputStream
import
java
io
File
import
java
io
FileOutputStream
import
java
io
IOException
import
java
io
InputStream
import
java
io
OutputStream
import
java
util
Enumeration
import
java
util
HashMap
import
java
util
HashSet
import
java
util
Iterator
import
java
util
Vector
import
java
util
zip
GZIPOutputStream
import
org
apache
tools
ant
BuildException
import
org
apache
tools
ant
DirectoryScanner
import
org
apache
tools
ant
Project
import
org
apache
tools
ant
types
ArchiveFileSet
import
org
apache
tools
ant
types
EnumeratedAttribute
import
org
apache
tools
ant
types
FileSet
import
org
apache
tools
ant
types
Resource
import
org
apache
tools
ant
types
ResourceCollection
import
org
apache
tools
ant
types
resources
ArchiveResource
import
org
apache
tools
ant
types
resources
FileResource
import
org
apache
tools
ant
types
selectors
SelectorUtils
import
org
apache
tools
ant
types
resources
TarResource
import
org
apache
tools
ant
util
FileUtils
import
org
apache
tools
ant
util
MergingMapper
import
org
apache
tools
ant
util
SourceFileScanner
import
org
apache
tools
bzip2
CBZip2OutputStream
import
org
apache
tools
tar
TarConstants
import
org
apache
tools
tar
TarEntry
import
org
apache
tools
tar
TarOutputStream
public
class
Tar
extends
MatchingTask
public
static
final
String
WARN
public
static
final
String
FAIL
public
static
final
String
TRUNCATE
public
static
final
String
GNU
public
static
final
String
OMIT
File
tarFile
File
baseDir
private
TarLongFileMode
longFileMode
new
TarLongFileMode
Vector
filesets
new
Vector
private
Vector
resourceCollections
new
Vector
Vector
fileSetFiles
new
Vector
private
boolean
longWarningGiven
private
TarCompressionMethod
compression
new
TarCompressionMethod
public
TarFileSet
createTarFileSet
TarFileSet
fs
new
TarFileSet
fs
setProject
getProject
filesets
addElement
fs
return
fs
public
void
add
ResourceCollection
res
resourceCollections
add
res
public
void
setTarfile
File
tarFile
this
tarFile
tarFile
public
void
setDestFile
File
destFile
this
tarFile
destFile
public
void
setBasedir
File
baseDir
this
baseDir
baseDir
public
void
setLongfile
String
mode
log
this
longFileMode
new
TarLongFileMode
longFileMode
setValue
mode
public
void
setLongfile
TarLongFileMode
mode
this
longFileMode
mode
public
void
setCompression
TarCompressionMethod
mode
this
compression
mode
public
void
execute
throws
BuildException
if
tarFile
throw
new
BuildException
getLocation
if
tarFile
exists
tarFile
isDirectory
throw
new
BuildException
getLocation
if
tarFile
exists
tarFile
canWrite
throw
new
BuildException
getLocation
Vector
savedFileSets
Vector
filesets
clone
try
if
baseDir
if
baseDir
exists
throw
new
BuildException
getLocation
TarFileSet
mainFileSet
new
TarFileSet
fileset
mainFileSet
setDir
baseDir
filesets
addElement
mainFileSet
if
filesets
size
resourceCollections
size
throw
new
BuildException
getLocation
boolean
upToDate
for
Enumeration
e
filesets
elements
e
hasMoreElements
upToDate
check
TarFileSet
e
nextElement
for
Enumeration
e
resourceCollections
elements
e
hasMoreElements
upToDate
check
ResourceCollection
e
nextElement
if
upToDate
log
tarFile
getAbsolutePath
Project
MSG_INFO
return
log
tarFile
getAbsolutePath
Project
MSG_INFO
TarOutputStream
tOut
try
tOut
new
TarOutputStream
compression
compress
new
BufferedOutputStream
new
FileOutputStream
tarFile
tOut
setDebug
if
longFileMode
isTruncateMode
tOut
setLongFileMode
TarOutputStream
LONGFILE_TRUNCATE
else
if
longFileMode
isFailMode
longFileMode
isOmitMode
tOut
setLongFileMode
TarOutputStream
LONGFILE_ERROR
else
tOut
setLongFileMode
TarOutputStream
LONGFILE_GNU
longWarningGiven
for
Enumeration
e
filesets
elements
e
hasMoreElements
tar
TarFileSet
e
nextElement
tOut
for
Enumeration
e
resourceCollections
elements
e
hasMoreElements
tar
ResourceCollection
e
nextElement
tOut
catch
IOException
ioe
String
msg
ioe
getMessage
throw
new
BuildException
msg
ioe
getLocation
finally
FileUtils
close
tOut
finally
filesets
savedFileSets
protected
void
tarFile
File
file
TarOutputStream
tOut
String
vPath
TarFileSet
tarFileSet
throws
IOException
if
file
equals
tarFile
return
tarResource
new
FileResource
file
tOut
vPath
tarFileSet
protected
void
tarResource
Resource
r
TarOutputStream
tOut
String
vPath
TarFileSet
tarFileSet
throws
IOException
if
r
isExists
return
if
tarFileSet
String
fullpath
tarFileSet
getFullpath
this
getProject
if
fullpath
length
vPath
fullpath
else
if
vPath
length
return
String
prefix
tarFileSet
getPrefix
this
getProject
if
prefix
length
prefix
endsWith
prefix
prefix
vPath
prefix
vPath
if
vPath
startsWith
tarFileSet
getPreserveLeadingSlashes
int
l
vPath
length
if
l
return
vPath
vPath
substring
l
if
r
isDirectory
vPath
endsWith
vPath
if
vPath
length
TarConstants
NAMELEN
if
longFileMode
isOmitMode
log
vPath
Project
MSG_INFO
return
else
if
longFileMode
isWarnMode
log
vPath
TarConstants
NAMELEN
Project
MSG_WARN
if
longWarningGiven
log
Project
MSG_WARN
longWarningGiven
else
if
longFileMode
isFailMode
throw
new
BuildException
vPath
TarConstants
NAMELEN
getLocation
TarEntry
te
new
TarEntry
vPath
te
setModTime
r
getLastModified
if
r
instanceof
ArchiveResource
ArchiveResource
ar
ArchiveResource
r
te
setMode
ar
getMode
if
r
instanceof
TarResource
TarResource
tr
TarResource
r
te
setUserName
tr
getUserName
te
setUserId
tr
getUid
te
setGroupName
tr
getGroup
te
setGroupId
tr
getGid
if
r
isDirectory
if
r
size
TarConstants
MAXSIZE
throw
new
BuildException
r
TarConstants
MAXSIZE
te
setSize
r
getSize
if
tarFileSet
tarFileSet
hasFileModeBeenSet
te
setMode
tarFileSet
getMode
else
if
tarFileSet
tarFileSet
hasDirModeBeenSet
te
setMode
tarFileSet
getDirMode
this
getProject
if
tarFileSet
if
tarFileSet
hasUserNameBeenSet
te
setUserName
tarFileSet
getUserName
if
tarFileSet
hasGroupBeenSet
te
setGroupName
tarFileSet
getGroup
if
tarFileSet
hasUserIdBeenSet
te
setUserId
tarFileSet
getUid
if
tarFileSet
hasGroupIdBeenSet
te
setGroupId
tarFileSet
getGid
InputStream
in
try
tOut
putNextEntry
te
if
r
isDirectory
in
r
getInputStream
byte
buffer
new
byte
int
count
do
tOut
write
buffer
count
count
in
read
buffer
buffer
length
while
count
tOut
closeEntry
finally
FileUtils
close
in
protected
boolean
archiveIsUpToDate
String
files
return
archiveIsUpToDate
files
baseDir
protected
boolean
archiveIsUpToDate
String
files
File
dir
SourceFileScanner
sfs
new
SourceFileScanner
this
MergingMapper
mm
new
MergingMapper
mm
setTo
tarFile
getAbsolutePath
return
sfs
restrict
files
dir
mm
length
protected
boolean
archiveIsUpToDate
Resource
r
return
SelectorUtils
isOutOfDate
new
FileResource
tarFile
r
FileUtils
getFileUtils
getFileTimestampGranularity
protected
boolean
supportsNonFileResources
return
getClass
equals
Tar
class
protected
boolean
check
ResourceCollection
rc
boolean
upToDate
if
isFileFileSet
rc
FileSet
fs
FileSet
rc
upToDate
check
fs
getDir
getProject
getFileNames
fs
else
if
rc
isFilesystemOnly
supportsNonFileResources
throw
new
BuildException
else
if
rc
isFilesystemOnly
HashSet
basedirs
new
HashSet
HashMap
basedirToFilesMap
new
HashMap
Iterator
iter
rc
iterator
while
iter
hasNext
FileResource
r
FileResource
iter
next
File
base
r
getBaseDir
if
base
base
Copy
NULL_FILE_PLACEHOLDER
basedirs
add
base
Vector
files
Vector
basedirToFilesMap
get
base
if
files
files
new
Vector
basedirToFilesMap
put
base
new
Vector
files
add
r
getName
iter
basedirs
iterator
while
iter
hasNext
File
base
File
iter
next
Vector
f
Vector
basedirToFilesMap
get
base
String
files
String
f
toArray
new
String
f
size
upToDate
check
base
Copy
NULL_FILE_PLACEHOLDER
base
files
else
Iterator
iter
rc
iterator
while
upToDate
iter
hasNext
Resource
r
Resource
iter
next
upToDate
archiveIsUpToDate
r
return
upToDate
protected
boolean
check
File
basedir
String
files
boolean
upToDate
if
archiveIsUpToDate
files
basedir
upToDate
for
int
i
i
files
length
i
if
tarFile
equals
new
File
basedir
files
i
throw
new
BuildException
getLocation
return
upToDate
protected
void
tar
ResourceCollection
rc
TarOutputStream
tOut
throws
IOException
ArchiveFileSet
afs
if
rc
instanceof
ArchiveFileSet
afs
ArchiveFileSet
rc
if
afs
afs
size
afs
getFullpath
this
getProject
length
throw
new
BuildException
TarFileSet
tfs
asTarFileSet
afs
if
isFileFileSet
rc
FileSet
fs
FileSet
rc
String
files
getFileNames
fs
for
int
i
i
files
length
i
File
f
new
File
fs
getDir
getProject
files
i
String
name
files
i
replace
File
separatorChar
tarFile
f
tOut
name
tfs
else
if
rc
isFilesystemOnly
Iterator
iter
rc
iterator
while
iter
hasNext
FileResource
r
FileResource
iter
next
File
f
r
getFile
if
f
f
new
File
r
getBaseDir
r
getName
tarFile
f
tOut
f
getName
tfs
else
Iterator
iter
rc
iterator
while
iter
hasNext
Resource
r
Resource
iter
next
tarResource
r
tOut
r
getName
tfs
protected
static
final
boolean
isFileFileSet
ResourceCollection
rc
return
rc
instanceof
FileSet
rc
isFilesystemOnly
protected
static
final
String
getFileNames
FileSet
fs
DirectoryScanner
ds
fs
getDirectoryScanner
fs
getProject
String
directories
ds
getIncludedDirectories
String
filesPerSe
ds
getIncludedFiles
String
files
new
String
directories
length
filesPerSe
length
System
arraycopy
directories
files
directories
length
System
arraycopy
filesPerSe
files
directories
length
filesPerSe
length
return
files
protected
TarFileSet
asTarFileSet
ArchiveFileSet
archiveFileSet
TarFileSet
tfs
if
archiveFileSet
archiveFileSet
instanceof
TarFileSet
tfs
TarFileSet
archiveFileSet
else
tfs
new
TarFileSet
tfs
setProject
getProject
if
archiveFileSet
tfs
setPrefix
archiveFileSet
getPrefix
getProject
tfs
setFullpath
archiveFileSet
getFullpath
getProject
if
archiveFileSet
hasFileModeBeenSet
tfs
integerSetFileMode
archiveFileSet
getFileMode
getProject
if
archiveFileSet
hasDirModeBeenSet
tfs
integerSetDirMode
archiveFileSet
getDirMode
getProject
if
archiveFileSet
instanceof
org
apache
tools
ant
types
TarFileSet
org
apache
tools
ant
types
TarFileSet
t
org
apache
tools
ant
types
TarFileSet
archiveFileSet
if
t
hasUserNameBeenSet
tfs
setUserName
t
getUserName
if
t
hasGroupBeenSet
tfs
setGroup
t
getGroup
if
t
hasUserIdBeenSet
tfs
setUid
t
getUid
if
t
hasGroupIdBeenSet
tfs
setGid
t
getGid
return
tfs
public
static
class
TarFileSet
extends
org
apache
tools
ant
types
TarFileSet
private
String
files
private
boolean
preserveLeadingSlashes
public
TarFileSet
FileSet
fileset
super
fileset
public
TarFileSet
super
public
String
getFiles
Project
p
if
files
files
getFileNames
this
return
files
public
void
setMode
String
octalString
setFileMode
octalString
public
int
getMode
return
getFileMode
this
getProject
public
void
setPreserveLeadingSlashes
boolean
b
this
preserveLeadingSlashes
b
public
boolean
getPreserveLeadingSlashes
return
preserveLeadingSlashes
public
static
class
TarLongFileMode
extends
EnumeratedAttribute
public
static
final
String
WARN
FAIL
TRUNCATE
GNU
OMIT
private
final
String
validModes
WARN
FAIL
TRUNCATE
GNU
OMIT
public
TarLongFileMode
super
setValue
WARN
public
String
getValues
return
validModes
public
boolean
isTruncateMode
return
TRUNCATE
equalsIgnoreCase
getValue
public
boolean
isWarnMode
return
WARN
equalsIgnoreCase
getValue
public
boolean
isGnuMode
return
GNU
equalsIgnoreCase
getValue
public
boolean
isFailMode
return
FAIL
equalsIgnoreCase
getValue
public
boolean
isOmitMode
return
OMIT
equalsIgnoreCase
getValue
public
static
final
class
TarCompressionMethod
extends
EnumeratedAttribute
private
static
final
String
NONE
private
static
final
String
GZIP
private
static
final
String
BZIP2
public
TarCompressionMethod
super
setValue
NONE
public
String
getValues
return
new
String
NONE
GZIP
BZIP2
private
OutputStream
compress
final
OutputStream
ostream
throws
IOException
final
String
v
getValue
if
GZIP
equals
v
return
new
GZIPOutputStream
ostream
else
if
BZIP2
equals
v
ostream
write
ostream
write
return
new
CBZip2OutputStream
ostream
return
ostream
