package
org
apache
tools
bzip2
import
java
io
OutputStream
import
java
io
IOException
public
class
CBZip2OutputStream
extends
OutputStream
implements
BZip2Constants
public
static
final
int
MIN_BLOCKSIZE
public
static
final
int
MAX_BLOCKSIZE
protected
static
final
int
SETMASK
protected
static
final
int
CLEARMASK
SETMASK
protected
static
final
int
GREATER_ICOST
protected
static
final
int
LESSER_ICOST
protected
static
final
int
SMALL_THRESH
protected
static
final
int
DEPTH_THRESH
protected
static
final
int
WORK_FACTOR
protected
static
final
int
QSORT_STACK_SIZE
private
static
final
int
INCS
protected
static
void
hbMakeCodeLengths
char
len
int
freq
int
alphaSize
int
maxLen
final
int
heap
new
int
MAX_ALPHA_SIZE
final
int
weight
new
int
MAX_ALPHA_SIZE
final
int
parent
new
int
MAX_ALPHA_SIZE
for
int
i
alphaSize
i
weight
i
freq
i
freq
i
for
boolean
tooLong
tooLong
tooLong
int
nNodes
alphaSize
int
nHeap
heap
weight
parent
for
int
i
i
alphaSize
i
parent
i
nHeap
heap
nHeap
i
int
zz
nHeap
int
tmp
heap
zz
while
weight
tmp
weight
heap
zz
heap
zz
heap
zz
zz
heap
zz
tmp
while
nHeap
int
n1
heap
heap
heap
nHeap
nHeap
int
yy
int
zz
int
tmp
heap
while
yy
zz
if
yy
nHeap
break
if
yy
nHeap
weight
heap
yy
weight
heap
yy
yy
if
weight
tmp
weight
heap
yy
break
heap
zz
heap
yy
zz
yy
heap
zz
tmp
int
n2
heap
heap
heap
nHeap
nHeap
yy
zz
tmp
heap
while
yy
zz
if
yy
nHeap
break
if
yy
nHeap
weight
heap
yy
weight
heap
yy
yy
if
weight
tmp
weight
heap
yy
break
heap
zz
heap
yy
zz
yy
heap
zz
tmp
nNodes
parent
n1
parent
n2
nNodes
final
int
weight_n1
weight
n1
final
int
weight_n2
weight
n2
weight
nNodes
weight_n1
weight_n2
weight_n1
weight_n2
weight_n1
weight_n2
parent
nNodes
nHeap
heap
nHeap
nNodes
tmp
zz
nHeap
tmp
heap
zz
final
int
weight_tmp
weight
tmp
while
weight_tmp
weight
heap
zz
heap
zz
heap
zz
zz
heap
zz
tmp
for
int
i
i
alphaSize
i
int
j
int
k
i
for
int
parent_k
parent_k
parent
k
k
parent_k
j
len
i
char
j
if
j
maxLen
tooLong
if
tooLong
for
int
i
i
alphaSize
i
int
j
weight
i
j
j
weight
i
j
private
static
void
hbMakeCodeLengths
final
byte
len
final
int
freq
final
Data
dat
final
int
alphaSize
final
int
maxLen
final
int
heap
dat
heap
final
int
weight
dat
weight
final
int
parent
dat
parent
for
int
i
alphaSize
i
weight
i
freq
i
freq
i
for
boolean
tooLong
tooLong
tooLong
int
nNodes
alphaSize
int
nHeap
heap
weight
parent
for
int
i
i
alphaSize
i
parent
i
nHeap
heap
nHeap
i
int
zz
nHeap
int
tmp
heap
zz
while
weight
tmp
weight
heap
zz
heap
zz
heap
zz
zz
heap
zz
tmp
while
nHeap
int
n1
heap
heap
heap
nHeap
nHeap
int
yy
int
zz
int
tmp
heap
while
yy
zz
if
yy
nHeap
break
if
yy
nHeap
weight
heap
yy
weight
heap
yy
yy
if
weight
tmp
weight
heap
yy
break
heap
zz
heap
yy
zz
yy
heap
zz
tmp
int
n2
heap
heap
heap
nHeap
nHeap
yy
zz
tmp
heap
while
yy
zz
if
yy
nHeap
break
if
yy
nHeap
weight
heap
yy
weight
heap
yy
yy
if
weight
tmp
weight
heap
yy
break
heap
zz
heap
yy
zz
yy
heap
zz
tmp
nNodes
parent
n1
parent
n2
nNodes
final
int
weight_n1
weight
n1
final
int
weight_n2
weight
n2
weight
nNodes
weight_n1
weight_n2
weight_n1
weight_n2
weight_n1
weight_n2
parent
nNodes
nHeap
heap
nHeap
nNodes
tmp
zz
nHeap
tmp
heap
zz
final
int
weight_tmp
weight
tmp
while
weight_tmp
weight
heap
zz
heap
zz
heap
zz
zz
heap
zz
tmp
for
int
i
i
alphaSize
i
int
j
int
k
i
for
int
parent_k
parent_k
parent
k
k
parent_k
j
len
i
byte
j
if
j
maxLen
tooLong
if
tooLong
for
int
i
i
alphaSize
i
int
j
weight
i
j
j
weight
i
j
private
int
last
private
int
origPtr
private
final
int
blockSize100k
private
boolean
blockRandomised
private
int
bsBuff
private
int
bsLive
private
final
CRC
crc
new
CRC
private
int
nInUse
private
int
nMTF
private
int
workDone
private
int
workLimit
private
boolean
firstAttempt
private
int
currentChar
private
int
runLength
private
int
blockCRC
private
int
combinedCRC
private
int
allowableBlockSize
private
CBZip2OutputStream
Data
data
private
OutputStream
out
public
static
int
chooseBlockSize
long
inputLength
return
inputLength
int
Math
min
inputLength
MAX_BLOCKSIZE
public
CBZip2OutputStream
final
OutputStream
out
throws
IOException
this
out
MAX_BLOCKSIZE
public
CBZip2OutputStream
final
OutputStream
out
final
int
blockSize
throws
IOException
super
if
blockSize
throw
new
IllegalArgumentException
blockSize
if
blockSize
throw
new
IllegalArgumentException
blockSize
this
blockSize100k
blockSize
this
out
out
init
public
void
write
final
int
b
throws
IOException
if
this
out
write0
b
else
throw
new
IOException
private
void
writeRun
throws
IOException
final
int
lastShadow
this
last
if
lastShadow
this
allowableBlockSize
final
int
currentCharShadow
this
currentChar
final
Data
dataShadow
this
data
dataShadow
inUse
currentCharShadow
final
byte
ch
byte
currentCharShadow
int
runLengthShadow
this
runLength
this
crc
updateCRC
currentCharShadow
runLengthShadow
switch
runLengthShadow
case
dataShadow
block
lastShadow
ch
this
last
lastShadow
break
case
dataShadow
block
lastShadow
ch
dataShadow
block
lastShadow
ch
this
last
lastShadow
break
case
final
byte
block
dataShadow
block
block
lastShadow
ch
block
lastShadow
ch
block
lastShadow
ch
this
last
lastShadow
break
default
runLengthShadow
dataShadow
inUse
runLengthShadow
final
byte
block
dataShadow
block
block
lastShadow
ch
block
lastShadow
ch
block
lastShadow
ch
block
lastShadow
ch
block
lastShadow
byte
runLengthShadow
this
last
lastShadow
break
else
endBlock
initBlock
writeRun
protected
void
finalize
throws
Throwable
close
super
finalize
public
void
close
throws
IOException
OutputStream
outShadow
this
out
if
outShadow
try
if
this
runLength
writeRun
this
currentChar
endBlock
endCompression
outShadow
close
finally
this
out
this
data
public
void
flush
throws
IOException
OutputStream
outShadow
this
out
if
outShadow
outShadow
flush
private
void
init
throws
IOException
this
data
new
Data
this
blockSize100k
bsPutUByte
bsPutUByte
this
blockSize100k
this
combinedCRC
initBlock
private
void
initBlock
this
crc
initialiseCRC
this
last
boolean
inUse
this
data
inUse
for
int
i
i
inUse
i
this
allowableBlockSize
this
blockSize100k
BZip2Constants
baseBlockSize
private
void
endBlock
throws
IOException
this
blockCRC
this
crc
getFinalCRC
this
combinedCRC
this
combinedCRC
this
combinedCRC
this
combinedCRC
this
blockCRC
if
this
last
return
blockSort
bsPutUByte
bsPutUByte
bsPutUByte
bsPutUByte
bsPutUByte
bsPutUByte
bsPutInt
this
blockCRC
if
this
blockRandomised
bsW
else
bsW
moveToFrontCodeAndSend
private
void
endCompression
throws
IOException
bsPutUByte
bsPutUByte
bsPutUByte
bsPutUByte
bsPutUByte
bsPutUByte
bsPutInt
this
combinedCRC
bsFinishedWithStream
public
final
int
getBlockSize
return
this
blockSize100k
public
void
write
final
byte
buf
int
offs
final
int
len
throws
IOException
if
offs
throw
new
IndexOutOfBoundsException
offs
if
len
throw
new
IndexOutOfBoundsException
len
if
offs
len
buf
length
throw
new
IndexOutOfBoundsException
offs
len
buf
length
if
this
out
throw
new
IOException
for
int
hi
offs
len
offs
hi
write0
buf
offs
private
void
write0
int
b
throws
IOException
if
this
currentChar
b
if
this
currentChar
b
if
this
runLength
writeRun
this
currentChar
this
runLength
else
writeRun
this
runLength
this
currentChar
b
else
this
currentChar
b
this
runLength
private
static
void
hbAssignCodes
final
int
code
final
byte
length
final
int
minLen
final
int
maxLen
final
int
alphaSize
int
vec
for
int
n
minLen
n
maxLen
n
for
int
i
i
alphaSize
i
if
length
i
n
code
i
vec
vec
vec
private
void
bsFinishedWithStream
throws
IOException
while
this
bsLive
int
ch
this
bsBuff
this
out
write
ch
this
bsBuff
this
bsLive
private
void
bsW
final
int
n
final
int
v
throws
IOException
final
OutputStream
outShadow
this
out
int
bsLiveShadow
this
bsLive
int
bsBuffShadow
this
bsBuff
while
bsLiveShadow
outShadow
write
bsBuffShadow
bsBuffShadow
bsLiveShadow
this
bsBuff
bsBuffShadow
v
bsLiveShadow
n
this
bsLive
bsLiveShadow
n
private
void
bsPutUByte
final
int
c
throws
IOException
bsW
c
private
void
bsPutInt
final
int
u
throws
IOException
bsW
u
bsW
u
bsW
u
bsW
u
private
void
sendMTFValues
throws
IOException
final
byte
len
this
data
sendMTFValues_len
final
int
alphaSize
this
nInUse
for
int
t
N_GROUPS
t
byte
len_t
len
t
for
int
v
alphaSize
v
len_t
v
GREATER_ICOST
final
int
nGroups
this
nMTF
this
nMTF
this
nMTF
this
nMTF
sendMTFValues0
nGroups
alphaSize
final
int
nSelectors
sendMTFValues1
nGroups
alphaSize
sendMTFValues2
nGroups
nSelectors
sendMTFValues3
nGroups
alphaSize
sendMTFValues4
sendMTFValues5
nGroups
nSelectors
sendMTFValues6
nGroups
alphaSize
sendMTFValues7
nSelectors
private
void
sendMTFValues0
final
int
nGroups
final
int
alphaSize
final
byte
len
this
data
sendMTFValues_len
final
int
mtfFreq
this
data
mtfFreq
int
remF
this
nMTF
int
gs
for
int
nPart
nGroups
nPart
nPart
final
int
tFreq
remF
nPart
int
ge
gs
int
aFreq
for
final
int
a
alphaSize
aFreq
tFreq
ge
a
aFreq
mtfFreq
ge
if
ge
gs
nPart
nGroups
nPart
nGroups
nPart
aFreq
mtfFreq
ge
final
byte
len_np
len
nPart
for
int
v
alphaSize
v
if
v
gs
v
ge
len_np
v
LESSER_ICOST
else
len_np
v
GREATER_ICOST
gs
ge
remF
aFreq
private
int
sendMTFValues1
final
int
nGroups
final
int
alphaSize
final
Data
dataShadow
this
data
final
int
rfreq
dataShadow
sendMTFValues_rfreq
final
int
fave
dataShadow
sendMTFValues_fave
final
short
cost
dataShadow
sendMTFValues_cost
final
char
sfmap
dataShadow
sfmap
final
byte
selector
dataShadow
selector
final
byte
len
dataShadow
sendMTFValues_len
final
byte
len_0
len
final
byte
len_1
len
final
byte
len_2
len
final
byte
len_3
len
final
byte
len_4
len
final
byte
len_5
len
final
int
nMTFShadow
this
nMTF
int
nSelectors
for
int
iter
iter
N_ITERS
iter
for
int
t
nGroups
t
fave
t
int
rfreqt
rfreq
t
for
int
i
alphaSize
i
rfreqt
i
nSelectors
for
int
gs
gs
this
nMTF
final
int
ge
Math
min
gs
G_SIZE
nMTFShadow
if
nGroups
N_GROUPS
short
cost0
short
cost1
short
cost2
short
cost3
short
cost4
short
cost5
for
int
i
gs
i
ge
i
final
int
icv
sfmap
i
cost0
len_0
icv
cost1
len_1
icv
cost2
len_2
icv
cost3
len_3
icv
cost4
len_4
icv
cost5
len_5
icv
cost
cost0
cost
cost1
cost
cost2
cost
cost3
cost
cost4
cost
cost5
else
for
int
t
nGroups
t
cost
t
for
int
i
gs
i
ge
i
final
int
icv
sfmap
i
for
int
t
nGroups
t
cost
t
len
t
icv
int
bt
for
int
t
nGroups
bc
t
final
int
cost_t
cost
t
if
cost_t
bc
bc
cost_t
bt
t
fave
bt
selector
nSelectors
byte
bt
nSelectors
final
int
rfreq_bt
rfreq
bt
for
int
i
gs
i
ge
i
rfreq_bt
sfmap
i
gs
ge
for
int
t
t
nGroups
t
hbMakeCodeLengths
len
t
rfreq
t
this
data
alphaSize
return
nSelectors
private
void
sendMTFValues2
final
int
nGroups
final
int
nSelectors
final
Data
dataShadow
this
data
byte
pos
dataShadow
sendMTFValues2_pos
for
int
i
nGroups
i
pos
i
byte
i
for
int
i
i
nSelectors
i
final
byte
ll_i
dataShadow
selector
i
byte
tmp
pos
int
j
while
ll_i
tmp
j
byte
tmp2
tmp
tmp
pos
j
pos
j
tmp2
pos
tmp
dataShadow
selectorMtf
i
byte
j
private
void
sendMTFValues3
final
int
nGroups
final
int
alphaSize
int
code
this
data
sendMTFValues_code
byte
len
this
data
sendMTFValues_len
for
int
t
t
nGroups
t
int
minLen
int
maxLen
final
byte
len_t
len
t
for
int
i
alphaSize
i
final
int
l
len_t
i
if
l
maxLen
maxLen
l
if
l
minLen
minLen
l
hbAssignCodes
code
t
len
t
minLen
maxLen
alphaSize
private
void
sendMTFValues4
throws
IOException
final
boolean
inUse
this
data
inUse
final
boolean
inUse16
this
data
sentMTFValues4_inUse16
for
int
i
i
inUse16
i
final
int
i16
i
for
int
j
j
if
inUse
i16
j
inUse16
i
for
int
i
i
i
bsW
inUse16
i
final
OutputStream
outShadow
this
out
int
bsLiveShadow
this
bsLive
int
bsBuffShadow
this
bsBuff
for
int
i
i
i
if
inUse16
i
final
int
i16
i
for
int
j
j
j
while
bsLiveShadow
outShadow
write
bsBuffShadow
bsBuffShadow
bsLiveShadow
if
inUse
i16
j
bsBuffShadow
bsLiveShadow
bsLiveShadow
this
bsBuff
bsBuffShadow
this
bsLive
bsLiveShadow
private
void
sendMTFValues5
final
int
nGroups
final
int
nSelectors
throws
IOException
bsW
nGroups
bsW
nSelectors
final
OutputStream
outShadow
this
out
final
byte
selectorMtf
this
data
selectorMtf
int
bsLiveShadow
this
bsLive
int
bsBuffShadow
this
bsBuff
for
int
i
i
nSelectors
i
for
int
j
hj
selectorMtf
i
j
hj
j
while
bsLiveShadow
outShadow
write
bsBuffShadow
bsBuffShadow
bsLiveShadow
bsBuffShadow
bsLiveShadow
bsLiveShadow
while
bsLiveShadow
outShadow
write
bsBuffShadow
bsBuffShadow
bsLiveShadow
bsLiveShadow
this
bsBuff
bsBuffShadow
this
bsLive
bsLiveShadow
private
void
sendMTFValues6
final
int
nGroups
final
int
alphaSize
throws
IOException
final
byte
len
this
data
sendMTFValues_len
final
OutputStream
outShadow
this
out
int
bsLiveShadow
this
bsLive
int
bsBuffShadow
this
bsBuff
for
int
t
t
nGroups
t
byte
len_t
len
t
int
curr
len_t
while
bsLiveShadow
outShadow
write
bsBuffShadow
bsBuffShadow
bsLiveShadow
bsBuffShadow
curr
bsLiveShadow
bsLiveShadow
for
int
i
i
alphaSize
i
int
lti
len_t
i
while
curr
lti
while
bsLiveShadow
outShadow
write
bsBuffShadow
bsBuffShadow
bsLiveShadow
bsBuffShadow
bsLiveShadow
bsLiveShadow
curr
while
curr
lti
while
bsLiveShadow
outShadow
write
bsBuffShadow
bsBuffShadow
bsLiveShadow
bsBuffShadow
bsLiveShadow
bsLiveShadow
curr
while
bsLiveShadow
outShadow
write
bsBuffShadow
bsBuffShadow
bsLiveShadow
bsLiveShadow
this
bsBuff
bsBuffShadow
this
bsLive
bsLiveShadow
private
void
sendMTFValues7
final
int
nSelectors
throws
IOException
final
Data
dataShadow
this
data
final
byte
len
dataShadow
sendMTFValues_len
final
int
code
dataShadow
sendMTFValues_code
final
OutputStream
outShadow
this
out
final
byte
selector
dataShadow
selector
final
char
sfmap
dataShadow
sfmap
final
int
nMTFShadow
this
nMTF
int
selCtr
int
bsLiveShadow
this
bsLive
int
bsBuffShadow
this
bsBuff
for
int
gs
gs
nMTFShadow
final
int
ge
Math
min
gs
G_SIZE
nMTFShadow
final
int
selector_selCtr
selector
selCtr
final
int
code_selCtr
code
selector_selCtr
final
byte
len_selCtr
len
selector_selCtr
while
gs
ge
final
int
sfmap_i
sfmap
gs
while
bsLiveShadow
outShadow
write
bsBuffShadow
bsBuffShadow
bsLiveShadow
final
int
n
len_selCtr
sfmap_i
bsBuffShadow
code_selCtr
sfmap_i
bsLiveShadow
n
bsLiveShadow
n
gs
gs
ge
selCtr
this
bsBuff
bsBuffShadow
this
bsLive
bsLiveShadow
private
void
moveToFrontCodeAndSend
throws
IOException
bsW
this
origPtr
generateMTFValues
sendMTFValues
private
boolean
mainSimpleSort
final
Data
dataShadow
final
int
lo
final
int
hi
final
int
d
final
int
bigN
hi
lo
if
bigN
return
this
firstAttempt
this
workDone
this
workLimit
int
hp
while
INCS
hp
bigN
hp
final
int
fmap
dataShadow
fmap
final
char
quadrant
dataShadow
quadrant
final
byte
block
dataShadow
block
final
int
lastShadow
this
last
final
int
lastPlus1
lastShadow
final
boolean
firstAttemptShadow
this
firstAttempt
final
int
workLimitShadow
this
workLimit
int
workDoneShadow
this
workDone
HP
while
hp
final
int
h
INCS
hp
final
int
mj
lo
h
for
int
i
lo
h
i
hi
for
int
k
i
hi
k
i
final
int
v
fmap
i
final
int
vd
v
d
int
j
i
boolean
onceRunned
int
a
HAMMER
while
if
onceRunned
fmap
j
a
if
j
h
mj
break
HAMMER
else
onceRunned
a
fmap
j
h
int
i1
a
d
int
i2
vd
if
block
i1
block
i2
if
block
i1
block
i2
if
block
i1
block
i2
if
block
i1
block
i2
if
block
i1
block
i2
if
block
i1
block
i2
int
x
lastShadow
X
while
x
x
if
block
i1
block
i2
if
quadrant
i1
quadrant
i2
if
block
i1
block
i2
if
quadrant
i1
quadrant
i2
if
block
i1
block
i2
if
quadrant
i1
quadrant
i2
if
block
i1
block
i2
if
quadrant
i1
quadrant
i2
if
i1
lastPlus1
i1
lastPlus1
if
i2
lastPlus1
i2
lastPlus1
workDoneShadow
continue
X
else
if
quadrant
i1
quadrant
i2
continue
HAMMER
else
break
HAMMER
else
if
block
i1
block
i2
continue
HAMMER
else
break
HAMMER
else
if
quadrant
i1
quadrant
i2
continue
HAMMER
else
break
HAMMER
else
if
block
i1
block
i2
continue
HAMMER
else
break
HAMMER
else
if
quadrant
i1
quadrant
i2
continue
HAMMER
else
break
HAMMER
else
if
block
i1
block
i2
continue
HAMMER
else
break
HAMMER
else
if
quadrant
i1
quadrant
i2
continue
HAMMER
else
break
HAMMER
else
if
block
i1
block
i2
continue
HAMMER
else
break
HAMMER
break
HAMMER
else
if
block
i1
block
i2
continue
HAMMER
else
break
HAMMER
else
if
block
i1
block
i2
continue
HAMMER
else
break
HAMMER
else
if
block
i1
block
i2
continue
HAMMER
else
break
HAMMER
else
if
block
i1
block
i2
continue
HAMMER
else
break
HAMMER
else
if
block
i1
block
i2
continue
HAMMER
else
break
HAMMER
else
if
block
i1
block
i2
continue
HAMMER
else
break
HAMMER
fmap
j
v
if
firstAttemptShadow
i
hi
workDoneShadow
workLimitShadow
break
HP
this
workDone
workDoneShadow
return
firstAttemptShadow
workDoneShadow
workLimitShadow
private
static
void
vswap
int
fmap
int
p1
int
p2
int
n
n
p1
while
p1
n
int
t
fmap
p1
fmap
p1
fmap
p2
fmap
p2
t
private
static
byte
med3
byte
a
byte
b
byte
c
return
a
b
b
c
b
a
c
c
a
b
c
b
a
c
c
a
private
void
blockSort
this
workLimit
WORK_FACTOR
this
last
this
workDone
this
blockRandomised
this
firstAttempt
mainSort
if
this
firstAttempt
this
workDone
this
workLimit
randomiseBlock
this
workLimit
this
workDone
this
firstAttempt
mainSort
int
fmap
this
data
fmap
this
origPtr
for
int
i
lastShadow
this
last
i
lastShadow
i
if
fmap
i
this
origPtr
i
break
private
void
mainQSort3
final
Data
dataShadow
final
int
loSt
final
int
hiSt
final
int
dSt
final
int
stack_ll
dataShadow
stack_ll
final
int
stack_hh
dataShadow
stack_hh
final
int
stack_dd
dataShadow
stack_dd
final
int
fmap
dataShadow
fmap
final
byte
block
dataShadow
block
stack_ll
loSt
stack_hh
hiSt
stack_dd
dSt
for
int
sp
sp
final
int
lo
stack_ll
sp
final
int
hi
stack_hh
sp
final
int
d
stack_dd
sp
if
hi
lo
SMALL_THRESH
d
DEPTH_THRESH
if
mainSimpleSort
dataShadow
lo
hi
d
return
else
final
int
d1
d
final
int
med
med3
block
fmap
lo
d1
block
fmap
hi
d1
block
fmap
lo
hi
d1
int
unLo
lo
int
unHi
hi
int
ltLo
lo
int
gtHi
hi
while
while
unLo
unHi
final
int
n
int
block
fmap
unLo
d1
med
if
n
final
int
temp
fmap
unLo
fmap
unLo
fmap
ltLo
fmap
ltLo
temp
else
if
n
unLo
else
break
while
unLo
unHi
final
int
n
int
block
fmap
unHi
d1
med
if
n
final
int
temp
fmap
unHi
fmap
unHi
fmap
gtHi
fmap
gtHi
temp
else
if
n
unHi
else
break
if
unLo
unHi
final
int
temp
fmap
unLo
fmap
unLo
fmap
unHi
fmap
unHi
temp
else
break
if
gtHi
ltLo
stack_ll
sp
lo
stack_hh
sp
hi
stack_dd
sp
d1
sp
else
int
n
ltLo
lo
unLo
ltLo
ltLo
lo
unLo
ltLo
vswap
fmap
lo
unLo
n
n
int
m
hi
gtHi
gtHi
unHi
hi
gtHi
gtHi
unHi
vswap
fmap
unLo
hi
m
m
n
lo
unLo
ltLo
m
hi
gtHi
unHi
stack_ll
sp
lo
stack_hh
sp
n
stack_dd
sp
d
sp
stack_ll
sp
n
stack_hh
sp
m
stack_dd
sp
d1
sp
stack_ll
sp
m
stack_hh
sp
hi
stack_dd
sp
d
sp
private
void
mainSort
final
Data
dataShadow
this
data
final
int
runningOrder
dataShadow
mainSort_runningOrder
final
int
copy
dataShadow
mainSort_copy
final
boolean
bigDone
dataShadow
mainSort_bigDone
final
int
ftab
dataShadow
ftab
final
byte
block
dataShadow
block
final
int
fmap
dataShadow
fmap
final
char
quadrant
dataShadow
quadrant
final
int
lastShadow
this
last
final
int
workLimitShadow
this
workLimit
final
boolean
firstAttemptShadow
this
firstAttempt
for
int
i
i
ftab
i
for
int
i
i
NUM_OVERSHOOT_BYTES
i
block
lastShadow
i
block
i
lastShadow
for
int
i
lastShadow
NUM_OVERSHOOT_BYTES
i
quadrant
i
block
block
lastShadow
int
c1
block
for
int
i
i
lastShadow
i
final
int
c2
block
i
ftab
c1
c2
c1
c2
for
int
i
i
i
ftab
i
ftab
i
c1
block
for
int
i
i
lastShadow
i
final
int
c2
block
i
fmap
ftab
c1
c2
i
c1
c2
fmap
ftab
block
lastShadow
block
lastShadow
for
int
i
i
bigDone
i
runningOrder
i
i
for
int
h
h
h
for
int
i
h
i
i
final
int
vv
runningOrder
i
final
int
a
ftab
vv
ftab
vv
final
int
b
h
int
j
i
for
int
ro
runningOrder
j
h
ftab
ro
ftab
ro
a
ro
runningOrder
j
h
runningOrder
j
ro
j
h
if
j
b
break
runningOrder
j
vv
for
int
i
i
i
final
int
ss
runningOrder
i
for
int
j
j
j
final
int
sb
ss
j
final
int
ftab_sb
ftab
sb
if
ftab_sb
SETMASK
SETMASK
final
int
lo
ftab_sb
CLEARMASK
final
int
hi
ftab
sb
CLEARMASK
if
hi
lo
mainQSort3
dataShadow
lo
hi
if
firstAttemptShadow
this
workDone
workLimitShadow
return
ftab
sb
ftab_sb
SETMASK
for
int
j
j
j
copy
j
ftab
j
ss
CLEARMASK
for
int
j
ftab
ss
CLEARMASK
hj
ftab
ss
CLEARMASK
j
hj
j
final
int
fmap_j
fmap
j
c1
block
fmap_j
if
bigDone
c1
fmap
copy
c1
fmap_j
lastShadow
fmap_j
copy
c1
for
int
j
j
ftab
j
ss
SETMASK
bigDone
ss
if
i
final
int
bbStart
ftab
ss
CLEARMASK
final
int
bbSize
ftab
ss
CLEARMASK
bbStart
int
shifts
while
bbSize
shifts
shifts
for
int
j
j
bbSize
j
final
int
a2update
fmap
bbStart
j
final
char
qVal
char
j
shifts
quadrant
a2update
qVal
if
a2update
NUM_OVERSHOOT_BYTES
quadrant
a2update
lastShadow
qVal
private
void
randomiseBlock
final
boolean
inUse
this
data
inUse
final
byte
block
this
data
block
final
int
lastShadow
this
last
for
int
i
i
inUse
i
int
rNToGo
int
rTPos
for
int
i
j
i
lastShadow
i
j
j
if
rNToGo
rNToGo
char
BZip2Constants
rNums
rTPos
if
rTPos
rTPos
rNToGo
block
j
rNToGo
inUse
block
j
this
blockRandomised
private
void
generateMTFValues
final
int
lastShadow
this
last
final
Data
dataShadow
this
data
final
boolean
inUse
dataShadow
inUse
final
byte
block
dataShadow
block
final
int
fmap
dataShadow
fmap
final
char
sfmap
dataShadow
sfmap
final
int
mtfFreq
dataShadow
mtfFreq
final
byte
unseqToSeq
dataShadow
unseqToSeq
final
byte
yy
dataShadow
generateMTFValues_yy
int
nInUseShadow
for
int
i
i
i
if
inUse
i
unseqToSeq
i
byte
nInUseShadow
nInUseShadow
this
nInUse
nInUseShadow
final
int
eob
nInUseShadow
for
int
i
eob
i
i
mtfFreq
i
for
int
i
nInUseShadow
i
yy
i
byte
i
int
wr
int
zPend
for
int
i
i
lastShadow
i
final
byte
ll_i
unseqToSeq
block
fmap
i
byte
tmp
yy
int
j
while
ll_i
tmp
j
byte
tmp2
tmp
tmp
yy
j
yy
j
tmp2
yy
tmp
if
j
zPend
else
if
zPend
zPend
while
if
zPend
sfmap
wr
RUNA
wr
mtfFreq
RUNA
else
sfmap
wr
RUNB
wr
mtfFreq
RUNB
if
zPend
zPend
zPend
else
break
zPend
sfmap
wr
char
j
wr
mtfFreq
j
if
zPend
zPend
while
if
zPend
sfmap
wr
RUNA
wr
mtfFreq
RUNA
else
sfmap
wr
RUNB
wr
mtfFreq
RUNB
if
zPend
zPend
zPend
else
break
sfmap
wr
char
eob
mtfFreq
eob
this
nMTF
wr
private
static
final
class
Data
extends
Object
final
boolean
inUse
new
boolean
final
byte
unseqToSeq
new
byte
final
int
mtfFreq
new
int
MAX_ALPHA_SIZE
final
byte
selector
new
byte
MAX_SELECTORS
final
byte
selectorMtf
new
byte
MAX_SELECTORS
final
byte
generateMTFValues_yy
new
byte
final
byte
sendMTFValues_len
new
byte
N_GROUPS
MAX_ALPHA_SIZE
final
int
sendMTFValues_rfreq
new
int
N_GROUPS
MAX_ALPHA_SIZE
final
int
sendMTFValues_fave
new
int
N_GROUPS
final
short
sendMTFValues_cost
new
short
N_GROUPS
final
int
sendMTFValues_code
new
int
N_GROUPS
MAX_ALPHA_SIZE
final
byte
sendMTFValues2_pos
new
byte
N_GROUPS
final
boolean
sentMTFValues4_inUse16
new
boolean
final
int
stack_ll
new
int
QSORT_STACK_SIZE
final
int
stack_hh
new
int
QSORT_STACK_SIZE
final
int
stack_dd
new
int
QSORT_STACK_SIZE
final
int
mainSort_runningOrder
new
int
final
int
mainSort_copy
new
int
final
boolean
mainSort_bigDone
new
boolean
final
int
heap
new
int
MAX_ALPHA_SIZE
final
int
weight
new
int
MAX_ALPHA_SIZE
final
int
parent
new
int
MAX_ALPHA_SIZE
final
int
ftab
new
int
final
byte
block
final
int
fmap
final
char
sfmap
final
char
quadrant
Data
int
blockSize100k
super
final
int
n
blockSize100k
BZip2Constants
baseBlockSize
this
block
new
byte
n
NUM_OVERSHOOT_BYTES
this
fmap
new
int
n
this
sfmap
new
char
n
this
quadrant
this
sfmap
