package
org
apache
tools
ant
types
import
java
io
File
import
java
util
Collections
import
java
util
Iterator
import
java
util
Locale
import
java
util
Stack
import
java
util
Vector
import
org
apache
tools
ant
BuildException
import
org
apache
tools
ant
PathTokenizer
import
org
apache
tools
ant
Project
import
org
apache
tools
ant
types
resources
Union
import
org
apache
tools
ant
types
resources
FileResourceIterator
import
org
apache
tools
ant
util
FileUtils
import
org
apache
tools
ant
util
JavaEnvUtils
public
class
Path
extends
DataType
implements
Cloneable
ResourceCollection
public
static
Path
systemClasspath
new
Path
System
getProperty
public
static
Path
systemBootClasspath
new
Path
System
getProperty
private
static
final
Iterator
EMPTY_ITERATOR
Collections
EMPTY_SET
iterator
public
class
PathElement
implements
ResourceCollection
private
String
parts
public
void
setLocation
File
loc
parts
new
String
translateFile
loc
getAbsolutePath
public
void
setPath
String
path
parts
Path
translatePath
getProject
path
public
String
getParts
return
parts
public
Iterator
iterator
return
new
FileResourceIterator
parts
public
boolean
isFilesystemOnly
return
public
int
size
return
parts
parts
length
private
Union
union
public
Path
Project
p
String
path
this
p
createPathElement
setPath
path
public
Path
Project
project
setProject
project
public
void
setLocation
File
location
throws
BuildException
checkAttributesAllowed
createPathElement
setLocation
location
public
void
setPath
String
path
throws
BuildException
checkAttributesAllowed
createPathElement
setPath
path
public
void
setRefid
Reference
r
throws
BuildException
if
union
throw
tooManyAttributes
super
setRefid
r
public
PathElement
createPathElement
throws
BuildException
if
isReference
throw
noChildrenAllowed
PathElement
pe
new
PathElement
add
pe
return
pe
public
void
addFileset
FileSet
fs
throws
BuildException
if
fs
getProject
fs
setProject
getProject
add
fs
public
void
addFilelist
FileList
fl
throws
BuildException
if
fl
getProject
fl
setProject
getProject
add
fl
public
void
addDirset
DirSet
dset
throws
BuildException
if
dset
getProject
dset
setProject
getProject
add
dset
public
void
add
Path
path
throws
BuildException
if
path
this
throw
circularReference
if
path
getProject
path
setProject
getProject
add
ResourceCollection
path
public
void
add
ResourceCollection
c
checkChildrenAllowed
if
c
return
if
union
union
new
Union
union
setProject
getProject
union
setCache
union
add
c
setChecked
public
Path
createPath
throws
BuildException
Path
p
new
Path
getProject
add
p
return
p
public
void
append
Path
other
if
other
return
add
other
public
void
addExisting
Path
source
addExisting
source
public
void
addExisting
Path
source
boolean
tryUserDir
String
list
source
list
File
userDir
tryUserDir
new
File
System
getProperty
for
int
i
i
list
length
i
File
f
resolveFile
getProject
list
i
if
tryUserDir
f
exists
f
new
File
userDir
list
i
if
f
exists
setLocation
f
else
log
f
Project
MSG_VERBOSE
public
String
list
if
isReference
return
Path
getCheckedRef
list
return
assertFilesystemOnly
union
new
String
union
list
public
String
toString
return
isReference
getCheckedRef
toString
union
union
toString
public
static
String
translatePath
Project
project
String
source
final
Vector
result
new
Vector
if
source
return
new
String
PathTokenizer
tok
new
PathTokenizer
source
StringBuffer
element
new
StringBuffer
while
tok
hasMoreTokens
String
pathElement
tok
nextToken
try
element
append
resolveFile
project
pathElement
getPath
catch
BuildException
e
project
log
pathElement
Project
MSG_VERBOSE
for
int
i
i
element
length
i
translateFileSep
element
i
result
addElement
element
toString
element
new
StringBuffer
String
res
new
String
result
size
result
copyInto
res
return
res
public
static
String
translateFile
String
source
if
source
return
final
StringBuffer
result
new
StringBuffer
source
for
int
i
i
result
length
i
translateFileSep
result
i
return
result
toString
protected
static
boolean
translateFileSep
StringBuffer
buffer
int
pos
if
buffer
charAt
pos
buffer
charAt
pos
buffer
setCharAt
pos
File
separatorChar
return
return
public
synchronized
int
size
if
isReference
return
Path
getCheckedRef
size
dieOnCircularReference
return
union
assertFilesystemOnly
union
size
public
Object
clone
try
Path
result
Path
super
clone
result
union
union
union
Union
union
clone
return
result
catch
CloneNotSupportedException
e
throw
new
BuildException
e
protected
synchronized
void
dieOnCircularReference
Stack
stk
Project
p
throws
BuildException
if
isChecked
return
if
isReference
super
dieOnCircularReference
stk
p
else
if
union
stk
push
union
invokeCircularReferenceCheck
union
stk
p
stk
pop
setChecked
private
static
File
resolveFile
Project
project
String
relativeName
return
FileUtils
getFileUtils
resolveFile
project
project
getBaseDir
relativeName
public
Path
concatSystemClasspath
return
concatSystemClasspath
public
Path
concatSystemClasspath
String
defValue
return
concatSpecialPath
defValue
Path
systemClasspath
public
Path
concatSystemBootClasspath
String
defValue
return
concatSpecialPath
defValue
Path
systemBootClasspath
private
Path
concatSpecialPath
String
defValue
Path
p
Path
result
new
Path
getProject
String
order
defValue
if
getProject
String
o
getProject
getProperty
if
o
order
o
if
order
equals
result
addExisting
p
else
if
order
equals
result
addExisting
p
result
addExisting
this
else
if
order
equals
result
addExisting
this
else
if
order
equals
log
order
Project
MSG_WARN
result
addExisting
this
result
addExisting
p
return
result
public
void
addJavaRuntime
if
JavaEnvUtils
isKaffe
File
kaffeShare
new
File
System
getProperty
File
separator
File
separator
if
kaffeShare
isDirectory
FileSet
kaffeJarFiles
new
FileSet
kaffeJarFiles
setDir
kaffeShare
kaffeJarFiles
setIncludes
addFileset
kaffeJarFiles
else
if
equals
System
getProperty
addExisting
systemBootClasspath
if
System
getProperty
toLowerCase
Locale
US
indexOf
FileSet
msZipFiles
new
FileSet
msZipFiles
setDir
new
File
System
getProperty
File
separator
msZipFiles
setIncludes
addFileset
msZipFiles
else
addExisting
new
Path
System
getProperty
File
separator
File
separator
addExisting
new
Path
System
getProperty
File
separator
File
separator
File
separator
String
secJars
for
int
i
i
secJars
length
i
addExisting
new
Path
System
getProperty
File
separator
File
separator
secJars
i
addExisting
new
Path
System
getProperty
File
separator
File
separator
File
separator
secJars
i
String
ibmJars
for
int
i
i
ibmJars
length
i
addExisting
new
Path
System
getProperty
File
separator
File
separator
ibmJars
i
addExisting
new
Path
System
getProperty
File
separator
File
separator
File
separator
addExisting
new
Path
System
getProperty
File
separator
File
separator
File
separator
public
void
addExtdirs
Path
extdirs
if
extdirs
String
extProp
System
getProperty
if
extProp
extdirs
new
Path
getProject
extProp
else
return
String
dirs
extdirs
list
for
int
i
i
dirs
length
i
File
dir
resolveFile
getProject
dirs
i
if
dir
exists
dir
isDirectory
FileSet
fs
new
FileSet
fs
setDir
dir
fs
setIncludes
addFileset
fs
public
final
synchronized
Iterator
iterator
if
isReference
return
Path
getCheckedRef
iterator
dieOnCircularReference
return
union
EMPTY_ITERATOR
assertFilesystemOnly
union
iterator
public
synchronized
boolean
isFilesystemOnly
if
isReference
return
Path
getCheckedRef
isFilesystemOnly
dieOnCircularReference
assertFilesystemOnly
union
return
protected
ResourceCollection
assertFilesystemOnly
ResourceCollection
rc
if
rc
rc
isFilesystemOnly
throw
new
BuildException
getDataTypeName
return
rc
