package
org
apache
tools
ant
taskdefs
optional
ejb
import
java
io
File
import
java
io
FileInputStream
import
java
io
FileOutputStream
import
java
io
IOException
import
java
io
InputStream
import
java
util
Enumeration
import
java
util
HashSet
import
java
util
Hashtable
import
java
util
Iterator
import
java
util
Set
import
java
util
jar
JarOutputStream
import
java
util
jar
Manifest
import
java
util
zip
ZipEntry
import
javax
xml
parsers
SAXParser
import
org
apache
tools
ant
BuildException
import
org
apache
tools
ant
DirectoryScanner
import
org
apache
tools
ant
Location
import
org
apache
tools
ant
Project
import
org
apache
tools
ant
Task
import
org
apache
tools
ant
types
FileSet
import
org
apache
tools
ant
types
Path
import
org
apache
tools
ant
util
depend
DependencyAnalyzer
import
org
xml
sax
InputSource
import
org
xml
sax
SAXException
public
class
GenericDeploymentTool
implements
EJBDeploymentTool
public
static
final
int
DEFAULT_BUFFER_SIZE
public
static
final
int
JAR_COMPRESS_LEVEL
protected
static
final
String
META_DIR
protected
static
final
String
MANIFEST
META_DIR
protected
static
final
String
EJB_DD
public
static
final
String
ANALYZER_SUPER
public
static
final
String
ANALYZER_FULL
public
static
final
String
ANALYZER_NONE
public
static
final
String
DEFAULT_ANALYZER
ANALYZER_SUPER
public
static
final
String
ANALYZER_CLASS_SUPER
public
static
final
String
ANALYZER_CLASS_FULL
private
EjbJar
Config
config
private
File
destDir
private
Path
classpath
private
String
genericJarSuffix
private
Task
task
private
ClassLoader
classpathLoader
private
Set
addedfiles
private
DescriptorHandler
handler
private
DependencyAnalyzer
dependencyAnalyzer
public
GenericDeploymentTool
public
void
setDestdir
File
inDir
this
destDir
inDir
protected
File
getDestDir
return
destDir
public
void
setTask
Task
task
this
task
task
protected
Task
getTask
return
task
protected
EjbJar
Config
getConfig
return
config
protected
boolean
usingBaseJarName
return
config
baseJarName
public
void
setGenericJarSuffix
String
inString
this
genericJarSuffix
inString
public
Path
createClasspath
if
classpath
classpath
new
Path
task
getProject
return
classpath
createPath
public
void
setClasspath
Path
classpath
this
classpath
classpath
protected
Path
getCombinedClasspath
Path
combinedPath
classpath
if
config
classpath
if
combinedPath
combinedPath
config
classpath
else
combinedPath
append
config
classpath
return
combinedPath
protected
void
log
String
message
int
level
getTask
log
message
level
protected
Location
getLocation
return
getTask
getLocation
private
void
createAnalyzer
String
analyzer
config
analyzer
if
analyzer
analyzer
DEFAULT_ANALYZER
if
analyzer
equals
ANALYZER_NONE
return
String
analyzerClassName
if
analyzer
equals
ANALYZER_SUPER
analyzerClassName
ANALYZER_CLASS_SUPER
else
if
analyzer
equals
ANALYZER_FULL
analyzerClassName
ANALYZER_CLASS_FULL
else
analyzerClassName
analyzer
try
Class
analyzerClass
Class
forName
analyzerClassName
dependencyAnalyzer
DependencyAnalyzer
analyzerClass
newInstance
dependencyAnalyzer
addClassPath
new
Path
task
getProject
config
srcDir
getPath
dependencyAnalyzer
addClassPath
config
classpath
catch
NoClassDefFoundError
e
dependencyAnalyzer
task
log
analyzerClassName
e
getMessage
Project
MSG_WARN
catch
Exception
e
dependencyAnalyzer
task
log
analyzerClassName
e
getMessage
Project
MSG_WARN
public
void
configure
EjbJar
Config
config
this
config
config
createAnalyzer
classpathLoader
protected
void
addFileToJar
JarOutputStream
jStream
File
inputFile
String
logicalFilename
throws
BuildException
FileInputStream
iStream
try
if
addedfiles
contains
logicalFilename
iStream
new
FileInputStream
inputFile
ZipEntry
zipEntry
new
ZipEntry
logicalFilename
replace
jStream
putNextEntry
zipEntry
byte
byteBuffer
new
byte
DEFAULT_BUFFER_SIZE
int
count
do
jStream
write
byteBuffer
count
count
iStream
read
byteBuffer
byteBuffer
length
while
count
addedfiles
add
logicalFilename
catch
IOException
ioe
log
logicalFilename
inputFile
getPath
ioe
getClass
getName
ioe
getMessage
Project
MSG_WARN
finally
if
iStream
try
iStream
close
catch
IOException
closeException
protected
DescriptorHandler
getDescriptorHandler
File
srcDir
DescriptorHandler
h
new
DescriptorHandler
getTask
srcDir
registerKnownDTDs
h
for
Iterator
i
getConfig
dtdLocations
iterator
i
hasNext
EjbJar
DTDLocation
dtdLocation
EjbJar
DTDLocation
i
next
h
registerDTD
dtdLocation
getPublicId
dtdLocation
getLocation
return
h
protected
void
registerKnownDTDs
DescriptorHandler
handler
public
void
processDescriptor
String
descriptorFileName
SAXParser
saxParser
checkConfiguration
descriptorFileName
saxParser
try
handler
getDescriptorHandler
config
srcDir
Hashtable
ejbFiles
parseEjbFiles
descriptorFileName
saxParser
addSupportClasses
ejbFiles
String
baseName
getJarBaseName
descriptorFileName
String
ddPrefix
getVendorDDPrefix
baseName
descriptorFileName
File
manifestFile
getManifestFile
ddPrefix
if
manifestFile
ejbFiles
put
MANIFEST
manifestFile
ejbFiles
put
META_DIR
EJB_DD
new
File
config
descriptorDir
descriptorFileName
addVendorFiles
ejbFiles
ddPrefix
checkAndAddDependants
ejbFiles
if
config
flatDestDir
baseName
length
int
startName
baseName
lastIndexOf
File
separator
if
startName
startName
int
endName
baseName
length
baseName
baseName
substring
startName
endName
File
jarFile
getVendorOutputJarFile
baseName
if
needToRebuild
ejbFiles
jarFile
log
jarFile
getName
String
valueOf
ejbFiles
size
Project
MSG_INFO
String
publicId
getPublicId
writeJar
baseName
jarFile
ejbFiles
publicId
else
log
jarFile
toString
Project
MSG_VERBOSE
catch
SAXException
se
String
msg
descriptorFileName
se
getMessage
throw
new
BuildException
msg
se
catch
IOException
ioe
String
msg
descriptorFileName
toString
ioe
getMessage
throw
new
BuildException
msg
ioe
protected
void
checkConfiguration
String
descriptorFileName
SAXParser
saxParser
throws
BuildException
protected
Hashtable
parseEjbFiles
String
descriptorFileName
SAXParser
saxParser
throws
IOException
SAXException
FileInputStream
descriptorStream
Hashtable
ejbFiles
try
descriptorStream
new
FileInputStream
new
File
config
descriptorDir
descriptorFileName
saxParser
parse
new
InputSource
descriptorStream
handler
ejbFiles
handler
getFiles
finally
if
descriptorStream
try
descriptorStream
close
catch
IOException
closeException
return
ejbFiles
protected
void
addSupportClasses
Hashtable
ejbFiles
Project
project
task
getProject
for
Iterator
i
config
supportFileSets
iterator
i
hasNext
FileSet
supportFileSet
FileSet
i
next
File
supportBaseDir
supportFileSet
getDir
project
DirectoryScanner
supportScanner
supportFileSet
getDirectoryScanner
project
supportScanner
scan
String
supportFiles
supportScanner
getIncludedFiles
for
int
j
j
supportFiles
length
j
ejbFiles
put
supportFiles
j
new
File
supportBaseDir
supportFiles
j
protected
String
getJarBaseName
String
descriptorFileName
String
baseName
if
config
namingScheme
getValue
equals
EjbJar
NamingScheme
BASEJARNAME
String
canonicalDescriptor
descriptorFileName
replace
int
index
canonicalDescriptor
lastIndexOf
if
index
baseName
descriptorFileName
substring
index
baseName
config
baseJarName
else
if
config
namingScheme
getValue
equals
EjbJar
NamingScheme
DESCRIPTOR
int
lastSeparatorIndex
descriptorFileName
lastIndexOf
File
separator
int
endBaseName
if
lastSeparatorIndex
endBaseName
descriptorFileName
indexOf
config
baseNameTerminator
lastSeparatorIndex
else
endBaseName
descriptorFileName
indexOf
config
baseNameTerminator
if
endBaseName
baseName
descriptorFileName
substring
endBaseName
else
throw
new
BuildException
descriptorFileName
else
if
config
namingScheme
getValue
equals
EjbJar
NamingScheme
DIRECTORY
File
descriptorFile
new
File
config
descriptorDir
descriptorFileName
String
path
descriptorFile
getAbsolutePath
int
lastSeparatorIndex
path
lastIndexOf
File
separator
if
lastSeparatorIndex
throw
new
BuildException
String
dirName
path
substring
lastSeparatorIndex
int
dirSeparatorIndex
dirName
lastIndexOf
File
separator
if
dirSeparatorIndex
dirName
dirName
substring
dirSeparatorIndex
baseName
dirName
else
if
config
namingScheme
getValue
equals
EjbJar
NamingScheme
EJB_NAME
baseName
handler
getEjbName
return
baseName
public
String
getVendorDDPrefix
String
baseName
String
descriptorFileName
String
ddPrefix
if
config
namingScheme
getValue
equals
EjbJar
NamingScheme
DESCRIPTOR
ddPrefix
baseName
config
baseNameTerminator
else
if
config
namingScheme
getValue
equals
EjbJar
NamingScheme
BASEJARNAME
config
namingScheme
getValue
equals
EjbJar
NamingScheme
EJB_NAME
config
namingScheme
getValue
equals
EjbJar
NamingScheme
DIRECTORY
String
canonicalDescriptor
descriptorFileName
replace
int
index
canonicalDescriptor
lastIndexOf
if
index
ddPrefix
else
ddPrefix
descriptorFileName
substring
index
return
ddPrefix
protected
void
addVendorFiles
Hashtable
ejbFiles
String
ddPrefix
File
getVendorOutputJarFile
String
baseName
return
new
File
destDir
baseName
genericJarSuffix
protected
boolean
needToRebuild
Hashtable
ejbFiles
File
jarFile
if
jarFile
exists
long
lastBuild
jarFile
lastModified
Iterator
fileIter
ejbFiles
values
iterator
while
fileIter
hasNext
File
currentFile
File
fileIter
next
if
lastBuild
currentFile
lastModified
log
currentFile
getPath
Project
MSG_VERBOSE
return
return
return
protected
String
getPublicId
return
handler
getPublicId
protected
File
getManifestFile
String
prefix
File
manifestFile
new
File
getConfig
descriptorDir
prefix
if
manifestFile
exists
return
manifestFile
if
config
manifest
return
config
manifest
return
protected
void
writeJar
String
baseName
File
jarfile
Hashtable
files
String
publicId
throws
BuildException
JarOutputStream
jarStream
try
if
addedfiles
addedfiles
new
HashSet
else
addedfiles
clear
if
jarfile
exists
jarfile
delete
jarfile
getParentFile
mkdirs
jarfile
createNewFile
InputStream
in
Manifest
manifest
try
File
manifestFile
File
files
get
MANIFEST
if
manifestFile
manifestFile
exists
in
new
FileInputStream
manifestFile
else
String
defaultManifest
in
this
getClass
getResourceAsStream
defaultManifest
if
in
throw
new
BuildException
defaultManifest
manifest
new
Manifest
in
catch
IOException
e
throw
new
BuildException
e
getLocation
finally
if
in
in
close
jarStream
new
JarOutputStream
new
FileOutputStream
jarfile
manifest
jarStream
setMethod
JarOutputStream
DEFLATED
for
Iterator
entryIterator
files
keySet
iterator
entryIterator
hasNext
String
entryName
String
entryIterator
next
if
entryName
equals
MANIFEST
continue
File
entryFile
File
files
get
entryName
log
entryName
Project
MSG_VERBOSE
addFileToJar
jarStream
entryFile
entryName
InnerClassFilenameFilter
flt
new
InnerClassFilenameFilter
entryFile
getName
File
entryDir
entryFile
getParentFile
String
innerfiles
entryDir
list
flt
if
innerfiles
for
int
i
n
innerfiles
length
i
n
i
int
entryIndex
entryName
lastIndexOf
entryFile
getName
if
entryIndex
entryName
innerfiles
i
else
entryName
entryName
substring
entryIndex
File
separatorChar
innerfiles
i
entryFile
new
File
config
srcDir
entryName
log
entryName
Project
MSG_VERBOSE
addFileToJar
jarStream
entryFile
entryName
catch
IOException
ioe
String
msg
jarfile
toString
ioe
getMessage
throw
new
BuildException
msg
ioe
finally
if
jarStream
try
jarStream
close
catch
IOException
closeException
protected
void
checkAndAddDependants
Hashtable
checkEntries
throws
BuildException
if
dependencyAnalyzer
return
dependencyAnalyzer
reset
Iterator
i
checkEntries
keySet
iterator
while
i
hasNext
String
entryName
String
i
next
if
entryName
endsWith
String
className
entryName
substring
entryName
length
length
className
className
replace
File
separatorChar
className
className
replace
dependencyAnalyzer
addRootClass
className
Enumeration
e
dependencyAnalyzer
getClassDependencies
while
e
hasMoreElements
String
classname
String
e
nextElement
String
location
classname
replace
File
separatorChar
File
classFile
new
File
config
srcDir
location
if
classFile
exists
checkEntries
put
location
classFile
log
classname
classFile
Project
MSG_VERBOSE
protected
ClassLoader
getClassLoaderForBuild
if
classpathLoader
return
classpathLoader
Path
combinedClasspath
getCombinedClasspath
if
combinedClasspath
classpathLoader
getClass
getClassLoader
else
classpathLoader
getTask
getProject
createClassLoader
combinedClasspath
return
classpathLoader
public
void
validateConfigured
throws
BuildException
if
destDir
destDir
isDirectory
String
msg
throw
new
BuildException
msg
getLocation
