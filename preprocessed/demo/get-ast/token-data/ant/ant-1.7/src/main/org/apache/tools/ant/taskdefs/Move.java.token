package
org
apache
tools
ant
taskdefs
import
java
io
File
import
java
io
IOException
import
java
util
Enumeration
import
org
apache
tools
ant
Project
import
org
apache
tools
ant
BuildException
import
org
apache
tools
ant
DirectoryScanner
import
org
apache
tools
ant
types
FileSet
import
org
apache
tools
ant
types
FilterSet
import
org
apache
tools
ant
types
FilterSetCollection
public
class
Move
extends
Copy
public
Move
super
setOverwrite
protected
void
validateAttributes
throws
BuildException
if
file
file
isDirectory
if
destFile
destDir
destFile
destDir
throw
new
BuildException
destFile
destFile
new
File
destDir
file
getName
destFile
destDir
destDir
destFile
getParentFile
destDir
completeDirMap
put
file
destFile
file
else
super
validateAttributes
protected
void
doFileOperations
if
completeDirMap
size
Enumeration
e
completeDirMap
keys
while
e
hasMoreElements
File
fromDir
File
e
nextElement
File
toDir
File
completeDirMap
get
fromDir
boolean
renamed
try
log
fromDir
toDir
verbosity
renamed
renameFile
fromDir
toDir
filtering
forceOverwrite
catch
IOException
ioe
String
msg
fromDir
toDir
ioe
getMessage
throw
new
BuildException
msg
ioe
getLocation
if
renamed
FileSet
fs
new
FileSet
fs
setProject
getProject
fs
setDir
fromDir
addFileset
fs
DirectoryScanner
ds
fs
getDirectoryScanner
getProject
String
files
ds
getIncludedFiles
String
dirs
ds
getIncludedDirectories
scan
fromDir
toDir
files
dirs
int
moveCount
fileCopyMap
size
if
moveCount
log
moveCount
moveCount
destDir
getAbsolutePath
Enumeration
e
fileCopyMap
keys
while
e
hasMoreElements
String
fromFile
String
e
nextElement
File
f
new
File
fromFile
boolean
selfMove
if
f
exists
String
toFiles
String
fileCopyMap
get
fromFile
for
int
i
i
toFiles
length
i
String
toFile
String
toFiles
i
if
fromFile
equals
toFile
log
fromFile
verbosity
selfMove
continue
File
d
new
File
toFile
if
i
toFiles
length
selfMove
moveFile
f
d
filtering
forceOverwrite
else
copyFile
f
d
filtering
forceOverwrite
if
includeEmpty
Enumeration
e
dirCopyMap
keys
int
createCount
while
e
hasMoreElements
String
fromDirName
String
e
nextElement
String
toDirNames
String
dirCopyMap
get
fromDirName
boolean
selfMove
for
int
i
i
toDirNames
length
i
if
fromDirName
equals
toDirNames
i
log
fromDirName
verbosity
selfMove
continue
File
d
new
File
toDirNames
i
if
d
exists
if
d
mkdirs
log
d
getAbsolutePath
Project
MSG_ERR
else
createCount
File
fromDir
new
File
fromDirName
if
selfMove
okToDelete
fromDir
deleteDir
fromDir
if
createCount
log
dirCopyMap
size
dirCopyMap
size
createCount
createCount
destDir
getAbsolutePath
private
void
moveFile
File
fromFile
File
toFile
boolean
filtering
boolean
overwrite
boolean
moved
try
log
fromFile
toFile
verbosity
moved
renameFile
fromFile
toFile
filtering
forceOverwrite
catch
IOException
ioe
String
msg
fromFile
toFile
ioe
getMessage
throw
new
BuildException
msg
ioe
getLocation
if
moved
copyFile
fromFile
toFile
filtering
overwrite
if
fromFile
delete
throw
new
BuildException
fromFile
getAbsolutePath
private
void
copyFile
File
fromFile
File
toFile
boolean
filtering
boolean
overwrite
try
log
fromFile
toFile
verbosity
FilterSetCollection
executionFilters
new
FilterSetCollection
if
filtering
executionFilters
addFilterSet
getProject
getGlobalFilterSet
for
Enumeration
filterEnum
getFilterSets
elements
filterEnum
hasMoreElements
executionFilters
addFilterSet
FilterSet
filterEnum
nextElement
getFileUtils
copyFile
fromFile
toFile
executionFilters
getFilterChains
forceOverwrite
getPreserveLastModified
getEncoding
getOutputEncoding
getProject
catch
IOException
ioe
String
msg
fromFile
toFile
ioe
getMessage
throw
new
BuildException
msg
ioe
getLocation
protected
boolean
okToDelete
File
d
String
list
d
list
if
list
return
for
int
i
i
list
length
i
String
s
list
i
File
f
new
File
d
s
if
f
isDirectory
if
okToDelete
f
return
else
return
return
protected
void
deleteDir
File
d
deleteDir
d
protected
void
deleteDir
File
d
boolean
deleteFiles
String
list
d
list
if
list
return
for
int
i
i
list
length
i
String
s
list
i
File
f
new
File
d
s
if
f
isDirectory
deleteDir
f
else
if
deleteFiles
f
delete
throw
new
BuildException
f
getAbsolutePath
else
throw
new
BuildException
f
getAbsolutePath
log
d
getAbsolutePath
verbosity
if
d
delete
throw
new
BuildException
d
getAbsolutePath
protected
boolean
renameFile
File
sourceFile
File
destFile
boolean
filtering
boolean
overwrite
throws
IOException
BuildException
boolean
renamed
if
getFilterSets
size
getFilterChains
size
filtering
destFile
isDirectory
File
parent
destFile
getParentFile
if
parent
parent
exists
parent
mkdirs
if
destFile
isFile
destFile
equals
sourceFile
destFile
delete
throw
new
BuildException
destFile
renamed
sourceFile
renameTo
destFile
return
renamed
