package
org
apache
tools
ant
taskdefs
import
java
io
File
import
java
io
IOException
import
java
text
DateFormat
import
java
text
ParseException
import
java
text
SimpleDateFormat
import
java
util
Iterator
import
java
util
Locale
import
java
util
Vector
import
org
apache
tools
ant
BuildException
import
org
apache
tools
ant
DirectoryScanner
import
org
apache
tools
ant
Project
import
org
apache
tools
ant
Task
import
org
apache
tools
ant
types
Mapper
import
org
apache
tools
ant
types
FileSet
import
org
apache
tools
ant
types
FileList
import
org
apache
tools
ant
types
Resource
import
org
apache
tools
ant
types
ResourceCollection
import
org
apache
tools
ant
types
resources
FileResource
import
org
apache
tools
ant
types
resources
Touchable
import
org
apache
tools
ant
types
resources
Union
import
org
apache
tools
ant
util
FileUtils
import
org
apache
tools
ant
util
FileNameMapper
public
class
Touch
extends
Task
private
interface
DateFormatFactory
DateFormat
getPrimaryFormat
DateFormat
getFallbackFormat
private
static
final
DateFormatFactory
DEFAULT_DF_FACTORY
new
DateFormatFactory
public
DateFormat
getPrimaryFormat
return
DateFormat
getDateTimeInstance
DateFormat
SHORT
DateFormat
SHORT
Locale
US
public
DateFormat
getFallbackFormat
return
DateFormat
getDateTimeInstance
DateFormat
SHORT
DateFormat
MEDIUM
Locale
US
private
static
final
FileUtils
FILE_UTILS
FileUtils
getFileUtils
private
File
file
private
long
millis
private
String
dateTime
private
Vector
filesets
new
Vector
private
Union
resources
new
Union
private
boolean
dateTimeConfigured
private
boolean
mkdirs
private
boolean
verbose
private
FileNameMapper
fileNameMapper
private
DateFormatFactory
dfFactory
DEFAULT_DF_FACTORY
public
Touch
public
void
setFile
File
file
this
file
file
public
void
setMillis
long
millis
this
millis
millis
public
void
setDatetime
String
dateTime
if
this
dateTime
log
dateTime
Project
MSG_VERBOSE
this
dateTime
dateTime
dateTimeConfigured
public
void
setMkdirs
boolean
mkdirs
this
mkdirs
mkdirs
public
void
setVerbose
boolean
verbose
this
verbose
verbose
public
void
setPattern
final
String
pattern
dfFactory
new
DateFormatFactory
public
DateFormat
getPrimaryFormat
return
new
SimpleDateFormat
pattern
public
DateFormat
getFallbackFormat
return
public
void
addConfiguredMapper
Mapper
mapper
add
mapper
getImplementation
public
void
add
FileNameMapper
fileNameMapper
throws
BuildException
if
this
fileNameMapper
throw
new
BuildException
getTaskName
this
fileNameMapper
fileNameMapper
public
void
addFileset
FileSet
set
filesets
add
set
add
set
public
void
addFilelist
FileList
list
add
list
public
void
add
ResourceCollection
rc
resources
add
rc
protected
synchronized
void
checkConfiguration
throws
BuildException
if
file
resources
size
throw
new
BuildException
if
file
file
exists
file
isDirectory
throw
new
BuildException
if
dateTime
dateTimeConfigured
long
workmillis
millis
DateFormat
df
dfFactory
getPrimaryFormat
ParseException
pe
try
workmillis
df
parse
dateTime
getTime
catch
ParseException
peOne
df
dfFactory
getFallbackFormat
if
df
pe
peOne
else
try
workmillis
df
parse
dateTime
getTime
catch
ParseException
peTwo
pe
peTwo
if
pe
throw
new
BuildException
pe
getMessage
pe
getLocation
if
workmillis
throw
new
BuildException
dateTime
log
workmillis
millis
Project
MSG_DEBUG
Project
MSG_VERBOSE
setMillis
workmillis
dateTimeConfigured
public
void
execute
throws
BuildException
checkConfiguration
touch
protected
void
touch
throws
BuildException
long
defaultTimestamp
getTimestamp
if
file
touch
new
FileResource
file
getParentFile
file
getName
defaultTimestamp
Iterator
iter
resources
iterator
while
iter
hasNext
Resource
r
Resource
iter
next
if
r
instanceof
Touchable
throw
new
BuildException
r
touch
r
defaultTimestamp
for
int
i
i
filesets
size
i
FileSet
fs
FileSet
filesets
elementAt
i
DirectoryScanner
ds
fs
getDirectoryScanner
getProject
File
fromDir
fs
getDir
getProject
String
srcDirs
ds
getIncludedDirectories
for
int
j
j
srcDirs
length
j
touch
new
FileResource
fromDir
srcDirs
j
defaultTimestamp
protected
void
touch
File
file
touch
file
getTimestamp
private
long
getTimestamp
return
millis
System
currentTimeMillis
millis
private
void
touch
Resource
r
long
defaultTimestamp
if
fileNameMapper
if
r
instanceof
FileResource
touch
FileResource
r
getFile
defaultTimestamp
else
Touchable
r
touch
defaultTimestamp
else
String
mapped
fileNameMapper
mapFileName
r
getName
if
mapped
mapped
length
long
modTime
r
isExists
r
getLastModified
defaultTimestamp
for
int
i
i
mapped
length
i
touch
getProject
resolveFile
mapped
i
modTime
private
void
touch
File
file
long
modTime
if
file
exists
log
file
verbose
Project
MSG_INFO
Project
MSG_VERBOSE
try
FILE_UTILS
createNewFile
file
mkdirs
catch
IOException
ioe
throw
new
BuildException
file
ioe
getLocation
if
file
canWrite
throw
new
BuildException
file
FILE_UTILS
setFileLastModified
file
modTime
