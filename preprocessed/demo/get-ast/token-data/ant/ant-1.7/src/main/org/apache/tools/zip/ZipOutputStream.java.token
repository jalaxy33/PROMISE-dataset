package
org
apache
tools
zip
import
java
io
File
import
java
io
FileOutputStream
import
java
io
FilterOutputStream
import
java
io
IOException
import
java
io
OutputStream
import
java
io
RandomAccessFile
import
java
io
UnsupportedEncodingException
import
java
util
Date
import
java
util
Hashtable
import
java
util
Vector
import
java
util
zip
CRC32
import
java
util
zip
Deflater
import
java
util
zip
ZipException
public
class
ZipOutputStream
extends
FilterOutputStream
public
static
final
int
DEFLATED
java
util
zip
ZipEntry
DEFLATED
public
static
final
int
DEFAULT_COMPRESSION
Deflater
DEFAULT_COMPRESSION
public
static
final
int
STORED
java
util
zip
ZipEntry
STORED
private
ZipEntry
entry
private
String
comment
private
int
level
DEFAULT_COMPRESSION
private
boolean
hasCompressionLevelChanged
private
int
method
java
util
zip
ZipEntry
DEFLATED
private
Vector
entries
new
Vector
private
CRC32
crc
new
CRC32
private
long
written
private
long
dataStart
private
long
localDataStart
private
long
cdOffset
private
long
cdLength
private
static
final
byte
ZERO
private
static
final
byte
LZERO
private
Hashtable
offsets
new
Hashtable
private
String
encoding
protected
Deflater
def
new
Deflater
level
protected
byte
buf
new
byte
private
RandomAccessFile
raf
public
ZipOutputStream
OutputStream
out
super
out
public
ZipOutputStream
File
file
throws
IOException
super
try
raf
new
RandomAccessFile
file
raf
setLength
catch
IOException
e
if
raf
try
raf
close
catch
IOException
inner
raf
out
new
FileOutputStream
file
public
boolean
isSeekable
return
raf
public
void
setEncoding
String
encoding
this
encoding
encoding
public
String
getEncoding
return
encoding
public
void
finish
throws
IOException
closeEntry
cdOffset
written
for
int
i
entriesSize
entries
size
i
entriesSize
i
writeCentralFileHeader
ZipEntry
entries
elementAt
i
cdLength
written
cdOffset
writeCentralDirectoryEnd
offsets
clear
entries
removeAllElements
public
void
closeEntry
throws
IOException
if
entry
return
long
realCrc
crc
getValue
crc
reset
if
entry
getMethod
DEFLATED
def
finish
while
def
finished
deflate
entry
setSize
adjustToLong
def
getTotalIn
entry
setCompressedSize
adjustToLong
def
getTotalOut
entry
setCrc
realCrc
def
reset
written
entry
getCompressedSize
else
if
raf
if
entry
getCrc
realCrc
throw
new
ZipException
entry
getName
Long
toHexString
entry
getCrc
Long
toHexString
realCrc
if
entry
getSize
written
dataStart
throw
new
ZipException
entry
getName
entry
getSize
written
dataStart
else
long
size
written
dataStart
entry
setSize
size
entry
setCompressedSize
size
entry
setCrc
realCrc
if
raf
long
save
raf
getFilePointer
raf
seek
localDataStart
writeOut
ZipLong
getBytes
entry
getCrc
writeOut
ZipLong
getBytes
entry
getCompressedSize
writeOut
ZipLong
getBytes
entry
getSize
raf
seek
save
writeDataDescriptor
entry
entry
public
void
putNextEntry
ZipEntry
ze
throws
IOException
closeEntry
entry
ze
entries
addElement
entry
if
entry
getMethod
entry
setMethod
method
if
entry
getTime
entry
setTime
System
currentTimeMillis
if
entry
getMethod
STORED
raf
if
entry
getSize
throw
new
ZipException
if
entry
getCrc
throw
new
ZipException
entry
setCompressedSize
entry
getSize
if
entry
getMethod
DEFLATED
hasCompressionLevelChanged
def
setLevel
level
hasCompressionLevelChanged
writeLocalFileHeader
entry
public
void
setComment
String
comment
this
comment
comment
public
void
setLevel
int
level
if
level
Deflater
DEFAULT_COMPRESSION
level
Deflater
BEST_COMPRESSION
throw
new
IllegalArgumentException
level
hasCompressionLevelChanged
this
level
level
this
level
level
public
void
setMethod
int
method
this
method
method
public
void
write
byte
b
int
offset
int
length
throws
IOException
if
entry
getMethod
DEFLATED
if
length
if
def
finished
def
setInput
b
offset
length
while
def
needsInput
deflate
else
writeOut
b
offset
length
written
length
crc
update
b
offset
length
public
void
write
int
b
throws
IOException
byte
buff
new
byte
buff
byte
b
write
buff
public
void
close
throws
IOException
finish
if
raf
raf
close
if
out
out
close
public
void
flush
throws
IOException
if
out
out
flush
protected
static
final
byte
LFH_SIG
ZipLong
getBytes
protected
static
final
byte
DD_SIG
ZipLong
getBytes
protected
static
final
byte
CFH_SIG
ZipLong
getBytes
protected
static
final
byte
EOCD_SIG
ZipLong
getBytes
protected
final
void
deflate
throws
IOException
int
len
def
deflate
buf
buf
length
if
len
writeOut
buf
len
protected
void
writeLocalFileHeader
ZipEntry
ze
throws
IOException
offsets
put
ze
ZipLong
getBytes
written
writeOut
LFH_SIG
written
final
int
zipMethod
ze
getMethod
if
zipMethod
DEFLATED
raf
writeOut
ZipShort
getBytes
writeOut
ZipShort
getBytes
else
writeOut
ZipShort
getBytes
writeOut
ZERO
written
writeOut
ZipShort
getBytes
zipMethod
written
writeOut
toDosTime
ze
getTime
written
localDataStart
written
if
zipMethod
DEFLATED
raf
writeOut
LZERO
writeOut
LZERO
writeOut
LZERO
else
writeOut
ZipLong
getBytes
ze
getCrc
writeOut
ZipLong
getBytes
ze
getSize
writeOut
ZipLong
getBytes
ze
getSize
written
byte
name
getBytes
ze
getName
writeOut
ZipShort
getBytes
name
length
written
byte
extra
ze
getLocalFileDataExtra
writeOut
ZipShort
getBytes
extra
length
written
writeOut
name
written
name
length
writeOut
extra
written
extra
length
dataStart
written
protected
void
writeDataDescriptor
ZipEntry
ze
throws
IOException
if
ze
getMethod
DEFLATED
raf
return
writeOut
DD_SIG
writeOut
ZipLong
getBytes
entry
getCrc
writeOut
ZipLong
getBytes
entry
getCompressedSize
writeOut
ZipLong
getBytes
entry
getSize
written
protected
void
writeCentralFileHeader
ZipEntry
ze
throws
IOException
writeOut
CFH_SIG
written
writeOut
ZipShort
getBytes
ze
getPlatform
written
if
ze
getMethod
DEFLATED
raf
writeOut
ZipShort
getBytes
writeOut
ZipShort
getBytes
else
writeOut
ZipShort
getBytes
writeOut
ZERO
written
writeOut
ZipShort
getBytes
ze
getMethod
written
writeOut
toDosTime
ze
getTime
written
writeOut
ZipLong
getBytes
ze
getCrc
writeOut
ZipLong
getBytes
ze
getCompressedSize
writeOut
ZipLong
getBytes
ze
getSize
written
byte
name
getBytes
ze
getName
writeOut
ZipShort
getBytes
name
length
written
byte
extra
ze
getCentralDirectoryExtra
writeOut
ZipShort
getBytes
extra
length
written
String
comm
ze
getComment
if
comm
comm
byte
commentB
getBytes
comm
writeOut
ZipShort
getBytes
commentB
length
written
writeOut
ZERO
written
writeOut
ZipShort
getBytes
ze
getInternalAttributes
written
writeOut
ZipLong
getBytes
ze
getExternalAttributes
written
writeOut
byte
offsets
get
ze
written
writeOut
name
written
name
length
writeOut
extra
written
extra
length
writeOut
commentB
written
commentB
length
protected
void
writeCentralDirectoryEnd
throws
IOException
writeOut
EOCD_SIG
writeOut
ZERO
writeOut
ZERO
byte
num
ZipShort
getBytes
entries
size
writeOut
num
writeOut
num
writeOut
ZipLong
getBytes
cdLength
writeOut
ZipLong
getBytes
cdOffset
byte
data
getBytes
comment
writeOut
ZipShort
getBytes
data
length
writeOut
data
private
static
final
byte
DOS_TIME_MIN
ZipLong
getBytes
protected
static
ZipLong
toDosTime
Date
time
return
new
ZipLong
toDosTime
time
getTime
protected
static
byte
toDosTime
long
t
Date
time
new
Date
t
int
year
time
getYear
if
year
return
DOS_TIME_MIN
int
month
time
getMonth
long
value
year
month
time
getDate
time
getHours
time
getMinutes
time
getSeconds
return
ZipLong
getBytes
value
protected
byte
getBytes
String
name
throws
ZipException
if
encoding
return
name
getBytes
else
try
return
name
getBytes
encoding
catch
UnsupportedEncodingException
uee
throw
new
ZipException
uee
getMessage
protected
final
void
writeOut
byte
data
throws
IOException
writeOut
data
data
length
protected
final
void
writeOut
byte
data
int
offset
int
length
throws
IOException
if
raf
raf
write
data
offset
length
else
out
write
data
offset
length
protected
static
long
adjustToLong
int
i
if
i
return
long
Integer
MAX_VALUE
i
else
return
i
