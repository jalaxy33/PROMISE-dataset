package
org
apache
tools
ant
taskdefs
import
java
io
File
import
java
io
FileNotFoundException
import
java
io
FileOutputStream
import
java
io
IOException
import
java
io
InputStream
import
java
util
Date
import
java
util
Enumeration
import
java
util
HashSet
import
java
util
Iterator
import
java
util
Set
import
java
util
Vector
import
org
apache
tools
ant
BuildException
import
org
apache
tools
ant
Project
import
org
apache
tools
ant
Task
import
org
apache
tools
ant
types
FileSet
import
org
apache
tools
ant
types
Mapper
import
org
apache
tools
ant
types
PatternSet
import
org
apache
tools
ant
types
Resource
import
org
apache
tools
ant
types
ResourceCollection
import
org
apache
tools
ant
types
resources
FileResource
import
org
apache
tools
ant
types
resources
Union
import
org
apache
tools
ant
types
selectors
SelectorUtils
import
org
apache
tools
ant
util
FileNameMapper
import
org
apache
tools
ant
util
FileUtils
import
org
apache
tools
ant
util
IdentityMapper
import
org
apache
tools
zip
ZipEntry
import
org
apache
tools
zip
ZipFile
public
class
Expand
extends
Task
private
File
dest
private
File
source
private
boolean
overwrite
private
Mapper
mapperElement
private
Vector
patternsets
new
Vector
private
Union
resources
new
Union
private
boolean
resourcesSpecified
private
static
final
String
NATIVE_ENCODING
private
String
encoding
public
static
final
String
ERROR_MULTIPLE_MAPPERS
private
static
final
FileUtils
FILE_UTILS
FileUtils
getFileUtils
public
void
execute
throws
BuildException
if
equals
getTaskType
log
if
source
resourcesSpecified
throw
new
BuildException
if
dest
throw
new
BuildException
if
dest
exists
dest
isDirectory
throw
new
BuildException
getLocation
if
source
if
source
isDirectory
throw
new
BuildException
getLocation
else
expandFile
FILE_UTILS
source
dest
Iterator
iter
resources
iterator
while
iter
hasNext
Resource
r
Resource
iter
next
if
r
isExists
continue
if
r
instanceof
FileResource
expandFile
FILE_UTILS
FileResource
r
getFile
dest
else
expandResource
r
dest
protected
void
expandFile
FileUtils
fileUtils
File
srcF
File
dir
log
srcF
dir
Project
MSG_INFO
ZipFile
zf
FileNameMapper
mapper
getMapper
try
zf
new
ZipFile
srcF
encoding
Enumeration
e
zf
getEntries
while
e
hasMoreElements
ZipEntry
ze
ZipEntry
e
nextElement
extractFile
fileUtils
srcF
dir
zf
getInputStream
ze
ze
getName
new
Date
ze
getTime
ze
isDirectory
mapper
log
Project
MSG_VERBOSE
catch
IOException
ioe
throw
new
BuildException
srcF
getPath
ioe
finally
ZipFile
closeQuietly
zf
protected
void
expandResource
Resource
srcR
File
dir
throw
new
BuildException
protected
FileNameMapper
getMapper
FileNameMapper
mapper
if
mapperElement
mapper
mapperElement
getImplementation
else
mapper
new
IdentityMapper
return
mapper
protected
void
extractFile
FileUtils
fileUtils
File
srcF
File
dir
InputStream
compressedInputStream
String
entryName
Date
entryDate
boolean
isDirectory
FileNameMapper
mapper
throws
IOException
if
patternsets
patternsets
size
String
name
entryName
replace
File
separatorChar
replace
File
separatorChar
boolean
included
Set
includePatterns
new
HashSet
Set
excludePatterns
new
HashSet
for
int
v
size
patternsets
size
v
size
v
PatternSet
p
PatternSet
patternsets
elementAt
v
String
incls
p
getIncludePatterns
getProject
if
incls
incls
length
incls
new
String
for
int
w
w
incls
length
w
String
pattern
incls
w
replace
File
separatorChar
replace
File
separatorChar
if
pattern
endsWith
File
separator
pattern
includePatterns
add
pattern
String
excls
p
getExcludePatterns
getProject
if
excls
for
int
w
w
excls
length
w
String
pattern
excls
w
replace
File
separatorChar
replace
File
separatorChar
if
pattern
endsWith
File
separator
pattern
excludePatterns
add
pattern
for
Iterator
iter
includePatterns
iterator
included
iter
hasNext
String
pattern
String
iter
next
included
SelectorUtils
matchPath
pattern
name
for
Iterator
iter
excludePatterns
iterator
included
iter
hasNext
String
pattern
String
iter
next
included
SelectorUtils
matchPath
pattern
name
if
included
return
String
mappedNames
mapper
mapFileName
entryName
if
mappedNames
mappedNames
length
mappedNames
new
String
entryName
File
f
fileUtils
resolveFile
dir
mappedNames
try
if
overwrite
f
exists
f
lastModified
entryDate
getTime
log
f
Project
MSG_DEBUG
return
log
entryName
f
Project
MSG_VERBOSE
File
dirF
f
getParentFile
if
dirF
dirF
mkdirs
if
isDirectory
f
mkdirs
else
byte
buffer
new
byte
int
length
FileOutputStream
fos
try
fos
new
FileOutputStream
f
while
length
compressedInputStream
read
buffer
fos
write
buffer
length
fos
close
fos
finally
FileUtils
close
fos
fileUtils
setFileLastModified
f
entryDate
getTime
catch
FileNotFoundException
ex
log
f
getPath
Project
MSG_WARN
public
void
setDest
File
d
this
dest
d
public
void
setSrc
File
s
this
source
s
public
void
setOverwrite
boolean
b
overwrite
b
public
void
addPatternset
PatternSet
set
patternsets
addElement
set
public
void
addFileset
FileSet
set
add
set
public
void
add
ResourceCollection
rc
resourcesSpecified
resources
add
rc
public
Mapper
createMapper
throws
BuildException
if
mapperElement
throw
new
BuildException
ERROR_MULTIPLE_MAPPERS
getLocation
mapperElement
new
Mapper
getProject
return
mapperElement
public
void
add
FileNameMapper
fileNameMapper
createMapper
add
fileNameMapper
public
void
setEncoding
String
encoding
if
NATIVE_ENCODING
equals
encoding
encoding
this
encoding
encoding
