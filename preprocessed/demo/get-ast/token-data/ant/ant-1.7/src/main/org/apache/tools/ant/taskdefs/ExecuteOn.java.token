package
org
apache
tools
ant
taskdefs
import
java
io
File
import
java
io
IOException
import
java
util
Hashtable
import
java
util
Iterator
import
java
util
Vector
import
org
apache
tools
ant
BuildException
import
org
apache
tools
ant
DirectoryScanner
import
org
apache
tools
ant
Project
import
org
apache
tools
ant
types
Commandline
import
org
apache
tools
ant
types
AbstractFileSet
import
org
apache
tools
ant
types
DirSet
import
org
apache
tools
ant
types
EnumeratedAttribute
import
org
apache
tools
ant
types
FileList
import
org
apache
tools
ant
types
FileSet
import
org
apache
tools
ant
types
Mapper
import
org
apache
tools
ant
types
Resource
import
org
apache
tools
ant
types
ResourceCollection
import
org
apache
tools
ant
types
resources
FileResource
import
org
apache
tools
ant
types
resources
Union
import
org
apache
tools
ant
util
FileNameMapper
import
org
apache
tools
ant
util
SourceFileScanner
public
class
ExecuteOn
extends
ExecTask
protected
Vector
filesets
new
Vector
private
Union
resources
private
boolean
relative
private
boolean
parallel
private
boolean
forwardSlash
protected
String
type
FileDirBoth
FILE
protected
Commandline
Marker
srcFilePos
private
boolean
skipEmpty
protected
Commandline
Marker
targetFilePos
protected
Mapper
mapperElement
protected
FileNameMapper
mapper
protected
File
destDir
private
int
maxParallel
private
boolean
addSourceFile
private
boolean
verbose
private
boolean
ignoreMissing
private
boolean
force
protected
boolean
srcIsFirst
public
void
addFileset
FileSet
set
filesets
addElement
set
public
void
addDirset
DirSet
set
filesets
addElement
set
public
void
addFilelist
FileList
list
add
list
public
void
add
ResourceCollection
rc
if
resources
resources
new
Union
resources
add
rc
public
void
setRelative
boolean
relative
this
relative
relative
public
void
setParallel
boolean
parallel
this
parallel
parallel
public
void
setType
FileDirBoth
type
this
type
type
getValue
public
void
setSkipEmptyFilesets
boolean
skip
skipEmpty
skip
public
void
setDest
File
destDir
this
destDir
destDir
public
void
setForwardslash
boolean
forwardSlash
this
forwardSlash
forwardSlash
public
void
setMaxParallel
int
max
maxParallel
max
public
void
setAddsourcefile
boolean
b
addSourceFile
b
public
void
setVerbose
boolean
b
verbose
b
public
void
setIgnoremissing
boolean
b
ignoreMissing
b
public
void
setForce
boolean
b
force
b
public
Commandline
Marker
createSrcfile
if
srcFilePos
throw
new
BuildException
getTaskType
getLocation
srcFilePos
cmdl
createMarker
return
srcFilePos
public
Commandline
Marker
createTargetfile
if
targetFilePos
throw
new
BuildException
getTaskType
getLocation
targetFilePos
cmdl
createMarker
srcIsFirst
srcFilePos
return
targetFilePos
public
Mapper
createMapper
throws
BuildException
if
mapperElement
throw
new
BuildException
getLocation
mapperElement
new
Mapper
getProject
return
mapperElement
public
void
add
FileNameMapper
fileNameMapper
createMapper
add
fileNameMapper
protected
void
checkConfiguration
if
equals
getTaskName
log
super
checkConfiguration
if
filesets
size
resources
throw
new
BuildException
getLocation
if
targetFilePos
mapperElement
throw
new
BuildException
getLocation
if
destDir
mapperElement
throw
new
BuildException
getLocation
if
mapperElement
mapper
mapperElement
getImplementation
protected
ExecuteStreamHandler
createHandler
throws
BuildException
return
redirectorElement
super
createHandler
new
PumpStreamHandler
protected
void
setupRedirector
super
setupRedirector
redirector
setAppendProperties
protected
void
runExec
Execute
exe
throws
BuildException
int
totalFiles
int
totalDirs
boolean
haveExecuted
try
Vector
fileNames
new
Vector
Vector
baseDirs
new
Vector
for
int
i
i
filesets
size
i
String
currentType
type
AbstractFileSet
fs
AbstractFileSet
filesets
elementAt
i
if
fs
instanceof
DirSet
if
FileDirBoth
DIR
equals
type
log
type
Project
MSG_DEBUG
currentType
FileDirBoth
DIR
File
base
fs
getDir
getProject
DirectoryScanner
ds
fs
getDirectoryScanner
getProject
if
FileDirBoth
DIR
equals
currentType
String
s
getFiles
base
ds
for
int
j
j
s
length
j
totalFiles
fileNames
addElement
s
j
baseDirs
addElement
base
if
FileDirBoth
FILE
equals
currentType
String
s
getDirs
base
ds
for
int
j
j
s
length
j
totalDirs
fileNames
addElement
s
j
baseDirs
addElement
base
if
fileNames
size
skipEmpty
int
includedCount
FileDirBoth
DIR
equals
currentType
ds
getIncludedFilesCount
FileDirBoth
FILE
equals
currentType
ds
getIncludedDirsCount
log
base
includedCount
Project
MSG_INFO
continue
if
parallel
String
s
new
String
fileNames
size
fileNames
copyInto
s
for
int
j
j
s
length
j
String
command
getCommandline
s
j
base
log
Commandline
describeCommand
command
Project
MSG_VERBOSE
exe
setCommandline
command
if
redirectorElement
setupRedirector
redirectorElement
configure
redirector
s
j
if
redirectorElement
haveExecuted
exe
setStreamHandler
redirector
createHandler
runExecute
exe
haveExecuted
fileNames
removeAllElements
baseDirs
removeAllElements
if
resources
Iterator
iter
resources
iterator
while
iter
hasNext
Resource
res
Resource
iter
next
if
res
isExists
ignoreMissing
continue
File
base
String
name
res
getName
if
res
instanceof
FileResource
FileResource
fr
FileResource
res
base
fr
getBaseDir
if
base
name
fr
getFile
getAbsolutePath
if
restrict
new
String
name
base
length
continue
if
res
isDirectory
res
isExists
FileDirBoth
DIR
equals
type
totalFiles
else
if
res
isDirectory
FileDirBoth
FILE
equals
type
totalDirs
else
continue
baseDirs
add
base
fileNames
add
name
if
parallel
String
command
getCommandline
name
base
log
Commandline
describeCommand
command
Project
MSG_VERBOSE
exe
setCommandline
command
if
redirectorElement
setupRedirector
redirectorElement
configure
redirector
name
if
redirectorElement
haveExecuted
exe
setStreamHandler
redirector
createHandler
runExecute
exe
haveExecuted
fileNames
removeAllElements
baseDirs
removeAllElements
if
parallel
fileNames
size
skipEmpty
runParallel
exe
fileNames
baseDirs
haveExecuted
if
haveExecuted
log
cmdl
getExecutable
totalFiles
totalFiles
totalDirs
totalDirs
verbose
Project
MSG_INFO
Project
MSG_VERBOSE
catch
IOException
e
throw
new
BuildException
e
e
getLocation
finally
logFlush
redirector
setAppendProperties
redirector
setProperties
protected
String
getCommandline
String
srcFiles
File
baseDirs
final
char
fileSeparator
File
separatorChar
Vector
targets
new
Vector
if
targetFilePos
Hashtable
addedFiles
new
Hashtable
for
int
i
i
srcFiles
length
i
String
subTargets
mapper
mapFileName
srcFiles
i
if
subTargets
for
int
j
j
subTargets
length
j
String
name
if
relative
name
new
File
destDir
subTargets
j
getAbsolutePath
else
name
subTargets
j
if
forwardSlash
fileSeparator
name
name
replace
fileSeparator
if
addedFiles
contains
name
targets
addElement
name
addedFiles
put
name
name
String
targetFiles
new
String
targets
size
targets
copyInto
targetFiles
if
addSourceFile
srcFiles
new
String
String
orig
cmdl
getCommandline
String
result
new
String
orig
length
srcFiles
length
targetFiles
length
int
srcIndex
orig
length
if
srcFilePos
srcIndex
srcFilePos
getPosition
if
targetFilePos
int
targetIndex
targetFilePos
getPosition
if
srcIndex
targetIndex
srcIndex
targetIndex
srcIsFirst
System
arraycopy
orig
result
srcIndex
System
arraycopy
orig
srcIndex
result
srcIndex
srcFiles
length
targetIndex
srcIndex
System
arraycopy
targetFiles
result
targetIndex
srcFiles
length
targetFiles
length
System
arraycopy
orig
targetIndex
result
targetIndex
srcFiles
length
targetFiles
length
orig
length
targetIndex
else
System
arraycopy
orig
result
targetIndex
System
arraycopy
targetFiles
result
targetIndex
targetFiles
length
System
arraycopy
orig
targetIndex
result
targetIndex
targetFiles
length
srcIndex
targetIndex
System
arraycopy
orig
srcIndex
result
srcIndex
srcFiles
length
targetFiles
length
orig
length
srcIndex
srcIndex
targetFiles
length
else
System
arraycopy
orig
result
srcIndex
System
arraycopy
orig
srcIndex
result
srcIndex
srcFiles
length
orig
length
srcIndex
for
int
i
i
srcFiles
length
i
if
relative
result
srcIndex
i
new
File
baseDirs
i
srcFiles
i
getAbsolutePath
else
result
srcIndex
i
srcFiles
i
if
forwardSlash
fileSeparator
result
srcIndex
i
result
srcIndex
i
replace
fileSeparator
return
result
protected
String
getCommandline
String
srcFile
File
baseDir
return
getCommandline
new
String
srcFile
new
File
baseDir
protected
String
getFiles
File
baseDir
DirectoryScanner
ds
return
restrict
ds
getIncludedFiles
baseDir
protected
String
getDirs
File
baseDir
DirectoryScanner
ds
return
restrict
ds
getIncludedDirectories
baseDir
protected
String
getFilesAndDirs
FileList
list
return
restrict
list
getFiles
getProject
list
getDir
getProject
private
String
restrict
String
s
File
baseDir
return
mapper
force
s
new
SourceFileScanner
this
restrict
s
baseDir
destDir
mapper
protected
void
runParallel
Execute
exe
Vector
fileNames
Vector
baseDirs
throws
IOException
BuildException
String
s
new
String
fileNames
size
fileNames
copyInto
s
File
b
new
File
baseDirs
size
baseDirs
copyInto
b
if
maxParallel
s
length
String
command
getCommandline
s
b
log
Commandline
describeCommand
command
Project
MSG_VERBOSE
exe
setCommandline
command
runExecute
exe
else
int
stillToDo
fileNames
size
int
currentOffset
while
stillToDo
int
currentAmount
Math
min
stillToDo
maxParallel
String
cs
new
String
currentAmount
System
arraycopy
s
currentOffset
cs
currentAmount
File
cb
new
File
currentAmount
System
arraycopy
b
currentOffset
cb
currentAmount
String
command
getCommandline
cs
cb
log
Commandline
describeCommand
command
Project
MSG_VERBOSE
exe
setCommandline
command
if
redirectorElement
setupRedirector
redirectorElement
configure
redirector
if
redirectorElement
currentOffset
exe
setStreamHandler
redirector
createHandler
runExecute
exe
stillToDo
currentAmount
currentOffset
currentAmount
public
static
class
FileDirBoth
extends
EnumeratedAttribute
public
static
final
String
FILE
public
static
final
String
DIR
public
String
getValues
return
new
String
FILE
DIR
