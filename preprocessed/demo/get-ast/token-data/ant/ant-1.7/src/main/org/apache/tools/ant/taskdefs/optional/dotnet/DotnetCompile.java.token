package
org
apache
tools
ant
taskdefs
optional
dotnet
import
java
io
File
import
java
util
Vector
import
java
util
Enumeration
import
java
util
Hashtable
import
org
apache
tools
ant
BuildException
import
org
apache
tools
ant
Project
import
org
apache
tools
ant
types
Commandline
import
org
apache
tools
ant
types
Path
import
org
apache
tools
ant
types
FileSet
import
org
apache
tools
ant
types
EnumeratedAttribute
public
abstract
class
DotnetCompile
extends
DotnetBaseMatchingTask
private
String
references
private
boolean
includeDefaultReferences
private
File
win32icon
private
File
win32res
private
boolean
failOnError
private
Path
referenceFiles
private
boolean
optimize
protected
Vector
definitionList
new
Vector
protected
Vector
resources
new
Vector
protected
String
executable
protected
static
final
String
REFERENCE_OPTION
protected
boolean
debug
private
int
warnLevel
protected
String
mainClass
protected
String
extraOptions
protected
String
targetType
protected
boolean
utf8output
protected
String
additionalModules
protected
Vector
referenceFilesets
new
Vector
private
boolean
useResponseFile
private
static
final
int
AUTOMATIC_RESPONSE_FILE_THRESHOLD
public
DotnetCompile
clear
setIncludes
getFilePattern
public
void
clear
targetType
win32icon
srcDir
mainClass
warnLevel
optimize
debug
references
failOnError
additionalModules
includeDefaultReferences
extraOptions
public
void
setReferences
String
s
references
s
protected
String
getReferencesParameter
if
notEmpty
references
if
isWindows
return
REFERENCE_OPTION
references
else
return
REFERENCE_OPTION
references
else
return
public
void
setReferenceFiles
Path
path
if
referenceFiles
referenceFiles
new
Path
this
getProject
referenceFiles
append
path
public
void
addReference
FileSet
reference
referenceFilesets
add
reference
protected
String
getReferenceFilesParameter
if
references
return
if
references
length
return
StringBuffer
s
new
StringBuffer
REFERENCE_OPTION
if
isWindows
s
append
s
append
references
if
isWindows
s
append
return
s
toString
public
void
setIncludeDefaultReferences
boolean
f
includeDefaultReferences
f
public
boolean
getIncludeDefaultReferences
return
includeDefaultReferences
protected
String
getIncludeDefaultReferencesParameter
return
includeDefaultReferences
public
void
setOptimize
boolean
f
optimize
f
public
boolean
getOptimize
return
optimize
protected
String
getOptimizeParameter
return
optimize
public
void
setDebug
boolean
f
debug
f
public
boolean
getDebug
return
debug
protected
String
getDebugParameter
return
debug
public
void
setWarnLevel
int
warnLevel
this
warnLevel
warnLevel
public
int
getWarnLevel
return
warnLevel
protected
String
getWarnLevelParameter
return
warnLevel
public
void
setMainClass
String
mainClass
this
mainClass
mainClass
public
String
getMainClass
return
this
mainClass
protected
String
getMainClassParameter
if
mainClass
mainClass
length
return
mainClass
else
return
public
void
setExtraOptions
String
extraOptions
this
extraOptions
extraOptions
public
String
getExtraOptions
return
this
extraOptions
protected
String
getExtraOptionsParameter
if
extraOptions
extraOptions
length
return
extraOptions
else
return
protected
String
getExtraOptionsParameters
String
extra
getExtraOptionsParameter
return
extra
Commandline
translateCommandline
extra
public
void
setDestDir
File
dirName
log
Project
MSG_WARN
public
void
setTargetType
TargetTypes
targetType
this
targetType
targetType
getValue
public
void
setTargetType
String
ttype
throws
BuildException
ttype
ttype
toLowerCase
if
ttype
equals
ttype
equals
ttype
equals
ttype
equals
targetType
ttype
else
throw
new
BuildException
ttype
public
String
getTargetType
return
targetType
protected
String
getTargetTypeParameter
if
notEmpty
targetType
return
targetType
else
return
public
void
setWin32Icon
File
fileName
win32icon
fileName
protected
String
getWin32IconParameter
if
win32icon
return
win32icon
toString
else
return
public
void
setWin32Res
File
fileName
win32res
fileName
public
File
getWin32Res
return
win32res
protected
String
getWin32ResParameter
if
win32res
return
win32res
toString
else
return
public
void
setUtf8Output
boolean
enabled
utf8output
enabled
protected
String
getUtf8OutputParameter
return
utf8output
public
void
addDefine
DotnetDefine
define
definitionList
addElement
define
protected
String
getDefinitionsParameter
throws
BuildException
StringBuffer
defines
new
StringBuffer
Enumeration
defEnum
definitionList
elements
boolean
firstDefinition
while
defEnum
hasMoreElements
DotnetDefine
define
DotnetDefine
defEnum
nextElement
if
define
isSet
this
if
firstDefinition
defines
append
getDefinitionsDelimiter
defines
append
define
getValue
this
firstDefinition
if
defines
length
return
else
return
defines
public
void
setAdditionalModules
String
params
additionalModules
params
protected
String
getAdditionalModulesParameter
if
notEmpty
additionalModules
return
additionalModules
else
return
protected
String
getDestFileParameter
if
outputFile
return
outputFile
toString
else
return
public
void
setFailOnError
boolean
b
failOnError
b
public
boolean
getFailOnError
return
failOnError
public
void
addResource
DotnetResource
resource
resources
add
resource
protected
String
getExecutable
return
executable
public
void
setExecutable
String
executable
this
executable
executable
protected
boolean
notEmpty
String
s
return
s
s
length
protected
void
validate
throws
BuildException
if
outputFile
outputFile
isDirectory
throw
new
BuildException
if
getExecutable
throw
new
BuildException
public
String
getFilePattern
return
getFileExtension
public
boolean
isUseResponseFile
return
useResponseFile
public
void
setUseResponseFile
boolean
useResponseFile
this
useResponseFile
useResponseFile
public
void
execute
throws
BuildException
log
Project
MSG_WARN
validate
NetCommand
command
createNetCommand
command
setAutomaticResponseFileThreshold
AUTOMATIC_RESPONSE_FILE_THRESHOLD
command
setUseResponseFile
useResponseFile
fillInSharedParameters
command
addResources
command
addCompilerSpecificOptions
command
int
referencesOutOfDate
addReferenceFilesets
command
getOutputFileTimestamp
boolean
forceBuild
referencesOutOfDate
addFilesAndExecute
command
forceBuild
public
abstract
String
getReferenceDelimiter
public
abstract
String
getFileExtension
protected
void
fillInSharedParameters
NetCommand
command
command
setFailOnError
getFailOnError
command
addArgument
command
addArgument
getAdditionalModulesParameter
command
addArgument
getDebugParameter
command
addArgument
getDefinitionsParameter
command
addArguments
getExtraOptionsParameters
command
addArgument
getMainClassParameter
command
addArgument
getOptimizeParameter
command
addArgument
getDestFileParameter
command
addArgument
getReferencesParameter
command
addArgument
getTargetTypeParameter
command
addArgument
getUtf8OutputParameter
command
addArgument
getWin32IconParameter
command
addArgument
getWin32ResParameter
protected
void
addResources
NetCommand
command
Enumeration
e
resources
elements
while
e
hasMoreElements
DotnetResource
resource
DotnetResource
e
nextElement
createResourceParameter
command
resource
protected
abstract
void
createResourceParameter
NetCommand
command
DotnetResource
resource
protected
int
addReferenceFilesets
NetCommand
command
long
outputTimestamp
int
filesOutOfDate
Hashtable
filesToBuild
new
Hashtable
for
int
i
i
referenceFilesets
size
i
FileSet
fs
FileSet
referenceFilesets
elementAt
i
filesOutOfDate
command
scanOneFileset
fs
getDirectoryScanner
getProject
filesToBuild
outputTimestamp
if
filesToBuild
size
return
Enumeration
files
filesToBuild
elements
while
files
hasMoreElements
File
file
File
files
nextElement
if
isFileManagedBinary
file
if
isWindows
command
addArgument
REFERENCE_OPTION
file
toString
else
command
addArgument
REFERENCE_OPTION
file
toString
else
log
file
Project
MSG_VERBOSE
return
filesOutOfDate
protected
NetCommand
createNetCommand
NetCommand
command
new
NetCommand
this
getTaskName
getExecutable
return
command
protected
abstract
void
addCompilerSpecificOptions
NetCommand
command
public
String
getDefinitionsDelimiter
return
protected
static
boolean
isFileManagedBinary
File
file
String
filename
file
toString
toLowerCase
return
filename
endsWith
filename
endsWith
filename
endsWith
public
static
class
TargetTypes
extends
EnumeratedAttribute
public
String
getValues
return
new
String
