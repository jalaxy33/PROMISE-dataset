package
org
apache
tools
ant
taskdefs
optional
import
java
io
File
import
java
io
FileOutputStream
import
java
io
IOException
import
java
io
OutputStream
import
java
io
PrintWriter
import
java
util
Enumeration
import
java
util
Vector
import
org
apache
tools
ant
BuildException
import
org
apache
tools
ant
DirectoryScanner
import
org
apache
tools
ant
Project
import
org
apache
tools
ant
taskdefs
ExecTask
import
org
apache
tools
ant
taskdefs
Execute
import
org
apache
tools
ant
taskdefs
LogOutputStream
import
org
apache
tools
ant
taskdefs
MatchingTask
import
org
apache
tools
ant
taskdefs
StreamPumper
import
org
apache
tools
ant
taskdefs
condition
Os
import
org
apache
tools
ant
types
FileSet
import
org
apache
tools
ant
util
FileUtils
public
class
Cab
extends
MatchingTask
private
File
cabFile
private
File
baseDir
private
Vector
filesets
new
Vector
private
boolean
doCompress
private
boolean
doVerbose
private
String
cmdOptions
protected
String
archiveType
private
static
final
FileUtils
FILE_UTILS
FileUtils
getFileUtils
public
void
setCabfile
File
cabFile
this
cabFile
cabFile
public
void
setBasedir
File
baseDir
this
baseDir
baseDir
public
void
setCompress
boolean
compress
doCompress
compress
public
void
setVerbose
boolean
verbose
doVerbose
verbose
public
void
setOptions
String
options
cmdOptions
options
public
void
addFileset
FileSet
set
if
filesets
size
throw
new
BuildException
filesets
addElement
set
protected
void
checkConfiguration
throws
BuildException
if
baseDir
filesets
size
throw
new
BuildException
getLocation
if
baseDir
baseDir
exists
throw
new
BuildException
getLocation
if
baseDir
filesets
size
throw
new
BuildException
if
cabFile
throw
new
BuildException
getLocation
protected
ExecTask
createExec
throws
BuildException
ExecTask
exec
new
ExecTask
this
return
exec
protected
boolean
isUpToDate
Vector
files
boolean
upToDate
for
int
i
i
files
size
upToDate
i
String
file
files
elementAt
i
toString
if
FILE_UTILS
resolveFile
baseDir
file
lastModified
cabFile
lastModified
upToDate
return
upToDate
protected
File
createListFile
Vector
files
throws
IOException
File
listFile
FILE_UTILS
createTempFile
listFile
deleteOnExit
PrintWriter
writer
new
PrintWriter
new
FileOutputStream
listFile
int
size
files
size
for
int
i
i
size
i
writer
println
files
elementAt
i
toString
writer
close
return
listFile
protected
void
appendFiles
Vector
files
DirectoryScanner
ds
String
dsfiles
ds
getIncludedFiles
for
int
i
i
dsfiles
length
i
files
addElement
dsfiles
i
protected
Vector
getFileList
throws
BuildException
Vector
files
new
Vector
if
baseDir
appendFiles
files
super
getDirectoryScanner
baseDir
else
FileSet
fs
FileSet
filesets
elementAt
baseDir
fs
getDir
appendFiles
files
fs
getDirectoryScanner
getProject
return
files
public
void
execute
throws
BuildException
checkConfiguration
Vector
files
getFileList
if
isUpToDate
files
return
log
archiveType
cabFile
getAbsolutePath
if
Os
isFamily
log
Project
MSG_VERBOSE
StringBuffer
sb
new
StringBuffer
Enumeration
fileEnum
files
elements
while
fileEnum
hasMoreElements
sb
append
fileEnum
nextElement
append
sb
append
append
cabFile
getAbsolutePath
append
try
Process
p
Execute
launch
getProject
new
String
baseDir
baseDir
getProject
getBaseDir
OutputStream
out
p
getOutputStream
LogOutputStream
outLog
new
LogOutputStream
this
Project
MSG_VERBOSE
LogOutputStream
errLog
new
LogOutputStream
this
Project
MSG_ERR
StreamPumper
outPump
new
StreamPumper
p
getInputStream
outLog
StreamPumper
errPump
new
StreamPumper
p
getErrorStream
errLog
new
Thread
outPump
start
new
Thread
errPump
start
out
write
sb
toString
getBytes
out
flush
out
close
int
result
try
result
p
waitFor
outPump
waitFor
outLog
close
errPump
waitFor
errLog
close
catch
InterruptedException
ie
log
ie
if
Execute
isFailure
result
log
result
catch
IOException
ex
String
msg
cabFile
ex
getMessage
throw
new
BuildException
msg
getLocation
else
try
File
listFile
createListFile
files
ExecTask
exec
createExec
File
outFile
exec
setFailonerror
exec
setDir
baseDir
if
doVerbose
outFile
FILE_UTILS
createTempFile
outFile
deleteOnExit
exec
setOutput
outFile
exec
setExecutable
exec
createArg
setValue
exec
createArg
setValue
if
doCompress
exec
createArg
setValue
exec
createArg
setValue
if
cmdOptions
exec
createArg
setLine
cmdOptions
exec
createArg
setValue
exec
createArg
setFile
cabFile
exec
createArg
setValue
listFile
getAbsolutePath
exec
execute
if
outFile
outFile
delete
listFile
delete
catch
IOException
ioe
String
msg
cabFile
ioe
getMessage
throw
new
BuildException
msg
getLocation
