package
org
apache
tools
ant
taskdefs
optional
i18n
import
java
io
BufferedReader
import
java
io
BufferedWriter
import
java
io
File
import
java
io
FileInputStream
import
java
io
FileOutputStream
import
java
io
IOException
import
java
io
InputStreamReader
import
java
io
OutputStreamWriter
import
java
util
Hashtable
import
java
util
Locale
import
java
util
Vector
import
org
apache
tools
ant
BuildException
import
org
apache
tools
ant
DirectoryScanner
import
org
apache
tools
ant
Project
import
org
apache
tools
ant
taskdefs
MatchingTask
import
org
apache
tools
ant
types
FileSet
import
org
apache
tools
ant
util
FileUtils
import
org
apache
tools
ant
util
LineTokenizer
public
class
Translate
extends
MatchingTask
private
static
final
int
BUNDLE_SPECIFIED_LANGUAGE_COUNTRY_VARIANT
private
static
final
int
BUNDLE_SPECIFIED_LANGUAGE_COUNTRY
private
static
final
int
BUNDLE_SPECIFIED_LANGUAGE
private
static
final
int
BUNDLE_NOMATCH
private
static
final
int
BUNDLE_DEFAULT_LANGUAGE_COUNTRY_VARIANT
private
static
final
int
BUNDLE_DEFAULT_LANGUAGE_COUNTRY
private
static
final
int
BUNDLE_DEFAULT_LANGUAGE
private
static
final
int
BUNDLE_MAX_ALTERNATIVES
BUNDLE_DEFAULT_LANGUAGE
private
String
bundle
private
String
bundleLanguage
private
String
bundleCountry
private
String
bundleVariant
private
File
toDir
private
String
srcEncoding
private
String
destEncoding
private
String
bundleEncoding
private
String
startToken
private
String
endToken
private
boolean
forceOverwrite
private
Vector
filesets
new
Vector
private
Hashtable
resourceMap
new
Hashtable
private
static
final
FileUtils
FILE_UTILS
FileUtils
getFileUtils
private
long
bundleLastModified
new
long
BUNDLE_MAX_ALTERNATIVES
private
long
srcLastModified
private
long
destLastModified
private
boolean
loaded
public
void
setBundle
String
bundle
this
bundle
bundle
public
void
setBundleLanguage
String
bundleLanguage
this
bundleLanguage
bundleLanguage
public
void
setBundleCountry
String
bundleCountry
this
bundleCountry
bundleCountry
public
void
setBundleVariant
String
bundleVariant
this
bundleVariant
bundleVariant
public
void
setToDir
File
toDir
this
toDir
toDir
public
void
setStartToken
String
startToken
this
startToken
startToken
public
void
setEndToken
String
endToken
this
endToken
endToken
public
void
setSrcEncoding
String
srcEncoding
this
srcEncoding
srcEncoding
public
void
setDestEncoding
String
destEncoding
this
destEncoding
destEncoding
public
void
setBundleEncoding
String
bundleEncoding
this
bundleEncoding
bundleEncoding
public
void
setForceOverwrite
boolean
forceOverwrite
this
forceOverwrite
forceOverwrite
public
void
addFileset
FileSet
set
filesets
addElement
set
public
void
execute
throws
BuildException
if
bundle
throw
new
BuildException
getLocation
if
startToken
throw
new
BuildException
getLocation
if
endToken
throw
new
BuildException
getLocation
if
bundleLanguage
Locale
l
Locale
getDefault
bundleLanguage
l
getLanguage
if
bundleCountry
bundleCountry
Locale
getDefault
getCountry
if
bundleVariant
Locale
l
new
Locale
bundleLanguage
bundleCountry
bundleVariant
l
getVariant
if
toDir
throw
new
BuildException
getLocation
if
toDir
exists
toDir
mkdirs
else
if
toDir
isFile
throw
new
BuildException
toDir
if
srcEncoding
srcEncoding
System
getProperty
if
destEncoding
destEncoding
srcEncoding
if
bundleEncoding
bundleEncoding
srcEncoding
loadResourceMaps
translate
private
void
loadResourceMaps
throws
BuildException
Locale
locale
new
Locale
bundleLanguage
bundleCountry
bundleVariant
String
language
locale
getLanguage
length
locale
getLanguage
String
country
locale
getCountry
length
locale
getCountry
String
variant
locale
getVariant
length
locale
getVariant
String
bundleFile
bundle
language
country
variant
processBundle
bundleFile
BUNDLE_SPECIFIED_LANGUAGE_COUNTRY_VARIANT
bundleFile
bundle
language
country
processBundle
bundleFile
BUNDLE_SPECIFIED_LANGUAGE_COUNTRY
bundleFile
bundle
language
processBundle
bundleFile
BUNDLE_SPECIFIED_LANGUAGE
bundleFile
bundle
processBundle
bundleFile
BUNDLE_NOMATCH
locale
Locale
getDefault
language
locale
getLanguage
length
locale
getLanguage
country
locale
getCountry
length
locale
getCountry
variant
locale
getVariant
length
locale
getVariant
bundleEncoding
System
getProperty
bundleFile
bundle
language
country
variant
processBundle
bundleFile
BUNDLE_DEFAULT_LANGUAGE_COUNTRY_VARIANT
bundleFile
bundle
language
country
processBundle
bundleFile
BUNDLE_DEFAULT_LANGUAGE_COUNTRY
bundleFile
bundle
language
processBundle
bundleFile
BUNDLE_DEFAULT_LANGUAGE
private
void
processBundle
final
String
bundleFile
final
int
i
final
boolean
checkLoaded
throws
BuildException
final
File
propsFile
getProject
resolveFile
bundleFile
FileInputStream
ins
try
ins
new
FileInputStream
propsFile
loaded
bundleLastModified
i
propsFile
lastModified
log
propsFile
Project
MSG_DEBUG
loadResourceMap
ins
catch
IOException
ioe
log
propsFile
Project
MSG_DEBUG
if
loaded
checkLoaded
throw
new
BuildException
ioe
getMessage
getLocation
private
void
loadResourceMap
FileInputStream
ins
throws
BuildException
try
BufferedReader
in
InputStreamReader
isr
new
InputStreamReader
ins
bundleEncoding
in
new
BufferedReader
isr
String
line
while
line
in
readLine
if
line
trim
length
line
charAt
line
charAt
int
sepIndex
line
indexOf
if
sepIndex
sepIndex
line
indexOf
if
sepIndex
for
int
k
k
line
length
k
if
Character
isSpaceChar
line
charAt
k
sepIndex
k
break
if
sepIndex
String
key
line
substring
sepIndex
trim
String
value
line
substring
sepIndex
trim
while
value
endsWith
value
value
substring
value
length
if
line
in
readLine
value
value
line
trim
else
break
if
key
length
if
resourceMap
get
key
resourceMap
put
key
value
if
in
in
close
catch
IOException
ioe
throw
new
BuildException
ioe
getMessage
getLocation
private
void
translate
throws
BuildException
int
filesProcessed
for
int
i
i
filesets
size
i
FileSet
fs
FileSet
filesets
elementAt
i
DirectoryScanner
ds
fs
getDirectoryScanner
getProject
String
srcFiles
ds
getIncludedFiles
for
int
j
j
srcFiles
length
j
try
File
dest
FILE_UTILS
resolveFile
toDir
srcFiles
j
try
File
destDir
new
File
dest
getParent
if
destDir
exists
destDir
mkdirs
catch
Exception
e
log
e
getMessage
Project
MSG_DEBUG
destLastModified
dest
lastModified
File
src
FILE_UTILS
resolveFile
ds
getBasedir
srcFiles
j
srcLastModified
src
lastModified
boolean
needsWork
forceOverwrite
destLastModified
srcLastModified
if
needsWork
for
int
icounter
icounter
BUNDLE_MAX_ALTERNATIVES
icounter
needsWork
destLastModified
bundleLastModified
icounter
if
needsWork
break
if
needsWork
log
srcFiles
j
Project
MSG_DEBUG
FileOutputStream
fos
new
FileOutputStream
dest
BufferedWriter
out
new
BufferedWriter
new
OutputStreamWriter
fos
destEncoding
FileInputStream
fis
new
FileInputStream
src
BufferedReader
in
new
BufferedReader
new
InputStreamReader
fis
srcEncoding
String
line
LineTokenizer
lineTokenizer
new
LineTokenizer
lineTokenizer
setIncludeDelims
line
lineTokenizer
getToken
in
while
line
int
startIndex
line
indexOf
startToken
while
startIndex
startIndex
startToken
length
line
length
String
replace
int
endIndex
line
indexOf
endToken
startIndex
startToken
length
if
endIndex
startIndex
else
String
token
line
substring
startIndex
startToken
length
endIndex
boolean
validToken
for
int
k
k
token
length
validToken
k
char
c
token
charAt
k
if
c
c
Character
isSpaceChar
c
validToken
if
validToken
startIndex
else
if
resourceMap
containsKey
token
replace
String
resourceMap
get
token
else
log
token
Project
MSG_VERBOSE
replace
startToken
token
endToken
line
line
substring
startIndex
replace
line
substring
endIndex
endToken
length
startIndex
replace
length
startIndex
line
indexOf
startToken
startIndex
out
write
line
line
lineTokenizer
getToken
in
if
in
in
close
if
out
out
close
filesProcessed
else
log
srcFiles
j
Project
MSG_VERBOSE
catch
IOException
ioe
throw
new
BuildException
ioe
getMessage
getLocation
log
filesProcessed
Project
MSG_DEBUG
