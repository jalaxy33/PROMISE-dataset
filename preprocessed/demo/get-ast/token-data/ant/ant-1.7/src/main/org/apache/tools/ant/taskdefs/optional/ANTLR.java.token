package
org
apache
tools
ant
taskdefs
optional
import
java
io
BufferedReader
import
java
io
ByteArrayOutputStream
import
java
io
File
import
java
io
FileReader
import
java
io
IOException
import
org
apache
tools
ant
AntClassLoader
import
org
apache
tools
ant
BuildException
import
org
apache
tools
ant
Project
import
org
apache
tools
ant
Task
import
org
apache
tools
ant
taskdefs
Execute
import
org
apache
tools
ant
taskdefs
LogOutputStream
import
org
apache
tools
ant
taskdefs
PumpStreamHandler
import
org
apache
tools
ant
taskdefs
condition
Os
import
org
apache
tools
ant
types
Commandline
import
org
apache
tools
ant
types
CommandlineJava
import
org
apache
tools
ant
types
Path
import
org
apache
tools
ant
util
JavaEnvUtils
import
org
apache
tools
ant
util
LoaderUtils
import
org
apache
tools
ant
util
TeeOutputStream
import
org
apache
tools
ant
util
FileUtils
public
class
ANTLR
extends
Task
private
CommandlineJava
commandline
new
CommandlineJava
private
File
targetFile
private
File
outputDirectory
private
File
superGrammar
private
boolean
html
private
boolean
diagnostic
private
boolean
trace
private
boolean
traceParser
private
boolean
traceLexer
private
boolean
traceTreeWalker
private
File
workingdir
private
ByteArrayOutputStream
bos
new
ByteArrayOutputStream
private
boolean
debug
private
static
final
FileUtils
FILE_UTILS
FileUtils
getFileUtils
public
ANTLR
commandline
setVm
JavaEnvUtils
getJreExecutable
commandline
setClassname
public
void
setTarget
File
target
log
target
toString
Project
MSG_VERBOSE
this
targetFile
target
public
void
setOutputdirectory
File
outputDirectory
log
outputDirectory
toString
Project
MSG_VERBOSE
this
outputDirectory
outputDirectory
public
void
setGlib
String
superGrammar
String
sg
if
Os
isFamily
sg
superGrammar
replace
else
sg
superGrammar
setGlib
FILE_UTILS
resolveFile
getProject
getBaseDir
sg
public
void
setGlib
File
superGrammar
this
superGrammar
superGrammar
public
void
setDebug
boolean
enable
this
debug
enable
public
void
setHtml
boolean
enable
html
enable
public
void
setDiagnostic
boolean
enable
diagnostic
enable
public
void
setTrace
boolean
enable
trace
enable
public
void
setTraceParser
boolean
enable
traceParser
enable
public
void
setTraceLexer
boolean
enable
traceLexer
enable
public
void
setTraceTreeWalker
boolean
enable
traceTreeWalker
enable
public
void
setFork
boolean
s
public
void
setDir
File
d
this
workingdir
d
public
Path
createClasspath
return
commandline
createClasspath
getProject
createPath
public
Commandline
Argument
createJvmarg
return
commandline
createVmArgument
public
void
init
throws
BuildException
addClasspathEntry
protected
void
addClasspathEntry
String
resource
if
resource
startsWith
resource
resource
substring
else
resource
resource
File
f
LoaderUtils
getResourceSource
getClass
getClassLoader
resource
if
f
log
f
getAbsolutePath
Project
MSG_DEBUG
createClasspath
setLocation
f
else
log
resource
Project
MSG_VERBOSE
public
void
execute
throws
BuildException
validateAttributes
File
generatedFile
getGeneratedFile
boolean
targetIsOutOfDate
targetFile
lastModified
generatedFile
lastModified
boolean
superGrammarIsOutOfDate
superGrammar
superGrammar
lastModified
generatedFile
lastModified
if
targetIsOutOfDate
superGrammarIsOutOfDate
if
targetIsOutOfDate
log
targetFile
generatedFile
Project
MSG_VERBOSE
else
if
superGrammarIsOutOfDate
log
targetFile
superGrammar
generatedFile
Project
MSG_VERBOSE
populateAttributes
commandline
createArgument
setValue
targetFile
toString
log
commandline
describeCommand
Project
MSG_VERBOSE
int
err
run
commandline
getCommandline
if
err
throw
new
BuildException
err
getLocation
else
String
output
bos
toString
if
output
indexOf
throw
new
BuildException
output
getLocation
else
log
generatedFile
Project
MSG_VERBOSE
private
void
populateAttributes
commandline
createArgument
setValue
commandline
createArgument
setValue
outputDirectory
toString
if
superGrammar
commandline
createArgument
setValue
commandline
createArgument
setValue
superGrammar
toString
if
html
commandline
createArgument
setValue
if
diagnostic
commandline
createArgument
setValue
if
trace
commandline
createArgument
setValue
if
traceParser
commandline
createArgument
setValue
if
traceLexer
commandline
createArgument
setValue
if
traceTreeWalker
if
is272
commandline
createArgument
setValue
else
commandline
createArgument
setValue
if
debug
commandline
createArgument
setValue
private
void
validateAttributes
throws
BuildException
if
targetFile
targetFile
isFile
throw
new
BuildException
targetFile
if
outputDirectory
setOutputdirectory
new
File
targetFile
getParent
if
outputDirectory
isDirectory
throw
new
BuildException
outputDirectory
private
File
getGeneratedFile
throws
BuildException
String
generatedFileName
try
BufferedReader
in
new
BufferedReader
new
FileReader
targetFile
String
line
while
line
in
readLine
int
extendsIndex
line
indexOf
if
line
startsWith
extendsIndex
generatedFileName
line
substring
extendsIndex
trim
break
in
close
catch
Exception
e
throw
new
BuildException
e
if
generatedFileName
throw
new
BuildException
return
new
File
outputDirectory
generatedFileName
html
private
int
run
String
command
throws
BuildException
PumpStreamHandler
psh
new
PumpStreamHandler
new
LogOutputStream
this
Project
MSG_INFO
new
TeeOutputStream
new
LogOutputStream
this
Project
MSG_WARN
bos
Execute
exe
new
Execute
psh
exe
setAntRun
getProject
if
workingdir
exe
setWorkingDirectory
workingdir
exe
setCommandline
command
try
return
exe
execute
catch
IOException
e
throw
new
BuildException
e
getLocation
finally
FileUtils
close
bos
protected
boolean
is272
AntClassLoader
l
try
l
getProject
createClassLoader
commandline
getClasspath
l
loadClass
return
catch
ClassNotFoundException
e
return
finally
if
l
l
cleanup
