package
org
apache
tools
ant
taskdefs
import
java
io
File
import
java
io
Reader
import
java
io
InputStream
import
java
io
IOException
import
java
io
PrintStream
import
java
io
OutputStream
import
java
io
StringReader
import
java
io
BufferedReader
import
java
io
InputStreamReader
import
java
io
PipedOutputStream
import
java
io
ByteArrayInputStream
import
java
io
ByteArrayOutputStream
import
java
util
Arrays
import
java
util
Vector
import
org
apache
tools
ant
Project
import
org
apache
tools
ant
ProjectComponent
import
org
apache
tools
ant
Task
import
org
apache
tools
ant
BuildException
import
org
apache
tools
ant
filters
util
ChainReaderHelper
import
org
apache
tools
ant
util
StringUtils
import
org
apache
tools
ant
util
TeeOutputStream
import
org
apache
tools
ant
util
ReaderInputStream
import
org
apache
tools
ant
util
LeadPipeInputStream
import
org
apache
tools
ant
util
LazyFileOutputStream
import
org
apache
tools
ant
util
OutputStreamFunneler
import
org
apache
tools
ant
util
ConcatFileInputStream
import
org
apache
tools
ant
util
KeepAliveOutputStream
public
class
Redirector
private
static
final
String
DEFAULT_ENCODING
System
getProperty
private
class
PropertyOutputStream
extends
ByteArrayOutputStream
private
String
property
private
boolean
closed
PropertyOutputStream
String
property
super
this
property
property
public
void
close
throws
IOException
if
closed
append
appendProperties
setPropertyFromBAOS
this
property
closed
private
File
input
private
File
out
private
File
error
private
boolean
logError
private
PropertyOutputStream
baos
private
PropertyOutputStream
errorBaos
private
String
outputProperty
private
String
errorProperty
private
String
inputString
private
boolean
append
private
boolean
alwaysLog
private
boolean
createEmptyFiles
private
ProjectComponent
managingTask
private
OutputStream
outputStream
private
OutputStream
errorStream
private
InputStream
inputStream
private
PrintStream
outPrintStream
private
PrintStream
errorPrintStream
private
Vector
outputFilterChains
private
Vector
errorFilterChains
private
Vector
inputFilterChains
private
String
outputEncoding
DEFAULT_ENCODING
private
String
errorEncoding
DEFAULT_ENCODING
private
String
inputEncoding
DEFAULT_ENCODING
private
boolean
appendProperties
private
ThreadGroup
threadGroup
new
ThreadGroup
private
boolean
logInputString
public
Redirector
Task
managingTask
this
ProjectComponent
managingTask
public
Redirector
ProjectComponent
managingTask
this
managingTask
managingTask
public
void
setInput
File
input
setInput
input
new
File
input
public
synchronized
void
setInput
File
input
this
input
input
public
synchronized
void
setInputString
String
inputString
this
inputString
inputString
public
void
setLogInputString
boolean
logInputString
this
logInputString
logInputString
void
setInputStream
InputStream
inputStream
this
inputStream
inputStream
public
void
setOutput
File
out
setOutput
out
new
File
out
public
synchronized
void
setOutput
File
out
this
out
out
public
synchronized
void
setOutputEncoding
String
outputEncoding
if
outputEncoding
throw
new
IllegalArgumentException
else
this
outputEncoding
outputEncoding
public
synchronized
void
setErrorEncoding
String
errorEncoding
if
errorEncoding
throw
new
IllegalArgumentException
else
this
errorEncoding
errorEncoding
public
synchronized
void
setInputEncoding
String
inputEncoding
if
inputEncoding
throw
new
IllegalArgumentException
else
this
inputEncoding
inputEncoding
public
synchronized
void
setLogError
boolean
logError
this
logError
logError
public
synchronized
void
setAppendProperties
boolean
appendProperties
this
appendProperties
appendProperties
public
void
setError
File
error
setError
error
new
File
error
public
synchronized
void
setError
File
error
this
error
error
public
synchronized
void
setOutputProperty
String
outputProperty
if
outputProperty
outputProperty
equals
this
outputProperty
this
outputProperty
outputProperty
baos
public
synchronized
void
setAppend
boolean
append
this
append
append
public
synchronized
void
setAlwaysLog
boolean
alwaysLog
this
alwaysLog
alwaysLog
public
synchronized
void
setCreateEmptyFiles
boolean
createEmptyFiles
this
createEmptyFiles
createEmptyFiles
public
synchronized
void
setErrorProperty
String
errorProperty
if
errorProperty
errorProperty
equals
this
errorProperty
this
errorProperty
errorProperty
errorBaos
public
synchronized
void
setInputFilterChains
Vector
inputFilterChains
this
inputFilterChains
inputFilterChains
public
synchronized
void
setOutputFilterChains
Vector
outputFilterChains
this
outputFilterChains
outputFilterChains
public
synchronized
void
setErrorFilterChains
Vector
errorFilterChains
this
errorFilterChains
errorFilterChains
private
void
setPropertyFromBAOS
ByteArrayOutputStream
baos
String
propertyName
throws
IOException
BufferedReader
in
new
BufferedReader
new
StringReader
Execute
toString
baos
String
line
StringBuffer
val
new
StringBuffer
while
line
in
readLine
if
val
length
val
append
StringUtils
LINE_SEP
val
append
line
managingTask
getProject
setNewProperty
propertyName
val
toString
public
synchronized
void
createStreams
if
out
out
length
String
logHead
new
StringBuffer
append
append
append
toString
outputStream
foldFiles
out
logHead
Project
MSG_VERBOSE
if
outputProperty
if
baos
baos
new
PropertyOutputStream
outputProperty
managingTask
log
outputProperty
Project
MSG_VERBOSE
OutputStream
keepAliveOutput
new
KeepAliveOutputStream
baos
outputStream
outputStream
keepAliveOutput
new
TeeOutputStream
outputStream
keepAliveOutput
else
baos
if
error
error
length
String
logHead
new
StringBuffer
append
append
append
toString
errorStream
foldFiles
error
logHead
Project
MSG_VERBOSE
else
if
logError
outputStream
long
funnelTimeout
OutputStreamFunneler
funneler
new
OutputStreamFunneler
outputStream
funnelTimeout
try
outputStream
funneler
getFunnelInstance
errorStream
funneler
getFunnelInstance
catch
IOException
eyeOhEx
throw
new
BuildException
eyeOhEx
if
errorProperty
if
errorBaos
errorBaos
new
PropertyOutputStream
errorProperty
managingTask
log
errorProperty
Project
MSG_VERBOSE
OutputStream
keepAliveError
new
KeepAliveOutputStream
errorBaos
errorStream
error
error
length
keepAliveError
new
TeeOutputStream
errorStream
keepAliveError
else
errorBaos
if
alwaysLog
outputStream
OutputStream
outputLog
new
LogOutputStream
managingTask
Project
MSG_INFO
outputStream
outputStream
outputLog
new
TeeOutputStream
outputLog
outputStream
if
alwaysLog
errorStream
OutputStream
errorLog
new
LogOutputStream
managingTask
Project
MSG_WARN
errorStream
errorStream
errorLog
new
TeeOutputStream
errorLog
errorStream
if
outputFilterChains
outputFilterChains
size
outputEncoding
equalsIgnoreCase
inputEncoding
try
LeadPipeInputStream
snk
new
LeadPipeInputStream
snk
setManagingComponent
managingTask
InputStream
outPumpIn
snk
Reader
reader
new
InputStreamReader
outPumpIn
inputEncoding
if
outputFilterChains
outputFilterChains
size
ChainReaderHelper
helper
new
ChainReaderHelper
helper
setProject
managingTask
getProject
helper
setPrimaryReader
reader
helper
setFilterChains
outputFilterChains
reader
helper
getAssembledReader
outPumpIn
new
ReaderInputStream
reader
outputEncoding
Thread
t
new
Thread
threadGroup
new
StreamPumper
outPumpIn
outputStream
t
setPriority
Thread
MAX_PRIORITY
outputStream
new
PipedOutputStream
snk
t
start
catch
IOException
eyeOhEx
throw
new
BuildException
eyeOhEx
if
errorFilterChains
errorFilterChains
size
errorEncoding
equalsIgnoreCase
inputEncoding
try
LeadPipeInputStream
snk
new
LeadPipeInputStream
snk
setManagingComponent
managingTask
InputStream
errPumpIn
snk
Reader
reader
new
InputStreamReader
errPumpIn
inputEncoding
if
errorFilterChains
errorFilterChains
size
ChainReaderHelper
helper
new
ChainReaderHelper
helper
setProject
managingTask
getProject
helper
setPrimaryReader
reader
helper
setFilterChains
errorFilterChains
reader
helper
getAssembledReader
errPumpIn
new
ReaderInputStream
reader
errorEncoding
Thread
t
new
Thread
threadGroup
new
StreamPumper
errPumpIn
errorStream
t
setPriority
Thread
MAX_PRIORITY
errorStream
new
PipedOutputStream
snk
t
start
catch
IOException
eyeOhEx
throw
new
BuildException
eyeOhEx
if
input
input
length
managingTask
log
input
length
Project
MSG_VERBOSE
try
inputStream
new
ConcatFileInputStream
input
catch
IOException
eyeOhEx
throw
new
BuildException
eyeOhEx
ConcatFileInputStream
inputStream
setManagingComponent
managingTask
else
if
inputString
StringBuffer
buf
new
StringBuffer
if
logInputString
buf
append
append
inputString
append
else
buf
append
managingTask
log
buf
toString
Project
MSG_VERBOSE
inputStream
new
ByteArrayInputStream
inputString
getBytes
if
inputStream
inputFilterChains
inputFilterChains
size
ChainReaderHelper
helper
new
ChainReaderHelper
helper
setProject
managingTask
getProject
try
helper
setPrimaryReader
new
InputStreamReader
inputStream
inputEncoding
catch
IOException
eyeOhEx
throw
new
BuildException
eyeOhEx
helper
setFilterChains
inputFilterChains
inputStream
new
ReaderInputStream
helper
getAssembledReader
inputEncoding
public
synchronized
ExecuteStreamHandler
createHandler
throws
BuildException
createStreams
return
new
PumpStreamHandler
outputStream
errorStream
inputStream
protected
synchronized
void
handleOutput
String
output
if
outPrintStream
outPrintStream
new
PrintStream
outputStream
outPrintStream
print
output
protected
synchronized
int
handleInput
byte
buffer
int
offset
int
length
throws
IOException
if
inputStream
return
managingTask
getProject
defaultInput
buffer
offset
length
else
return
inputStream
read
buffer
offset
length
protected
synchronized
void
handleFlush
String
output
if
outPrintStream
outPrintStream
new
PrintStream
outputStream
outPrintStream
print
output
outPrintStream
flush
protected
synchronized
void
handleErrorOutput
String
output
if
errorPrintStream
errorPrintStream
new
PrintStream
errorStream
errorPrintStream
print
output
protected
synchronized
void
handleErrorFlush
String
output
if
errorPrintStream
errorPrintStream
new
PrintStream
errorStream
errorPrintStream
print
output
public
synchronized
OutputStream
getOutputStream
return
outputStream
public
synchronized
OutputStream
getErrorStream
return
errorStream
public
synchronized
InputStream
getInputStream
return
inputStream
public
synchronized
void
complete
throws
IOException
System
out
flush
System
err
flush
if
inputStream
inputStream
close
outputStream
flush
outputStream
close
errorStream
flush
errorStream
close
while
threadGroup
activeCount
try
managingTask
log
threadGroup
activeCount
Project
MSG_DEBUG
Thread
thread
new
Thread
threadGroup
activeCount
threadGroup
enumerate
thread
for
int
i
i
thread
length
thread
i
i
try
managingTask
log
thread
i
toString
Project
MSG_DEBUG
catch
NullPointerException
enPeaEx
wait
catch
InterruptedException
eyeEx
setProperties
inputStream
outputStream
errorStream
outPrintStream
errorPrintStream
public
synchronized
void
setProperties
if
baos
try
baos
close
catch
IOException
eyeOhEx
if
errorBaos
try
errorBaos
close
catch
IOException
eyeOhEx
private
OutputStream
foldFiles
File
file
String
logHead
int
loglevel
OutputStream
result
new
LazyFileOutputStream
file
append
createEmptyFiles
managingTask
log
logHead
file
loglevel
char
c
new
char
logHead
length
Arrays
fill
c
String
indent
new
String
c
for
int
i
i
file
length
i
outputStream
new
TeeOutputStream
outputStream
new
LazyFileOutputStream
file
i
append
createEmptyFiles
managingTask
log
indent
file
i
loglevel
return
result
