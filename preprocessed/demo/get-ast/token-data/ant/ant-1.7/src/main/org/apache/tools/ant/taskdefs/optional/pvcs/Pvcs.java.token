package
org
apache
tools
ant
taskdefs
optional
pvcs
import
java
io
BufferedReader
import
java
io
BufferedWriter
import
java
io
File
import
java
io
FileNotFoundException
import
java
io
FileOutputStream
import
java
io
FileReader
import
java
io
FileWriter
import
java
io
IOException
import
java
text
MessageFormat
import
java
text
ParseException
import
java
util
Enumeration
import
java
util
Random
import
java
util
Vector
import
org
apache
tools
ant
BuildException
import
org
apache
tools
ant
Project
import
org
apache
tools
ant
taskdefs
Execute
import
org
apache
tools
ant
taskdefs
ExecuteStreamHandler
import
org
apache
tools
ant
taskdefs
LogOutputStream
import
org
apache
tools
ant
taskdefs
LogStreamHandler
import
org
apache
tools
ant
taskdefs
PumpStreamHandler
import
org
apache
tools
ant
types
Commandline
public
class
Pvcs
extends
org
apache
tools
ant
Task
private
static
final
int
POS_1
private
static
final
int
POS_2
private
static
final
int
POS_3
private
String
pvcsbin
private
String
repository
private
String
pvcsProject
private
Vector
pvcsProjects
private
String
workspace
private
String
force
private
String
promotiongroup
private
String
label
private
String
revision
private
boolean
ignorerc
private
boolean
updateOnly
private
String
filenameFormat
private
String
lineStart
private
String
userId
private
String
config
private
static
final
String
PCLI_EXE
private
static
final
String
GET_EXE
protected
int
runCmd
Commandline
cmd
ExecuteStreamHandler
out
try
Project
aProj
getProject
Execute
exe
new
Execute
out
exe
setAntRun
aProj
exe
setWorkingDirectory
aProj
getBaseDir
exe
setCommandline
cmd
getCommandline
return
exe
execute
catch
java
io
IOException
e
String
msg
cmd
toString
e
getMessage
throw
new
BuildException
msg
getLocation
private
String
getExecutable
String
exe
StringBuffer
correctedExe
new
StringBuffer
if
getPvcsbin
if
pvcsbin
endsWith
File
separator
correctedExe
append
pvcsbin
else
correctedExe
append
pvcsbin
append
File
separator
return
correctedExe
append
exe
toString
public
void
execute
throws
org
apache
tools
ant
BuildException
int
result
if
repository
repository
trim
equals
throw
new
BuildException
Commandline
commandLine
new
Commandline
commandLine
setExecutable
getExecutable
PCLI_EXE
commandLine
createArgument
setValue
commandLine
createArgument
setValue
commandLine
createArgument
setValue
if
getWorkspace
commandLine
createArgument
setValue
getWorkspace
commandLine
createArgument
setValue
getRepository
String
uid
getUserId
if
uid
commandLine
createArgument
setValue
uid
if
getPvcsproject
getPvcsprojects
isEmpty
pvcsProject
if
getPvcsproject
commandLine
createArgument
setValue
getPvcsproject
if
getPvcsprojects
isEmpty
Enumeration
e
getPvcsprojects
elements
while
e
hasMoreElements
String
projectName
PvcsProject
e
nextElement
getName
if
projectName
projectName
trim
equals
throw
new
BuildException
commandLine
createArgument
setValue
projectName
File
tmp
File
tmp2
try
Random
rand
new
Random
System
currentTimeMillis
tmp
new
File
rand
nextLong
FileOutputStream
fos
new
FileOutputStream
tmp
tmp2
new
File
rand
nextLong
log
commandLine
describeCommand
Project
MSG_VERBOSE
try
result
runCmd
commandLine
new
PumpStreamHandler
fos
new
LogOutputStream
this
Project
MSG_WARN
finally
fos
close
if
Execute
isFailure
result
ignorerc
String
msg
commandLine
toString
throw
new
BuildException
msg
getLocation
if
tmp
exists
throw
new
BuildException
log
Project
MSG_INFO
createFolders
tmp
massagePCLI
tmp
tmp2
commandLine
clearArgs
commandLine
setExecutable
getExecutable
GET_EXE
if
getConfig
getConfig
length
commandLine
createArgument
setValue
getConfig
if
getForce
getForce
equals
commandLine
createArgument
setValue
else
commandLine
createArgument
setValue
if
getPromotiongroup
commandLine
createArgument
setValue
getPromotiongroup
else
if
getLabel
commandLine
createArgument
setValue
getLabel
else
if
getRevision
commandLine
createArgument
setValue
getRevision
if
updateOnly
commandLine
createArgument
setValue
commandLine
createArgument
setValue
tmp2
getAbsolutePath
log
Project
MSG_INFO
log
commandLine
toString
Project
MSG_VERBOSE
result
runCmd
commandLine
new
LogStreamHandler
this
Project
MSG_INFO
Project
MSG_WARN
if
result
ignorerc
String
msg
commandLine
toString
result
throw
new
BuildException
msg
getLocation
catch
FileNotFoundException
e
String
msg
commandLine
toString
e
getMessage
throw
new
BuildException
msg
getLocation
catch
IOException
e
String
msg
commandLine
toString
e
getMessage
throw
new
BuildException
msg
getLocation
catch
ParseException
e
String
msg
commandLine
toString
e
getMessage
throw
new
BuildException
msg
getLocation
finally
if
tmp
tmp
delete
if
tmp2
tmp2
delete
private
void
createFolders
File
file
throws
IOException
ParseException
BufferedReader
in
try
in
new
BufferedReader
new
FileReader
file
MessageFormat
mf
new
MessageFormat
getFilenameFormat
String
line
in
readLine
while
line
log
line
Project
MSG_VERBOSE
if
line
startsWith
line
startsWith
line
length
POS_3
line
startsWith
Character
isLetter
line
charAt
POS_1
String
valueOf
line
charAt
POS_2
equals
String
valueOf
line
charAt
POS_3
equals
Object
objs
mf
parse
line
String
f
String
objs
int
index
f
lastIndexOf
File
separator
if
index
File
dir
new
File
f
substring
index
if
dir
exists
log
dir
getAbsolutePath
Project
MSG_VERBOSE
if
dir
mkdirs
log
dir
getAbsolutePath
Project
MSG_INFO
else
log
dir
getAbsolutePath
Project
MSG_INFO
else
log
dir
getAbsolutePath
Project
MSG_VERBOSE
else
log
line
Project
MSG_WARN
else
log
line
Project
MSG_VERBOSE
line
in
readLine
finally
if
in
in
close
private
void
massagePCLI
File
in
File
out
throws
IOException
BufferedReader
inReader
BufferedWriter
outWriter
try
inReader
new
BufferedReader
new
FileReader
in
outWriter
new
BufferedWriter
new
FileWriter
out
String
s
while
s
inReader
readLine
String
sNormal
s
replace
outWriter
write
sNormal
outWriter
newLine
finally
if
inReader
inReader
close
if
outWriter
outWriter
close
public
String
getRepository
return
repository
public
String
getFilenameFormat
return
filenameFormat
public
void
setFilenameFormat
String
f
filenameFormat
f
public
String
getLineStart
return
lineStart
public
void
setLineStart
String
l
lineStart
l
public
void
setRepository
String
repo
repository
repo
public
String
getPvcsproject
return
pvcsProject
public
void
setPvcsproject
String
prj
pvcsProject
prj
public
Vector
getPvcsprojects
return
pvcsProjects
public
String
getWorkspace
return
workspace
public
void
setWorkspace
String
ws
workspace
ws
public
String
getPvcsbin
return
pvcsbin
public
void
setPvcsbin
String
bin
pvcsbin
bin
public
String
getForce
return
force
public
void
setForce
String
f
if
f
f
equalsIgnoreCase
force
else
force
public
String
getPromotiongroup
return
promotiongroup
public
void
setPromotiongroup
String
w
promotiongroup
w
public
String
getLabel
return
label
public
void
setLabel
String
l
label
l
public
String
getRevision
return
revision
public
void
setRevision
String
r
revision
r
public
boolean
getIgnoreReturnCode
return
ignorerc
public
void
setIgnoreReturnCode
boolean
b
ignorerc
b
public
void
addPvcsproject
PvcsProject
p
pvcsProjects
addElement
p
public
boolean
getUpdateOnly
return
updateOnly
public
void
setUpdateOnly
boolean
l
updateOnly
l
public
String
getConfig
return
config
public
void
setConfig
File
f
config
f
toString
public
String
getUserId
return
userId
public
void
setUserId
String
u
userId
u
public
Pvcs
super
pvcsProject
pvcsProjects
new
Vector
workspace
repository
pvcsbin
force
promotiongroup
label
ignorerc
updateOnly
lineStart
filenameFormat
