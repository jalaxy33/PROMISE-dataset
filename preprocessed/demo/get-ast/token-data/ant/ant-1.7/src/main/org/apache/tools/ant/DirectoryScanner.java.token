package
org
apache
tools
ant
import
java
io
File
import
java
io
IOException
import
java
util
ArrayList
import
java
util
Arrays
import
java
util
HashMap
import
java
util
HashSet
import
java
util
Iterator
import
java
util
Map
import
java
util
Set
import
java
util
Vector
import
org
apache
tools
ant
taskdefs
condition
Os
import
org
apache
tools
ant
types
Resource
import
org
apache
tools
ant
types
ResourceFactory
import
org
apache
tools
ant
types
resources
FileResource
import
org
apache
tools
ant
types
selectors
FileSelector
import
org
apache
tools
ant
types
selectors
SelectorScanner
import
org
apache
tools
ant
types
selectors
SelectorUtils
import
org
apache
tools
ant
util
FileUtils
public
class
DirectoryScanner
implements
FileScanner
SelectorScanner
ResourceFactory
private
static
final
boolean
ON_VMS
Os
isFamily
protected
static
final
String
DEFAULTEXCLUDES
private
static
final
FileUtils
FILE_UTILS
FileUtils
getFileUtils
private
static
final
boolean
CS_SCAN_ONLY
new
boolean
private
static
final
boolean
CS_THEN_NON_CS
new
boolean
private
static
Vector
defaultExcludes
new
Vector
static
resetDefaultExcludes
protected
File
basedir
protected
String
includes
protected
String
excludes
protected
FileSelector
selectors
protected
Vector
filesIncluded
protected
Vector
filesNotIncluded
protected
Vector
filesExcluded
protected
Vector
dirsIncluded
protected
Vector
dirsNotIncluded
protected
Vector
dirsExcluded
protected
Vector
filesDeselected
protected
Vector
dirsDeselected
protected
boolean
haveSlowResults
protected
boolean
isCaseSensitive
private
boolean
followSymlinks
protected
boolean
everythingIncluded
private
Map
fileListMap
new
HashMap
private
Set
scannedDirs
new
HashSet
private
Set
includeNonPatterns
new
HashSet
private
Set
excludeNonPatterns
new
HashSet
private
String
includePatterns
private
String
excludePatterns
private
boolean
areNonPatternSetsReady
private
boolean
scanning
private
Object
scanLock
new
Object
private
boolean
slowScanning
private
Object
slowScanLock
new
Object
private
IllegalStateException
illegal
public
DirectoryScanner
protected
static
boolean
matchPatternStart
String
pattern
String
str
return
SelectorUtils
matchPatternStart
pattern
str
protected
static
boolean
matchPatternStart
String
pattern
String
str
boolean
isCaseSensitive
return
SelectorUtils
matchPatternStart
pattern
str
isCaseSensitive
protected
static
boolean
matchPath
String
pattern
String
str
return
SelectorUtils
matchPath
pattern
str
protected
static
boolean
matchPath
String
pattern
String
str
boolean
isCaseSensitive
return
SelectorUtils
matchPath
pattern
str
isCaseSensitive
public
static
boolean
match
String
pattern
String
str
return
SelectorUtils
match
pattern
str
protected
static
boolean
match
String
pattern
String
str
boolean
isCaseSensitive
return
SelectorUtils
match
pattern
str
isCaseSensitive
public
static
String
getDefaultExcludes
return
String
defaultExcludes
toArray
new
String
defaultExcludes
size
public
static
boolean
addDefaultExclude
String
s
if
defaultExcludes
indexOf
s
defaultExcludes
add
s
return
return
public
static
boolean
removeDefaultExclude
String
s
return
defaultExcludes
remove
s
public
static
void
resetDefaultExcludes
defaultExcludes
new
Vector
for
int
i
i
DEFAULTEXCLUDES
length
i
defaultExcludes
add
DEFAULTEXCLUDES
i
public
void
setBasedir
String
basedir
setBasedir
basedir
File
new
File
basedir
replace
File
separatorChar
replace
File
separatorChar
public
synchronized
void
setBasedir
File
basedir
this
basedir
basedir
public
synchronized
File
getBasedir
return
basedir
public
synchronized
boolean
isCaseSensitive
return
isCaseSensitive
public
synchronized
void
setCaseSensitive
boolean
isCaseSensitive
this
isCaseSensitive
isCaseSensitive
public
synchronized
boolean
isFollowSymlinks
return
followSymlinks
public
synchronized
void
setFollowSymlinks
boolean
followSymlinks
this
followSymlinks
followSymlinks
public
synchronized
void
setIncludes
String
includes
if
includes
this
includes
else
this
includes
new
String
includes
length
for
int
i
i
includes
length
i
this
includes
i
normalizePattern
includes
i
public
synchronized
void
setExcludes
String
excludes
if
excludes
this
excludes
else
this
excludes
new
String
excludes
length
for
int
i
i
excludes
length
i
this
excludes
i
normalizePattern
excludes
i
public
synchronized
void
addExcludes
String
excludes
if
excludes
excludes
length
if
this
excludes
this
excludes
length
String
tmp
new
String
excludes
length
this
excludes
length
System
arraycopy
this
excludes
tmp
this
excludes
length
for
int
i
i
excludes
length
i
tmp
this
excludes
length
i
normalizePattern
excludes
i
this
excludes
tmp
else
setExcludes
excludes
private
static
String
normalizePattern
String
p
String
pattern
p
replace
File
separatorChar
replace
File
separatorChar
if
pattern
endsWith
File
separator
pattern
return
pattern
public
synchronized
void
setSelectors
FileSelector
selectors
this
selectors
selectors
public
synchronized
boolean
isEverythingIncluded
return
everythingIncluded
public
void
scan
throws
IllegalStateException
synchronized
scanLock
if
scanning
while
scanning
try
scanLock
wait
catch
InterruptedException
e
continue
if
illegal
throw
illegal
return
scanning
try
synchronized
this
illegal
clearResults
boolean
nullIncludes
includes
includes
nullIncludes
new
String
includes
boolean
nullExcludes
excludes
excludes
nullExcludes
new
String
excludes
if
basedir
if
nullIncludes
return
else
if
basedir
exists
illegal
new
IllegalStateException
basedir
if
basedir
isDirectory
illegal
new
IllegalStateException
basedir
if
illegal
throw
illegal
if
isIncluded
if
isExcluded
if
isSelected
basedir
dirsIncluded
addElement
else
dirsDeselected
addElement
else
dirsExcluded
addElement
else
dirsNotIncluded
addElement
checkIncludePatterns
clearCaches
includes
nullIncludes
includes
excludes
nullExcludes
excludes
finally
synchronized
scanLock
scanning
scanLock
notifyAll
private
void
checkIncludePatterns
Map
newroots
new
HashMap
for
int
i
i
includes
length
i
if
FileUtils
isAbsolutePath
includes
i
if
basedir
SelectorUtils
matchPatternStart
includes
i
basedir
getAbsolutePath
isCaseSensitive
continue
else
if
basedir
continue
newroots
put
SelectorUtils
rtrimWildcardTokens
includes
i
includes
i
if
newroots
containsKey
basedir
scandir
basedir
else
Iterator
it
newroots
entrySet
iterator
File
canonBase
if
basedir
try
canonBase
basedir
getCanonicalFile
catch
IOException
ex
throw
new
BuildException
ex
while
it
hasNext
Map
Entry
entry
Map
Entry
it
next
String
currentelement
String
entry
getKey
if
basedir
FileUtils
isAbsolutePath
currentelement
continue
String
originalpattern
String
entry
getValue
File
myfile
new
File
basedir
currentelement
if
myfile
exists
try
String
path
basedir
myfile
getCanonicalPath
FILE_UTILS
removeLeadingPath
canonBase
myfile
getCanonicalFile
if
path
equals
currentelement
ON_VMS
myfile
findFile
basedir
currentelement
if
myfile
basedir
currentelement
FILE_UTILS
removeLeadingPath
basedir
myfile
catch
IOException
ex
throw
new
BuildException
ex
if
myfile
myfile
exists
isCaseSensitive
File
f
findFile
basedir
currentelement
if
f
f
exists
currentelement
basedir
f
getAbsolutePath
FILE_UTILS
removeLeadingPath
basedir
f
myfile
f
if
myfile
myfile
exists
if
followSymlinks
isSymlink
basedir
currentelement
continue
if
myfile
isDirectory
if
isIncluded
currentelement
currentelement
length
accountForIncludedDir
currentelement
myfile
else
if
currentelement
length
if
currentelement
charAt
currentelement
length
File
separatorChar
currentelement
currentelement
File
separatorChar
scandir
myfile
currentelement
else
boolean
included
isCaseSensitive
originalpattern
equals
currentelement
originalpattern
equalsIgnoreCase
currentelement
if
included
accountForIncludedFile
currentelement
myfile
protected
synchronized
void
clearResults
filesIncluded
new
Vector
filesNotIncluded
new
Vector
filesExcluded
new
Vector
filesDeselected
new
Vector
dirsIncluded
new
Vector
dirsNotIncluded
new
Vector
dirsExcluded
new
Vector
dirsDeselected
new
Vector
everythingIncluded
basedir
scannedDirs
clear
protected
void
slowScan
synchronized
slowScanLock
if
haveSlowResults
return
if
slowScanning
while
slowScanning
try
slowScanLock
wait
catch
InterruptedException
e
return
slowScanning
try
synchronized
this
boolean
nullIncludes
includes
includes
nullIncludes
new
String
includes
boolean
nullExcludes
excludes
excludes
nullExcludes
new
String
excludes
String
excl
new
String
dirsExcluded
size
dirsExcluded
copyInto
excl
String
notIncl
new
String
dirsNotIncluded
size
dirsNotIncluded
copyInto
notIncl
processSlowScan
excl
processSlowScan
notIncl
clearCaches
includes
nullIncludes
includes
excludes
nullExcludes
excludes
finally
synchronized
slowScanLock
haveSlowResults
slowScanning
slowScanLock
notifyAll
private
void
processSlowScan
String
arr
for
int
i
i
arr
length
i
if
couldHoldIncluded
arr
i
scandir
new
File
basedir
arr
i
arr
i
File
separator
protected
void
scandir
File
dir
String
vpath
boolean
fast
if
dir
throw
new
BuildException
else
if
dir
exists
throw
new
BuildException
dir
else
if
dir
isDirectory
throw
new
BuildException
dir
if
fast
hasBeenScanned
vpath
return
String
newfiles
dir
list
if
newfiles
throw
new
BuildException
dir
getAbsolutePath
if
followSymlinks
Vector
noLinks
new
Vector
for
int
i
i
newfiles
length
i
try
if
FILE_UTILS
isSymbolicLink
dir
newfiles
i
String
name
vpath
newfiles
i
File
file
new
File
dir
newfiles
i
file
isDirectory
dirsExcluded
filesExcluded
addElement
name
else
noLinks
addElement
newfiles
i
catch
IOException
ioe
String
msg
System
err
println
msg
noLinks
addElement
newfiles
i
newfiles
String
noLinks
toArray
new
String
noLinks
size
for
int
i
i
newfiles
length
i
String
name
vpath
newfiles
i
File
file
new
File
dir
newfiles
i
if
file
isDirectory
if
isIncluded
name
accountForIncludedDir
name
file
fast
else
everythingIncluded
dirsNotIncluded
addElement
name
if
fast
couldHoldIncluded
name
scandir
file
name
File
separator
fast
if
fast
scandir
file
name
File
separator
fast
else
if
file
isFile
if
isIncluded
name
accountForIncludedFile
name
file
else
everythingIncluded
filesNotIncluded
addElement
name
private
void
accountForIncludedFile
String
name
File
file
processIncluded
name
file
filesIncluded
filesExcluded
filesDeselected
private
void
accountForIncludedDir
String
name
File
file
boolean
fast
processIncluded
name
file
dirsIncluded
dirsExcluded
dirsDeselected
if
fast
couldHoldIncluded
name
contentsExcluded
name
scandir
file
name
File
separator
fast
private
void
processIncluded
String
name
File
file
Vector
inc
Vector
exc
Vector
des
if
inc
contains
name
exc
contains
name
des
contains
name
return
boolean
included
if
isExcluded
name
exc
add
name
else
if
isSelected
name
file
included
inc
add
name
else
des
add
name
everythingIncluded
included
protected
boolean
isIncluded
String
name
ensureNonPatternSetsReady
if
isCaseSensitive
includeNonPatterns
contains
name
includeNonPatterns
contains
name
toUpperCase
return
for
int
i
i
includePatterns
length
i
if
matchPath
includePatterns
i
name
isCaseSensitive
return
return
protected
boolean
couldHoldIncluded
String
name
for
int
i
i
includes
length
i
if
matchPatternStart
includes
i
name
isCaseSensitive
isMorePowerfulThanExcludes
name
includes
i
isDeeper
includes
i
name
return
return
private
boolean
isDeeper
String
pattern
String
name
Vector
p
SelectorUtils
tokenizePath
pattern
Vector
n
SelectorUtils
tokenizePath
name
return
p
contains
p
size
n
size
private
boolean
isMorePowerfulThanExcludes
String
name
String
includepattern
String
soughtexclude
name
File
separator
for
int
counter
counter
excludes
length
counter
if
excludes
counter
equals
soughtexclude
return
return
private
boolean
contentsExcluded
String
name
name
name
endsWith
File
separator
name
name
File
separator
for
int
i
i
excludes
length
i
String
e
excludes
i
if
e
endsWith
SelectorUtils
matchPath
e
substring
e
length
name
isCaseSensitive
return
return
protected
boolean
isExcluded
String
name
ensureNonPatternSetsReady
if
isCaseSensitive
excludeNonPatterns
contains
name
excludeNonPatterns
contains
name
toUpperCase
return
for
int
i
i
excludePatterns
length
i
if
matchPath
excludePatterns
i
name
isCaseSensitive
return
return
protected
boolean
isSelected
String
name
File
file
if
selectors
for
int
i
i
selectors
length
i
if
selectors
i
isSelected
basedir
name
file
return
return
public
synchronized
String
getIncludedFiles
if
filesIncluded
throw
new
IllegalStateException
String
files
new
String
filesIncluded
size
filesIncluded
copyInto
files
Arrays
sort
files
return
files
public
synchronized
int
getIncludedFilesCount
if
filesIncluded
throw
new
IllegalStateException
return
filesIncluded
size
public
synchronized
String
getNotIncludedFiles
slowScan
String
files
new
String
filesNotIncluded
size
filesNotIncluded
copyInto
files
return
files
public
synchronized
String
getExcludedFiles
slowScan
String
files
new
String
filesExcluded
size
filesExcluded
copyInto
files
return
files
public
synchronized
String
getDeselectedFiles
slowScan
String
files
new
String
filesDeselected
size
filesDeselected
copyInto
files
return
files
public
synchronized
String
getIncludedDirectories
if
dirsIncluded
throw
new
IllegalStateException
String
directories
new
String
dirsIncluded
size
dirsIncluded
copyInto
directories
Arrays
sort
directories
return
directories
public
synchronized
int
getIncludedDirsCount
if
dirsIncluded
throw
new
IllegalStateException
return
dirsIncluded
size
public
synchronized
String
getNotIncludedDirectories
slowScan
String
directories
new
String
dirsNotIncluded
size
dirsNotIncluded
copyInto
directories
return
directories
public
synchronized
String
getExcludedDirectories
slowScan
String
directories
new
String
dirsExcluded
size
dirsExcluded
copyInto
directories
return
directories
public
synchronized
String
getDeselectedDirectories
slowScan
String
directories
new
String
dirsDeselected
size
dirsDeselected
copyInto
directories
return
directories
public
synchronized
void
addDefaultExcludes
int
excludesLength
excludes
excludes
length
String
newExcludes
newExcludes
new
String
excludesLength
defaultExcludes
size
if
excludesLength
System
arraycopy
excludes
newExcludes
excludesLength
String
defaultExcludesTemp
getDefaultExcludes
for
int
i
i
defaultExcludesTemp
length
i
newExcludes
i
excludesLength
defaultExcludesTemp
i
replace
File
separatorChar
replace
File
separatorChar
excludes
newExcludes
public
synchronized
Resource
getResource
String
name
return
new
FileResource
basedir
name
private
String
list
File
file
String
files
String
fileListMap
get
file
if
files
files
file
list
if
files
fileListMap
put
file
files
return
files
private
File
findFile
File
base
String
path
boolean
cs
if
FileUtils
isAbsolutePath
path
if
base
String
s
FILE_UTILS
dissect
path
base
new
File
s
path
s
else
File
f
FILE_UTILS
normalize
path
String
s
FILE_UTILS
removeLeadingPath
base
f
if
s
equals
f
getAbsolutePath
return
path
s
return
findFile
base
SelectorUtils
tokenizePath
path
cs
private
File
findFile
File
base
Vector
pathElements
boolean
cs
if
pathElements
size
return
base
String
current
String
pathElements
remove
if
base
return
findFile
new
File
current
pathElements
cs
if
base
isDirectory
return
String
files
list
base
if
files
throw
new
BuildException
base
getAbsolutePath
boolean
matchCase
cs
CS_SCAN_ONLY
CS_THEN_NON_CS
for
int
i
i
matchCase
length
i
for
int
j
j
files
length
j
if
matchCase
i
files
j
equals
current
files
j
equalsIgnoreCase
current
return
findFile
new
File
base
files
j
pathElements
cs
return
private
boolean
isSymlink
File
base
String
path
return
isSymlink
base
SelectorUtils
tokenizePath
path
private
boolean
isSymlink
File
base
Vector
pathElements
if
pathElements
size
String
current
String
pathElements
remove
try
return
FILE_UTILS
isSymbolicLink
base
current
isSymlink
new
File
base
current
pathElements
catch
IOException
ioe
String
msg
System
err
println
msg
return
private
boolean
hasBeenScanned
String
vpath
return
scannedDirs
add
vpath
Set
getScannedDirs
return
scannedDirs
private
synchronized
void
clearCaches
fileListMap
clear
includeNonPatterns
clear
excludeNonPatterns
clear
includePatterns
excludePatterns
areNonPatternSetsReady
private
synchronized
void
ensureNonPatternSetsReady
if
areNonPatternSetsReady
includePatterns
fillNonPatternSet
includeNonPatterns
includes
excludePatterns
fillNonPatternSet
excludeNonPatterns
excludes
areNonPatternSetsReady
private
String
fillNonPatternSet
Set
set
String
patterns
ArrayList
al
new
ArrayList
patterns
length
for
int
i
i
patterns
length
i
if
SelectorUtils
hasWildcards
patterns
i
set
add
isCaseSensitive
patterns
i
patterns
i
toUpperCase
else
al
add
patterns
i
return
set
size
patterns
String
al
toArray
new
String
al
size
