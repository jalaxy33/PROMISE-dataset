package
org
apache
tools
ant
types
import
org
apache
tools
ant
BuildException
import
org
apache
tools
ant
util
StringUtils
import
java
io
File
import
java
util
Vector
import
java
util
StringTokenizer
public
class
Commandline
implements
Cloneable
private
Vector
arguments
new
Vector
private
String
executable
protected
static
final
String
DISCLAIMER
StringUtils
LINE_SEP
StringUtils
LINE_SEP
StringUtils
LINE_SEP
public
Commandline
String
to_process
super
String
tmp
translateCommandline
to_process
if
tmp
tmp
length
setExecutable
tmp
for
int
i
i
tmp
length
i
createArgument
setValue
tmp
i
public
Commandline
super
public
static
class
Argument
private
String
parts
public
void
setValue
String
value
parts
new
String
value
public
void
setLine
String
line
if
line
return
parts
translateCommandline
line
public
void
setPath
Path
value
parts
new
String
value
toString
public
void
setFile
File
value
parts
new
String
value
getAbsolutePath
public
String
getParts
return
parts
public
class
Marker
private
int
position
private
int
realPos
Marker
int
position
this
position
position
public
int
getPosition
if
realPos
realPos
executable
for
int
i
i
position
i
Argument
arg
Argument
arguments
elementAt
i
realPos
arg
getParts
length
return
realPos
public
Argument
createArgument
return
this
createArgument
public
Argument
createArgument
boolean
insertAtStart
Argument
argument
new
Argument
if
insertAtStart
arguments
insertElementAt
argument
else
arguments
addElement
argument
return
argument
public
void
setExecutable
String
executable
if
executable
executable
length
return
this
executable
executable
replace
File
separatorChar
replace
File
separatorChar
public
String
getExecutable
return
executable
public
void
addArguments
String
line
for
int
i
i
line
length
i
createArgument
setValue
line
i
public
String
getCommandline
final
String
args
getArguments
if
executable
return
args
final
String
result
new
String
args
length
result
executable
System
arraycopy
args
result
args
length
return
result
public
String
getArguments
Vector
result
new
Vector
arguments
size
for
int
i
i
arguments
size
i
Argument
arg
Argument
arguments
elementAt
i
String
s
arg
getParts
if
s
for
int
j
j
s
length
j
result
addElement
s
j
String
res
new
String
result
size
result
copyInto
res
return
res
public
String
toString
return
toString
getCommandline
public
static
String
quoteArgument
String
argument
if
argument
indexOf
if
argument
indexOf
throw
new
BuildException
else
return
argument
else
if
argument
indexOf
argument
indexOf
return
argument
else
return
argument
public
static
String
toString
String
line
if
line
line
length
return
final
StringBuffer
result
new
StringBuffer
for
int
i
i
line
length
i
if
i
result
append
result
append
quoteArgument
line
i
return
result
toString
public
static
String
translateCommandline
String
to_process
if
to_process
to_process
length
return
new
String
final
int
normal
final
int
inQuote
final
int
inDoubleQuote
int
state
normal
StringTokenizer
tok
new
StringTokenizer
to_process
Vector
v
new
Vector
StringBuffer
current
new
StringBuffer
while
tok
hasMoreTokens
String
nextTok
tok
nextToken
switch
state
case
inQuote
if
equals
nextTok
state
normal
else
current
append
nextTok
break
case
inDoubleQuote
if
equals
nextTok
state
normal
else
current
append
nextTok
break
default
if
equals
nextTok
state
inQuote
else
if
equals
nextTok
state
inDoubleQuote
else
if
equals
nextTok
if
current
length
v
addElement
current
toString
current
setLength
else
current
append
nextTok
break
if
current
length
v
addElement
current
toString
if
state
inQuote
state
inDoubleQuote
throw
new
BuildException
to_process
String
args
new
String
v
size
v
copyInto
args
return
args
public
int
size
return
getCommandline
length
public
Object
clone
Commandline
c
new
Commandline
c
setExecutable
executable
c
addArguments
getArguments
return
c
public
void
clear
executable
arguments
removeAllElements
public
void
clearArgs
arguments
removeAllElements
public
Marker
createMarker
return
new
Marker
arguments
size
public
String
describeCommand
return
describeCommand
this
public
String
describeArguments
return
describeArguments
this
public
static
String
describeCommand
Commandline
line
return
describeCommand
line
getCommandline
public
static
String
describeArguments
Commandline
line
return
describeArguments
line
getArguments
public
static
String
describeCommand
String
args
if
args
args
length
return
StringBuffer
buf
new
StringBuffer
buf
append
args
buf
append
if
args
length
buf
append
buf
append
describeArguments
args
else
buf
append
DISCLAIMER
return
buf
toString
public
static
String
describeArguments
String
args
return
describeArguments
args
protected
static
String
describeArguments
String
args
int
offset
if
args
args
length
offset
return
StringBuffer
buf
new
StringBuffer
if
args
length
offset
buf
append
buf
append
append
StringUtils
LINE_SEP
for
int
i
offset
i
args
length
i
buf
append
append
args
i
append
append
StringUtils
LINE_SEP
buf
append
DISCLAIMER
return
buf
toString
