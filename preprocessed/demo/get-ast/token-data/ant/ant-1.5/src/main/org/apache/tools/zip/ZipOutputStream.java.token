package
org
apache
tools
zip
import
java
io
OutputStream
import
java
io
IOException
import
java
io
UnsupportedEncodingException
import
java
util
Date
import
java
util
Hashtable
import
java
util
Vector
import
java
util
zip
CRC32
import
java
util
zip
Deflater
import
java
util
zip
DeflaterOutputStream
import
java
util
zip
ZipException
public
class
ZipOutputStream
extends
DeflaterOutputStream
private
ZipEntry
entry
private
String
comment
private
int
level
Deflater
DEFAULT_COMPRESSION
private
boolean
hasCompressionLevelChanged
private
int
method
DEFLATED
private
Vector
entries
new
Vector
private
CRC32
crc
new
CRC32
private
long
written
private
long
dataStart
private
ZipLong
cdOffset
new
ZipLong
private
ZipLong
cdLength
new
ZipLong
private
static
final
byte
ZERO
private
static
final
byte
LZERO
private
Hashtable
offsets
new
Hashtable
private
String
encoding
public
static
final
int
DEFLATED
ZipEntry
DEFLATED
public
static
final
int
STORED
ZipEntry
STORED
public
ZipOutputStream
OutputStream
out
super
out
new
Deflater
Deflater
DEFAULT_COMPRESSION
public
void
setEncoding
String
encoding
this
encoding
encoding
public
String
getEncoding
return
encoding
public
void
finish
throws
IOException
closeEntry
cdOffset
new
ZipLong
written
for
int
i
i
entries
size
i
writeCentralFileHeader
ZipEntry
entries
elementAt
i
cdLength
new
ZipLong
written
cdOffset
getValue
writeCentralDirectoryEnd
offsets
clear
entries
removeAllElements
public
void
closeEntry
throws
IOException
if
entry
return
long
realCrc
crc
getValue
crc
reset
if
entry
getMethod
DEFLATED
def
finish
while
def
finished
deflate
entry
setSize
def
getTotalIn
entry
setComprSize
def
getTotalOut
entry
setCrc
realCrc
def
reset
written
entry
getCompressedSize
else
if
entry
getCrc
realCrc
throw
new
ZipException
entry
getName
Long
toHexString
entry
getCrc
Long
toHexString
realCrc
if
entry
getSize
written
dataStart
throw
new
ZipException
entry
getName
entry
getSize
written
dataStart
writeDataDescriptor
entry
entry
public
void
putNextEntry
ZipEntry
ze
throws
IOException
closeEntry
entry
ze
entries
addElement
entry
if
entry
getMethod
entry
setMethod
method
if
entry
getTime
entry
setTime
System
currentTimeMillis
if
entry
getMethod
STORED
if
entry
getSize
throw
new
ZipException
if
entry
getCrc
throw
new
ZipException
entry
setComprSize
entry
getSize
else
if
hasCompressionLevelChanged
def
setLevel
level
hasCompressionLevelChanged
writeLocalFileHeader
entry
public
void
setComment
String
comment
this
comment
comment
public
void
setLevel
int
level
hasCompressionLevelChanged
this
level
level
this
level
level
public
void
setMethod
int
method
this
method
method
public
void
write
byte
b
int
offset
int
length
throws
IOException
if
entry
getMethod
DEFLATED
super
write
b
offset
length
else
out
write
b
offset
length
written
length
crc
update
b
offset
length
protected
static
final
ZipLong
LFH_SIG
new
ZipLong
protected
static
final
ZipLong
DD_SIG
new
ZipLong
protected
static
final
ZipLong
CFH_SIG
new
ZipLong
protected
static
final
ZipLong
EOCD_SIG
new
ZipLong
protected
void
writeLocalFileHeader
ZipEntry
ze
throws
IOException
offsets
put
ze
new
ZipLong
written
out
write
LFH_SIG
getBytes
written
if
ze
getMethod
DEFLATED
out
write
new
ZipShort
getBytes
out
write
new
ZipShort
getBytes
else
out
write
new
ZipShort
getBytes
out
write
ZERO
written
out
write
new
ZipShort
ze
getMethod
getBytes
written
out
write
toDosTime
new
Date
ze
getTime
getBytes
written
if
ze
getMethod
DEFLATED
out
write
LZERO
out
write
LZERO
out
write
LZERO
else
out
write
new
ZipLong
ze
getCrc
getBytes
out
write
new
ZipLong
ze
getSize
getBytes
out
write
new
ZipLong
ze
getSize
getBytes
written
byte
name
getBytes
ze
getName
out
write
new
ZipShort
name
length
getBytes
written
byte
extra
ze
getLocalFileDataExtra
out
write
new
ZipShort
extra
length
getBytes
written
out
write
name
written
name
length
out
write
extra
written
extra
length
dataStart
written
protected
void
writeDataDescriptor
ZipEntry
ze
throws
IOException
if
ze
getMethod
DEFLATED
return
out
write
DD_SIG
getBytes
out
write
new
ZipLong
entry
getCrc
getBytes
out
write
new
ZipLong
entry
getCompressedSize
getBytes
out
write
new
ZipLong
entry
getSize
getBytes
written
protected
void
writeCentralFileHeader
ZipEntry
ze
throws
IOException
out
write
CFH_SIG
getBytes
written
out
write
new
ZipShort
getBytes
written
if
ze
getMethod
DEFLATED
out
write
new
ZipShort
getBytes
out
write
new
ZipShort
getBytes
else
out
write
new
ZipShort
getBytes
out
write
ZERO
written
out
write
new
ZipShort
ze
getMethod
getBytes
written
out
write
toDosTime
new
Date
ze
getTime
getBytes
written
out
write
new
ZipLong
ze
getCrc
getBytes
out
write
new
ZipLong
ze
getCompressedSize
getBytes
out
write
new
ZipLong
ze
getSize
getBytes
written
byte
name
getBytes
ze
getName
out
write
new
ZipShort
name
length
getBytes
written
byte
extra
ze
getCentralDirectoryExtra
out
write
new
ZipShort
extra
length
getBytes
written
String
comm
ze
getComment
if
comm
comm
byte
comment
getBytes
comm
out
write
new
ZipShort
comment
length
getBytes
written
out
write
ZERO
written
out
write
new
ZipShort
ze
getInternalAttributes
getBytes
written
out
write
new
ZipLong
ze
getExternalAttributes
getBytes
written
out
write
ZipLong
offsets
get
ze
getBytes
written
out
write
name
written
name
length
out
write
extra
written
extra
length
out
write
comment
written
comment
length
protected
void
writeCentralDirectoryEnd
throws
IOException
out
write
EOCD_SIG
getBytes
out
write
ZERO
out
write
ZERO
byte
num
new
ZipShort
entries
size
getBytes
out
write
num
out
write
num
out
write
cdLength
getBytes
out
write
cdOffset
getBytes
byte
data
getBytes
comment
out
write
new
ZipShort
data
length
getBytes
out
write
data
private
static
final
ZipLong
DOS_TIME_MIN
new
ZipLong
protected
static
ZipLong
toDosTime
Date
time
int
year
time
getYear
int
month
time
getMonth
if
year
return
DOS_TIME_MIN
long
value
year
month
time
getDate
time
getHours
time
getMinutes
time
getSeconds
byte
result
new
byte
result
byte
value
result
byte
value
result
byte
value
result
byte
value
return
new
ZipLong
result
protected
byte
getBytes
String
name
throws
ZipException
if
encoding
return
name
getBytes
else
try
return
name
getBytes
encoding
catch
UnsupportedEncodingException
uee
throw
new
ZipException
uee
getMessage
