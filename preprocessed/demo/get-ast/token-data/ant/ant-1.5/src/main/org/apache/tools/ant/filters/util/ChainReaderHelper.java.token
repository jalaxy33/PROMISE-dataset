package
org
apache
tools
ant
filters
util
import
org
apache
tools
ant
AntClassLoader
import
org
apache
tools
ant
BuildException
import
org
apache
tools
ant
Project
import
org
apache
tools
ant
filters
BaseFilterReader
import
org
apache
tools
ant
filters
ChainableReader
import
org
apache
tools
ant
types
AntFilterReader
import
org
apache
tools
ant
types
FilterChain
import
org
apache
tools
ant
types
Path
import
org
apache
tools
ant
types
Parameter
import
org
apache
tools
ant
types
Parameterizable
import
org
apache
tools
ant
util
FileUtils
import
java
lang
reflect
Constructor
import
java
lang
reflect
InvocationTargetException
import
java
io
FilterReader
import
java
io
Reader
import
java
io
IOException
import
java
util
Vector
public
final
class
ChainReaderHelper
public
Reader
primaryReader
public
int
bufferSize
public
Vector
filterChains
new
Vector
private
Project
project
public
final
void
setPrimaryReader
Reader
rdr
primaryReader
rdr
public
final
void
setProject
final
Project
project
this
project
project
public
final
Project
getProject
return
project
public
final
void
setBufferSize
int
size
bufferSize
size
public
final
void
setFilterChains
Vector
fchain
filterChains
fchain
public
final
Reader
getAssembledReader
throws
BuildException
if
primaryReader
throw
new
BuildException
Reader
instream
primaryReader
final
int
filterReadersCount
filterChains
size
final
Vector
finalFilters
new
Vector
for
int
i
i
filterReadersCount
i
final
FilterChain
filterchain
FilterChain
filterChains
elementAt
i
final
Vector
filterReaders
filterchain
getFilterReaders
final
int
readerCount
filterReaders
size
for
int
j
j
readerCount
j
finalFilters
addElement
filterReaders
elementAt
j
final
int
filtersCount
finalFilters
size
if
filtersCount
for
int
i
i
filtersCount
i
Object
o
finalFilters
elementAt
i
if
o
instanceof
AntFilterReader
final
AntFilterReader
filter
AntFilterReader
finalFilters
elementAt
i
final
String
className
filter
getClassName
final
Path
classpath
filter
getClasspath
final
Project
project
filter
getProject
if
className
try
Class
clazz
if
classpath
clazz
Class
forName
className
else
AntClassLoader
al
new
AntClassLoader
project
classpath
clazz
al
loadClass
className
AntClassLoader
initializeClass
clazz
if
clazz
if
FilterReader
class
isAssignableFrom
clazz
throw
new
BuildException
className
final
Constructor
constructors
clazz
getConstructors
int
j
for
j
constructors
length
j
Class
types
constructors
j
getParameterTypes
if
types
length
types
isAssignableFrom
Reader
class
break
final
Reader
rdr
instream
instream
Reader
constructors
j
newInstance
rdr
if
Parameterizable
class
isAssignableFrom
clazz
final
Parameter
params
filter
getParams
Parameterizable
instream
setParameters
params
catch
final
ClassNotFoundException
cnfe
throw
new
BuildException
cnfe
catch
final
InstantiationException
ie
throw
new
BuildException
ie
catch
final
IllegalAccessException
iae
throw
new
BuildException
iae
catch
final
InvocationTargetException
ite
throw
new
BuildException
ite
else
if
o
instanceof
ChainableReader
o
instanceof
Reader
if
project
o
instanceof
BaseFilterReader
BaseFilterReader
o
setProject
project
instream
ChainableReader
o
chain
instream
return
instream
public
final
String
readFully
Reader
rdr
throws
IOException
return
FileUtils
readFully
rdr
bufferSize
