package
org
apache
tools
ant
taskdefs
import
org
apache
tools
ant
BuildException
import
org
apache
tools
ant
Project
import
org
apache
tools
ant
Task
import
org
apache
tools
ant
types
Commandline
import
org
apache
tools
ant
taskdefs
condition
Os
import
java
io
File
import
java
io
IOException
import
java
io
BufferedReader
import
java
io
StringReader
import
java
io
ByteArrayOutputStream
import
java
lang
reflect
InvocationTargetException
import
java
lang
reflect
Method
import
java
util
Vector
public
class
Execute
public
static
final
int
INVALID
Integer
MAX_VALUE
private
String
cmdl
private
String
env
private
int
exitValue
INVALID
private
ExecuteStreamHandler
streamHandler
private
ExecuteWatchdog
watchdog
private
File
workingDirectory
private
Project
project
private
boolean
newEnvironment
private
boolean
useVMLauncher
private
static
String
antWorkingDirectory
System
getProperty
private
static
CommandLauncher
vmLauncher
private
static
CommandLauncher
shellLauncher
private
static
Vector
procEnvironment
private
static
ProcessDestroyer
processDestroyer
new
ProcessDestroyer
static
try
vmLauncher
new
Java13CommandLauncher
catch
NoSuchMethodException
exc
if
Os
isFamily
shellLauncher
new
MacCommandLauncher
new
CommandLauncher
else
if
Os
isFamily
shellLauncher
new
WinNTCommandLauncher
new
CommandLauncher
else
if
Os
isFamily
CommandLauncher
baseLauncher
if
System
getProperty
startsWith
baseLauncher
new
Java11CommandLauncher
else
baseLauncher
new
CommandLauncher
if
Os
isFamily
shellLauncher
new
WinNTCommandLauncher
baseLauncher
else
shellLauncher
new
ScriptCommandLauncher
baseLauncher
else
if
Os
isFamily
CommandLauncher
baseLauncher
if
System
getProperty
startsWith
baseLauncher
new
Java11CommandLauncher
else
baseLauncher
new
CommandLauncher
shellLauncher
new
PerlScriptCommandLauncher
baseLauncher
else
shellLauncher
new
ScriptCommandLauncher
new
CommandLauncher
public
static
synchronized
Vector
getProcEnvironment
if
procEnvironment
return
procEnvironment
procEnvironment
new
Vector
try
ByteArrayOutputStream
out
new
ByteArrayOutputStream
Execute
exe
new
Execute
new
PumpStreamHandler
out
exe
setCommandline
getProcEnvCommand
exe
setNewenvironment
int
retval
exe
execute
if
retval
BufferedReader
in
new
BufferedReader
new
StringReader
toString
out
String
var
String
line
lineSep
System
getProperty
while
line
in
readLine
if
line
indexOf
if
var
var
lineSep
line
else
var
lineSep
line
else
if
var
procEnvironment
addElement
var
var
line
if
var
procEnvironment
addElement
var
catch
java
io
IOException
exc
exc
printStackTrace
return
procEnvironment
private
static
String
getProcEnvCommand
if
Os
isFamily
String
cmd
return
cmd
else
if
Os
isFamily
if
Os
isFamily
String
cmd
return
cmd
else
String
cmd
return
cmd
else
if
Os
isFamily
String
cmd
return
cmd
else
if
Os
isFamily
String
cmd
return
cmd
else
if
Os
isFamily
String
cmd
return
cmd
else
String
cmd
return
cmd
public
static
String
toString
ByteArrayOutputStream
bos
if
Os
isFamily
try
bos
toString
catch
java
io
UnsupportedEncodingException
e
return
bos
toString
public
Execute
this
new
PumpStreamHandler
public
Execute
ExecuteStreamHandler
streamHandler
this
streamHandler
public
Execute
ExecuteStreamHandler
streamHandler
ExecuteWatchdog
watchdog
this
streamHandler
streamHandler
this
watchdog
watchdog
public
String
getCommandline
return
cmdl
public
void
setCommandline
String
commandline
cmdl
commandline
public
void
setNewenvironment
boolean
newenv
newEnvironment
newenv
public
String
getEnvironment
if
env
newEnvironment
return
env
return
patchEnvironment
public
void
setEnvironment
String
env
this
env
env
public
void
setWorkingDirectory
File
wd
if
wd
wd
getAbsolutePath
equals
antWorkingDirectory
workingDirectory
else
workingDirectory
wd
public
void
setAntRun
Project
project
throws
BuildException
this
project
project
public
void
setVMLauncher
boolean
useVMLauncher
this
useVMLauncher
useVMLauncher
public
static
Process
launch
Project
project
String
command
String
env
File
dir
boolean
useVM
throws
IOException
CommandLauncher
launcher
vmLauncher
vmLauncher
shellLauncher
if
useVM
launcher
shellLauncher
return
launcher
exec
project
command
env
dir
public
int
execute
throws
IOException
final
Process
process
launch
project
getCommandline
getEnvironment
workingDirectory
useVMLauncher
try
streamHandler
setProcessInputStream
process
getOutputStream
streamHandler
setProcessOutputStream
process
getInputStream
streamHandler
setProcessErrorStream
process
getErrorStream
catch
IOException
e
process
destroy
throw
e
streamHandler
start
processDestroyer
add
process
if
watchdog
watchdog
start
process
waitFor
process
processDestroyer
remove
process
if
watchdog
watchdog
stop
streamHandler
stop
if
watchdog
watchdog
checkException
return
getExitValue
protected
void
waitFor
Process
process
try
process
waitFor
setExitValue
process
exitValue
catch
InterruptedException
e
protected
void
setExitValue
int
value
exitValue
value
public
int
getExitValue
return
exitValue
public
boolean
killedProcess
return
watchdog
watchdog
killedProcess
private
String
patchEnvironment
Vector
osEnv
Vector
getProcEnvironment
clone
for
int
i
i
env
length
i
int
pos
env
i
indexOf
String
key
env
i
substring
pos
int
size
osEnv
size
for
int
j
j
size
j
if
String
osEnv
elementAt
j
startsWith
key
osEnv
removeElementAt
j
break
osEnv
addElement
env
i
String
result
new
String
osEnv
size
osEnv
copyInto
result
return
result
public
static
void
runCommand
Task
task
String
cmdline
throws
BuildException
try
task
log
Commandline
describeCommand
cmdline
Project
MSG_VERBOSE
Execute
exe
new
Execute
new
LogStreamHandler
task
Project
MSG_INFO
Project
MSG_ERR
exe
setAntRun
task
getProject
exe
setCommandline
cmdline
int
retval
exe
execute
if
retval
throw
new
BuildException
cmdline
retval
task
getLocation
catch
java
io
IOException
exc
throw
new
BuildException
cmdline
exc
task
getLocation
private
static
class
CommandLauncher
public
Process
exec
Project
project
String
cmd
String
env
throws
IOException
if
project
project
log
Commandline
describeCommand
cmd
Project
MSG_DEBUG
return
Runtime
getRuntime
exec
cmd
env
public
Process
exec
Project
project
String
cmd
String
env
File
workingDir
throws
IOException
if
workingDir
return
exec
project
cmd
env
throw
new
IOException
private
static
class
Java11CommandLauncher
extends
CommandLauncher
public
Process
exec
Project
project
String
cmd
String
env
throws
IOException
String
newcmd
new
String
cmd
length
for
int
i
i
cmd
length
i
newcmd
i
Commandline
quoteArgument
cmd
i
if
project
project
log
Commandline
describeCommand
newcmd
Project
MSG_DEBUG
return
Runtime
getRuntime
exec
newcmd
env
private
static
class
Java13CommandLauncher
extends
CommandLauncher
public
Java13CommandLauncher
throws
NoSuchMethodException
_execWithCWD
Runtime
class
getMethod
new
Class
String
class
String
class
File
class
public
Process
exec
Project
project
String
cmd
String
env
File
workingDir
throws
IOException
try
if
project
project
log
Commandline
describeCommand
cmd
Project
MSG_DEBUG
Object
arguments
cmd
env
workingDir
return
Process
_execWithCWD
invoke
Runtime
getRuntime
arguments
catch
InvocationTargetException
exc
Throwable
realexc
exc
getTargetException
if
realexc
instanceof
ThreadDeath
throw
ThreadDeath
realexc
else
if
realexc
instanceof
IOException
throw
IOException
realexc
else
throw
new
BuildException
realexc
catch
Exception
exc
throw
new
BuildException
exc
private
Method
_execWithCWD
private
static
class
CommandLauncherProxy
extends
CommandLauncher
CommandLauncherProxy
CommandLauncher
launcher
_launcher
launcher
public
Process
exec
Project
project
String
cmd
String
env
throws
IOException
return
_launcher
exec
project
cmd
env
private
CommandLauncher
_launcher
private
static
class
WinNTCommandLauncher
extends
CommandLauncherProxy
WinNTCommandLauncher
CommandLauncher
launcher
super
launcher
public
Process
exec
Project
project
String
cmd
String
env
File
workingDir
throws
IOException
File
commandDir
workingDir
if
workingDir
if
project
commandDir
project
getBaseDir
else
return
exec
project
cmd
env
final
int
preCmdLength
String
newcmd
new
String
cmd
length
preCmdLength
newcmd
newcmd
newcmd
newcmd
newcmd
commandDir
getAbsolutePath
newcmd
System
arraycopy
cmd
newcmd
preCmdLength
cmd
length
return
exec
project
newcmd
env
private
static
class
MacCommandLauncher
extends
CommandLauncherProxy
MacCommandLauncher
CommandLauncher
launcher
super
launcher
public
Process
exec
Project
project
String
cmd
String
env
File
workingDir
throws
IOException
if
workingDir
return
exec
project
cmd
env
System
getProperties
put
workingDir
getAbsolutePath
try
return
exec
project
cmd
env
finally
System
getProperties
put
antWorkingDirectory
private
static
class
ScriptCommandLauncher
extends
CommandLauncherProxy
ScriptCommandLauncher
String
script
CommandLauncher
launcher
super
launcher
_script
script
public
Process
exec
Project
project
String
cmd
String
env
File
workingDir
throws
IOException
if
project
if
workingDir
return
exec
project
cmd
env
throw
new
IOException
String
antHome
project
getProperty
if
antHome
throw
new
IOException
String
antRun
project
resolveFile
antHome
File
separator
_script
toString
File
commandDir
workingDir
if
workingDir
project
commandDir
project
getBaseDir
String
newcmd
new
String
cmd
length
newcmd
antRun
newcmd
commandDir
getAbsolutePath
System
arraycopy
cmd
newcmd
cmd
length
return
exec
project
newcmd
env
private
String
_script
private
static
class
PerlScriptCommandLauncher
extends
CommandLauncherProxy
PerlScriptCommandLauncher
String
script
CommandLauncher
launcher
super
launcher
_script
script
public
Process
exec
Project
project
String
cmd
String
env
File
workingDir
throws
IOException
if
project
if
workingDir
return
exec
project
cmd
env
throw
new
IOException
String
antHome
project
getProperty
if
antHome
throw
new
IOException
String
antRun
project
resolveFile
antHome
File
separator
_script
toString
File
commandDir
workingDir
if
workingDir
project
commandDir
project
getBaseDir
String
newcmd
new
String
cmd
length
newcmd
newcmd
antRun
newcmd
commandDir
getAbsolutePath
System
arraycopy
cmd
newcmd
cmd
length
return
exec
project
newcmd
env
private
String
_script
