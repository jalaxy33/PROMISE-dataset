package
org
apache
tools
ant
util
import
org
apache
tools
ant
taskdefs
condition
Os
import
java
io
File
import
java
util
Vector
public
class
JavaEnvUtils
private
static
final
boolean
isDos
Os
isFamily
private
static
final
boolean
isNetware
Os
isName
private
static
final
boolean
isAix
Os
isName
private
static
final
String
javaHome
System
getProperty
private
static
final
FileUtils
fileUtils
FileUtils
newFileUtils
private
static
String
javaVersion
private
static
int
javaVersionNumber
public
static
final
String
JAVA_1_0
public
static
final
String
JAVA_1_1
public
static
final
String
JAVA_1_2
public
static
final
String
JAVA_1_3
public
static
final
String
JAVA_1_4
private
static
Vector
jrePackages
static
try
javaVersion
JAVA_1_0
javaVersionNumber
Class
forName
javaVersion
JAVA_1_1
javaVersionNumber
Class
forName
javaVersion
JAVA_1_2
javaVersionNumber
Class
forName
javaVersion
JAVA_1_3
javaVersionNumber
Class
forName
javaVersion
JAVA_1_4
javaVersionNumber
catch
ClassNotFoundException
cnfe
public
static
String
getJavaVersion
return
javaVersion
public
static
boolean
isJavaVersion
String
version
return
javaVersion
version
public
static
String
getJreExecutable
String
command
if
isNetware
return
command
File
jExecutable
if
isAix
jExecutable
findInDir
javaHome
command
if
jExecutable
jExecutable
findInDir
javaHome
command
if
jExecutable
return
jExecutable
getAbsolutePath
else
return
addExtension
command
public
static
String
getJdkExecutable
String
command
if
isNetware
return
command
File
jExecutable
if
isAix
jExecutable
findInDir
javaHome
command
if
jExecutable
jExecutable
findInDir
javaHome
command
if
jExecutable
return
jExecutable
getAbsolutePath
else
return
getJreExecutable
command
private
static
String
addExtension
String
command
return
command
isDos
private
static
File
findInDir
String
dirName
String
commandName
File
dir
fileUtils
normalize
dirName
File
executable
if
dir
exists
executable
new
File
dir
addExtension
commandName
if
executable
exists
executable
return
executable
private
static
void
buildJrePackages
jrePackages
new
Vector
switch
javaVersionNumber
case
jrePackages
addElement
jrePackages
addElement
jrePackages
addElement
jrePackages
addElement
jrePackages
addElement
jrePackages
addElement
jrePackages
addElement
case
jrePackages
addElement
jrePackages
addElement
jrePackages
addElement
jrePackages
addElement
jrePackages
addElement
jrePackages
addElement
jrePackages
addElement
jrePackages
addElement
jrePackages
addElement
case
jrePackages
addElement
jrePackages
addElement
case
default
jrePackages
addElement
jrePackages
addElement
jrePackages
addElement
break
public
static
Vector
getJrePackageTestCases
Vector
tests
new
Vector
tests
addElement
switch
javaVersionNumber
case
tests
addElement
tests
addElement
tests
addElement
tests
addElement
tests
addElement
tests
addElement
tests
addElement
tests
addElement
case
tests
addElement
tests
addElement
tests
addElement
tests
addElement
tests
addElement
tests
addElement
tests
addElement
tests
addElement
case
tests
addElement
tests
addElement
tests
addElement
case
default
tests
addElement
tests
addElement
tests
addElement
break
return
tests
public
static
Vector
getJrePackages
if
jrePackages
buildJrePackages
return
jrePackages
