package
org
apache
tools
ant
import
java
io
File
import
java
io
IOException
import
java
util
Vector
import
java
util
StringTokenizer
import
org
apache
tools
ant
types
selectors
SelectorScanner
import
org
apache
tools
ant
types
selectors
FileSelector
import
org
apache
tools
ant
types
selectors
SelectorUtils
import
org
apache
tools
ant
util
FileUtils
public
class
DirectoryScanner
implements
FileScanner
SelectorScanner
protected
static
final
String
DEFAULTEXCLUDES
protected
File
basedir
protected
String
includes
protected
String
excludes
protected
FileSelector
selectors
protected
Vector
filesIncluded
protected
Vector
filesNotIncluded
protected
Vector
filesExcluded
protected
Vector
dirsIncluded
protected
Vector
dirsNotIncluded
protected
Vector
dirsExcluded
protected
Vector
filesDeselected
protected
Vector
dirsDeselected
protected
boolean
haveSlowResults
protected
boolean
isCaseSensitive
private
boolean
followSymlinks
private
static
final
FileUtils
fileUtils
FileUtils
newFileUtils
protected
boolean
everythingIncluded
public
DirectoryScanner
protected
static
boolean
matchPatternStart
String
pattern
String
str
return
SelectorUtils
matchPatternStart
pattern
str
protected
static
boolean
matchPatternStart
String
pattern
String
str
boolean
isCaseSensitive
return
SelectorUtils
matchPatternStart
pattern
str
isCaseSensitive
protected
static
boolean
matchPath
String
pattern
String
str
return
SelectorUtils
matchPath
pattern
str
protected
static
boolean
matchPath
String
pattern
String
str
boolean
isCaseSensitive
return
SelectorUtils
matchPath
pattern
str
isCaseSensitive
public
static
boolean
match
String
pattern
String
str
return
SelectorUtils
match
pattern
str
protected
static
boolean
match
String
pattern
String
str
boolean
isCaseSensitive
return
SelectorUtils
match
pattern
str
isCaseSensitive
private
static
Vector
tokenizePath
String
path
return
SelectorUtils
tokenizePath
path
public
void
setBasedir
String
basedir
setBasedir
new
File
basedir
replace
File
separatorChar
replace
File
separatorChar
public
void
setBasedir
File
basedir
this
basedir
basedir
public
File
getBasedir
return
basedir
public
void
setCaseSensitive
boolean
isCaseSensitive
this
isCaseSensitive
isCaseSensitive
public
void
setFollowSymlinks
boolean
followSymlinks
this
followSymlinks
followSymlinks
public
void
setIncludes
String
includes
if
includes
this
includes
else
this
includes
new
String
includes
length
for
int
i
i
includes
length
i
String
pattern
pattern
includes
i
replace
File
separatorChar
replace
File
separatorChar
if
pattern
endsWith
File
separator
pattern
this
includes
i
pattern
public
void
setExcludes
String
excludes
if
excludes
this
excludes
else
this
excludes
new
String
excludes
length
for
int
i
i
excludes
length
i
String
pattern
pattern
excludes
i
replace
File
separatorChar
replace
File
separatorChar
if
pattern
endsWith
File
separator
pattern
this
excludes
i
pattern
public
void
setSelectors
FileSelector
selectors
this
selectors
selectors
public
boolean
isEverythingIncluded
return
everythingIncluded
public
void
scan
throws
IllegalStateException
if
basedir
throw
new
IllegalStateException
if
basedir
exists
throw
new
IllegalStateException
basedir
if
basedir
isDirectory
throw
new
IllegalStateException
basedir
if
includes
includes
new
String
includes
if
excludes
excludes
new
String
filesIncluded
new
Vector
filesNotIncluded
new
Vector
filesExcluded
new
Vector
filesDeselected
new
Vector
dirsIncluded
new
Vector
dirsNotIncluded
new
Vector
dirsExcluded
new
Vector
dirsDeselected
new
Vector
if
isIncluded
if
isExcluded
if
isSelected
basedir
dirsIncluded
addElement
else
dirsDeselected
addElement
else
dirsExcluded
addElement
else
dirsNotIncluded
addElement
scandir
basedir
protected
void
slowScan
if
haveSlowResults
return
String
excl
new
String
dirsExcluded
size
dirsExcluded
copyInto
excl
String
notIncl
new
String
dirsNotIncluded
size
dirsNotIncluded
copyInto
notIncl
for
int
i
i
excl
length
i
if
couldHoldIncluded
excl
i
scandir
new
File
basedir
excl
i
excl
i
File
separator
for
int
i
i
notIncl
length
i
if
couldHoldIncluded
notIncl
i
scandir
new
File
basedir
notIncl
i
notIncl
i
File
separator
haveSlowResults
protected
void
scandir
File
dir
String
vpath
boolean
fast
String
newfiles
dir
list
if
newfiles
throw
new
BuildException
dir
getAbsolutePath
if
followSymlinks
Vector
noLinks
new
Vector
for
int
i
i
newfiles
length
i
try
if
fileUtils
isSymbolicLink
dir
newfiles
i
String
name
vpath
newfiles
i
File
file
new
File
dir
newfiles
i
if
file
isDirectory
dirsExcluded
addElement
name
else
filesExcluded
addElement
name
else
noLinks
addElement
newfiles
i
catch
IOException
ioe
String
msg
System
err
println
msg
noLinks
addElement
newfiles
i
newfiles
new
String
noLinks
size
noLinks
copyInto
newfiles
for
int
i
i
newfiles
length
i
String
name
vpath
newfiles
i
File
file
new
File
dir
newfiles
i
if
file
isDirectory
if
isIncluded
name
if
isExcluded
name
if
isSelected
name
file
dirsIncluded
addElement
name
if
fast
scandir
file
name
File
separator
fast
else
everythingIncluded
dirsDeselected
addElement
name
if
fast
couldHoldIncluded
name
scandir
file
name
File
separator
fast
else
everythingIncluded
dirsExcluded
addElement
name
if
fast
couldHoldIncluded
name
scandir
file
name
File
separator
fast
else
everythingIncluded
dirsNotIncluded
addElement
name
if
fast
couldHoldIncluded
name
scandir
file
name
File
separator
fast
if
fast
scandir
file
name
File
separator
fast
else
if
file
isFile
if
isIncluded
name
if
isExcluded
name
if
isSelected
name
file
filesIncluded
addElement
name
else
everythingIncluded
filesDeselected
addElement
name
else
everythingIncluded
filesExcluded
addElement
name
else
everythingIncluded
filesNotIncluded
addElement
name
protected
boolean
isIncluded
String
name
for
int
i
i
includes
length
i
if
matchPath
includes
i
name
isCaseSensitive
return
return
protected
boolean
couldHoldIncluded
String
name
for
int
i
i
includes
length
i
if
matchPatternStart
includes
i
name
isCaseSensitive
return
return
protected
boolean
isExcluded
String
name
for
int
i
i
excludes
length
i
if
matchPath
excludes
i
name
isCaseSensitive
return
return
protected
boolean
isSelected
String
name
File
file
if
selectors
for
int
i
i
selectors
length
i
if
selectors
i
isSelected
basedir
name
file
return
return
public
String
getIncludedFiles
int
count
filesIncluded
size
String
files
new
String
count
for
int
i
i
count
i
files
i
String
filesIncluded
elementAt
i
return
files
public
String
getNotIncludedFiles
slowScan
int
count
filesNotIncluded
size
String
files
new
String
count
for
int
i
i
count
i
files
i
String
filesNotIncluded
elementAt
i
return
files
public
String
getExcludedFiles
slowScan
int
count
filesExcluded
size
String
files
new
String
count
for
int
i
i
count
i
files
i
String
filesExcluded
elementAt
i
return
files
public
String
getDeselectedFiles
slowScan
int
count
filesDeselected
size
String
files
new
String
count
for
int
i
i
count
i
files
i
String
filesDeselected
elementAt
i
return
files
public
String
getIncludedDirectories
int
count
dirsIncluded
size
String
directories
new
String
count
for
int
i
i
count
i
directories
i
String
dirsIncluded
elementAt
i
return
directories
public
String
getNotIncludedDirectories
slowScan
int
count
dirsNotIncluded
size
String
directories
new
String
count
for
int
i
i
count
i
directories
i
String
dirsNotIncluded
elementAt
i
return
directories
public
String
getExcludedDirectories
slowScan
int
count
dirsExcluded
size
String
directories
new
String
count
for
int
i
i
count
i
directories
i
String
dirsExcluded
elementAt
i
return
directories
public
String
getDeselectedDirectories
slowScan
int
count
dirsDeselected
size
String
directories
new
String
count
for
int
i
i
count
i
directories
i
String
dirsDeselected
elementAt
i
return
directories
public
void
addDefaultExcludes
int
excludesLength
excludes
excludes
length
String
newExcludes
newExcludes
new
String
excludesLength
DEFAULTEXCLUDES
length
if
excludesLength
System
arraycopy
excludes
newExcludes
excludesLength
for
int
i
i
DEFAULTEXCLUDES
length
i
newExcludes
i
excludesLength
DEFAULTEXCLUDES
i
replace
File
separatorChar
replace
File
separatorChar
excludes
newExcludes
