package
org
apache
tools
ant
helper
import
java
io
File
import
java
io
FileInputStream
import
java
io
FileNotFoundException
import
java
io
IOException
import
java
io
UnsupportedEncodingException
import
java
util
Locale
import
org
xml
sax
Locator
import
org
xml
sax
InputSource
import
org
xml
sax
HandlerBase
import
org
xml
sax
SAXException
import
org
xml
sax
SAXParseException
import
org
xml
sax
DocumentHandler
import
org
xml
sax
AttributeList
import
org
xml
sax
helpers
XMLReaderAdapter
import
org
apache
tools
ant
ProjectHelper
import
org
apache
tools
ant
UnknownElement
import
org
apache
tools
ant
Project
import
org
apache
tools
ant
BuildException
import
org
apache
tools
ant
Target
import
org
apache
tools
ant
Task
import
org
apache
tools
ant
RuntimeConfigurable
import
org
apache
tools
ant
IntrospectionHelper
import
org
apache
tools
ant
TaskContainer
import
org
apache
tools
ant
Location
import
org
apache
tools
ant
TaskAdapter
import
org
apache
tools
ant
util
JAXPUtils
public
class
ProjectHelperImpl
extends
ProjectHelper
private
org
xml
sax
Parser
parser
private
Project
project
private
File
buildFile
private
File
buildFileParent
private
Locator
locator
public
void
parse
Project
project
Object
source
throws
BuildException
if
source
instanceof
File
throw
new
BuildException
File
buildFile
File
source
FileInputStream
inputStream
InputSource
inputSource
this
project
project
this
buildFile
new
File
buildFile
getAbsolutePath
buildFileParent
new
File
this
buildFile
getParent
try
try
parser
JAXPUtils
getParser
catch
BuildException
e
parser
new
XMLReaderAdapter
JAXPUtils
getXMLReader
String
uri
buildFile
getAbsolutePath
replace
for
int
index
uri
indexOf
index
index
uri
indexOf
uri
uri
substring
index
uri
substring
index
inputStream
new
FileInputStream
buildFile
inputSource
new
InputSource
inputStream
inputSource
setSystemId
uri
project
log
buildFile
uri
Project
MSG_VERBOSE
HandlerBase
hb
new
RootHandler
this
parser
setDocumentHandler
hb
parser
setEntityResolver
hb
parser
setErrorHandler
hb
parser
setDTDHandler
hb
parser
parse
inputSource
catch
SAXParseException
exc
Location
location
new
Location
exc
getSystemId
exc
getLineNumber
exc
getColumnNumber
Throwable
t
exc
getException
if
t
instanceof
BuildException
BuildException
be
BuildException
t
if
be
getLocation
Location
UNKNOWN_LOCATION
be
setLocation
location
throw
be
throw
new
BuildException
exc
getMessage
t
location
catch
SAXException
exc
Throwable
t
exc
getException
if
t
instanceof
BuildException
throw
BuildException
t
throw
new
BuildException
exc
getMessage
t
catch
FileNotFoundException
exc
throw
new
BuildException
exc
catch
UnsupportedEncodingException
exc
throw
new
BuildException
exc
catch
IOException
exc
throw
new
BuildException
exc
getMessage
exc
finally
if
inputStream
try
inputStream
close
catch
IOException
ioe
static
class
AbstractHandler
extends
HandlerBase
protected
DocumentHandler
parentHandler
ProjectHelperImpl
helperImpl
public
AbstractHandler
ProjectHelperImpl
helperImpl
DocumentHandler
parentHandler
this
parentHandler
parentHandler
this
helperImpl
helperImpl
helperImpl
parser
setDocumentHandler
this
public
void
startElement
String
tag
AttributeList
attrs
throws
SAXParseException
throw
new
SAXParseException
tag
helperImpl
locator
public
void
characters
char
buf
int
start
int
count
throws
SAXParseException
String
s
new
String
buf
start
count
trim
if
s
length
throw
new
SAXParseException
s
helperImpl
locator
protected
void
finished
public
void
endElement
String
name
throws
SAXException
finished
helperImpl
parser
setDocumentHandler
parentHandler
static
class
RootHandler
extends
HandlerBase
ProjectHelperImpl
helperImpl
public
RootHandler
ProjectHelperImpl
helperImpl
this
helperImpl
helperImpl
public
InputSource
resolveEntity
String
publicId
String
systemId
helperImpl
project
log
systemId
Project
MSG_VERBOSE
if
systemId
startsWith
String
path
systemId
substring
int
index
path
indexOf
while
index
path
path
substring
index
path
substring
index
index
path
indexOf
String
entitySystemId
path
index
path
indexOf
while
index
path
path
substring
index
path
substring
index
index
path
indexOf
File
file
new
File
path
if
file
isAbsolute
file
new
File
helperImpl
buildFileParent
path
try
InputSource
inputSource
new
InputSource
new
FileInputStream
file
inputSource
setSystemId
entitySystemId
return
inputSource
catch
FileNotFoundException
fne
helperImpl
project
log
file
getAbsolutePath
Project
MSG_WARN
return
public
void
startElement
String
tag
AttributeList
attrs
throws
SAXParseException
if
tag
equals
new
ProjectHandler
helperImpl
this
init
tag
attrs
else
throw
new
SAXParseException
helperImpl
locator
public
void
setDocumentLocator
Locator
locator
helperImpl
locator
locator
static
class
ProjectHandler
extends
AbstractHandler
public
ProjectHandler
ProjectHelperImpl
helperImpl
DocumentHandler
parentHandler
super
helperImpl
parentHandler
public
void
init
String
tag
AttributeList
attrs
throws
SAXParseException
String
def
String
name
String
id
String
baseDir
for
int
i
i
attrs
getLength
i
String
key
attrs
getName
i
String
value
attrs
getValue
i
if
key
equals
def
value
else
if
key
equals
name
value
else
if
key
equals
id
value
else
if
key
equals
baseDir
value
else
throw
new
SAXParseException
attrs
getName
i
helperImpl
locator
if
def
throw
new
SAXParseException
helperImpl
locator
else
helperImpl
project
setDefaultTarget
def
if
name
helperImpl
project
setName
name
helperImpl
project
addReference
name
helperImpl
project
if
id
helperImpl
project
addReference
id
helperImpl
project
if
helperImpl
project
getProperty
helperImpl
project
setBasedir
helperImpl
project
getProperty
else
if
baseDir
helperImpl
project
setBasedir
helperImpl
buildFileParent
getAbsolutePath
else
if
new
File
baseDir
isAbsolute
helperImpl
project
setBasedir
baseDir
else
helperImpl
project
setBaseDir
helperImpl
project
resolveFile
baseDir
helperImpl
buildFileParent
public
void
startElement
String
name
AttributeList
attrs
throws
SAXParseException
if
name
equals
handleTaskdef
name
attrs
else
if
name
equals
handleTypedef
name
attrs
else
if
name
equals
handleProperty
name
attrs
else
if
name
equals
handleTarget
name
attrs
else
if
helperImpl
project
getDataTypeDefinitions
get
name
handleDataType
name
attrs
else
throw
new
SAXParseException
name
helperImpl
locator
private
void
handleTaskdef
String
name
AttributeList
attrs
throws
SAXParseException
new
TaskHandler
helperImpl
this
init
name
attrs
private
void
handleTypedef
String
name
AttributeList
attrs
throws
SAXParseException
new
TaskHandler
helperImpl
this
init
name
attrs
private
void
handleProperty
String
name
AttributeList
attrs
throws
SAXParseException
new
TaskHandler
helperImpl
this
init
name
attrs
private
void
handleTarget
String
tag
AttributeList
attrs
throws
SAXParseException
new
TargetHandler
helperImpl
this
init
tag
attrs
private
void
handleDataType
String
name
AttributeList
attrs
throws
SAXParseException
new
DataTypeHandler
helperImpl
this
init
name
attrs
static
class
TargetHandler
extends
AbstractHandler
private
Target
target
public
TargetHandler
ProjectHelperImpl
helperImpl
DocumentHandler
parentHandler
super
helperImpl
parentHandler
public
void
init
String
tag
AttributeList
attrs
throws
SAXParseException
String
name
String
depends
String
ifCond
String
unlessCond
String
id
String
description
for
int
i
i
attrs
getLength
i
String
key
attrs
getName
i
String
value
attrs
getValue
i
if
key
equals
name
value
else
if
key
equals
depends
value
else
if
key
equals
ifCond
value
else
if
key
equals
unlessCond
value
else
if
key
equals
id
value
else
if
key
equals
description
value
else
throw
new
SAXParseException
key
helperImpl
locator
if
name
throw
new
SAXParseException
helperImpl
locator
target
new
Target
target
setName
name
target
setIf
ifCond
target
setUnless
unlessCond
target
setDescription
description
helperImpl
project
addTarget
name
target
if
id
id
equals
helperImpl
project
addReference
id
target
if
depends
length
target
setDepends
depends
public
void
startElement
String
name
AttributeList
attrs
throws
SAXParseException
if
helperImpl
project
getDataTypeDefinitions
get
name
new
DataTypeHandler
helperImpl
this
target
init
name
attrs
else
new
TaskHandler
helperImpl
this
target
target
init
name
attrs
static
class
TaskHandler
extends
AbstractHandler
private
Target
target
private
TaskContainer
container
private
Task
task
private
RuntimeConfigurable
parentWrapper
private
RuntimeConfigurable
wrapper
public
TaskHandler
ProjectHelperImpl
helperImpl
DocumentHandler
parentHandler
TaskContainer
container
RuntimeConfigurable
parentWrapper
Target
target
super
helperImpl
parentHandler
this
container
container
this
parentWrapper
parentWrapper
this
target
target
public
void
init
String
tag
AttributeList
attrs
throws
SAXParseException
try
task
helperImpl
project
createTask
tag
catch
BuildException
e
if
task
task
new
UnknownElement
tag
task
setProject
helperImpl
project
task
setTaskName
tag
task
setLocation
new
Location
helperImpl
locator
getSystemId
helperImpl
locator
getLineNumber
helperImpl
locator
getColumnNumber
helperImpl
configureId
task
attrs
if
target
task
setOwningTarget
target
container
addTask
task
task
init
wrapper
task
getRuntimeConfigurableWrapper
wrapper
setAttributes
attrs
if
parentWrapper
parentWrapper
addChild
wrapper
else
task
init
configure
task
attrs
helperImpl
project
protected
void
finished
if
task
target
task
execute
public
void
characters
char
buf
int
start
int
count
throws
SAXParseException
if
wrapper
try
ProjectHelper
addText
helperImpl
project
task
buf
start
count
catch
BuildException
exc
throw
new
SAXParseException
exc
getMessage
helperImpl
locator
exc
else
wrapper
addText
buf
start
count
public
void
startElement
String
name
AttributeList
attrs
throws
SAXParseException
if
task
instanceof
TaskContainer
new
TaskHandler
helperImpl
this
TaskContainer
task
wrapper
target
init
name
attrs
else
new
NestedElementHandler
helperImpl
this
task
wrapper
target
init
name
attrs
static
class
NestedElementHandler
extends
AbstractHandler
private
Object
parent
private
Object
child
private
RuntimeConfigurable
parentWrapper
private
RuntimeConfigurable
childWrapper
private
Target
target
public
NestedElementHandler
ProjectHelperImpl
helperImpl
DocumentHandler
parentHandler
Object
parent
RuntimeConfigurable
parentWrapper
Target
target
super
helperImpl
parentHandler
if
parent
instanceof
TaskAdapter
this
parent
TaskAdapter
parent
getProxy
else
this
parent
parent
this
parentWrapper
parentWrapper
this
target
target
public
void
init
String
propType
AttributeList
attrs
throws
SAXParseException
Class
parentClass
parent
getClass
IntrospectionHelper
ih
IntrospectionHelper
getHelper
parentClass
try
String
elementName
propType
toLowerCase
Locale
US
if
parent
instanceof
UnknownElement
UnknownElement
uc
new
UnknownElement
elementName
uc
setProject
helperImpl
project
UnknownElement
parent
addChild
uc
child
uc
else
child
ih
createElement
helperImpl
project
parent
elementName
helperImpl
configureId
child
attrs
if
parentWrapper
childWrapper
new
RuntimeConfigurable
child
propType
childWrapper
setAttributes
attrs
parentWrapper
addChild
childWrapper
else
configure
child
attrs
helperImpl
project
ih
storeElement
helperImpl
project
parent
child
elementName
catch
BuildException
exc
throw
new
SAXParseException
exc
getMessage
helperImpl
locator
exc
public
void
characters
char
buf
int
start
int
count
throws
SAXParseException
if
parentWrapper
try
ProjectHelper
addText
helperImpl
project
child
buf
start
count
catch
BuildException
exc
throw
new
SAXParseException
exc
getMessage
helperImpl
locator
exc
else
childWrapper
addText
buf
start
count
public
void
startElement
String
name
AttributeList
attrs
throws
SAXParseException
if
child
instanceof
TaskContainer
new
TaskHandler
helperImpl
this
TaskContainer
child
childWrapper
target
init
name
attrs
else
new
NestedElementHandler
helperImpl
this
child
childWrapper
target
init
name
attrs
static
class
DataTypeHandler
extends
AbstractHandler
private
Target
target
private
Object
element
private
RuntimeConfigurable
wrapper
public
DataTypeHandler
ProjectHelperImpl
helperImpl
DocumentHandler
parentHandler
this
helperImpl
parentHandler
public
DataTypeHandler
ProjectHelperImpl
helperImpl
DocumentHandler
parentHandler
Target
target
super
helperImpl
parentHandler
this
target
target
public
void
init
String
propType
AttributeList
attrs
throws
SAXParseException
try
element
helperImpl
project
createDataType
propType
if
element
throw
new
BuildException
propType
if
target
wrapper
new
RuntimeConfigurable
element
propType
wrapper
setAttributes
attrs
target
addDataType
wrapper
else
configure
element
attrs
helperImpl
project
helperImpl
configureId
element
attrs
catch
BuildException
exc
throw
new
SAXParseException
exc
getMessage
helperImpl
locator
exc
public
void
characters
char
buf
int
start
int
count
throws
SAXParseException
try
ProjectHelper
addText
helperImpl
project
element
buf
start
count
catch
BuildException
exc
throw
new
SAXParseException
exc
getMessage
helperImpl
locator
exc
public
void
startElement
String
name
AttributeList
attrs
throws
SAXParseException
new
NestedElementHandler
helperImpl
this
element
wrapper
target
init
name
attrs
private
void
configureId
Object
target
AttributeList
attr
String
id
attr
getValue
if
id
project
addReference
id
target
