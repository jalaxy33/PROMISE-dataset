package
org
apache
tools
ant
util
import
java
io
BufferedInputStream
import
java
io
BufferedReader
import
java
io
BufferedWriter
import
java
io
File
import
java
io
FileInputStream
import
java
io
FileOutputStream
import
java
io
FileReader
import
java
io
FileWriter
import
java
io
IOException
import
java
io
InputStream
import
java
io
InputStreamReader
import
java
io
OutputStreamWriter
import
java
io
Reader
import
java
lang
reflect
Method
import
java
text
DecimalFormat
import
java
util
Random
import
java
util
Stack
import
java
util
StringTokenizer
import
java
util
Vector
import
java
net
URL
import
java
net
MalformedURLException
import
org
apache
tools
ant
BuildException
import
org
apache
tools
ant
Project
import
org
apache
tools
ant
filters
util
ChainReaderHelper
import
org
apache
tools
ant
types
FilterSetCollection
import
org
apache
tools
ant
taskdefs
condition
Os
public
class
FileUtils
private
static
Random
rand
new
Random
System
currentTimeMillis
private
static
Object
lockReflection
new
Object
private
static
java
lang
reflect
Method
setLastModified
private
boolean
onNetWare
Os
isFamily
public
static
FileUtils
newFileUtils
return
new
FileUtils
protected
FileUtils
public
URL
getFileURL
File
file
throws
MalformedURLException
String
uri
file
getAbsolutePath
replace
for
int
i
uri
indexOf
i
i
uri
indexOf
uri
uri
substring
i
uri
substring
i
if
file
isDirectory
uri
return
new
URL
uri
public
void
copyFile
String
sourceFile
String
destFile
throws
IOException
copyFile
new
File
sourceFile
new
File
destFile
public
void
copyFile
String
sourceFile
String
destFile
FilterSetCollection
filters
throws
IOException
copyFile
new
File
sourceFile
new
File
destFile
filters
public
void
copyFile
String
sourceFile
String
destFile
FilterSetCollection
filters
boolean
overwrite
throws
IOException
copyFile
new
File
sourceFile
new
File
destFile
filters
overwrite
public
void
copyFile
String
sourceFile
String
destFile
FilterSetCollection
filters
boolean
overwrite
boolean
preserveLastModified
throws
IOException
copyFile
new
File
sourceFile
new
File
destFile
filters
overwrite
preserveLastModified
public
void
copyFile
String
sourceFile
String
destFile
FilterSetCollection
filters
boolean
overwrite
boolean
preserveLastModified
String
encoding
throws
IOException
copyFile
new
File
sourceFile
new
File
destFile
filters
overwrite
preserveLastModified
encoding
public
void
copyFile
String
sourceFile
String
destFile
FilterSetCollection
filters
Vector
filterChains
boolean
overwrite
boolean
preserveLastModified
String
encoding
Project
project
throws
IOException
copyFile
new
File
sourceFile
new
File
destFile
filters
filterChains
overwrite
preserveLastModified
encoding
project
public
void
copyFile
File
sourceFile
File
destFile
throws
IOException
copyFile
sourceFile
destFile
public
void
copyFile
File
sourceFile
File
destFile
FilterSetCollection
filters
throws
IOException
copyFile
sourceFile
destFile
filters
public
void
copyFile
File
sourceFile
File
destFile
FilterSetCollection
filters
boolean
overwrite
throws
IOException
copyFile
sourceFile
destFile
filters
overwrite
public
void
copyFile
File
sourceFile
File
destFile
FilterSetCollection
filters
boolean
overwrite
boolean
preserveLastModified
throws
IOException
copyFile
sourceFile
destFile
filters
overwrite
preserveLastModified
public
void
copyFile
File
sourceFile
File
destFile
FilterSetCollection
filters
boolean
overwrite
boolean
preserveLastModified
String
encoding
throws
IOException
copyFile
sourceFile
destFile
filters
overwrite
preserveLastModified
encoding
public
void
copyFile
File
sourceFile
File
destFile
FilterSetCollection
filters
Vector
filterChains
boolean
overwrite
boolean
preserveLastModified
String
encoding
Project
project
throws
IOException
if
overwrite
destFile
exists
destFile
lastModified
sourceFile
lastModified
if
destFile
exists
destFile
isFile
destFile
delete
File
parent
getParentFile
destFile
if
parent
exists
parent
mkdirs
final
boolean
filterSetsAvailable
filters
filters
hasFilters
final
boolean
filterChainsAvailable
filterChains
filterChains
size
if
filterSetsAvailable
filterChainsAvailable
BufferedReader
in
BufferedWriter
out
try
if
encoding
in
new
BufferedReader
new
FileReader
sourceFile
out
new
BufferedWriter
new
FileWriter
destFile
else
in
new
BufferedReader
new
InputStreamReader
new
FileInputStream
sourceFile
encoding
out
new
BufferedWriter
new
OutputStreamWriter
new
FileOutputStream
destFile
encoding
if
filterChainsAvailable
ChainReaderHelper
crh
new
ChainReaderHelper
crh
setBufferSize
crh
setPrimaryReader
in
crh
setFilterChains
filterChains
crh
setProject
project
Reader
rdr
crh
getAssembledReader
in
new
BufferedReader
rdr
int
length
String
newline
String
line
in
readLine
while
line
if
line
length
out
newLine
else
if
filterSetsAvailable
newline
filters
replaceTokens
line
else
newline
line
out
write
newline
out
newLine
line
in
readLine
finally
if
out
out
close
if
in
in
close
else
FileInputStream
in
FileOutputStream
out
try
in
new
FileInputStream
sourceFile
out
new
FileOutputStream
destFile
byte
buffer
new
byte
int
count
do
out
write
buffer
count
count
in
read
buffer
buffer
length
while
count
finally
if
out
out
close
if
in
in
close
if
preserveLastModified
setFileLastModified
destFile
sourceFile
lastModified
protected
final
Method
getSetLastModified
if
JavaEnvUtils
isJavaVersion
JavaEnvUtils
JAVA_1_1
return
if
setLastModified
synchronized
lockReflection
if
setLastModified
try
setLastModified
java
io
File
class
getMethod
new
Class
Long
TYPE
catch
NoSuchMethodException
nse
throw
new
BuildException
nse
return
setLastModified
public
void
setFileLastModified
File
file
long
time
throws
BuildException
if
JavaEnvUtils
isJavaVersion
JavaEnvUtils
JAVA_1_1
return
Long
times
new
Long
if
time
times
new
Long
System
currentTimeMillis
else
times
new
Long
time
try
getSetLastModified
invoke
file
times
catch
java
lang
reflect
InvocationTargetException
ite
Throwable
nested
ite
getTargetException
throw
new
BuildException
file
nested
catch
Throwable
other
throw
new
BuildException
file
other
public
File
resolveFile
File
file
String
filename
filename
filename
replace
File
separatorChar
replace
File
separatorChar
if
onNetWare
if
filename
startsWith
File
separator
filename
length
Character
isLetter
filename
charAt
filename
charAt
return
normalize
filename
else
int
colon
filename
indexOf
if
filename
startsWith
File
separator
colon
return
normalize
filename
if
file
return
new
File
filename
File
helpFile
new
File
file
getAbsolutePath
StringTokenizer
tok
new
StringTokenizer
filename
File
separator
while
tok
hasMoreTokens
String
part
tok
nextToken
if
part
equals
helpFile
getParentFile
helpFile
if
helpFile
String
msg
filename
file
getPath
throw
new
BuildException
msg
else
if
part
equals
else
helpFile
new
File
helpFile
part
return
new
File
helpFile
getAbsolutePath
public
File
normalize
String
path
String
orig
path
path
path
replace
File
separatorChar
replace
File
separatorChar
int
colon
path
indexOf
if
onNetWare
if
path
startsWith
File
separator
path
length
Character
isLetter
path
charAt
colon
String
msg
path
throw
new
BuildException
msg
else
if
path
startsWith
File
separator
colon
String
msg
path
throw
new
BuildException
msg
boolean
dosWithDrive
String
root
if
onNetWare
path
length
Character
isLetter
path
charAt
path
charAt
onNetWare
colon
dosWithDrive
char
ca
path
replace
toCharArray
StringBuffer
sbRoot
new
StringBuffer
for
int
i
i
colon
i
sbRoot
append
Character
toUpperCase
ca
i
sbRoot
append
if
colon
path
length
sbRoot
append
File
separatorChar
root
sbRoot
toString
StringBuffer
sbPath
new
StringBuffer
for
int
i
colon
i
ca
length
i
if
ca
i
ca
i
ca
i
sbPath
append
ca
i
path
sbPath
toString
replace
File
separatorChar
else
if
path
length
root
File
separator
path
else
if
path
charAt
File
separatorChar
root
File
separator
File
separator
path
path
substring
else
root
File
separator
path
path
substring
Stack
s
new
Stack
s
push
root
StringTokenizer
tok
new
StringTokenizer
path
File
separator
while
tok
hasMoreTokens
String
thisToken
tok
nextToken
if
equals
thisToken
continue
else
if
equals
thisToken
if
s
size
throw
new
BuildException
orig
else
s
pop
else
s
push
thisToken
StringBuffer
sb
new
StringBuffer
for
int
i
i
s
size
i
if
i
sb
append
File
separatorChar
sb
append
s
elementAt
i
path
sb
toString
if
dosWithDrive
path
path
replace
return
new
File
path
public
File
createTempFile
String
prefix
String
suffix
File
parentDir
File
result
String
parent
if
parentDir
parent
parentDir
getPath
DecimalFormat
fmt
new
DecimalFormat
synchronized
rand
do
result
new
File
parent
prefix
fmt
format
rand
nextInt
suffix
while
result
exists
return
result
public
boolean
contentEquals
File
f1
File
f2
throws
IOException
if
f1
exists
f2
exists
return
if
f1
exists
return
if
f1
isDirectory
f2
isDirectory
return
if
f1
equals
f2
return
if
f1
length
f2
length
return
InputStream
in1
InputStream
in2
try
in1
new
BufferedInputStream
new
FileInputStream
f1
in2
new
BufferedInputStream
new
FileInputStream
f2
int
expectedByte
in1
read
while
expectedByte
if
expectedByte
in2
read
return
expectedByte
in1
read
if
in2
read
return
return
finally
if
in1
try
in1
close
catch
IOException
e
if
in2
try
in2
close
catch
IOException
e
public
File
getParentFile
File
f
if
f
String
p
f
getParent
if
p
return
new
File
p
return
public
static
final
String
readFully
Reader
rdr
throws
IOException
return
readFully
rdr
public
static
final
String
readFully
Reader
rdr
int
bufferSize
throws
IOException
if
bufferSize
throw
new
IllegalArgumentException
final
char
buffer
new
char
bufferSize
int
bufferLength
String
text
StringBuffer
textBuffer
while
bufferLength
bufferLength
rdr
read
buffer
if
bufferLength
if
textBuffer
textBuffer
new
StringBuffer
new
String
buffer
bufferLength
else
textBuffer
append
new
String
buffer
bufferLength
if
textBuffer
text
textBuffer
toString
return
text
public
boolean
createNewFile
File
f
throws
IOException
if
f
if
f
exists
return
FileOutputStream
fos
try
fos
new
FileOutputStream
f
fos
write
new
byte
finally
if
fos
fos
close
return
return
public
boolean
isSymbolicLink
File
parent
String
name
throws
IOException
File
resolvedParent
new
File
parent
getCanonicalPath
File
toTest
new
File
resolvedParent
name
return
toTest
getAbsolutePath
equals
toTest
getCanonicalPath
public
String
removeLeadingPath
File
leading
File
path
String
l
normalize
leading
getAbsolutePath
getAbsolutePath
File
separator
String
p
normalize
path
getAbsolutePath
getAbsolutePath
if
p
startsWith
l
return
p
substring
l
length
else
return
p
