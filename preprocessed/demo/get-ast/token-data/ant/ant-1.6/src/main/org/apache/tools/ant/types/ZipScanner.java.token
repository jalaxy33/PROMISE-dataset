package
org
apache
tools
ant
types
import
java
io
File
import
java
io
IOException
import
java
util
Arrays
import
java
util
Vector
import
java
util
Hashtable
import
java
util
Enumeration
import
java
util
zip
ZipException
import
org
apache
tools
ant
BuildException
import
org
apache
tools
ant
DirectoryScanner
import
org
apache
tools
zip
ZipEntry
import
org
apache
tools
zip
ZipFile
public
class
ZipScanner
extends
DirectoryScanner
protected
File
srcFile
private
Resource
lastScannedResource
private
Hashtable
myentries
private
String
encoding
public
void
setSrc
File
srcFile
this
srcFile
srcFile
public
void
setEncoding
String
encoding
this
encoding
encoding
public
String
getIncludedFiles
if
srcFile
Vector
myvector
new
Vector
scanme
for
Enumeration
e
myentries
elements
e
hasMoreElements
Resource
myresource
Resource
e
nextElement
if
myresource
isDirectory
match
myresource
getName
myvector
addElement
myresource
getName
String
files
new
String
myvector
size
myvector
copyInto
files
Arrays
sort
files
return
files
else
return
super
getIncludedFiles
public
String
getIncludedDirectories
if
srcFile
Vector
myvector
new
Vector
scanme
for
Enumeration
e
myentries
elements
e
hasMoreElements
Resource
myresource
Resource
e
nextElement
if
myresource
isDirectory
match
myresource
getName
myvector
addElement
myresource
getName
String
files
new
String
myvector
size
myvector
copyInto
files
Arrays
sort
files
return
files
else
return
super
getIncludedDirectories
public
void
init
if
includes
includes
new
String
includes
if
excludes
excludes
new
String
public
boolean
match
String
path
String
vpath
path
replace
File
separatorChar
replace
File
separatorChar
return
isIncluded
vpath
isExcluded
vpath
public
Resource
getResource
String
name
if
srcFile
return
super
getResource
name
else
if
name
equals
return
new
Resource
Long
MAX_VALUE
scanme
if
myentries
containsKey
name
return
Resource
myentries
get
name
else
if
myentries
containsKey
name
return
Resource
myentries
get
name
else
return
new
Resource
name
private
void
scanme
Resource
thisresource
new
Resource
srcFile
getAbsolutePath
srcFile
exists
srcFile
lastModified
if
lastScannedResource
lastScannedResource
getName
equals
thisresource
getName
lastScannedResource
getLastModified
thisresource
getLastModified
return
ZipEntry
entry
ZipFile
zf
myentries
new
Hashtable
try
try
zf
new
ZipFile
srcFile
encoding
catch
ZipException
ex
throw
new
BuildException
srcFile
ex
catch
IOException
ex
throw
new
BuildException
srcFile
ex
Enumeration
e
zf
getEntries
while
e
hasMoreElements
entry
ZipEntry
e
nextElement
myentries
put
new
String
entry
getName
new
Resource
entry
getName
entry
getTime
entry
isDirectory
finally
if
zf
try
zf
close
catch
IOException
ex
lastScannedResource
thisresource
