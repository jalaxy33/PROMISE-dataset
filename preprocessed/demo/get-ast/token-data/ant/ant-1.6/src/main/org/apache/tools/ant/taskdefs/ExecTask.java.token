package
org
apache
tools
ant
taskdefs
import
java
io
File
import
java
io
IOException
import
java
util
Enumeration
import
java
util
Vector
import
org
apache
tools
ant
BuildException
import
org
apache
tools
ant
Project
import
org
apache
tools
ant
Task
import
org
apache
tools
ant
types
Commandline
import
org
apache
tools
ant
types
Environment
import
org
apache
tools
ant
types
Path
import
org
apache
tools
ant
util
FileUtils
public
class
ExecTask
extends
Task
private
String
os
private
File
dir
protected
boolean
failOnError
protected
boolean
newEnvironment
private
Long
timeout
private
Environment
env
new
Environment
protected
Commandline
cmdl
new
Commandline
private
String
resultProperty
private
boolean
failIfExecFails
private
String
executable
private
boolean
resolveExecutable
private
boolean
spawn
private
boolean
incompatibleWithSpawn
private
Redirector
redirector
new
Redirector
this
private
boolean
vmLauncher
public
void
setSpawn
boolean
spawn
this
spawn
spawn
public
void
setTimeout
Long
value
timeout
value
incompatibleWithSpawn
public
void
setTimeout
Integer
value
if
value
timeout
else
setTimeout
new
Long
value
intValue
incompatibleWithSpawn
public
void
setExecutable
String
value
this
executable
value
cmdl
setExecutable
value
public
void
setDir
File
d
this
dir
d
public
void
setOs
String
os
this
os
os
public
void
setCommand
Commandline
cmdl
log
Project
MSG_WARN
this
cmdl
cmdl
public
void
setOutput
File
out
redirector
setOutput
out
incompatibleWithSpawn
public
void
setInput
File
input
redirector
setInput
input
incompatibleWithSpawn
public
void
setInputString
String
inputString
redirector
setInputString
inputString
incompatibleWithSpawn
public
void
setLogError
boolean
logError
redirector
setLogError
logError
incompatibleWithSpawn
public
void
setError
File
error
redirector
setError
error
incompatibleWithSpawn
public
void
setOutputproperty
String
outputProp
redirector
setOutputProperty
outputProp
incompatibleWithSpawn
public
void
setErrorProperty
String
errorProperty
redirector
setErrorProperty
errorProperty
incompatibleWithSpawn
public
void
setFailonerror
boolean
fail
failOnError
fail
incompatibleWithSpawn
public
void
setNewenvironment
boolean
newenv
newEnvironment
newenv
public
void
setResolveExecutable
boolean
resolveExecutable
this
resolveExecutable
resolveExecutable
public
boolean
getResolveExecutable
return
resolveExecutable
public
void
addEnv
Environment
Variable
var
env
addVariable
var
public
Commandline
Argument
createArg
return
cmdl
createArgument
public
void
setResultProperty
String
resultProperty
this
resultProperty
resultProperty
incompatibleWithSpawn
protected
void
maybeSetResultPropertyValue
int
result
String
res
Integer
toString
result
if
resultProperty
getProject
setNewProperty
resultProperty
res
public
void
setFailIfExecutionFails
boolean
flag
failIfExecFails
flag
incompatibleWithSpawn
public
void
setAppend
boolean
append
redirector
setAppend
append
incompatibleWithSpawn
protected
String
resolveExecutable
String
exec
boolean
searchPath
if
resolveExecutable
return
exec
File
executableFile
getProject
resolveFile
exec
if
executableFile
exists
return
executableFile
getAbsolutePath
FileUtils
fileUtils
FileUtils
newFileUtils
if
dir
executableFile
fileUtils
resolveFile
dir
exec
if
executableFile
exists
return
executableFile
getAbsolutePath
if
searchPath
Vector
env
Execute
getProcEnvironment
Enumeration
e
env
elements
Path
p
while
e
hasMoreElements
String
line
String
e
nextElement
if
line
startsWith
line
startsWith
p
new
Path
getProject
line
substring
break
if
p
String
dirs
p
list
for
int
i
i
dirs
length
i
executableFile
fileUtils
resolveFile
new
File
dirs
i
exec
if
executableFile
exists
return
executableFile
getAbsolutePath
return
exec
public
void
execute
throws
BuildException
File
savedDir
dir
cmdl
setExecutable
resolveExecutable
executable
checkConfiguration
if
isValidOs
try
runExec
prepareExec
finally
dir
savedDir
protected
void
checkConfiguration
throws
BuildException
if
cmdl
getExecutable
throw
new
BuildException
getLocation
if
dir
dir
exists
throw
new
BuildException
if
dir
dir
isDirectory
throw
new
BuildException
if
spawn
incompatibleWithSpawn
getProject
log
Project
MSG_ERR
getProject
log
Project
MSG_ERR
throw
new
BuildException
protected
boolean
isValidOs
String
myos
System
getProperty
log
myos
Project
MSG_VERBOSE
if
os
os
indexOf
myos
log
myos
os
Project
MSG_VERBOSE
return
return
public
void
setVMLauncher
boolean
vmLauncher
this
vmLauncher
vmLauncher
protected
Execute
prepareExec
throws
BuildException
if
dir
dir
getProject
getBaseDir
Execute
exe
new
Execute
createHandler
createWatchdog
exe
setAntRun
getProject
exe
setWorkingDirectory
dir
exe
setVMLauncher
vmLauncher
exe
setSpawn
spawn
String
environment
env
getVariables
if
environment
for
int
i
i
environment
length
i
log
environment
i
Project
MSG_VERBOSE
exe
setNewenvironment
newEnvironment
exe
setEnvironment
environment
return
exe
protected
final
void
runExecute
Execute
exe
throws
IOException
int
returnCode
if
spawn
returnCode
exe
execute
if
exe
killedProcess
String
msg
if
failOnError
throw
new
BuildException
msg
else
log
msg
Project
MSG_WARN
maybeSetResultPropertyValue
returnCode
if
Execute
isFailure
returnCode
if
failOnError
throw
new
BuildException
getTaskType
returnCode
getLocation
else
log
returnCode
Project
MSG_ERR
redirector
complete
else
exe
spawn
protected
void
runExec
Execute
exe
throws
BuildException
log
cmdl
describeCommand
Project
MSG_VERBOSE
exe
setCommandline
cmdl
getCommandline
try
runExecute
exe
catch
IOException
e
if
failIfExecFails
throw
new
BuildException
e
toString
e
getLocation
else
log
e
toString
Project
MSG_ERR
finally
logFlush
protected
ExecuteStreamHandler
createHandler
throws
BuildException
return
redirector
createHandler
protected
ExecuteWatchdog
createWatchdog
throws
BuildException
if
timeout
return
return
new
ExecuteWatchdog
timeout
longValue
protected
void
logFlush
