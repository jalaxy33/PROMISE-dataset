package
org
apache
tools
ant
taskdefs
import
java
io
BufferedOutputStream
import
java
io
File
import
java
io
FileInputStream
import
java
io
FileOutputStream
import
java
io
IOException
import
java
io
OutputStream
import
java
util
Enumeration
import
java
util
Vector
import
java
util
zip
GZIPOutputStream
import
org
apache
tools
ant
BuildException
import
org
apache
tools
ant
DirectoryScanner
import
org
apache
tools
ant
Project
import
org
apache
tools
ant
types
EnumeratedAttribute
import
org
apache
tools
ant
types
FileSet
import
org
apache
tools
ant
util
MergingMapper
import
org
apache
tools
ant
util
SourceFileScanner
import
org
apache
tools
bzip2
CBZip2OutputStream
import
org
apache
tools
tar
TarConstants
import
org
apache
tools
tar
TarEntry
import
org
apache
tools
tar
TarOutputStream
import
org
apache
tools
zip
UnixStat
public
class
Tar
extends
MatchingTask
public
static
final
String
WARN
public
static
final
String
FAIL
public
static
final
String
TRUNCATE
public
static
final
String
GNU
public
static
final
String
OMIT
File
tarFile
File
baseDir
private
TarLongFileMode
longFileMode
new
TarLongFileMode
Vector
filesets
new
Vector
Vector
fileSetFiles
new
Vector
private
boolean
longWarningGiven
private
TarCompressionMethod
compression
new
TarCompressionMethod
public
TarFileSet
createTarFileSet
TarFileSet
fileset
new
TarFileSet
filesets
addElement
fileset
return
fileset
public
void
setTarfile
File
tarFile
this
tarFile
tarFile
public
void
setDestFile
File
destFile
this
tarFile
destFile
public
void
setBasedir
File
baseDir
this
baseDir
baseDir
public
void
setLongfile
String
mode
log
this
longFileMode
new
TarLongFileMode
longFileMode
setValue
mode
public
void
setLongfile
TarLongFileMode
mode
this
longFileMode
mode
public
void
setCompression
TarCompressionMethod
mode
this
compression
mode
public
void
execute
throws
BuildException
if
tarFile
throw
new
BuildException
getLocation
if
tarFile
exists
tarFile
isDirectory
throw
new
BuildException
getLocation
if
tarFile
exists
tarFile
canWrite
throw
new
BuildException
getLocation
Vector
savedFileSets
Vector
filesets
clone
try
if
baseDir
if
baseDir
exists
throw
new
BuildException
getLocation
TarFileSet
mainFileSet
new
TarFileSet
fileset
mainFileSet
setDir
baseDir
filesets
addElement
mainFileSet
if
filesets
size
throw
new
BuildException
getLocation
boolean
upToDate
for
Enumeration
e
filesets
elements
e
hasMoreElements
TarFileSet
fs
TarFileSet
e
nextElement
String
files
fs
getFiles
getProject
if
archiveIsUpToDate
files
fs
getDir
getProject
upToDate
for
int
i
i
files
length
i
if
tarFile
equals
new
File
fs
getDir
getProject
files
i
throw
new
BuildException
getLocation
if
upToDate
log
tarFile
getAbsolutePath
Project
MSG_INFO
return
log
tarFile
getAbsolutePath
Project
MSG_INFO
TarOutputStream
tOut
try
tOut
new
TarOutputStream
compression
compress
new
BufferedOutputStream
new
FileOutputStream
tarFile
tOut
setDebug
if
longFileMode
isTruncateMode
tOut
setLongFileMode
TarOutputStream
LONGFILE_TRUNCATE
else
if
longFileMode
isFailMode
longFileMode
isOmitMode
tOut
setLongFileMode
TarOutputStream
LONGFILE_ERROR
else
tOut
setLongFileMode
TarOutputStream
LONGFILE_GNU
longWarningGiven
for
Enumeration
e
filesets
elements
e
hasMoreElements
TarFileSet
fs
TarFileSet
e
nextElement
String
files
fs
getFiles
getProject
if
files
length
fs
getFullpath
length
throw
new
BuildException
for
int
i
i
files
length
i
File
f
new
File
fs
getDir
getProject
files
i
String
name
files
i
replace
File
separatorChar
tarFile
f
tOut
name
fs
catch
IOException
ioe
String
msg
ioe
getMessage
throw
new
BuildException
msg
ioe
getLocation
finally
if
tOut
try
tOut
close
catch
IOException
e
finally
filesets
savedFileSets
protected
void
tarFile
File
file
TarOutputStream
tOut
String
vPath
TarFileSet
tarFileSet
throws
IOException
FileInputStream
fIn
String
fullpath
tarFileSet
getFullpath
if
fullpath
length
vPath
fullpath
else
if
vPath
length
return
if
file
isDirectory
vPath
endsWith
vPath
String
prefix
tarFileSet
getPrefix
if
prefix
length
prefix
endsWith
prefix
prefix
vPath
prefix
vPath
if
vPath
startsWith
tarFileSet
getPreserveLeadingSlashes
int
l
vPath
length
if
l
return
vPath
vPath
substring
l
try
if
vPath
length
TarConstants
NAMELEN
if
longFileMode
isOmitMode
log
vPath
Project
MSG_INFO
return
else
if
longFileMode
isWarnMode
log
vPath
TarConstants
NAMELEN
Project
MSG_WARN
if
longWarningGiven
log
Project
MSG_WARN
longWarningGiven
else
if
longFileMode
isFailMode
throw
new
BuildException
vPath
TarConstants
NAMELEN
getLocation
TarEntry
te
new
TarEntry
vPath
te
setModTime
file
lastModified
if
file
isDirectory
te
setSize
file
length
te
setMode
tarFileSet
getMode
else
te
setMode
tarFileSet
getDirMode
te
setUserName
tarFileSet
getUserName
te
setGroupName
tarFileSet
getGroup
tOut
putNextEntry
te
if
file
isDirectory
fIn
new
FileInputStream
file
byte
buffer
new
byte
int
count
do
tOut
write
buffer
count
count
fIn
read
buffer
buffer
length
while
count
tOut
closeEntry
finally
if
fIn
fIn
close
protected
boolean
archiveIsUpToDate
String
files
return
archiveIsUpToDate
files
baseDir
protected
boolean
archiveIsUpToDate
String
files
File
dir
SourceFileScanner
sfs
new
SourceFileScanner
this
MergingMapper
mm
new
MergingMapper
mm
setTo
tarFile
getAbsolutePath
return
sfs
restrict
files
dir
mm
length
public
static
class
TarFileSet
extends
FileSet
private
String
files
private
int
fileMode
UnixStat
FILE_FLAG
UnixStat
DEFAULT_FILE_PERM
private
int
dirMode
UnixStat
DIR_FLAG
UnixStat
DEFAULT_DIR_PERM
private
String
userName
private
String
groupName
private
String
prefix
private
String
fullpath
private
boolean
preserveLeadingSlashes
public
TarFileSet
FileSet
fileset
super
fileset
public
TarFileSet
super
public
String
getFiles
Project
p
if
files
DirectoryScanner
ds
getDirectoryScanner
p
String
directories
ds
getIncludedDirectories
String
filesPerSe
ds
getIncludedFiles
files
new
String
directories
length
filesPerSe
length
System
arraycopy
directories
files
directories
length
System
arraycopy
filesPerSe
files
directories
length
filesPerSe
length
return
files
public
void
setMode
String
octalString
this
fileMode
UnixStat
FILE_FLAG
Integer
parseInt
octalString
public
int
getMode
return
fileMode
public
void
setDirMode
String
octalString
this
dirMode
UnixStat
DIR_FLAG
Integer
parseInt
octalString
public
int
getDirMode
return
dirMode
public
void
setUserName
String
userName
this
userName
userName
public
String
getUserName
return
userName
public
void
setGroup
String
groupName
this
groupName
groupName
public
String
getGroup
return
groupName
public
void
setPrefix
String
prefix
this
prefix
prefix
public
String
getPrefix
return
prefix
public
void
setFullpath
String
fullpath
this
fullpath
fullpath
public
String
getFullpath
return
fullpath
public
void
setPreserveLeadingSlashes
boolean
b
this
preserveLeadingSlashes
b
public
boolean
getPreserveLeadingSlashes
return
preserveLeadingSlashes
public
static
class
TarLongFileMode
extends
EnumeratedAttribute
public
static
final
String
WARN
public
static
final
String
FAIL
public
static
final
String
TRUNCATE
public
static
final
String
GNU
public
static
final
String
OMIT
private
final
String
validModes
WARN
FAIL
TRUNCATE
GNU
OMIT
public
TarLongFileMode
super
setValue
WARN
public
String
getValues
return
validModes
public
boolean
isTruncateMode
return
TRUNCATE
equalsIgnoreCase
getValue
public
boolean
isWarnMode
return
WARN
equalsIgnoreCase
getValue
public
boolean
isGnuMode
return
GNU
equalsIgnoreCase
getValue
public
boolean
isFailMode
return
FAIL
equalsIgnoreCase
getValue
public
boolean
isOmitMode
return
OMIT
equalsIgnoreCase
getValue
public
static
final
class
TarCompressionMethod
extends
EnumeratedAttribute
private
static
final
String
NONE
private
static
final
String
GZIP
private
static
final
String
BZIP2
public
TarCompressionMethod
super
setValue
NONE
public
String
getValues
return
new
String
NONE
GZIP
BZIP2
private
OutputStream
compress
final
OutputStream
ostream
throws
IOException
final
String
value
getValue
if
GZIP
equals
value
return
new
GZIPOutputStream
ostream
else
if
BZIP2
equals
value
ostream
write
ostream
write
return
new
CBZip2OutputStream
ostream
return
ostream
