package
org
apache
tools
ant
taskdefs
import
org
apache
tools
ant
BuildException
import
org
apache
tools
ant
DirectoryScanner
import
org
apache
tools
ant
Project
import
org
apache
tools
ant
types
EnumeratedAttribute
import
org
apache
tools
ant
types
FileSet
import
java
io
File
import
java
io
PrintStream
import
java
io
BufferedOutputStream
import
java
io
FileOutputStream
import
java
io
IOException
import
java
io
Reader
import
java
io
BufferedReader
import
java
io
StringReader
import
java
io
FileReader
import
java
io
InputStreamReader
import
java
io
FileInputStream
import
java
util
Enumeration
import
java
util
StringTokenizer
import
java
util
Vector
import
java
sql
Connection
import
java
sql
Statement
import
java
sql
SQLException
import
java
sql
SQLWarning
import
java
sql
ResultSet
import
java
sql
ResultSetMetaData
public
class
SQLExec
extends
JDBCTask
public
static
class
DelimiterType
extends
EnumeratedAttribute
public
static
final
String
NORMAL
public
static
final
String
ROW
public
String
getValues
return
new
String
NORMAL
ROW
private
int
goodSql
private
int
totalSql
private
Connection
conn
private
Vector
filesets
new
Vector
private
Statement
statement
private
File
srcFile
private
String
sqlCommand
private
Vector
transactions
new
Vector
private
String
delimiter
private
String
delimiterType
DelimiterType
NORMAL
private
boolean
print
private
boolean
showheaders
private
File
output
private
String
onError
private
String
encoding
private
boolean
append
private
boolean
keepformat
private
boolean
escapeProcessing
public
void
setSrc
File
srcFile
this
srcFile
srcFile
public
void
addText
String
sql
this
sqlCommand
sql
public
void
addFileset
FileSet
set
filesets
addElement
set
public
Transaction
createTransaction
Transaction
t
new
Transaction
transactions
addElement
t
return
t
public
void
setEncoding
String
encoding
this
encoding
encoding
public
void
setDelimiter
String
delimiter
this
delimiter
delimiter
public
void
setDelimiterType
DelimiterType
delimiterType
this
delimiterType
delimiterType
getValue
public
void
setPrint
boolean
print
this
print
print
public
void
setShowheaders
boolean
showheaders
this
showheaders
showheaders
public
void
setOutput
File
output
this
output
output
public
void
setAppend
boolean
append
this
append
append
public
void
setOnerror
OnError
action
this
onError
action
getValue
public
void
setKeepformat
boolean
keepformat
this
keepformat
keepformat
public
void
setEscapeProcessing
boolean
enable
escapeProcessing
enable
public
void
execute
throws
BuildException
Vector
savedTransaction
Vector
transactions
clone
String
savedSqlCommand
sqlCommand
sqlCommand
sqlCommand
trim
try
if
srcFile
sqlCommand
length
filesets
isEmpty
if
transactions
size
throw
new
BuildException
getLocation
if
srcFile
srcFile
exists
throw
new
BuildException
getLocation
for
int
i
i
filesets
size
i
FileSet
fs
FileSet
filesets
elementAt
i
DirectoryScanner
ds
fs
getDirectoryScanner
getProject
File
srcDir
fs
getDir
getProject
String
srcFiles
ds
getIncludedFiles
for
int
j
j
srcFiles
length
j
Transaction
t
createTransaction
t
setSrc
new
File
srcDir
srcFiles
j
Transaction
t
createTransaction
t
setSrc
srcFile
t
addText
sqlCommand
conn
getConnection
if
isValidRdbms
conn
return
try
statement
conn
createStatement
statement
setEscapeProcessing
escapeProcessing
PrintStream
out
System
out
try
if
output
log
output
Project
MSG_VERBOSE
out
new
PrintStream
new
BufferedOutputStream
new
FileOutputStream
output
getAbsolutePath
append
for
Enumeration
e
transactions
elements
e
hasMoreElements
Transaction
e
nextElement
runTransaction
out
if
isAutocommit
log
Project
MSG_VERBOSE
conn
commit
finally
if
out
out
System
out
out
close
catch
IOException
e
if
isAutocommit
conn
onError
equals
try
conn
rollback
catch
SQLException
ex
throw
new
BuildException
e
getLocation
catch
SQLException
e
if
isAutocommit
conn
onError
equals
try
conn
rollback
catch
SQLException
ex
throw
new
BuildException
e
getLocation
finally
try
if
statement
statement
close
if
conn
conn
close
catch
SQLException
ex
log
goodSql
totalSql
finally
transactions
savedTransaction
sqlCommand
savedSqlCommand
protected
void
runStatements
Reader
reader
PrintStream
out
throws
SQLException
IOException
StringBuffer
sql
new
StringBuffer
String
line
BufferedReader
in
new
BufferedReader
reader
while
line
in
readLine
if
keepformat
line
line
trim
line
getProject
replaceProperties
line
if
keepformat
if
line
startsWith
continue
if
line
startsWith
continue
StringTokenizer
st
new
StringTokenizer
line
if
st
hasMoreTokens
String
token
st
nextToken
if
equalsIgnoreCase
token
continue
if
keepformat
sql
append
line
else
sql
append
line
if
keepformat
if
line
indexOf
sql
append
if
delimiterType
equals
DelimiterType
NORMAL
sql
toString
endsWith
delimiter
delimiterType
equals
DelimiterType
ROW
line
equals
delimiter
execSQL
sql
substring
sql
length
delimiter
length
out
sql
replace
sql
length
if
sql
equals
execSQL
sql
toString
out
protected
void
execSQL
String
sql
PrintStream
out
throws
SQLException
if
equals
sql
trim
return
try
totalSql
log
sql
Project
MSG_VERBOSE
boolean
ret
int
updateCount
updateCountTotal
ResultSet
resultSet
ret
statement
execute
sql
updateCount
statement
getUpdateCount
resultSet
statement
getResultSet
do
if
ret
if
updateCount
updateCountTotal
updateCount
else
if
print
printResults
out
ret
statement
getMoreResults
updateCount
statement
getUpdateCount
resultSet
statement
getResultSet
while
ret
log
updateCountTotal
Project
MSG_VERBOSE
if
print
StringBuffer
line
new
StringBuffer
line
append
updateCountTotal
out
println
line
SQLWarning
warning
conn
getWarnings
while
warning
log
warning
Project
MSG_VERBOSE
warning
warning
getNextWarning
conn
clearWarnings
goodSql
catch
SQLException
e
log
sql
Project
MSG_ERR
if
onError
equals
throw
e
log
e
toString
Project
MSG_ERR
protected
void
printResults
PrintStream
out
throws
java
sql
SQLException
ResultSet
rs
rs
statement
getResultSet
if
rs
log
Project
MSG_VERBOSE
ResultSetMetaData
md
rs
getMetaData
int
columnCount
md
getColumnCount
StringBuffer
line
new
StringBuffer
if
showheaders
for
int
col
col
columnCount
col
line
append
md
getColumnName
col
line
append
line
append
md
getColumnName
columnCount
out
println
line
line
new
StringBuffer
while
rs
next
boolean
first
for
int
col
col
columnCount
col
String
columnValue
rs
getString
col
if
columnValue
columnValue
columnValue
trim
if
first
first
else
line
append
line
append
columnValue
out
println
line
line
new
StringBuffer
out
println
public
static
class
OnError
extends
EnumeratedAttribute
public
String
getValues
return
new
String
public
class
Transaction
private
File
tSrcFile
private
String
tSqlCommand
public
void
setSrc
File
src
this
tSrcFile
src
public
void
addText
String
sql
this
tSqlCommand
sql
private
void
runTransaction
PrintStream
out
throws
IOException
SQLException
if
tSqlCommand
length
log
Project
MSG_INFO
runStatements
new
StringReader
tSqlCommand
out
if
tSrcFile
log
tSrcFile
getAbsolutePath
Project
MSG_INFO
Reader
reader
encoding
new
FileReader
tSrcFile
new
InputStreamReader
new
FileInputStream
tSrcFile
encoding
try
runStatements
reader
out
finally
reader
close
