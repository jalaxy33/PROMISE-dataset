package
org
apache
tools
ant
import
java
io
ByteArrayOutputStream
import
java
io
File
import
java
io
FileInputStream
import
java
io
IOException
import
java
io
InputStream
import
java
lang
reflect
Constructor
import
java
lang
reflect
InvocationTargetException
import
java
lang
reflect
Method
import
java
net
MalformedURLException
import
java
net
URL
import
java
util
Enumeration
import
java
util
Hashtable
import
java
util
Vector
import
java
util
zip
ZipEntry
import
java
util
zip
ZipFile
import
org
apache
tools
ant
types
Path
import
org
apache
tools
ant
util
JavaEnvUtils
import
org
apache
tools
ant
util
LoaderUtils
public
class
AntClassLoader
extends
ClassLoader
implements
BuildListener
private
class
ResourceEnumeration
implements
Enumeration
private
String
resourceName
private
int
pathElementsIndex
private
URL
nextResource
ResourceEnumeration
String
name
this
resourceName
name
this
pathElementsIndex
findNextResource
public
boolean
hasMoreElements
return
this
nextResource
public
Object
nextElement
URL
ret
this
nextResource
findNextResource
return
ret
private
void
findNextResource
URL
url
while
pathElementsIndex
pathComponents
size
url
try
File
pathComponent
File
pathComponents
elementAt
pathElementsIndex
url
getResourceURL
pathComponent
this
resourceName
pathElementsIndex
catch
BuildException
e
this
nextResource
url
private
static
final
int
BUFFER_SIZE
private
static
final
int
NUMBER_OF_STRINGS
private
Vector
pathComponents
new
Vector
private
Project
project
private
boolean
parentFirst
private
Vector
systemPackages
new
Vector
private
Vector
loaderPackages
new
Vector
private
boolean
ignoreBase
private
ClassLoader
parent
private
Hashtable
zipFiles
new
Hashtable
private
ClassLoader
savedContextLoader
private
boolean
isContextLoaderSaved
private
static
Method
getProtectionDomain
private
static
Method
defineClassProtectionDomain
static
try
getProtectionDomain
Class
class
getMethod
new
Class
Class
protectionDomain
Class
forName
Class
args
new
Class
String
class
byte
class
Integer
TYPE
Integer
TYPE
protectionDomain
defineClassProtectionDomain
ClassLoader
class
getDeclaredMethod
args
catch
Exception
e
public
AntClassLoader
setParent
public
AntClassLoader
Project
project
Path
classpath
setParent
setProject
project
setClassPath
classpath
public
AntClassLoader
ClassLoader
parent
Project
project
Path
classpath
boolean
parentFirst
this
project
classpath
if
parent
setParent
parent
setParentFirst
parentFirst
addJavaLibraries
public
AntClassLoader
Project
project
Path
classpath
boolean
parentFirst
this
project
classpath
parentFirst
public
AntClassLoader
ClassLoader
parent
boolean
parentFirst
setParent
parent
project
this
parentFirst
parentFirst
public
void
setProject
Project
project
this
project
project
if
project
project
addBuildListener
this
public
void
setClassPath
Path
classpath
pathComponents
removeAllElements
if
classpath
Path
actualClasspath
classpath
concatSystemClasspath
String
pathElements
actualClasspath
list
for
int
i
i
pathElements
length
i
try
addPathElement
pathElements
i
catch
BuildException
e
public
void
setParent
ClassLoader
parent
if
parent
this
parent
AntClassLoader
class
getClassLoader
else
this
parent
parent
public
void
setParentFirst
boolean
parentFirst
this
parentFirst
parentFirst
protected
void
log
String
message
int
priority
if
project
project
log
message
priority
public
void
setThreadContextLoader
if
isContextLoaderSaved
throw
new
BuildException
if
LoaderUtils
isContextLoaderAvailable
savedContextLoader
LoaderUtils
getContextClassLoader
ClassLoader
loader
this
if
project
equals
project
getProperty
loader
this
getClass
getClassLoader
LoaderUtils
setContextClassLoader
loader
isContextLoaderSaved
public
void
resetThreadContextLoader
if
LoaderUtils
isContextLoaderAvailable
isContextLoaderSaved
LoaderUtils
setContextClassLoader
savedContextLoader
savedContextLoader
isContextLoaderSaved
public
void
addPathElement
String
pathElement
throws
BuildException
File
pathComponent
project
project
resolveFile
pathElement
new
File
pathElement
try
addPathFile
pathComponent
catch
IOException
e
throw
new
BuildException
e
protected
void
addPathFile
File
pathComponent
throws
IOException
pathComponents
addElement
pathComponent
public
String
getClasspath
StringBuffer
sb
new
StringBuffer
boolean
firstPass
Enumeration
componentEnum
pathComponents
elements
while
componentEnum
hasMoreElements
if
firstPass
sb
append
System
getProperty
else
firstPass
sb
append
File
componentEnum
nextElement
getAbsolutePath
return
sb
toString
public
synchronized
void
setIsolated
boolean
isolated
ignoreBase
isolated
public
static
void
initializeClass
Class
theClass
final
Constructor
cons
theClass
getDeclaredConstructors
if
cons
if
cons
length
cons
final
String
strs
new
String
NUMBER_OF_STRINGS
try
cons
newInstance
strs
catch
Throwable
t
public
void
addSystemPackageRoot
String
packageRoot
systemPackages
addElement
packageRoot
packageRoot
endsWith
public
void
addLoaderPackageRoot
String
packageRoot
loaderPackages
addElement
packageRoot
packageRoot
endsWith
public
Class
forceLoadClass
String
classname
throws
ClassNotFoundException
log
classname
Project
MSG_DEBUG
Class
theClass
findLoadedClass
classname
if
theClass
theClass
findClass
classname
return
theClass
public
Class
forceLoadSystemClass
String
classname
throws
ClassNotFoundException
log
classname
Project
MSG_DEBUG
Class
theClass
findLoadedClass
classname
if
theClass
theClass
findBaseClass
classname
return
theClass
public
InputStream
getResourceAsStream
String
name
InputStream
resourceStream
if
isParentFirst
name
resourceStream
loadBaseResource
name
if
resourceStream
log
name
Project
MSG_DEBUG
else
resourceStream
loadResource
name
if
resourceStream
log
name
Project
MSG_DEBUG
else
resourceStream
loadResource
name
if
resourceStream
log
name
Project
MSG_DEBUG
else
resourceStream
loadBaseResource
name
if
resourceStream
log
name
Project
MSG_DEBUG
if
resourceStream
log
name
Project
MSG_DEBUG
return
resourceStream
private
InputStream
loadResource
String
name
InputStream
stream
Enumeration
e
pathComponents
elements
while
e
hasMoreElements
stream
File
pathComponent
File
e
nextElement
stream
getResourceStream
pathComponent
name
return
stream
private
InputStream
loadBaseResource
String
name
if
parent
return
getSystemResourceAsStream
name
else
return
parent
getResourceAsStream
name
private
InputStream
getResourceStream
File
file
String
resourceName
try
if
file
exists
return
if
file
isDirectory
File
resource
new
File
file
resourceName
if
resource
exists
return
new
FileInputStream
resource
else
ZipFile
zipFile
ZipFile
zipFiles
get
file
if
zipFile
zipFile
new
ZipFile
file
zipFiles
put
file
zipFile
ZipEntry
entry
zipFile
getEntry
resourceName
if
entry
return
zipFile
getInputStream
entry
catch
Exception
e
log
e
getClass
getName
e
getMessage
resourceName
file
Project
MSG_VERBOSE
return
private
boolean
isParentFirst
String
resourceName
boolean
useParentFirst
parentFirst
for
Enumeration
e
systemPackages
elements
e
hasMoreElements
String
packageName
String
e
nextElement
if
resourceName
startsWith
packageName
useParentFirst
break
for
Enumeration
e
loaderPackages
elements
e
hasMoreElements
String
packageName
String
e
nextElement
if
resourceName
startsWith
packageName
useParentFirst
break
return
useParentFirst
public
URL
getResource
String
name
URL
url
if
isParentFirst
name
url
parent
super
getResource
name
parent
getResource
name
if
url
log
name
Project
MSG_DEBUG
else
Enumeration
e
pathComponents
elements
while
e
hasMoreElements
url
File
pathComponent
File
e
nextElement
url
getResourceURL
pathComponent
name
if
url
log
name
Project
MSG_DEBUG
if
url
isParentFirst
name
url
parent
super
getResource
name
parent
getResource
name
if
url
log
name
Project
MSG_DEBUG
if
url
log
name
Project
MSG_DEBUG
return
url
protected
Enumeration
findResources
String
name
throws
IOException
return
new
ResourceEnumeration
name
protected
URL
getResourceURL
File
file
String
resourceName
try
if
file
exists
return
if
file
isDirectory
File
resource
new
File
file
resourceName
if
resource
exists
try
return
new
URL
resource
toString
catch
MalformedURLException
ex
return
else
ZipFile
zipFile
ZipFile
zipFiles
get
file
if
zipFile
zipFile
new
ZipFile
file
zipFiles
put
file
zipFile
ZipEntry
entry
zipFile
getEntry
resourceName
if
entry
try
return
new
URL
file
toString
entry
catch
MalformedURLException
ex
return
catch
Exception
e
e
printStackTrace
return
protected
synchronized
Class
loadClass
String
classname
boolean
resolve
throws
ClassNotFoundException
Class
theClass
findLoadedClass
classname
if
theClass
return
theClass
if
isParentFirst
classname
try
theClass
findBaseClass
classname
log
classname
Project
MSG_DEBUG
catch
ClassNotFoundException
cnfe
theClass
findClass
classname
log
classname
Project
MSG_DEBUG
else
try
theClass
findClass
classname
log
classname
Project
MSG_DEBUG
catch
ClassNotFoundException
cnfe
if
ignoreBase
throw
cnfe
theClass
findBaseClass
classname
log
classname
Project
MSG_DEBUG
if
resolve
resolveClass
theClass
return
theClass
private
String
getClassFilename
String
classname
return
classname
replace
protected
Class
defineClassFromData
File
container
byte
classData
String
classname
throws
IOException
if
defineClassProtectionDomain
try
Object
domain
getProtectionDomain
invoke
Project
class
new
Object
Object
args
new
Object
classname
classData
new
Integer
new
Integer
classData
length
domain
return
Class
defineClassProtectionDomain
invoke
this
args
catch
InvocationTargetException
ite
Throwable
t
ite
getTargetException
if
t
instanceof
ClassFormatError
throw
ClassFormatError
t
else
if
t
instanceof
NoClassDefFoundError
throw
NoClassDefFoundError
t
else
if
t
instanceof
SecurityException
throw
SecurityException
t
else
throw
new
IOException
t
toString
catch
Exception
e
throw
new
IOException
e
toString
else
return
defineClass
classname
classData
classData
length
private
Class
getClassFromStream
InputStream
stream
String
classname
File
container
throws
IOException
SecurityException
ByteArrayOutputStream
baos
new
ByteArrayOutputStream
int
bytesRead
byte
buffer
new
byte
BUFFER_SIZE
while
bytesRead
stream
read
buffer
BUFFER_SIZE
baos
write
buffer
bytesRead
byte
classData
baos
toByteArray
return
defineClassFromData
container
classData
classname
public
Class
findClass
String
name
throws
ClassNotFoundException
log
name
Project
MSG_DEBUG
return
findClassInComponents
name
protected
boolean
isInPath
File
component
for
Enumeration
e
pathComponents
elements
e
hasMoreElements
File
pathComponent
File
e
nextElement
if
pathComponent
equals
component
return
return
private
Class
findClassInComponents
String
name
throws
ClassNotFoundException
InputStream
stream
String
classFilename
getClassFilename
name
try
Enumeration
e
pathComponents
elements
while
e
hasMoreElements
File
pathComponent
File
e
nextElement
try
stream
getResourceStream
pathComponent
classFilename
if
stream
log
pathComponent
classFilename
Project
MSG_DEBUG
return
getClassFromStream
stream
name
pathComponent
catch
SecurityException
se
throw
se
catch
IOException
ioe
log
pathComponent
ioe
getMessage
Project
MSG_VERBOSE
throw
new
ClassNotFoundException
name
finally
try
if
stream
stream
close
catch
IOException
e
private
Class
findBaseClass
String
name
throws
ClassNotFoundException
if
parent
return
findSystemClass
name
else
return
parent
loadClass
name
public
synchronized
void
cleanup
for
Enumeration
e
zipFiles
elements
e
hasMoreElements
ZipFile
zipFile
ZipFile
e
nextElement
try
zipFile
close
catch
IOException
ioe
zipFiles
new
Hashtable
if
project
project
removeBuildListener
this
project
public
void
buildStarted
BuildEvent
event
public
void
buildFinished
BuildEvent
event
cleanup
public
void
targetStarted
BuildEvent
event
public
void
targetFinished
BuildEvent
event
public
void
taskStarted
BuildEvent
event
public
void
taskFinished
BuildEvent
event
public
void
messageLogged
BuildEvent
event
public
void
addJavaLibraries
Vector
packages
JavaEnvUtils
getJrePackages
Enumeration
e
packages
elements
while
e
hasMoreElements
String
packageName
String
e
nextElement
addSystemPackageRoot
packageName
