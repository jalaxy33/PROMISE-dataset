package
org
apache
tools
ant
import
java
util
Enumeration
import
java
util
Hashtable
import
java
util
HashSet
import
java
util
Iterator
import
java
util
Properties
import
java
util
Set
import
java
util
Stack
import
java
util
Vector
import
java
io
InputStream
import
java
io
IOException
import
java
lang
ref
WeakReference
import
java
lang
reflect
Modifier
import
org
apache
tools
ant
taskdefs
Typedef
public
class
ComponentHelper
private
AntTypeTable
antTypeTable
private
Hashtable
taskClassDefinitions
new
Hashtable
private
boolean
rebuildTaskClassDefinitions
private
Hashtable
typeClassDefinitions
new
Hashtable
private
boolean
rebuildTypeClassDefinitions
private
Set
checkedNamespaces
new
HashSet
private
Stack
antLibStack
new
Stack
private
String
antLibCurrentUri
private
Hashtable
createdTasks
new
Hashtable
private
ComponentHelper
next
private
Project
project
public
static
ComponentHelper
getComponentHelper
Project
project
ComponentHelper
ph
ComponentHelper
project
getReference
if
ph
return
ph
ph
new
ComponentHelper
ph
setProject
project
project
addReference
ph
return
ph
protected
ComponentHelper
public
void
setNext
ComponentHelper
next
this
next
next
public
ComponentHelper
getNext
return
next
public
void
setProject
Project
project
this
project
project
antTypeTable
new
AntTypeTable
project
public
void
initSubProject
ComponentHelper
helper
AntTypeTable
typeTable
helper
antTypeTable
for
Iterator
i
typeTable
values
iterator
i
hasNext
AntTypeDefinition
def
AntTypeDefinition
i
next
antTypeTable
put
def
getName
def
checkedNamespaces
add
helper
checkedNamespaces
public
Object
createComponent
UnknownElement
ue
String
ns
String
componentType
throws
BuildException
Object
component
createComponent
componentType
if
component
return
if
component
instanceof
Task
Task
task
Task
component
task
setLocation
ue
getLocation
task
setTaskType
componentType
task
setTaskName
ue
getTaskName
task
setOwningTarget
ue
getOwningTarget
task
init
addCreatedTask
componentType
task
return
component
public
Object
createComponent
String
componentName
AntTypeDefinition
def
getDefinition
componentName
if
def
return
return
def
create
project
public
Class
getComponentClass
String
componentName
AntTypeDefinition
def
getDefinition
componentName
if
def
return
return
def
getExposedClass
project
public
AntTypeDefinition
getDefinition
String
componentName
checkNamespace
componentName
AntTypeDefinition
ret
ret
antTypeTable
getDefinition
componentName
return
ret
public
void
initDefaultDefinitions
initTasks
initTypes
public
void
addTaskDefinition
String
taskName
Class
taskClass
checkTaskClass
taskClass
AntTypeDefinition
def
new
AntTypeDefinition
def
setName
taskName
def
setClassLoader
taskClass
getClassLoader
def
setClass
taskClass
def
setAdapterClass
TaskAdapter
class
def
setClassName
taskClass
getName
def
setAdaptToClass
Task
class
updateDataTypeDefinition
def
public
void
checkTaskClass
final
Class
taskClass
throws
BuildException
if
Modifier
isPublic
taskClass
getModifiers
final
String
message
taskClass
project
log
message
Project
MSG_ERR
throw
new
BuildException
message
if
Modifier
isAbstract
taskClass
getModifiers
final
String
message
taskClass
project
log
message
Project
MSG_ERR
throw
new
BuildException
message
try
taskClass
getConstructor
catch
NoSuchMethodException
e
final
String
message
taskClass
project
log
message
Project
MSG_ERR
throw
new
BuildException
message
if
Task
class
isAssignableFrom
taskClass
TaskAdapter
checkTaskClass
taskClass
project
public
Hashtable
getTaskDefinitions
synchronized
taskClassDefinitions
synchronized
antTypeTable
if
rebuildTaskClassDefinitions
taskClassDefinitions
clear
for
Iterator
i
antTypeTable
keySet
iterator
i
hasNext
String
name
String
i
next
Class
clazz
Class
antTypeTable
getExposedClass
name
if
clazz
continue
if
Task
class
isAssignableFrom
clazz
taskClassDefinitions
put
name
antTypeTable
getTypeClass
name
rebuildTaskClassDefinitions
return
taskClassDefinitions
public
Hashtable
getDataTypeDefinitions
synchronized
typeClassDefinitions
synchronized
antTypeTable
if
rebuildTypeClassDefinitions
typeClassDefinitions
clear
for
Iterator
i
antTypeTable
keySet
iterator
i
hasNext
String
name
String
i
next
Class
clazz
Class
antTypeTable
getExposedClass
name
if
clazz
continue
if
Task
class
isAssignableFrom
clazz
typeClassDefinitions
put
name
antTypeTable
getTypeClass
name
rebuildTypeClassDefinitions
return
typeClassDefinitions
public
void
addDataTypeDefinition
String
typeName
Class
typeClass
AntTypeDefinition
def
new
AntTypeDefinition
def
setName
typeName
def
setClass
typeClass
updateDataTypeDefinition
def
String
msg
typeName
typeClass
getName
project
log
msg
Project
MSG_DEBUG
public
void
addDataTypeDefinition
AntTypeDefinition
def
updateDataTypeDefinition
def
public
Hashtable
getAntTypeTable
return
antTypeTable
public
Task
createTask
String
taskType
throws
BuildException
Task
task
createNewTask
taskType
if
task
taskType
equals
addTaskDefinition
org
apache
tools
ant
taskdefs
Property
class
task
createNewTask
taskType
if
task
addCreatedTask
taskType
task
return
task
private
Task
createNewTask
String
taskType
throws
BuildException
Class
c
getComponentClass
taskType
if
c
return
if
Task
class
isAssignableFrom
c
return
Task
task
Task
createComponent
taskType
if
task
return
task
setTaskType
taskType
task
setTaskName
taskType
String
msg
taskType
project
log
msg
Project
MSG_DEBUG
return
task
private
void
addCreatedTask
String
type
Task
task
synchronized
createdTasks
Vector
v
Vector
createdTasks
get
type
if
v
v
new
Vector
createdTasks
put
type
v
v
addElement
new
WeakReference
task
private
void
invalidateCreatedTasks
String
type
synchronized
createdTasks
Vector
v
Vector
createdTasks
get
type
if
v
Enumeration
taskEnum
v
elements
while
taskEnum
hasMoreElements
WeakReference
ref
WeakReference
taskEnum
nextElement
Task
t
Task
ref
get
if
t
t
markInvalid
v
removeAllElements
createdTasks
remove
type
public
Object
createDataType
String
typeName
throws
BuildException
return
createComponent
typeName
public
String
getElementName
Object
element
Class
elementClass
element
getClass
for
Iterator
i
antTypeTable
values
iterator
i
hasNext
AntTypeDefinition
def
AntTypeDefinition
i
next
if
elementClass
def
getExposedClass
project
return
def
getName
return
elementClass
getName
private
boolean
validDefinition
AntTypeDefinition
def
if
def
getTypeClass
project
def
getExposedClass
project
return
return
private
boolean
sameDefinition
AntTypeDefinition
def
AntTypeDefinition
old
if
validDefinition
def
validDefinition
old
return
validDefinition
def
validDefinition
old
return
def
sameDefinition
old
project
private
void
updateDataTypeDefinition
AntTypeDefinition
def
String
name
def
getName
synchronized
antTypeTable
rebuildTaskClassDefinitions
rebuildTypeClassDefinitions
AntTypeDefinition
old
antTypeTable
getDefinition
name
if
old
if
sameDefinition
def
old
return
int
logLevel
Project
MSG_WARN
if
def
similarDefinition
old
project
logLevel
Project
MSG_VERBOSE
Class
oldClass
antTypeTable
getExposedClass
name
boolean
isTask
oldClass
Task
class
isAssignableFrom
oldClass
project
log
isTask
name
logLevel
if
isTask
invalidateCreatedTasks
name
project
log
name
def
getClassName
Project
MSG_DEBUG
antTypeTable
put
name
def
public
void
enterAntLib
String
uri
antLibCurrentUri
uri
antLibStack
push
uri
public
String
getCurrentAntlibUri
return
antLibCurrentUri
public
void
exitAntLib
antLibStack
pop
if
antLibStack
size
antLibCurrentUri
String
antLibStack
peek
else
antLibCurrentUri
private
void
initTasks
ClassLoader
classLoader
if
project
getCoreLoader
equals
project
getProperty
classLoader
project
getCoreLoader
String
dataDefs
InputStream
in
try
Properties
props
new
Properties
in
this
getClass
getResourceAsStream
dataDefs
if
in
throw
new
BuildException
props
load
in
Enumeration
e
props
propertyNames
while
e
hasMoreElements
String
name
String
e
nextElement
String
className
props
getProperty
name
AntTypeDefinition
def
new
AntTypeDefinition
def
setName
name
def
setClassName
className
def
setClassLoader
classLoader
def
setAdaptToClass
Task
class
def
setAdapterClass
TaskAdapter
class
antTypeTable
put
name
def
catch
IOException
ex
throw
new
BuildException
finally
if
in
try
in
close
catch
Exception
ignore
private
void
initTypes
ClassLoader
classLoader
if
project
getCoreLoader
equals
project
getProperty
classLoader
project
getCoreLoader
String
dataDefs
InputStream
in
try
Properties
props
new
Properties
in
this
getClass
getResourceAsStream
dataDefs
if
in
throw
new
BuildException
props
load
in
Enumeration
e
props
propertyNames
while
e
hasMoreElements
String
name
String
e
nextElement
String
className
props
getProperty
name
AntTypeDefinition
def
new
AntTypeDefinition
def
setName
name
def
setClassName
className
def
setClassLoader
classLoader
antTypeTable
put
name
def
catch
IOException
ex
throw
new
BuildException
finally
if
in
try
in
close
catch
Exception
ignore
private
synchronized
void
checkNamespace
String
componentName
if
componentName
indexOf
return
String
uri
ProjectHelper
extractUriFromComponentName
componentName
if
uri
startsWith
ProjectHelper
ANTLIB_URI
return
if
checkedNamespaces
contains
uri
return
checkedNamespaces
add
uri
Typedef
definer
new
Typedef
definer
setProject
project
definer
setURI
uri
definer
setResource
uri
substring
length
replace
definer
setOnError
new
Typedef
OnError
definer
init
definer
execute
private
static
class
AntTypeTable
extends
Hashtable
private
Project
project
public
AntTypeTable
Project
project
this
project
project
public
AntTypeDefinition
getDefinition
String
key
AntTypeDefinition
ret
AntTypeDefinition
super
get
key
return
ret
public
Object
get
Object
key
return
getTypeClass
String
key
public
Object
create
String
name
AntTypeDefinition
def
getDefinition
name
if
def
return
return
def
create
project
public
Class
getTypeClass
String
name
AntTypeDefinition
def
getDefinition
name
if
def
return
return
def
getTypeClass
project
public
Class
getExposedClass
String
name
AntTypeDefinition
def
getDefinition
name
if
def
return
return
def
getExposedClass
project
public
boolean
contains
Object
clazz
for
Iterator
i
values
iterator
i
hasNext
AntTypeDefinition
def
AntTypeDefinition
i
next
Class
c
def
getExposedClass
project
if
c
clazz
return
return
public
boolean
containsValue
Object
value
return
contains
value
