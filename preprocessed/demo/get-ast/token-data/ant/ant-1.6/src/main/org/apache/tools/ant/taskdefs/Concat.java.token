package
org
apache
tools
ant
taskdefs
import
java
io
BufferedReader
import
java
io
BufferedWriter
import
java
io
File
import
java
io
FileInputStream
import
java
io
FileOutputStream
import
java
io
FileReader
import
java
io
IOException
import
java
io
InputStreamReader
import
java
io
OutputStream
import
java
io
OutputStreamWriter
import
java
io
PrintWriter
import
java
io
Reader
import
java
io
StringReader
import
java
io
Writer
import
java
util
Enumeration
import
java
util
Vector
import
org
apache
tools
ant
BuildException
import
org
apache
tools
ant
DirectoryScanner
import
org
apache
tools
ant
Project
import
org
apache
tools
ant
ProjectComponent
import
org
apache
tools
ant
Task
import
org
apache
tools
ant
filters
util
ChainReaderHelper
import
org
apache
tools
ant
types
FileList
import
org
apache
tools
ant
types
FileSet
import
org
apache
tools
ant
types
FilterChain
import
org
apache
tools
ant
types
Path
import
org
apache
tools
ant
util
FileUtils
public
class
Concat
extends
Task
private
static
final
int
BUFFER_SIZE
private
File
destinationFile
private
boolean
append
private
String
encoding
private
String
outputEncoding
private
StringBuffer
textBuffer
private
Vector
sources
new
Vector
private
Vector
filterChains
private
boolean
forceOverwrite
private
TextElement
footer
private
TextElement
header
private
boolean
fixLastLine
private
String
eolString
System
getProperty
private
Writer
outputWriter
private
Vector
sourceFiles
new
Vector
private
static
FileUtils
fileUtils
FileUtils
newFileUtils
public
void
setDestfile
File
destinationFile
this
destinationFile
destinationFile
public
void
setAppend
boolean
append
this
append
append
public
void
setEncoding
String
encoding
this
encoding
encoding
if
outputEncoding
outputEncoding
encoding
public
void
setOutputEncoding
String
outputEncoding
this
outputEncoding
outputEncoding
public
void
setForce
boolean
force
this
forceOverwrite
force
public
Path
createPath
Path
path
new
Path
getProject
sources
addElement
path
return
path
public
void
addFileset
FileSet
set
sources
addElement
set
public
void
addFilelist
FileList
list
sources
addElement
list
public
void
addFilterChain
FilterChain
filterChain
if
filterChains
filterChains
new
Vector
filterChains
addElement
filterChain
public
void
addText
String
text
if
textBuffer
textBuffer
new
StringBuffer
text
length
textBuffer
append
text
public
void
addHeader
TextElement
header
this
header
header
public
void
addFooter
TextElement
footer
this
footer
footer
public
void
setFixLastLine
boolean
fixLastLine
this
fixLastLine
fixLastLine
public
void
setEol
FixCRLF
CrLf
crlf
String
s
crlf
getValue
if
s
equals
s
equals
eolString
else
if
s
equals
s
equals
eolString
else
if
s
equals
s
equals
eolString
public
void
setWriter
Writer
outputWriter
this
outputWriter
outputWriter
public
void
execute
sanitizeText
if
destinationFile
outputWriter
throw
new
BuildException
if
sources
size
textBuffer
throw
new
BuildException
if
sources
size
textBuffer
throw
new
BuildException
for
Enumeration
e
sources
elements
e
hasMoreElements
Object
o
e
nextElement
if
o
instanceof
Path
Path
path
Path
o
checkAddFiles
path
list
else
if
o
instanceof
FileSet
FileSet
fileSet
FileSet
o
DirectoryScanner
scanner
fileSet
getDirectoryScanner
getProject
checkAddFiles
fileSet
getDir
getProject
scanner
getIncludedFiles
else
if
o
instanceof
FileList
FileList
fileList
FileList
o
checkAddFiles
fileList
getDir
getProject
fileList
getFiles
getProject
if
destinationFile
forceOverwrite
sourceFiles
size
destinationFile
exists
boolean
outofdate
for
int
i
i
sourceFiles
size
i
File
file
File
sourceFiles
elementAt
i
if
file
lastModified
destinationFile
lastModified
outofdate
break
if
outofdate
log
destinationFile
Project
MSG_VERBOSE
return
if
textBuffer
sourceFiles
size
header
footer
log
Project
MSG_INFO
return
cat
public
void
reset
append
forceOverwrite
destinationFile
encoding
outputEncoding
fixLastLine
sources
removeAllElements
sourceFiles
removeAllElements
filterChains
footer
header
private
void
checkAddFiles
File
base
String
filenames
for
int
i
i
filenames
length
i
File
file
new
File
base
filenames
i
if
file
exists
log
file
Project
MSG_ERR
continue
if
destinationFile
fileUtils
fileNameEquals
destinationFile
file
throw
new
BuildException
file
sourceFiles
addElement
file
private
void
cat
OutputStream
os
Reader
reader
char
buffer
new
char
BUFFER_SIZE
try
PrintWriter
writer
if
outputWriter
writer
new
PrintWriter
outputWriter
else
if
destinationFile
os
new
LogOutputStream
this
Project
MSG_WARN
else
File
parent
fileUtils
getParentFile
destinationFile
if
parent
exists
parent
mkdirs
os
new
FileOutputStream
destinationFile
getAbsolutePath
append
if
outputEncoding
writer
new
PrintWriter
new
BufferedWriter
new
OutputStreamWriter
os
else
writer
new
PrintWriter
new
BufferedWriter
new
OutputStreamWriter
os
outputEncoding
if
header
if
header
getFiltering
concatenate
buffer
writer
new
StringReader
header
getValue
else
writer
print
header
getValue
if
textBuffer
reader
new
StringReader
getProject
replaceProperties
textBuffer
substring
else
reader
new
MultiReader
concatenate
buffer
writer
reader
if
footer
if
footer
getFiltering
concatenate
buffer
writer
new
StringReader
footer
getValue
else
writer
print
footer
getValue
writer
flush
if
os
os
flush
catch
IOException
ioex
throw
new
BuildException
ioex
getMessage
ioex
finally
if
reader
try
reader
close
catch
IOException
ignore
if
os
try
os
close
catch
IOException
ignore
private
void
concatenate
char
buffer
Writer
writer
Reader
in
throws
IOException
if
filterChains
ChainReaderHelper
helper
new
ChainReaderHelper
helper
setBufferSize
BUFFER_SIZE
helper
setPrimaryReader
in
helper
setFilterChains
filterChains
helper
setProject
getProject
in
new
BufferedReader
helper
getAssembledReader
while
int
nRead
in
read
buffer
buffer
length
if
nRead
break
writer
write
buffer
nRead
writer
flush
private
void
sanitizeText
if
textBuffer
if
textBuffer
substring
trim
length
textBuffer
public
static
class
TextElement
extends
ProjectComponent
private
String
value
private
boolean
trimLeading
private
boolean
trim
private
boolean
filtering
private
String
encoding
public
void
setFiltering
boolean
filtering
this
filtering
filtering
private
boolean
getFiltering
return
filtering
public
void
setEncoding
String
encoding
this
encoding
encoding
public
void
setFile
File
file
if
file
exists
throw
new
BuildException
file
BufferedReader
reader
try
if
this
encoding
reader
new
BufferedReader
new
FileReader
file
else
reader
new
BufferedReader
new
InputStreamReader
new
FileInputStream
file
this
encoding
value
fileUtils
readFully
reader
catch
IOException
ex
throw
new
BuildException
ex
finally
if
reader
try
reader
close
catch
Throwable
t
public
void
addText
String
value
this
value
getProject
replaceProperties
value
public
void
setTrimLeading
boolean
strip
this
trimLeading
strip
public
void
setTrim
boolean
trim
this
trim
trim
public
String
getValue
if
value
value
if
value
trim
length
value
if
trimLeading
char
current
value
toCharArray
StringBuffer
b
new
StringBuffer
current
length
boolean
startOfLine
int
pos
while
pos
current
length
char
ch
current
pos
if
startOfLine
if
ch
ch
continue
startOfLine
b
append
ch
if
ch
ch
startOfLine
value
b
toString
if
trim
value
value
trim
return
value
private
class
MultiReader
extends
Reader
private
int
pos
private
Reader
reader
private
int
lastPos
private
char
lastChars
new
char
eolString
length
private
boolean
needAddSeparator
private
Reader
getReader
throws
IOException
if
reader
if
encoding
reader
new
BufferedReader
new
FileReader
File
sourceFiles
elementAt
pos
else
reader
new
BufferedReader
new
InputStreamReader
new
FileInputStream
File
sourceFiles
elementAt
pos
encoding
for
int
i
i
lastChars
length
i
lastChars
i
return
reader
public
int
read
throws
IOException
if
needAddSeparator
int
ret
eolString
charAt
lastPos
if
lastPos
eolString
length
lastPos
needAddSeparator
return
ret
while
pos
sourceFiles
size
int
ch
getReader
read
if
ch
reader
close
reader
if
fixLastLine
isMissingEndOfLine
needAddSeparator
lastPos
else
addLastChar
char
ch
return
ch
pos
return
public
int
read
char
cbuf
int
off
int
len
throws
IOException
int
amountRead
while
pos
sourceFiles
size
needAddSeparator
if
needAddSeparator
cbuf
off
eolString
charAt
lastPos
if
lastPos
eolString
length
lastPos
needAddSeparator
pos
len
off
amountRead
if
len
return
amountRead
continue
int
nRead
getReader
read
cbuf
off
len
if
nRead
nRead
reader
close
reader
if
fixLastLine
isMissingEndOfLine
needAddSeparator
lastPos
else
pos
else
if
fixLastLine
for
int
i
nRead
i
nRead
lastChars
length
i
if
i
break
addLastChar
cbuf
off
i
len
nRead
off
nRead
amountRead
nRead
if
len
return
amountRead
if
amountRead
return
else
return
amountRead
public
void
close
throws
IOException
if
reader
reader
close
private
void
addLastChar
char
ch
for
int
i
lastChars
length
i
i
lastChars
i
lastChars
i
lastChars
lastChars
length
ch
private
boolean
isMissingEndOfLine
for
int
i
i
lastChars
length
i
if
lastChars
i
eolString
charAt
i
return
return
