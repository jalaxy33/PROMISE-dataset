package
org
apache
tools
ant
types
import
java
io
File
import
java
util
Stack
import
org
apache
tools
ant
BuildException
import
org
apache
tools
ant
DirectoryScanner
import
org
apache
tools
ant
Project
import
org
apache
tools
zip
UnixStat
public
class
ZipFileSet
extends
FileSet
public
static
final
int
DEFAULT_DIR_MODE
UnixStat
DIR_FLAG
UnixStat
DEFAULT_DIR_PERM
public
static
final
int
DEFAULT_FILE_MODE
UnixStat
FILE_FLAG
UnixStat
DEFAULT_FILE_PERM
private
File
srcFile
private
String
prefix
private
String
fullpath
private
boolean
hasDir
private
int
fileMode
DEFAULT_FILE_MODE
private
int
dirMode
DEFAULT_DIR_MODE
private
boolean
fileModeHasBeenSet
private
boolean
dirModeHasBeenSet
public
ZipFileSet
super
protected
ZipFileSet
FileSet
fileset
super
fileset
protected
ZipFileSet
ZipFileSet
fileset
super
fileset
srcFile
fileset
srcFile
prefix
fileset
prefix
fullpath
fileset
fullpath
hasDir
fileset
hasDir
fileMode
fileset
fileMode
dirMode
fileset
dirMode
fileModeHasBeenSet
fileset
fileModeHasBeenSet
dirModeHasBeenSet
fileset
dirModeHasBeenSet
public
void
setDir
File
dir
throws
BuildException
if
isReference
throw
tooManyAttributes
if
srcFile
throw
new
BuildException
else
super
setDir
dir
hasDir
public
void
setSrc
File
srcFile
if
isReference
throw
tooManyAttributes
if
hasDir
throw
new
BuildException
this
srcFile
srcFile
public
File
getSrc
Project
p
if
isReference
return
ZipFileSet
getRef
p
getSrc
p
return
srcFile
public
void
setPrefix
String
prefix
if
prefix
equals
fullpath
equals
throw
new
BuildException
this
prefix
prefix
public
String
getPrefix
Project
p
if
isReference
return
ZipFileSet
getRef
p
getPrefix
p
return
prefix
public
void
setFullpath
String
fullpath
if
prefix
equals
fullpath
equals
throw
new
BuildException
this
fullpath
fullpath
public
String
getFullpath
Project
p
if
isReference
return
ZipFileSet
getRef
p
getFullpath
p
return
fullpath
public
DirectoryScanner
getDirectoryScanner
Project
p
if
isReference
return
getRef
p
getDirectoryScanner
p
if
srcFile
ZipScanner
zs
new
ZipScanner
zs
setSrc
srcFile
super
setDir
p
getBaseDir
setupDirectoryScanner
zs
p
zs
init
return
zs
else
return
super
getDirectoryScanner
p
public
void
setFileMode
String
octalString
fileModeHasBeenSet
this
fileMode
UnixStat
FILE_FLAG
Integer
parseInt
octalString
public
int
getFileMode
Project
p
if
isReference
return
ZipFileSet
getRef
p
getFileMode
p
return
fileMode
public
boolean
hasFileModeBeenSet
if
isReference
return
ZipFileSet
getRef
getProject
hasFileModeBeenSet
return
fileModeHasBeenSet
public
void
setDirMode
String
octalString
dirModeHasBeenSet
this
dirMode
UnixStat
DIR_FLAG
Integer
parseInt
octalString
public
int
getDirMode
Project
p
if
isReference
return
ZipFileSet
getRef
p
getDirMode
p
return
dirMode
public
boolean
hasDirModeBeenSet
if
isReference
return
ZipFileSet
getRef
getProject
hasDirModeBeenSet
return
dirModeHasBeenSet
protected
AbstractFileSet
getRef
Project
p
if
isChecked
Stack
stk
new
Stack
stk
push
this
dieOnCircularReference
stk
p
Object
o
getRefid
getReferencedObject
p
if
o
instanceof
ZipFileSet
return
AbstractFileSet
o
else
if
o
instanceof
FileSet
ZipFileSet
zfs
new
ZipFileSet
FileSet
o
zfs
setPrefix
prefix
zfs
setFullpath
fullpath
zfs
fileModeHasBeenSet
fileModeHasBeenSet
zfs
fileMode
fileMode
zfs
dirModeHasBeenSet
dirModeHasBeenSet
zfs
dirMode
dirMode
return
zfs
else
String
msg
getRefid
getRefId
throw
new
BuildException
msg
public
Object
clone
if
isReference
return
ZipFileSet
getRef
getProject
clone
else
return
super
clone
