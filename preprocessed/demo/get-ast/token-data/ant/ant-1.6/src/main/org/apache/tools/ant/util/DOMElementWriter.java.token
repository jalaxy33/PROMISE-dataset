package
org
apache
tools
ant
util
import
java
io
IOException
import
java
io
OutputStream
import
java
io
OutputStreamWriter
import
java
io
Writer
import
org
w3c
dom
Attr
import
org
w3c
dom
Element
import
org
w3c
dom
NamedNodeMap
import
org
w3c
dom
Node
import
org
w3c
dom
NodeList
import
org
w3c
dom
Text
public
class
DOMElementWriter
private
static
String
lSep
System
getProperty
protected
String
knownEntities
public
void
write
Element
root
OutputStream
out
throws
IOException
Writer
wri
new
OutputStreamWriter
out
wri
write
write
root
wri
wri
flush
public
void
write
Element
element
Writer
out
int
indent
String
indentWith
throws
IOException
for
int
i
i
indent
i
out
write
indentWith
out
write
out
write
element
getTagName
NamedNodeMap
attrs
element
getAttributes
for
int
i
i
attrs
getLength
i
Attr
attr
Attr
attrs
item
i
out
write
out
write
attr
getName
out
write
out
write
encode
attr
getValue
out
write
out
write
boolean
hasChildren
NodeList
children
element
getChildNodes
for
int
i
i
children
getLength
i
Node
child
children
item
i
switch
child
getNodeType
case
Node
ELEMENT_NODE
if
hasChildren
out
write
lSep
hasChildren
write
Element
child
out
indent
indentWith
break
case
Node
TEXT_NODE
out
write
encode
child
getNodeValue
break
case
Node
CDATA_SECTION_NODE
out
write
out
write
encodedata
Text
child
getData
out
write
break
case
Node
ENTITY_REFERENCE_NODE
out
write
out
write
child
getNodeName
out
write
break
case
Node
PROCESSING_INSTRUCTION_NODE
out
write
out
write
child
getNodeName
String
data
child
getNodeValue
if
data
data
length
out
write
out
write
data
out
write
break
if
hasChildren
for
int
i
i
indent
i
out
write
indentWith
out
write
out
write
element
getTagName
out
write
out
write
lSep
out
flush
public
String
encode
String
value
StringBuffer
sb
new
StringBuffer
int
len
value
length
for
int
i
i
len
i
char
c
value
charAt
i
switch
c
case
sb
append
break
case
sb
append
break
case
sb
append
break
case
sb
append
break
case
int
nextSemi
value
indexOf
i
if
nextSemi
isReference
value
substring
i
nextSemi
sb
append
else
sb
append
break
default
if
isLegalCharacter
c
sb
append
c
break
return
sb
substring
public
String
encodedata
final
String
value
StringBuffer
sb
new
StringBuffer
int
len
value
length
for
int
i
i
len
i
char
c
value
charAt
i
if
isLegalCharacter
c
sb
append
c
String
result
sb
substring
int
cdEnd
result
indexOf
while
cdEnd
sb
setLength
cdEnd
sb
append
append
result
substring
cdEnd
result
sb
substring
cdEnd
result
indexOf
return
result
public
boolean
isReference
String
ent
if
ent
charAt
ent
endsWith
return
if
ent
charAt
if
ent
charAt
try
Integer
parseInt
ent
substring
ent
length
return
catch
NumberFormatException
nfe
return
else
try
Integer
parseInt
ent
substring
ent
length
return
catch
NumberFormatException
nfe
return
String
name
ent
substring
ent
length
for
int
i
i
knownEntities
length
i
if
name
equals
knownEntities
i
return
return
public
boolean
isLegalCharacter
char
c
if
c
c
c
return
else
if
c
return
else
if
c
return
else
if
c
return
else
if
c
return
return
