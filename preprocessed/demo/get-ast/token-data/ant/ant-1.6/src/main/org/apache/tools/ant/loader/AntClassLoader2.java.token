package
org
apache
tools
ant
loader
import
java
io
File
import
java
io
IOException
import
java
io
InputStream
import
java
io
InputStreamReader
import
java
io
Reader
import
org
apache
tools
ant
AntClassLoader
import
org
apache
tools
ant
Project
import
java
util
jar
Manifest
import
java
util
jar
JarFile
import
java
util
zip
ZipFile
import
java
util
jar
Attributes
import
java
util
jar
Attributes
Name
import
java
net
URL
import
java
net
MalformedURLException
import
java
util
zip
ZipEntry
import
java
util
StringTokenizer
import
org
apache
tools
ant
util
FileUtils
public
class
AntClassLoader2
extends
AntClassLoader
private
FileUtils
fileUtils
public
AntClassLoader2
fileUtils
FileUtils
newFileUtils
protected
Class
defineClassFromData
File
container
byte
classData
String
className
throws
IOException
definePackage
container
className
return
defineClass
className
classData
classData
length
Project
class
getProtectionDomain
private
Manifest
getJarManifest
File
container
throws
IOException
if
container
isDirectory
return
JarFile
jarFile
try
jarFile
new
JarFile
container
return
jarFile
getManifest
finally
if
jarFile
jarFile
close
protected
void
definePackage
File
container
String
className
throws
IOException
int
classIndex
className
lastIndexOf
if
classIndex
return
String
packageName
className
substring
classIndex
if
getPackage
packageName
return
Manifest
manifest
getJarManifest
container
if
manifest
definePackage
packageName
else
definePackage
container
packageName
manifest
protected
void
definePackage
File
container
String
packageName
Manifest
manifest
String
sectionName
packageName
replace
String
specificationTitle
String
specificationVendor
String
specificationVersion
String
implementationTitle
String
implementationVendor
String
implementationVersion
String
sealedString
URL
sealBase
Attributes
sectionAttributes
manifest
getAttributes
sectionName
if
sectionAttributes
specificationTitle
sectionAttributes
getValue
Name
SPECIFICATION_TITLE
specificationVendor
sectionAttributes
getValue
Name
SPECIFICATION_VENDOR
specificationVersion
sectionAttributes
getValue
Name
SPECIFICATION_VERSION
implementationTitle
sectionAttributes
getValue
Name
IMPLEMENTATION_TITLE
implementationVendor
sectionAttributes
getValue
Name
IMPLEMENTATION_VENDOR
implementationVersion
sectionAttributes
getValue
Name
IMPLEMENTATION_VERSION
sealedString
sectionAttributes
getValue
Name
SEALED
Attributes
mainAttributes
manifest
getMainAttributes
if
mainAttributes
if
specificationTitle
specificationTitle
mainAttributes
getValue
Name
SPECIFICATION_TITLE
if
specificationVendor
specificationVendor
mainAttributes
getValue
Name
SPECIFICATION_VENDOR
if
specificationVersion
specificationVersion
mainAttributes
getValue
Name
SPECIFICATION_VERSION
if
implementationTitle
implementationTitle
mainAttributes
getValue
Name
IMPLEMENTATION_TITLE
if
implementationVendor
implementationVendor
mainAttributes
getValue
Name
IMPLEMENTATION_VENDOR
if
implementationVersion
implementationVersion
mainAttributes
getValue
Name
IMPLEMENTATION_VERSION
if
sealedString
sealedString
mainAttributes
getValue
Name
SEALED
if
sealedString
sealedString
equalsIgnoreCase
try
sealBase
new
URL
container
getPath
catch
MalformedURLException
e
definePackage
packageName
specificationTitle
specificationVersion
specificationVendor
implementationTitle
implementationVersion
implementationVendor
sealBase
protected
void
addPathFile
File
pathComponent
throws
IOException
super
addPathFile
pathComponent
if
pathComponent
isDirectory
return
String
classpath
ZipFile
jarFile
InputStream
manifestStream
try
jarFile
new
ZipFile
pathComponent
manifestStream
jarFile
getInputStream
new
ZipEntry
if
manifestStream
return
Reader
manifestReader
new
InputStreamReader
manifestStream
org
apache
tools
ant
taskdefs
Manifest
manifest
new
org
apache
tools
ant
taskdefs
Manifest
manifestReader
classpath
manifest
getMainSection
getAttributeValue
catch
org
apache
tools
ant
taskdefs
ManifestException
e
finally
if
manifestStream
manifestStream
close
if
jarFile
jarFile
close
if
classpath
URL
baseURL
fileUtils
getFileURL
pathComponent
StringTokenizer
st
new
StringTokenizer
classpath
while
st
hasMoreTokens
String
classpathElement
st
nextToken
URL
libraryURL
new
URL
baseURL
classpathElement
if
libraryURL
getProtocol
equals
log
classpathElement
Project
MSG_VERBOSE
continue
File
libraryFile
new
File
libraryURL
getFile
if
libraryFile
exists
isInPath
libraryFile
addPathFile
libraryFile
