package
org
apache
tools
ant
import
java
io
Serializable
import
java
util
ArrayList
import
java
util
Collections
import
java
util
Enumeration
import
java
util
HashMap
import
java
util
Hashtable
import
java
util
List
import
java
util
Locale
import
java
util
Map
import
java
util
Iterator
import
org
apache
tools
ant
util
CollectionUtils
import
org
xml
sax
AttributeList
import
org
xml
sax
helpers
AttributeListImpl
public
class
RuntimeConfigurable
implements
Serializable
private
static
final
String
ANT_TYPE
private
String
elementTag
private
List
children
private
transient
Object
wrappedObject
private
transient
IntrospectionHelper
Creator
creator
private
transient
AttributeList
attributes
private
List
attributeNames
private
Map
attributeMap
private
StringBuffer
characters
private
boolean
proxyConfigured
private
String
polyType
public
RuntimeConfigurable
Object
proxy
String
elementTag
wrappedObject
proxy
this
elementTag
elementTag
proxyConfigured
if
proxy
instanceof
Task
Task
proxy
setRuntimeConfigurableWrapper
this
public
void
setProxy
Object
proxy
wrappedObject
proxy
proxyConfigured
void
setCreator
IntrospectionHelper
Creator
creator
this
creator
creator
public
Object
getProxy
return
wrappedObject
public
String
getPolyType
return
polyType
public
void
setPolyType
String
polyType
this
polyType
polyType
public
void
setAttributes
AttributeList
attributes
this
attributes
new
AttributeListImpl
attributes
for
int
i
i
attributes
getLength
i
setAttribute
attributes
getName
i
attributes
getValue
i
public
void
setAttribute
String
name
String
value
if
name
equalsIgnoreCase
ANT_TYPE
this
polyType
value
else
if
attributeNames
attributeNames
new
ArrayList
attributeMap
new
HashMap
attributeNames
add
name
attributeMap
put
name
value
public
Hashtable
getAttributeMap
if
attributeMap
return
new
Hashtable
attributeMap
else
return
new
Hashtable
public
AttributeList
getAttributes
return
attributes
public
void
addChild
RuntimeConfigurable
child
if
children
children
new
ArrayList
children
add
child
RuntimeConfigurable
getChild
int
index
return
RuntimeConfigurable
children
get
index
public
Enumeration
getChildren
if
children
return
Collections
enumeration
children
else
return
new
CollectionUtils
EmptyEnumeration
public
void
addText
String
data
if
data
length
return
if
characters
characters
append
data
else
characters
new
StringBuffer
data
public
void
addText
char
buf
int
start
int
count
if
count
return
if
characters
characters
new
StringBuffer
count
characters
append
buf
start
count
public
StringBuffer
getText
if
characters
return
characters
else
return
new
StringBuffer
public
String
getElementTag
return
elementTag
public
void
maybeConfigure
Project
p
throws
BuildException
maybeConfigure
p
public
void
maybeConfigure
Project
p
boolean
configureChildren
throws
BuildException
String
id
if
proxyConfigured
return
Object
target
wrappedObject
instanceof
TypeAdapter
TypeAdapter
wrappedObject
getProxy
wrappedObject
IntrospectionHelper
ih
IntrospectionHelper
getHelper
p
target
getClass
if
attributeNames
for
int
i
i
attributeNames
size
i
String
name
String
attributeNames
get
i
String
value
String
attributeMap
get
name
value
p
replaceProperties
value
try
ih
setAttribute
p
target
name
toLowerCase
Locale
US
value
catch
BuildException
be
if
name
equals
throw
be
id
String
attributeMap
get
if
characters
ProjectHelper
addText
p
wrappedObject
characters
substring
Enumeration
e
getChildren
while
e
hasMoreElements
RuntimeConfigurable
child
RuntimeConfigurable
e
nextElement
if
child
wrappedObject
instanceof
Task
Task
childTask
Task
child
wrappedObject
childTask
setRuntimeConfigurableWrapper
child
if
child
creator
configureChildren
child
maybeConfigure
p
child
creator
store
continue
String
tag
child
getElementTag
toLowerCase
Locale
US
if
configureChildren
ih
supportsNestedElement
tag
child
maybeConfigure
p
ProjectHelper
storeChild
p
target
child
wrappedObject
tag
if
id
p
addReference
id
wrappedObject
proxyConfigured
public
void
reconfigure
Project
p
proxyConfigured
maybeConfigure
p
public
void
applyPreSet
RuntimeConfigurable
r
if
r
attributeMap
for
Iterator
i
r
attributeMap
keySet
iterator
i
hasNext
String
name
String
i
next
if
attributeMap
attributeMap
get
name
setAttribute
name
String
r
attributeMap
get
name
if
r
polyType
polyType
polyType
r
polyType
if
r
children
List
newChildren
new
ArrayList
newChildren
addAll
r
children
if
children
newChildren
addAll
children
children
newChildren
if
r
characters
if
characters
characters
toString
trim
length
characters
new
StringBuffer
r
characters
toString
