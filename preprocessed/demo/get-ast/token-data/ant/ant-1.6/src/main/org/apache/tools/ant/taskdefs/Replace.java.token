package
org
apache
tools
ant
taskdefs
import
java
io
BufferedReader
import
java
io
BufferedWriter
import
java
io
File
import
java
io
FileInputStream
import
java
io
FileNotFoundException
import
java
io
FileOutputStream
import
java
io
FileReader
import
java
io
FileWriter
import
java
io
IOException
import
java
io
InputStreamReader
import
java
io
OutputStreamWriter
import
java
io
Reader
import
java
io
Writer
import
java
util
Enumeration
import
java
util
Properties
import
java
util
Vector
import
org
apache
tools
ant
BuildException
import
org
apache
tools
ant
DirectoryScanner
import
org
apache
tools
ant
Project
import
org
apache
tools
ant
util
FileUtils
import
org
apache
tools
ant
util
StringUtils
public
class
Replace
extends
MatchingTask
private
File
src
private
NestedString
token
private
NestedString
value
new
NestedString
private
File
propertyFile
private
File
replaceFilterFile
private
Properties
properties
private
Vector
replacefilters
new
Vector
private
File
dir
private
int
fileCount
private
int
replaceCount
private
boolean
summary
private
String
encoding
private
FileUtils
fileUtils
FileUtils
newFileUtils
public
class
NestedString
private
StringBuffer
buf
new
StringBuffer
public
void
addText
String
val
buf
append
val
public
String
getText
return
buf
substring
public
class
Replacefilter
private
String
token
private
String
value
private
String
property
public
void
validate
throws
BuildException
if
token
String
message
throw
new
BuildException
message
if
equals
token
String
message
throw
new
BuildException
message
if
value
property
String
message
throw
new
BuildException
message
if
property
if
propertyFile
String
message
throw
new
BuildException
message
if
properties
properties
getProperty
property
String
message
property
propertyFile
getPath
throw
new
BuildException
message
public
String
getReplaceValue
if
property
return
properties
getProperty
property
else
if
value
return
value
else
if
Replace
this
value
return
Replace
this
value
getText
else
return
new
String
public
void
setToken
String
token
this
token
token
public
String
getToken
return
token
public
void
setValue
String
value
this
value
value
public
String
getValue
return
value
public
void
setProperty
String
property
this
property
property
public
String
getProperty
return
property
public
void
execute
throws
BuildException
Vector
savedFilters
Vector
replacefilters
clone
Properties
savedProperties
properties
Properties
properties
clone
try
if
replaceFilterFile
Properties
props
getProperties
replaceFilterFile
Enumeration
e
props
keys
while
e
hasMoreElements
String
token
e
nextElement
toString
Replacefilter
replaceFilter
createReplacefilter
replaceFilter
setToken
token
replaceFilter
setValue
props
getProperty
token
validateAttributes
if
propertyFile
properties
getProperties
propertyFile
validateReplacefilters
fileCount
replaceCount
if
src
processFile
src
if
dir
DirectoryScanner
ds
super
getDirectoryScanner
dir
String
srcs
ds
getIncludedFiles
for
int
i
i
srcs
length
i
File
file
new
File
dir
srcs
i
processFile
file
if
summary
log
replaceCount
fileCount
Project
MSG_INFO
finally
replacefilters
savedFilters
properties
savedProperties
public
void
validateAttributes
throws
BuildException
if
src
dir
String
message
throw
new
BuildException
message
getLocation
if
propertyFile
propertyFile
exists
String
message
propertyFile
getPath
throw
new
BuildException
message
getLocation
if
token
replacefilters
size
String
message
throw
new
BuildException
message
getLocation
if
token
equals
token
getText
String
message
throw
new
BuildException
message
getLocation
public
void
validateReplacefilters
throws
BuildException
for
int
i
i
replacefilters
size
i
Replacefilter
element
Replacefilter
replacefilters
elementAt
i
element
validate
public
Properties
getProperties
File
propertyFile
throws
BuildException
Properties
properties
new
Properties
try
properties
load
new
FileInputStream
propertyFile
catch
FileNotFoundException
e
String
message
propertyFile
getPath
throw
new
BuildException
message
catch
IOException
e
String
message
propertyFile
getPath
throw
new
BuildException
message
return
properties
private
void
processFile
File
src
throws
BuildException
if
src
exists
throw
new
BuildException
src
getPath
getLocation
File
temp
fileUtils
createTempFile
fileUtils
getParentFile
src
temp
deleteOnExit
Reader
reader
Writer
writer
try
reader
encoding
new
FileReader
src
new
InputStreamReader
new
FileInputStream
src
encoding
writer
encoding
new
FileWriter
temp
new
OutputStreamWriter
new
FileOutputStream
temp
encoding
BufferedReader
br
new
BufferedReader
reader
BufferedWriter
bw
new
BufferedWriter
writer
String
buf
fileUtils
readFully
br
if
buf
buf
String
newString
new
String
buf
if
token
String
val
stringReplace
value
getText
val
stringReplace
val
StringUtils
LINE_SEP
String
tok
stringReplace
token
getText
tok
stringReplace
tok
StringUtils
LINE_SEP
log
src
getPath
token
getText
value
getText
Project
MSG_VERBOSE
newString
stringReplace
newString
tok
val
if
replacefilters
size
newString
processReplacefilters
newString
src
getPath
boolean
changes
newString
equals
buf
if
changes
bw
write
newString
newString
length
bw
flush
bw
close
writer
br
close
reader
if
changes
fileCount
fileUtils
rename
temp
src
temp
catch
IOException
ioe
throw
new
BuildException
src
ioe
getClass
getName
ioe
getMessage
ioe
getLocation
finally
if
reader
try
reader
close
catch
IOException
e
if
writer
try
writer
close
catch
IOException
e
if
temp
temp
delete
private
String
processReplacefilters
String
buffer
String
filename
String
newString
new
String
buffer
for
int
i
i
replacefilters
size
i
Replacefilter
filter
Replacefilter
replacefilters
elementAt
i
log
filename
filter
getToken
filter
getReplaceValue
Project
MSG_VERBOSE
newString
stringReplace
newString
filter
getToken
filter
getReplaceValue
return
newString
public
void
setFile
File
file
this
src
file
public
void
setSummary
boolean
summary
this
summary
summary
public
void
setReplaceFilterFile
File
filename
replaceFilterFile
filename
public
void
setDir
File
dir
this
dir
dir
public
void
setToken
String
token
createReplaceToken
addText
token
public
void
setValue
String
value
createReplaceValue
addText
value
public
void
setEncoding
String
encoding
this
encoding
encoding
public
NestedString
createReplaceToken
if
token
token
new
NestedString
return
token
public
NestedString
createReplaceValue
return
value
public
void
setPropertyFile
File
filename
propertyFile
filename
public
Replacefilter
createReplacefilter
Replacefilter
filter
new
Replacefilter
replacefilters
addElement
filter
return
filter
private
String
stringReplace
String
str
String
str1
String
str2
boolean
countReplaces
StringBuffer
ret
new
StringBuffer
int
start
int
found
str
indexOf
str1
while
found
if
found
start
ret
append
str
substring
start
found
if
str2
ret
append
str2
start
found
str1
length
found
str
indexOf
str1
start
if
countReplaces
replaceCount
if
str
length
start
ret
append
str
substring
start
str
length
return
ret
toString
