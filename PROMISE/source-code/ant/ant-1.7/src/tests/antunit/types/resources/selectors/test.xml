<project default="all" xmlns:au="antlib:org.apache.ant.antunit"
         xmlns:rsel="antlib:org.apache.tools.ant.types.resources.selectors"
         xmlns:rcmp="antlib:org.apache.tools.ant.types.resources.comparators">

  <target name="testname1">
    <au:assertTrue>
      <resourcecount when="equal" count="2">
        <restrict>
          <resources>
            <resource name="foo" />
            <resource name="bar" />
            <resource name="baz" />
            <resource name="boo" />
            <resource name="bang" />
          </resources>
          <rsel:name name="ba?" />
        </restrict>
      </resourcecount>
    </au:assertTrue>
  </target>

  <target name="testname2">
    <au:assertTrue>
      <resourcecount when="equal" count="3">
        <restrict>
          <resources>
            <file file="foo" />
            <resource name="foo" />
            <file file="foo" basedir="${basedir}" />
          </resources>
          <rsel:name name="foo" />
        </restrict>
      </resourcecount>
    </au:assertTrue>
  </target>

  <target name="name" depends="testname1,testname2" />

  <target name="testexists">
    <au:assertTrue>
      <resourcecount when="equal" count="1">
        <restrict>
          <resources>
            <file file="idonotexist" />
            <resource name="foo" />
            <resource name="foo" exists="false" />
          </resources>
          <rsel:exists />
        </restrict>
      </resourcecount>
    </au:assertTrue>
  </target>

  <target name="testinstanceoftype1">
    <au:assertTrue>
      <resourcecount when="equal" count="2">
        <restrict>
          <resources>
            <file file="foo" />
            <url url="http://ant.apache.org/index.html" />
            <resource name="foo" />
            <string value="foo" />
            <file file="bar" />
          </resources>
          <rsel:instanceof type="file" />
        </restrict>
      </resourcecount>
    </au:assertTrue>
  </target>

  <target name="testinstanceoftype2">
    <typedef name="file" uri="test"
             classname="org.apache.tools.ant.types.resources.FileResource" />
    <au:assertTrue>
      <resourcecount when="equal" count="1">
        <restrict>
          <resources>
            <url file="foo" />
            <file file="bar" xmlns="test" />
          </resources>
          <rsel:instanceof type="test:file" />
        </restrict>
      </resourcecount>
    </au:assertTrue>
  </target>

  <target name="testinstanceoftype3">
    <typedef name="file" uri="test"
             classname="org.apache.tools.ant.types.resources.FileResource" />
    <au:assertTrue>
      <resourcecount when="equal" count="1">
        <restrict>
          <resources>
            <url file="foo" />
            <file file="bar" xmlns="test" />
          </resources>
          <rsel:instanceof type="file" uri="test" />
        </restrict>
      </resourcecount>
    </au:assertTrue>
  </target>

  <target name="instanceoftype"
    depends="testinstanceoftype1,testinstanceoftype2,testinstanceoftype3" />

  <target name="testinstanceofclass">
    <au:assertTrue>
      <resourcecount when="equal" count="7">
        <restrict>
          <resources>
            <filelist dir="${basedir}" files="a,b,c,d,e,f,g" />
          </resources>
          <rsel:instanceof class="org.apache.tools.ant.types.Resource" />
        </restrict>
      </resourcecount>
    </au:assertTrue>
  </target>

  <target name="instanceof" depends="instanceoftype,testinstanceofclass" />

  <target name="testtype">
    <au:assertTrue>
      <resourcecount when="equal" count="2">
        <restrict>
          <resources>
             <file file="${basedir}" />
             <file file="${ant.file}" />
             <resource directory="true" />
             <resource directory="false" />
          </resources>
          <rsel:type type="dir" />
        </restrict>
      </resourcecount>
    </au:assertTrue>
  </target>

  <target name="testdate">
    <au:assertTrue>
      <resourcecount when="equal" count="3">
        <restrict>
          <resources>
             <resource lastmodified="4" />
             <resource lastmodified="5" />
             <resource lastmodified="6" />
             <resource lastmodified="7" />
             <resource lastmodified="8" />
          </resources>
          <rsel:date when="after" millis="5" granularity="0" />
        </restrict>
      </resourcecount>
    </au:assertTrue>
  </target>

  <target name="testsize">
    <au:assertTrue>
      <resourcecount when="equal" count="4">
        <restrict>
          <resources>
             <resource size="4" />
             <resource size="5" />
             <resource size="6" />
             <resource size="7" />
             <resource size="8" />
          </resources>
          <rsel:size when="le" size="7" />
        </restrict>
      </resourcecount>
    </au:assertTrue>
  </target>

  <target name="testand">
    <au:assertTrue>
      <resourcecount when="equal" count="1">
        <restrict>
          <resources>
            <string value="fee" />
            <resource name="fi" size="3" />
            <resource name="fo" />
            <resource name="fum" />
          </resources>
          <and xmlns="antlib:org.apache.tools.ant.types.resources.selectors">
            <name name="f?" />
            <size size="3" />
          </and>
        </restrict>
      </resourcecount>
    </au:assertTrue>
  </target>

  <target name="testor">
    <au:assertTrue>
      <resourcecount when="equal" count="3">
        <restrict>
          <resources>
            <string value="fee" />
            <resource name="fi" size="3" />
            <resource name="fo" />
            <resource name="fum" />
          </resources>
          <or xmlns="antlib:org.apache.tools.ant.types.resources.selectors">
            <name name="f?" />
            <size size="3" />
          </or>
        </restrict>
      </resourcecount>
    </au:assertTrue>
  </target>

  <target name="testnot">
    <au:assertTrue>
      <resourcecount when="equal" count="2">
        <restrict>
          <resources>
            <string value="fee" />
            <resource name="fi" size="3" />
            <resource name="fo" />
            <resource name="fum" />
          </resources>
          <not xmlns="antlib:org.apache.tools.ant.types.resources.selectors">
            <size size="3" />
          </not>
        </restrict>
      </resourcecount>
    </au:assertTrue>
  </target>

  <target name="testnone">
    <au:assertTrue>
      <resourcecount when="equal" count="1">
        <restrict>
          <resources>
            <string value="fee" />
            <resource name="fi" size="3" />
            <resource name="fo" />
            <resource name="fum" />
          </resources>
          <none xmlns="antlib:org.apache.tools.ant.types.resources.selectors">
            <name name="f?" />
            <size size="3" />
          </none>
        </restrict>
      </resourcecount>
    </au:assertTrue>
  </target>

  <target name="testmajority1">
    <au:assertTrue>
      <resourcecount when="equal" count="2">
        <restrict>
          <resources>
            <string value="fee" />
            <resource name="fi" size="3" />
            <resource name="fo" />
            <resource name="fum" />
          </resources>
          <majority xmlns="antlib:org.apache.tools.ant.types.resources.selectors">
            <name name="f?" />
            <size size="3" />
            <instanceof type="string" />
          </majority>
        </restrict>
      </resourcecount>
    </au:assertTrue>
  </target>

  <target name="testmajority2">
    <au:assertTrue>
      <resourcecount when="equal" count="3">
        <restrict>
          <resources>
            <string value="fee" />
            <resource name="fi" size="3" />
            <resource name="fo" />
            <resource name="fum" />
          </resources>
          <majority xmlns="antlib:org.apache.tools.ant.types.resources.selectors">
            <name name="f?" />
            <size size="3" />
            <instanceof type="resource" />
          </majority>
        </restrict>
      </resourcecount>
    </au:assertTrue>
  </target>

  <target name="testmajority3">
    <au:assertTrue>
      <resourcecount when="equal" count="3">
        <restrict>
          <resources>
            <string value="fee" />
            <resource name="fi" size="3" />
            <resource name="fo" />
            <resource name="fum" />
          </resources>
          <majority allowtie="true"
              xmlns="antlib:org.apache.tools.ant.types.resources.selectors">
            <name name="f?" />
            <size size="3" />
            <instanceof type="string" />
            <exists />
          </majority>
        </restrict>
      </resourcecount>
    </au:assertTrue>
  </target>

  <target name="testmajority4">
    <au:assertTrue>
      <resourcecount when="equal" count="2">
        <restrict>
          <resources>
            <string value="fee" />
            <resource name="fi" size="3" />
            <resource name="fo" />
            <resource name="fum" />
          </resources>
          <majority allowtie="false"
              xmlns="antlib:org.apache.tools.ant.types.resources.selectors">
            <name name="f?" />
            <size size="3" />
            <instanceof type="string" />
            <exists />
          </majority>
        </restrict>
      </resourcecount>
    </au:assertTrue>
  </target>

  <target name="testcontains">
    <au:assertTrue>
      <resourcecount when="equal" count="2">
        <restrict>
          <resources>
            <string value="foo" />
            <string value="bar" />
            <string value="baz" />
          </resources>
          <contains text="b"
              xmlns="antlib:org.apache.tools.ant.types.resources.selectors" />
        </restrict>
      </resourcecount>
    </au:assertTrue>
  </target>

  <target name="testcontainsregexp">
    <au:assertTrue>
      <resourcecount when="equal" count="2">
        <restrict>
          <resources>
            <string value="foo" />
            <string value="bar" />
            <string value="baz" />
          </resources>
          <containsregexp expression="^b..$"
              xmlns="antlib:org.apache.tools.ant.types.resources.selectors" />
        </restrict>
      </resourcecount>
    </au:assertTrue>
  </target>

  <target name="testcompare">
    <au:assertTrue>
      <and>
        <!-- basic test, natural ordering -->
        <resourcecount count="3">
          <restrict>
            <rsel:compare when="greater" against="each">
              <control><string value="b" /></control>
            </rsel:compare>
            <resources>
              <string value="a" />
              <string value="b" />
              <string value="c" />
              <string value="d" />
              <string value="e" />
            </resources>
          </restrict>
        </resourcecount>
        <!-- one comparator, default when/against -->
        <resourcecount count="5">
          <restrict>
            <rsel:compare>
              <control><string value="." /></control>
              <rcmp:size />
            </rsel:compare>
            <resources>
              <string value="a" />
              <string value="b" />
              <string value="c" />
              <string value="d" />
              <string value="e" />
            </resources>
          </restrict>
        </resourcecount>
        <!-- multiple controls, comparators -->
        <resourcecount count="3">
          <restrict>
            <rsel:compare when="greater" against="each">
              <control>
                <string value="a" />
                <string value="b" />
                <string value="bb" />
                <string value="c" />
                <string value="ccc" />
              </control>
              <rcmp:name />
              <rcmp:size />
            </rsel:compare>
            <resources>
              <string value="a" />
              <string value="bbbb" />
              <string value="ccc" />
              <string value="cccc" />
              <string value="d" />
              <string value="e" />
            </resources>
          </restrict>
        </resourcecount>
      </and>
    </au:assertTrue>
  </target>

  <target name="majority"
          depends="testmajority1,testmajority2,testmajority3,testmajority4" />

  <target name="logical"
          depends="testand,testor,testnone,testnot,majority" />

  <target name="all"
    depends="name,testexists,instanceof,testtype,testdate,testsize,testcontains,testcontainsregexp,logical,testcompare" />

  <!-- 
    The tests for oata.types.selectors.ModifiedSelectorTest as 
    ResourceSelector are in its test-buildfile src\etc\testcases\types\selectors.xml. 
  -->

</project>
