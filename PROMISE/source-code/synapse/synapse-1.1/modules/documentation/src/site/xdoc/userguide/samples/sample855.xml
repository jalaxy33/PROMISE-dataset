<?xml version="1.0" encoding="ISO-8859-1" ?>
<!--
  ~  Licensed to the Apache Software Foundation (ASF) under one
  ~  or more contributor license agreements.  See the NOTICE file
  ~  distributed with this work for additional information
  ~  regarding copyright ownership.  The ASF licenses this file
  ~  to you under the Apache License, Version 2.0 (the
  ~  "License"); you may not use this file except in compliance
  ~  with the License.  You may obtain a copy of the License at
  ~
  ~   http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~  Unless required by applicable law or agreed to in writing,
  ~  software distributed under the License is distributed on an
  ~   * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~  KIND, either express or implied.  See the License for the
  ~  specific language governing permissions and limitations
  ~  under the License.
  -->

<document>
    <properties>
        <title>Apache Synapse - Sample 855</title>
    </properties>
    <body>
        <section name="Sample 855: Introduction to Synapse Content Based Router eip function template">
            <div class="xmlConf">&lt;!-- Introduction to Synapse Content Based Router eip function template --&gt;
&lt;definitions xmlns="http://ws.apache.org/ns/synapse"&gt;
&lt;import xmlns="http://ws.apache.org/ns/synapse" name="EipLibrary" package="synapse.lang.eip" /&gt;
&lt;proxy name="StockQuoteProxy" transports="https http" startOnLoad="true" trace="disable"&gt;
        &lt;target&gt;
        &lt;inSequence&gt;		
               &lt;call-template target="synapse.lang.eip.content_based_router"&gt;
&lt;with-param name="routing_exp" value="{{//m0:getQuote/m0:request/m0:symbol}}" xmlns:m0="http://services.samples"/&gt;
&lt;with-param name="match_content" value="IBM:cnd1_seq,MSFT:cnd2_seq;cnd3_seq"/&gt;
    &lt;/call-template&gt;
&lt;/inSequence&gt;
&lt;outSequence&gt;
&lt;send/&gt;
   &lt;/outSequence&gt;
    &lt;/target&gt;
    &lt;/proxy&gt;
&lt;sequence name="send_seq"&gt;
        &lt;log level="custom"&gt;
            &lt;property name="DEBUG" value="Condition Satisfied"/&gt;
        &lt;/log&gt;
        &lt;send&gt;
            &lt;endpoint name="simple"&gt;
                &lt;address uri="http://localhost:9000/services/SimpleStockQuoteService"/&gt;
            &lt;/endpoint&gt;
        &lt;/send&gt;
    &lt;/sequence&gt;

    &lt;sequence name="cnd1_seq"&gt;
        &lt;log level="custom"&gt;
            &lt;property name="MSG_FLOW" value="Condition (I) Satisfied"/&gt;
        &lt;/log&gt;
        &lt;sequence key="send_seq"/&gt;
    &lt;/sequence&gt;
    &lt;sequence name="cnd2_seq"&gt;
        &lt;log level="custom"&gt;
            &lt;property name="MSG_FLOW" value="Condition (II) Satisfied"/&gt;
        &lt;/log&gt;
        &lt;sequence key="send_seq"/&gt;
    &lt;/sequence&gt;
    &lt;sequence name="cnd3_seq"&gt;
        &lt;log level="custom"&gt;
            &lt;property name="MSG_FLOW" value="Condition (III) Satisfied"/&gt;
        &lt;/log&gt;
        &lt;sequence key="send_seq"/&gt;
    &lt;/sequence&gt;
&lt;/definitions&gt;</div>
            <subsection name="Objective">
                <p>
This sample is an introduction Synapse Content Based Router eip function template.
                </p>
            </subsection>
            <subsection name="Pre-requisites">
                <p>
                    <ul>
                        <li>
                            Deploy the SimpleStockQuoteService in the sample Axis2 server and start Axis2
                        </li>
                        <li>
                            Start Synapse using the configuration numbered 855 (repository/conf/sample/synapse_sample_855.xml)
                            <div class="command">
                                Unix/Linux: sh synapse.sh -sample 855<br/>
                                Windows: synapse.bat -sample 855
                            </div>
                        </li>
                    </ul>
                </p>
            </subsection>
            <subsection name="Executing the Client">
<p>
In this sample, it routes the message by matching the specified Xpath to the regular expression. Execute the StockQuote client in the dumb client mode, specifying 'IBM', 'MSFT' and 'DELL' as the stock symbols.
</p>
<p>When the symbol IBM is requested, you will see cnd1_seq sequence is getting executed.</p>
                <div class="command">ant stockquote -Dtrpurl=http://localhost:8280/services/StockQuoteProxy -Dsymbol=IBM</div>
<p>When the symbol MSFT is requested, you will see cnd2_seq sequence is getting executed.</p>
<div class="command">ant stockquote -Dtrpurl=http://localhost:8280/services/StockQuoteProxy -Dsymbol=MSFT</div>
<p>When the symbol DELL is requested, you will see cnd3_seq sequence is getting executed , which is the default sequence.</p>
<div class="command">ant stockquote -Dtrpurl=http://localhost:8280/services/StockQuoteProxy -Dsymbol=DELL</div>

            </subsection>
        </section>
        <p><a href="../samples.html">Back to Catalog</a></p>        
    </body>
</document>
