<?xml version="1.0" encoding="ISO-8859-1" ?>
<!--
  ~  Licensed to the Apache Software Foundation (ASF) under one
  ~  or more contributor license agreements.  See the NOTICE file
  ~  distributed with this work for additional information
  ~  regarding copyright ownership.  The ASF licenses this file
  ~  to you under the Apache License, Version 2.0 (the
  ~  "License"); you may not use this file except in compliance
  ~  with the License.  You may obtain a copy of the License at
  ~
  ~   http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~  Unless required by applicable law or agreed to in writing,
  ~  software distributed under the License is distributed on an
  ~   * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~  KIND, either express or implied.  See the License for the
  ~  specific language governing permissions and limitations
  ~  under the License.
  -->

<document>
    <properties>
        <title>Apache Synapse - Sample 354</title>
    </properties>
    <body>
        <section name="Sample 354: Using Inline Ruby Scripts for Mediation">
            <div class="xmlConf">&lt;definitions xmlns="http://ws.apache.org/ns/synapse"&gt;

    &lt;sequence name="main"&gt;
        &lt;in&gt;
            &lt;script language="rb"&gt;

                require 'rexml/document'
                include REXML
                newRequest= Document.new '&lt;m:getQuote xmlns:m="http://services.samples"&gt;&lt;m:request&gt;&lt;m:symbol&gt;...test...&lt;/m:symbol&gt;&lt;/m:request&gt;&lt;/m:getQuote&gt;'
                newRequest.root.elements[1].elements[1].text =
                $mc.getPayloadXML().root.elements[1].get_text
                $mc.setPayloadXML(newRequest)

            &lt;/script&gt;
            &lt;send&gt;
                &lt;endpoint&gt;
                    &lt;address uri="http://localhost:9000/services/SimpleStockQuoteService"/&gt;
                &lt;/endpoint&gt;
            &lt;/send&gt;
        &lt;/in&gt;
        &lt;out&gt;
            &lt;script language="rb"&gt;

                require 'rexml/document'
                include REXML
                newResponse = Document.new '&lt;m:CheckPriceResponse
                xmlns:m="http://services.samples/xsd"&gt;&lt;m:Code&gt;&lt;/m:Code&gt;&lt;m:Price&gt;&lt;/m:Price&gt;&lt;/m:CheckPriceResponse&gt;'
                newResponse.root.elements[1].text =
                $mc.getPayloadXML().root.elements[1].elements[1].get_text
                newResponse.root.elements[2].text =
                $mc.getPayloadXML().root.elements[1].elements[2].get_text
                $mc.setPayloadXML(newResponse)

            &lt;/script&gt;
            &lt;send/&gt;
        &lt;/out&gt;
    &lt;/sequence&gt;

&lt;/definitions&gt;</div>
            <subsection name="Objective">
                <p>
                    Shows how to embed Ruby scripts in the Synapse configuration itself.
                </p>
            </subsection>
            <subsection name="Pre-requisites">
                <p>
                    <ul>
                     	<li>
                           This sample uses Ruby, so first setup support for this in Synapse as described at
							<a href="setup/script.html#ruby">Configuring JRuby</a>
                        </li>
                        <li>
                            Deploy the SimpleStockQuoteService in the sample Axis2 server and start Axis2
                        </li>
                        <li>
                            Synapse does not ship with a Ruby engine by default. Therefore you should
                            download the Ruby engine from JRuby site and copy the downloaded jar file
                            to the 'lib' directory of Synapse.
                        </li>
                        <li>
                            Start Synapse using the configuration numbered 354 (repository/conf/sample/synapse_sample_354.xml)
                            <div class="command">
                                Unix/Linux: sh synapse.sh -sample 354<br/>
                                Windows: synapse.bat -sample 354
                            </div>
                        </li>
                    </ul>
                </p>
            </subsection>
            <subsection name="Executing the Client">
                <p>
                    Run the sample client as follows.
                </p>
                <div class="command">ant stockquote -Daddurl=http://localhost:9000/services/SimpleStockQuoteService -Dtrpurl=http://localhost:8280/ -Dmode=customquote</div>
                <p>
                    The inline Ruby scripts will transform the requests and responses.
                </p>                
            </subsection>
        </section>
        <p><a href="../samples.html">Back to Catalog</a></p>        
    </body>
</document>