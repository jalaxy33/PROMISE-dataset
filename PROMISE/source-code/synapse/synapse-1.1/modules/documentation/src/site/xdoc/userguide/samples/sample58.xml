<?xml version="1.0" encoding="ISO-8859-1" ?>
<!--
  ~  Licensed to the Apache Software Foundation (ASF) under one
  ~  or more contributor license agreements.  See the NOTICE file
  ~  distributed with this work for additional information
  ~  regarding copyright ownership.  The ASF licenses this file
  ~  to you under the Apache License, Version 2.0 (the
  ~  "License"); you may not use this file except in compliance
  ~  with the License.  You may obtain a copy of the License at
  ~
  ~   http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~  Unless required by applicable law or agreed to in writing,
  ~  software distributed under the License is distributed on an
  ~   * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~  KIND, either express or implied.  See the License for the
  ~  specific language governing permissions and limitations
  ~  under the License.
  -->

<document>
    <properties>
        <title>Apache Synapse - Sample 58</title>
    </properties>
    <body>
        <section name="Sample 58: Static Load Balancing Between 3 Nodes">
            <div class="xmlConf">&lt;definitions xmlns="http://ws.apache.org/ns/synapse"&gt;

    &lt;sequence name="main" onError="errorHandler"&gt;
        &lt;in&gt;
            &lt;send&gt;
                &lt;endpoint&gt;
                    &lt;loadbalance failover="true"&gt;
                        &lt;member hostName="127.0.0.1" httpPort="9001" httpsPort="9005"/&gt;
                        &lt;member hostName="127.0.0.1" httpPort="9002" httpsPort="9006"/&gt;
                        &lt;member hostName="127.0.0.1" httpPort="9003" httpsPort="9007"/&gt;
                    &lt;/loadbalance&gt;
                &lt;/endpoint&gt;
            &lt;/send&gt;
            &lt;drop/&gt;
        &lt;/in&gt;

        &lt;out&gt;
            &lt;!-- Send the messages where they have been sent (i.e. implicit To EPR) --&gt;
            &lt;send/&gt;
        &lt;/out&gt;
    &lt;/sequence&gt;

    &lt;sequence name="errorHandler"&gt;
        &lt;makefault response="true"&gt;
            &lt;code xmlns:tns="http://www.w3.org/2003/05/soap-envelope" value="tns:Receiver"/&gt;
            &lt;reason value="COULDN'T SEND THE MESSAGE TO THE SERVER."/&gt;
        &lt;/makefault&gt;
        &lt;send/&gt;
    &lt;/sequence&gt;

&lt;/definitions&gt;</div>
            <subsection name="Objective">
                <p>
                    Demonstrate the ability of Synapse to act as a load balancer for a set of
                    servers hosting stateless services. This sample is very similar to
                    <a href="sample52.html">sample 52</a> but uses a different syntax style to
                    configure the load balance endpoint.
                </p>
            </subsection>
            <subsection name="Pre-requisites">
                <p>
                    <ul>
                        <li>
                            Deploy the LoadbalanceFailoverService in the sample Axis2 server (go to
                            samples/axis2Server/src/LoadbalanceFailoverService and run 'ant')
                        </li>
                        <li>
                            Start 3 instances of the Axis2 server on different ports as follows
                            <div class="command">./axis2server.sh -http 9001 -https 9005 -name MyServer1<br/>
./axis2server.sh -http 9002 -https 9006 -name MyServer2<br/>
./axis2server.sh -http 9003 -https 9007 -name MyServer3</div>
                        </li>
                        <li>
                            Start Synapse using the configuration numbered 52 (repository/conf/sample/synapse_sample_52.xml)
                            <div class="command">
                                Unix/Linux: sh synapse.sh -sample 52<br/>
                                Windows: synapse.bat -sample 52
                            </div>
                        </li>
                    </ul>
                </p>
            </subsection>
            <subsection name="Executing the Client">
                <p>
                    Invoke the sample client as follows
                </p>
                <div class="command">ant loadbalancefailover -Di=100</div>
                <p>
                    This will send 100 requests to the LoadbalanceFailoverService through Synapse.
                    Synapse will distribute the load among the three endpoints mentioned in the
                    configuration in round-robin manner. LoadbalanceFailoverService appends the name
                    of the server to the response, so that client can determine which server has
                    processed the message. If you examine the console output of the client, you can
                    see that requests are processed by three servers as follows:
                </p>
                <div class="consoleOutput">[java] Request: 1 ==&gt; Response from server: MyServer1
[java] Request: 2 ==&gt; Response from server: MyServer2
[java] Request: 3 ==&gt; Response from server: MyServer3
[java] Request: 4 ==&gt; Response from server: MyServer1
[java] Request: 5 ==&gt; Response from server: MyServer2
[java] Request: 6 ==&gt; Response from server: MyServer3
[java] Request: 7 ==&gt; Response from server: MyServer1
...</div>
                <p>
                    Now run the client without the -Di=100 parameter to send requests indefinitely.
                    While running the client shutdown the server named MyServer1. Then you can observe
                    that requests are only distributed among MyServer2 and MyServer3. Console output
                    before and after shutting down MyServer1 is listed below (MyServer1 was shutdown
                    after request 63):
                </p>
                <div class="consoleOutput">...
[java] Request: 61 ==&gt; Response from server: MyServer1
[java] Request: 62 ==&gt; Response from server: MyServer2
[java] Request: 63 ==&gt; Response from server: MyServer3
[java] Request: 64 ==&gt; Response from server: MyServer2
[java] Request: 65 ==&gt; Response from server: MyServer3
[java] Request: 66 ==&gt; Response from server: MyServer2
[java] Request: 67 ==&gt; Response from server: MyServer3
...</div>
                <p>
                    Now restart MyServer1. You can observe that requests will be again sent to all
                    three servers.
                </p>
            </subsection>
        </section>
        <p><a href="../samples.html">Back to Catalog</a></p>        
    </body>
</document>