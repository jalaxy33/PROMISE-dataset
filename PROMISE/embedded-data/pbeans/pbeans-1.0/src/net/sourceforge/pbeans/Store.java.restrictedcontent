Store
Long
ROOT_ID
Long
String
FIELD_OBJECT_ID
String
INDEX_OBJECT_ID
Object
EMPTY_PARAMETERS
Object
Object
objectsMonitor
Object
Map
objectInfosByID
HashMap
Map
objectInfosByIHC
HashMap
Map
storeInfoByClass
HashMap
Map
tableNames
HashMap
Map
fieldNames
HashMap
Random
RANDOM1
Random
currentTimeMillis
Random
RANDOM2
Random
identityHashCode
ReferenceQueue
REF_QUEUE
ReferenceQueue
Database
database
int
maxTableNameLength
int
maxColumnNameLength
PrintWriter
logWriter
Store
dataSource
DataSource
dbf
DatabaseFactory
try
PrintWriter
lw
try
lw
getLogWriter
catchClause
uo
lw
logWriter
lw
database
getDatabase
dataSource
maxTableNameLength
database
getMaxTableNameLength
maxColumnNameLength
database
getMaxColumnNameLength
catchClause
se
throw
StoreException
se
Store
dataSource
DataSource
dataSource
DefaultDatabaseFactory
getMaxColumnNameLength
int
return
maxColumnNameLength
getPreferredFieldName
String
requestedFieldName
String
synchronized
fieldNames
String
fieldName
String
fieldNames
get
requestedFieldName
if
fieldName
block
return
fieldName
fieldName
getShortColumnName
requestedFieldName
fieldNames
put
requestedFieldName
fieldName
return
fieldName
getFieldName
String
sinfo
StoreInfo
propertyName
String
PropertyDescriptor
pd
getPropertyDescriptor
propertyName
if
pd
block
throw
StoreException
propertyName
FieldDescriptor
fd
getFieldDescriptor
pd
if
fd
block
throw
StoreException
propertyName
return
getPreferredFieldName
getName
getShortColumnName
String
name
String
prefix
String
int
maxColumnNameLength
getMaxColumnNameLength
String
tName
name
int
totalLength
length
if
totalLength
maxColumnNameLength
block
return
tName
int
hash
abs
fixedHash
name
String
hashStr
valueOf
hash
int
canUseLength
maxColumnNameLength
length
length
String
fieldName
prefix
hashStr
substring
length
canUseLength
length
return
fieldName
getStoreInfo
StoreInfo
clazz
Class
synchronized
storeInfoByClass
StoreInfo
sinfo
StoreInfo
get
clazz
if
sinfo
block
return
sinfo
sinfo
createStoreInfo
clazz
put
clazz
sinfo
String
tableName
getTableName
clazz
try
BeanInfo
binfo
getBeanInfo
clazz
PropertyDescriptor
ppDescriptors
getPropertyDescriptors
Collection
fieldDescriptors
LinkedList
for
forControl
int
i
i
length
i
block
FieldDescriptor
fd
getFieldDescriptor
ppDescriptors
i
if
fd
block
String
name
getName
String
actualName
getPreferredFieldName
name
if
equals
actualName
block
fd
FieldDescriptor
actualName
fd
add
fd
block
String
pname
ppDescriptors
i
getName
if
equals
pname
block
warn
getName
pname
Collection
indexDescriptors
LinkedList
Index
indexes
getIndexes
for
forControl
int
i
i
length
i
block
Index
index
indexes
i
String
indexName
getIndexName
index
try
add
IndexDescriptor
indexName
isUnique
getFieldNames
sinfo
getPropertyNames
catchClause
se
throw
StoreException
indexName
tableName
getMessage
se
FieldDescriptor
oidDescriptor
FieldDescriptor
FIELD_OBJECT_ID
BIGINT
IndexDescriptor
pkDescriptor
IndexDescriptor
INDEX_OBJECT_ID
FIELD_OBJECT_ID
add
pkDescriptor
try
ensureTableExists
tableName
oidDescriptor
fieldDescriptors
indexDescriptors
catchClause
se
if
isDuplicateEntryError
se
block
throw
DuplicateEntryException
tableName
block
throw
StoreException
tableName
getMessage
se
catchClause
ie
throw
StoreException
ie
return
sinfo
getIndexName
String
index
Index
StringBuffer
buf
StringBuffer
append
Collection
propNames
getPropertyNames
Iterator
i
iterator
while
hasNext
block
append
append
next
return
getShortColumnName
toString
getFieldNames
String
sinfo
StoreInfo
propertyNames
Collection
int
size
size
String
fieldNames
String
size
Iterator
i
iterator
int
idx
while
hasNext
block
fieldNames
idx
getFieldName
sinfo
String
next
return
fieldNames
createStoreInfo
StoreInfo
clazz
Class
String
checkName
getName
try
Class
sinfoClazz
forName
checkName
return
StoreInfo
newInstance
catchClause
cnfe
return
DefaultStoreInfo
clazz
catchClause
ie
throw
StoreException
checkName
catchClause
iae
throw
StoreException
iae
put
name
String
obj
Persistent
PersistentMap
map
getRootMap
putObject
name
obj
get
Persistent
name
String
checkWeakReferences
PersistentMap
map
getRootMap
return
getObject
name
remove
name
String
PersistentMap
map
getRootMap
removeObject
name
checkWeakReferences
for
forControl
block
ObjectInfo
wr
ObjectInfo
REF_QUEUE
poll
if
wr
block
break
Long
objectID
getObjectID
Integer
identityHashCode
getIdentityHashCode
synchronized
objectsMonitor
objectInfosByID
remove
objectID
objectInfosByIHC
remove
identityHashCode
getRootMap
PersistentMap
PersistentMap
rootMap
PersistentMap
getObject
ROOT_ID
if
rootMap
block
synchronized
objectsMonitor
rootMap
PersistentMap
getObjectImpl
ROOT_ID
if
rootMap
block
rootMap
PersistentMap
ensureKnownImpl
rootMap
ROOT_ID
return
rootMap
getObject
Persistent
objectID
Long
Persistent
obj
Persistent
getCachedObject
objectID
if
obj
block
obj
Persistent
getStoredObject
objectID
return
obj
getObjectImpl
Persistent
objectID
Long
Persistent
obj
Persistent
getCachedObjectImpl
objectID
if
obj
block
obj
Persistent
getStoredObject
objectID
return
obj
getCachedObject
Persistent
objectID
Long
synchronized
objectsMonitor
ObjectInfo
oi
ObjectInfo
objectInfosByID
get
objectID
if
oi
block
return
return
getObject
getCachedObjectImpl
Persistent
objectID
Long
ObjectInfo
oi
ObjectInfo
objectInfosByID
get
objectID
if
oi
block
return
return
getObject
getStoredObject
Persistent
objectID
Long
Map
fields
HashMap
put
objectID
ObjectClass
oc
ObjectClass
selectSingle
ObjectClass
fields
if
oc
block
return
String
className
getClassName
if
className
block
throw
StoreException
objectID
return
buildOrPopulateStoredObject
objectID
className
getTableName
String
className
String
synchronized
tableNames
String
tableName
String
tableNames
get
className
if
tableName
block
return
tableName
String
prefix
String
tName
replace
replace
int
totalLength
length
length
if
totalLength
maxTableNameLength
block
return
prefix
tName
int
hash
abs
fixedHash
className
String
hashStr
valueOf
hash
int
canUseLength
maxTableNameLength
length
length
tableName
prefix
hashStr
substring
length
canUseLength
length
tableNames
put
className
tableName
return
tableName
fixedHash
int
text
String
byte
hashBytes
byte
int
len
length
for
forControl
int
i
i
len
i
block
int
hi
i
hashBytes
hi
byte
charAt
i
return
hashBytes
hashBytes
hashBytes
hashBytes
getTableName
String
clazz
Class
return
getTableName
getName
buildOrPopulateStoredObject
Persistent
objectID
Long
className
String
try
Class
c
forName
className
String
table
getTableName
className
Map
record
getRecord
table
FIELD_OBJECT_ID
objectID
if
record
block
return
return
buildOrPopulateBean
objectID
c
record
catchClause
cnfe
throw
StoreException
cnfe
catchClause
se
throw
StoreException
se
reload
persObject
Persistent
ObjectInfo
oi
getObjectInfo
persObject
buildOrPopulateStoredObject
getObjectID
getClassName
buildOrPopulateBean
Persistent
objectID
Long
persClass
Class
record
Map
Persistent
persObject
boolean
populate
synchronized
objectsMonitor
persObject
Persistent
getCachedObjectImpl
objectID
if
persObject
block
persObject
Persistent
buildBean
persClass
record
ensureKnownImpl
persObject
objectID
block
populate
if
populate
block
populateBean
persClass
record
persObject
return
persObject
buildBean
Persistent
c
Class
dbRecord
Map
StoreInfo
sinfo
getStoreInfo
c
Persistent
persObject
create
populateBean
c
dbRecord
persObject
return
persObject
populateBean
persClass
Class
dbRecord
Map
bean
Persistent
try
StoreInfo
sinfo
getStoreInfo
persClass
BeanInfo
binfo
getBeanInfo
persClass
PropertyDescriptor
pds
getPropertyDescriptors
for
forControl
int
i
i
length
i
block
PropertyDescriptor
pd
pds
i
String
propName
getName
Object
dbValue
get
propName
if
isPersistent
sinfo
pd
block
Object
propValue
unmarshallValue
sinfo
pd
dbValue
Method
setter
getWriteMethod
try
invoke
bean
Object
propValue
catchClause
iae
if
propValue
getPropertyType
isPrimitive
block
warn
propName
block
throw
IllegalArgumentException
propName
propValue
getClass
getName
getMessage
catchClause
ie
throw
StoreException
ie
catchClause
iae
throw
StoreException
iae
catchClause
ite
throw
StoreException
ite
isPersistent
boolean
sinfo
StoreInfo
pd
PropertyDescriptor
return
getFieldDescriptor
pd
save
persObject
Persistent
checkWeakReferences
ObjectInfo
oi
getObjectInfo
persObject
save
insert
persObject
Persistent
checkWeakReferences
ObjectInfo
oi
getObjectInfo
persObject
insert
register
persObject
Persistent
checkWeakReferences
getObjectInfo
persObject
delete
persObject
Persistent
ObjectInfo
oi
getObjectInfo
persObject
delete
createObjectID
Long
return
Long
abs
nextLong
nextLong
getObjectID
Long
persObject
Persistent
ObjectInfo
oi
getObjectInfo
persObject
return
getObjectID
getObjectInfo
ObjectInfo
persObject
Persistent
return
getObjectInfo
persObject
getObjectInfo
ObjectInfo
persObject
Persistent
doInsert
boolean
Integer
ihc
Integer
identityHashCode
persObject
ObjectInfo
oi
boolean
isNew
synchronized
objectsMonitor
oi
ObjectInfo
objectInfosByIHC
get
ihc
if
oi
block
Long
objectID
createObjectID
oi
ObjectInfo
objectID
persObject
isNew
objectInfosByIHC
put
ihc
oi
objectInfosByID
put
objectID
oi
if
isNew
doInsert
block
insert
return
oi
getExistingObjectInfo
ObjectInfo
persObject
Persistent
Integer
ihc
Integer
identityHashCode
persObject
synchronized
objectsMonitor
return
ObjectInfo
objectInfosByIHC
get
ihc
ensureKnownImpl
persObject
Persistent
objectID
Long
doInsert
boolean
Integer
ihc
Integer
identityHashCode
persObject
ObjectInfo
oi
oi
ObjectInfo
objectInfosByIHC
get
ihc
if
oi
block
oi
ObjectInfo
objectID
persObject
if
doInsert
block
insert
objectInfosByIHC
put
ihc
oi
objectInfosByID
put
objectID
oi
if
equals
getObjectID
block
throw
StoreException
persObject
objectID
getMarshalledValues
Map
obj
Object
objectID
Long
Map
map
getBeanValues
obj
put
FIELD_OBJECT_ID
objectID
return
map
marshallValues
Map
clazz
Class
sinfo
StoreInfo
values
Map
Map
mValues
HashMap
try
BeanInfo
beanInfo
getBeanInfo
clazz
PropertyDescriptor
pds
getPropertyDescriptors
for
forControl
int
i
i
length
i
block
PropertyDescriptor
pd
pds
i
FieldDescriptor
fd
getFieldDescriptor
pd
if
fd
block
String
propName
getName
if
containsKey
propName
block
Object
value
get
propName
String
fieldName
getPreferredFieldName
getName
if
value
block
put
fieldName
marshallValue
sinfo
pd
value
block
put
fieldName
catchClause
ie
throw
StoreException
ie
return
mValues
marshallValue
Object
sinfo
StoreInfo
pd
PropertyDescriptor
value
Object
if
value
block
return
block
Class
propType
getPropertyType
if
isAssignableFrom
propType
Persistent
block
Long
objectID
getObjectID
Persistent
value
return
objectID
block
return
marshallValue
pd
value
unmarshallValue
Object
sinfo
StoreInfo
pd
PropertyDescriptor
value
Object
if
value
block
return
block
Class
propType
getPropertyType
if
isAssignableFrom
propType
Persistent
block
Long
objectID
Long
value
return
getObject
objectID
block
return
unmarshallValue
pd
value
getBeanValues
Map
bean
Object
try
StoreInfo
sinfo
getStoreInfo
getClass
BeanInfo
beanInfo
getBeanInfo
getClass
PropertyDescriptor
pds
getPropertyDescriptors
Map
values
HashMap
length
for
forControl
int
i
i
length
i
block
PropertyDescriptor
pd
pds
i
FieldDescriptor
fd
getFieldDescriptor
pd
if
fd
block
String
propName
getName
Method
readMethod
getReadMethod
Object
value
try
value
invoke
bean
Object
catchClause
iae
throw
StoreException
propName
getClass
getName
iae
put
getPreferredFieldName
getName
marshallValue
sinfo
pd
value
return
values
catchClause
ie
throw
StoreException
ie
catchClause
ite
throw
StoreException
ite
equalValues
boolean
values1
Map
values2
Map
if
values2
block
return
values1
Iterator
i1
entrySet
iterator
while
hasNext
block
Map
Entry
entry1
Map
Entry
next
String
key1
String
getKey
Object
val1
getValue
Object
val2
get
key1
if
val1
block
if
val2
block
return
if
equals
val2
block
return
return
warn
text
String
PrintWriter
writer
logWriter
if
writer
block
println
java
util
Date
text
flush
selectAggregation
ResultsIterator
inClazz
Class
fkProperty
String
container
Persistent
Map
props
HashMap
put
fkProperty
container
return
select
inClazz
props
select
ResultsIterator
inClazz
Class
return
select
inClazz
selectSingle
Persistent
clazz
Class
propertyName
String
propertyValue
Object
Map
values
HashMap
put
propertyName
propertyValue
return
selectSingle
clazz
values
selectSingle
Persistent
clazz
Class
values
Map
ResultsIterator
i
select
clazz
values
try
if
hasNext
block
return
Persistent
next
try
close
catchClause
se
throw
StoreException
se
return
select
ResultsIterator
clazz
Class
values
Map
return
select
clazz
values
select
ResultsIterator
clazz
Class
values
Map
orderByProperty
String
descending
boolean
limit
Integer
StoreInfo
sinfo
getStoreInfo
clazz
Map
mValues
values
marshallValues
clazz
sinfo
values
if
mValues
size
block
throw
StoreException
String
orderByField
orderByProperty
getFieldName
sinfo
orderByProperty
String
tableName
getTableName
clazz
try
ResultsIterator
dbIterator
getRecords
tableName
mValues
orderByField
descending
limit
return
ResultsIterator
hasNext
boolean
return
hasNext
next
Object
Map
record
Map
next
Long
objectID
Long
get
FIELD_OBJECT_ID
try
return
buildOrPopulateBean
objectID
clazz
record
catchClause
se
throw
NoSuchElementException
se
remove
throw
UnsupportedOperationException
close
close
catchClause
se
throw
StoreException
se
delete
boolean
clazz
Class
values
Map
StoreInfo
sinfo
getStoreInfo
clazz
String
tableName
getTableName
clazz
Map
mValues
marshallValues
clazz
sinfo
values
if
size
block
throw
StoreException
try
return
deleteRecords
tableName
mValues
catchClause
se
throw
StoreException
se
requestLock
Object
clazz
Class
propertyName
String
value
Object
StoreInfo
sinfo
getStoreInfo
clazz
PropertyDescriptor
pd
getPropertyDescriptor
propertyName
if
pd
block
throw
IllegalArgumentException
propertyName
FieldDescriptor
fd
getFieldDescriptor
pd
if
fd
block
throw
IllegalArgumentException
propertyName
Object
mValue
marshallValue
sinfo
pd
value
try
return
requestLock
getTableName
clazz
getPreferredFieldName
getName
mValue
catchClause
se
throw
StoreException
se
relinquishLock
lock
Object
try
relinquishLock
lock
catchClause
se
throw
StoreException
se
getRecord
Map
tableName
String
condition
String
ResultsIterator
i
getRecords
tableName
condition
try
if
hasNext
block
return
Map
next
block
return
close
getRecords
ResultsIterator
tableName
String
condition
String
return
database
query
tableName
condition
EMPTY_PARAMETERS
getRecords
ResultsIterator
tableName
String
whereFieldValues
Map
orderBy
String
descending
boolean
limit
Integer
String
cond
whereFieldValues
getNameValueSequence
whereFieldValues
Object
params
whereFieldValues
EMPTY_PARAMETERS
getParameters
whereFieldValues
String
queryString
tableName
cond
cond
orderBy
orderBy
descending
limit
limit
try
return
database
query
queryString
params
catchClause
se
SQLException
newSe
SQLException
queryString
length
getMessage
getSQLState
getErrorCode
setNextException
se
throw
newSe
deleteRecords
boolean
tableName
String
whereFieldValues
Map
String
cond
getNameValueSequence
whereFieldValues
Object
params
getParameters
whereFieldValues
return
database
update
tableName
cond
params
insertRecord
boolean
tableName
String
fieldValues
Map
String
names
getNameSequence
fieldValues
String
values
getPlaceholderSequence
size
Object
params
getParameters
fieldValues
return
database
update
tableName
names
values
params
updateRecords
boolean
tableName
String
fieldValues
Map
condition
String
String
setters
getNameValueSequence
fieldValues
Object
params
getParameters
fieldValues
return
database
update
tableName
setters
condition
params
getNameValueSequence
String
fieldValues
Map
separator
String
isQuery
boolean
StringBuffer
condBuf
StringBuffer
Iterator
i
entrySet
iterator
while
hasNext
block
Map
Entry
entry
Map
Entry
next
String
fieldName
String
getKey
append
fieldName
if
isQuery
getValue
block
append
block
append
append
if
hasNext
block
append
separator
return
toString
getNameSequence
String
fieldValues
Map
separator
String
StringBuffer
condBuf
StringBuffer
Iterator
i
entrySet
iterator
while
hasNext
block
Map
Entry
entry
Map
Entry
next
String
fieldName
String
getKey
append
fieldName
if
hasNext
block
append
separator
return
toString
getPlaceholderSequence
String
count
int
separator
String
StringBuffer
condBuf
StringBuffer
for
forControl
int
i
i
count
i
block
append
if
i
count
block
append
separator
return
toString
getParameters
Object
fieldValues
Map
Iterator
i
entrySet
iterator
Collection
params
LinkedList
while
hasNext
block
Map
Entry
entry
Map
Entry
next
Object
value
getValue
add
value
return
toArray
ObjectInfo
Long
objectID
String
primaryTableName
String
className
Integer
identityHashCode
Object
deleteMonitor
Object
saveMonitor
Map
lastValues
ObjectClass
objectClass
ObjectInfo
objectID
Long
persObject
Persistent
persObject
REF_QUEUE
if
persObject
block
throw
IllegalArgumentException
objectID
objectID
className
getClass
getName
primaryTableName
getTableName
getClass
getName
identityHashCode
Integer
identityHashCode
persObject
deleteMonitor
saveMonitor
objectID
getClassName
String
return
className
getObjectID
Long
return
objectID
getObject
Persistent
return
Persistent
get
getIdentityHashCode
Integer
return
identityHashCode
insert
Persistent
bean
getObject
if
bean
block
throw
StoreException
if
bean
ObjectClass
block
ObjectClass
oc
ObjectClass
objectID
className
synchronized
deleteMonitor
objectClass
oc
register
oc
Map
newValues
getMarshalledValues
bean
objectID
try
synchronized
saveMonitor
insertRecord
primaryTableName
newValues
lastValues
newValues
catchClause
se
if
isDuplicateEntryError
se
block
throw
DuplicateEntryException
className
se
block
throw
StoreException
se
save
Persistent
bean
getObject
Map
newValues
getMarshalledValues
bean
objectID
try
synchronized
saveMonitor
Map
oldValues
lastValues
if
equalValues
newValues
oldValues
block
updateRecords
primaryTableName
newValues
FIELD_OBJECT_ID
objectID
lastValues
newValues
catchClause
se
throw
StoreException
se
delete
Persistent
bean
getObject
Map
values
HashMap
put
FIELD_OBJECT_ID
objectID
try
deleteRecords
primaryTableName
values
ObjectClass
oc
synchronized
deleteMonitor
oc
objectClass
objectClass
if
oc
block
delete
oc
catchClause
se
throw
StoreException
se
WeakReference
