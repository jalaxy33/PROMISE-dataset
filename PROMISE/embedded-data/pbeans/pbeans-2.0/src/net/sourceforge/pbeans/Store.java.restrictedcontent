Store
Logger
logger
getLogger
getName
Store
Object
EMPTY_PARAMETERS
Object
Object
objectsMonitor
Object
Map
GlobalPersistentID
ObjectInfo
objectInfosByID
HashMap
GlobalPersistentID
ObjectInfo
Map
Object
ObjectInfo
objectInfosByObject
java
util
WeakHashMap
Object
ObjectInfo
Map
Class
StoreInfo
storeInfoByClass
HashMap
Class
StoreInfo
ReferenceQueue
REF_QUEUE
ReferenceQueue
Database
database
int
maxTableNameLength
int
maxColumnNameLength
DatabaseFactory
databaseFactory
ClassLoader
defaultClassLoader
Store
dataSource
DataSource
dbf
DatabaseFactory
defaultClassLoader
ClassLoader
try
databaseFactory
dbf
database
getDatabase
dataSource
maxTableNameLength
database
getMaxTableNameLength
maxColumnNameLength
database
getMaxColumnNameLength
defaultClassLoader
defaultClassLoader
catchClause
se
throw
StoreException
se
Store
dataSource
DataSource
dataSource
DefaultDatabaseFactory
Store
dataSource
DataSource
maxConnections
int
connectionTimeout
int
dataSource
DefaultDatabaseFactory
DefaultDatabaseFactory
ddb
DefaultDatabaseFactory
databaseFactory
setMaxConnections
maxConnections
setConnectionTimeout
connectionTimeout
Store
dataSource
DataSource
maxConnections
int
connectionTimeout
int
classLoader
ClassLoader
dataSource
DefaultDatabaseFactory
classLoader
classLoader
DefaultDatabaseFactory
ddb
DefaultDatabaseFactory
databaseFactory
setMaxConnections
maxConnections
setConnectionTimeout
connectionTimeout
getMaxColumnNameLength
int
return
maxColumnNameLength
getMaxTableNameLength
int
return
maxTableNameLength
getFieldName
String
sinfo
StoreInfo
propertyName
String
PropertyDescriptor
pd
getPropertyDescriptor
propertyName
if
pd
block
throw
StoreException
propertyName
FieldDescriptor
fd
getFieldDescriptor
pd
if
fd
block
throw
StoreException
propertyName
return
getName
getShortColumnName
String
name
String
prefix
String
int
maxColumnNameLength
getMaxColumnNameLength
String
tName
name
int
totalLength
length
if
totalLength
maxColumnNameLength
block
return
tName
int
hash
abs
fixedHash
name
String
hashStr
valueOf
hash
int
canUseLength
maxColumnNameLength
length
length
String
fieldName
prefix
hashStr
substring
length
canUseLength
length
return
fieldName
getStoreInfo
StoreInfo
beanClass
Class
synchronized
storeInfoByClass
StoreInfo
sinfo
get
beanClass
if
sinfo
block
return
sinfo
sinfo
createStoreInfo
beanClass
put
beanClass
sinfo
String
objectIdFieldName
getIdField
String
tableName
getTableName
beanClass
try
BeanInfo
binfo
getBeanInfo
beanClass
PropertyDescriptor
ppDescriptors
getPropertyDescriptors
Collection
FieldDescriptor
fieldDescriptors
LinkedList
FieldDescriptor
for
forControl
int
i
i
length
i
block
FieldDescriptor
fd
getFieldDescriptor
ppDescriptors
i
if
fd
block
add
fd
Collection
indexDescriptors
LinkedList
Index
indexes
getIndexes
for
forControl
int
i
i
length
i
block
Index
index
indexes
i
String
indexName
getIndexName
index
try
add
IndexDescriptor
indexName
isUnique
getFieldNames
sinfo
getPropertyNames
getKeyLength
catchClause
se
throw
StoreException
indexName
tableName
getMessage
se
FieldDescriptor
oidDescriptor
FieldDescriptor
objectIdFieldName
BIGINT
try
ensureTableExists
tableName
oidDescriptor
fieldDescriptors
indexDescriptors
isUserManaged
isAutoIncrementRequested
isDeleteFields
catchClause
se
if
isDuplicateEntryError
se
block
throw
DuplicateEntryException
tableName
block
throw
StoreException
tableName
getMessage
se
catchClause
ie
throw
StoreException
ie
return
sinfo
getIndexName
String
index
Index
StringBuffer
buf
StringBuffer
append
Collection
propNames
getPropertyNames
Iterator
i
iterator
while
hasNext
block
append
append
next
return
getShortColumnName
toString
getFieldNames
String
sinfo
StoreInfo
propertyNames
Collection
int
size
size
String
fieldNames
String
size
Iterator
i
iterator
int
idx
while
hasNext
block
fieldNames
idx
getFieldName
sinfo
String
next
return
fieldNames
lookupClass
Class
name
String
ClassLoader
cl
defaultClassLoader
return
cl
forName
name
loadClass
name
createStoreInfo
StoreInfo
beanClass
Class
if
isAssignableFrom
beanClass
Persistent
block
return
DefaultStoreInfo
beanClass
String
checkName
getName
try
ClassLoader
cl
getClassLoader
Class
sinfobeanClass
cl
lookupClass
checkName
loadClass
checkName
return
StoreInfo
newInstance
catchClause
cnfe
return
DefaultStoreInfo
beanClass
catchClause
ie
throw
StoreException
checkName
catchClause
iae
throw
StoreException
iae
put
name
String
obj
Object
PersistentMap
String
Object
map
getRootMap
putObject
name
obj
get
Object
name
String
checkWeakReferences
PersistentMap
String
Object
map
getRootMap
return
getObject
name
remove
name
String
PersistentMap
String
Object
map
getRootMap
removeObject
name
String
ROOT_MAP_NAME
getRootMapMonitor
Object
return
ROOT_MAP_NAME
getRootMap
PersistentMap
String
Object
PersistentMap
String
Object
rootMap
PersistentMap
String
Object
selectSingle
PersistentMap
ROOT_MAP_NAME
if
rootMap
block
synchronized
getRootMapMonitor
rootMap
PersistentMap
String
Object
selectSingle
PersistentMap
ROOT_MAP_NAME
if
rootMap
block
rootMap
PersistentMap
String
Object
setName
ROOT_MAP_NAME
register
rootMap
setStore
setStore
return
rootMap
checkWeakReferences
for
forControl
block
ObjectInfo
wr
ObjectInfo
REF_QUEUE
poll
if
wr
block
break
GlobalPersistentID
objectID
getGlobalPersistentID
synchronized
objectsMonitor
objectInfosByID
remove
objectID
getObject
Object
globalID
GlobalPersistentID
Object
obj
getCachedObject
globalID
if
obj
block
obj
lookupStoredObject
globalID
return
obj
getObject
Object
globalID
GlobalPersistentID
classLoader
ClassLoader
Object
obj
getCachedObject
globalID
if
obj
block
obj
lookupStoredObject
globalID
classLoader
return
obj
getObject
Object
objectID
PersistentID
beanClass
Class
GlobalPersistentID
globalID
GlobalPersistentID
objectID
beanClass
Object
obj
getCachedObject
globalID
if
obj
block
obj
lookupStoredObject
objectID
beanClass
return
obj
getCachedObject
Object
globalID
GlobalPersistentID
synchronized
objectsMonitor
return
getCachedObjectImpl
globalID
getCachedObjectImpl
Object
globalID
GlobalPersistentID
ObjectInfo
oi
ObjectInfo
objectInfosByID
get
globalID
if
oi
block
return
return
getObject
lookupStoredObject
Object
globalID
GlobalPersistentID
classLoader
ClassLoader
PersistentID
objectID
getObjectID
String
className
getClassName
try
Class
beanClass
classLoader
lookupClass
className
loadClass
className
return
lookupStoredObject
objectID
beanClass
catchClause
cnf
throw
StoreException
cnf
getTableName
String
beanClass
Class
StoreInfo
sinfo
getStoreInfo
beanClass
return
getTableName
maxTableNameLength
lookupStoredObject
Object
objectID
PersistentID
beanClass
Class
StoreInfo
sinfo
getStoreInfo
beanClass
BeanFactory
factory
SimpleBeanFactory
beanClass
String
tableName
getTableName
maxTableNameLength
String
sqlString
tableName
getIdField
objectID
ResultsIterator
results
select
getBeanClass
sqlString
Object
factory
try
if
hasNext
block
return
next
block
return
close
reload
persObject
Object
PersistentID
objectID
getPersistentID
persObject
Class
beanClass
getClass
lookupStoredObject
objectID
beanClass
save
persObject
Object
save
persObject
save
persObject
Object
force
boolean
reload
boolean
checkWeakReferences
ObjectInfo
oi
getObjectInfo
persObject
try
save
force
catchClause
err
if
reload
block
if
isLoggable
INFO
block
info
reload
persObject
throw
err
insert
persObject
Object
checkWeakReferences
ObjectInfo
oi
synchronized
objectsMonitor
oi
objectInfosByObject
get
persObject
if
oi
block
throw
StoreException
insertBeanTransac
persObject
register
persObject
Object
checkWeakReferences
getObjectInfo
persObject
delete
persObject
Object
delete
persObject
delete
persObject
Object
forget
boolean
ObjectInfo
oi
getObjectInfo
persObject
delete
forget
getPersistentID
PersistentID
persObject
Object
ObjectInfo
oi
getObjectInfo
persObject
return
getObjectID
getGlobalPersistentID
GlobalPersistentID
persObject
Object
ObjectInfo
oi
getObjectInfo
persObject
return
GlobalPersistentID
getObjectID
getClassName
getObjectInfo
ObjectInfo
persObject
Object
return
getObjectInfo
persObject
beginTransaction
beginTransaction
TRANSACTION_READ_COMMITTED
beginTransaction
transactionIsolationLevel
int
try
database
beginTransaction
transactionIsolationLevel
catchClause
err
throw
StoreException
err
endTransaction
try
database
endTransaction
catchClause
err
throw
StoreException
err
inTransaction
boolean
return
database
inTransaction
requestLock
beanClass
Class
dataName
String
requestLock
beanClass
dataName
TRANSACTION_READ_COMMITTED
requestLock
beanClass
Class
dataName
String
transactionIsolationLevel
int
String
lockName
getName
dataName
try
database
requestLock
lockName
transactionIsolationLevel
catchClause
se
throw
StoreException
se
relinquishLock
try
database
relinquishLock
catchClause
se
throw
StoreException
se
insertBeanTransac
ObjectInfo
persObject
Object
boolean
inTransaction
inTransaction
if
inTransaction
block
beginTransaction
try
Long
id
insertBeanImpl
persObject
PersistentID
pid
PersistentID
id
Class
clazz
getClass
GlobalPersistentID
gid
GlobalPersistentID
pid
clazz
synchronized
objectsMonitor
ObjectInfo
oi
objectInfosByID
get
gid
if
oi
block
throw
IllegalStateException
oi
ObjectInfo
pid
persObject
clazz
objectInfosByID
put
gid
oi
objectInfosByObject
put
persObject
oi
return
oi
if
inTransaction
block
endTransaction
getObjectInfo
ObjectInfo
persObject
Object
doInsert
boolean
if
persObject
block
throw
java
lang
IllegalArgumentException
checkWeakReferences
ObjectInfo
oi
synchronized
objectsMonitor
oi
objectInfosByObject
get
persObject
if
oi
block
return
oi
return
insertBeanTransac
persObject
isPersistable
boolean
beanClass
Class
return
isAnnotationPresent
PersistentClass
isAssignableFrom
beanClass
Persistent
marshallBean
NameValueArray
bean
Object
sinfo
StoreInfo
normalizeFieldNames
boolean
currentInsertionEntry
InsertionEntry
PropertyDescriptor
pds
getPropertyDescriptors
ArrayList
pairList
ArrayList
length
Database
database
database
for
forControl
int
i
i
length
i
block
PropertyDescriptor
pd
pds
i
FieldDescriptor
fd
getFieldDescriptor
pd
if
fd
block
Method
readMethod
getReadMethod
Object
value
try
value
invoke
bean
Object
catchClause
iae
String
propName
getName
throw
StoreException
propName
getBeanClass
getName
iae
catchClause
ite
String
propName
getName
throw
StoreException
propName
getBeanClass
getName
ite
String
fieldName
normalizeFieldNames
normalizeName
getName
getName
add
Object
fieldName
marshallValue
sinfo
pd
value
currentInsertionEntry
int
length
size
NameValueArray
nva
NameValueArray
length
for
forControl
int
i
i
length
i
block
Object
pair
Object
get
i
setPair
i
String
pair
pair
return
nva
marshallCriteriaValues
Map
beanClass
Class
sinfo
StoreInfo
values
Map
Map
mValues
if
values
Criteria
block
Criteria
tmpCrit
Criteria
values
mValues
Criteria
getOperatorMap
getDefaultComparisonOperator
getLogicalOperatorMap
getDefaultLogicalOperator
block
mValues
HashMap
try
BeanInfo
beanInfo
getBeanInfo
beanClass
PropertyDescriptor
pds
getPropertyDescriptors
for
forControl
int
i
i
length
i
block
PropertyDescriptor
pd
pds
i
FieldDescriptor
fd
getFieldDescriptor
pd
if
fd
block
String
propName
getName
if
containsKey
propName
block
Object
value
get
propName
String
fieldName
getName
if
value
block
put
fieldName
marshallValue
sinfo
pd
value
block
put
fieldName
catchClause
ie
throw
StoreException
ie
return
mValues
marshallValue
Object
sinfo
StoreInfo
propertyName
String
value
Object
currentInsertionEntry
InsertionEntry
PropertyDescriptor
pd
getPropertyDescriptor
propertyName
if
pd
block
throw
StoreException
getName
return
marshallValue
sinfo
pd
value
currentInsertionEntry
fetchRawIDDArrayDuringMarshall
long
sinfo
StoreInfo
pd
PropertyDescriptor
fd
FieldDescriptor
objects
Object
currentInsertionEntry
InsertionEntry
if
fd
block
throw
IllegalStateException
getName
LinkedList
InsertionEntry
insertionStack
insertionStackTL
get
if
insertionStack
block
if
currentInsertionEntry
isEmpty
block
throw
IllegalStateException
Map
InsertionEntry
Collection
Integer
indexesByObject
IdentityHashMap
InsertionEntry
Collection
Integer
long
rawObjectIDs
long
length
for
forControl
int
objidx
objidx
length
objidx
block
Object
persObject
objects
objidx
if
persObject
block
rawObjectIDs
objidx
block
boolean
matchesStack
if
insertionStack
block
for
forControl
int
i
size
i
block
InsertionEntry
entry
get
i
if
contains
persObject
block
matchesStack
Collection
Integer
indexes
get
entry
if
indexes
block
indexes
LinkedList
Integer
put
entry
indexes
add
objidx
break
if
matchesStack
block
rawObjectIDs
objidx
block
PersistentID
pid
getPersistentID
persObject
rawObjectIDs
objidx
longValue
if
indexesByObject
block
Iterator
Map
Entry
InsertionEntry
Collection
Integer
i
entrySet
iterator
while
hasNext
block
Map
Entry
InsertionEntry
Collection
Integer
entry
next
InsertionEntry
insentry
getKey
Collection
Integer
indexes
getValue
LateUpdate
update
LateUpdate
sinfo
pd
getName
rawObjectIDs
indexes
addLateUpdateToExecute
update
addLateUpdateToModify
update
return
rawObjectIDs
fetchPersistentIDDuringMarshall
PersistentID
sinfo
StoreInfo
pd
PropertyDescriptor
fd
FieldDescriptor
propertyValueObject
Object
forGlobalReference
boolean
currentInsertionEntry
InsertionEntry
if
fd
block
throw
IllegalStateException
getName
LinkedList
InsertionEntry
insertionStack
insertionStackTL
get
if
insertionStack
block
if
currentInsertionEntry
isEmpty
block
throw
IllegalStateException
LateUpdate
update
for
forControl
int
i
size
i
block
InsertionEntry
entry
get
i
if
contains
propertyValueObject
block
if
update
block
update
LateUpdate
sinfo
pd
getName
forGlobalReference
addLateUpdateToExecute
update
break
if
update
block
addLateUpdateToModify
update
return
PersistentID
return
getPersistentID
propertyValueObject
marshallValue
Object
sinfo
StoreInfo
pd
PropertyDescriptor
value
Object
currentInsertionEntry
InsertionEntry
if
value
String
value
Integer
value
Long
value
block
return
value
block
Class
propertyType
getPropertyType
FieldDescriptor
fd
getFieldDescriptor
pd
boolean
globalRef
fd
isGlobalReference
if
globalRef
block
Class
valueClass
getClass
if
isPersistable
valueClass
block
throw
StoreException
getClass
getName
getBeanClass
getName
PersistentID
pid
fetchPersistentIDDuringMarshall
sinfo
pd
fd
value
currentInsertionEntry
GlobalPersistentID
gpid
GlobalPersistentID
pid
valueClass
return
toString
if
isPersistable
propertyType
block
Class
valueClass
getClass
if
valueClass
getPropertyType
block
throw
StoreException
getName
getPropertyType
getBeanClass
getName
return
fetchPersistentIDDuringMarshall
sinfo
pd
fd
value
currentInsertionEntry
longValue
if
isArray
isPersistable
getComponentType
block
Class
componentType
getComponentType
Object
objects
Object
value
for
forControl
int
i
i
length
i
block
Object
object
objects
i
if
object
block
if
getClass
componentType
block
throw
StoreException
getClass
getName
getClass
getName
getBeanClass
getName
long
rawObjectIDs
fetchRawIDDArrayDuringMarshall
sinfo
pd
fd
objects
currentInsertionEntry
return
marshallValue
pd
rawObjectIDs
block
return
marshallValue
pd
value
unmarshallValue
Object
sinfo
StoreInfo
pd
PropertyDescriptor
value
Object
if
value
block
return
block
FieldDescriptor
fd
getFieldDescriptor
pd
boolean
globalRef
fd
isGlobalReference
if
globalRef
block
String
rawGid
value
String
String
value
valueOf
value
GlobalPersistentID
gid
try
gid
valueOf
rawGid
catchClause
err
warning
rawGid
return
return
getObject
gid
block
Class
propType
getPropertyType
if
isPersistable
propType
block
if
value
Long
block
warning
getName
getClass
getName
return
PersistentID
objectID
PersistentID
Long
value
return
getObject
objectID
propType
if
isArray
block
Class
componentType
getComponentType
if
isPersistable
componentType
block
long
rawObjectIDs
long
unmarshallValue
pd
value
if
rawObjectIDs
block
return
Object
objects
Object
newInstance
componentType
length
for
forControl
int
i
i
length
i
block
long
rawID
rawObjectIDs
i
Object
object
rawID
getObject
PersistentID
rawID
componentType
objects
i
object
return
objects
block
return
unmarshallValue
pd
value
block
return
unmarshallValue
pd
value
equalValues
boolean
array1
NameValueArray
array2
NameValueArray
if
array1
block
return
array2
if
array2
block
return
int
length
length
Object
values1
valueArray
Object
values2
valueArray
for
forControl
int
i
i
length
i
block
Object
val1
values1
i
Object
val2
values2
i
if
val1
block
if
val2
block
return
if
equals
val2
block
return
return
equalValues
boolean
values1
Map
values2
Map
if
values2
block
return
values1
Iterator
i1
entrySet
iterator
while
hasNext
block
Map
Entry
entry1
Map
Entry
next
String
key1
String
getKey
Object
val1
getValue
Object
val2
get
key1
if
val1
block
if
val2
block
return
if
equals
val2
block
return
return
warn
text
String
if
isLoggable
WARNING
block
warning
text
selectParts
ResultsIterator
containerBean
Object
partbeanClass
Class
linkPropertyInPart
String
Map
props
HashMap
put
linkPropertyInPart
containerBean
return
select
partbeanClass
props
selectParts
ResultsIterator
containerBeanID
PersistentID
partbeanClass
Class
linkPropertyInPart
String
Map
props
HashMap
put
linkPropertyInPart
containerBeanID
return
select
partbeanClass
props
selectParts
ResultsIterator
containerBeanID
PersistentID
linkClass
Class
partClass
Class
propertyLinkingContainer
String
propertyLinkingPart
String
Database
database
database
StoreInfo
partSinfo
getStoreInfo
partClass
String
partNormalTableName
normalizeName
getTableName
maxTableNameLength
String
partNormalFieldID
normalizeName
getIdField
StoreInfo
linkSinfo
getStoreInfo
linkClass
String
linkNormalTableName
normalizeName
getTableName
maxTableNameLength
StringBuffer
sqlBuffer
StringBuffer
append
append
partNormalTableName
append
append
linkNormalTableName
append
append
partNormalTableName
append
append
linkNormalTableName
append
append
propertyLinkingPart
append
append
partNormalTableName
append
append
partNormalFieldID
append
append
linkNormalTableName
append
append
propertyLinkingContainer
append
append
containerBeanID
String
sqlQuery
toString
if
isLoggable
INFO
block
info
sqlQuery
return
select
partClass
sqlQuery
Object
select
ResultsIterator
inbeanClass
Class
return
select
inbeanClass
selectSingle
Object
beanClass
Class
propertyName
String
propertyValue
Object
Map
values
HashMap
put
propertyName
propertyValue
return
selectSingle
beanClass
values
selectSingle
Object
beanClass
Class
values
Map
ResultsIterator
i
select
beanClass
values
try
if
hasNext
block
return
next
close
return
selectSingle
Object
beanClass
Class
values
Map
orderBy
String
descending
boolean
ResultsIterator
i
select
beanClass
values
orderBy
descending
Integer
try
if
hasNext
block
return
next
close
return
select
ResultsIterator
beanClass
Class
values
Map
return
select
beanClass
values
select
ResultsIterator
beanClass
Class
values
Map
orderByProperty
String
descending
boolean
limit
Integer
BeanFactory
beanFactory
SimpleBeanFactory
beanClass
return
select
beanClass
values
orderByProperty
descending
limit
beanFactory
select
ResultsIterator
beanClass
Class
propertyValues
Map
orderByProperty
String
descending
boolean
limit
Integer
beanFactory
BeanFactory
StoreInfo
sinfo
getStoreInfo
beanClass
String
tableName
getTableName
maxTableNameLength
String
cond
propertyValues
getNameValueSequence
sinfo
propertyValues
Object
params
propertyValues
EMPTY_PARAMETERS
getParameters
sinfo
propertyValues
String
orderBy
if
orderByProperty
block
PropertyDescriptor
orderByPd
getPropertyDescriptor
orderByProperty
if
orderByPd
block
throw
StoreException
orderByProperty
FieldDescriptor
orderByFd
getFieldDescriptor
orderByPd
if
orderByFd
block
throw
StoreException
orderByProperty
orderBy
getName
Database
database
database
String
normalTableName
normalizeName
tableName
String
normalOrderBy
normalizeName
orderBy
String
queryString
normalTableName
cond
cond
normalOrderBy
normalOrderBy
descending
limit
limit
return
select
beanClass
queryString
params
beanFactory
select
ResultsIterator
beanClass
Class
sqlQuery
String
parameters
Object
BeanFactory
factory
SimpleBeanFactory
beanClass
return
select
beanClass
sqlQuery
parameters
factory
select
ResultsIterator
beanClass
Class
sqlQuery
String
parameters
Object
beanFactory
BeanFactory
StoreInfo
sinfo
getStoreInfo
beanClass
BeanUnmarshaller
bu
LocalBeanUnmarshaller
sinfo
beanFactory
try
ResultsIterator
BeanWrapper
llbi
database
query
sqlQuery
parameters
bu
return
ResultsIterator
finalize
close
hasNext
boolean
return
hasNext
next
Object
BeanWrapper
bw
next
return
bean
remove
throw
UnsupportedOperationException
close
close
catchClause
se
throw
StoreException
se
delete
boolean
beanClass
Class
values
Map
StoreInfo
sinfo
getStoreInfo
beanClass
String
tableName
getTableName
beanClass
Map
mValues
marshallCriteriaValues
beanClass
sinfo
values
if
size
block
throw
StoreException
try
return
deleteRecords
tableName
mValues
catchClause
se
throw
StoreException
se
update
boolean
beanClass
Class
sqlStatement
String
propertyNames
String
parameters
Object
StoreInfo
sinfo
getStoreInfo
beanClass
Object
newParameters
Object
length
for
forControl
int
i
i
length
i
block
if
i
length
block
PropertyDescriptor
pd
getPropertyDescriptor
propertyNames
i
if
pd
block
throw
StoreException
propertyNames
i
getName
newParameters
i
marshallValue
sinfo
pd
parameters
i
block
newParameters
i
parameters
i
try
return
database
update
sqlStatement
newParameters
catchClause
se
throw
StoreException
se
deleteRecords
boolean
tableName
String
fieldValues
Map
String
cond
getNameValueSequence
fieldValues
Object
params
getParameters
fieldValues
return
database
update
tableName
cond
params
ThreadLocal
LinkedList
InsertionEntry
insertionStackTL
ThreadLocal
LinkedList
InsertionEntry
insertBeanImpl
Long
persObject
Object
Class
beanClass
getClass
StoreInfo
sinfo
getStoreInfo
beanClass
Long
resultingID
LinkedList
InsertionEntry
insertionStack
insertionStackTL
get
if
insertionStack
block
insertionStack
LinkedList
InsertionEntry
insertionStackTL
set
insertionStack
InsertionEntry
entry
InsertionEntry
persObject
add
entry
try
String
tableName
getTableName
maxTableNameLength
String
idField
getIdField
boolean
autoIncrementRequested
isAutoIncrementRequested
NameValueArray
pairs
marshallBean
persObject
sinfo
entry
try
resultingID
database
insert
tableName
idField
nameArray
valueArray
autoIncrementRequested
return
resultingID
catchClause
se
if
isDuplicateEntryError
se
block
throw
DuplicateEntryException
getName
se
block
throw
StoreException
se
removeLast
LinkedList
lateUpdatesToModify
getLateUpdatesToModify
if
lateUpdatesToModify
block
PersistentID
pid
PersistentID
resultingID
Iterator
i
iterator
while
hasNext
block
LateUpdate
update
LateUpdate
next
setIdToUpdate
pid
LinkedList
lateUpdatesToExecute
getLateUpdatesToExecute
if
lateUpdatesToExecute
block
Iterator
i
iterator
while
hasNext
block
LateUpdate
update
LateUpdate
next
try
if
isLoggable
INFO
block
info
update
execute
beanClass
resultingID
catchClause
err
log
WARNING
update
err
updateBeanImpl
boolean
persObject
Object
objectID
PersistentID
Database
database
database
Class
beanClass
getClass
StoreInfo
sinfo
getStoreInfo
beanClass
String
tableName
normalizeName
getTableName
maxTableNameLength
String
idField
normalizeName
getIdField
NameValueArray
pairs
marshallBean
persObject
sinfo
String
setters
getUpdateNameValueSequence
sinfo
pairs
Object
parameters
valueArray
String
sql
tableName
setters
idField
objectID
try
return
database
update
sql
parameters
catchClause
se
if
isDuplicateEntryError
se
block
throw
DuplicateEntryException
getName
se
block
throw
StoreException
se
updatePairsImpl
boolean
sinfo
StoreInfo
fieldValuePairs
NameValueArray
objectID
PersistentID
String
tableName
getTableName
maxTableNameLength
Database
database
database
String
idField
normalizeName
getIdField
String
setters
getUpdateNameValueSequence
sinfo
fieldValuePairs
Object
parameters
valueArray
String
sql
normalizeName
tableName
setters
idField
objectID
try
return
database
update
sql
parameters
catchClause
se
if
isDuplicateEntryError
se
block
throw
DuplicateEntryException
getClass
getName
se
block
throw
StoreException
se
deleteBeanImpl
boolean
sinfo
StoreInfo
objectID
PersistentID
String
tableName
getTableName
maxTableNameLength
String
sql
tableName
getIdField
objectID
try
return
database
update
sql
Object
catchClause
se
throw
StoreException
se
getUpdateNameValueSequence
String
storeInfo
StoreInfo
fieldValuePairs
NameValueArray
int
length
length
String
nameArray
nameArray
StringBuffer
condBuf
StringBuffer
Database
database
database
for
forControl
int
i
i
length
i
block
if
i
block
append
String
fieldName
nameArray
i
append
normalizeName
fieldName
append
return
toString
getNameValueSequence
String
storeInfo
StoreInfo
values
Map
defaultLogicalOperator
String
isQuery
boolean
isPropertyValues
boolean
StringBuffer
condBuf
StringBuffer
Criteria
criteria
LogicalOperator
logicalOperator
SimpleLogicalOperator
defaultLogicalOperator
if
values
Criteria
block
criteria
Criteria
values
Database
database
database
Iterator
i
entrySet
iterator
while
hasNext
block
Map
Entry
entry
Map
Entry
next
String
fieldName
String
itemName
String
getKey
if
isPropertyValues
block
String
propertyName
itemName
PropertyDescriptor
pd
getPropertyDescriptor
propertyName
if
pd
block
throw
StoreException
propertyName
FieldDescriptor
fd
getFieldDescriptor
pd
if
fd
block
throw
StoreException
propertyName
fieldName
normalizeName
getName
block
fieldName
normalizeName
itemName
Object
rawValue
getValue
if
criteria
block
Operator
operator
getOperator
fieldName
logicalOperator
getLogicalOperator
fieldName
if
rawValue
MultiValueContainer
block
MultiValueContainer
container
MultiValueContainer
rawValue
Iterator
itContainer
iterator
while
hasNext
block
Object
entryObject
next
if
operator
EQUALS
operator
LIKE
isQuery
entryObject
block
operator
IS
if
entryObject
operator
LIKE
getClass
Integer
getClass
Long
block
operator
EQUALS
append
operation
fieldName
if
hasNext
block
append
operatorString
block
if
operator
EQUALS
operator
LIKE
isQuery
getValue
block
operator
IS
if
getValue
operator
LIKE
getValue
getClass
Integer
getValue
getClass
Long
block
operator
EQUALS
append
operation
fieldName
block
append
fieldName
if
isQuery
getValue
block
append
block
append
append
if
hasNext
block
append
operatorString
return
toString
getParameters
Object
storeInfo
StoreInfo
values
Map
isPropertyValues
boolean
currentInsertionEntry
InsertionEntry
Iterator
i
entrySet
iterator
Collection
params
LinkedList
while
hasNext
block
Map
Entry
entry
Map
Entry
next
Object
rawValue
getValue
if
rawValue
IMultiValueContainer
block
Iterator
MultiValueIt
IMultiValueContainer
rawValue
while
hasNext
block
Object
nestedRawValue
next
Object
nestedValue
if
isPropertyValues
block
String
propertyName
String
getKey
nestedValue
marshallValue
storeInfo
propertyName
nestedRawValue
block
nestedValue
rawValue
add
nestedValue
block
Object
value
if
isPropertyValues
block
String
propertyName
String
getKey
value
marshallValue
storeInfo
propertyName
rawValue
currentInsertionEntry
block
value
rawValue
add
value
return
toArray
normalizeName
String
name
String
return
database
normalizeName
name
ObjectInfo
PersistentID
objectID
Class
beanClass
Object
saveMonitor
StoreInfo
storeInfo
NameValueArray
lastValues
ObjectInfo
objectID
PersistentID
persObject
Object
persObject
REF_QUEUE
if
persObject
block
throw
IllegalArgumentException
objectID
objectID
beanClass
getClass
storeInfo
getStoreInfo
beanClass
saveMonitor
ObjectInfo
objectID
PersistentID
persObject
Object
beanClass
Class
persObject
REF_QUEUE
if
persObject
block
throw
IllegalArgumentException
objectID
objectID
beanClass
beanClass
saveMonitor
storeInfo
getStoreInfo
beanClass
getClassName
String
return
beanClass
getName
getPersistentClass
Class
return
beanClass
getObjectID
PersistentID
return
objectID
getGlobalPersistentID
GlobalPersistentID
return
GlobalPersistentID
objectID
beanClass
getObject
Object
return
get
save
force
boolean
Object
bean
getObject
StoreInfo
sinfo
storeInfo
NameValueArray
newValues
marshallBean
bean
sinfo
synchronized
saveMonitor
NameValueArray
oldValues
lastValues
if
force
equalValues
newValues
oldValues
block
updatePairsImpl
sinfo
newValues
objectID
lastValues
newValues
delete
forget
boolean
synchronized
saveMonitor
deleteBeanImpl
storeInfo
objectID
lastValues
if
forget
block
Object
bean
getObject
GlobalPersistentID
gid
GlobalPersistentID
objectID
beanClass
synchronized
objectsMonitor
objectInfosByID
remove
gid
if
bean
block
objectInfosByObject
remove
bean
WeakReference
Object
LocalBeanUnmarshaller
StoreInfo
storeInfo
BeanFactory
beanFactory
LocalBeanUnmarshaller
storeInfo
StoreInfo
beanFactory
BeanFactory
storeInfo
storeInfo
beanFactory
beanFactory
registerBean
Object
id
Long
Class
beanClass
storeInfo
getBeanClass
PersistentID
objectID
PersistentID
id
GlobalPersistentID
gid
GlobalPersistentID
objectID
beanClass
synchronized
objectsMonitor
Object
existingBean
getCachedObjectImpl
gid
if
existingBean
block
return
existingBean
Object
persObject
beanFactory
create
try
ObjectInfo
oi
ObjectInfo
objectID
persObject
objectInfosByObject
put
persObject
oi
objectInfosByID
put
GlobalPersistentID
objectID
getClass
oi
catchClause
err
throw
IllegalStateException
err
return
persObject
getIDField
String
return
storeInfo
getIdField
setProperty
bean
Object
normalFieldName
String
fieldValue
Object
StoreInfo
sinfo
storeInfo
PropertyDescriptor
pd
getPropertyDescriptorByNormalFieldName
normalFieldName
if
pd
block
Method
writeMethod
getWriteMethod
Object
umvalue
try
umvalue
unmarshallValue
sinfo
pd
fieldValue
invoke
bean
umvalue
catchClause
err
throw
IllegalStateException
getName
getBeanClass
getName
umvalue
fieldValue
err
BeanUnmarshaller
SimpleBeanFactory
Class
beanClass
SimpleBeanFactory
beanClass
Class
beanClass
beanClass
create
Object
try
return
beanClass
newInstance
catchClause
err
throw
IllegalStateException
beanClass
getName
err
BeanFactory
InsertionEntry
Object
insertedObject
LinkedList
LateUpdate
updatesToExecute
LinkedList
LateUpdate
updatesToModify
InsertionEntry
insertedObject
Object
insertedObject
insertedObject
addLateUpdateToExecute
update
LateUpdate
LinkedList
LateUpdate
updates
updatesToExecute
if
updates
block
updates
LinkedList
LateUpdate
updatesToExecute
updates
add
update
addLateUpdateToModify
update
LateUpdate
LinkedList
LateUpdate
updates
updatesToModify
if
updates
block
updates
LinkedList
LateUpdate
updatesToModify
updates
add
update
getLateUpdatesToExecute
LinkedList
LateUpdate
return
updatesToExecute
getLateUpdatesToModify
LinkedList
LateUpdate
return
updatesToModify
contains
boolean
bean
Object
return
bean
insertedObject
LateUpdate
StoreInfo
storeInfoToUpdate
PropertyDescriptor
pd
String
fieldToUpdate
boolean
globalReference
long
rawObjectIDs
Collection
indexesToChange
PersistentID
idToUpdate
LateUpdate
storeInfoToUpdate
StoreInfo
pd
PropertyDescriptor
fieldToUpdate
String
globalReference
boolean
storeInfoToUpdate
storeInfoToUpdate
fieldToUpdate
fieldToUpdate
globalReference
globalReference
pd
pd
rawObjectIDs
indexesToChange
LateUpdate
storeInfoToUpdate
StoreInfo
pd
PropertyDescriptor
fieldToUpdate
String
globalReference
boolean
rawObjectIDs
long
indexesToChange
Collection
storeInfoToUpdate
storeInfoToUpdate
fieldToUpdate
fieldToUpdate
globalReference
globalReference
pd
pd
rawObjectIDs
rawObjectIDs
indexesToChange
indexesToChange
setIdToUpdate
id
PersistentID
idToUpdate
id
execute
insertedBeanClass
Class
insertionID
Long
PersistentID
idToUpdate
idToUpdate
if
idToUpdate
block
throw
IllegalStateException
PersistentID
pid
PersistentID
insertionID
Object
fieldValue
long
rawObjectIDs
rawObjectIDs
if
rawObjectIDs
block
long
newRawObjectIDs
long
length
arraycopy
rawObjectIDs
newRawObjectIDs
length
Iterator
i
indexesToChange
iterator
while
hasNext
block
int
index
Integer
next
newRawObjectIDs
index
insertionID
fieldValue
storeInfoToUpdate
marshallValue
pd
newRawObjectIDs
block
fieldValue
globalReference
toString
GlobalPersistentID
pid
insertedBeanClass
longValue
NameValueArray
pairs
NameValueArray
setPair
fieldToUpdate
fieldValue
updatePairsImpl
storeInfoToUpdate
pairs
idToUpdate
toString
String
return
storeInfoToUpdate
getBeanClass
getName
fieldToUpdate
globalReference
idToUpdate
rawObjectIDs
indexesToChange
