DatabaseImpl
Random
RAND
Random
currentTimeMillis
DatabaseImpl
init
dataSource
DataSource
init
dataSource
getChangeFieldStatements
PreparedStatement
c
Connection
tableName
String
fd
FieldDescriptor
autoIncrement
boolean
String
randomName
abs
nextInt
PreparedStatement
ps1
getRenameFieldStatements
c
tableName
getName
FieldDescriptor
randomName
fd
PreparedStatement
ps2
getRenameFieldStatements
c
tableName
randomName
fd
autoIncrement
PreparedStatement
result
PreparedStatement
length
length
for
forControl
int
i
i
length
i
block
result
i
ps1
i
for
forControl
int
i
i
length
i
block
result
i
length
ps2
i
return
result
getRenameFieldStatements
PreparedStatement
c
Connection
tableName
String
oldName
String
fd
FieldDescriptor
autoIncrement
boolean
PreparedStatement
pss1
getCreateFieldStatements
c
tableName
fd
autoIncrement
PreparedStatement
ps2
prepareStatement
tableName
getName
oldName
PreparedStatement
ps3
getRemoveFieldStatement
c
tableName
oldName
int
length
length
PreparedStatement
result
PreparedStatement
length
int
index
for
forControl
index
index
length
index
block
result
index
pss1
index
result
index
ps2
result
index
ps3
return
result
isDuplicateEntryError
boolean
se
SQLException
if
sqlStateType
sqlStateSQL99
block
return
equals
getSQLState
String
message
getMessage
boolean
isDuplicate
isDuplicate
message
toLowerCase
indexOf
isDuplicate
getErrorCode
isDuplicate
getErrorCode
return
isDuplicate
getTypeDeclaration
String
dataType
int
if
dataType
VARBINARY
dataType
BINARY
dataType
BLOB
block
return
if
dataType
FLOAT
dataType
DOUBLE
block
return
if
dataType
VARCHAR
block
return
if
dataType
CHAR
block
return
block
return
getTypeDeclaration
dataType
getRemoveFieldStatement
PreparedStatement
c
Connection
tableName
String
columnName
String
String
sqlCmd
tableName
columnName
PreparedStatement
ps
prepareStatement
sqlCmd
return
ps
getCreateFieldStatement
PreparedStatement
c
Connection
tableName
String
fd
FieldDescriptor
String
sqlCmd
tableName
getName
getTypeDeclaration
getSqlType
PreparedStatement
ps
prepareStatement
sqlCmd
return
ps
normalizeName
String
s
String
if
s
block
return
return
toUpperCase
normalizeIndex
IndexDescriptor
normalTableName
String
id
IndexDescriptor
IndexDescriptor
nid
IndexDescriptor
normalTableName
getName
toUpperCase
isUnique
String
getKeyLength
Collection
rawFieldNames
getFieldNames
for
forControl
Iterator
i
iterator
hasNext
block
String
rawFieldName
String
next
addFieldName
toUpperCase
return
nid
createEmptyRecordMap
Map
return
UpperCaseMap
getAutoIncrementRetrievalStatement
PreparedStatement
c
Connection
throw
java
lang
UnsupportedOperationException
UpperCaseMap
containsKey
boolean
key
Object
if
key
String
block
return
containsKey
String
key
return
containsKey
key
get
Object
key
Object
if
key
String
block
return
get
String
key
return
get
key
HashMap
AbstractDatabase
