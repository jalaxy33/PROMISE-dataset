IndirectEndpoint
Log
trace
getLog
TRACE_LOGGER
Log
log
getLog
IndirectEndpoint
String
name
String
key
Endpoint
parentEndpoint
send
synMessageContext
MessageContext
Endpoint
endpoint
getEndpoint
key
if
endpoint
block
handleException
key
assert
endpoint
if
isActive
synMessageContext
block
pushFaultHandler
send
synMessageContext
block
if
parentEndpoint
block
auditWarn
getName
synMessageContext
onChildEndpointFail
synMessageContext
block
auditWarn
getName
synMessageContext
Object
o
getFaultStack
pop
if
o
block
FaultHandler
o
getName
String
return
name
setName
name
String
name
trim
getKey
String
return
key
setKey
key
String
key
key
isActive
boolean
synMessageContext
MessageContext
Endpoint
endpoint
getEndpoint
key
if
endpoint
block
handleException
key
assert
endpoint
return
isActive
synMessageContext
setActive
active
boolean
synMessageContext
MessageContext
Endpoint
endpoint
getEndpoint
key
if
endpoint
block
handleException
key
assert
endpoint
setActive
active
synMessageContext
setParentEndpoint
parentEndpoint
Endpoint
parentEndpoint
parentEndpoint
onChildEndpointFail
endpoint
Endpoint
synMessageContext
MessageContext
if
parentEndpoint
block
onChildEndpointFail
synMessageContext
block
Object
o
getFaultStack
pop
if
o
block
FaultHandler
o
handleException
msg
String
error
msg
throw
SynapseException
msg
auditWarn
msg
String
msgContext
MessageContext
warn
msg
if
getServiceLog
block
getServiceLog
warn
msg
if
shouldTrace
msgContext
block
warn
msg
shouldTrace
boolean
synCtx
MessageContext
Endpoint
endpoint
getEndpoint
key
EndpointDefinition
endptDefn
if
endpoint
AddressEndpoint
block
AddressEndpoint
addEndpt
AddressEndpoint
endpoint
endptDefn
getEndpoint
if
endpoint
WSDLEndpoint
block
WSDLEndpoint
wsdlEndpt
WSDLEndpoint
endpoint
endptDefn
getEndpoint
return
endptDefn
getTraceState
TRACING_ON
getTraceState
TRACING_UNSET
getTracingState
TRACING_ON
onFault
synMessageContext
MessageContext
if
parentEndpoint
block
onChildEndpointFail
synMessageContext
block
Object
o
getFaultStack
pop
if
o
block
FaultHandler
o
FaultHandler
Endpoint
