TimeoutHandler
Log
log
getLog
TimeoutHandler
Map
callbackStore
Object
lock
Object
boolean
alreadyExecuting
long
globalTimeout
DEFAULT_GLOBAL_TIMEOUT
TimeoutHandler
callbacks
Map
callbackStore
callbacks
globalTimeout
getInstance
getGlobalTimeoutInterval
info
globalTimeout
run
if
alreadyExecuting
return
synchronized
lock
alreadyExecuting
try
processCallbacks
catchClause
ignore
alreadyExecuting
processCallbacks
synchronized
callbackStore
if
size
block
long
currentTime
currentTime
Iterator
i
keySet
iterator
while
hasNext
block
Object
key
next
AsyncCallback
callback
AsyncCallback
get
key
if
getTimeOutAction
NONE
block
if
getTimeOutOn
currentTime
block
remove
key
if
getTimeOutAction
DISCARD_AND_FAULT
block
MessageContext
msgContext
getSynapseOutMsgCtx
setProperty
ERROR_CODE
TIME_OUT
setProperty
ERROR_MESSAGE
Stack
faultStack
getFaultStack
for
forControl
int
j
j
size
j
block
Object
o
pop
if
o
FaultHandler
block
FaultHandler
o
if
currentTime
globalTimeout
getTimeOutOn
block
warn
key
globalTimeout
remove
key
currentTime
long
return
currentTimeMillis
TimerTask
