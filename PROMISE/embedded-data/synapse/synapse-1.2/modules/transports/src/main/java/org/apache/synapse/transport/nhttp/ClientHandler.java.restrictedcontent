ClientHandler
Log
log
getLog
ClientHandler
HttpParams
params
HttpProcessor
httpProcessor
ConnectionReuseStrategy
connStrategy
ByteBufferAllocator
allocator
ConfigurationContext
cfgCtx
NHttpConfiguration
cfg
WorkerPool
workerPool
MetricsCollector
metrics
String
OUTGOING_MESSAGE_CONTEXT
String
AXIS2_HTTP_REQUEST
String
REQUEST_SOURCE_BUFFER
String
RESPONSE_SINK_BUFFER
String
CONTENT_TYPE
ClientHandler
cfgCtx
ConfigurationContext
params
HttpParams
metrics
MetricsCollector
cfgCtx
cfgCtx
params
params
httpProcessor
getHttpProcessor
connStrategy
DefaultConnectionReuseStrategy
metrics
metrics
allocator
HeapByteBufferAllocator
cfg
getInstance
workerPool
getWorkerPool
getClientCoreThreads
getClientMaxThreads
getClientKeepalive
getClientQueueLen
requestReady
conn
NHttpClientConnection
submitRequest
conn
NHttpClientConnection
axis2Req
Axis2HttpRequest
try
HttpContext
context
getContext
ContentOutputBuffer
outputBuffer
SharedOutputBuffer
getBufferSize
conn
allocator
setOutputBuffer
outputBuffer
setAttribute
REQUEST_SOURCE_BUFFER
outputBuffer
setAttribute
AXIS2_HTTP_REQUEST
axis2Req
setAttribute
HTTP_CONNECTION
conn
setAttribute
HTTP_TARGET_HOST
getHttpHost
setAttribute
OUTGOING_MESSAGE_CONTEXT
getMsgContext
HttpRequest
request
getRequest
setParams
DefaultedHttpParams
getParams
params
httpProcessor
process
request
context
submitRequest
request
setAttribute
HTTP_REQUEST
request
synchronized
axis2Req
setReadyToStream
notifyAll
catchClause
e
handleException
getMessage
e
conn
catchClause
e
handleException
getMessage
e
conn
connected
conn
NHttpClientConnection
attachment
Object
if
isDebugEnabled
block
debug
conn
try
HttpContext
context
getContext
Axis2HttpRequest
axis2Req
Axis2HttpRequest
attachment
ContentOutputBuffer
outputBuffer
SharedOutputBuffer
getBufferSize
conn
allocator
setOutputBuffer
outputBuffer
setAttribute
REQUEST_SOURCE_BUFFER
outputBuffer
setAttribute
AXIS2_HTTP_REQUEST
axis2Req
setAttribute
HTTP_CONNECTION
conn
setAttribute
HTTP_TARGET_HOST
getHttpHost
setAttribute
OUTGOING_MESSAGE_CONTEXT
getMsgContext
HttpRequest
request
getRequest
setParams
DefaultedHttpParams
getParams
params
httpProcessor
process
request
context
submitRequest
request
setAttribute
HTTP_REQUEST
request
synchronized
axis2Req
setReadyToStream
notifyAll
catchClause
e
handleException
getMessage
e
conn
catchClause
e
handleException
getMessage
e
conn
closed
conn
NHttpClientConnection
forget
conn
checkAxisRequestComplete
conn
HttpContext
context
getContext
removeAttribute
RESPONSE_SINK_BUFFER
removeAttribute
REQUEST_SOURCE_BUFFER
if
isTraceEnabled
block
trace
timeout
conn
NHttpClientConnection
if
isDebugEnabled
block
debug
if
metrics
block
incrementTimeoutsSending
checkAxisRequestComplete
conn
shutdownConnection
conn
exception
conn
NHttpClientConnection
e
HttpException
error
getMessage
checkAxisRequestComplete
conn
e
shutdownConnection
conn
if
metrics
block
incrementFaultsSending
exception
conn
NHttpClientConnection
e
IOException
error
getMessage
e
checkAxisRequestComplete
conn
e
shutdownConnection
conn
if
metrics
block
incrementFaultsSending
checkAxisRequestComplete
conn
NHttpClientConnection
errorMessage
String
exceptionToRaise
Exception
Axis2HttpRequest
axis2Request
Axis2HttpRequest
getContext
getAttribute
AXIS2_HTTP_REQUEST
if
axis2Request
isCompleted
block
setCompleted
if
errorMessage
exceptionToRaise
block
return
MessageContext
mc
getMsgContext
if
getAxisOperation
getAxisOperation
getMessageReceiver
block
execute
Runnable
run
MessageReceiver
mr
getAxisOperation
getMessageReceiver
try
MessageContext
nioFaultMessageContext
if
errorMessage
block
nioFaultMessageContext
createFaultMessageContext
mc
AxisFault
errorMessage
if
exceptionToRaise
block
nioFaultMessageContext
createFaultMessageContext
mc
AxisFault
toString
exceptionToRaise
if
nioFaultMessageContext
block
setProperty
SENDING_FAULT
TRUE
receive
nioFaultMessageContext
catchClause
af
error
af
inputReady
conn
NHttpClientConnection
decoder
ContentDecoder
HttpContext
context
getContext
HttpResponse
response
getHttpResponse
ContentInputBuffer
inBuf
ContentInputBuffer
getAttribute
RESPONSE_SINK_BUFFER
try
int
bytesRead
consumeContent
decoder
if
metrics
bytesRead
block
incrementBytesReceived
bytesRead
if
isCompleted
block
if
metrics
block
incrementMessagesReceived
if
keepAlive
response
context
block
close
block
release
conn
catchClause
e
handleException
getMessage
e
conn
outputReady
conn
NHttpClientConnection
encoder
ContentEncoder
HttpContext
context
getContext
ContentOutputBuffer
outBuf
ContentOutputBuffer
getAttribute
REQUEST_SOURCE_BUFFER
try
int
bytesWritten
produceContent
encoder
if
metrics
bytesWritten
block
incrementBytesSent
bytesWritten
if
isCompleted
block
if
metrics
block
incrementMessagesSent
catchClause
e
handleException
getMessage
e
conn
responseReceived
conn
NHttpClientConnection
HttpContext
context
getContext
HttpResponse
response
getHttpResponse
checkAxisRequestComplete
conn
switch
getStatusLine
getStatusCode
case
SC_ACCEPTED
block
if
isDebugEnabled
block
debug
ContentInputBuffer
inputBuffer
SharedInputBuffer
conn
allocator
setAttribute
RESPONSE_SINK_BUFFER
inputBuffer
MessageContext
outMsgCtx
MessageContext
getAttribute
OUTGOING_MESSAGE_CONTEXT
MessageReceiver
mr
getAxisOperation
getMessageReceiver
if
isPropertyTrue
IGNORE_SC_ACCEPTED
block
try
MessageContext
responseMsgCtx
getOperationContext
getMessageContext
MESSAGE_LABEL_IN
if
responseMsgCtx
getOptions
isUseSeparateListener
block
return
setServerSide
setDoingREST
isDoingREST
setProperty
TRANSPORT_IN
getProperty
TRANSPORT_IN
setTransportIn
getTransportIn
setTransportOut
getTransportOut
setAxisMessage
getAxisOperation
getMessage
MESSAGE_LABEL_IN_VALUE
setOperationContext
getOperationContext
setConfigurationContext
getConfigurationContext
setTo
if
isDoingREST
isSOAP11
block
setEnvelope
getDefaultEnvelope
SOAP12Factory
block
setEnvelope
getDefaultEnvelope
SOAP11Factory
setProperty
DISABLE_ADDRESSING_FOR_OUT_MESSAGES
TRUE
setProperty
SC_ACCEPTED
TRUE
receive
responseMsgCtx
catchClause
af
debug
return
case
SC_INTERNAL_SERVER_ERROR
block
Header
contentType
getFirstHeader
CONTENT_TYPE
if
contentType
block
if
getValue
indexOf
SOAP_11_CONTENT_TYPE
getValue
indexOf
SOAP_12_CONTENT_TYPE
block
if
isDebugEnabled
block
debug
block
if
isDebugEnabled
block
debug
processResponse
conn
context
response
return
error
getStatusLine
getReasonPhrase
return
case
SC_CONTINUE
block
if
isDebugEnabled
block
debug
return
case
SC_OK
block
processResponse
conn
context
response
return
case
block
warn
getStatusLine
getStatusCode
getStatusLine
getReasonPhrase
Header
contentType
getFirstHeader
CONTENT_TYPE
if
contentType
block
if
getValue
indexOf
SOAP_11_CONTENT_TYPE
getValue
indexOf
SOAP_12_CONTENT_TYPE
block
if
isDebugEnabled
block
debug
if
getValue
indexOf
block
if
isDebugEnabled
block
debug
block
warn
getValue
getStatusLine
getStatusCode
getStatusLine
getReasonPhrase
block
warn
getStatusLine
getStatusCode
getStatusLine
getReasonPhrase
processResponse
conn
context
response
processResponse
conn
NHttpClientConnection
context
HttpContext
response
HttpResponse
ContentInputBuffer
inputBuffer
SharedInputBuffer
getBufferSize
conn
allocator
setAttribute
RESPONSE_SINK_BUFFER
inputBuffer
BasicHttpEntity
entity
BasicHttpEntity
if
getStatusLine
getProtocolVersion
greaterEquals
HTTP_1_1
block
setChunked
setEntity
entity
setAttribute
HTTP_RESPONSE
response
execute
ClientWorker
cfgCtx
ContentInputStream
inputBuffer
response
MessageContext
getAttribute
OUTGOING_MESSAGE_CONTEXT
execute
task
Runnable
execute
task
handleException
msg
String
e
Exception
conn
NHttpClientConnection
error
msg
e
if
conn
block
shutdownConnection
conn
shutdownConnection
conn
HttpConnection
try
shutdown
catchClause
ignore
getHttpProcessor
HttpProcessor
BasicHttpProcessor
httpProcessor
BasicHttpProcessor
addInterceptor
RequestContent
addInterceptor
RequestTargetHost
addInterceptor
RequestConnControl
addInterceptor
RequestUserAgent
addInterceptor
RequestExpectContinue
return
httpProcessor
getActiveCount
int
return
getActiveCount
getQueueSize
int
return
getQueueSize
NHttpClientHandler
