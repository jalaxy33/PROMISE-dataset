LoggingNHttpClientIOTarget
NHttpClientIOTarget
target
Log
log
Log
headerlog
LoggingNHttpClientIOTarget
log
Log
headerlog
Log
target
NHttpClientIOTarget
if
target
block
throw
IllegalArgumentException
target
target
if
log
block
log
log
block
log
getLog
getClass
if
log
block
headerlog
headerlog
block
headerlog
getLog
HEADER_LOG_ID
requestInput
target
requestInput
requestOutput
target
requestOutput
suspendInput
target
suspendInput
suspendOutput
target
suspendOutput
close
log
debug
target
close
getMetrics
HttpConnectionMetrics
return
target
getMetrics
getSocketTimeout
int
return
target
getSocketTimeout
isOpen
boolean
return
target
isOpen
isStale
boolean
return
target
isStale
setSocketTimeout
timeout
int
target
setSocketTimeout
timeout
shutdown
log
debug
target
shutdown
getContext
HttpContext
return
target
getContext
getHttpRequest
HttpRequest
return
target
getHttpRequest
getHttpResponse
HttpResponse
return
target
getHttpResponse
getStatus
int
return
target
getStatus
isRequestSubmitted
boolean
return
target
isRequestSubmitted
resetInput
target
resetInput
resetOutput
target
resetOutput
submitRequest
request
HttpRequest
if
log
isDebugEnabled
block
log
debug
getRequestLine
toString
target
submitRequest
request
if
headerlog
isDebugEnabled
block
headerlog
debug
getRequestLine
toString
Header
headers
getAllHeaders
for
forControl
int
i
i
length
i
block
headerlog
debug
headers
i
toString
consumeInput
handler
NHttpClientHandler
log
debug
target
consumeInput
handler
produceOutput
handler
NHttpClientHandler
log
debug
target
produceOutput
handler
getLocalAddress
InetAddress
if
target
HttpInetConnection
block
return
HttpInetConnection
target
block
return
getLocalPort
int
if
target
HttpInetConnection
block
return
HttpInetConnection
target
block
return
getRemoteAddress
InetAddress
if
target
HttpInetConnection
block
return
HttpInetConnection
target
block
return
getRemotePort
int
if
target
HttpInetConnection
block
return
HttpInetConnection
target
block
return
toString
String
return
target
toString
NHttpClientIOTarget
HttpInetConnection
