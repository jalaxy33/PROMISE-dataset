XQueryMediator
List
MediatorProperty
dataSourceProperties
ArrayList
MediatorProperty
Value
queryKey
String
querySource
SourceXPathSupport
target
SourceXPathSupport
List
MediatorVariable
variables
ArrayList
MediatorVariable
Object
resourceLock
Object
boolean
useDOMSource
XQDataSource
cachedXQDataSource
XQConnection
cachedConnection
Map
String
XQPreparedExpression
cachedPreparedExpressionMap
Hashtable
String
XQPreparedExpression
XQueryMediator
mediate
boolean
synCtx
MessageContext
try
SynapseLog
synLog
getLog
synCtx
if
isTraceOrDebugEnabled
block
traceOrDebug
if
isTraceTraceEnabled
block
traceTrace
getEnvelope
traceOrDebug
queryKey
performQuery
synCtx
synLog
traceOrDebug
return
catchClause
e
handleException
e
return
performQuery
synCtx
MessageContext
synLog
SynapseLog
boolean
reLoad
boolean
needBind
XQResultSequence
resultSequence
String
generatedQueryKey
boolean
isQueryKeyGenerated
if
queryKey
block
generatedQueryKey
evaluateValue
synCtx
if
generatedQueryKey
block
isQueryKeyGenerated
XQPreparedExpression
cachedPreparedExpression
if
generatedQueryKey
equals
generatedQueryKey
block
Entry
dp
getConfiguration
getEntryDefinition
generatedQueryKey
if
dp
isDynamic
block
if
isCached
isExpired
block
reLoad
try
synchronized
resourceLock
if
cachedXQDataSource
block
cachedXQDataSource
SaxonXQDataSource
if
dataSourceProperties
isEmpty
block
traceOrDebug
for
MediatorProperty
dataSourceProperty
dataSourceProperties
block
if
dataSourceProperty
block
setProperty
getName
getValue
if
cachedConnection
cachedConnection
isClosed
block
traceOrDebug
cachedConnection
getConnection
if
isQueryKeyGenerated
block
cachedPreparedExpression
get
generatedQueryKey
if
reLoad
cachedPreparedExpression
cachedPreparedExpression
isClosed
block
if
querySource
equals
querySource
block
if
cachedPreparedExpression
block
if
isTraceOrDebugEnabled
block
traceOrDebug
querySource
traceOrDebug
cachedPreparedExpression
prepareExpression
querySource
if
isQueryKeyGenerated
block
put
generatedQueryKey
cachedPreparedExpression
needBind
block
Object
o
getEntry
generatedQueryKey
if
o
block
if
isTraceOrDebugEnabled
block
traceOrDebug
queryKey
return
String
sourceCode
InputStream
inputStream
if
o
OMElement
block
sourceCode
OMElement
o
if
o
String
block
sourceCode
String
o
if
o
OMText
block
DataHandler
dataHandler
DataHandler
OMText
o
if
dataHandler
block
try
inputStream
getInputStream
if
inputStream
block
if
isTraceOrDebugEnabled
block
traceOrDebug
queryKey
return
catchClause
e
handleException
if
sourceCode
equals
sourceCode
inputStream
block
if
isTraceOrDebugEnabled
block
traceOrDebug
queryKey
return
if
isTraceOrDebugEnabled
block
traceOrDebug
queryKey
traceOrDebug
if
sourceCode
block
cachedPreparedExpression
prepareExpression
sourceCode
block
cachedPreparedExpression
prepareExpression
inputStream
if
isQueryKeyGenerated
block
put
generatedQueryKey
cachedPreparedExpression
needBind
if
variables
isEmpty
block
traceOrDebug
for
MediatorVariable
variable
variables
block
if
variable
block
boolean
hasValueChanged
evaluateValue
synCtx
if
hasValueChanged
needBind
block
bindVariable
cachedPreparedExpression
variable
synLog
resultSequence
executeQuery
if
resultSequence
block
traceOrDebug
return
while
next
block
XQItem
xqItem
getItem
if
xqItem
block
return
XQItemType
itemType
getItemType
if
itemType
block
return
int
itemKind
getItemKind
int
baseType
getBaseType
if
isTraceOrDebugEnabled
block
traceOrDebug
getItemAsString
OMNode
destination
selectOMNode
synCtx
synLog
if
destination
block
if
isTraceOrDebugEnabled
block
traceOrDebug
destination
if
XQITEMKIND_DOCUMENT_ELEMENT
itemKind
XQITEMKIND_ELEMENT
itemKind
XQITEMKIND_DOCUMENT
itemKind
block
OMXMLParserWrapper
builder
createOMBuilder
StringReader
getItemAsString
OMElement
resultOM
getDocumentElement
if
resultOM
block
insertSiblingAfter
resultOM
detach
if
XQBASETYPE_INTEGER
baseType
XQBASETYPE_INT
baseType
block
OMElement
destination
if
XQBASETYPE_BOOLEAN
baseType
block
OMElement
destination
if
XQBASETYPE_DOUBLE
baseType
block
OMElement
destination
if
XQBASETYPE_FLOAT
baseType
block
OMElement
destination
if
XQBASETYPE_LONG
baseType
block
OMElement
destination
if
XQBASETYPE_SHORT
baseType
block
OMElement
destination
if
XQBASETYPE_BYTE
baseType
block
OMElement
destination
if
XQBASETYPE_STRING
baseType
block
OMElement
destination
if
getXPath
block
destination
getEnvelope
getBody
if
isTraceOrDebugEnabled
block
traceOrDebug
destination
if
XQITEMKIND_DOCUMENT_ELEMENT
itemKind
XQITEMKIND_ELEMENT
itemKind
XQITEMKIND_DOCUMENT
itemKind
block
OMXMLParserWrapper
builder
createOMBuilder
StringReader
getItemAsString
OMElement
resultOM
getDocumentElement
if
resultOM
block
OMElement
destination
break
close
catchClause
e
handleException
getMessage
e
catchClause
e
handleException
getMessage
e
bindVariable
xqDynamicContext
XQDynamicContext
variable
MediatorVariable
synLog
SynapseLog
if
variable
block
QName
name
getName
int
type
getType
Object
value
getValue
if
value
type
block
if
isTraceOrDebugEnabled
block
traceOrDebug
name
value
switch
type
case
XQBASETYPE_BOOLEAN
block
boolean
booleanValue
if
value
String
block
booleanValue
parseBoolean
String
value
if
value
Boolean
block
booleanValue
Boolean
value
block
handleException
bindBoolean
name
booleanValue
break
case
XQBASETYPE_INTEGER
block
int
intValue
if
value
String
block
try
intValue
parseInt
String
value
catchClause
e
handleException
value
e
if
value
Integer
block
intValue
Integer
value
block
handleException
if
intValue
block
bindInt
name
intValue
break
case
XQBASETYPE_INT
block
int
intValue
if
value
String
block
try
intValue
parseInt
String
value
catchClause
e
handleException
value
e
if
value
Integer
block
intValue
Integer
value
block
handleException
if
intValue
block
bindInt
name
intValue
break
case
XQBASETYPE_LONG
block
long
longValue
if
value
String
block
try
longValue
parseLong
String
value
catchClause
e
handleException
value
e
if
value
Long
block
longValue
Long
value
block
handleException
if
longValue
block
bindLong
name
longValue
break
case
XQBASETYPE_SHORT
block
short
shortValue
if
value
String
block
try
shortValue
parseShort
String
value
catchClause
e
handleException
value
e
if
value
Short
block
shortValue
Short
value
block
handleException
if
shortValue
block
bindShort
name
shortValue
break
case
XQBASETYPE_DOUBLE
block
double
doubleValue
if
value
String
block
try
doubleValue
parseDouble
String
value
catchClause
e
handleException
value
e
if
value
Double
block
doubleValue
Double
value
block
handleException
if
doubleValue
block
bindDouble
name
doubleValue
break
case
XQBASETYPE_FLOAT
block
float
floatValue
if
value
String
block
try
floatValue
parseFloat
String
value
catchClause
e
handleException
value
e
if
value
Float
block
floatValue
Float
value
block
handleException
if
floatValue
block
bindFloat
name
floatValue
break
case
XQBASETYPE_BYTE
block
byte
byteValue
if
value
String
block
try
byteValue
parseByte
String
value
catchClause
e
handleException
value
e
if
value
Byte
block
byteValue
Byte
value
block
handleException
if
byteValue
block
bindByte
name
byteValue
break
case
XQBASETYPE_STRING
block
if
value
String
block
bindObject
name
value
block
handleException
break
case
XQITEMKIND_DOCUMENT
block
bindOMNode
name
value
xqDynamicContext
break
case
XQITEMKIND_ELEMENT
block
bindOMNode
name
value
xqDynamicContext
break
case
XQITEMKIND_DOCUMENT_ELEMENT
block
bindOMNode
name
value
xqDynamicContext
break
case
block
handleException
type
name
break
bindOMNode
name
QName
value
Object
xqDynamicContext
XQDynamicContext
OMElement
variableValue
if
value
String
block
variableValue
stringToOM
String
value
if
value
OMElement
block
variableValue
OMElement
value
if
variableValue
block
if
useDOMSource
block
bindObject
name
DOMSource
Element
importOMElement
variableValue
getMetaFactory
getOMFactory
FEATURE_DOM
block
bindDocument
name
InputSource
getInputStream
variableValue
handleException
msg
String
e
Exception
error
msg
e
throw
SynapseException
msg
e
handleException
msg
String
error
msg
throw
SynapseException
msg
getQueryKey
Value
return
queryKey
setQueryKey
queryKey
Value
queryKey
queryKey
getQuerySource
String
return
querySource
setQuerySource
querySource
String
querySource
querySource
addAllVariables
list
List
MediatorVariable
variables
addAll
list
addVariable
variable
MediatorVariable
variables
add
variable
getDataSourceProperties
List
MediatorProperty
return
dataSourceProperties
getVariables
List
MediatorVariable
return
variables
getTarget
SynapseXPath
return
getXPath
setTarget
source
SynapseXPath
target
setXPath
source
addAllDataSourceProperties
list
List
MediatorProperty
dataSourceProperties
addAll
list
isUseDOMSource
boolean
return
useDOMSource
setUseDOMSource
useDOMSource
boolean
useDOMSource
useDOMSource
AbstractMediator
