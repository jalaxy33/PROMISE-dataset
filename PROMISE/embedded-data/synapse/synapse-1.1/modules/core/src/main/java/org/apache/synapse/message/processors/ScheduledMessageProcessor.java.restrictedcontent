ScheduledMessageProcessor
String
SCHEDULED_MESSAGE_PROCESSOR_GROUP
String
PROCESSOR_INSTANCE
Scheduler
scheduler
long
interval
String
quartzConfig
String
cronExpression
State
state
DESTROY
start
Trigger
trigger
TriggerBuilder
Trigger
triggerBuilder
newTrigger
withIdentity
name
if
cronExpression
equals
cronExpression
block
trigger
withSchedule
build
simpleSchedule
withIntervalInMilliseconds
interval
repeatForever
block
trigger
withSchedule
build
cronSchedule
cronExpression
JobBuilder
jobBuilder
getJobBuilder
JobDataMap
jobDataMap
getJobDataMap
put
MESSAGE_STORE
getMessageStore
messageStore
put
PARAMETERS
parameters
JobDetail
jobDetail
usingJobData
build
jobDataMap
try
scheduleJob
jobDetail
trigger
catchClause
e
throw
SynapseException
jobDetail
trigger
e
stop
if
state
START
block
try
if
scheduler
isStarted
block
if
isDebugEnabled
block
debug
getMetaData
standby
state
STOP
catchClause
e
throw
SynapseException
e
setParameters
parameters
Map
String
Object
setParameters
parameters
if
parameters
isEmpty
block
Object
o
get
CRON_EXPRESSION
if
o
block
cronExpression
toString
o
get
INTERVAL
if
o
block
interval
parseInt
toString
o
get
QUARTZ_CONF
if
o
block
quartzConfig
toString
init
se
SynapseEnvironment
init
se
StdSchedulerFactory
sf
StdSchedulerFactory
try
if
quartzConfig
equals
quartzConfig
block
if
isDebugEnabled
block
debug
quartzConfig
initialize
quartzConfig
catchClause
e
throw
SynapseException
sf
quartzConfig
e
try
scheduler
getScheduler
catchClause
e
throw
SynapseException
sf
e
try
start
state
INITIALIZED
start
catchClause
e
throw
SynapseException
e
getJobBuilder
JobBuilder
getJobDataMap
JobDataMap
return
JobDataMap
destroy
try
deleteJob
JobKey
name
SCHEDULED_MESSAGE_PROCESSOR_GROUP
shutdown
catchClause
e
error
e
state
DESTROY
AbstractMessageProcessor
