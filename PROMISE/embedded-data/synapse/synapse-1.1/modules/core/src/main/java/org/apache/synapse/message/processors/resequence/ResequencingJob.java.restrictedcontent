ResequencingJob
Log
log
getLog
ResequencingJob
execute
jobExecutionContext
JobExecutionContext
JobDataMap
jdm
getMergedJobDataMap
MessageStore
messageStore
MessageStore
get
MESSAGE_STORE
ResequencingProcessor
processor
ResequencingProcessor
get
PROCESSOR_INSTANCE
Map
String
Object
parameters
Map
String
Object
get
PARAMETERS
String
sequence
String
get
NEXT_SEQUENCE
SynapseXPath
seqNoxPath
if
isActive
messageStore
block
return
if
get
SEQUENCE_NUMBER_XPATH
block
seqNoxPath
SynapseXPath
get
SEQUENCE_NUMBER_XPATH
if
get
REQ_INIT_MSGS
block
setRequiredInitMsgs
AtomicInteger
parseInt
String
get
REQ_INIT_MSGS
if
get
REQ_INIT_MSGS_DELAY
block
setRequiredInitMsgsDelay
AtomicInteger
parseInt
String
get
REQ_INIT_MSGS_DELAY
if
get
DELETE_DUPLICATES
block
String
result
String
get
DELETE_DUPLICATES
if
equalsIgnoreCase
block
setDeleteDuplicates
AtomicBoolean
if
isInitSeqNo
get
block
deactivate
do
tried
getRequiredInitMsgsDelay
get
block
delay
STARTING_NUMBER_INIT_DELAY
if
size
getRequiredInitMsgs
get
block
selectStartingSeqNo
processor
messageStore
seqNoxPath
break
tried
if
isInitSeqNo
get
block
while
block
if
size
block
selectStartingSeqNo
processor
messageStore
seqNoxPath
if
isInitSeqNo
get
block
warn
break
boolean
errorStop
while
errorStop
block
for
forControl
int
messageIndex
messageIndex
block
MessageContext
messageContext
get
messageIndex
if
messageContext
block
errorStop
break
int
sequenceNo
try
sequenceNo
parseInt
stringValueOf
messageContext
catchClause
e
warn
getMessage
continue
String
messageId
getMessageID
if
sequenceNo
getNextSeqNo
getDeleteDuplicates
block
remove
messageId
if
sequenceNo
getNextSeqNo
block
remove
messageId
if
send
messageContext
sequence
block
incrementNextSeqNo
break
if
isActive
block
activate
selectStartingSeqNo
processor
ResequencingProcessor
messageStore
MessageStore
seqNoxPath
SynapseXPath
for
forControl
int
messageIndex
messageIndex
block
try
MessageContext
messageContext
get
messageIndex
if
messageContext
block
break
int
sequenceNo
sequenceNo
parseInt
stringValueOf
messageContext
if
sequenceNo
getNextSeqNo
block
setNextSeqNo
sequenceNo
setInitSeqNo
AtomicBoolean
catchClause
e
handleException
catchClause
e
handleException
getMessage
delay
timePeriod
long
try
sleep
timePeriod
catchClause
e
error
e
send
boolean
messageContext
MessageContext
sequence
String
Mediator
processingSequence
getSequence
sequence
if
processingSequence
block
mediate
messageContext
return
return
handleException
msg
String
error
msg
throw
SynapseException
msg
Job
