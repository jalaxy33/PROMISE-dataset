TransactionMediator
String
ACTION_COMMIT
String
ACTION_ROLLBACK
String
ACTION_NEW
String
ACTION_USE_EXISTING_OR_NEW
String
ACTION_FAULT_IF_NO_TX
String
USER_TX_LOOKUP_STR
Context
txContext
String
action
mediate
boolean
synCtx
MessageContext
UserTransaction
tx
SynapseLog
synLog
getLog
synCtx
if
isTraceOrDebugEnabled
block
traceOrDebug
action
if
isTraceTraceEnabled
block
traceTrace
getEnvelope
initContext
synCtx
try
tx
UserTransaction
lookup
USER_TX_LOOKUP_STR
catchClause
e
handleException
USER_TX_LOOKUP_STR
e
synCtx
if
equals
ACTION_COMMIT
block
try
commit
catchClause
e
handleException
e
synCtx
if
equals
ACTION_ROLLBACK
block
try
rollback
catchClause
e
handleException
e
synCtx
if
equals
ACTION_NEW
block
int
status
STATUS_UNKNOWN
try
status
getStatus
catchClause
e
handleException
e
synCtx
if
status
STATUS_NO_TRANSACTION
block
throw
SynapseException
try
begin
catchClause
e
handleException
e
synCtx
if
equals
ACTION_USE_EXISTING_OR_NEW
block
int
status
STATUS_UNKNOWN
try
status
getStatus
catchClause
e
handleException
e
synCtx
try
if
status
STATUS_NO_TRANSACTION
block
begin
catchClause
e
handleException
e
synCtx
if
equals
ACTION_FAULT_IF_NO_TX
block
int
status
STATUS_UNKNOWN
try
status
getStatus
catchClause
e
handleException
e
synCtx
if
status
STATUS_ACTIVE
throw
SynapseException
block
handleException
action
synCtx
if
isTraceOrDebugEnabled
block
traceOrDebug
return
setAction
action
String
action
action
getAction
String
return
action
initContext
synCtx
MessageContext
try
txContext
InitialContext
catchClause
e
handleException
e
synCtx
isContentAware
boolean
return
AbstractMediator
