AMQPTransportConnectionFactory
String
name
Map
String
String
parameters
HashMap
String
String
Connection
connection
Channel
channel
AMQPTransportConnectionFactory
parameters
Map
String
String
es
ExecutorService
try
connection
createConnection
es
parameters
channel
createChannel
connection
parameters
catchClause
e
String
msg
for
Map
Entry
entry
entrySet
block
msg
msg
getKey
getValue
throw
AMQPTransportException
msg
e
AMQPTransportConnectionFactory
parameter
Parameter
es
ExecutorService
try
name
getName
ParameterIncludeImpl
pi
ParameterIncludeImpl
if
getValue
OMElement
block
throw
AMQPTransportException
getName
PARAMETER_CONNECTION_URI
try
deserializeParameters
getParameterElement
catchClause
axisFault
throw
AMQPTransportException
getName
axisFault
for
Parameter
entry
getParameters
block
put
getName
String
getValue
connection
createConnection
es
parameters
channel
createChannel
connection
parameters
catchClause
e
throw
AMQPTransportException
getName
e
shutDownConnection
if
connection
isOpen
block
close
shutDownChannel
if
channel
isOpen
block
close
getChannel
Channel
return
channel
getConnection
Connection
return
connection
getName
String
return
name
getParameterValue
String
parameterName
String
return
get
parameterName
getParameters
Map
String
String
return
parameters
createConnection
Connection
es
ExecutorService
parameters
Map
String
String
ConnectionFactory
connectionFactory
ConnectionFactory
setUri
get
PARAMETER_CONNECTION_URI
if
get
PARAMETER_BROKER_LIST
block
Address
addresses
getAddressArray
get
PARAMETER_BROKER_LIST
return
newConnection
es
addresses
return
newConnection
es
createChannel
Channel
connection
Connection
parameters
Map
String
String
Channel
ch
if
get
PARAMETER_AMQP_CHANNEL_NUMBER
block
int
index
try
index
parseInt
get
PARAMETER_AMQP_CHANNEL_NUMBER
catchClause
e
index
ch
createChannel
index
block
ch
createChannel
int
prefetchSize
if
get
PARAMETER_CHANNEL_PREFETCH_SIZE
block
try
prefetchSize
parseInt
get
PARAMETER_CHANNEL_PREFETCH_SIZE
catchClause
e
prefetchSize
int
prefetchCount
if
get
PARAMETER_CHANNEL_PREFETCH_COUNT
block
try
prefetchCount
parseInt
get
PARAMETER_CHANNEL_PREFETCH_COUNT
basicQos
prefetchCount
catchClause
e
prefetchCount
boolean
useGlobally
if
get
PARAMETER_CHANNEL_QOS_GLOBAL
block
useGlobally
parseBoolean
get
PARAMETER_CHANNEL_QOS_GLOBAL
return
ch
