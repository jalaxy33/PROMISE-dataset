ClientHandler
Log
log
getLog
ClientHandler
HttpProcessor
httpProcessor
ConnectionReuseStrategy
connStrategy
ByteBufferAllocator
allocator
ConfigurationContext
cfgCtx
NHttpConfiguration
cfg
WorkerPool
workerPool
NhttpMetricsCollector
metrics
String
warnOnHttp500
boolean
countConnections
Lock
lock
ReentrantLock
ThreadingView
threadingView
Map
String
AtomicInteger
openConnections
HashMap
String
AtomicInteger
String
OUTGOING_MESSAGE_CONTEXT
String
AXIS2_HTTP_REQUEST
String
CLIENT_CONNECTION_DEBUG
String
CONNECTION_CREATION_TIME
String
REQUEST_SOURCE_BUFFER
String
RESPONSE_SINK_BUFFER
String
CONTENT_TYPE
ClientHandler
cfgCtx
ConfigurationContext
metrics
NhttpMetricsCollector
cfgCtx
cfgCtx
httpProcessor
getHttpProcessor
connStrategy
DefaultConnectionReuseStrategy
metrics
metrics
allocator
HeapByteBufferAllocator
threadingView
ThreadingView
cfg
getInstance
workerPool
getWorkerPool
getClientCoreThreads
getClientMaxThreads
getClientKeepalive
getClientQueueLen
Object
contentTypeList
getLocalProperty
if
contentTypeList
block
warnOnHttp500
String
contentTypeList
countConnections
getInstance
isCountConnections
setProperty
OPEN_CONNNECTIONS_MAP
openConnections
setConnectionsPerHosts
openConnections
requestReady
conn
NHttpClientConnection
submitRequest
conn
NHttpClientConnection
axis2Req
Axis2HttpRequest
processConnection
conn
axis2Req
connected
conn
NHttpClientConnection
attachment
Object
if
isDebugEnabled
block
debug
conn
connected
getContext
setAttribute
CONNECTION_CREATION_TIME
currentTimeMillis
if
countConnections
block
recordConnection
conn
try
processConnection
conn
Axis2HttpRequest
attachment
catchClause
e
incrementFaultsSending
handleException
getMessage
e
conn
processConnection
conn
NHttpClientConnection
axis2Req
Axis2HttpRequest
ClientConnectionDebug
cd
ClientConnectionDebug
getMsgContext
getProperty
CLIENT_CONNECTION_DEBUG
if
cd
block
recordRequestStartTime
conn
axis2Req
getContext
setAttribute
CLIENT_CONNECTION_DEBUG
cd
try
getMetrics
reset
HttpContext
context
getContext
ContentOutputBuffer
outputBuffer
SharedOutputBuffer
getBufferSize
allocator
setOutputBuffer
outputBuffer
setAttribute
REQUEST_SOURCE_BUFFER
outputBuffer
setAttribute
AXIS2_HTTP_REQUEST
axis2Req
setAttribute
HTTP_CONNECTION
conn
setAttribute
HTTP_TARGET_HOST
getHttpHost
setAttribute
OUTGOING_MESSAGE_CONTEXT
getMsgContext
HttpRequest
request
getRequest
httpProcessor
process
request
context
if
getTimeout
block
setSocketTimeout
getTimeout
setAttribute
ENDPOINT_PREFIX
getEndpointURLPrefix
setAttribute
HTTP_REQ_METHOD
getRequestLine
getMethod
setAttribute
HTTP_REQUEST
request
setServerContextAttribute
REQ_DEPARTURE_TIME
currentTimeMillis
conn
submitRequest
request
catchClause
e
throw
e
catchClause
e
if
metrics
block
incrementFaultsSending
handleException
getMessage
e
conn
catchClause
e
if
metrics
block
incrementFaultsSending
handleException
getMessage
e
conn
synchronized
axis2Req
setReadyToStream
notifyAll
closed
conn
NHttpClientConnection
forget
conn
String
message
getErrorMessage
conn
if
isTraceEnabled
block
trace
message
Axis2HttpRequest
axis2Request
Axis2HttpRequest
getContext
getAttribute
AXIS2_HTTP_REQUEST
if
axis2Request
isCompleted
block
checkAxisRequestComplete
conn
CONNECTION_CLOSED
message
shutdownConnection
conn
block
if
isDebugEnabled
block
debug
getErrorMessage
conn
shutdownConnection
conn
HttpContext
context
getContext
removeAttribute
RESPONSE_SINK_BUFFER
removeAttribute
REQUEST_SOURCE_BUFFER
disconnected
timeout
conn
NHttpClientConnection
String
message
getErrorMessage
conn
if
isDebugEnabled
block
debug
message
Axis2HttpRequest
axis2Request
Axis2HttpRequest
getContext
getAttribute
AXIS2_HTTP_REQUEST
if
axis2Request
isCompleted
block
checkAxisRequestComplete
conn
CONNECTION_TIMEOUT
message
shutdownConnection
conn
block
if
isDebugEnabled
block
debug
getErrorMessage
conn
shutdownConnection
conn
HttpContext
context
getContext
removeAttribute
RESPONSE_SINK_BUFFER
removeAttribute
REQUEST_SOURCE_BUFFER
endOfInput
conn
NHttpClientConnection
closed
conn
exception
conn
NHttpClientConnection
e
Exception
if
e
HttpException
block
exception
conn
HttpException
e
if
e
IOException
block
exception
conn
IOException
e
block
error
getMessage
e
shutdownConnection
conn
getMessage
exception
conn
NHttpClientConnection
e
HttpException
String
message
getErrorMessage
getMessage
conn
error
message
e
checkAxisRequestComplete
conn
PROTOCOL_VIOLATION
message
e
shutdownConnection
conn
getMessage
exception
conn
NHttpClientConnection
e
IOException
String
message
getErrorMessage
getMessage
conn
if
toLowerCase
indexOf
block
warn
message
block
error
message
e
checkAxisRequestComplete
conn
SND_IO_ERROR_SENDING
message
e
shutdownConnection
conn
getMessage
getErrorMessage
String
message
String
conn
NHttpClientConnection
if
conn
conn
DefaultNHttpClientConnection
block
DefaultNHttpClientConnection
c
DefaultNHttpClientConnection
conn
Axis2HttpRequest
axis2Request
Axis2HttpRequest
getContext
getAttribute
AXIS2_HTTP_REQUEST
if
getRemoteAddress
block
return
message
getRemoteAddress
getHostAddress
getRemotePort
axis2Request
axis2Request
return
message
checkAxisRequestComplete
conn
NHttpClientConnection
errorCode
int
errorMessage
String
exceptionToRaise
Exception
Axis2HttpRequest
axis2Request
Axis2HttpRequest
getContext
getAttribute
AXIS2_HTTP_REQUEST
if
axis2Request
isCompleted
block
markRequestCompletedWithError
axis2Request
errorCode
errorMessage
exceptionToRaise
markRequestCompletedWithError
axis2Request
Axis2HttpRequest
errorCode
int
errorMessage
String
exceptionToRaise
Exception
setCompleted
if
errorCode
errorMessage
exceptionToRaise
block
return
MessageContext
mc
getMsgContext
if
getAxisOperation
getAxisOperation
getMessageReceiver
block
if
metrics
block
if
getLevel
LEVEL_FULL
block
if
errorCode
CONNECTION_TIMEOUT
block
incrementTimeoutsReceiving
mc
block
incrementFaultsSending
errorCode
mc
block
if
errorCode
CONNECTION_TIMEOUT
block
incrementTimeoutsReceiving
block
incrementFaultsSending
execute
Runnable
run
MessageReceiver
mr
getAxisOperation
getMessageReceiver
try
AxisFault
axisFault
exceptionToRaise
AxisFault
errorMessage
exceptionToRaise
AxisFault
errorMessage
MessageContext
nioFaultMessageContext
createFaultMessageContext
mc
axisFault
SOAPEnvelope
envelope
getEnvelope
if
isDebugEnabled
block
debug
getMessageID
setProperty
SENDING_FAULT
TRUE
setProperty
ERROR_MESSAGE
errorMessage
if
errorCode
block
setProperty
ERROR_CODE
errorCode
if
exceptionToRaise
block
setProperty
ERROR_DETAIL
toString
setProperty
ERROR_EXCEPTION
exceptionToRaise
getBody
getFault
getDetail
setText
toString
block
setProperty
ERROR_DETAIL
errorMessage
getBody
getFault
getDetail
setText
errorMessage
setProperty
CLIENT_CONNECTION_DEBUG
getProperty
CLIENT_CONNECTION_DEBUG
receive
nioFaultMessageContext
catchClause
af
error
af
inputReady
conn
NHttpClientConnection
decoder
ContentDecoder
HttpContext
context
getContext
HttpResponse
response
getHttpResponse
SharedInputBuffer
inBuf
SharedInputBuffer
getAttribute
RESPONSE_SINK_BUFFER
try
int
bytesRead
consumeContent
decoder
conn
if
metrics
bytesRead
block
if
getLevel
LEVEL_FULL
block
incrementBytesReceived
getMessageContext
conn
bytesRead
block
incrementBytesReceived
bytesRead
if
isCompleted
block
setServerContextAttribute
RES_ARRIVAL_TIME
currentTimeMillis
conn
ClientConnectionDebug
ccd
ClientConnectionDebug
getContext
getAttribute
CLIENT_CONNECTION_DEBUG
if
ccd
block
recordResponseCompletionTime
if
metrics
block
if
getLevel
LEVEL_FULL
block
MessageContext
mc
getMessageContext
conn
incrementMessagesReceived
mc
notifyReceivedMessageSize
mc
getMetrics
getReceivedBytesCount
notifySentMessageSize
mc
getMetrics
getSentBytesCount
reportResponseCode
mc
getStatusLine
getStatusCode
block
incrementMessagesReceived
notifyReceivedMessageSize
getMetrics
getReceivedBytesCount
notifySentMessageSize
getMetrics
getSentBytesCount
getMetrics
reset
if
getAttribute
DISCARD_ON_COMPLETE
block
try
forget
conn
shutdownConnection
conn
removeAttribute
RESPONSE_SINK_BUFFER
removeAttribute
REQUEST_SOURCE_BUFFER
catchClause
ignore
if
keepAlive
response
context
block
shutdownConnection
conn
removeAttribute
RESPONSE_SINK_BUFFER
removeAttribute
REQUEST_SOURCE_BUFFER
block
release
conn
catchClause
e
if
metrics
block
if
getLevel
LEVEL_FULL
block
incrementFaultsReceiving
SND_IO_ERROR_RECEIVING
getMessageContext
conn
block
incrementFaultsReceiving
handleException
getMessage
e
conn
outputReady
conn
NHttpClientConnection
encoder
ContentEncoder
HttpContext
context
getContext
SharedOutputBuffer
outBuf
SharedOutputBuffer
getAttribute
REQUEST_SOURCE_BUFFER
if
outBuf
return
try
int
bytesWritten
produceContent
encoder
conn
if
metrics
block
if
bytesWritten
block
if
getLevel
LEVEL_FULL
block
incrementBytesSent
getMessageContext
conn
bytesWritten
block
incrementBytesSent
bytesWritten
if
isCompleted
block
if
getLevel
LEVEL_FULL
block
incrementMessagesSent
getMessageContext
conn
block
incrementMessagesSent
if
isCompleted
block
ClientConnectionDebug
ccd
ClientConnectionDebug
getAttribute
CLIENT_CONNECTION_DEBUG
if
ccd
block
recordRequestCompletionTime
catchClause
e
if
metrics
block
if
getLevel
LEVEL_FULL
block
incrementFaultsSending
SND_IO_ERROR_SENDING
getMessageContext
conn
block
incrementFaultsSending
handleException
getMessage
e
conn
responseReceived
conn
NHttpClientConnection
setServerContextAttribute
RES_HEADER_ARRIVAL_TIME
currentTimeMillis
conn
HttpContext
context
getContext
HttpResponse
response
getHttpResponse
if
getStatusLine
getStatusCode
SC_CONTINUE
block
if
isDebugEnabled
block
debug
return
ClientConnectionDebug
ccd
ClientConnectionDebug
getContext
getAttribute
CLIENT_CONNECTION_DEBUG
if
ccd
block
recordResponseStartTime
getStatusLine
toString
Axis2HttpRequest
req
Axis2HttpRequest
getContext
getAttribute
AXIS2_HTTP_REQUEST
if
req
block
setCompleted
if
isDebugEnabled
block
debug
req
if
isSendingCompleted
block
getMsgContext
setProperty
ERROR_CODE
SEND_ABORT
SharedOutputBuffer
outputBuffer
SharedOutputBuffer
getContext
getAttribute
REQUEST_SOURCE_BUFFER
if
outputBuffer
block
shutdown
if
isDebugEnabled
block
debug
conn
getContext
getAttribute
HTTP_REQ_METHOD
setAttribute
DISCARD_ON_COMPLETE
TRUE
if
metrics
block
incrementFaultsSending
SEND_ABORT
getMsgContext
switch
getStatusLine
getStatusCode
case
SC_ACCEPTED
block
if
isDebugEnabled
block
debug
ContentInputBuffer
inputBuffer
SharedInputBuffer
allocator
setAttribute
RESPONSE_SINK_BUFFER
inputBuffer
MessageContext
outMsgCtx
MessageContext
getAttribute
OUTGOING_MESSAGE_CONTEXT
MessageReceiver
mr
getAxisOperation
getMessageReceiver
if
isPropertyTrue
IGNORE_SC_ACCEPTED
block
try
MessageContext
responseMsgCtx
getOperationContext
getMessageContext
MESSAGE_LABEL_IN
if
responseMsgCtx
getOptions
isUseSeparateListener
getOperationContext
isComplete
block
if
responseMsgCtx
getProperty
block
return
if
getOptions
isUseSeparateListener
block
setHeaders
context
response
outMsgCtx
responseMsgCtx
setProperty
HTTP_202_RECEIVED
receive
outMsgCtx
return
if
responseMsgCtx
block
return
setHeaders
context
response
outMsgCtx
responseMsgCtx
setServerSide
setDoingREST
isDoingREST
setProperty
TRANSPORT_IN
getProperty
TRANSPORT_IN
setTransportIn
getTransportIn
setTransportOut
getTransportOut
setAxisMessage
getAxisOperation
getMessage
MESSAGE_LABEL_IN_VALUE
setOperationContext
getOperationContext
setConfigurationContext
getConfigurationContext
setTo
if
isDoingREST
isSOAP11
block
setEnvelope
getSOAP12Factory
getDefaultEnvelope
block
setEnvelope
getSOAP11Factory
getDefaultEnvelope
setProperty
DISABLE_ADDRESSING_FOR_OUT_MESSAGES
TRUE
setProperty
SC_ACCEPTED
TRUE
receive
responseMsgCtx
catchClause
af
debug
return
case
SC_OK
block
processResponse
conn
context
response
return
case
SC_INTERNAL_SERVER_ERROR
block
if
warnOnHttp500
response
block
warn
getErrorMessage
getStatusLine
getReasonPhrase
conn
processResponse
conn
context
response
return
case
block
if
isDebugEnabled
block
debug
getErrorMessage
getStatusLine
getStatusCode
getStatusLine
getReasonPhrase
conn
Header
contentType
getFirstHeader
CONTENT_TYPE
if
contentType
block
if
getValue
indexOf
SOAP_11_CONTENT_TYPE
getValue
indexOf
SOAP_12_CONTENT_TYPE
block
if
isDebugEnabled
block
debug
if
getValue
indexOf
block
if
isDebugEnabled
block
debug
block
warn
getErrorMessage
getValue
getStatusLine
getStatusCode
getStatusLine
getReasonPhrase
conn
block
if
isDebugEnabled
block
debug
getErrorMessage
getStatusLine
getStatusCode
getStatusLine
getReasonPhrase
conn
processResponse
conn
context
response
setHeaders
context
HttpContext
response
HttpResponse
outMsgCtx
MessageContext
responseMsgCtx
MessageContext
Header
headers
getAllHeaders
if
headers
length
block
Map
String
String
headerMap
TreeMap
String
String
Comparator
String
compare
int
o1
String
o2
String
return
compareToIgnoreCase
o2
String
endpointURLPrefix
String
getAttribute
ENDPOINT_PREFIX
String
servicePrefix
String
getProperty
SERVICE_PREFIX
for
forControl
int
i
i
length
i
block
Header
header
headers
i
if
equals
getName
endpointURLPrefix
servicePrefix
block
try
URI
serviceURI
URI
servicePrefix
URI
endpointURI
URI
endpointURLPrefix
URI
locationURI
URI
getValue
if
getHost
equalsIgnoreCase
getHost
block
URI
newURI
URI
getScheme
getUserInfo
getHost
getPort
getPath
getQuery
getFragment
put
getName
toString
setProperty
SERVICE_PREFIX
getProperty
SERVICE_PREFIX
catchClause
e
error
getMessage
e
block
put
getName
getValue
setProperty
TRANSPORT_HEADERS
headerMap
warnOnHttp500
boolean
response
HttpResponse
if
warnOnHttp500
length
block
return
for
String
contentType
warnOnHttp500
block
if
contentType
trim
equals
block
return
Header
contentTypeHeader
getFirstHeader
CONTENT_TYPE
String
messageContentType
if
contentTypeHeader
block
messageContentType
block
messageContentType
getValue
if
messageContentType
trim
length
block
messageContentType
for
String
contentType
warnOnHttp500
block
if
startsWith
contentType
block
return
return
processResponse
conn
NHttpClientConnection
context
HttpContext
response
HttpResponse
ContentInputBuffer
inputBuffer
MessageContext
outMsgContext
MessageContext
getAttribute
OUTGOING_MESSAGE_CONTEXT
String
endptPrefix
String
getAttribute
ENDPOINT_PREFIX
String
requestMethod
String
getAttribute
HTTP_REQ_METHOD
int
statusCode
getStatusLine
getStatusCode
boolean
expectEntityBody
if
equals
requestMethod
equals
requestMethod
statusCode
SC_OK
statusCode
SC_NO_CONTENT
statusCode
SC_NOT_MODIFIED
statusCode
SC_RESET_CONTENT
block
expectEntityBody
if
expectEntityBody
block
inputBuffer
SharedInputBuffer
getBufferSize
allocator
setAttribute
RESPONSE_SINK_BUFFER
inputBuffer
BasicHttpEntity
entity
BasicHttpEntity
if
getStatusLine
getProtocolVersion
greaterEquals
HTTP_1_1
block
setChunked
setEntity
entity
setAttribute
HTTP_RESPONSE
response
block
resetInput
resetOutput
if
getAttribute
DISCARD_ON_COMPLETE
keepAlive
response
context
block
try
forget
conn
shutdownConnection
conn
removeAttribute
RESPONSE_SINK_BUFFER
removeAttribute
REQUEST_SOURCE_BUFFER
catchClause
ignore
block
release
conn
execute
ClientWorker
cfgCtx
inputBuffer
ContentInputStream
inputBuffer
response
outMsgContext
endptPrefix
execute
task
Runnable
execute
task
shutdownConnection
conn
NHttpClientConnection
isError
boolean
errorMsg
String
if
conn
HttpInetConnection
block
HttpInetConnection
inetConnection
HttpInetConnection
conn
if
isWarnEnabled
isError
isDebugEnabled
block
String
msg
getRemoteAddress
getRemotePort
getLocalAddress
getLocalPort
errorMsg
errorMsg
if
isError
block
warn
msg
block
debug
msg
if
countConnections
block
removeConnectionRecord
inetConnection
HttpContext
context
getContext
SharedOutputBuffer
outputBuffer
SharedOutputBuffer
getAttribute
REQUEST_SOURCE_BUFFER
if
outputBuffer
block
close
SharedInputBuffer
inputBuffer
SharedInputBuffer
getAttribute
RESPONSE_SINK_BUFFER
if
inputBuffer
block
close
try
shutdown
catchClause
ignore
removeAttribute
RESPONSE_SINK_BUFFER
removeAttribute
REQUEST_SOURCE_BUFFER
removeAttribute
CLIENT_CONNECTION_DEBUG
removeAttribute
CONNECTION_CREATION_TIME
removeConnectionRecord
inetConnection
HttpInetConnection
AtomicInteger
connections
get
getRemoteAddress
getHostName
getRemotePort
if
connections
block
connections
get
getRemoteAddress
getHostAddress
getRemotePort
if
connections
block
int
no
getAndDecrement
lock
try
if
no
block
if
remove
getRemoteAddress
getHostName
getRemotePort
block
block
remove
getRemoteAddress
getHostAddress
getRemotePort
unlock
recordConnection
conn
NHttpClientConnection
if
conn
HttpInetConnection
block
HttpInetConnection
inetConnection
HttpInetConnection
conn
AtomicInteger
connections
get
getRemoteAddress
getHostName
getRemotePort
if
connections
block
connections
get
getRemoteAddress
getHostAddress
getRemotePort
lock
try
if
connections
block
connections
AtomicInteger
if
getRemoteAddress
getHostName
block
put
getRemoteAddress
getHostName
getRemotePort
connections
block
put
getRemoteAddress
getHostAddress
getRemotePort
connections
unlock
getAndIncrement
getHttpProcessor
HttpProcessor
return
ImmutableHttpProcessor
RequestContent
RequestTargetHost
RequestConnControl
RequestUserAgent
RequestExpectContinue
getActiveCount
int
return
getActiveCount
getQueueSize
int
return
getQueueSize
stop
destroy
try
shutdown
catchClause
ignore
handleException
msg
String
e
Exception
conn
NHttpClientConnection
if
toLowerCase
indexOf
block
warn
msg
block
error
msg
e
if
conn
block
shutdownConnection
conn
msg
getMessageContext
MessageContext
conn
NHttpClientConnection
HttpContext
context
getContext
Axis2HttpRequest
axis2Req
Axis2HttpRequest
getAttribute
AXIS2_HTTP_REQUEST
if
axis2Req
block
return
getMsgContext
return
setServerContextAttribute
key
String
value
Object
conn
NHttpClientConnection
MessageContext
msgCtx
getMessageContext
conn
if
msgCtx
block
Object
outTransport
getProperty
OUT_TRANSPORT_INFO
if
outTransport
outTransport
ServerWorker
block
HttpContext
context
ServerWorker
outTransport
setAttribute
key
value
NHttpClientEventHandler
