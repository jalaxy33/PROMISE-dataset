TargetHandler
Log
log
getLog
TargetHandler
DeliveryAgent
deliveryAgent
TargetConfiguration
targetConfiguration
TargetErrorHandler
targetErrorHandler
PassThroughTransportMetricsCollector
metrics
TargetHandler
deliveryAgent
DeliveryAgent
configuration
TargetConfiguration
targetConfiguration
configuration
deliveryAgent
deliveryAgent
targetErrorHandler
TargetErrorHandler
targetConfiguration
metrics
getMetrics
connected
conn
NHttpClientConnection
o
Object
assert
o
HostConnections
HostConnections
pool
HostConnections
o
getContext
setAttribute
CONNECTION_POOL
pool
create
conn
REQUEST_READY
targetConfiguration
getConnections
addConnection
conn
connected
getHost
getPort
conn
getContext
setAttribute
REQ_DEPARTURE_TIME
currentTimeMillis
connected
requestReady
conn
NHttpClientConnection
ProtocolState
connState
try
connState
getState
conn
if
connState
REQUEST_DONE
connState
RESPONSE_BODY
block
return
if
connState
REQUEST_READY
block
handleInvalidState
conn
return
TargetRequest
request
getRequest
conn
if
request
block
start
conn
incrementMessagesSent
getContext
setAttribute
REQ_DEPARTURE_TIME
currentTimeMillis
catchClause
e
logIOException
conn
e
updateState
conn
CLOSED
getConnections
shutdownConnection
conn
MessageContext
requestMsgCtx
get
getRequestMsgCtx
conn
if
requestMsgCtx
block
handleError
requestMsgCtx
SND_IO_ERROR
connState
catchClause
e
error
getMessage
e
updateState
conn
CLOSED
getConnections
shutdownConnection
conn
MessageContext
requestMsgCtx
get
getRequestMsgCtx
conn
if
requestMsgCtx
block
handleError
requestMsgCtx
SND_HTTP_ERROR
connState
outputReady
conn
NHttpClientConnection
encoder
ContentEncoder
ProtocolState
connState
try
connState
getState
conn
if
connState
REQUEST_HEAD
connState
REQUEST_DONE
block
handleInvalidState
conn
return
TargetRequest
request
getRequest
conn
if
hasEntityBody
block
int
bytesWritten
write
conn
encoder
incrementBytesSent
bytesWritten
catchClause
ex
logIOException
conn
ex
updateState
conn
CLOSING
getConnections
shutdownConnection
conn
informWriterError
conn
MessageContext
requestMsgCtx
get
getRequestMsgCtx
conn
if
requestMsgCtx
block
handleError
requestMsgCtx
SND_HTTP_ERROR
connState
catchClause
e
error
e
updateState
conn
CLOSED
getConnections
shutdownConnection
conn
informWriterError
conn
MessageContext
requestMsgCtx
get
getRequestMsgCtx
conn
if
requestMsgCtx
block
handleError
requestMsgCtx
SND_HTTP_ERROR
connState
responseReceived
conn
NHttpClientConnection
ProtocolState
connState
try
getContext
setAttribute
RES_HEADER_ARRIVAL_TIME
currentTimeMillis
connState
getState
conn
if
connState
REQUEST_DONE
block
handleInvalidState
conn
return
HttpResponse
response
getHttpResponse
TargetRequest
targetRequest
getRequest
conn
int
statusCode
getStatusLine
getStatusCode
if
statusCode
SC_OK
block
if
isDebugEnabled
block
debug
return
String
method
if
targetRequest
block
method
getMethod
boolean
canResponseHaveBody
isResponseHaveBodyExpected
method
response
TargetResponse
targetResponse
TargetResponse
targetConfiguration
response
conn
canResponseHaveBody
setResponse
conn
targetResponse
start
conn
MessageContext
requestMsgContext
get
getRequestMsgCtx
conn
if
statusCode
SC_ACCEPTED
handle202
requestMsgContext
block
return
getWorkerPool
execute
ClientWorker
targetConfiguration
requestMsgContext
targetResponse
incrementMessagesReceived
NHttpServerConnection
sourceConn
NHttpServerConnection
getProperty
PASS_THROUGH_SOURCE_CONNECTION
if
sourceConn
block
getContext
setAttribute
RES_HEADER_ARRIVAL_TIME
getContext
getAttribute
RES_HEADER_ARRIVAL_TIME
getContext
setAttribute
REQ_DEPARTURE_TIME
getContext
getAttribute
REQ_DEPARTURE_TIME
catchClause
ex
error
getMessage
ex
informReaderError
conn
updateState
conn
CLOSED
getConnections
shutdownConnection
conn
handle202
boolean
requestMsgContext
MessageContext
if
isPropertyTrue
IGNORE_SC_ACCEPTED
block
return
MessageReceiver
mr
getAxisOperation
getMessageReceiver
MessageContext
responseMsgCtx
getOperationContext
getMessageContext
MESSAGE_LABEL_IN
if
responseMsgCtx
getOptions
isUseSeparateListener
block
setProperty
HTTP_202_RECEIVED
receive
requestMsgContext
return
return
inputReady
conn
NHttpClientConnection
decoder
ContentDecoder
ProtocolState
connState
try
connState
getState
conn
if
compareTo
RESPONSE_HEAD
block
return
if
connState
RESPONSE_HEAD
connState
RESPONSE_BODY
block
handleInvalidState
conn
return
updateState
conn
RESPONSE_BODY
TargetResponse
response
getResponse
conn
if
response
block
int
responseRead
read
conn
decoder
incrementBytesReceived
responseRead
catchClause
e
logIOException
conn
e
informReaderError
conn
updateState
conn
CLOSED
getConnections
shutdownConnection
conn
catchClause
ex
error
getMessage
ex
informReaderError
conn
updateState
conn
CLOSED
getConnections
shutdownConnection
conn
closed
conn
NHttpClientConnection
ProtocolState
state
getState
conn
boolean
sendFault
if
state
REQUEST_READY
state
RESPONSE_DONE
block
if
isDebugEnabled
block
debug
if
state
REQUEST_HEAD
state
REQUEST_BODY
block
informWriterError
conn
warn
sendFault
if
state
RESPONSE_HEAD
state
RESPONSE_BODY
block
informReaderError
conn
warn
sendFault
if
state
REQUEST_DONE
block
informWriterError
conn
warn
sendFault
if
sendFault
block
MessageContext
requestMsgCtx
get
getRequestMsgCtx
conn
if
requestMsgCtx
block
handleError
requestMsgCtx
CONNECTION_CLOSED
state
disconnected
if
state
CLOSED
block
updateState
conn
CLOSED
getConnections
shutdownConnection
conn
exception
conn
NHttpClientConnection
e
IOException
ProtocolState
state
getState
conn
logIOException
conn
e
MessageContext
requestMsgCtx
get
getRequestMsgCtx
conn
if
requestMsgCtx
block
handleError
requestMsgCtx
SND_IO_ERROR
e
state
updateState
conn
CLOSING
getConnections
shutdownConnection
conn
logIOException
conn
NHttpClientConnection
e
IOException
String
message
getErrorMessage
getMessage
conn
if
e
ConnectionClosedException
getMessage
getMessage
toLowerCase
contains
getMessage
toLowerCase
contains
block
if
isDebugEnabled
block
debug
getMessage
if
getMessage
block
String
msg
getMessage
toLowerCase
if
contains
block
warn
getMessage
block
error
getMessage
e
block
error
message
e
exception
conn
NHttpClientConnection
e
HttpException
ProtocolState
state
getState
conn
String
message
getErrorMessage
getMessage
conn
error
message
e
MessageContext
requestMsgCtx
get
getRequestMsgCtx
conn
if
requestMsgCtx
block
handleError
requestMsgCtx
PROTOCOL_VIOLATION
state
updateState
conn
CLOSED
getConnections
shutdownConnection
conn
timeout
conn
NHttpClientConnection
ProtocolState
state
getState
conn
String
message
getErrorMessage
conn
if
isDebugEnabled
block
debug
message
if
state
state
REQUEST_READY
state
RESPONSE_DONE
block
if
isDebugEnabled
block
debug
getErrorMessage
conn
if
state
block
if
state
REQUEST_BODY
block
incrementTimeoutsSending
informWriterError
conn
if
state
RESPONSE_BODY
state
REQUEST_HEAD
block
incrementTimeoutsReceiving
informReaderError
conn
if
compareTo
REQUEST_DONE
block
MessageContext
requestMsgCtx
get
getRequestMsgCtx
conn
warn
state
if
requestMsgCtx
block
handleError
requestMsgCtx
CONNECTION_TIMEOUT
state
updateState
conn
CLOSED
getConnections
shutdownConnection
conn
endOfInput
conn
NHttpClientConnection
ProtocolState
state
getState
conn
boolean
sendFault
if
state
REQUEST_READY
state
RESPONSE_DONE
block
if
isDebugEnabled
block
debug
if
state
REQUEST_HEAD
state
REQUEST_BODY
block
informWriterError
conn
warn
sendFault
if
state
RESPONSE_HEAD
state
RESPONSE_BODY
block
informReaderError
conn
warn
sendFault
if
state
REQUEST_DONE
block
informWriterError
conn
warn
sendFault
if
sendFault
block
MessageContext
requestMsgCtx
get
getRequestMsgCtx
conn
if
requestMsgCtx
block
handleError
requestMsgCtx
CONNECTION_CLOSED
state
updateState
conn
CLOSED
getConnections
shutdownConnection
conn
exception
conn
NHttpClientConnection
e
Exception
if
e
HttpException
block
exception
conn
HttpException
e
if
e
IOException
block
exception
conn
IOException
e
block
error
e
ProtocolState
state
getState
conn
MessageContext
requestMsgCtx
get
getRequestMsgCtx
conn
if
requestMsgCtx
block
handleError
requestMsgCtx
SND_IO_ERROR
e
state
updateState
conn
CLOSING
getConnections
shutdownConnection
conn
getTargetConfiguration
TargetConfiguration
return
targetConfiguration
isResponseHaveBodyExpected
boolean
method
String
response
HttpResponse
if
equalsIgnoreCase
method
block
return
int
status
getStatusLine
getStatusCode
return
status
SC_OK
status
SC_NO_CONTENT
status
SC_NOT_MODIFIED
status
SC_RESET_CONTENT
getErrorMessage
String
message
String
conn
NHttpClientConnection
if
conn
conn
DefaultNHttpClientConnection
block
DefaultNHttpClientConnection
c
DefaultNHttpClientConnection
conn
if
getRemoteAddress
block
return
message
getRemoteAddress
getHostAddress
getRemotePort
return
message
handleInvalidState
conn
NHttpClientConnection
action
String
ProtocolState
state
getState
conn
warn
action
getState
conn
MessageContext
requestMsgCtx
get
getRequestMsgCtx
conn
updateState
conn
CLOSED
getConnections
shutdownConnection
conn
if
requestMsgCtx
block
handleError
requestMsgCtx
SND_INVALID_STATE
state
informReaderError
conn
NHttpClientConnection
Pipe
reader
get
getReader
conn
incrementFaultsReceiving
if
reader
block
producerError
informWriterError
conn
NHttpClientConnection
Pipe
writer
get
getWriter
conn
incrementFaultsReceiving
if
writer
block
consumerError
NHttpClientEventHandler
