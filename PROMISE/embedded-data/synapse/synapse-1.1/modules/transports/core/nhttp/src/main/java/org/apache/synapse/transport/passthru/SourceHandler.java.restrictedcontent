SourceHandler
Log
log
getLog
SourceHandler
SourceConfiguration
sourceConfiguration
PassThroughTransportMetricsCollector
metrics
LatencyView
latencyView
LatencyView
s2sLatencyView
SourceHandler
sourceConfiguration
SourceConfiguration
sourceConfiguration
sourceConfiguration
metrics
getMetrics
try
if
isSsl
block
latencyView
LatencyView
isSsl
block
s2sLatencyView
LatencyView
isSsl
catchClause
e
error
e
connected
conn
NHttpServerConnection
getSourceConnections
addConnection
conn
create
conn
REQUEST_READY
sourceConfiguration
connected
requestReceived
conn
NHttpServerConnection
try
getContext
setAttribute
REQ_ARRIVAL_TIME
currentTimeMillis
if
assertState
conn
REQUEST_READY
assertState
conn
GET_REQUEST_COMPLETE
block
handleInvalidState
conn
return
getSourceConnections
useConnection
conn
updateState
conn
REQUEST_HEAD
SourceRequest
request
SourceRequest
sourceConfiguration
getHttpRequest
conn
setRequest
conn
request
start
conn
incrementMessagesReceived
String
method
getRequest
getRequest
getRequestLine
getMethod
toUpperCase
if
equals
method
block
HttpContext
context
getConnection
getContext
ContentOutputBuffer
outputBuffer
SimpleOutputBuffer
INSTANCE
setAttribute
PASS_THROUGH_RESPONSE_SOURCE_BUFFER
outputBuffer
getWorkerPool
execute
ServerWorker
request
sourceConfiguration
catchClause
e
error
e
informReaderError
conn
updateState
conn
CLOSED
getSourceConnections
shutDownConnection
conn
catchClause
e
logIOException
e
informReaderError
conn
updateState
conn
CLOSED
getSourceConnections
shutDownConnection
conn
inputReady
conn
NHttpServerConnection
decoder
ContentDecoder
try
ProtocolState
protocolState
getState
conn
if
protocolState
REQUEST_HEAD
protocolState
REQUEST_BODY
block
handleInvalidState
conn
return
updateState
conn
REQUEST_BODY
SourceRequest
request
getRequest
conn
int
readBytes
read
conn
decoder
if
readBytes
block
incrementBytesReceived
readBytes
catchClause
e
logIOException
e
informReaderError
conn
updateState
conn
CLOSED
getSourceConnections
shutDownConnection
conn
responseReady
conn
NHttpServerConnection
try
ProtocolState
protocolState
getState
conn
if
compareTo
REQUEST_DONE
block
return
if
compareTo
CLOSING
block
return
if
protocolState
REQUEST_DONE
block
handleInvalidState
conn
return
SourceResponse
response
getResponse
conn
if
response
block
start
conn
incrementMessagesSent
catchClause
e
logIOException
e
informWriterError
conn
updateState
conn
CLOSING
getSourceConnections
shutDownConnection
conn
catchClause
e
error
getMessage
e
informWriterError
conn
updateState
conn
CLOSING
getSourceConnections
shutDownConnection
conn
outputReady
conn
NHttpServerConnection
encoder
ContentEncoder
try
ProtocolState
protocolState
getState
conn
if
protocolState
GET_REQUEST_COMPLETE
block
SimpleOutputBuffer
outBuf
SimpleOutputBuffer
getContext
getAttribute
PASS_THROUGH_RESPONSE_SOURCE_BUFFER
synchronized
getContext
int
bytesWritten
produceContent
encoder
if
metrics
bytesWritten
block
incrementBytesSent
bytesWritten
requestInput
if
hasData
isCompleted
block
finishUsingSourceConnection
getHttpResponse
conn
getSourceConnections
return
if
protocolState
RESPONSE_HEAD
protocolState
RESPONSE_BODY
block
warn
protocolState
handleInvalidState
conn
return
updateState
conn
RESPONSE_BODY
SourceResponse
response
getResponse
conn
int
bytesSent
write
conn
encoder
if
isCompleted
block
HttpContext
context
getContext
if
getAttribute
REQ_ARRIVAL_TIME
getAttribute
REQ_DEPARTURE_TIME
getAttribute
RES_HEADER_ARRIVAL_TIME
block
if
latencyView
block
notifyTimes
Long
getAttribute
REQ_ARRIVAL_TIME
Long
getAttribute
REQ_DEPARTURE_TIME
Long
getAttribute
RES_HEADER_ARRIVAL_TIME
currentTimeMillis
if
s2sLatencyView
block
notifyTimes
Long
getAttribute
REQ_ARRIVAL_TIME
Long
getAttribute
REQ_DEPARTURE_TIME
Long
getAttribute
RES_HEADER_ARRIVAL_TIME
currentTimeMillis
removeAttribute
REQ_ARRIVAL_TIME
removeAttribute
REQ_DEPARTURE_TIME
removeAttribute
RES_HEADER_ARRIVAL_TIME
incrementBytesSent
bytesSent
catchClause
e
logIOException
e
informWriterError
conn
updateState
conn
CLOSING
getSourceConnections
shutDownConnection
conn
endOfInput
conn
NHttpServerConnection
ProtocolState
state
getState
conn
boolean
isError
if
state
REQUEST_READY
state
RESPONSE_DONE
block
if
isDebugEnabled
block
debug
conn
if
state
REQUEST_BODY
state
REQUEST_HEAD
block
isError
informReaderError
conn
warn
conn
if
state
RESPONSE_BODY
state
RESPONSE_HEAD
block
isError
informWriterError
conn
warn
conn
if
state
REQUEST_DONE
block
isError
warn
conn
updateState
conn
CLOSED
getSourceConnections
shutDownConnection
conn
isError
exception
conn
NHttpServerConnection
e
Exception
if
e
HttpException
block
exception
conn
HttpException
e
if
e
IOException
block
exception
conn
IOException
e
block
error
e
incrementFaultsReceiving
ProtocolState
state
getState
conn
if
state
REQUEST_BODY
state
REQUEST_HEAD
block
informReaderError
conn
if
state
RESPONSE_BODY
state
RESPONSE_HEAD
block
informWriterError
conn
if
state
REQUEST_DONE
block
informWriterError
conn
if
state
RESPONSE_DONE
block
informWriterError
conn
updateState
conn
CLOSED
getSourceConnections
shutDownConnection
conn
exception
conn
NHttpServerConnection
e
IOException
logIOException
e
incrementFaultsReceiving
ProtocolState
state
getState
conn
if
state
REQUEST_BODY
state
REQUEST_HEAD
block
informReaderError
conn
if
state
RESPONSE_BODY
state
RESPONSE_HEAD
block
informWriterError
conn
if
state
REQUEST_DONE
block
informWriterError
conn
if
state
RESPONSE_DONE
block
informWriterError
conn
updateState
conn
CLOSED
getSourceConnections
shutDownConnection
conn
logIOException
e
IOException
if
e
block
return
if
e
ConnectionClosedException
getMessage
getMessage
toLowerCase
contains
getMessage
toLowerCase
contains
block
if
isDebugEnabled
block
debug
getMessage
if
getMessage
block
String
msg
getMessage
toLowerCase
if
contains
block
warn
getMessage
block
error
getMessage
e
incrementFaultsReceiving
block
error
getClass
getName
e
incrementFaultsReceiving
exception
conn
NHttpServerConnection
e
HttpException
if
isDebugEnabled
block
debug
e
if
isResponseSubmitted
block
getSourceConnections
shutDownConnection
conn
return
HttpContext
httpContext
getContext
HttpResponse
response
BasicHttpResponse
HTTP_1_1
SC_BAD_REQUEST
addHeader
CONN_DIRECTIVE
CONN_CLOSE
setAttribute
HTTP_CONNECTION
conn
setAttribute
HTTP_REQUEST
setAttribute
HTTP_RESPONSE
response
try
getHttpProcessor
process
response
httpContext
submitResponse
response
catchClause
ex
error
ex
updateState
conn
CLOSED
getSourceConnections
shutDownConnection
conn
timeout
conn
NHttpServerConnection
ProtocolState
state
getState
conn
if
state
REQUEST_READY
state
RESPONSE_DONE
block
if
isDebugEnabled
block
debug
conn
if
state
REQUEST_BODY
state
REQUEST_HEAD
block
incrementTimeoutsReceiving
informReaderError
conn
warn
conn
if
state
RESPONSE_BODY
state
RESPONSE_HEAD
block
informWriterError
conn
warn
conn
if
state
REQUEST_DONE
block
warn
conn
updateState
conn
CLOSED
getSourceConnections
shutDownConnection
conn
closed
conn
NHttpServerConnection
ProtocolState
state
getState
conn
boolean
isFault
if
state
REQUEST_READY
state
RESPONSE_DONE
block
if
isDebugEnabled
block
debug
conn
if
state
REQUEST_BODY
state
REQUEST_HEAD
block
isFault
informReaderError
conn
warn
conn
if
state
RESPONSE_BODY
state
RESPONSE_HEAD
block
isFault
informWriterError
conn
warn
conn
if
state
REQUEST_DONE
block
isFault
warn
conn
disconnected
if
state
CLOSED
block
updateState
conn
CLOSED
getSourceConnections
shutDownConnection
conn
isFault
handleInvalidState
conn
NHttpServerConnection
action
String
warn
action
getState
conn
updateState
conn
CLOSED
getSourceConnections
shutDownConnection
conn
informReaderError
conn
NHttpServerConnection
Pipe
reader
get
getReader
conn
incrementFaultsReceiving
if
reader
block
producerError
informWriterError
conn
NHttpServerConnection
Pipe
writer
get
getWriter
conn
incrementFaultsSending
if
writer
block
consumerError
handleException
msg
String
e
Exception
conn
NHttpServerConnection
String
errorMessage
if
conn
block
errorMessage
conn
msg
block
errorMessage
msg
error
errorMessage
e
commitResponseHideExceptions
conn
NHttpServerConnection
response
HttpResponse
try
suspendInput
getHttpProcessor
process
response
getContext
submitResponse
response
catchClause
e
handleException
getMessage
e
conn
catchClause
e
handleException
getMessage
e
conn
NHttpServerEventHandler
