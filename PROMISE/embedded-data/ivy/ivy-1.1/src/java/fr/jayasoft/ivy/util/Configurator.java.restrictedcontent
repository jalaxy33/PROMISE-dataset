Configurator
ObjectDescriptor
Object
_obj
String
_objName
Map
_createMethods
HashMap
Map
_addMethods
HashMap
Map
_addConfiguredMethods
HashMap
Map
_setMethods
HashMap
Map
_typeAddMethods
HashMap
Map
_typeAddConfiguredMethods
HashMap
ObjectDescriptor
object
Object
objName
String
_obj
object
_objName
objName
Method
methods
getClass
getMethods
for
forControl
int
i
i
length
i
block
Method
m
methods
i
if
getName
startsWith
getParameterTypes
length
equals
getReturnType
block
String
name
uncapitalize
getName
substring
length
if
length
block
continue
addCreateMethod
name
m
if
getName
startsWith
getParameterTypes
length
equals
getReturnType
block
String
name
uncapitalize
getName
substring
length
if
length
block
addAddConfiguredMethod
m
addAddConfiguredMethod
name
m
if
getName
startsWith
getName
startsWith
getParameterTypes
length
equals
getReturnType
block
String
name
uncapitalize
getName
substring
length
if
length
block
addAddMethod
m
addAddMethod
name
m
if
getName
startsWith
getParameterTypes
length
equals
getReturnType
block
String
name
uncapitalize
getName
substring
length
if
length
block
continue
addSetMethod
name
m
addCreateMethod
name
String
m
Method
put
name
m
addAddMethod
name
String
m
Method
put
name
m
addAddConfiguredMethod
name
String
m
Method
put
name
m
addAddMethod
m
Method
put
getParameterTypes
m
addAddConfiguredMethod
m
Method
put
getParameterTypes
m
addSetMethod
name
String
m
Method
put
name
m
getObject
Object
return
_obj
getCreateMethod
Method
name
String
return
Method
get
name
getAddMethod
Method
name
String
return
Method
get
name
getAddConfiguredMethod
Method
name
String
return
Method
get
name
getAddMethod
Method
type
Class
return
getTypeMatchingMethod
type
_typeAddMethods
getAddConfiguredMethod
Method
type
Class
return
getTypeMatchingMethod
type
_typeAddConfiguredMethods
getTypeMatchingMethod
Method
type
Class
typeMethods
Map
Method
m
Method
get
type
if
m
block
return
m
for
forControl
Iterator
iter
keySet
iterator
hasNext
block
Class
clss
Class
next
if
isAssignableFrom
type
block
return
Method
get
clss
return
getSetMethod
Method
name
String
return
Method
get
name
getObjectName
String
return
_objName
Map
_typedefs
HashMap
Stack
_objectStack
Stack
List
TRUE_VALUES
asList
String
typeDef
name
String
className
String
typeDef
name
forName
className
typeDef
name
String
clazz
Class
put
name
clazz
setRoot
root
Object
if
root
block
throw
NullPointerException
clear
setCurrent
root
clear
clear
setCurrent
object
Object
name
String
push
ObjectDescriptor
object
name
startCreateChild
Object
name
String
if
isEmpty
block
throw
IllegalStateException
ObjectDescriptor
parentOD
ObjectDescriptor
peek
Object
parent
getObject
Object
child
Class
childClass
Class
get
name
Method
addChild
try
if
childClass
block
addChild
getAddMethod
childClass
if
addChild
block
child
newInstance
invoke
parent
Object
child
setCurrent
child
name
return
child
addChild
getAddConfiguredMethod
childClass
if
addChild
block
child
newInstance
setCurrent
child
name
return
child
block
addChild
getCreateMethod
name
if
addChild
block
child
invoke
parent
Object
setCurrent
child
name
return
child
addChild
getAddMethod
name
if
addChild
block
childClass
getParameterTypes
child
newInstance
invoke
parent
Object
child
setCurrent
child
name
return
child
addChild
getAddConfiguredMethod
name
if
addChild
block
childClass
getParameterTypes
child
newInstance
setCurrent
child
name
return
child
catchClause
ex
throw
IllegalArgumentException
childClass
name
getClass
catchClause
ex
IllegalArgumentException
iae
IllegalArgumentException
name
getClass
initCause
ex
throw
iae
throw
IllegalArgumentException
name
getClass
setAttribute
attributeName
String
value
String
if
isEmpty
block
throw
IllegalStateException
ObjectDescriptor
od
ObjectDescriptor
peek
Method
m
getSetMethod
attributeName
if
m
block
throw
IllegalArgumentException
attributeName
getObject
getClass
Object
convertedValue
Class
paramClass
getParameterTypes
try
if
equals
String
block
convertedValue
value
if
equals
Boolean
equals
boolean
block
convertedValue
valueOf
contains
value
if
equals
Character
equals
char
block
convertedValue
Character
length
charAt
if
equals
Short
equals
short
block
convertedValue
valueOf
value
if
equals
Integer
equals
int
block
convertedValue
valueOf
value
if
equals
Long
equals
long
block
convertedValue
valueOf
value
if
equals
Class
block
convertedValue
forName
value
block
convertedValue
getConstructor
newInstance
Object
value
Class
String
catchClause
ex
IllegalArgumentException
iae
IllegalArgumentException
value
paramClass
attributeName
getObject
getClass
initCause
ex
throw
iae
try
invoke
getObject
Object
convertedValue
catchClause
ex
IllegalArgumentException
iae
IllegalArgumentException
attributeName
convertedValue
getObject
getClass
initCause
ex
throw
iae
addText
text
String
if
isEmpty
block
throw
IllegalStateException
ObjectDescriptor
od
ObjectDescriptor
peek
try
getObject
getClass
getMethod
Class
String
invoke
getObject
Object
text
catchClause
ex
IllegalArgumentException
iae
IllegalArgumentException
getObject
getClass
initCause
ex
throw
iae
endCreateChild
Object
if
isEmpty
block
throw
IllegalStateException
ObjectDescriptor
od
ObjectDescriptor
pop
if
isEmpty
block
push
od
throw
IllegalStateException
ObjectDescriptor
parentOD
ObjectDescriptor
peek
String
name
getObjectName
Class
childClass
Class
get
name
Method
m
if
childClass
block
m
getAddConfiguredMethod
childClass
block
m
getAddConfiguredMethod
name
try
if
m
block
invoke
getObject
Object
getObject
return
getObject
catchClause
ex
IllegalArgumentException
iae
IllegalArgumentException
name
getObject
getClass
initCause
ex
throw
iae
getCurrent
Object
return
isEmpty
ObjectDescriptor
peek
getDepth
int
return
size
