SortTest
DefaultModuleDescriptor
md1
DefaultModuleDescriptor
md2
DefaultModuleDescriptor
md3
DefaultModuleDescriptor
md4
SortEngine
sortEngine
SimpleSortEngineSettings
settings
SilentNonMatchingVersionReporter
nonMatchReporter
setUp
setUp
md1
createModuleDescriptorToSort
md2
createModuleDescriptorToSort
md3
createModuleDescriptorToSort
md4
createModuleDescriptorToSort
settings
SimpleSortEngineSettings
setCircularDependencyStrategy
getInstance
setVersionMatcher
ExactVersionMatcher
sortEngine
SortEngine
settings
nonMatchReporter
SilentNonMatchingVersionReporter
testSort
addDependency
md2
addDependency
md3
addDependency
md4
DefaultModuleDescriptor
expectedOrder
DefaultModuleDescriptor
md1
md2
md3
md4
Collection
permutations
getAllLists
md1
md3
md2
md4
for
forControl
Iterator
it
iterator
hasNext
block
List
toSort
List
next
assertSorted
expectedOrder
sortModuleDescriptors
toSort
nonMatchReporter
testCircularDependency
addDependency
md1
addDependency
md2
addDependency
md3
addDependency
md4
DefaultModuleDescriptor
possibleOrder
DefaultModuleDescriptor
md2
md3
md4
md1
md3
md4
md1
md2
md4
md1
md2
md3
md1
md2
md3
md4
Collection
permutations
getAllLists
md1
md3
md2
md4
for
forControl
Iterator
it
iterator
hasNext
block
List
toSort
List
next
assertSorted
possibleOrder
sortModuleDescriptors
toSort
nonMatchReporter
testCircularDependency2
addDependency
md2
addDependency
md2
addDependency
md3
addDependency
md4
DefaultModuleDescriptor
possibleOrder
DefaultModuleDescriptor
md1
md3
md2
md4
md1
md2
md3
md4
Collection
permutations
getAllLists
md1
md3
md2
md4
for
forControl
Iterator
it
iterator
hasNext
block
List
toSort
List
next
assertSorted
possibleOrder
sortModuleDescriptors
toSort
nonMatchReporter
testCircularDependencyInfiniteLoop
addDependency
md1
addDependency
md1
addDependency
md2
addDependency
md3
addDependency
md4
addDependency
md4
List
toSort
asList
Object
md1
md2
md3
md4
sortModuleDescriptors
toSort
nonMatchReporter
testCircularDependencyReport
addDependency
md2
addDependency
md2
addDependency
md3
addDependency
md4
CircularDependencyReporterMock
int
nbOfCall
getName
String
return
handleCircularDependency
mrids
ModuleRevisionId
assertEquals
nbOfCall
String
assertMsg
formatMessage
mrids
int
expectedLength
assertEquals
assertMsg
expectedLength
length
if
mrids
equals
getModuleRevisionId
block
assertEquals
assertMsg
getModuleRevisionId
mrids
assertEquals
assertMsg
getModuleRevisionId
mrids
block
assertEquals
assertMsg
getModuleRevisionId
mrids
assertEquals
assertMsg
getModuleRevisionId
mrids
assertEquals
assertMsg
getModuleRevisionId
mrids
nbOfCall
validate
assertEquals
nbOfCall
CircularDependencyStrategy
CircularDependencyReporterMock
circularDepReportMock
CircularDependencyReporterMock
setCircularDependencyStrategy
circularDepReportMock
List
toSort
asList
ModuleDescriptor
md4
md3
md2
md1
sortModuleDescriptors
toSort
nonMatchReporter
validate
testLatestIntegration
addDependency
md2
addDependency
md3
addDependency
md4
setVersionMatcher
LatestVersionMatcher
DefaultModuleDescriptor
expectedOrder
DefaultModuleDescriptor
md1
md2
md3
md4
Collection
permutations
getAllLists
md1
md3
md2
md4
for
forControl
Iterator
it
iterator
hasNext
block
List
toSort
List
next
assertSorted
expectedOrder
sortModuleDescriptors
toSort
nonMatchReporter
testDifferentVersionNotConsidered
addDependency
md1
addDependency
md2
addDependency
md3
addDependency
md4
DefaultModuleDescriptor
possibleOrder
DefaultModuleDescriptor
md1
md2
md3
md4
Collection
permutations
getAllLists
md1
md3
md2
md4
for
forControl
Iterator
it
iterator
hasNext
block
List
toSort
List
next
assertSorted
possibleOrder
sortModuleDescriptors
toSort
nonMatchReporter
testDifferentVersionWarning
DependencyDescriptor
md4OtherDep
addDependency
md1
addDependency
md2
addDependency
md3
addDependency
md4
NonMatchingVersionReporterMock
int
nbOfCall
reportNonMatchingVersion
descriptor
DependencyDescriptor
md
ModuleDescriptor
assertEquals
nbOfCall
assertEquals
md4OtherDep
descriptor
assertEquals
md4
md
nbOfCall
validate
assertEquals
nbOfCall
NonMatchingVersionReporter
NonMatchingVersionReporterMock
nonMatchingVersionReporterMock
NonMatchingVersionReporterMock
List
toSort
asList
ModuleDescriptor
md4
md3
md2
md1
sortModuleDescriptors
toSort
nonMatchingVersionReporterMock
validate
sortModuleDescriptors
List
toSort
List
nonMatchingVersionReporter
NonMatchingVersionReporter
return
sortModuleDescriptors
toSort
setNonMatchingVersionReporter
nonMatchingVersionReporter
SortOptions
createModuleDescriptorToSort
DefaultModuleDescriptor
moduleName
String
revision
String
ModuleRevisionId
mrid
newInstance
moduleName
revision
return
DefaultModuleDescriptor
mrid
Date
addDependency
DependencyDescriptor
parent
DefaultModuleDescriptor
moduleName
String
revision
String
ModuleRevisionId
mrid
newInstance
moduleName
revision
DependencyDescriptor
depDescr
DefaultDependencyDescriptor
parent
mrid
addDependency
depDescr
return
depDescr
assertSorted
listOfPossibleSort
DefaultModuleDescriptor
sorted
List
for
forControl
int
i
i
length
i
block
DefaultModuleDescriptor
expectedList
listOfPossibleSort
i
assertEquals
length
size
boolean
isExpected
for
forControl
int
j
j
length
j
block
if
expectedList
j
equals
get
j
block
isExpected
break
if
isExpected
block
return
StringBuffer
errorMessage
StringBuffer
append
for
forControl
int
i
i
size
i
block
if
i
block
append
append
DefaultModuleDescriptor
get
i
append
for
forControl
int
i
i
length
i
block
DefaultModuleDescriptor
expectedList
listOfPossibleSort
i
if
i
block
append
append
for
forControl
int
j
j
length
j
block
if
j
block
append
append
expectedList
j
getModuleRevisionId
append
fail
toString
getAllLists
Collection
a
Object
b
Object
c
Object
d
Object
int
nbOfList
ArrayList
r
ArrayList
nbOfList
add
asList
Object
a
b
c
d
add
asList
Object
a
b
d
c
add
asList
Object
a
c
b
d
add
asList
Object
a
c
d
b
add
asList
Object
a
d
b
c
add
asList
Object
a
d
c
b
add
asList
Object
b
a
c
d
add
asList
Object
b
a
d
c
add
asList
Object
b
c
a
d
add
asList
Object
b
c
d
a
add
asList
Object
b
d
a
c
add
asList
Object
b
d
c
a
add
asList
Object
c
b
a
d
add
asList
Object
c
b
d
a
add
asList
Object
c
a
b
d
add
asList
Object
c
a
d
b
add
asList
Object
c
d
b
a
add
asList
Object
c
d
a
b
add
asList
Object
d
b
c
a
add
asList
Object
d
b
a
c
add
asList
Object
d
c
b
a
add
asList
Object
d
c
a
b
add
asList
Object
d
a
b
c
add
asList
Object
d
a
c
b
return
r
TestCase
