AbstractModuleDescriptorParserTester
getDependency
DependencyDescriptor
dependencies
DependencyDescriptor
name
String
for
forControl
int
i
i
length
i
block
assertNotNull
dependencies
i
assertNotNull
dependencies
i
getDependencyId
if
equals
dependencies
i
getDependencyId
getName
block
return
dependencies
i
return
assertArtifacts
artifacts
Artifact
artifactsNames
String
assertNotNull
artifacts
assertEquals
length
length
for
forControl
int
i
i
length
i
block
boolean
found
for
forControl
int
j
j
length
j
block
assertNotNull
artifacts
j
if
artifacts
j
getName
equals
artifactsNames
i
block
found
break
assertTrue
artifactsNames
i
found
assertDependencyArtifacts
dd
DependencyDescriptor
confs
String
artifactsNames
String
DependencyArtifactDescriptor
dads
getDependencyArtifacts
confs
assertNotNull
dads
assertEquals
length
length
for
forControl
int
i
i
length
i
block
boolean
found
for
forControl
int
j
j
length
j
block
assertNotNull
dads
j
if
dads
j
getName
equals
artifactsNames
i
block
found
break
assertTrue
artifactsNames
i
found
assertDependencyArtifactIncludeRules
dd
DependencyDescriptor
confs
String
artifactsNames
String
IncludeRule
dads
getIncludeRules
confs
assertNotNull
dads
assertEquals
length
length
for
forControl
int
i
i
length
i
block
boolean
found
for
forControl
int
j
j
length
j
block
assertNotNull
dads
j
if
dads
j
getId
getName
equals
artifactsNames
i
block
found
break
assertTrue
artifactsNames
i
found
assertDependencyArtifactExcludeRules
dd
DependencyDescriptor
confs
String
artifactsNames
String
ExcludeRule
rules
getExcludeRules
confs
assertNotNull
rules
assertEquals
length
length
for
forControl
int
i
i
length
i
block
boolean
found
for
forControl
int
j
j
length
j
block
assertNotNull
rules
j
if
rules
j
getId
getName
equals
artifactsNames
i
block
found
break
assertTrue
artifactsNames
i
found
assertDependencyModulesExcludes
dd
DependencyDescriptor
confs
String
moduleNames
String
ExcludeRule
rules
getExcludeRules
confs
assertNotNull
rules
assertEquals
length
length
for
forControl
int
i
i
length
i
block
boolean
found
for
forControl
int
j
j
length
j
block
assertNotNull
rules
j
if
rules
j
getId
getModuleId
getName
equals
moduleNames
i
block
found
break
assertTrue
moduleNames
i
found
assertConf
md
ModuleDescriptor
name
String
desc
String
visibility
Visibility
exts
String
Configuration
conf
getConfiguration
name
assertNotNull
name
conf
assertEquals
name
getName
assertEquals
desc
getDescription
assertEquals
visibility
getVisibility
assertEquals
asList
exts
asList
getExtends
TestCase
