TestHelper
newArtifact
DefaultArtifact
organisation
String
module
String
revision
String
artifact
String
type
String
ext
String
return
DefaultArtifact
newInstance
organisation
module
revision
Date
artifact
type
ext
getArchiveFileInCache
File
ivy
Ivy
mrid
String
artifactName
String
type
String
ext
String
DefaultArtifact
artifact
DefaultArtifact
parse
mrid
Date
artifactName
type
ext
return
getRepositoryCacheManager
getArchiveFileInCache
artifact
ivy
getModuleRevisionId
getArchiveFileInCache
File
ivy
Ivy
organisation
String
module
String
revision
String
artifactName
String
type
String
ext
String
DefaultArtifact
artifact
newArtifact
organisation
module
revision
artifactName
type
ext
return
getRepositoryCacheManager
getArchiveFileInCache
artifact
ivy
getModuleRevisionId
getRepositoryCacheManager
DefaultRepositoryCacheManager
ivy
Ivy
id
ModuleRevisionId
return
DefaultRepositoryCacheManager
getSettings
getResolver
id
getRepositoryCacheManager
assertModuleRevisionIds
expectedMrids
String
mrids
Collection
Collection
expected
parseMrids
expectedMrids
assertEquals
expected
mrids
parseMrids
Collection
mrids
String
String
m
split
Collection
c
LinkedHashSet
for
forControl
int
i
i
length
i
block
add
parse
m
i
return
c
parseMridsToArray
ModuleRevisionId
mrids
String
Collection
parsedMrids
parseMrids
mrids
return
ModuleRevisionId
toArray
ModuleRevisionId
size
parseMicroIvyDescriptor
ModuleDescriptor
microIvy
String
Pattern
mridPattern
NON_CAPTURING_PATTERN
Matcher
m
matcher
microIvy
if
matches
block
return
newBasicInstance
parse
microIvy
Date
Pattern
oneDependencyPattern
compile
pattern
pattern
m
matcher
microIvy
if
matches
block
DefaultModuleDescriptor
md
newBasicInstance
parse
group
Date
addDependency
DefaultDependencyDescriptor
parse
group
return
md
String
p
pattern
pattern
pattern
Pattern
multipleDependenciesPattern
compile
p
m
matcher
microIvy
if
matches
block
DefaultModuleDescriptor
md
newBasicInstance
parse
group
Date
String
mrids
group
if
mrids
block
Collection
depMrids
parseMrids
mrids
for
forControl
Iterator
iter
iterator
hasNext
block
ModuleRevisionId
dep
ModuleRevisionId
next
addDependency
DefaultDependencyDescriptor
dep
return
md
throw
IllegalArgumentException
microIvy
parseMicroIvyDescriptors
Collection
microIvy
String
String
mds
split
Collection
r
ArrayList
for
forControl
int
i
i
length
i
block
add
parseMicroIvyDescriptor
mds
i
return
r
fillRepository
resolver
DependencyResolver
mds
Collection
File
tmp
createTempFile
try
for
forControl
Iterator
iter
iterator
hasNext
block
boolean
overwrite
ModuleDescriptor
md
ModuleDescriptor
next
beginPublishTransaction
getModuleRevisionId
overwrite
boolean
published
try
write
md
tmp
publish
getMetadataArtifact
tmp
overwrite
delete
createNewFile
Artifact
artifacts
getAllArtifacts
for
forControl
int
i
i
length
i
block
publish
artifacts
i
tmp
overwrite
commitPublishTransaction
published
if
published
block
abortPublishTransaction
delete
newTestRepository
FileSystemResolver
FileSystemResolver
testRepository
FileSystemResolver
setName
String
testRepoDir
getAbsolutePath
File
addIvyPattern
testRepoDir
addArtifactPattern
testRepoDir
return
testRepository
cleanTestRepository
forceDelete
File
cleanTest
cleanTestRepository
forceDelete
File
loadTestSettings
IvySettings
settings
IvySettings
setDefaultCache
File
addResolver
newTestRepository
setDefaultResolver
return
settings
newResolveData
ResolveData
settings
IvySettings
return
ResolveData
ResolveEngine
settings
EventManager
SortEngine
settings
newResolveOptions
settings
newResolveOptions
ResolveOptions
settings
IvySettings
return
ResolveOptions
