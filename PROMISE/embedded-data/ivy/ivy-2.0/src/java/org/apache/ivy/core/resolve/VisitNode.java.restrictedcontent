VisitNode
IvyNode
node
VisitNode
parent
VisitNode
root
Collection
path
String
parentConf
String
requestedConf
String
rootModuleConf
ResolveData
data
Boolean
isCircular
IvyNodeUsage
usage
VisitNode
data
ResolveData
node
IvyNode
parent
VisitNode
rootModuleConf
String
parentConf
String
data
node
parent
rootModuleConf
parentConf
VisitNode
data
ResolveData
node
IvyNode
parent
VisitNode
rootModuleConf
String
parentConf
String
usage
IvyNodeUsage
checkNotNull
data
checkNotNull
node
checkNotNull
rootModuleConf
data
data
node
node
parent
parent
rootModuleConf
rootModuleConf
parentConf
parentConf
usage
usage
data
register
getNode
IvyNode
return
node
getRequestedConf
String
return
requestedConf
setRequestedConf
requestedConf
String
requestedConf
requestedConf
getParent
VisitNode
return
parent
getRoot
VisitNode
if
root
block
root
computeRoot
return
root
getPath
Collection
if
path
block
path
computePath
return
path
computePath
Collection
if
parent
block
Collection
p
LinkedHashSet
getPath
add
return
p
block
return
singletonList
computeRoot
VisitNode
if
isRoot
block
return
if
parent
block
return
getRoot
block
return
getParentConf
String
return
parentConf
setParentConf
parentConf
String
parentConf
parentConf
getRootModuleConf
String
return
rootModuleConf
getRoot
VisitNode
parent
VisitNode
VisitNode
root
parent
Collection
path
HashSet
add
root
while
getParent
getNode
isRoot
block
if
contains
getParent
block
return
root
root
getParent
add
root
return
root
isTransitive
boolean
return
isTransitive
getDependencyDescriptor
isTransitive
getParentNode
isParentConfTransitive
isParentConfTransitive
boolean
String
conf
getParent
getRequestedConf
if
conf
block
return
Configuration
parentConf
getParentNode
getConfiguration
conf
return
isTransitive
getRealNode
IvyNode
IvyNode
node
node
getRealNode
if
node
block
return
node
block
return
node
useRealNode
if
parent
block
IvyNode
node
getNode
node
getId
if
node
node
node
block
node
node
loadData
boolean
conf
String
shouldBePublic
boolean
boolean
loaded
loadData
rootModuleConf
getParentNode
parentConf
conf
shouldBePublic
getUsage
if
loaded
block
useRealNode
if
getNode
getResolvedId
getNode
getId
equals
getResolvedId
getResolvedId
block
register
getResolvedId
return
loaded
getDependencies
Collection
conf
String
Collection
deps
getDependencies
rootModuleConf
conf
requestedConf
Collection
ret
ArrayList
size
for
forControl
Iterator
iter
iterator
hasNext
block
IvyNode
depNode
IvyNode
next
add
traverseChild
conf
depNode
return
ret
gotoNode
VisitNode
node
IvyNode
if
getModuleId
equals
getModuleId
block
throw
IllegalArgumentException
getModuleId
getModuleId
VisitData
visitData
getVisitData
getId
if
visitData
block
List
visitNodes
getVisitNodes
rootModuleConf
for
forControl
Iterator
iter
iterator
hasNext
block
VisitNode
vnode
VisitNode
next
if
parent
getParent
parent
getId
equals
getParent
getId
block
parentConf
parentConf
usage
getUsage
return
vnode
return
traverse
parent
parentConf
node
getUsage
getUsage
IvyNodeUsage
return
usage
getMainUsage
usage
traverseChild
VisitNode
parentConf
String
child
IvyNode
VisitNode
parent
return
traverse
parent
parentConf
child
traverse
VisitNode
parent
VisitNode
parentConf
String
node
IvyNode
usage
IvyNodeUsage
if
getPath
contains
node
block
getContext
getCircularDependencyStrategy
handleCircularDependency
toMrids
getPath
getId
return
VisitNode
data
node
parent
rootModuleConf
parentConf
usage
toMrids
ModuleRevisionId
path
Collection
last
ModuleRevisionId
ModuleRevisionId
ret
ModuleRevisionId
size
int
i
for
forControl
Iterator
iter
iterator
hasNext
i
block
VisitNode
node
VisitNode
next
ret
i
getNode
getId
ret
length
last
return
ret
getResolvedId
ModuleRevisionId
return
getResolvedId
updateConfsToFetch
confs
Collection
updateConfsToFetch
confs
getId
ModuleRevisionId
return
getId
isEvicted
boolean
return
isEvicted
rootModuleConf
getRealConfs
String
conf
String
return
getRealConfs
conf
hasProblem
boolean
return
hasProblem
getConfiguration
Configuration
conf
String
return
getConfiguration
conf
getEvictedData
EvictionData
return
getEvictedData
rootModuleConf
getDependencyDescriptor
DependencyDescriptor
return
getDependencyDescriptor
getParentNode
getParentNode
IvyNode
return
parent
getNode
isCircular
boolean
if
isCircular
block
if
parent
block
isCircular
FALSE
for
forControl
Iterator
iter
getPath
iterator
hasNext
block
VisitNode
ancestor
VisitNode
next
if
getId
getModuleId
equals
getId
getModuleId
block
isCircular
TRUE
break
block
isCircular
FALSE
return
booleanValue
getConfsToFetch
String
return
getConfsToFetch
getRequiredConfigurations
String
in
VisitNode
inConf
String
return
getRequiredConfigurations
getNode
inConf
getModuleId
ModuleId
return
getModuleId
getResolvedRevisions
Collection
mid
ModuleId
return
getResolvedRevisions
mid
rootModuleConf
markEvicted
evictionData
EvictionData
markEvicted
evictionData
getRequiredConfigurations
String
return
getRequiredConfigurations
markEvicted
parent
VisitNode
conflictMgr
ConflictManager
selected
Collection
markEvicted
rootModuleConf
getNode
conflictMgr
selected
getDescriptor
ModuleDescriptor
return
getDescriptor
getEvictionDataInRoot
EvictionData
rootModuleConf
String
ancestor
VisitNode
return
getEvictionDataInRoot
rootModuleConf
getNode
getEvictedRevisions
Collection
moduleId
ModuleId
return
getEvictedRevisions
moduleId
rootModuleConf
toString
String
return
toString
isConfRequiredByMergedUsageOnly
boolean
conf
String
return
isConfRequiredByMergedUsageOnly
rootModuleConf
conf
