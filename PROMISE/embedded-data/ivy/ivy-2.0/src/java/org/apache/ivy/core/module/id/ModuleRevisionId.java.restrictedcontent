ModuleRevisionId
String
ENCODE_SEPARATOR
ENCODE_SEPARATOR
String
ENCODE_PREFIX
String
NULL_ENCODE
String
STRICT_CHARS_PATTERN
String
REV_STRICT_CHARS_PATTERN
Map
CACHE
WeakHashMap
Pattern
MRID_PATTERN
compile
STRICT_CHARS_PATTERN
STRICT_CHARS_PATTERN
STRICT_CHARS_PATTERN
REV_STRICT_CHARS_PATTERN
Pattern
NON_CAPTURING_PATTERN
compile
STRICT_CHARS_PATTERN
STRICT_CHARS_PATTERN
STRICT_CHARS_PATTERN
REV_STRICT_CHARS_PATTERN
parse
ModuleRevisionId
mrid
String
Matcher
m
matcher
trim
if
matches
block
throw
IllegalArgumentException
mrid
pattern
return
newInstance
group
group
group
group
newInstance
ModuleRevisionId
organisation
String
name
String
revision
String
return
intern
ModuleRevisionId
newInstance
organisation
name
revision
newInstance
ModuleRevisionId
organisation
String
name
String
revision
String
extraAttributes
Map
return
intern
ModuleRevisionId
newInstance
organisation
name
revision
extraAttributes
newInstance
ModuleRevisionId
organisation
String
name
String
branch
String
revision
String
return
intern
ModuleRevisionId
newInstance
organisation
name
branch
revision
newInstance
ModuleRevisionId
organisation
String
name
String
branch
String
revision
String
extraAttributes
Map
return
intern
ModuleRevisionId
newInstance
organisation
name
branch
revision
extraAttributes
newInstance
ModuleRevisionId
mrid
ModuleRevisionId
rev
String
return
intern
ModuleRevisionId
getModuleId
getBranch
rev
getQualifiedExtraAttributes
newInstance
ModuleRevisionId
mrid
ModuleRevisionId
branch
String
rev
String
return
intern
ModuleRevisionId
getModuleId
branch
rev
getQualifiedExtraAttributes
intern
ModuleRevisionId
moduleRevisionId
ModuleRevisionId
ModuleRevisionId
r
synchronized
CACHE
WeakReference
ref
WeakReference
get
moduleRevisionId
if
ref
block
r
ModuleRevisionId
get
if
r
block
r
moduleRevisionId
put
r
WeakReference
r
return
r
ModuleId
moduleId
String
branch
String
revision
int
hash
ModuleRevisionId
moduleId
ModuleId
revision
String
moduleId
revision
ModuleRevisionId
moduleId
ModuleId
branch
String
revision
String
moduleId
branch
revision
ModuleRevisionId
moduleId
ModuleId
revision
String
extraAttributes
Map
moduleId
revision
extraAttributes
ModuleRevisionId
moduleId
ModuleId
branch
String
revision
String
extraAttributes
Map
extraAttributes
moduleId
moduleId
IvyContext
context
getContext
branch
branch
peekIvy
getSettings
getDefaultBranch
moduleId
branch
revision
revision
getWorkingRevision
revision
setStandardAttribute
ORGANISATION_KEY
moduleId
getOrganisation
setStandardAttribute
MODULE_KEY
moduleId
getName
setStandardAttribute
BRANCH_KEY
branch
setStandardAttribute
REVISION_KEY
revision
getModuleId
ModuleId
return
moduleId
getName
String
return
getModuleId
getName
getOrganisation
String
return
getModuleId
getOrganisation
getRevision
String
return
revision
equals
boolean
obj
Object
if
obj
ModuleRevisionId
block
return
ModuleRevisionId
other
ModuleRevisionId
obj
if
getRevision
equals
getRevision
block
return
if
getBranch
getBranch
block
return
if
getBranch
getBranch
equals
getBranch
block
return
if
getModuleId
equals
getModuleId
block
return
block
return
getQualifiedExtraAttributes
equals
getQualifiedExtraAttributes
hashCode
int
if
hash
block
hash
hash
hash
getBranch
getBranch
hashCode
hash
hash
getRevision
hashCode
hash
hash
getModuleId
hashCode
hash
hash
getQualifiedExtraAttributes
hashCode
return
hash
toString
String
return
moduleId
branch
length
branch
revision
revision
encodeToString
String
StringBuffer
buf
StringBuffer
Map
attributes
getAttributes
for
forControl
Iterator
iter
keySet
iterator
hasNext
block
String
attName
String
next
String
value
String
get
attName
value
value
NULL_ENCODE
value
append
append
attName
append
ENCODE_SEPARATOR
append
ENCODE_PREFIX
append
value
append
ENCODE_SEPARATOR
ENCODE_PREFIX
return
toString
decode
ModuleRevisionId
encoded
String
String
parts
split
ENCODE_SEPARATOR
if
length
block
throw
IllegalArgumentException
encoded
Map
attributes
HashMap
for
forControl
int
i
i
length
i
block
String
attName
parts
i
if
startsWith
ENCODE_PREFIX
block
throw
IllegalArgumentException
encoded
attName
ENCODE_PREFIX
block
attName
substring
String
attValue
parts
i
if
startsWith
ENCODE_PREFIX
block
throw
IllegalArgumentException
encoded
attValue
ENCODE_PREFIX
block
attValue
substring
if
equals
attValue
block
attValue
put
attName
attValue
String
org
String
remove
ORGANISATION_KEY
String
mod
String
remove
MODULE_KEY
String
rev
String
remove
REVISION_KEY
String
branch
String
remove
BRANCH_KEY
if
org
block
throw
IllegalArgumentException
encoded
if
mod
block
throw
IllegalArgumentException
encoded
if
rev
block
throw
IllegalArgumentException
encoded
return
newInstance
org
mod
branch
rev
attributes
getBranch
String
return
branch
UnmodifiableExtendableItem
