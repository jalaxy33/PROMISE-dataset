FileSystemResolver
String
TRANSACTION_DESTINATION_SUFFIX
Pattern
TRANSACTION_PATTERN
compile
String
transactional
Boolean
supportTransaction
String
baseTransactionPattern
Map
fullTransactionPatterns
HashMap
File
transactionTempDir
File
transactionDestDir
FileSystemResolver
setRepository
FileRepository
getTypeName
String
return
isLocal
boolean
return
getFileRepository
isLocal
setLocal
local
boolean
getFileRepository
setLocal
local
getFileRepository
FileRepository
return
FileRepository
getRepository
getDestination
String
pattern
String
artifact
Artifact
mrid
ModuleRevisionId
if
supportTransaction
isTransactionStarted
block
String
destPattern
String
get
pattern
if
destPattern
block
throw
IllegalArgumentException
pattern
keySet
return
substitute
destPattern
mrid
artifact
block
return
getDestination
pattern
artifact
mrid
isTransactionStarted
boolean
return
transactionTempDir
abortPublishTransaction
if
supportTransaction
block
if
isTransactionStarted
block
throw
IllegalStateException
try
getFileRepository
delete
transactionTempDir
info
transactionTempDir
closeTransaction
commitPublishTransaction
if
supportTransaction
block
if
isTransactionStarted
block
throw
IllegalStateException
if
exists
block
throw
IOException
transactionDestDir
try
getFileRepository
move
transactionTempDir
transactionDestDir
info
transactionTempDir
transactionDestDir
catchClause
ex
IOException
commitEx
try
getFileRepository
delete
transactionTempDir
commitEx
IOException
transactionDestDir
catchClause
deleteEx
commitEx
IOException
transactionDestDir
transactionTempDir
initCause
ex
throw
commitEx
closeTransaction
beginPublishTransaction
module
ModuleRevisionId
overwrite
boolean
if
supportTransaction
block
if
isTransactionStarted
block
throw
IllegalStateException
if
overwrite
block
unsupportedTransaction
block
initTransaction
module
if
exists
block
unsupportedTransaction
transactionDestDir
closeTransaction
block
verbose
transactionTempDir
transactionDestDir
filterNames
Collection
values
Collection
if
supportTransaction
block
values
filterNames
values
for
forControl
Iterator
iterator
iterator
hasNext
block
String
v
String
next
if
endsWith
TRANSACTION_DESTINATION_SUFFIX
block
remove
return
values
block
return
filterNames
values
supportTransaction
boolean
if
equals
transactional
block
return
checkSupportTransaction
return
booleanValue
closeTransaction
transactionTempDir
transactionDestDir
checkSupportTransaction
if
supportTransaction
block
supportTransaction
FALSE
List
ivyPatterns
getIvyPatterns
List
artifactPatterns
getArtifactPatterns
if
size
block
String
pattern
String
get
Matcher
m
matcher
pattern
if
matches
block
unsupportedTransaction
return
block
baseTransactionPattern
group
put
pattern
group
TRANSACTION_DESTINATION_SUFFIX
group
if
size
block
String
pattern
String
get
Matcher
m
matcher
pattern
if
matches
block
unsupportedTransaction
return
if
baseTransactionPattern
block
if
equals
group
block
unsupportedTransaction
return
block
put
pattern
group
TRANSACTION_DESTINATION_SUFFIX
group
block
baseTransactionPattern
group
put
pattern
group
TRANSACTION_DESTINATION_SUFFIX
group
supportTransaction
TRUE
unsupportedTransaction
msg
String
String
fullMsg
getName
msg
if
equals
transactional
block
throw
IllegalStateException
fullMsg
block
verbose
fullMsg
supportTransaction
FALSE
initTransaction
module
ModuleRevisionId
transactionTempDir
checkAbsolute
substitute
baseTransactionPattern
newInstance
module
getRevision
TRANSACTION_DESTINATION_SUFFIX
transactionDestDir
checkAbsolute
substitute
baseTransactionPattern
module
getTransactional
String
return
transactional
setTransactional
transactional
String
transactional
transactional
addConfiguredIvy
p
IvyPattern
checkAbsolute
getPattern
addConfiguredIvy
p
addIvyPattern
pattern
String
checkAbsolute
pattern
addIvyPattern
pattern
addConfiguredArtifact
p
IvyPattern
checkAbsolute
getPattern
addConfiguredArtifact
p
addArtifactPattern
pattern
String
checkAbsolute
pattern
addArtifactPattern
pattern
RepositoryResolver
