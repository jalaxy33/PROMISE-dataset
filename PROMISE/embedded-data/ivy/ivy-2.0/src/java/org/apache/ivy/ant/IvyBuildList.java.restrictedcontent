IvyBuildList
OnMissingDescriptor
String
HEAD
String
TAIL
String
SKIP
String
FAIL
String
WARN
OnMissingDescriptor
String
DESCRIPTOR_REQUIRED
List
buildFileSets
ArrayList
String
reference
boolean
haltOnError
String
onMissingDescriptor
HEAD
boolean
reverse
String
ivyFilePath
String
root
boolean
excludeRoot
String
leaf
String
delimiter
boolean
excludeLeaf
boolean
onlydirectdep
String
restartFrom
addFileset
buildFiles
FileSet
add
buildFiles
getReference
String
return
reference
setReference
reference
String
reference
reference
getRoot
String
return
root
setRoot
root
String
root
root
isExcludeRoot
boolean
return
excludeRoot
setExcludeRoot
root
boolean
excludeRoot
root
getLeaf
String
return
leaf
setLeaf
leaf
String
leaf
leaf
isExcludeLeaf
boolean
return
excludeLeaf
setExcludeLeaf
excludeLeaf
boolean
excludeLeaf
excludeLeaf
getDelimiter
String
return
delimiter
setDelimiter
delimiter
String
delimiter
delimiter
getOnlydirectdep
boolean
return
onlydirectdep
setOnlydirectdep
onlydirectdep
boolean
onlydirectdep
onlydirectdep
doExecute
if
reference
block
throw
BuildException
if
isEmpty
block
throw
BuildException
Ivy
ivy
getIvyInstance
IvySettings
settings
getSettings
ivyFilePath
getProperty
ivyFilePath
settings
Path
path
Path
getProject
Map
buildFiles
HashMap
List
independent
ArrayList
List
noDescriptor
ArrayList
Collection
mds
ArrayList
Set
rootModuleNames
LinkedHashSet
if
equals
root
block
StringTokenizer
st
StringTokenizer
root
delimiter
while
hasMoreTokens
block
add
nextToken
Set
leafModuleNames
LinkedHashSet
if
equals
leaf
block
StringTokenizer
st
StringTokenizer
leaf
delimiter
while
hasMoreTokens
block
add
nextToken
Set
restartFromModuleNames
LinkedHashSet
if
equals
restartFrom
block
StringTokenizer
st
StringTokenizer
restartFrom
delimiter
add
nextToken
for
forControl
ListIterator
iter
listIterator
hasNext
block
FileSet
fs
FileSet
next
DirectoryScanner
ds
getDirectoryScanner
getProject
String
builds
getIncludedFiles
for
forControl
int
i
i
length
i
block
File
buildFile
File
getBasedir
builds
i
File
ivyFile
getIvyFileFor
buildFile
if
exists
block
onMissingDescriptor
buildFile
ivyFile
noDescriptor
block
try
ModuleDescriptor
md
getInstance
parseDescriptor
settings
toURI
toURL
doValidate
settings
put
md
buildFile
add
md
debug
getModuleRevisionId
getModuleId
catchClause
ex
if
haltOnError
block
throw
BuildException
buildFile
ivyFile
ex
ex
block
warn
buildFile
ivyFile
getMessage
info
add
buildFile
List
leafModuleDescriptors
convertModuleNamesToModuleDescriptors
mds
leafModuleNames
List
rootModuleDescriptors
convertModuleNamesToModuleDescriptors
mds
rootModuleNames
List
restartFromModuleDescriptors
convertModuleNamesToModuleDescriptors
mds
restartFromModuleNames
if
isEmpty
block
info
rootModuleNames
mds
filterModulesFromRoot
mds
rootModuleDescriptors
if
isEmpty
block
info
leafModuleNames
mds
filterModulesFromLeaf
mds
leafModuleDescriptors
List
sortedModules
sortModuleDescriptors
mds
DEFAULT
if
equals
onMissingDescriptor
block
for
forControl
ListIterator
iter
listIterator
hasNext
block
File
buildFile
File
next
addBuildFile
path
buildFile
for
forControl
ListIterator
iter
listIterator
hasNext
block
File
buildFile
File
next
addBuildFile
path
buildFile
if
isReverse
block
reverse
sortedModules
if
isEmpty
block
boolean
foundRestartFrom
List
keptModules
ArrayList
ModuleDescriptor
restartFromModuleDescriptor
ModuleDescriptor
get
for
forControl
ListIterator
iter
listIterator
hasNext
block
ModuleDescriptor
md
ModuleDescriptor
next
if
equals
restartFromModuleDescriptor
block
foundRestartFrom
if
foundRestartFrom
block
add
md
sortedModules
keptModules
StringBuffer
order
StringBuffer
for
forControl
ListIterator
iter
listIterator
hasNext
block
ModuleDescriptor
md
ModuleDescriptor
next
append
getModuleRevisionId
getModuleId
if
hasNext
block
append
File
buildFile
File
get
md
addBuildFile
path
buildFile
if
equals
onMissingDescriptor
block
for
forControl
ListIterator
iter
listIterator
hasNext
block
File
buildFile
File
next
addBuildFile
path
buildFile
getProject
addReference
getReference
path
getProject
setProperty
toString
onMissingDescriptor
buildFile
File
ivyFile
File
noDescriptor
List
if
equals
onMissingDescriptor
block
debug
buildFile
ivyFile
if
equals
onMissingDescriptor
block
throw
BuildException
buildFile
ivyFile
block
if
equals
onMissingDescriptor
block
warn
buildFile
ivyFile
verbose
buildFile
ivyFile
equals
onMissingDescriptor
verbose
add
buildFile
convertModuleNamesToModuleDescriptors
List
mds
Collection
moduleNames
Set
kind
String
List
result
ArrayList
Set
foundModuleNames
HashSet
for
forControl
Iterator
it
iterator
hasNext
block
ModuleDescriptor
md
ModuleDescriptor
next
String
name
getModuleRevisionId
getModuleId
getName
if
contains
name
block
add
name
add
md
if
size
size
block
Set
missingModules
HashSet
moduleNames
removeAll
foundModuleNames
StringBuffer
missingNames
StringBuffer
String
sep
for
forControl
Iterator
it
iterator
hasNext
block
append
sep
append
next
sep
throw
BuildException
kind
toString
return
result
filterModulesFromRoot
Collection
mds
Collection
rootmds
List
Map
moduleIdMap
HashMap
for
forControl
Iterator
iter
iterator
hasNext
block
ModuleDescriptor
md
ModuleDescriptor
next
put
getModuleRevisionId
getModuleId
md
Set
toKeep
LinkedHashSet
Iterator
it
iterator
while
hasNext
block
ModuleDescriptor
rootmd
ModuleDescriptor
next
processFilterNodeFromRoot
rootmd
toKeep
moduleIdMap
if
excludeRoot
block
verbose
getModuleRevisionId
getModuleId
getName
block
add
rootmd
for
forControl
Iterator
iter
iterator
hasNext
block
ModuleDescriptor
md
ModuleDescriptor
next
verbose
getModuleRevisionId
getModuleId
getName
return
toKeep
processFilterNodeFromRoot
node
ModuleDescriptor
toKeep
Set
moduleIdMap
Map
DependencyDescriptor
deps
getDependencies
for
forControl
int
i
i
length
i
block
ModuleId
id
deps
i
getDependencyId
ModuleDescriptor
md
ModuleDescriptor
get
id
if
md
contains
md
block
add
md
if
getOnlydirectdep
block
processFilterNodeFromRoot
md
toKeep
moduleIdMap
filterModulesFromLeaf
Collection
mds
Collection
leafmds
List
Map
moduleIdMap
HashMap
for
forControl
Iterator
iter
iterator
hasNext
block
ModuleDescriptor
md
ModuleDescriptor
next
put
getModuleRevisionId
getModuleId
md
Set
toKeep
LinkedHashSet
Iterator
it
iterator
while
hasNext
block
ModuleDescriptor
leafmd
ModuleDescriptor
next
if
excludeLeaf
block
verbose
getModuleRevisionId
getModuleId
getName
block
add
leafmd
processFilterNodeFromLeaf
leafmd
toKeep
moduleIdMap
for
forControl
Iterator
iter
iterator
hasNext
block
ModuleDescriptor
md
ModuleDescriptor
next
verbose
getModuleRevisionId
getModuleId
getName
return
toKeep
processFilterNodeFromLeaf
node
ModuleDescriptor
toKeep
Set
moduleIdMap
Map
for
forControl
Iterator
iter
values
iterator
hasNext
block
ModuleDescriptor
md
ModuleDescriptor
next
DependencyDescriptor
deps
getDependencies
for
forControl
int
i
i
length
i
block
ModuleId
id
deps
i
getDependencyId
if
getModuleRevisionId
getModuleId
equals
id
contains
md
block
add
md
if
getOnlydirectdep
block
processFilterNodeFromLeaf
md
toKeep
moduleIdMap
addBuildFile
path
Path
buildFile
File
FileSet
fs
FileSet
setFile
buildFile
addFileset
fs
getIvyFileFor
File
buildFile
File
return
File
getParentFile
ivyFilePath
isHaltonerror
boolean
return
haltOnError
setHaltonerror
haltOnError
boolean
haltOnError
haltOnError
getIvyfilepath
String
return
ivyFilePath
setIvyfilepath
ivyFilePath
String
ivyFilePath
ivyFilePath
getOnMissingDescriptor
String
return
onMissingDescriptor
setOnMissingDescriptor
onMissingDescriptor
String
onMissingDescriptor
onMissingDescriptor
isSkipbuildwithoutivy
boolean
return
onMissingDescriptor
SKIP
setSkipbuildwithoutivy
skipBuildFilesWithoutIvy
boolean
deprecated
onMissingDescriptor
skipBuildFilesWithoutIvy
SKIP
FAIL
isReverse
boolean
return
reverse
setReverse
reverse
boolean
reverse
reverse
getRestartFrom
String
return
restartFrom
setRestartFrom
restartFrom
String
restartFrom
restartFrom
IvyTask
