XmlModuleDescriptorWriter
XmlModuleDescriptorWriter
write
md
ModuleDescriptor
output
File
write
md
output
write
md
ModuleDescriptor
licenseHeader
String
output
File
if
getParentFile
block
getParentFile
mkdirs
PrintWriter
out
PrintWriter
OutputStreamWriter
FileOutputStream
output
try
println
if
licenseHeader
block
print
licenseHeader
StringBuffer
xmlNamespace
StringBuffer
Map
namespaces
getExtraAttributesNamespaces
for
forControl
Iterator
iter
entrySet
iterator
hasNext
block
Entry
ns
Entry
next
append
append
getKey
append
append
getValue
append
println
xmlNamespace
printInfoTag
md
out
printConfigurations
md
out
printPublications
md
out
printDependencies
md
out
println
close
printDependencies
md
ModuleDescriptor
out
PrintWriter
DependencyDescriptor
dds
getDependencies
if
length
block
println
for
forControl
int
i
i
length
i
block
print
print
escape
dds
i
getDependencyRevisionId
getOrganisation
print
escape
dds
i
getDependencyRevisionId
getName
if
dds
i
getDependencyRevisionId
getBranch
block
print
escape
dds
i
getDependencyRevisionId
getBranch
print
escape
dds
i
getDependencyRevisionId
getRevision
if
dds
i
getDynamicConstraintDependencyRevisionId
equals
dds
i
getDependencyRevisionId
block
if
dds
i
getDynamicConstraintDependencyRevisionId
getBranch
block
print
escape
dds
i
getDynamicConstraintDependencyRevisionId
getBranch
print
escape
dds
i
getDynamicConstraintDependencyRevisionId
getRevision
if
dds
i
isForce
block
print
dds
i
isForce
if
dds
i
isChanging
block
print
dds
i
isChanging
if
dds
i
isTransitive
block
print
dds
i
isTransitive
print
String
modConfs
dds
i
getModuleConfigurations
for
forControl
int
j
j
length
j
block
String
depConfs
dds
i
getDependencyConfigurations
modConfs
j
print
escape
modConfs
j
for
forControl
int
k
k
length
k
block
print
escape
depConfs
k
if
k
length
block
print
if
j
length
block
print
print
printExtraAttributes
dds
i
out
DependencyArtifactDescriptor
depArtifacts
dds
i
getAllDependencyArtifacts
if
length
block
println
printDependencyArtefacts
md
out
depArtifacts
IncludeRule
includes
dds
i
getAllIncludeRules
if
length
length
block
println
printDependencyIncludeRules
md
out
includes
ExcludeRule
excludes
dds
i
getAllExcludeRules
if
length
length
length
block
println
printDependencyExcludeRules
md
out
excludes
if
length
length
length
block
println
block
println
printAllExcludes
md
out
printAllMediators
md
out
println
printAllMediators
md
ModuleDescriptor
out
PrintWriter
Map
mediators
getAllDependencyDescriptorMediators
getAllRules
for
forControl
Iterator
iterator
entrySet
iterator
hasNext
block
Map
Entry
mediatorRule
Map
Entry
next
MapMatcher
matcher
MapMatcher
getKey
DependencyDescriptorMediator
mediator
DependencyDescriptorMediator
getValue
if
mediator
OverrideDependencyDescriptorMediator
block
OverrideDependencyDescriptorMediator
oddm
OverrideDependencyDescriptorMediator
mediator
print
print
escape
String
getAttributes
get
ORGANISATION_KEY
print
escape
String
getAttributes
get
MODULE_KEY
print
escape
getPatternMatcher
getName
if
getBranch
block
print
escape
getBranch
if
getVersion
block
print
escape
getVersion
println
block
verbose
getClass
printAllExcludes
md
ModuleDescriptor
out
PrintWriter
ExcludeRule
excludes
getAllExcludeRules
if
length
block
for
forControl
int
j
j
length
j
block
print
print
escape
excludes
j
getId
getModuleId
getOrganisation
print
escape
excludes
j
getId
getModuleId
getName
print
escape
excludes
j
getId
getName
print
escape
excludes
j
getId
getType
print
escape
excludes
j
getId
getExt
String
ruleConfs
excludes
j
getConfigurations
if
asList
equals
asList
getConfigurationsNames
ruleConfs
block
print
for
forControl
int
k
k
length
k
block
print
escape
ruleConfs
k
if
k
length
block
print
print
print
escape
excludes
j
getMatcher
getName
println
printDependencyExcludeRules
md
ModuleDescriptor
out
PrintWriter
excludes
ExcludeRule
if
length
block
for
forControl
int
j
j
length
j
block
print
print
escape
excludes
j
getId
getModuleId
getOrganisation
print
escape
excludes
j
getId
getModuleId
getName
print
escape
excludes
j
getId
getName
print
escape
excludes
j
getId
getType
print
escape
excludes
j
getId
getExt
String
ruleConfs
excludes
j
getConfigurations
if
asList
equals
asList
getConfigurationsNames
ruleConfs
block
print
for
forControl
int
k
k
length
k
block
print
escape
ruleConfs
k
if
k
length
block
print
print
print
escape
excludes
j
getMatcher
getName
println
printDependencyIncludeRules
md
ModuleDescriptor
out
PrintWriter
includes
IncludeRule
if
length
block
for
forControl
int
j
j
length
j
block
print
print
escape
includes
j
getId
getName
print
escape
includes
j
getId
getType
print
escape
includes
j
getId
getExt
String
ruleConfs
includes
j
getConfigurations
if
asList
equals
asList
getConfigurationsNames
ruleConfs
block
print
for
forControl
int
k
k
length
k
block
print
escape
ruleConfs
k
if
k
length
block
print
print
print
escape
includes
j
getMatcher
getName
println
printDependencyArtefacts
md
ModuleDescriptor
out
PrintWriter
depArtifacts
DependencyArtifactDescriptor
if
length
block
for
forControl
int
j
j
length
j
block
print
print
escape
depArtifacts
j
getName
print
escape
depArtifacts
j
getType
print
escape
depArtifacts
j
getExt
String
dadconfs
depArtifacts
j
getConfigurations
if
asList
equals
asList
getConfigurationsNames
dadconfs
block
print
for
forControl
int
k
k
length
k
block
print
escape
dadconfs
k
if
k
length
block
print
print
printExtraAttributes
depArtifacts
j
out
println
printExtraAttributes
item
ExtendableItem
out
PrintWriter
prefix
String
printExtraAttributes
getQualifiedExtraAttributes
out
prefix
printExtraAttributes
extra
Map
out
PrintWriter
prefix
String
if
extra
block
return
String
delim
prefix
for
forControl
Iterator
iter
entrySet
iterator
hasNext
block
Map
Entry
entry
Map
Entry
next
print
delim
getKey
escape
getValue
toString
delim
printPublications
md
ModuleDescriptor
out
PrintWriter
println
Artifact
artifacts
getAllArtifacts
for
forControl
int
i
i
length
i
block
print
print
escape
artifacts
i
getName
print
escape
artifacts
i
getType
print
escape
artifacts
i
getExt
print
escape
getConfs
md
artifacts
i
printExtraAttributes
artifacts
i
out
println
println
printConfigurations
md
ModuleDescriptor
out
PrintWriter
Configuration
confs
getConfigurations
if
length
block
println
for
forControl
int
i
i
length
i
block
print
print
escape
confs
i
getName
print
escape
confs
i
getVisibility
toString
if
confs
i
getDescription
block
print
escape
confs
i
getDescription
String
exts
confs
i
getExtends
if
length
block
print
for
forControl
int
j
j
length
j
block
print
escape
exts
j
if
j
length
block
print
print
if
confs
i
getDeprecated
block
print
escape
confs
i
getDeprecated
printExtraAttributes
confs
i
out
println
println
printInfoTag
md
ModuleDescriptor
out
PrintWriter
println
escape
getModuleRevisionId
getOrganisation
println
escape
getModuleRevisionId
getName
String
branch
getResolvedModuleRevisionId
getBranch
if
branch
block
println
escape
branch
String
revision
getResolvedModuleRevisionId
getRevision
if
revision
block
println
escape
revision
println
escape
getStatus
println
format
getResolvedPublicationDate
if
isDefault
block
println
if
md
DefaultModuleDescriptor
block
DefaultModuleDescriptor
dmd
DefaultModuleDescriptor
md
if
getNamespace
getNamespace
getName
equals
block
println
escape
getNamespace
getName
if
getExtraAttributes
isEmpty
block
printExtraAttributes
md
out
println
if
requireInnerInfoElement
md
block
println
License
licenses
getLicenses
for
forControl
int
i
i
length
i
block
License
license
licenses
i
print
if
getName
block
print
escape
getName
if
getUrl
block
print
escape
getUrl
println
if
getHomePage
getDescription
block
print
if
getHomePage
block
print
escape
getHomePage
if
getDescription
getDescription
trim
length
block
println
println
escape
getDescription
println
block
println
for
forControl
Iterator
it
getExtraInfo
entrySet
iterator
hasNext
block
Map
Entry
extraDescr
Map
Entry
next
if
getValue
String
getValue
block
continue
print
print
getKey
print
print
escape
String
getValue
print
print
getKey
println
println
block
println
requireInnerInfoElement
boolean
md
ModuleDescriptor
return
getExtraInfo
size
getHomePage
getDescription
getDescription
trim
length
getLicenses
length
getConfs
String
md
ModuleDescriptor
artifact
Artifact
StringBuffer
ret
StringBuffer
String
confs
getConfigurationsNames
for
forControl
int
i
i
length
i
block
if
asList
contains
artifact
getArtifacts
confs
i
block
append
append
confs
i
if
length
block
setLength
length
return
toString
