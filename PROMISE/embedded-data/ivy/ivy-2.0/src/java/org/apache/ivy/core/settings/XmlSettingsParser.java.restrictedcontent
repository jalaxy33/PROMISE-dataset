XmlSettingsParser
IvyVariableContainerWrapper
Collection
SETTINGS_VARIABLES
asList
String
IvyVariableContainer
variables
Map
localVariables
HashMap
IvyVariableContainerWrapper
variables
IvyVariableContainer
variables
variables
setVariable
varName
String
value
String
overwrite
boolean
if
contains
varName
block
if
containsKey
varName
overwrite
block
put
varName
value
block
setVariable
varName
value
overwrite
setEnvironmentPrefix
prefix
String
setEnvironmentPrefix
prefix
getVariable
String
name
String
if
containsKey
name
block
return
String
get
name
return
getVariable
name
clone
Object
throw
UnsupportedOperationException
IvyVariableContainer
Configurator
configurator
List
configuratorTags
asList
String
IvySettings
ivy
String
defaultResolver
String
defaultCM
String
defaultLatest
String
defaultCacheManager
String
defaultCircular
String
defaultLock
String
currentConfiguratorTag
URL
settings
boolean
deprecatedMessagePrinted
XmlSettingsParser
ivy
IvySettings
ivy
ivy
parse
settings
URL
configurator
Configurator
setFileResolver
FileResolver
resolveFile
File
path
String
filename
String
return
checkAbsolute
path
filename
Map
typeDefs
getTypeDefs
for
forControl
Iterator
iter
keySet
iterator
hasNext
block
String
name
String
next
typeDef
name
Class
get
name
doParse
settings
doParse
settingsUrl
URL
settings
settingsUrl
InputStream
stream
try
stream
getDefault
openStream
settingsUrl
InputSource
inSrc
InputSource
stream
setSystemId
toExternalForm
newInstance
newSAXParser
parse
toExternalForm
validate
catchClause
e
throw
e
catchClause
e
ParseException
pe
ParseException
settingsUrl
getMessage
initCause
e
throw
pe
if
stream
block
try
close
catchClause
e
parse
configurator
Configurator
configuration
URL
configurator
configurator
doParse
configuration
startElement
uri
String
localName
String
qName
String
att
Attributes
Map
attributes
HashMap
for
forControl
int
i
i
getLength
i
block
put
getQName
i
substitute
getValue
i
try
if
equals
qName
block
deprecatedMessagePrinted
deprecated
settings
if
getCurrent
block
inConfiguratorStarted
qName
attributes
if
equals
qName
block
classpathStarted
attributes
if
equals
qName
block
typedefStarted
attributes
if
equals
qName
block
propertyStarted
attributes
if
equals
qName
block
propertiesStarted
attributes
if
equals
qName
block
includeStarted
attributes
if
equals
qName
equals
qName
block
settingsStarted
qName
attributes
if
equals
qName
block
cachesStarted
qName
attributes
if
equals
qName
block
versionMatchersStarted
qName
attributes
if
equals
qName
block
statusesStarted
qName
attributes
if
contains
qName
block
anyConfiguratorStarted
qName
if
equals
qName
block
macrodefStarted
qName
attributes
if
equals
qName
block
moduleStarted
attributes
if
equals
qName
block
credentialsStarted
attributes
catchClause
ex
SAXException
sax
SAXException
getMessage
ex
initCause
ex
throw
sax
catchClause
ex
SAXException
sax
SAXException
getMessage
ex
initCause
ex
throw
sax
credentialsStarted
attributes
Map
String
realm
String
remove
String
host
String
remove
String
userName
String
remove
String
passwd
String
remove
addCredentials
realm
host
userName
passwd
moduleStarted
attributes
Map
put
MODULE_KEY
remove
String
resolver
String
remove
String
branch
String
remove
String
cm
String
remove
String
resolveMode
String
remove
String
matcher
String
remove
matcher
matcher
EXACT_OR_REGEXP
matcher
addModuleConfiguration
attributes
getMatcher
matcher
resolver
branch
cm
resolveMode
macrodefStarted
qName
String
attributes
Map
currentConfiguratorTag
qName
Configurator
MacroDef
macrodef
startMacroDef
String
get
addAttribute
anyConfiguratorStarted
qName
String
currentConfiguratorTag
qName
setRoot
ivy
statusesStarted
qName
String
attributes
Map
currentConfiguratorTag
qName
StatusManager
m
StatusManager
String
defaultStatus
String
get
if
defaultStatus
block
setDefaultStatus
defaultStatus
setStatusManager
m
setRoot
m
versionMatchersStarted
qName
String
attributes
Map
anyConfiguratorStarted
qName
if
equals
String
get
block
configureDefaultVersionMatcher
cachesStarted
qName
String
attributes
Map
anyConfiguratorStarted
qName
defaultLock
String
get
defaultCacheManager
String
get
String
cache
String
get
if
cache
block
setDefaultCache
checkAbsolute
cache
String
up2d
String
get
if
up2d
block
setCheckUpToDate
valueOf
booleanValue
up2d
String
resolutionDir
String
get
if
resolutionDir
block
setDefaultResolutionCacheBasedir
resolutionDir
String
useOrigin
String
get
if
useOrigin
block
setDefaultUseOrigin
valueOf
booleanValue
useOrigin
String
cacheIvyPattern
String
get
if
cacheIvyPattern
block
setDefaultCacheIvyPattern
cacheIvyPattern
String
cacheArtPattern
String
get
if
cacheArtPattern
block
setDefaultCacheArtifactPattern
cacheArtPattern
String
repositoryDir
String
get
if
repositoryDir
block
setDefaultRepositoryCacheBasedir
repositoryDir
settingsStarted
qName
String
attributes
Map
if
equals
qName
deprecatedMessagePrinted
block
deprecated
settings
String
cache
String
get
if
cache
block
deprecated
settings
setDefaultCache
checkAbsolute
cache
String
defaultBranch
String
get
if
defaultBranch
block
setDefaultBranch
defaultBranch
String
defaultResolveMode
String
get
if
defaultResolveMode
block
setDefaultResolveMode
defaultResolveMode
String
validate
String
get
if
validate
block
setValidate
valueOf
booleanValue
validate
String
up2d
String
get
if
up2d
block
deprecated
settings
setCheckUpToDate
valueOf
booleanValue
up2d
String
useRemoteConfig
String
get
if
useRemoteConfig
block
setUseRemoteConfig
valueOf
booleanValue
useRemoteConfig
String
cacheIvyPattern
String
get
if
cacheIvyPattern
block
deprecated
settings
setDefaultCacheIvyPattern
cacheIvyPattern
String
cacheArtPattern
String
get
if
cacheArtPattern
block
deprecated
settings
setDefaultCacheArtifactPattern
cacheArtPattern
defaultResolver
String
get
defaultCM
String
get
defaultLatest
String
get
defaultCircular
String
get
String
requestMethod
String
get
if
equalsIgnoreCase
requestMethod
block
getHttp
setRequestMethod
REQUEST_METHOD_HEAD
if
equalsIgnoreCase
requestMethod
block
getHttp
setRequestMethod
REQUEST_METHOD_GET
if
requestMethod
trim
length
block
throw
IllegalArgumentException
includeStarted
attributes
Map
IvyVariableContainer
variables
IvyVariableContainer
getVariableContainer
setVariableContainer
IvyVariableContainerWrapper
variables
try
String
propFilePath
String
get
URL
settingsURL
if
propFilePath
block
propFilePath
String
get
if
propFilePath
block
throw
IllegalArgumentException
block
try
settingsURL
URL
propFilePath
catchClause
e
settingsURL
URL
settings
propFilePath
verbose
toString
setSettingsVariables
settingsURL
block
settingsURL
urlFromFileAttribute
propFilePath
verbose
settingsURL
if
equals
getProtocol
block
setSettingsVariables
checkAbsolute
getPath
block
setSettingsVariables
settingsURL
parse
configurator
settingsURL
XmlSettingsParser
ivy
setVariableContainer
variables
urlFromFileAttribute
URL
filePath
String
try
return
URL
filePath
catchClause
e
File
incFile
File
filePath
if
isAbsolute
block
return
toURI
toURL
if
equals
settings
getProtocol
block
try
File
settingsFile
File
URI
settings
toExternalForm
return
toURI
toURL
File
getParentFile
filePath
catchClause
e
return
URL
settings
filePath
block
return
URL
settings
filePath
propertiesStarted
attributes
Map
String
propFilePath
String
get
String
environmentPrefix
String
get
if
propFilePath
block
String
overrideStr
String
get
boolean
override
overrideStr
valueOf
booleanValue
overrideStr
verbose
propFilePath
URL
fileUrl
urlFromFileAttribute
propFilePath
loadProperties
fileUrl
override
if
environmentPrefix
block
getVariableContainer
setEnvironmentPrefix
environmentPrefix
block
throw
IllegalArgumentException
propertyStarted
attributes
Map
String
name
String
get
String
value
String
get
String
override
String
get
if
name
block
throw
IllegalArgumentException
if
value
block
throw
IllegalArgumentException
setVariable
name
value
override
valueOf
booleanValue
override
typedefStarted
attributes
Map
String
name
String
get
String
className
String
get
Class
clazz
typeDef
name
className
typeDef
name
clazz
classpathStarted
attributes
Map
String
urlStr
String
get
URL
url
if
urlStr
block
String
file
String
get
if
file
block
throw
IllegalArgumentException
block
url
checkAbsolute
toURI
toURL
file
block
url
URL
urlStr
addClasspathURL
url
inConfiguratorStarted
qName
String
attributes
Map
if
equals
currentConfiguratorTag
getTypeDef
qName
block
String
name
String
get
if
name
block
put
if
indexOf
block
put
name
block
put
name
if
get
block
if
size
block
throw
IllegalArgumentException
size
qName
String
name
String
get
Object
child
if
equals
currentConfiguratorTag
equals
qName
block
child
getResolver
name
if
child
block
throw
IllegalArgumentException
name
if
equals
currentConfiguratorTag
block
child
getLatestStrategy
name
if
child
block
throw
IllegalArgumentException
name
if
equals
currentConfiguratorTag
block
child
getConflictManager
name
if
child
block
throw
IllegalArgumentException
name
if
child
block
throw
IllegalArgumentException
name
addChild
qName
child
block
startCreateChild
qName
for
forControl
Iterator
iter
keySet
iterator
hasNext
block
String
attName
String
next
setAttribute
attName
String
get
attName
endElement
uri
String
localName
String
qName
String
if
getCurrent
block
if
contains
qName
getDepth
block
clear
currentConfiguratorTag
if
equals
qName
getDepth
block
endMacroDef
currentConfiguratorTag
block
endCreateChild
endDocument
if
defaultResolver
block
setDefaultResolver
substitute
defaultResolver
if
defaultCM
block
ConflictManager
conflictManager
getConflictManager
substitute
defaultCM
if
conflictManager
block
throw
IllegalArgumentException
substitute
defaultCM
setDefaultConflictManager
conflictManager
if
defaultLatest
block
LatestStrategy
latestStrategy
getLatestStrategy
substitute
defaultLatest
if
latestStrategy
block
throw
IllegalArgumentException
substitute
defaultLatest
setDefaultLatestStrategy
latestStrategy
if
defaultCacheManager
block
RepositoryCacheManager
cache
getRepositoryCacheManager
substitute
defaultCacheManager
if
cache
block
throw
IllegalArgumentException
substitute
defaultCacheManager
setDefaultRepositoryCacheManager
cache
if
defaultCircular
block
CircularDependencyStrategy
strategy
getCircularDependencyStrategy
substitute
defaultCircular
if
strategy
block
throw
IllegalArgumentException
substitute
defaultCircular
setCircularDependencyStrategy
strategy
if
defaultLock
block
LockStrategy
strategy
getLockStrategy
substitute
defaultLock
if
strategy
block
throw
IllegalArgumentException
substitute
defaultLock
setDefaultLockStrategy
strategy
DefaultHandler
