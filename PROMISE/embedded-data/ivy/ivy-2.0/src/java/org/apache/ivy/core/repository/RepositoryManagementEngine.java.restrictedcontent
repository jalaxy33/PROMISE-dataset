RepositoryManagementEngine
double
THOUSAND
int
KILO
boolean
loaded
Map
revisions
HashMap
Map
errors
HashMap
Map
modules
HashMap
boolean
analyzed
Map
cache
HashMap
Map
dependers
HashMap
SearchEngine
searchEngine
ResolveEngine
resolveEngine
RepositoryManagementEngineSettings
settings
RepositoryManagementEngine
settings
RepositoryManagementEngineSettings
searchEngine
SearchEngine
resolveEngine
ResolveEngine
settings
settings
searchEngine
searchEngine
resolveEngine
resolveEngine
load
long
startingMemoryUse
if
dumpMemoryUsage
block
startingMemoryUse
getUsedMemory
long
startTime
currentTimeMillis
rawinfo
ModuleRevisionId
mrids
searchModules
info
for
forControl
int
i
i
length
i
block
try
loadModuleRevision
mrids
i
catchClause
e
put
mrids
i
getMessage
long
endTime
currentTimeMillis
info
size
size
dumpMemoryUsage
getUsedMemory
startingMemoryUse
KILO
endTime
startTime
THOUSAND
loaded
analyze
ensureLoaded
info
for
forControl
Iterator
iterator
values
iterator
hasNext
block
ModuleDescriptor
md
ModuleDescriptor
next
DependencyDescriptor
dds
getDependencies
for
forControl
int
i
i
length
i
block
ModuleRevisionId
dep
getDependency
dds
i
if
dep
block
warn
dds
i
block
getDependers
add
getModuleRevisionId
dep
progress
analyzed
getRevisionsNumber
int
ensureLoaded
return
size
getModuleIdsNumber
int
ensureLoaded
return
size
getOrphans
Collection
ensureAnalyzed
Collection
orphans
HashSet
keySet
removeAll
keySet
return
orphans
searchModules
ModuleRevisionId
ModuleRevisionId
mrids
listModules
newInstance
ANY_EXPRESSION
ANY_EXPRESSION
ANY_EXPRESSION
ANY_EXPRESSION
INSTANCE
return
mrids
getDependency
ModuleRevisionId
dd
DependencyDescriptor
ModuleRevisionId
askedMrid
getDependencyRevisionId
VersionMatcher
vmatcher
getVersionMatcher
if
isDynamic
askedMrid
block
ModuleRevisionId
mrid
ModuleRevisionId
get
askedMrid
if
mrid
block
Collection
revs
getAllRevisions
askedMrid
for
forControl
Iterator
iterator
iterator
hasNext
block
ModuleDescriptor
md
ModuleDescriptor
next
if
needModuleDescriptor
askedMrid
getResolvedModuleRevisionId
block
if
accept
askedMrid
md
block
mrid
getResolvedModuleRevisionId
break
block
if
accept
askedMrid
getResolvedModuleRevisionId
block
mrid
getResolvedModuleRevisionId
break
if
mrid
block
return
block
put
askedMrid
mrid
return
mrid
block
return
askedMrid
getDependers
Collection
id
ModuleRevisionId
Collection
depders
Collection
get
id
if
depders
block
depders
ArrayList
put
id
depders
return
depders
loadModuleRevision
mrid
ModuleRevisionId
ResolvedModuleRevision
module
getResolver
getDependency
DefaultDependencyDescriptor
mrid
newResolveData
mrid
if
module
block
warn
mrid
block
put
getId
getDescriptor
getAllRevisions
add
getDescriptor
getId
progress
getAllRevisions
Collection
id
ModuleRevisionId
Collection
revisions
Collection
get
getModuleId
if
revisions
block
revisions
TreeSet
Comparator
compare
int
o1
Object
o2
Object
ModuleDescriptor
md1
ModuleDescriptor
o1
ModuleDescriptor
md2
ModuleDescriptor
o2
return
getDefaultLatestStrategy
sort
ArtifactInfo
md1
md2
get
equals
md1
put
getModuleId
revisions
return
revisions
newResolveData
ResolveData
return
ResolveData
resolveEngine
ResolveOptions
ensureAnalyzed
if
analyzed
block
throw
IllegalStateException
ensureLoaded
if
loaded
block
throw
IllegalStateException
