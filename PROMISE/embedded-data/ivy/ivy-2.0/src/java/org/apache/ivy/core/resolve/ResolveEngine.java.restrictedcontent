ResolveEngine
ResolveEngineSettings
settings
EventManager
eventManager
SortEngine
sortEngine
Set
fetchedSet
HashSet
DependencyResolver
dictatorResolver
ResolveEngine
settings
ResolveEngineSettings
eventManager
EventManager
sortEngine
SortEngine
settings
settings
eventManager
eventManager
sortEngine
sortEngine
getDictatorResolver
DependencyResolver
return
dictatorResolver
setDictatorResolver
dictatorResolver
DependencyResolver
dictatorResolver
dictatorResolver
setDictatorResolver
dictatorResolver
resolve
ResolveReport
ivySource
File
return
resolve
toURI
toURL
resolve
ResolveReport
ivySource
URL
return
resolve
ivySource
ResolveOptions
resolve
ResolveReport
mrid
ModuleRevisionId
options
ResolveOptions
changing
boolean
DefaultModuleDescriptor
md
ResolveOptions
optionsToUse
ResolveOptions
options
if
useSpecialConfs
block
ResolvedModuleRevision
rmr
findModule
mrid
ResolveOptions
options
if
rmr
block
verbose
mrid
setLog
LOG_DOWNLOAD_ONLY
md
newCallerInstance
mrid
String
isTransitive
changing
block
String
confs
getConfs
getDescriptor
md
newCallerInstance
newInstance
mrid
getId
getRevision
confs
isTransitive
changing
block
md
newCallerInstance
mrid
getConfs
isTransitive
changing
return
resolve
md
optionsToUse
resolve
ResolveReport
ivySource
URL
options
ResolveOptions
URLResource
res
URLResource
ivySource
ModuleDescriptorParser
parser
getInstance
getParser
res
verbose
parser
ivySource
ModuleDescriptor
md
parseDescriptor
settings
ivySource
isValidate
String
revision
getRevision
if
revision
getResolvedModuleRevisionId
getRevision
block
revision
getWorkingRevision
if
revision
block
setResolvedModuleRevisionId
newInstance
getModuleRevisionId
revision
return
resolve
md
options
resolve
ResolveReport
md
ModuleDescriptor
options
ResolveOptions
DependencyResolver
oldDictator
getDictatorResolver
IvyContext
context
getContext
if
isUseCacheOnly
block
setDictatorResolver
CacheResolver
settings
try
String
confs
getConfs
md
setConfs
confs
if
getResolveId
block
setResolveId
getDefaultResolveId
md
fireIvyEvent
StartResolveEvent
md
confs
long
start
currentTimeMillis
if
equals
getLog
block
info
getResolvedModuleRevisionId
isTransitive
info
asList
confs
block
verbose
getResolvedModuleRevisionId
isTransitive
verbose
asList
confs
verbose
isValidate
verbose
isRefresh
ResolveReport
report
ResolveReport
md
getResolveId
ResolveData
data
ResolveData
options
setResolveData
data
IvyNode
dependencies
getDependencies
md
options
report
setDependencies
asList
dependencies
getArtifactFilter
if
getCheckIfChanged
block
checkIfChanged
ResolutionCacheManager
cacheManager
getResolutionCacheManager
File
ivyFileInCache
getResolvedIvyFileInCache
getResolvedModuleRevisionId
toIvyFile
ivyFileInCache
File
ivyPropertiesInCache
getResolvedIvyPropertiesInCache
getResolvedModuleRevisionId
Properties
props
Properties
if
length
block
IvyNode
root
dependencies
getRoot
for
forControl
int
i
i
length
i
block
if
dependencies
i
hasProblem
block
DependencyDescriptor
dd
dependencies
i
getDependencyDescriptor
root
if
dd
block
ModuleRevisionId
depResolvedId
dependencies
i
getResolvedId
ModuleDescriptor
depDescriptor
dependencies
i
getDescriptor
ModuleRevisionId
depRevisionId
getDependencyRevisionId
if
depResolvedId
block
throw
NullPointerException
dependencies
i
toString
if
depRevisionId
block
throw
NullPointerException
toString
String
rev
getRevision
String
status
depDescriptor
getStatus
put
encodeToString
rev
status
FileOutputStream
out
FileOutputStream
ivyPropertiesInCache
store
out
getResolvedModuleRevisionId
close
verbose
ivyFileInCache
setResolveTime
currentTimeMillis
start
if
isDownload
block
verbose
downloadArtifacts
report
getArtifactFilter
DownloadOptions
setLog
getLog
DownloadOptions
if
isOutputReport
block
outputReport
report
cacheManager
options
verbose
getResolveTime
getDownloadTime
sumupProblems
fireIvyEvent
EndResolveEvent
md
confs
report
return
report
catchClause
ex
error
getMessage
sumupProblems
throw
ex
setResolveData
setDictatorResolver
oldDictator
outputReport
report
ResolveReport
cacheMgr
ResolutionCacheManager
options
ResolveOptions
if
equals
getLog
block
info
getResolveTime
getDownloadTime
block
verbose
getResolveTime
getDownloadTime
setProblemMessages
getProblems
output
getReportOutputters
cacheMgr
options
downloadArtifacts
report
ResolveReport
artifactFilter
Filter
options
DownloadOptions
long
start
currentTimeMillis
IvyNode
dependencies
IvyNode
getDependencies
toArray
IvyNode
getDependencies
size
fireIvyEvent
PrepareDownloadEvent
Artifact
getArtifacts
toArray
Artifact
getArtifacts
size
long
totalSize
for
forControl
int
i
i
length
i
block
checkInterrupted
if
dependencies
i
isCompletelyEvicted
dependencies
i
hasProblem
dependencies
i
getModuleRevision
block
DependencyResolver
resolver
dependencies
i
getModuleRevision
getArtifactResolver
Artifact
selectedArtifacts
dependencies
i
getSelectedArtifacts
artifactFilter
DownloadReport
dReport
download
selectedArtifacts
options
ArtifactDownloadReport
adrs
getArtifactsReports
for
forControl
int
j
j
length
j
block
if
adrs
j
getDownloadStatus
FAILED
block
if
adrs
j
getArtifact
getExtraAttribute
block
warn
adrs
j
getArtifact
adrs
j
getArtifact
getExtraAttribute
block
warn
adrs
j
reportFailure
adrs
j
getArtifact
if
adrs
j
getDownloadStatus
SUCCESSFUL
block
totalSize
adrs
j
getSize
String
dconfs
dependencies
i
getRootModuleConfigurations
for
forControl
int
j
j
length
j
block
if
dependencies
i
isEvicted
dconfs
j
dependencies
i
isBlacklisted
dconfs
j
block
getConfigurationReport
addDependency
dependencies
i
dconfs
j
block
getConfigurationReport
addDependency
dependencies
i
dReport
dconfs
j
setDownloadTime
currentTimeMillis
start
setDownloadSize
totalSize
download
ArtifactDownloadReport
artifact
Artifact
options
DownloadOptions
DependencyResolver
resolver
getResolver
getModuleRevisionId
DownloadReport
r
download
Artifact
artifact
options
return
getArtifactReport
artifact
locate
ArtifactOrigin
artifact
Artifact
DependencyResolver
resolver
getResolver
getModuleRevisionId
return
locate
artifact
download
ArtifactDownloadReport
origin
ArtifactOrigin
options
DownloadOptions
DependencyResolver
resolver
getResolver
getArtifact
getModuleRevisionId
return
download
origin
options
getDependencies
IvyNode
ivySource
URL
options
ResolveOptions
return
getDependencies
getInstance
parseDescriptor
settings
ivySource
isValidate
options
getDependencies
IvyNode
md
ModuleDescriptor
options
ResolveOptions
report
ResolveReport
if
md
block
throw
NullPointerException
String
confs
getConfs
md
Collection
missingConfs
ArrayList
for
forControl
int
i
i
length
i
block
if
confs
i
block
throw
NullPointerException
asList
confs
if
getConfiguration
confs
i
block
add
confs
i
if
isEmpty
block
throw
IllegalArgumentException
size
getModuleRevisionId
missingConfs
IvyContext
context
pushNewCopyContext
try
setConfs
confs
Date
reportDate
Date
ResolveData
data
getResolveData
if
data
block
data
ResolveData
options
setResolveData
data
IvyNode
rootNode
IvyNode
data
md
for
forControl
int
i
i
length
i
block
verbose
confs
i
clear
ConfigurationResolveReport
confReport
if
report
block
confReport
getConfigurationReport
confs
i
if
confReport
block
confReport
ConfigurationResolveReport
md
confs
i
reportDate
options
addReport
confs
i
confReport
setReport
confReport
VisitNode
root
VisitNode
data
rootNode
confs
i
setRequestedConf
confs
i
updateConfsToFetch
singleton
confs
i
boolean
fetched
while
fetched
block
try
fetchDependencies
root
confs
i
fetched
catchClause
restart
verbose
verbose
verbose
getMessage
verbose
clear
for
forControl
Iterator
iter
getNodes
iterator
hasNext
block
IvyNode
dep
IvyNode
next
clean
Collection
nodes
getNodes
Collection
dependencies
LinkedHashSet
size
for
forControl
Iterator
iter
iterator
hasNext
block
IvyNode
node
IvyNode
next
if
node
isRoot
isCompletelyBlacklisted
block
add
node
List
sortedDependencies
sortNodes
dependencies
SILENT
reverse
sortedDependencies
handleTransiviteEviction
md
confs
data
sortedDependencies
return
IvyNode
toArray
IvyNode
size
popContext
handleTransiviteEviction
md
ModuleDescriptor
confs
String
data
ResolveData
sortedDependencies
List
for
forControl
ListIterator
iter
listIterator
hasNext
block
IvyNode
node
IvyNode
next
if
isCompletelyEvicted
block
for
forControl
int
i
i
length
i
block
IvyNodeCallers
Caller
callers
getCallers
confs
i
if
debugConflictResolution
block
debug
getId
confs
i
boolean
allEvicted
length
for
forControl
int
j
j
length
j
block
if
callers
j
getModuleRevisionId
equals
getModuleRevisionId
block
allEvicted
break
block
IvyNode
callerNode
getNode
callers
j
getModuleRevisionId
if
callerNode
block
warn
callers
j
getModuleRevisionId
getNodeIds
getModuleRevisionId
if
isEvicted
confs
i
block
allEvicted
break
block
if
debugConflictResolution
block
debug
getId
getId
if
allEvicted
block
verbose
node
markEvicted
confs
i
block
if
debugConflictResolution
block
debug
getId
fetchDependencies
node
VisitNode
conf
String
shouldBePublic
boolean
checkInterrupted
long
start
currentTimeMillis
if
getParent
block
verbose
getParent
getId
getId
getParentConf
conf
block
verbose
getId
conf
ResolveData
data
getNode
getData
VisitNode
parentVisitNode
getCurrentVisitNode
setCurrentVisitNode
node
DependencyDescriptor
dd
getDependencyDescriptor
VersionMatcher
versionMatcher
getNode
getData
getSettings
getVersionMatcher
if
dd
getRoot
getParent
isDynamic
getDependencyRevisionId
block
resolveConflict
node
conf
if
loadData
conf
shouldBePublic
block
resolveConflict
node
conf
if
isEvicted
isCircular
block
String
confs
getRealConfs
conf
for
forControl
int
i
i
length
i
block
doFetchDependencies
node
confs
i
if
hasProblem
block
if
isEvicted
isCircular
block
String
confs
getRealConfs
conf
for
forControl
int
i
i
length
i
block
doFetchDependencies
node
confs
i
if
isEvicted
block
EvictionData
ed
getEvictedData
if
getSelected
block
for
forControl
Iterator
iter
getSelected
iterator
hasNext
block
IvyNode
selected
IvyNode
next
if
isLoaded
block
updateConfsToFetch
singleton
conf
block
fetchDependencies
gotoNode
selected
conf
if
debugConflictResolution
block
debug
getId
conf
currentTimeMillis
start
setCurrentVisitNode
parentVisitNode
doFetchDependencies
node
VisitNode
conf
String
Configuration
c
getConfiguration
conf
if
c
block
if
isConfRequiredByMergedUsageOnly
conf
block
warn
conf
getResolvedId
if
getParent
block
warn
getParent
getResolvedId
return
boolean
requestedConfSet
if
getRequestedConf
block
setRequestedConf
conf
requestedConfSet
String
extendedConfs
getExtends
if
length
block
updateConfsToFetch
asList
extendedConfs
for
forControl
int
i
i
length
i
block
fetchDependencies
node
extendedConfs
i
DependencyDescriptor
dd
getDependencyDescriptor
if
isDependenciesFetched
getNode
conf
dd
isTransitive
block
Collection
dependencies
getDependencies
conf
for
forControl
Iterator
iter
iterator
hasNext
block
VisitNode
dep
VisitNode
next
useRealNode
String
confs
getRequiredConfigurations
node
conf
for
forControl
int
i
i
length
i
block
fetchDependencies
dep
confs
i
if
isEvicted
hasProblem
block
confs
getConfsToFetch
for
forControl
int
i
i
length
i
block
fetchDependencies
dep
confs
i
markDependenciesFetched
getNode
conf
if
requestedConfSet
block
setRequestedConf
isDependenciesFetched
boolean
node
IvyNode
conf
String
String
key
getDependenciesFetchedKey
node
conf
return
contains
key
markDependenciesFetched
node
IvyNode
conf
String
String
key
getDependenciesFetchedKey
node
conf
add
key
getDependenciesFetchedKey
String
node
IvyNode
conf
String
ModuleRevisionId
moduleRevisionId
getResolvedId
String
key
getOrganisation
getName
getRevision
conf
return
key
resolveConflict
node
VisitNode
conf
String
resolveConflict
node
getParent
conf
EMPTY_SET
resolveConflict
boolean
node
VisitNode
ancestor
VisitNode
conf
String
toevict
Collection
if
ancestor
node
ancestor
block
return
if
checkConflictSolvedEvicted
node
ancestor
block
return
boolean
debugConflictResolution
debugConflictResolution
if
checkConflictSolvedSelected
node
ancestor
block
if
resolveConflict
node
getParent
conf
toevict
block
EvictionData
evictionData
getEvictionDataInRoot
getRootModuleConf
ancestor
if
evictionData
block
if
debugConflictResolution
block
debug
node
getRootModuleConf
markEvicted
evictionData
if
debugConflictResolution
block
debug
node
evictionData
return
block
return
Set
resolvedNodes
getNode
getResolvedNodes
getModuleId
getRootModuleConf
addAll
getNode
getPendingConflicts
getRootModuleConf
getModuleId
Collection
conflicts
computeConflicts
node
ancestor
conf
toevict
resolvedNodes
ConflictManager
conflictManager
getNode
getConflictManager
getModuleId
Collection
resolved
resolveConflicts
node
ancestor
conflicts
conflictManager
if
resolved
block
if
debugConflictResolution
block
debug
node
ancestor
debug
conflicts
getNode
setPendingConflicts
getModuleId
getRootModuleConf
conflicts
return
if
debugConflictResolution
block
debug
node
ancestor
resolved
if
contains
getNode
block
toevict
resolvedNodes
removeAll
resolved
for
forControl
Iterator
iter
iterator
hasNext
block
IvyNode
te
IvyNode
next
markEvicted
getRootModuleConf
getNode
conflictManager
resolved
if
debugConflictResolution
block
debug
te
getEvictedData
getRootModuleConf
getNode
setResolvedNodes
getModuleId
getRootModuleConf
resolved
Collection
evicted
HashSet
getNode
getEvictedNodes
getModuleId
getRootModuleConf
removeAll
resolved
addAll
toevict
getNode
setEvictedNodes
getModuleId
getRootModuleConf
evicted
getNode
setPendingConflicts
getModuleId
getRootModuleConf
EMPTY_SET
return
resolveConflict
node
getParent
conf
toevict
block
if
isEmpty
block
if
debugConflictResolution
block
verbose
conflictManager
conflicts
Collection
evicted
HashSet
getNode
getEvictedNodes
getModuleId
getRootModuleConf
removeAll
resolved
removeAll
resolved
addAll
toevict
add
getNode
getNode
setEvictedNodes
getModuleId
getRootModuleConf
evicted
getNode
setPendingConflicts
getModuleId
getRootModuleConf
EMPTY_SET
markEvicted
ancestor
conflictManager
resolved
if
debugConflictResolution
block
debug
node
getEvictedData
Collection
prevResolved
getNode
getResolvedNodes
getModuleId
getRootModuleConf
boolean
solved
if
equals
resolved
block
getNode
setResolvedNodes
getModuleId
getRootModuleConf
resolved
for
forControl
Iterator
iter
iterator
hasNext
block
IvyNode
sel
IvyNode
next
if
contains
sel
block
solved
resolveConflict
gotoNode
sel
getParent
conf
toevict
return
solved
resolveConflicts
Collection
node
VisitNode
ancestor
VisitNode
conflicts
Collection
conflictManager
ConflictManager
if
getParent
ancestor
conflictManager
getConflictManager
getModuleId
getParent
getNode
getResolvedNodes
getModuleId
getRootModuleConf
equals
conflicts
block
if
debugConflictResolution
block
debug
node
ancestor
conflicts
return
conflicts
block
if
debugConflictResolution
block
debug
node
ancestor
conflicts
return
resolveConflicts
getNode
conflicts
computeConflicts
Collection
node
VisitNode
ancestor
VisitNode
conf
String
toevict
Collection
selectedNodes
Collection
Collection
conflicts
LinkedHashSet
add
getNode
if
removeAll
toevict
isEmpty
getParent
getNode
equals
getNode
block
Collection
deps
getNode
getDependencies
getRootModuleConf
getNode
getConfigurations
getRootModuleConf
for
forControl
Iterator
iter
iterator
hasNext
block
IvyNode
dep
IvyNode
next
if
getModuleId
equals
getModuleId
block
add
dep
addAll
getResolvedNodes
getModuleId
getRootModuleConf
if
isEmpty
block
Collection
parentDepIvyNodes
getParent
getNode
getDependencies
getRootModuleConf
String
getParentConf
for
forControl
Iterator
it
iterator
hasNext
block
IvyNode
parentDep
IvyNode
next
if
getModuleId
equals
getModuleId
block
add
parentDep
block
addAll
selectedNodes
return
conflicts
checkConflictSolvedSelected
boolean
node
VisitNode
ancestor
VisitNode
if
getResolvedRevisions
contains
getResolvedId
getModuleId
block
if
debugConflictResolution
block
debug
node
ancestor
return
return
checkConflictSolvedEvicted
boolean
node
VisitNode
ancestor
VisitNode
if
getEvictedRevisions
contains
getResolvedId
getModuleId
block
if
debugConflictResolution
block
debug
node
ancestor
return
return
findModule
ResolvedModuleRevision
id
ModuleRevisionId
options
ResolveOptions
DependencyResolver
r
getResolver
id
if
r
block
throw
IllegalStateException
getModuleId
DefaultModuleDescriptor
md
newCallerInstance
id
String
if
getResolveId
block
setResolveId
getDefaultResolveId
md
try
return
getDependency
DefaultDependencyDescriptor
id
ResolveData
options
ConfigurationResolveReport
md
options
catchClause
e
throw
RuntimeException
id
e
e
mediate
DependencyDescriptor
dd
DependencyDescriptor
options
ResolveOptions
if
dd
block
return
String
resolveMode
getResolveMode
getResolveMode
getDependencyId
getResolveMode
if
equals
resolveMode
getDynamicConstraintDependencyRevisionId
equals
getDependencyRevisionId
block
return
clone
getDynamicConstraintDependencyRevisionId
block
return
dd
getEventManager
EventManager
return
eventManager
getSettings
ResolveEngineSettings
return
settings
getSortEngine
SortEngine
return
sortEngine
checkInterrupted
getContext
getIvy
checkInterrupted
