PomReader
String
PACKAGING
String
DEPENDENCY
String
DEPENDENCIES
String
DEPENDENCY_MGT
String
PROJECT
String
MODEL
String
GROUP_ID
String
ARTIFACT_ID
String
VERSION
String
DESCRIPTION
String
HOMEPAGE
String
LICENSES
String
LICENSE
String
LICENSE_NAME
String
LICENSE_URL
String
PARENT
String
SCOPE
String
CLASSIFIER
String
OPTIONAL
String
EXCLUSIONS
String
EXCLUSION
String
DISTRIBUTION_MGT
String
RELOCATION
String
PROPERTIES
String
PLUGINS
String
PLUGIN
String
TYPE
HashMap
properties
HashMap
Element
projectElement
Element
parentElement
PomReader
descriptorURL
URL
res
Resource
InputStream
stream
AddDTDFilterInputStream
openStream
try
Document
pomDomDoc
parseToDom
stream
res
EntityResolver
resolveEntity
InputSource
publicId
String
systemId
String
if
systemId
endsWith
block
return
InputSource
getResourceAsStream
PomReader
return
projectElement
getDocumentElement
if
equals
getNodeName
equals
getNodeName
block
throw
SAXParseException
getName
getName
parentElement
getFirstChildElement
projectElement
PARENT
if
stream
block
try
close
catchClause
e
hasParent
boolean
return
parentElement
setProperty
prop
String
val
String
if
containsKey
prop
val
block
put
prop
val
getGroupId
String
String
groupId
getFirstChildText
projectElement
GROUP_ID
if
groupId
block
groupId
getFirstChildText
parentElement
GROUP_ID
return
replaceProps
groupId
getParentGroupId
String
String
groupId
getFirstChildText
parentElement
GROUP_ID
if
groupId
block
groupId
getFirstChildText
projectElement
GROUP_ID
return
replaceProps
groupId
getArtifactId
String
String
val
getFirstChildText
projectElement
ARTIFACT_ID
if
val
block
val
getFirstChildText
parentElement
ARTIFACT_ID
return
replaceProps
val
getParentArtifactId
String
String
val
getFirstChildText
parentElement
ARTIFACT_ID
if
val
block
val
getFirstChildText
projectElement
ARTIFACT_ID
return
replaceProps
val
getVersion
String
String
val
getFirstChildText
projectElement
VERSION
if
val
block
val
getFirstChildText
parentElement
VERSION
return
replaceProps
val
getParentVersion
String
String
val
getFirstChildText
parentElement
VERSION
if
val
block
val
getFirstChildText
projectElement
VERSION
return
replaceProps
val
getPackaging
String
String
val
getFirstChildText
projectElement
PACKAGING
if
val
block
val
return
val
getHomePage
String
String
val
getFirstChildText
projectElement
HOMEPAGE
if
val
block
val
return
val
getDescription
String
String
val
getFirstChildText
projectElement
DESCRIPTION
if
val
block
val
return
trim
getLicenses
License
Element
licenses
getFirstChildElement
projectElement
LICENSES
if
licenses
block
return
License
normalize
List
lics
ArrayList
for
forControl
Iterator
it
getAllChilds
iterator
licenses
hasNext
block
Element
license
Element
next
if
equals
getNodeName
block
String
name
getFirstChildText
license
LICENSE_NAME
String
url
getFirstChildText
license
LICENSE_URL
if
name
url
block
continue
if
name
block
name
add
License
name
url
return
License
toArray
License
size
getRelocation
ModuleRevisionId
Element
distrMgt
getFirstChildElement
projectElement
DISTRIBUTION_MGT
Element
relocation
getFirstChildElement
distrMgt
RELOCATION
if
relocation
block
return
block
String
relocGroupId
getFirstChildText
relocation
GROUP_ID
String
relocArtId
getFirstChildText
relocation
ARTIFACT_ID
String
relocVersion
getFirstChildText
relocation
VERSION
relocGroupId
relocGroupId
getGroupId
relocGroupId
relocArtId
relocArtId
getArtifactId
relocArtId
relocVersion
relocVersion
getVersion
relocVersion
return
newInstance
relocGroupId
relocArtId
relocVersion
getDependencies
List
Element
dependenciesElement
getFirstChildElement
projectElement
DEPENDENCIES
LinkedList
dependencies
LinkedList
if
dependenciesElement
block
NodeList
childs
getChildNodes
for
forControl
int
i
i
getLength
i
block
Node
node
item
i
if
node
Element
equals
getNodeName
block
add
PomDependencyData
Element
node
return
dependencies
getDependencyMgt
List
Element
dependenciesElement
getFirstChildElement
projectElement
DEPENDENCY_MGT
dependenciesElement
getFirstChildElement
dependenciesElement
DEPENDENCIES
LinkedList
dependencies
LinkedList
if
dependenciesElement
block
NodeList
childs
getChildNodes
for
forControl
int
i
i
getLength
i
block
Node
node
item
i
if
node
Element
equals
getNodeName
block
add
PomDependencyMgtElement
Element
node
return
dependencies
PomDependencyMgtElement
Element
depElement
PomDependencyMgtElement
depElement
Element
depElement
depElement
getGroupId
String
String
val
getFirstChildText
depElement
GROUP_ID
return
replaceProps
val
getArtifactId
String
String
val
getFirstChildText
depElement
ARTIFACT_ID
return
replaceProps
val
getVersion
String
String
val
getFirstChildText
depElement
VERSION
return
replaceProps
val
getScope
String
String
val
getFirstChildText
depElement
SCOPE
return
replaceProps
val
PomDependencyMgt
getPlugins
List
LinkedList
plugins
LinkedList
Element
buildElement
getFirstChildElement
projectElement
if
buildElement
block
return
plugins
Element
pluginsElement
getFirstChildElement
buildElement
PLUGINS
if
pluginsElement
block
NodeList
childs
getChildNodes
for
forControl
int
i
i
getLength
i
block
Node
node
item
i
if
node
Element
equals
getNodeName
block
add
PomPluginElement
Element
node
return
plugins
PomPluginElement
Element
pluginElement
PomPluginElement
pluginElement
Element
pluginElement
pluginElement
getGroupId
String
String
val
getFirstChildText
pluginElement
GROUP_ID
return
replaceProps
val
getArtifactId
String
String
val
getFirstChildText
pluginElement
ARTIFACT_ID
return
replaceProps
val
getVersion
String
String
val
getFirstChildText
pluginElement
VERSION
return
replaceProps
val
getScope
String
return
PomDependencyMgt
PomDependencyData
Element
depElement
PomDependencyData
depElement
Element
depElement
depElement
depElement
getScope
String
String
val
getFirstChildText
depElement
SCOPE
return
replaceProps
val
getClassifier
String
String
val
getFirstChildText
depElement
CLASSIFIER
return
replaceProps
val
getType
String
String
val
getFirstChildText
depElement
TYPE
return
replaceProps
val
isOptional
boolean
Element
e
getFirstChildElement
depElement
OPTIONAL
return
e
equalsIgnoreCase
getTextContent
e
getExcludedModules
List
Element
exclusionsElement
getFirstChildElement
depElement
EXCLUSIONS
LinkedList
exclusions
LinkedList
if
exclusionsElement
block
NodeList
childs
getChildNodes
for
forControl
int
i
i
getLength
i
block
Node
node
item
i
if
node
Element
equals
getNodeName
block
String
groupId
getFirstChildText
Element
node
GROUP_ID
String
artifactId
getFirstChildText
Element
node
ARTIFACT_ID
if
groupId
artifactId
block
add
newInstance
groupId
artifactId
return
exclusions
PomDependencyMgtElement
getPomProperties
Map
Map
pomProperties
HashMap
Element
propsEl
getFirstChildElement
projectElement
PROPERTIES
if
propsEl
block
normalize
for
forControl
Iterator
it
getAllChilds
iterator
propsEl
hasNext
block
Element
prop
Element
next
put
getNodeName
getTextContent
prop
return
pomProperties
replaceProps
String
val
String
if
val
block
return
block
return
substituteVariables
trim
val
properties
getTextContent
String
element
Element
StringBuffer
result
StringBuffer
NodeList
childNodes
getChildNodes
for
forControl
int
i
i
getLength
i
block
Node
child
item
i
switch
getNodeType
case
CDATA_SECTION_NODE
TEXT_NODE
append
getNodeValue
break
case
break
return
toString
getFirstChildText
String
parentElem
Element
name
String
Element
node
getFirstChildElement
parentElem
name
if
node
block
return
getTextContent
node
block
return
getFirstChildElement
Element
parentElem
Element
name
String
if
parentElem
block
return
NodeList
childs
getChildNodes
for
forControl
int
i
i
getLength
i
block
Node
node
item
i
if
node
Element
equals
getNodeName
block
return
Element
node
return
getAllChilds
List
parent
Element
List
r
LinkedList
if
parent
block
NodeList
childs
getChildNodes
for
forControl
int
i
i
getLength
i
block
Node
node
item
i
if
node
Element
block
add
node
return
r
AddDTDFilterInputStream
int
MARK
String
DOCTYPE
int
count
byte
prefix
getBytes
AddDTDFilterInputStream
in
InputStream
BufferedInputStream
in
in
mark
MARK
int
byte1
in
read
int
byte2
in
read
int
byte3
in
read
if
byte1
byte2
byte3
block
in
mark
MARK
block
in
reset
int
bytesToSkip
LineNumberReader
reader
LineNumberReader
InputStreamReader
in
String
firstLine
readLine
if
firstLine
block
String
trimmed
trim
if
startsWith
block
int
endIndex
indexOf
String
xmlDecl
substring
endIndex
prefix
xmlDecl
DOCTYPE
bytesToSkip
getBytes
length
in
reset
for
forControl
int
i
i
bytesToSkip
i
block
in
read
read
int
if
count
length
block
return
prefix
count
int
result
read
return
result
read
int
b
byte
off
int
len
int
if
b
block
throw
NullPointerException
if
off
off
length
len
off
len
length
off
len
block
throw
IndexOutOfBoundsException
if
len
block
return
int
nbrBytesCopied
if
count
length
block
int
nbrBytesFromPrefix
min
length
count
len
arraycopy
prefix
count
b
off
nbrBytesFromPrefix
nbrBytesCopied
nbrBytesFromPrefix
if
nbrBytesCopied
len
block
nbrBytesCopied
read
b
off
nbrBytesCopied
len
nbrBytesCopied
count
nbrBytesCopied
return
nbrBytesCopied
FilterInputStream
