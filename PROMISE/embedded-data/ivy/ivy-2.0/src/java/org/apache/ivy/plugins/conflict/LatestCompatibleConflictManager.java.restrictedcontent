LatestCompatibleConflictManager
LatestCompatibleConflictManager
LatestCompatibleConflictManager
name
String
strategy
LatestStrategy
name
strategy
resolveConflicts
Collection
parent
IvyNode
conflicts
Collection
if
size
block
return
conflicts
VersionMatcher
versionMatcher
getSettings
getVersionMatcher
Iterator
iter
iterator
IvyNode
node
IvyNode
next
ModuleRevisionId
mrid
getResolvedId
if
isDynamic
mrid
block
while
hasNext
block
IvyNode
other
IvyNode
next
if
isDynamic
getResolvedId
block
return
if
accept
mrid
getResolvedId
block
if
handleIncompatibleConflict
parent
conflicts
node
other
block
return
if
size
block
Iterator
it
iterator
next
return
singleton
next
Collection
newConflicts
LinkedHashSet
conflicts
remove
node
return
resolveConflicts
parent
newConflicts
block
while
hasNext
block
IvyNode
other
IvyNode
next
if
accept
getResolvedId
mrid
block
if
handleIncompatibleConflict
parent
conflicts
node
other
block
return
return
singleton
node
handleIncompatibleConflict
boolean
parent
IvyNode
conflicts
Collection
node
IvyNode
other
IvyNode
try
IvyNodeArtifactInfo
latest
IvyNodeArtifactInfo
getStrategy
findLatest
toArtifactInfo
asList
IvyNode
node
other
if
latest
block
IvyNode
latestNode
getNode
IvyNode
oldestNode
latestNode
node
other
node
blackListIncompatibleCallerAndRestartResolveIfPossible
getSettings
parent
oldestNode
latestNode
blackListIncompatibleCallerAndRestartResolveIfPossible
getSettings
parent
latestNode
oldestNode
handleUnsolvableConflict
parent
conflicts
node
other
return
block
return
catchClause
ex
return
blackListIncompatibleCallerAndRestartResolveIfPossible
settings
IvySettings
parent
IvyNode
selected
IvyNode
evicted
IvyNode
Stack
callerStack
Stack
push
evicted
Collection
toBlacklist
blackListIncompatibleCaller
getVersionMatcher
parent
selected
evicted
callerStack
if
toBlacklist
block
StringBuffer
blacklisted
StringBuffer
for
forControl
Iterator
iterator
iterator
hasNext
block
IvyNodeBlacklist
blacklist
IvyNodeBlacklist
next
getBlacklistedNode
blacklist
blacklist
append
getBlacklistedNode
if
hasNext
block
append
String
rootModuleConf
getData
getReport
getConfiguration
markEvicted
EvictionData
rootModuleConf
parent
singleton
selected
blacklisted
if
debugConflictResolution
block
debug
evicted
getEvictedData
rootModuleConf
throw
RestartResolveProcess
selected
evicted
blackListIncompatibleCaller
Collection
versionMatcher
VersionMatcher
conflictParent
IvyNode
selectedNode
IvyNode
evictedNode
IvyNode
callerStack
Stack
Collection
blacklisted
ArrayList
IvyNode
node
IvyNode
peek
String
rootModuleConf
getData
getReport
getConfiguration
Caller
callers
getCallers
rootModuleConf
for
forControl
int
i
i
length
i
block
IvyNode
callerNode
findNode
callers
i
getModuleRevisionId
if
isBlacklisted
rootModuleConf
block
continue
if
isDynamic
callers
i
getAskedDependencyId
getData
block
add
IvyNodeBlacklist
conflictParent
selectedNode
evictedNode
node
rootModuleConf
block
if
subList
contains
node
size
block
block
if
callerNode
block
return
push
callerNode
Collection
sub
blackListIncompatibleCaller
versionMatcher
conflictParent
selectedNode
evictedNode
callerStack
pop
if
sub
block
return
block
addAll
sub
if
isEmpty
subList
contains
node
size
block
return
return
blacklisted
handleUnsolvableConflict
parent
IvyNode
conflicts
Collection
node1
IvyNode
node2
IvyNode
throw
StrictConflictException
node1
node2
handleAllBlacklistedRevisions
dd
DependencyDescriptor
foundBlacklisted
Collection
ResolveData
resolveData
getContext
getResolveData
Collection
blacklisted
HashSet
for
forControl
Iterator
iterator
iterator
hasNext
block
ModuleRevisionId
mrid
ModuleRevisionId
next
add
getNode
mrid
for
forControl
Iterator
iterator
iterator
hasNext
block
IvyNode
node
IvyNode
next
IvyNodeBlacklist
bdata
getBlacklistData
getReport
getConfiguration
handleUnsolvableConflict
getConflictParent
asList
Object
getEvictedNode
getSelectedNode
getEvictedNode
getSelectedNode
toString
String
return
getName
LatestConflictManager
