PublishEngine
PublishEngineSettings
settings
EventManager
eventManager
PublishEngine
settings
PublishEngineSettings
eventManager
EventManager
settings
settings
eventManager
eventManager
publish
Collection
mrid
ModuleRevisionId
srcArtifactPattern
Collection
resolverName
String
options
PublishOptions
info
getModuleId
verbose
isValidate
long
start
currentTimeMillis
setSrcIvyPattern
substitute
getSrcIvyPattern
if
getPubBranch
block
setPubbranch
getBranch
if
getPubrevision
block
setPubrevision
getRevision
ModuleRevisionId
pubmrid
newInstance
mrid
getPubBranch
getPubrevision
File
ivyFile
if
getSrcIvyPattern
block
ivyFile
resolveFile
substitute
getSrcIvyPattern
newIvyArtifact
pubmrid
Date
if
exists
block
throw
IllegalArgumentException
mrid
ivyFile
block
ResolutionCacheManager
cacheManager
getResolutionCacheManager
ivyFile
getResolvedIvyFileInCache
mrid
if
exists
block
throw
IllegalStateException
mrid
ivyFile
ModuleDescriptor
md
URL
ivyFileURL
try
ivyFileURL
toURI
toURL
md
getInstance
parseDescriptor
settings
ivyFileURL
if
getSrcIvyPattern
block
if
isUpdate
block
File
tmp
createTempFile
deleteOnExit
String
confs
replaceWildcards
getConfs
md
Set
confsToRemove
HashSet
asList
getConfigurationsNames
removeAll
asList
confs
try
update
ivyFileURL
tmp
setSettings
settings
setStatus
getStatus
getStatus
getStatus
setRevision
getPubrevision
setBranch
getPubBranch
setPubdate
getPubdate
Date
getPubdate
setConfsToExclude
String
toArray
String
size
UpdateOptions
ivyFile
tmp
md
getInstance
parseDescriptor
settings
toURI
toURL
setSrcIvyPattern
getAbsolutePath
catchClause
e
throw
IllegalStateException
mrid
ivyFile
e
if
getPubrevision
equals
getModuleRevisionId
getRevision
block
throw
IllegalArgumentException
ivyFile
getPubrevision
getModuleRevisionId
getRevision
block
setResolvedModuleRevisionId
pubmrid
catchClause
e
throw
RuntimeException
ivyFile
catchClause
e
throw
IllegalStateException
mrid
ivyFile
e
DependencyResolver
resolver
getResolver
resolverName
if
resolver
block
throw
IllegalArgumentException
resolverName
Collection
missing
publish
md
srcArtifactPattern
resolver
options
verbose
currentTimeMillis
start
return
missing
publish
Collection
md
ModuleDescriptor
srcArtifactPattern
Collection
resolver
DependencyResolver
options
PublishOptions
Collection
missing
ArrayList
Set
artifactsSet
LinkedHashSet
String
confs
getConfs
if
confs
length
equals
confs
block
confs
getConfigurationsNames
for
forControl
int
i
i
length
i
block
Artifact
artifacts
getArtifacts
confs
i
for
forControl
int
j
j
length
j
block
add
artifacts
j
Artifact
extraArtifacts
getExtraArtifacts
if
extraArtifacts
block
for
forControl
int
i
i
length
i
block
add
MDArtifact
md
extraArtifacts
i
getName
extraArtifacts
i
getType
extraArtifacts
i
getExt
extraArtifacts
i
getUrl
extraArtifacts
i
getQualifiedExtraAttributes
Map
artifactsFiles
LinkedHashMap
for
forControl
Iterator
iter
iterator
hasNext
block
Artifact
artifact
Artifact
next
for
forControl
Iterator
iterator
iterator
hasNext
block
String
pattern
String
next
File
artifactFile
resolveFile
substitute
substitute
pattern
artifact
if
exists
block
put
artifact
artifactFile
break
if
containsKey
artifact
block
StringBuffer
sb
StringBuffer
append
artifact
for
forControl
Iterator
iterator
iterator
hasNext
block
String
pattern
String
next
append
resolveFile
substitute
pattern
artifact
if
isWarnOnMissing
isHaltOnMissing
block
warn
toString
block
verbose
toString
if
isHaltOnMissing
block
throw
IOException
artifact
add
artifact
if
getSrcIvyPattern
block
Artifact
artifact
newIvyArtifact
md
File
artifactFile
resolveFile
substitute
getSrcIvyPattern
artifact
if
exists
block
String
msg
getModuleRevisionId
artifactFile
if
isWarnOnMissing
isHaltOnMissing
block
warn
msg
block
verbose
msg
if
isHaltOnMissing
block
throw
IOException
artifact
add
artifact
block
put
artifact
artifactFile
boolean
successfullyPublished
try
beginPublishTransaction
getModuleRevisionId
isOverwrite
for
forControl
Iterator
iter
entrySet
iterator
hasNext
block
Map
Entry
entry
Entry
next
Artifact
artifact
Artifact
getKey
File
artifactFile
File
getValue
publish
artifact
artifactFile
resolver
isOverwrite
commitPublishTransaction
successfullyPublished
if
successfullyPublished
block
abortPublishTransaction
return
missing
publish
artifact
Artifact
src
File
resolver
DependencyResolver
overwrite
boolean
getContext
checkInterrupted
fireIvyEvent
StartArtifactPublishEvent
resolver
artifact
src
overwrite
boolean
successful
try
if
exists
block
publish
artifact
src
overwrite
successful
fireIvyEvent
EndArtifactPublishEvent
resolver
artifact
src
overwrite
successful
