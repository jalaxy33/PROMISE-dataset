ModuleInSort
ModuleDescriptor
module
boolean
isSorted
List
loopElements
LinkedList
boolean
isLoopIntermediateElement
ModuleInSort
caller
ModuleInSort
moduleToSort
ModuleDescriptor
module
moduleToSort
isInLoop
boolean
return
isLoopIntermediateElement
isSorted
boolean
if
isSorted
block
debug
getModuleRevisionId
toString
return
block
return
isProcessed
boolean
if
isSorted
isLoopIntermediateElement
block
debug
getModuleRevisionId
toString
return
block
return
setCaller
caller
ModuleInSort
caller
caller
endOfCall
caller
checkLoop
boolean
futurCaller
ModuleInSort
depStrategy
CircularDependencyStrategy
if
caller
block
LinkedList
elemOfLoop
LinkedList
add
module
getModuleRevisionId
for
forControl
ModuleInSort
stackEl
futurCaller
stackEl
stackEl
caller
block
add
getModuleRevisionId
isLoopIntermediateElement
add
stackEl
add
module
getModuleRevisionId
ModuleRevisionId
mrids
ModuleRevisionId
toArray
ModuleRevisionId
size
handleCircularDependency
mrids
return
block
return
addToSortedListIfRequired
sorted
List
if
isLoopIntermediateElement
block
addToSortList
sorted
addToSortList
sortedList
List
for
forControl
Iterator
it
iterator
hasNext
block
ModuleInSort
moduleInLoop
ModuleInSort
next
addToSortList
sortedList
if
isSorted
block
add
module
isSorted
toString
String
return
getModuleRevisionId
toString
getDependencies
DependencyDescriptor
return
getDependencies
logLoopWarning
loopElement
List
warn
formatMessageFromDescriptors
loopElement
match
boolean
descriptor
DependencyDescriptor
versionMatcher
VersionMatcher
ModuleDescriptor
md
module
return
getResolvedModuleRevisionId
getRevision
getResolvedModuleRevisionId
getRevision
equals
getWorkingRevision
accept
getDependencyRevisionId
md
getSortedModuleDescriptor
ModuleDescriptor
return
module
