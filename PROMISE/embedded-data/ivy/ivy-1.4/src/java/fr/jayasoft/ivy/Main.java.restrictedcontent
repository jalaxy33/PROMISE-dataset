Main
getOptions
Options
Option
conf
withArgName
hasArg
withDescription
create
Option
cache
withArgName
hasArg
withDescription
create
Option
ivyfile
withArgName
hasArg
withDescription
create
Option
dependency
withArgName
hasArgs
withDescription
create
Option
confs
withArgName
hasArgs
withDescription
create
Option
retrieve
withArgName
hasArg
withDescription
create
Option
cachepath
withArgName
hasArg
withDescription
create
Option
revision
withArgName
hasArg
withDescription
create
Option
status
withArgName
hasArg
withDescription
create
Option
deliver
withArgName
hasArg
withDescription
create
Option
publishResolver
withArgName
hasArg
withDescription
create
Option
publishPattern
withArgName
hasArg
withDescription
create
Option
realm
withArgName
hasArg
withDescription
create
Option
host
withArgName
hasArg
withDescription
create
Option
username
withArgName
hasArg
withDescription
create
Option
passwd
withArgName
hasArg
withDescription
create
Option
main
withArgName
hasArg
withDescription
create
Option
args
withArgName
hasArgs
withDescription
create
Options
options
Options
addOption
addOption
addOption
addOption
addOption
addOption
addOption
addOption
addOption
addOption
conf
addOption
confs
addOption
cache
addOption
ivyfile
addOption
dependency
addOption
retrieve
addOption
cachepath
addOption
revision
addOption
status
addOption
deliver
addOption
publishResolver
addOption
publishPattern
addOption
realm
addOption
host
addOption
username
addOption
passwd
addOption
main
addOption
args
return
options
main
args
String
Options
options
getOptions
CommandLineParser
parser
GnuParser
try
CommandLine
line
parse
options
args
if
hasOption
block
usage
options
return
if
hasOption
block
init
DefaultMessageImpl
MSG_DEBUG
if
hasOption
block
init
DefaultMessageImpl
MSG_VERBOSE
if
hasOption
block
init
DefaultMessageImpl
MSG_WARN
if
hasOption
block
init
DefaultMessageImpl
MSG_ERR
block
init
DefaultMessageImpl
MSG_INFO
boolean
validate
hasOption
Ivy
ivy
Ivy
addAllVariables
getProperties
if
hasOption
block
setVariable
configureURLHandler
getOptionValue
getOptionValue
getOptionValue
getOptionValue
String
confPath
getOptionValue
if
equals
confPath
block
configureDefault
block
File
conffile
File
confPath
if
exists
block
error
options
conffile
if
isDirectory
block
error
options
conffile
configure
conffile
File
cache
File
substitute
getOptionValue
getDefaultCache
getAbsolutePath
if
exists
block
mkdirs
if
isDirectory
block
error
options
cache
String
confs
if
hasOption
block
confs
getOptionValues
block
confs
String
File
ivyfile
if
hasOption
block
String
dep
getOptionValues
if
length
block
error
options
ivyfile
createTempFile
deleteOnExit
DefaultModuleDescriptor
md
newDefaultInstance
newInstance
dep
dep
DefaultDependencyDescriptor
dd
DefaultDependencyDescriptor
md
newInstance
dep
dep
dep
for
forControl
int
i
i
length
i
block
addDependencyConfiguration
confs
i
addDependency
dd
write
md
ivyfile
confs
String
block
ivyfile
File
substitute
getOptionValue
if
exists
block
error
options
ivyfile
if
isDirectory
block
error
options
ivyfile
ResolveReport
report
resolve
toURL
confs
cache
validate
hasOption
if
hasError
block
exit
ModuleDescriptor
md
getModuleDescriptor
if
length
equals
confs
block
confs
getConfigurationsNames
if
hasOption
block
String
retrievePattern
substitute
getOptionValue
if
indexOf
block
retrievePattern
retrievePattern
retrieve
getModuleRevisionId
getModuleId
confs
cache
retrievePattern
hasOption
hasOption
if
hasOption
block
outputCachePath
ivy
cache
md
confs
getOptionValue
if
hasOption
block
deliver
getResolvedModuleRevisionId
substitute
getOptionValue
cache
substitute
getOptionValue
substitute
getOptionValue
DefaultPublishingDRResolver
validate
if
hasOption
block
publish
getResolvedModuleRevisionId
substitute
getOptionValue
cache
substitute
getOptionValue
getOptionValue
substitute
getOptionValue
validate
if
hasOption
block
invoke
ivy
cache
md
confs
getOptionValue
getOptionValues
catchClause
exp
println
getMessage
usage
options
outputCachePath
ivy
Ivy
cache
File
md
ModuleDescriptor
confs
String
outFile
String
try
String
pathSeparator
getProperty
StringBuffer
buf
StringBuffer
XmlReportParser
parser
XmlReportParser
Collection
all
LinkedHashSet
for
forControl
int
i
i
length
i
block
Artifact
artifacts
getArtifacts
getModuleRevisionId
getModuleId
confs
i
cache
addAll
asList
artifacts
for
forControl
Iterator
iter
iterator
hasNext
block
Artifact
artifact
Artifact
next
append
getArchiveFileInCache
getCanonicalPath
cache
artifact
if
hasNext
block
append
pathSeparator
PrintWriter
writer
PrintWriter
FileOutputStream
outFile
println
toString
close
println
outFile
catchClause
ex
throw
RuntimeException
getMessage
ex
invoke
ivy
Ivy
cache
File
md
ModuleDescriptor
confs
String
mainclass
String
args
String
List
urls
ArrayList
try
XmlReportParser
parser
XmlReportParser
Collection
all
LinkedHashSet
for
forControl
int
i
i
length
i
block
Artifact
artifacts
getArtifacts
getModuleRevisionId
getModuleId
confs
i
cache
addAll
asList
artifacts
for
forControl
Iterator
iter
iterator
hasNext
block
Artifact
artifact
Artifact
next
add
getArchiveFileInCache
toURL
cache
artifact
catchClause
ex
throw
RuntimeException
getMessage
ex
URLClassLoader
classLoader
URLClassLoader
URL
toArray
URL
size
getClassLoader
Main
try
Class
c
loadClass
mainclass
Method
mainMethod
getMethod
Class
String
invoke
Object
args
catchClause
cnfe
throw
RuntimeException
mainclass
cnfe
catchClause
e
throw
RuntimeException
mainclass
e
catchClause
e
throw
RuntimeException
mainclass
e
catchClause
e
throw
RuntimeException
mainclass
e
catchClause
e
throw
RuntimeException
mainclass
e
configureURLHandler
realm
String
host
String
username
String
passwd
String
addCredentials
realm
host
username
passwd
URLHandlerDispatcher
dispatcher
URLHandlerDispatcher
URLHandler
httpHandler
getHttp
setDownloader
httpHandler
setDownloader
httpHandler
setDefault
dispatcher
error
options
Options
msg
String
println
msg
usage
options
exit
usage
options
Options
HelpFormatter
formatter
HelpFormatter
printHelp
options
