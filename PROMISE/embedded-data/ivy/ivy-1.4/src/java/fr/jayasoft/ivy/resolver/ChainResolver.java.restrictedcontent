ChainResolver
ResolvedModuleRevisionArtifactInfo
ResolvedModuleRevision
_rmr
ResolvedModuleRevisionArtifactInfo
rmr
ResolvedModuleRevision
_rmr
rmr
getRevision
String
return
getId
getRevision
getLastModified
long
return
getPublicationDate
getTime
ArtifactInfo
boolean
_returnFirst
List
_chain
ArrayList
boolean
_dual
add
resolver
DependencyResolver
add
resolver
getDependency
ResolvedModuleRevision
dd
DependencyDescriptor
data
ResolveData
data
ResolveData
data
doValidate
data
ResolvedModuleRevision
ret
List
errors
ArrayList
for
forControl
Iterator
iter
iterator
hasNext
block
DependencyResolver
resolver
DependencyResolver
next
LatestStrategy
oldLatest
setLatestIfRequired
resolver
getLatestStrategy
ResolvedModuleRevision
mr
try
mr
getDependency
dd
data
catchClause
ex
verbose
dd
resolver
ex
add
ex
if
oldLatest
block
setLatest
resolver
oldLatest
checkInterrupted
if
mr
block
boolean
shouldReturn
_returnFirst
shouldReturn
getIvy
getVersionMatcher
isDynamic
getDependencyRevisionId
ret
getDescriptor
isDefault
if
shouldReturn
block
String
mrDesc
getId
getDescriptor
isDefault
getResolver
getName
debug
mrDesc
ret
if
ret
block
debug
mrDesc
ret
mr
if
isAfter
mr
ret
getDate
block
debug
mrDesc
ret
mr
if
getDescriptor
isDefault
getDescriptor
isDefault
block
debug
mrDesc
ret
mr
block
debug
mrDesc
if
getIvy
getVersionMatcher
isDynamic
getDependencyRevisionId
getDescriptor
isDefault
block
debug
mrDesc
return
resolvedRevision
mr
block
return
resolvedRevision
mr
if
ret
isEmpty
block
if
size
block
Exception
ex
Exception
get
if
ex
RuntimeException
block
throw
RuntimeException
ex
if
ex
ParseException
block
throw
ParseException
ex
block
throw
RuntimeException
toString
ex
block
StringBuffer
err
StringBuffer
for
forControl
Iterator
iter
iterator
hasNext
block
Exception
ex
Exception
next
append
append
ex
setLength
length
throw
RuntimeException
dd
err
return
resolvedRevision
ret
resolvedRevision
ResolvedModuleRevision
mr
ResolvedModuleRevision
if
isDual
mr
block
return
ResolvedModuleRevisionProxy
mr
block
return
mr
setLatestIfRequired
LatestStrategy
resolver
DependencyResolver
latestStrategy
LatestStrategy
String
latestName
getLatestStrategyName
resolver
if
latestName
equals
latestName
block
LatestStrategy
oldLatest
getLatest
resolver
setLatest
resolver
latestStrategy
return
oldLatest
block
return
isAfter
boolean
rmr1
ResolvedModuleRevision
rmr2
ResolvedModuleRevision
date
Date
ArtifactInfo
ais
ArtifactInfo
ResolvedModuleRevisionArtifactInfo
rmr2
ResolvedModuleRevisionArtifactInfo
rmr1
return
getLatestStrategy
findLatest
ais
date
ais
reportFailure
for
forControl
Iterator
iter
iterator
hasNext
block
DependencyResolver
resolver
DependencyResolver
next
reportFailure
reportFailure
art
Artifact
for
forControl
Iterator
iter
iterator
hasNext
block
DependencyResolver
resolver
DependencyResolver
next
reportFailure
art
download
DownloadReport
artifacts
Artifact
ivy
Ivy
cache
File
useOrigin
boolean
List
artifactsToDownload
ArrayList
asList
artifacts
DownloadReport
report
DownloadReport
for
forControl
Iterator
iter
iterator
hasNext
isEmpty
block
DependencyResolver
resolver
DependencyResolver
next
DownloadReport
r
download
Artifact
toArray
Artifact
size
ivy
cache
useOrigin
ArtifactDownloadReport
adr
getArtifactsReports
for
forControl
int
i
i
length
i
block
if
adr
i
getDownloadStatus
FAILED
block
remove
adr
i
getArtifact
addArtifactReport
adr
i
for
forControl
Iterator
iter
iterator
hasNext
block
Artifact
art
Artifact
next
ArtifactDownloadReport
adr
ArtifactDownloadReport
art
setDownloadStatus
FAILED
addArtifactReport
adr
return
report
getResolvers
List
return
_chain
publish
artifact
Artifact
src
File
overwrite
boolean
if
isEmpty
block
throw
IllegalStateException
DependencyResolver
get
isReturnFirst
boolean
return
_returnFirst
setReturnFirst
returnFirst
boolean
_returnFirst
returnFirst
dumpConfig
verbose
getName
_chain
debug
isReturnFirst
debug
isDual
for
forControl
Iterator
iter
iterator
hasNext
block
DependencyResolver
r
DependencyResolver
next
debug
getName
exists
boolean
artifact
Artifact
for
forControl
Iterator
iter
iterator
hasNext
block
DependencyResolver
resolver
DependencyResolver
next
if
exists
artifact
block
return
return
setLatest
resolver
DependencyResolver
latest
LatestStrategy
if
resolver
HasLatestStrategy
block
HasLatestStrategy
r
HasLatestStrategy
resolver
setLatestStrategy
latest
getLatest
LatestStrategy
resolver
DependencyResolver
if
resolver
HasLatestStrategy
block
HasLatestStrategy
r
HasLatestStrategy
resolver
return
getLatestStrategy
return
getLatestStrategyName
String
resolver
DependencyResolver
if
resolver
HasLatestStrategy
block
HasLatestStrategy
r
HasLatestStrategy
resolver
return
getLatest
return
setDual
b
boolean
_dual
b
isDual
boolean
return
_dual
AbstractResolver
