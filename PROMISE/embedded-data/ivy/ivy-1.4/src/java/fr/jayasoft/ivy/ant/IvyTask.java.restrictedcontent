IvyTask
String
ANT_PROJECT_CONTEXT_KEY
Boolean
_validate
doValidate
boolean
ivy
Ivy
if
_validate
block
return
booleanValue
return
doValidate
isValidate
boolean
return
_validate
booleanValue
setValidate
validate
boolean
_validate
valueOf
validate
getIvyInstance
Ivy
ensureMessageInitialised
Object
ref
getProject
getReference
if
ref
ref
Map
block
throw
BuildException
ref
getClass
getClass
getClassLoader
Map
instances
Map
ref
if
instances
containsKey
Ivy
block
verbose
IvyConfigure
configure
IvyConfigure
setProject
getProject
execute
instances
Map
getProject
getReference
if
instances
containsKey
Ivy
block
throw
BuildException
return
Ivy
get
Ivy
ensureMessageInitialised
if
isInitialised
block
init
AntMessageImpl
setIvyInstance
ivy
Ivy
getProject
addReference
ivy
if
ivy
block
debug
getProject
ivy
getClass
getName
getClass
getClassLoader
Map
instances
Map
getProject
getReference
if
instances
block
instances
HashMap
getProject
addReference
instances
put
getClass
ivy
setResolved
report
ResolveReport
keep
boolean
ModuleDescriptor
md
getModuleDescriptor
String
confs
getConfigurations
if
keep
block
getProject
addReference
report
getProject
addReference
confs
getProject
addReference
md
String
suffix
getModuleRevisionId
getModuleId
getOrganisation
getModuleRevisionId
getModuleId
getName
getProject
addReference
suffix
report
getProject
addReference
suffix
md
getProject
addReference
suffix
confs
ensureResolved
haltOnFailure
boolean
useOrigin
boolean
org
String
module
String
ensureResolved
haltOnFailure
useOrigin
org
module
ensureResolved
haltOnFailure
boolean
useOrigin
boolean
transitive
boolean
org
String
module
String
conf
String
ensureMessageInitialised
String
confs
getConfsToResolve
org
module
conf
if
length
block
IvyResolve
resolve
createResolve
haltOnFailure
useOrigin
setTransitive
transitive
setConf
join
confs
execute
getConfsToResolve
String
org
String
module
String
conf
String
strict
boolean
ModuleDescriptor
reference
ModuleDescriptor
getResolvedDescriptor
org
module
strict
debug
if
reference
block
debug
if
conf
block
return
String
block
return
splitConfs
conf
if
conf
block
String
rconfs
getResolvedConfigurations
org
module
strict
String
confs
if
equals
conf
block
confs
getConfigurationsNames
block
confs
splitConfs
conf
HashSet
rconfsSet
HashSet
asList
rconfs
HashSet
confsSet
HashSet
asList
confs
debug
rconfsSet
debug
confsSet
removeAll
rconfsSet
debug
confsSet
return
String
toArray
String
size
block
debug
return
String
getResolvedConfigurations
String
org
String
module
String
strict
boolean
return
String
getReference
org
module
strict
getResolvedDescriptor
Object
org
String
module
String
return
getResolvedDescriptor
org
module
getResolvedDescriptor
Object
org
String
module
String
strict
boolean
return
getReference
org
module
strict
getReference
Object
prefix
String
org
String
module
String
strict
boolean
Object
reference
if
org
module
block
reference
getProject
getReference
prefix
org
module
if
strict
reference
block
reference
getProject
getReference
prefix
return
reference
getResolvedReport
ResolveReport
org
String
module
String
return
getResolvedReport
org
module
getResolvedReport
ResolveReport
org
String
module
String
strict
boolean
return
ResolveReport
getReference
org
module
strict
createResolve
IvyResolve
haltOnFailure
boolean
useOrigin
boolean
verbose
IvyResolve
resolve
IvyResolve
setProject
getProject
setHaltonfailure
haltOnFailure
setUseOrigin
useOrigin
if
_validate
block
setValidate
booleanValue
return
resolve
shouldResolve
boolean
org
String
module
String
ensureMessageInitialised
if
org
module
block
return
Object
reference
getResolvedDescriptor
org
module
return
reference
splitConfs
String
conf
String
String
confs
split
for
forControl
int
i
i
length
i
block
confs
i
confs
i
trim
return
confs
mergeConfs
String
conf
String
return
join
conf
DateFormat
DATE_FORMAT
SimpleDateFormat
getPubDate
Date
date
String
def
Date
if
date
block
if
equalsIgnoreCase
date
block
return
Date
try
return
parse
date
catchClause
ex
throw
BuildException
date
block
return
def
getProperty
String
value
String
ivy
Ivy
name
String
if
value
block
return
getProperty
ivy
name
block
value
substitute
value
debug
name
value
return
value
getProperty
String
ivy
Ivy
name
String
String
val
getVariable
name
if
val
block
val
substitute
getProject
getProperty
name
if
val
block
debug
name
val
block
debug
name
block
val
substitute
val
debug
name
val
return
val
setProject
project
Project
setProject
project
getContext
set
ANT_PROJECT_CONTEXT_KEY
project
Task
