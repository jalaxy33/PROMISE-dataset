Ivy
getCurrent
Ivy
Ivy
cur
getContext
getIvy
if
cur
block
cur
Ivy
getContext
setIvy
cur
return
cur
SimpleDateFormat
DATE_FORMAT
SimpleDateFormat
String
DEFAULT_CACHE_ARTIFACT_PATTERN
String
DEFAULT_CACHE_DATA_FILE_PATTERN
String
DEFAULT_CACHE_IVY_PATTERN
String
DEFAULT_CACHE_RESOLVED_IVY_PATTERN
String
DEFAULT_CACHE_RESOLVED_IVY_PROPERTIES_PATTERN
Map
_typeDefs
HashMap
Map
_resolversMap
HashMap
DependencyResolver
_defaultResolver
DependencyResolver
_dictatorResolver
String
_defaultResolverName
File
_defaultCache
String
_defaultBranch
boolean
_checkUpToDate
Map
_moduleConfigurations
LinkedHashMap
Map
_conflictsManager
HashMap
Map
_latestStrategies
HashMap
Map
_namespaces
HashMap
Map
_matchers
HashMap
Map
_reportOutputters
HashMap
Map
_versionMatchers
HashMap
Map
_circularDependencyStrategies
HashMap
Map
_variables
HashMap
String
_cacheIvyPattern
DEFAULT_CACHE_IVY_PATTERN
String
_cacheResolvedIvyPattern
DEFAULT_CACHE_RESOLVED_IVY_PATTERN
String
_cacheResolvedIvyPropertiesPattern
DEFAULT_CACHE_RESOLVED_IVY_PROPERTIES_PATTERN
String
_cacheArtifactPattern
DEFAULT_CACHE_ARTIFACT_PATTERN
String
_cacheDataFilePattern
DEFAULT_CACHE_DATA_FILE_PATTERN
boolean
_validate
LatestStrategy
_defaultLatestStrategy
ConflictManager
_defaultConflictManager
CircularDependencyStrategy
_circularDependencyStrategy
List
_listingIgnore
ArrayList
boolean
_repositoriesConfigured
boolean
_useRemoteConfig
File
_defaultUserDir
Set
_fetchedSet
HashSet
List
_classpathURLs
ArrayList
ClassLoader
_classloader
StatusManager
_statusManager
long
_interruptTimeout
boolean
_interrupted
Ivy
setVariable
getResource
toExternalForm
Ivy
String
ivyTypeDefs
getProperty
if
ivyTypeDefs
block
String
files
split
for
forControl
int
i
i
length
i
block
try
typeDefs
FileInputStream
File
files
i
trim
catchClause
e
warn
files
i
trim
catchClause
e
warn
files
i
trim
getMessage
block
try
typeDefs
getResourceAsStream
Ivy
catchClause
e
warn
LatestLexicographicStrategy
latestLexicographicStrategy
LatestLexicographicStrategy
LatestRevisionStrategy
latestRevisionStrategy
LatestRevisionStrategy
LatestTimeStrategy
latestTimeStrategy
LatestTimeStrategy
addLatestStrategy
latestRevisionStrategy
addLatestStrategy
latestLexicographicStrategy
addLatestStrategy
latestTimeStrategy
addConflictManager
LatestConflictManager
latestRevisionStrategy
addConflictManager
LatestConflictManager
latestTimeStrategy
addConflictManager
NoConflictManager
addConflictManager
StrictConflictManager
addMatcher
getInstance
addMatcher
getInstance
addMatcher
getInstance
addMatcher
getInstance
addReportOutputter
XmlReportOutputter
addReportOutputter
LogReportOutputter
configureDefaultCircularDependencyStrategies
add
add
add
addSystemProperties
addTransferListener
TransferListener
transferProgress
evt
TransferEvent
switch
getEventType
case
TRANSFER_PROGRESS
progress
break
case
TRANSFER_COMPLETED
endProgress
getTotalLength
break
case
break
getContext
setIvy
addSystemProperties
addAllVariables
getProperties
configureRepositories
remote
boolean
getContext
setIvy
if
_repositoriesConfigured
block
Properties
props
Properties
boolean
configured
if
_useRemoteConfig
remote
block
try
URL
url
URL
verbose
url
load
getDefault
openStream
url
configured
catchClause
ex
verbose
getMessage
props
Properties
if
configured
block
try
load
getResourceAsStream
Ivy
catchClause
e
error
getMessage
addAllVariables
props
_repositoriesConfigured
typeDefs
stream
InputStream
typeDefs
stream
typeDefs
stream
InputStream
silentFail
boolean
getContext
setIvy
try
Properties
p
Properties
load
stream
typeDefs
p
silentFail
close
typeDefs
p
Properties
typeDefs
p
typeDefs
p
Properties
silentFail
boolean
getContext
setIvy
for
forControl
Iterator
iter
keySet
iterator
hasNext
block
String
name
String
next
typeDef
name
getProperty
name
silentFail
configure
configurationFile
File
getContext
setIvy
info
configurationFile
long
start
currentTimeMillis
setConfigurationVariables
configurationFile
if
getVariable
block
setDefaultIvyUserDir
File
getVariable
block
getDefaultIvyUserDir
getDefaultCache
loadDefaultProperties
try
parse
toURL
XmlIvyConfigurationParser
catchClause
e
IllegalArgumentException
iae
IllegalArgumentException
configurationFile
initCause
e
throw
iae
setVariable
getDefaultIvyUserDir
getAbsolutePath
verbose
currentTimeMillis
start
dumpConfig
configure
configurationURL
URL
getContext
setIvy
info
configurationURL
long
start
currentTimeMillis
setConfigurationVariables
configurationURL
if
getVariable
block
setDefaultIvyUserDir
File
getVariable
block
getDefaultIvyUserDir
getDefaultCache
loadDefaultProperties
parse
configurationURL
XmlIvyConfigurationParser
setVariable
getDefaultIvyUserDir
getAbsolutePath
verbose
currentTimeMillis
start
dumpConfig
loadDefaultProperties
loadProperties
getResource
Ivy
configureDefault
configure
getDefaultConfigurationURL
setConfigurationVariables
configurationFile
File
getContext
setIvy
try
setVariable
getParent
File
getAbsolutePath
setVariable
getAbsolutePath
setVariable
toURL
toExternalForm
catchClause
e
IllegalArgumentException
iae
IllegalArgumentException
configurationFile
initCause
e
throw
iae
setConfigurationVariables
configurationURL
URL
getContext
setIvy
String
confURL
toExternalForm
setVariable
confURL
int
slashIndex
lastIndexOf
if
slashIndex
block
setVariable
substring
slashIndex
block
warn
dumpConfig
verbose
getDefaultCache
verbose
getDefaultResolver
debug
getDefaultLatestStrategy
debug
getDefaultConflictManager
debug
getCircularDependencyStrategy
debug
doValidate
debug
isCheckUpToDate
debug
getCacheIvyPattern
debug
getCacheArtifactPattern
if
isEmpty
block
verbose
size
for
forControl
Iterator
iter
iterator
hasNext
block
debug
next
verbose
size
for
forControl
Iterator
iter
values
iterator
hasNext
block
DependencyResolver
resolver
DependencyResolver
next
dumpConfig
if
isEmpty
block
debug
for
forControl
Iterator
iter
keySet
iterator
hasNext
block
ModuleIdMatcher
midm
ModuleIdMatcher
next
ModuleSettings
s
ModuleSettings
get
midm
debug
midm
s
loadProperties
url
URL
loadProperties
url
loadProperties
url
URL
overwrite
boolean
loadProperties
openStream
overwrite
loadProperties
file
File
loadProperties
file
loadProperties
file
File
overwrite
boolean
loadProperties
FileInputStream
file
overwrite
loadProperties
stream
InputStream
overwrite
boolean
try
Properties
properties
Properties
load
stream
addAllVariables
properties
overwrite
if
stream
block
try
close
catchClause
e
setVariable
varName
String
value
String
setVariable
varName
value
setVariable
varName
String
value
String
overwrite
boolean
if
overwrite
containsKey
varName
block
debug
varName
value
put
varName
substitute
value
block
debug
varName
value
addAllVariables
variables
Map
addAllVariables
variables
addAllVariables
variables
Map
overwrite
boolean
for
forControl
Iterator
iter
keySet
iterator
hasNext
block
String
key
String
next
String
val
String
get
key
setVariable
key
val
overwrite
substitute
String
str
String
return
substituteVariables
str
getVariables
getVariables
Map
return
_variables
typeDef
Class
name
String
className
String
return
typeDef
name
className
typeDef
Class
name
String
className
String
silentFail
boolean
Class
clazz
classForName
className
silentFail
if
clazz
block
put
name
clazz
return
clazz
classForName
Class
className
String
silentFail
boolean
try
return
getClassLoader
loadClass
className
catchClause
e
if
silentFail
block
info
className
_classpathURLs
return
block
throw
RuntimeException
className
_classpathURLs
getClassLoader
ClassLoader
if
_classloader
block
if
isEmpty
block
_classloader
getClassLoader
Ivy
block
_classloader
URLClassLoader
URL
toArray
URL
size
getClassLoader
Ivy
return
_classloader
addClasspathURL
url
URL
add
url
_classloader
getTypeDefs
Map
return
_typeDefs
getTypeDef
Class
name
String
return
Class
get
name
addConfigured
resolver
DependencyResolver
addResolver
resolver
addConfigured
parser
ModuleDescriptorParser
getInstance
addParser
parser
addResolver
resolver
DependencyResolver
if
resolver
block
throw
NullPointerException
if
resolver
IvyAware
block
IvyAware
resolver
put
getName
resolver
if
resolver
ChainResolver
block
List
subresolvers
ChainResolver
resolver
for
forControl
Iterator
iter
iterator
hasNext
block
DependencyResolver
dr
DependencyResolver
next
addResolver
dr
if
resolver
DualResolver
block
DependencyResolver
ivyResolver
DualResolver
resolver
if
ivyResolver
block
addResolver
ivyResolver
DependencyResolver
artifactResolver
DualResolver
resolver
if
artifactResolver
block
addResolver
artifactResolver
setDefaultCache
cacheDirectory
File
_defaultCache
cacheDirectory
setDefaultResolver
resolverName
String
checkResolverName
resolverName
_defaultResolverName
resolverName
checkResolverName
resolverName
String
if
resolverName
containsKey
resolverName
block
throw
IllegalArgumentException
resolverName
addModuleConfiguration
mid
ModuleId
matcher
PatternMatcher
resolverName
String
branch
String
conflictManager
String
checkResolverName
resolverName
put
ModuleIdMatcher
mid
matcher
ModuleSettings
resolverName
branch
conflictManager
getDefaultIvyUserDir
File
if
_defaultUserDir
block
if
getVariable
block
setDefaultIvyUserDir
File
getVariable
verbose
_defaultUserDir
block
setDefaultIvyUserDir
File
getProperty
verbose
_defaultUserDir
return
_defaultUserDir
setDefaultIvyUserDir
defaultUserDir
File
_defaultUserDir
defaultUserDir
setVariable
getAbsolutePath
setVariable
getAbsolutePath
getDefaultCache
File
if
_defaultCache
block
_defaultCache
File
getDefaultIvyUserDir
verbose
_defaultCache
return
_defaultCache
getResolver
DependencyResolver
moduleId
ModuleId
if
_dictatorResolver
block
return
_dictatorResolver
String
resolverName
getResolverName
moduleId
return
getResolver
resolverName
getResolver
DependencyResolver
resolverName
String
if
_dictatorResolver
block
return
_dictatorResolver
DependencyResolver
resolver
DependencyResolver
get
resolverName
if
resolver
block
error
resolverName
return
resolver
getDefaultResolver
DependencyResolver
if
_dictatorResolver
block
return
_dictatorResolver
if
_defaultResolver
block
_defaultResolver
DependencyResolver
get
_defaultResolverName
return
_defaultResolver
getResolverName
String
moduleId
ModuleId
for
forControl
Iterator
iter
keySet
iterator
hasNext
block
ModuleIdMatcher
midm
ModuleIdMatcher
next
if
matches
moduleId
block
ModuleSettings
ms
ModuleSettings
get
midm
if
getResolverName
block
return
getResolverName
return
_defaultResolverName
getDefaultBranch
String
moduleId
ModuleId
for
forControl
Iterator
iter
keySet
iterator
hasNext
block
ModuleIdMatcher
midm
ModuleIdMatcher
next
if
matches
moduleId
block
ModuleSettings
ms
ModuleSettings
get
midm
if
getBranch
block
return
getBranch
return
getDefaultBranch
getDefaultBranch
String
return
_defaultBranch
setDefaultBranch
defaultBranch
String
_defaultBranch
defaultBranch
getConflictManager
ConflictManager
moduleId
ModuleId
for
forControl
Iterator
iter
keySet
iterator
hasNext
block
ModuleIdMatcher
midm
ModuleIdMatcher
next
if
matches
moduleId
block
ModuleSettings
ms
ModuleSettings
get
midm
if
getConflictManager
block
ConflictManager
cm
getConflictManager
getConflictManager
if
cm
block
throw
IllegalStateException
getConflictManager
return
cm
return
getDefaultConflictManager
addConfigured
cm
ConflictManager
addConflictManager
getName
cm
getConflictManager
ConflictManager
name
String
if
equals
name
block
return
getDefaultConflictManager
return
ConflictManager
get
name
addConflictManager
name
String
cm
ConflictManager
if
cm
IvyAware
block
IvyAware
cm
put
name
cm
addConfigured
latest
LatestStrategy
addLatestStrategy
getName
latest
getLatestStrategy
LatestStrategy
name
String
if
equals
name
block
return
getDefaultLatestStrategy
return
LatestStrategy
get
name
addLatestStrategy
name
String
latest
LatestStrategy
if
latest
IvyAware
block
IvyAware
latest
put
name
latest
addConfigured
ns
Namespace
addNamespace
ns
getNamespace
Namespace
name
String
if
equals
name
block
return
getSystemNamespace
return
Namespace
get
name
getSystemNamespace
Namespace
return
SYSTEM_NAMESPACE
addNamespace
ns
Namespace
if
ns
IvyAware
block
IvyAware
ns
put
getName
ns
addConfigured
m
PatternMatcher
addMatcher
m
getMatcher
PatternMatcher
name
String
return
PatternMatcher
get
name
addMatcher
m
PatternMatcher
if
m
IvyAware
block
IvyAware
m
put
getName
m
addConfigured
outputter
ReportOutputter
addReportOutputter
outputter
getReportOutputter
ReportOutputter
name
String
return
ReportOutputter
get
name
addReportOutputter
outputter
ReportOutputter
if
outputter
IvyAware
block
IvyAware
outputter
put
getName
outputter
getReportOutputters
ReportOutputter
return
ReportOutputter
values
toArray
ReportOutputter
size
addConfigured
vmatcher
VersionMatcher
addVersionMatcher
vmatcher
getVersionMatcher
VersionMatcher
name
String
return
VersionMatcher
get
name
addVersionMatcher
vmatcher
VersionMatcher
if
vmatcher
IvyAware
block
IvyAware
vmatcher
put
getName
vmatcher
if
_versionMatcher
block
_versionMatcher
ChainVersionMatcher
addVersionMatcher
ExactVersionMatcher
if
_versionMatcher
ChainVersionMatcher
block
ChainVersionMatcher
chain
ChainVersionMatcher
_versionMatcher
add
vmatcher
getVersionMatchers
VersionMatcher
return
VersionMatcher
values
toArray
VersionMatcher
size
getVersionMatcher
VersionMatcher
if
_versionMatcher
block
configureDefaultVersionMatcher
return
_versionMatcher
configureDefaultVersionMatcher
addVersionMatcher
LatestVersionMatcher
addVersionMatcher
SubVersionMatcher
addVersionMatcher
VersionRangeMatcher
getCircularDependencyStrategy
CircularDependencyStrategy
if
_circularDependencyStrategy
block
_circularDependencyStrategy
getCircularDependencyStrategy
return
_circularDependencyStrategy
getCircularDependencyStrategy
CircularDependencyStrategy
name
String
if
equals
name
block
name
return
CircularDependencyStrategy
get
name
setCircularDependencyStrategy
strategy
CircularDependencyStrategy
_circularDependencyStrategy
strategy
addConfigured
strategy
CircularDependencyStrategy
addCircularDependencyStrategy
strategy
addCircularDependencyStrategy
strategy
CircularDependencyStrategy
put
getName
strategy
configureDefaultCircularDependencyStrategies
addCircularDependencyStrategy
getInstance
addCircularDependencyStrategy
getInstance
addCircularDependencyStrategy
getInstance
check
boolean
ivyFile
URL
resolvername
String
try
getContext
setIvy
boolean
result
ModuleDescriptor
md
getInstance
parseDescriptor
ivyFile
doValidate
if
resolvername
block
DependencyResolver
resolver
getResolver
resolvername
String
confs
getConfigurationsNames
Set
artifacts
HashSet
for
forControl
int
i
i
length
i
block
addAll
asList
getArtifacts
confs
i
for
forControl
Iterator
iter
iterator
hasNext
block
Artifact
art
Artifact
next
if
exists
art
block
info
art
result
DependencyDescriptor
dds
getDependencies
ResolveData
data
ResolveData
getDefaultCache
Date
for
forControl
int
i
i
length
i
block
String
masterConfs
dds
i
getModuleConfigurations
for
forControl
int
j
j
length
j
block
if
equals
masterConfs
j
trim
getConfiguration
masterConfs
j
block
info
ivyFile
dds
i
getDependencyRevisionId
masterConfs
j
result
DependencyResolver
resolver
getResolver
dds
i
getDependencyId
ResolvedModuleRevision
rmr
getDependency
dds
i
data
if
rmr
block
info
ivyFile
dds
i
result
block
String
depConfs
dds
i
getDependencyConfigurations
getConfigurationsNames
for
forControl
int
j
j
length
j
block
if
asList
contains
depConfs
j
getDescriptor
getConfigurationsNames
block
info
ivyFile
dds
i
getDependencyRevisionId
depConfs
j
result
Artifact
arts
getDescriptor
getArtifacts
depConfs
j
for
forControl
int
k
k
length
k
block
if
exists
arts
k
block
info
ivyFile
dds
i
getDependencyRevisionId
arts
k
result
return
result
catchClause
e
info
ivyFile
e
return
catchClause
e
info
ivyFile
e
return
catchClause
e
info
ivyFile
e
return
findModule
ResolvedModuleRevision
id
ModuleRevisionId
DependencyResolver
r
getResolver
getModuleId
if
r
block
throw
IllegalStateException
getModuleId
DefaultModuleDescriptor
md
newCallerInstance
id
String
try
return
getDependency
DefaultDependencyDescriptor
id
ResolveData
getDefaultCache
ConfigurationResolveReport
md
getDefaultCache
catchClause
e
throw
RuntimeException
id
e
e
resolve
ResolveReport
ivySource
File
return
resolve
toURL
resolve
ResolveReport
ivySource
URL
return
resolve
ivySource
String
resolve
ResolveReport
ivySource
URL
revision
String
confs
String
cache
File
date
Date
validate
boolean
return
resolve
ivySource
revision
confs
cache
date
validate
resolve
ResolveReport
ivySource
URL
revision
String
confs
String
cache
File
date
Date
validate
boolean
useCacheOnly
boolean
return
resolve
ivySource
revision
confs
cache
date
validate
useCacheOnly
NO_FILTER
resolve
ResolveReport
mrid
ModuleRevisionId
confs
String
return
resolve
mrid
confs
NO_FILTER
resolve
ResolveReport
mrid
ModuleRevisionId
confs
String
transitive
boolean
changing
boolean
cache
File
date
Date
validate
boolean
useCacheOnly
boolean
artifactFilter
Filter
return
resolve
mrid
confs
transitive
changing
cache
date
validate
useCacheOnly
artifactFilter
resolve
ResolveReport
mrid
ModuleRevisionId
confs
String
transitive
boolean
changing
boolean
cache
File
date
Date
validate
boolean
useCacheOnly
boolean
useOrigin
boolean
artifactFilter
Filter
DefaultModuleDescriptor
md
if
length
confs
equals
block
ResolvedModuleRevision
rmr
findModule
mrid
if
rmr
block
md
newCallerInstance
mrid
confs
transitive
changing
return
ResolveReport
md
hasError
boolean
return
getProblemMessages
List
return
asList
String
mrid
block
confs
getDescriptor
getConfigurationsNames
md
newCallerInstance
newInstance
mrid
getId
getRevision
confs
transitive
changing
block
md
newCallerInstance
mrid
confs
transitive
changing
return
resolve
md
String
cache
date
validate
useCacheOnly
useOrigin
artifactFilter
resolve
ResolveReport
ivySource
URL
revision
String
confs
String
cache
File
date
Date
validate
boolean
useCacheOnly
boolean
artifactFilter
Filter
return
resolve
ivySource
revision
confs
cache
date
validate
useCacheOnly
artifactFilter
resolve
ResolveReport
ivySource
URL
revision
String
confs
String
cache
File
date
Date
validate
boolean
useCacheOnly
boolean
transitive
boolean
artifactFilter
Filter
return
resolve
ivySource
revision
confs
cache
date
validate
useCacheOnly
transitive
artifactFilter
resolve
ResolveReport
ivySource
URL
revision
String
confs
String
cache
File
date
Date
validate
boolean
useCacheOnly
boolean
transitive
boolean
useOrigin
boolean
artifactFilter
Filter
getContext
setIvy
getContext
setCache
cache
URLResource
res
URLResource
ivySource
ModuleDescriptorParser
parser
getInstance
getParser
res
verbose
parser
ivySource
ModuleDescriptor
md
parseDescriptor
ivySource
validate
if
revision
getResolvedModuleRevisionId
getRevision
block
revision
getLocalHostName
if
revision
block
setResolvedModuleRevisionId
newInstance
getModuleRevisionId
revision
return
resolve
md
confs
cache
date
validate
useCacheOnly
transitive
useOrigin
artifactFilter
resolve
ResolveReport
md
ModuleDescriptor
confs
String
cache
File
date
Date
validate
boolean
useCacheOnly
boolean
artifactFilter
Filter
return
resolve
md
confs
cache
date
validate
useCacheOnly
artifactFilter
resolve
ResolveReport
md
ModuleDescriptor
confs
String
cache
File
date
Date
validate
boolean
useCacheOnly
boolean
transitive
boolean
artifactFilter
Filter
return
resolve
md
confs
cache
date
validate
useCacheOnly
transitive
artifactFilter
resolve
ResolveReport
md
ModuleDescriptor
confs
String
cache
File
date
Date
validate
boolean
useCacheOnly
boolean
transitive
boolean
download
boolean
outputReport
boolean
artifactFilter
Filter
return
resolve
md
confs
cache
date
validate
useCacheOnly
transitive
download
outputReport
artifactFilter
resolve
ResolveReport
md
ModuleDescriptor
confs
String
cache
File
date
Date
validate
boolean
useCacheOnly
boolean
transitive
boolean
useOrigin
boolean
download
boolean
outputReport
boolean
artifactFilter
Filter
getContext
setIvy
DependencyResolver
oldDictator
getDictatorResolver
if
useCacheOnly
block
setDictatorResolver
CacheResolver
try
if
cache
block
cache
getDefaultCache
getContext
setCache
cache
if
artifactFilter
block
artifactFilter
NO_FILTER
if
length
confs
equals
block
confs
getConfigurationsNames
fireIvyEvent
StartResolveEvent
md
confs
long
start
currentTimeMillis
info
getResolvedModuleRevisionId
transitive
info
asList
confs
verbose
validate
ResolveReport
report
ResolveReport
md
IvyNode
dependencies
getDependencies
md
confs
cache
date
report
validate
transitive
setDependencies
asList
dependencies
artifactFilter
File
ivyFileInCache
getResolvedIvyFileInCache
cache
getResolvedModuleRevisionId
toIvyFile
ivyFileInCache
File
ivyPropertiesInCache
getResolvedIvyPropertiesInCache
cache
getResolvedModuleRevisionId
Properties
props
Properties
if
length
block
IvyNode
root
dependencies
getRoot
for
forControl
int
i
i
length
i
block
if
dependencies
i
isCompletelyEvicted
dependencies
i
hasProblem
block
DependencyDescriptor
dd
dependencies
i
getDependencyDescriptor
root
if
dd
block
String
rev
dependencies
i
getResolvedId
getRevision
String
status
dependencies
i
getDescriptor
getStatus
put
getDependencyRevisionId
encodeToString
rev
status
store
FileOutputStream
ivyPropertiesInCache
getResolvedModuleRevisionId
verbose
ivyFileInCache
setResolveTime
currentTimeMillis
start
if
download
block
verbose
downloadArtifacts
report
cache
useOrigin
artifactFilter
if
outputReport
block
outputReport
report
cache
fireIvyEvent
EndResolveEvent
md
confs
report
return
report
setDictatorResolver
oldDictator
outputReport
report
ResolveReport
cache
File
info
setProblemMessages
getProblems
output
getReportOutputters
cache
verbose
getResolveTime
getDownloadTime
sumupProblems
downloadArtifacts
report
ResolveReport
cache
File
useOrigin
boolean
artifactFilter
Filter
long
start
currentTimeMillis
IvyNode
dependencies
IvyNode
getDependencies
toArray
IvyNode
getDependencies
size
fireIvyEvent
PrepareDownloadEvent
Artifact
getArtifacts
toArray
Artifact
getArtifacts
size
for
forControl
int
i
i
length
i
block
checkInterrupted
if
dependencies
i
isCompletelyEvicted
dependencies
i
hasProblem
block
DependencyResolver
resolver
dependencies
i
getModuleRevision
getArtifactResolver
Artifact
selectedArtifacts
dependencies
i
getSelectedArtifacts
artifactFilter
DownloadReport
dReport
download
selectedArtifacts
cache
useOrigin
ArtifactDownloadReport
adrs
getArtifactsReports
for
forControl
int
j
j
length
j
block
if
adrs
j
getDownloadStatus
FAILED
block
warn
adrs
j
getArtifact
reportFailure
adrs
j
getArtifact
String
dconfs
dependencies
i
getRootModuleConfigurations
for
forControl
int
j
j
length
j
block
if
dependencies
i
isEvicted
dconfs
j
block
getConfigurationReport
addDependency
dependencies
i
dconfs
j
block
getConfigurationReport
addDependency
dependencies
i
dReport
dconfs
j
setDownloadTime
currentTimeMillis
start
checkInterrupted
if
isInterrupted
block
info
throw
RuntimeException
download
ArtifactDownloadReport
artifact
Artifact
cache
File
getContext
setIvy
getContext
setCache
cache
if
cache
block
cache
getDefaultCache
DependencyResolver
resolver
getResolver
getModuleRevisionId
getModuleId
DownloadReport
r
download
Artifact
artifact
cache
return
getArtifactReport
artifact
getDependencies
IvyNode
ivySource
URL
confs
String
cache
File
date
Date
validate
boolean
return
getDependencies
getInstance
parseDescriptor
ivySource
validate
confs
cache
date
validate
getDependencies
IvyNode
md
ModuleDescriptor
confs
String
cache
File
date
Date
report
ResolveReport
validate
boolean
return
getDependencies
md
confs
cache
date
report
validate
getDependencies
IvyNode
md
ModuleDescriptor
confs
String
cache
File
date
Date
report
ResolveReport
validate
boolean
transitive
boolean
getContext
setIvy
getContext
setCache
cache
if
md
block
throw
NullPointerException
if
cache
block
cache
getDefaultCache
if
length
confs
equals
block
confs
getConfigurationsNames
Map
dependenciesMap
LinkedHashMap
Date
reportDate
Date
ResolveData
data
ResolveData
cache
date
validate
transitive
dependenciesMap
IvyNode
rootNode
IvyNode
data
md
for
forControl
int
i
i
length
i
block
clear
Configuration
configuration
getConfiguration
confs
i
if
configuration
block
error
getModuleRevisionId
confs
i
block
ConfigurationResolveReport
confReport
if
report
block
confReport
getConfigurationReport
confs
i
if
confReport
block
confReport
ConfigurationResolveReport
md
confs
i
reportDate
cache
addReport
confs
i
confReport
setReport
confReport
setRootModuleConf
confs
i
setRequestedConf
confs
i
updateConfsToFetch
singleton
confs
i
fetchDependencies
rootNode
confs
i
Collection
dependencies
LinkedHashSet
size
for
forControl
Iterator
iter
values
iterator
hasNext
block
IvyNode
dep
IvyNode
next
if
dep
block
add
dep
List
sortedDependencies
sortNodes
dependencies
reverse
sortedDependencies
for
forControl
ListIterator
iter
listIterator
hasNext
block
IvyNode
node
IvyNode
next
if
isCompletelyEvicted
block
for
forControl
int
i
i
length
i
block
IvyNode
Caller
callers
getCallers
confs
i
if
debugConflictResolution
block
debug
getId
confs
i
boolean
allEvicted
length
for
forControl
int
j
j
length
j
block
if
callers
j
getModuleRevisionId
equals
getModuleRevisionId
block
allEvicted
break
block
IvyNode
callerNode
IvyNode
get
callers
j
getModuleRevisionId
if
callerNode
block
warn
callers
j
getModuleRevisionId
keySet
getModuleRevisionId
if
isEvicted
confs
i
block
allEvicted
break
block
if
debugConflictResolution
block
debug
getId
getId
if
allEvicted
block
verbose
node
markEvicted
confs
i
block
if
debugConflictResolution
block
debug
getId
return
IvyNode
toArray
IvyNode
size
fetchDependencies
node
IvyNode
conf
String
shouldBePublic
boolean
checkInterrupted
long
start
currentTimeMillis
if
debugConflictResolution
block
debug
getId
conf
resolveConflict
node
getParent
if
loadData
conf
shouldBePublic
block
node
getRealNode
resolveConflict
node
getParent
if
isEvicted
getRootModuleConf
block
String
confs
getRealConfs
conf
for
forControl
int
i
i
length
i
block
doFetchDependencies
node
confs
i
if
hasProblem
block
if
isEvicted
getRootModuleConf
block
String
confs
getRealConfs
conf
for
forControl
int
i
i
length
i
block
doFetchDependencies
node
confs
i
if
isEvicted
getRootModuleConf
block
IvyNode
EvictionData
ed
getEvictedData
getRootModuleConf
if
getSelected
block
for
forControl
Iterator
iter
getSelected
iterator
hasNext
block
IvyNode
selected
IvyNode
next
fetchDependencies
selected
conf
if
debugConflictResolution
block
debug
getId
conf
currentTimeMillis
start
doFetchDependencies
node
IvyNode
conf
String
Configuration
c
getConfiguration
conf
if
c
block
warn
conf
getResolvedId
if
getParent
block
warn
getParent
getResolvedId
return
boolean
requestedConfSet
if
getRequestedConf
block
setRequestedConf
conf
requestedConfSet
String
extendedConfs
getExtends
if
length
block
updateConfsToFetch
asList
extendedConfs
for
forControl
int
i
i
length
i
block
fetchDependencies
node
extendedConfs
i
DependencyDescriptor
dd
getDependencyDescriptor
getParent
if
isDependenciesFetched
node
conf
dd
isTransitive
block
Collection
dependencies
getDependencies
conf
for
forControl
Iterator
iter
iterator
hasNext
block
IvyNode
dep
IvyNode
next
dep
getRealNode
traverse
conf
dep
if
isCircular
block
continue
String
confs
getRequiredConfigurations
node
conf
for
forControl
int
i
i
length
i
block
fetchDependencies
dep
confs
i
confs
getConfsToFetch
for
forControl
int
i
i
length
i
block
fetchDependencies
dep
confs
i
if
requestedConfSet
block
setRequestedConf
isDependenciesFetched
boolean
node
IvyNode
conf
String
ModuleId
moduleId
getModuleId
ModuleRevisionId
moduleRevisionId
getResolvedId
String
key
getOrganisation
getName
getRevision
conf
if
contains
key
block
return
add
key
return
resolveConflict
node
IvyNode
parent
IvyNode
resolveConflict
node
parent
EMPTY_SET
resolveConflict
node
IvyNode
parent
IvyNode
toevict
Collection
if
parent
node
parent
block
return
if
checkConflictSolved
node
parent
block
return
Collection
resolvedNodes
HashSet
getResolvedNodes
getModuleId
getRootModuleConf
Collection
conflicts
computeConflicts
node
parent
toevict
resolvedNodes
if
debugConflictResolution
block
debug
node
parent
conflicts
Collection
resolved
getConflictManager
resolveConflicts
parent
conflicts
getModuleId
if
debugConflictResolution
block
debug
node
parent
resolved
if
contains
node
block
toevict
resolvedNodes
removeAll
resolved
for
forControl
Iterator
iter
iterator
hasNext
block
IvyNode
te
IvyNode
next
markEvicted
getRootModuleConf
parent
getConflictManager
getModuleId
resolved
if
debugConflictResolution
block
debug
te
getEvictedData
getRootModuleConf
setResolvedNodes
getModuleId
getRootModuleConf
resolved
Collection
evicted
HashSet
getEvictedNodes
getModuleId
getRootModuleConf
removeAll
resolved
addAll
toevict
setEvictedNodes
getModuleId
getRootModuleConf
evicted
resolveConflict
node
getParent
toevict
block
if
isEmpty
block
if
debugConflictResolution
block
verbose
getConflictManager
getModuleId
conflicts
Collection
evicted
HashSet
getEvictedNodes
getModuleId
getRootModuleConf
removeAll
resolved
removeAll
resolved
addAll
toevict
add
node
setEvictedNodes
getModuleId
getRootModuleConf
evicted
markEvicted
getRootModuleConf
parent
getConflictManager
getModuleId
resolved
if
debugConflictResolution
block
debug
node
getEvictedData
getRootModuleConf
Collection
prevResolved
getResolvedNodes
getModuleId
getRootModuleConf
if
equals
resolved
block
setResolvedNodes
getModuleId
getRootModuleConf
resolved
for
forControl
Iterator
iter
iterator
hasNext
block
IvyNode
sel
IvyNode
next
if
contains
sel
block
resolveConflict
sel
getParent
toevict
computeConflicts
Collection
node
IvyNode
parent
IvyNode
toevict
Collection
resolvedNodes
Collection
Collection
conflicts
HashSet
if
removeAll
toevict
block
add
node
Collection
deps
getDependencies
getRequiredConfigurations
for
forControl
Iterator
iter
iterator
hasNext
block
IvyNode
dep
IvyNode
next
addAll
getResolvedNodes
getModuleId
getRootModuleConf
if
isEmpty
getParent
parent
block
add
node
DependencyDescriptor
dds
getDescriptor
getDependencies
for
forControl
int
i
i
length
i
block
if
dds
i
getDependencyId
equals
getModuleId
block
IvyNode
n
findNode
dds
i
getDependencyRevisionId
if
n
block
add
n
break
block
add
node
addAll
resolvedNodes
return
conflicts
checkConflictSolved
boolean
node
IvyNode
parent
IvyNode
if
getResolvedRevisions
contains
getResolvedId
getModuleId
getRootModuleConf
block
if
debugConflictResolution
block
debug
node
parent
EvictionData
evictionData
getEvictionDataInRoot
getRootModuleConf
parent
if
evictionData
block
if
debugConflictResolution
block
debug
node
getRootModuleConf
markEvicted
evictionData
if
debugConflictResolution
block
debug
node
evictionData
return
if
getEvictedRevisions
contains
getResolvedId
getModuleId
getRootModuleConf
block
if
debugConflictResolution
block
debug
node
parent
return
return
findModuleInCache
ResolvedModuleRevision
mrid
ModuleRevisionId
cache
File
validate
boolean
getContext
setIvy
getContext
setCache
cache
if
getVersionMatcher
isDynamic
mrid
block
File
ivyFile
getIvyFileInCache
cache
mrid
if
exists
block
try
ModuleDescriptor
depMD
getInstance
parseDescriptor
toURL
validate
String
resolverName
getSavedResolverName
cache
depMD
String
artResolverName
getSavedArtResolverName
cache
depMD
DependencyResolver
resolver
DependencyResolver
get
resolverName
if
resolver
block
debug
resolverName
mrid
resolver
getResolver
getResolvedModuleRevisionId
getModuleId
if
resolver
block
debug
getResolvedModuleRevisionId
getName
saveResolver
cache
depMD
getName
DependencyResolver
artResolver
DependencyResolver
get
artResolverName
if
artResolver
block
artResolver
resolver
if
resolver
block
debug
mrid
getName
ivyFile
return
DefaultModuleRevision
resolver
artResolver
depMD
toURL
block
debug
resolverName
mrid
catchClause
e
debug
mrid
getMessage
block
debug
mrid
ivyFile
return
install
ResolveReport
mrid
ModuleRevisionId
from
String
to
String
transitive
boolean
validate
boolean
overwrite
boolean
artifactFilter
Filter
cache
File
matcherName
String
getContext
setIvy
getContext
setCache
cache
if
cache
block
cache
getDefaultCache
if
artifactFilter
block
artifactFilter
NO_FILTER
DependencyResolver
fromResolver
getResolver
from
DependencyResolver
toResolver
getResolver
to
if
fromResolver
block
throw
IllegalArgumentException
from
keySet
if
toResolver
block
throw
IllegalArgumentException
to
keySet
PatternMatcher
matcher
getMatcher
matcherName
if
matcher
block
throw
IllegalArgumentException
matcherName
keySet
info
mrid
DependencyResolver
oldDicator
getDictatorResolver
boolean
log
logNotConvertedExclusionRule
try
setLogNotConvertedExclusionRule
setDictatorResolver
fromResolver
DefaultModuleDescriptor
md
DefaultModuleDescriptor
newInstance
getStatusManager
getDefaultStatus
Date
addConfiguration
Configuration
addConflictManager
ModuleId
ANY_EXPRESSION
ANY_EXPRESSION
getInstance
NoConflictManager
if
isExact
matcher
mrid
block
DefaultDependencyDescriptor
dd
DefaultDependencyDescriptor
md
mrid
transitive
addDependencyConfiguration
addDependency
dd
block
Collection
mrids
findModuleRevisionIds
fromResolver
mrid
matcher
for
forControl
Iterator
iter
iterator
hasNext
block
ModuleRevisionId
foundMrid
ModuleRevisionId
next
info
foundMrid
DefaultDependencyDescriptor
dd
DefaultDependencyDescriptor
md
foundMrid
transitive
addDependencyConfiguration
addDependency
dd
ResolveReport
report
ResolveReport
md
info
IvyNode
dependencies
getDependencies
md
String
cache
report
validate
setDependencies
asList
dependencies
artifactFilter
info
downloadArtifacts
report
cache
artifactFilter
info
to
for
forControl
int
i
i
length
i
block
ModuleDescriptor
depmd
dependencies
i
getDescriptor
if
depmd
block
verbose
getModuleRevisionId
publish
depmd
toResolver
singleton
getAbsolutePath
getCacheArtifactPattern
getAbsolutePath
getCacheIvyPattern
overwrite
info
output
getReportOutputters
cache
return
report
setDictatorResolver
oldDicator
setLogNotConvertedExclusionRule
log
findModuleRevisionIds
Collection
resolver
DependencyResolver
pattern
ModuleRevisionId
matcher
PatternMatcher
getContext
setIvy
Collection
mrids
ArrayList
String
resolverName
getName
verbose
pattern
getName
Namespace
fromNamespace
resolver
AbstractResolver
AbstractResolver
resolver
Collection
modules
ArrayList
OrganisationEntry
orgs
listOrganisations
if
orgs
length
block
String
org
getOrganisation
if
fromNamespace
block
org
transform
getOrganisation
getModuleId
getFromSystemTransformer
addAll
asList
listModules
OrganisationEntry
resolver
org
block
Matcher
orgMatcher
getMatcher
getOrganisation
for
forControl
int
i
i
length
i
block
String
org
orgs
i
getOrganisation
String
systemOrg
org
if
fromNamespace
block
systemOrg
transformOrganisation
org
getToSystemTransformer
if
matches
systemOrg
block
addAll
asList
listModules
OrganisationEntry
resolver
org
debug
size
getOrganisation
resolverName
boolean
foundModule
for
forControl
Iterator
iter
iterator
hasNext
block
ModuleEntry
mEntry
ModuleEntry
next
ModuleId
foundMid
ModuleId
getOrganisation
getModule
ModuleId
systemMid
foundMid
if
fromNamespace
block
systemMid
transform
foundMid
getToSystemTransformer
if
matches
matcher
getModuleId
systemMid
block
foundModule
RevisionEntry
rEntries
listRevisions
mEntry
debug
length
getOrganisation
getModule
resolverName
boolean
foundRevision
for
forControl
int
j
j
length
j
block
RevisionEntry
rEntry
rEntries
j
ModuleRevisionId
foundMrid
newInstance
getOrganisation
getModule
getRevision
ModuleRevisionId
systemMrid
foundMrid
if
fromNamespace
block
systemMrid
getToSystemTransformer
transform
foundMrid
if
matches
matcher
pattern
systemMrid
block
foundRevision
add
systemMrid
if
foundRevision
block
debug
pattern
getOrganisation
getModule
resolverName
if
foundModule
block
debug
pattern
resolverName
return
mrids
retrieve
int
moduleId
ModuleId
confs
String
cache
File
destFilePattern
String
return
retrieve
moduleId
confs
cache
destFilePattern
retrieve
int
moduleId
ModuleId
confs
String
cache
File
destFilePattern
String
destIvyPattern
String
return
retrieve
moduleId
confs
cache
destFilePattern
destIvyPattern
NO_FILTER
retrieve
int
moduleId
ModuleId
confs
String
cache
File
destFilePattern
String
destIvyPattern
String
artifactFilter
Filter
return
retrieve
moduleId
confs
cache
destFilePattern
destIvyPattern
artifactFilter
retrieve
int
moduleId
ModuleId
confs
String
cache
File
destFilePattern
String
destIvyPattern
String
artifactFilter
Filter
sync
boolean
useOrigin
boolean
if
artifactFilter
block
artifactFilter
NO_FILTER
getContext
setIvy
getContext
setCache
cache
info
moduleId
sync
info
asList
confs
long
start
currentTimeMillis
destFilePattern
substituteVariables
destFilePattern
getVariables
destIvyPattern
substituteVariables
destIvyPattern
getVariables
try
Map
artifactsToCopy
determineArtifactsToCopy
moduleId
confs
cache
destFilePattern
destIvyPattern
artifactFilter
File
fileRetrieveRoot
File
getTokenRoot
destFilePattern
File
ivyRetrieveRoot
destIvyPattern
File
getTokenRoot
destIvyPattern
Collection
targetArtifactsStructure
HashSet
Collection
targetIvysStructure
HashSet
int
targetsCopied
int
targetsUpToDate
for
forControl
Iterator
iter
keySet
iterator
hasNext
block
Artifact
artifact
Artifact
next
File
archive
if
equals
getType
block
archive
getIvyFileInCache
cache
getModuleRevisionId
block
archive
getArchiveFileInCache
cache
artifact
getSavedArtifactOrigin
cache
artifact
useOrigin
if
useOrigin
exists
block
archive
getArchiveFileInCache
cache
artifact
getSavedArtifactOrigin
cache
artifact
Set
dest
Set
get
artifact
verbose
archive
for
forControl
Iterator
it2
iterator
hasNext
block
checkInterrupted
File
destFile
File
String
next
if
_checkUpToDate
upToDate
archive
destFile
block
verbose
destFile
copy
archive
destFile
targetsCopied
block
verbose
destFile
targetsUpToDate
if
equals
getType
block
addAll
getPathFiles
ivyRetrieveRoot
destFile
block
addAll
getPathFiles
fileRetrieveRoot
destFile
if
sync
block
verbose
Collection
existingArtifacts
listAll
fileRetrieveRoot
Collection
existingIvys
ivyRetrieveRoot
listAll
ivyRetrieveRoot
if
equals
ivyRetrieveRoot
block
Collection
target
targetArtifactsStructure
addAll
targetIvysStructure
Collection
existing
existingArtifacts
addAll
existingIvys
sync
target
existing
block
sync
targetArtifactsStructure
existingArtifacts
if
existingIvys
block
sync
targetIvysStructure
existingIvys
info
targetsCopied
targetsUpToDate
verbose
currentTimeMillis
start
return
targetsCopied
catchClause
ex
throw
RuntimeException
moduleId
ex
ex
sync
target
Collection
existing
Collection
Collection
toRemove
HashSet
for
forControl
Iterator
iter
iterator
hasNext
block
File
file
File
next
add
getAbsoluteFile
for
forControl
Iterator
iter
iterator
hasNext
block
File
file
File
next
remove
getAbsoluteFile
for
forControl
Iterator
iter
iterator
hasNext
block
File
file
File
next
if
exists
block
verbose
file
forceDelete
file
determineArtifactsToCopy
Map
moduleId
ModuleId
confs
String
cache
File
destFilePattern
String
destIvyPattern
String
return
determineArtifactsToCopy
moduleId
confs
cache
destFilePattern
destIvyPattern
NO_FILTER
determineArtifactsToCopy
Map
moduleId
ModuleId
confs
String
cache
File
destFilePattern
String
destIvyPattern
String
artifactFilter
Filter
getContext
setIvy
getContext
setCache
cache
if
artifactFilter
block
artifactFilter
NO_FILTER
Map
artifactsToCopy
HashMap
Map
conflictsMap
HashMap
Map
conflictsConfMap
HashMap
XmlReportParser
parser
XmlReportParser
for
forControl
int
i
i
length
i
block
String
conf
confs
i
Collection
artifacts
ArrayList
asList
getArtifacts
moduleId
conf
cache
if
destIvyPattern
block
ModuleRevisionId
mrids
getRealDependencyRevisionIds
moduleId
conf
cache
for
forControl
int
j
j
length
j
block
add
newIvyArtifact
mrids
j
for
forControl
Iterator
iter
iterator
hasNext
block
Artifact
artifact
Artifact
next
String
destPattern
equals
getType
destIvyPattern
destFilePattern
if
equals
getType
accept
artifact
block
continue
String
destFileName
substitute
destPattern
artifact
conf
Set
dest
Set
get
artifact
if
dest
block
dest
HashSet
put
artifact
dest
String
copyDest
getAbsolutePath
File
destFileName
add
copyDest
Set
conflicts
Set
get
copyDest
Set
conflictsConf
Set
get
copyDest
if
conflicts
block
conflicts
HashSet
put
copyDest
conflicts
if
conflictsConf
block
conflictsConf
HashSet
put
copyDest
conflictsConf
add
artifact
add
conf
for
forControl
Iterator
iter
keySet
iterator
hasNext
block
String
copyDest
String
next
Set
artifacts
Set
get
copyDest
Set
conflictsConfs
Set
get
copyDest
if
size
block
List
artifactsList
ArrayList
artifacts
sort
artifactsList
getConflictResolvingPolicy
info
copyDest
conflictsConfs
Artifact
get
size
for
forControl
int
i
size
i
i
block
Artifact
looser
Artifact
get
i
verbose
looser
Set
dest
Set
get
looser
remove
copyDest
if
isEmpty
block
remove
looser
return
artifactsToCopy
upToDate
boolean
source
File
target
File
if
exists
block
return
return
lastModified
lastModified
getConflictResolvingPolicy
Comparator
return
Comparator
compare
int
o1
Object
o2
Object
Artifact
a1
Artifact
o1
Artifact
a2
Artifact
o2
if
getPublicationDate
after
getPublicationDate
block
return
if
getPublicationDate
before
getPublicationDate
block
return
block
return
deliver
mrid
ModuleRevisionId
revision
String
cache
File
destIvyPattern
String
status
String
pubdate
Date
pdrResolver
PublishingDependencyRevisionResolver
validate
boolean
deliver
mrid
revision
cache
destIvyPattern
status
pubdate
pdrResolver
validate
deliver
mrid
ModuleRevisionId
revision
String
cache
File
destIvyPattern
String
status
String
pubdate
Date
pdrResolver
PublishingDependencyRevisionResolver
validate
boolean
resolveDynamicRevisions
boolean
getContext
setIvy
getContext
setCache
cache
info
mrid
revision
status
pubdate
verbose
validate
long
start
currentTimeMillis
destIvyPattern
substitute
destIvyPattern
File
ivyFile
getResolvedIvyFileInCache
cache
mrid
if
exists
block
throw
IllegalStateException
mrid
ivyFile
ModuleDescriptor
md
URL
ivyFileURL
try
ivyFileURL
toURL
md
getInstance
parseDescriptor
ivyFileURL
validate
setResolvedModuleRevisionId
newInstance
mrid
revision
setResolvedPublicationDate
pubdate
catchClause
e
throw
RuntimeException
ivyFile
catchClause
e
throw
IllegalStateException
mrid
Map
resolvedRevisions
HashMap
Map
dependenciesStatus
HashMap
File
ivyProperties
getResolvedIvyPropertiesInCache
cache
mrid
if
exists
block
throw
IllegalStateException
mrid
ivyFile
Properties
props
Properties
load
FileInputStream
ivyProperties
for
forControl
Iterator
iter
keySet
iterator
hasNext
block
String
depMridStr
String
next
String
parts
getProperty
split
depMridStr
ModuleRevisionId
decodedMrid
decode
depMridStr
if
resolveDynamicRevisions
block
put
decodedMrid
parts
put
decodedMrid
parts
Map
resolvedDependencies
HashMap
DependencyDescriptor
dependencies
getDependencies
for
forControl
int
i
i
length
i
block
String
rev
String
get
dependencies
i
getDependencyRevisionId
if
rev
block
rev
dependencies
i
getDependencyRevisionId
getRevision
String
depStatus
String
get
dependencies
i
getDependencyRevisionId
put
dependencies
i
getDependencyRevisionId
resolve
md
status
newInstance
dependencies
i
getDependencyRevisionId
rev
depStatus
String
publishedIvy
substitute
destIvyPattern
getResolvedModuleRevisionId
info
publishedIvy
try
update
ivyFileURL
File
publishedIvy
resolvedDependencies
status
revision
pubdate
catchClause
ex
throw
IllegalStateException
mrid
verbose
currentTimeMillis
start
publish
Collection
mrid
ModuleRevisionId
pubrevision
String
cache
File
srcArtifactPattern
String
resolverName
String
srcIvyPattern
String
validate
boolean
return
publish
mrid
pubrevision
cache
srcArtifactPattern
resolverName
srcIvyPattern
validate
publish
Collection
mrid
ModuleRevisionId
pubrevision
String
cache
File
srcArtifactPattern
String
resolverName
String
srcIvyPattern
String
validate
boolean
overwrite
boolean
return
publish
mrid
pubrevision
cache
srcArtifactPattern
resolverName
srcIvyPattern
validate
overwrite
publish
Collection
mrid
ModuleRevisionId
pubrevision
String
cache
File
srcArtifactPattern
String
resolverName
String
srcIvyPattern
String
status
String
pubdate
Date
extraArtifacts
Artifact
validate
boolean
overwrite
boolean
update
boolean
conf
String
return
publish
mrid
pubrevision
cache
singleton
srcArtifactPattern
resolverName
srcIvyPattern
status
pubdate
extraArtifacts
validate
overwrite
update
conf
publish
Collection
mrid
ModuleRevisionId
pubrevision
String
cache
File
srcArtifactPattern
Collection
resolverName
String
srcIvyPattern
String
status
String
pubdate
Date
extraArtifacts
Artifact
validate
boolean
overwrite
boolean
update
boolean
conf
String
getContext
setIvy
getContext
setCache
cache
info
getModuleId
verbose
validate
long
start
currentTimeMillis
srcIvyPattern
substitute
srcIvyPattern
ModuleRevisionId
pubmrid
newInstance
mrid
pubrevision
File
ivyFile
if
srcIvyPattern
block
ivyFile
File
substitute
srcIvyPattern
newIvyArtifact
pubmrid
Date
if
exists
block
throw
IllegalArgumentException
mrid
ivyFile
block
ivyFile
getResolvedIvyFileInCache
cache
mrid
if
exists
block
throw
IllegalStateException
mrid
ivyFile
ModuleDescriptor
md
URL
ivyFileURL
try
ivyFileURL
toURL
md
getInstance
parseDescriptor
ivyFileURL
if
srcIvyPattern
block
if
equals
getModuleRevisionId
getRevision
block
if
update
block
File
tmp
createTempFile
deleteOnExit
try
update
ivyFileURL
tmp
HashMap
status
getStatus
status
pubrevision
pubdate
Date
pubdate
ivyFile
tmp
md
getInstance
parseDescriptor
toURL
srcIvyPattern
getAbsolutePath
catchClause
e
throw
IllegalStateException
mrid
ivyFile
e
block
throw
IllegalArgumentException
ivyFile
pubrevision
block
setResolvedModuleRevisionId
pubmrid
catchClause
e
throw
RuntimeException
ivyFile
catchClause
e
throw
IllegalStateException
mrid
ivyFile
e
DependencyResolver
resolver
getResolver
resolverName
if
resolver
block
throw
IllegalArgumentException
resolverName
Collection
missing
publish
md
resolver
srcArtifactPattern
srcIvyPattern
extraArtifacts
overwrite
conf
verbose
currentTimeMillis
start
return
missing
publish
Collection
md
ModuleDescriptor
resolver
DependencyResolver
srcArtifactPattern
Collection
srcIvyPattern
String
extraArtifacts
Artifact
overwrite
boolean
conf
String
Collection
missing
ArrayList
Set
artifactsSet
HashSet
String
confs
if
conf
equals
conf
block
confs
getConfigurationsNames
block
StringTokenizer
st
StringTokenizer
conf
confs
String
countTokens
int
counter
while
hasMoreTokens
block
confs
counter
nextToken
trim
counter
for
forControl
int
i
i
length
i
block
Artifact
artifacts
getArtifacts
confs
i
for
forControl
int
j
j
length
j
block
add
artifacts
j
if
extraArtifacts
block
for
forControl
int
i
i
length
i
block
add
MDArtifact
md
extraArtifacts
i
getName
extraArtifacts
i
getType
extraArtifacts
i
getExt
extraArtifacts
i
getUrl
extraArtifacts
i
getExtraAttributes
for
forControl
Iterator
iter
iterator
hasNext
block
Artifact
artifact
Artifact
next
boolean
published
for
forControl
Iterator
iterator
iterator
hasNext
published
block
String
pattern
String
next
published
publish
artifact
substitute
pattern
resolver
overwrite
if
published
block
info
artifact
for
forControl
Iterator
iterator
iterator
hasNext
block
String
pattern
String
next
info
File
substitute
pattern
artifact
add
artifact
if
srcIvyPattern
block
Artifact
artifact
newIvyArtifact
md
if
publish
artifact
srcIvyPattern
resolver
overwrite
block
info
getModuleRevisionId
File
substitute
srcIvyPattern
artifact
add
artifact
return
missing
publish
boolean
artifact
Artifact
srcArtifactPattern
String
resolver
DependencyResolver
overwrite
boolean
checkInterrupted
File
src
File
substitute
srcArtifactPattern
artifact
if
exists
block
publish
artifact
src
overwrite
return
block
return
sortNodes
List
nodes
Collection
getContext
setIvy
return
sortNodes
getVersionMatcher
nodes
sortModuleDescriptors
List
moduleDescriptors
Collection
getContext
setIvy
return
sortModuleDescriptors
getVersionMatcher
moduleDescriptors
getResolvedIvyFileInCache
File
cache
File
mrid
ModuleRevisionId
getContext
setIvy
getContext
setCache
cache
return
File
cache
substitute
_cacheResolvedIvyPattern
getOrganisation
getName
getRevision
getResolvedIvyPropertiesInCache
File
cache
File
mrid
ModuleRevisionId
getContext
setIvy
getContext
setCache
cache
return
File
cache
substitute
_cacheResolvedIvyPropertiesPattern
getOrganisation
getName
getRevision
getIvyFileInCache
File
cache
File
mrid
ModuleRevisionId
getContext
setIvy
getContext
setCache
cache
return
File
cache
substitute
_cacheIvyPattern
newIvyArtifact
mrid
getArchiveFileInCache
File
cache
File
artifact
Artifact
getContext
setIvy
getContext
setCache
cache
ArtifactOrigin
origin
getSavedArtifactOrigin
cache
artifact
return
getArchiveFileInCache
cache
artifact
origin
getArchiveFileInCache
File
cache
File
artifact
Artifact
origin
ArtifactOrigin
getContext
setIvy
getContext
setCache
cache
File
archive
File
cache
getArchivePathInCache
artifact
origin
if
exists
origin
isLocal
block
File
original
File
getLocation
if
exists
block
return
original
return
archive
getArchiveFileInCache
File
cache
File
artifact
Artifact
origin
ArtifactOrigin
useOrigin
boolean
getContext
setIvy
getContext
setCache
cache
if
useOrigin
origin
isLocal
block
return
File
getLocation
block
return
File
cache
getArchivePathInCache
artifact
origin
getArchiveFileInCache
File
cache
File
organisation
String
module
String
revision
String
artifact
String
type
String
ext
String
getContext
setIvy
getContext
setCache
cache
return
File
cache
getArchivePathInCache
organisation
module
revision
artifact
type
ext
getArchivePathInCache
String
artifact
Artifact
getContext
setIvy
return
substitute
_cacheArtifactPattern
artifact
getArchivePathInCache
String
artifact
Artifact
origin
ArtifactOrigin
getContext
setIvy
return
substitute
_cacheArtifactPattern
artifact
origin
getArchivePathInCache
String
organisation
String
module
String
revision
String
artifact
String
type
String
ext
String
getContext
setIvy
return
getArchivePathInCache
DefaultArtifact
newInstance
organisation
module
revision
Date
artifact
type
ext
interrupt
Thread
operatingThread
getContext
getOperatingThread
interrupt
operatingThread
interrupt
operatingThread
Thread
if
operatingThread
isAlive
block
if
operatingThread
currentThread
block
throw
IllegalStateException
verbose
interrupt
synchronized
_interrupted
try
verbose
join
_interruptTimeout
catchClause
e
if
isAlive
block
warn
stop
synchronized
_interrupted
getLocalHostName
String
try
return
getLocalHost
getHostName
catchClause
e
return
listTokenValues
String
token
String
otherTokenValues
Map
List
r
ArrayList
for
forControl
Iterator
iter
values
iterator
hasNext
block
DependencyResolver
resolver
DependencyResolver
next
addAll
asList
listTokenValues
token
otherTokenValues
return
String
toArray
String
size
listOrganisationEntries
OrganisationEntry
List
entries
ArrayList
for
forControl
Iterator
iter
values
iterator
hasNext
block
DependencyResolver
resolver
DependencyResolver
next
addAll
asList
listOrganisations
return
OrganisationEntry
toArray
OrganisationEntry
size
listOrganisations
String
Collection
orgs
HashSet
for
forControl
Iterator
iter
values
iterator
hasNext
block
DependencyResolver
resolver
DependencyResolver
next
OrganisationEntry
entries
listOrganisations
if
entries
block
for
forControl
int
i
i
length
i
block
if
entries
i
block
add
entries
i
getOrganisation
return
String
toArray
String
size
listModuleEntries
ModuleEntry
org
OrganisationEntry
List
entries
ArrayList
for
forControl
Iterator
iter
values
iterator
hasNext
block
DependencyResolver
resolver
DependencyResolver
next
addAll
asList
listModules
org
return
ModuleEntry
toArray
ModuleEntry
size
listModules
String
org
String
List
mods
ArrayList
for
forControl
Iterator
iter
values
iterator
hasNext
block
DependencyResolver
resolver
DependencyResolver
next
ModuleEntry
entries
listModules
OrganisationEntry
resolver
org
if
entries
block
for
forControl
int
i
i
length
i
block
if
entries
i
block
add
entries
i
getModule
return
String
toArray
String
size
listRevisionEntries
RevisionEntry
module
ModuleEntry
List
entries
ArrayList
for
forControl
Iterator
iter
values
iterator
hasNext
block
DependencyResolver
resolver
DependencyResolver
next
addAll
asList
listRevisions
module
return
RevisionEntry
toArray
RevisionEntry
size
listRevisions
String
org
String
module
String
List
revs
ArrayList
for
forControl
Iterator
iter
values
iterator
hasNext
block
DependencyResolver
resolver
DependencyResolver
next
RevisionEntry
entries
listRevisions
ModuleEntry
OrganisationEntry
resolver
org
module
if
entries
block
for
forControl
int
i
i
length
i
block
if
entries
i
block
add
entries
i
getRevision
return
String
toArray
String
size
listingIgnore
boolean
name
String
return
contains
name
filterIgnore
names
Collection
removeAll
_listingIgnore
isCheckUpToDate
boolean
return
_checkUpToDate
setCheckUpToDate
checkUpToDate
boolean
_checkUpToDate
checkUpToDate
getCacheArtifactPattern
String
return
_cacheArtifactPattern
setCacheArtifactPattern
cacheArtifactPattern
String
_cacheArtifactPattern
cacheArtifactPattern
getCacheIvyPattern
String
return
_cacheIvyPattern
setCacheIvyPattern
cacheIvyPattern
String
_cacheIvyPattern
cacheIvyPattern
doValidate
boolean
return
_validate
setValidate
validate
boolean
_validate
validate
getVariable
String
name
String
String
val
String
get
name
return
val
val
substitute
val
getDefaultConflictManager
ConflictManager
if
_defaultConflictManager
block
_defaultConflictManager
LatestConflictManager
getDefaultLatestStrategy
return
_defaultConflictManager
setDefaultConflictManager
defaultConflictManager
ConflictManager
_defaultConflictManager
defaultConflictManager
getDefaultLatestStrategy
LatestStrategy
if
_defaultLatestStrategy
block
_defaultLatestStrategy
LatestRevisionStrategy
return
_defaultLatestStrategy
setDefaultLatestStrategy
defaultLatestStrategy
LatestStrategy
_defaultLatestStrategy
defaultLatestStrategy
EventListenerList
_listeners
EventListenerList
boolean
_logNotConvertedExclusionRule
Boolean
_debugConflictResolution
VersionMatcher
_versionMatcher
addTransferListener
listener
TransferListener
add
TransferListener
listener
removeTransferListener
listener
TransferListener
remove
TransferListener
listener
hasTransferListener
boolean
listener
TransferListener
return
asList
contains
listener
getListeners
TransferListener
fireTransferEvent
evt
TransferEvent
Object
listeners
getListenerList
for
forControl
int
i
length
i
i
block
if
listeners
i
TransferListener
block
TransferListener
listeners
i
addTrigger
trigger
Trigger
addIvyListener
trigger
getEventFilter
addConfigured
trigger
Trigger
addTrigger
trigger
addIvyListener
listener
IvyListener
add
IvyListener
listener
addIvyListener
listener
IvyListener
eventName
String
addIvyListener
listener
IvyEventFilter
eventName
addIvyListener
listener
IvyListener
filter
Filter
add
IvyListener
FilteredIvyListener
listener
filter
removeIvyListener
listener
IvyListener
remove
IvyListener
listener
IvyListener
listeners
IvyListener
getListeners
IvyListener
for
forControl
int
i
i
length
i
block
if
listeners
i
FilteredIvyListener
block
if
equals
FilteredIvyListener
listeners
i
block
remove
IvyListener
listeners
i
hasIvyListener
boolean
listener
IvyListener
return
asList
contains
listener
getListeners
IvyListener
fireIvyEvent
evt
IvyEvent
Object
listeners
getListenerList
for
forControl
int
i
length
i
i
block
if
listeners
i
IvyListener
block
IvyListener
listeners
i
transferProgress
evt
TransferEvent
fireTransferEvent
evt
fireIvyEvent
evt
isUseRemoteConfig
boolean
return
_useRemoteConfig
setUseRemoteConfig
useRemoteConfig
boolean
_useRemoteConfig
useRemoteConfig
getDictatorResolver
DependencyResolver
return
_dictatorResolver
setDictatorResolver
dictatorResolver
DependencyResolver
_dictatorResolver
dictatorResolver
setVariables
variables
Map
if
variables
block
throw
NullPointerException
_variables
variables
getDefaultConfigurationURL
URL
return
getResource
Ivy
saveResolver
cache
File
md
ModuleDescriptor
name
String
PropertiesFile
cdf
getCachedDataFile
cache
md
setProperty
name
save
saveArtResolver
cache
File
md
ModuleDescriptor
name
String
PropertiesFile
cdf
getCachedDataFile
cache
md
setProperty
name
save
saveArtifactOrigin
cache
File
artifact
Artifact
origin
ArtifactOrigin
PropertiesFile
cdf
getCachedDataFile
cache
getModuleRevisionId
setProperty
getName
getExt
valueOf
isLocal
setProperty
getName
getExt
getLocation
save
getSavedArtifactOrigin
ArtifactOrigin
cache
File
artifact
Artifact
PropertiesFile
cdf
getCachedDataFile
cache
getModuleRevisionId
String
location
getProperty
getName
getExt
boolean
isLocal
valueOf
booleanValue
getProperty
getName
getExt
if
location
block
return
return
ArtifactOrigin
isLocal
location
removeSavedArtifactOrigin
cache
File
artifact
Artifact
PropertiesFile
cdf
getCachedDataFile
cache
getModuleRevisionId
remove
getName
getExt
remove
getName
getExt
save
getSavedResolverName
String
cache
File
md
ModuleDescriptor
PropertiesFile
cdf
getCachedDataFile
cache
md
return
getProperty
getSavedArtResolverName
String
cache
File
md
ModuleDescriptor
PropertiesFile
cdf
getCachedDataFile
cache
md
return
getProperty
getCachedDataFile
PropertiesFile
cache
File
md
ModuleDescriptor
return
getCachedDataFile
cache
getResolvedModuleRevisionId
getCachedDataFile
PropertiesFile
cache
File
mRevId
ModuleRevisionId
return
PropertiesFile
File
cache
substitute
getCacheDataFilePattern
mRevId
mRevId
getCacheDataFilePattern
String
return
_cacheDataFilePattern
logModuleWhenFound
boolean
String
var
getVariable
return
var
valueOf
booleanValue
var
logResolvedRevision
boolean
String
var
getVariable
return
var
valueOf
booleanValue
var
debugConflictResolution
boolean
if
_debugConflictResolution
block
String
var
getVariable
_debugConflictResolution
valueOf
var
valueOf
booleanValue
var
return
booleanValue
logNotConvertedExclusionRule
boolean
return
_logNotConvertedExclusionRule
setLogNotConvertedExclusionRule
logNotConvertedExclusionRule
boolean
_logNotConvertedExclusionRule
logNotConvertedExclusionRule
getStatusManager
StatusManager
if
_statusManager
block
_statusManager
newDefaultInstance
return
_statusManager
setStatusManager
statusManager
StatusManager
_statusManager
statusManager
ModuleSettings
String
_resolverName
String
_branch
String
_conflictManager
ModuleSettings
resolverName
String
branch
String
conflictManager
String
_resolverName
resolverName
_branch
branch
_conflictManager
conflictManager
toString
String
return
_resolverName
_resolverName
_branch
_branch
getBranch
String
return
_branch
getResolverName
String
return
_resolverName
getConflictManager
String
return
_conflictManager
isInterrupted
boolean
return
_interrupted
listModules
ModuleId
criteria
ModuleId
matcher
PatternMatcher
List
ret
ArrayList
Matcher
orgMatcher
getMatcher
getOrganisation
Matcher
modMatcher
getMatcher
getName
Map
tokenValues
HashMap
String
orgs
listTokenValues
ORGANISATION_KEY
tokenValues
for
forControl
int
i
i
length
i
block
if
matches
orgs
i
block
put
ORGANISATION_KEY
orgs
i
String
mods
listTokenValues
MODULE_KEY
tokenValues
for
forControl
int
j
j
length
j
block
if
matches
mods
j
block
add
ModuleId
orgs
i
mods
j
return
ModuleId
toArray
ModuleId
size
listModules
ModuleRevisionId
criteria
ModuleRevisionId
matcher
PatternMatcher
List
ret
ArrayList
Matcher
orgMatcher
getMatcher
getOrganisation
Matcher
modMatcher
getMatcher
getName
Matcher
branchMatcher
getMatcher
getBranch
Matcher
revMatcher
getMatcher
getRevision
Map
tokenValues
HashMap
String
orgs
listTokenValues
ORGANISATION_KEY
tokenValues
for
forControl
int
i
i
length
i
block
if
matches
orgs
i
block
put
ORGANISATION_KEY
orgs
i
String
mods
listTokenValues
MODULE_KEY
tokenValues
for
forControl
int
j
j
length
j
block
if
matches
mods
j
block
put
MODULE_KEY
mods
j
String
branches
listTokenValues
BRANCH_KEY
tokenValues
if
branches
length
block
branches
String
getDefaultBranch
ModuleId
orgs
i
mods
j
for
forControl
int
k
k
length
k
block
if
matches
branches
k
block
put
BRANCH_KEY
tokenValues
String
revs
listTokenValues
REVISION_KEY
tokenValues
for
forControl
int
l
l
length
l
block
if
matches
revs
l
block
add
newInstance
orgs
i
mods
j
branches
k
revs
l
return
ModuleRevisionId
toArray
ModuleRevisionId
size
TransferListener
