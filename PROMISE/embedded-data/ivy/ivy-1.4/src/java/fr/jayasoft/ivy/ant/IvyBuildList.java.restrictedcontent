IvyBuildList
List
_buildFiles
ArrayList
String
_reference
boolean
_haltOnError
boolean
_skipBuildWithoutIvy
boolean
_reverse
String
_ivyFilePath
String
_root
boolean
_excludeRoot
String
_leaf
boolean
_excludeLeaf
addFileset
buildFiles
FileSet
add
buildFiles
getReference
String
return
_reference
setReference
reference
String
_reference
reference
getRoot
String
return
_root
setRoot
root
String
_root
root
isExcludeRoot
boolean
return
_excludeRoot
setExcludeRoot
root
boolean
_excludeRoot
root
getLeaf
String
return
_leaf
setLeaf
leaf
String
_leaf
leaf
isExcludeLeaf
boolean
return
_excludeLeaf
setExcludeLeaf
excludeLeaf
boolean
_excludeLeaf
excludeLeaf
execute
if
_reference
block
throw
BuildException
if
isEmpty
block
throw
BuildException
Ivy
ivy
getIvyInstance
_ivyFilePath
getProperty
_ivyFilePath
ivy
Path
path
Path
getProject
Map
buildFiles
HashMap
Collection
mds
ArrayList
List
independent
ArrayList
ModuleDescriptor
rootModuleDescriptor
ModuleDescriptor
leafModuleDescriptor
for
forControl
ListIterator
iter
listIterator
hasNext
block
FileSet
fs
FileSet
next
DirectoryScanner
ds
getDirectoryScanner
getProject
String
builds
getIncludedFiles
for
forControl
int
i
i
length
i
block
File
buildFile
File
getBasedir
builds
i
File
ivyFile
getIvyFileFor
buildFile
if
exists
block
if
_skipBuildWithoutIvy
block
debug
buildFile
ivyFile
block
verbose
buildFile
ivyFile
verbose
add
buildFile
block
try
ModuleDescriptor
md
getInstance
parseDescriptor
ivy
toURL
doValidate
ivy
put
md
buildFile
add
md
if
equals
getModuleRevisionId
getName
block
rootModuleDescriptor
md
if
equals
getModuleRevisionId
getName
block
leafModuleDescriptor
md
catchClause
ex
if
_haltOnError
block
throw
BuildException
buildFile
ivyFile
ex
ex
block
warn
buildFile
ivyFile
getMessage
info
add
buildFile
if
equals
_root
rootModuleDescriptor
block
throw
BuildException
_root
if
equals
_leaf
leafModuleDescriptor
block
throw
BuildException
_leaf
if
rootModuleDescriptor
block
info
getModuleRevisionId
getName
mds
filterModulesFromRoot
mds
rootModuleDescriptor
if
leafModuleDescriptor
block
info
getModuleRevisionId
getName
mds
filterModulesFromLeaf
mds
leafModuleDescriptor
List
sortedModules
sortModuleDescriptors
mds
for
forControl
ListIterator
iter
listIterator
hasNext
block
File
buildFile
File
next
addBuildFile
path
buildFile
if
isReverse
block
reverse
sortedModules
StringBuffer
order
StringBuffer
for
forControl
ListIterator
iter
listIterator
hasNext
block
ModuleDescriptor
md
ModuleDescriptor
next
append
getModuleRevisionId
getModuleId
if
hasNext
block
append
File
buildFile
File
get
md
addBuildFile
path
buildFile
getProject
addReference
getReference
path
getProject
setProperty
toString
filterModulesFromRoot
Collection
mds
Collection
rootmd
ModuleDescriptor
Map
moduleIdMap
HashMap
for
forControl
Iterator
iter
iterator
hasNext
block
ModuleDescriptor
md
ModuleDescriptor
next
put
getModuleRevisionId
getModuleId
md
Set
toKeep
HashSet
processFilterNodeFromRoot
rootmd
toKeep
moduleIdMap
if
_excludeRoot
block
verbose
getModuleRevisionId
getModuleId
getName
remove
rootmd
for
forControl
Iterator
iter
iterator
hasNext
block
ModuleDescriptor
md
ModuleDescriptor
next
verbose
getModuleRevisionId
getModuleId
getName
return
toKeep
processFilterNodeFromRoot
node
ModuleDescriptor
toKeep
Set
moduleIdMap
Map
add
node
DependencyDescriptor
deps
getDependencies
for
forControl
int
i
i
length
i
block
ModuleId
id
deps
i
getDependencyId
if
get
id
block
processFilterNodeFromRoot
ModuleDescriptor
get
id
toKeep
moduleIdMap
filterModulesFromLeaf
Collection
mds
Collection
leafmd
ModuleDescriptor
Map
moduleIdMap
HashMap
for
forControl
Iterator
iter
iterator
hasNext
block
ModuleDescriptor
md
ModuleDescriptor
next
put
getModuleRevisionId
getModuleId
md
Set
toKeep
HashSet
if
_excludeLeaf
block
verbose
getModuleRevisionId
getModuleId
getName
block
add
leafmd
processFilterNodeFromLeaf
leafmd
toKeep
moduleIdMap
for
forControl
Iterator
iter
iterator
hasNext
block
ModuleDescriptor
md
ModuleDescriptor
next
verbose
getModuleRevisionId
getModuleId
getName
return
toKeep
processFilterNodeFromLeaf
node
ModuleDescriptor
toKeep
Set
moduleIdMap
Map
for
forControl
Iterator
iter
values
iterator
hasNext
block
ModuleDescriptor
md
ModuleDescriptor
next
DependencyDescriptor
deps
getDependencies
for
forControl
int
i
i
length
i
block
ModuleId
id
deps
i
getDependencyId
if
getModuleRevisionId
getModuleId
equals
id
contains
md
block
add
md
processFilterNodeFromLeaf
md
toKeep
moduleIdMap
addBuildFile
path
Path
buildFile
File
FileList
fl
FileList
setDir
getParentFile
FileList
FileName
fileName
FileList
FileName
setName
getName
addConfiguredFile
fileName
addFilelist
fl
getIvyFileFor
File
buildFile
File
return
File
getParentFile
_ivyFilePath
isHaltonerror
boolean
return
_haltOnError
setHaltonerror
haltOnError
boolean
_haltOnError
haltOnError
getIvyfilepath
String
return
_ivyFilePath
setIvyfilepath
ivyFilePath
String
_ivyFilePath
ivyFilePath
isSkipbuildwithoutivy
boolean
return
_skipBuildWithoutIvy
setSkipbuildwithoutivy
skipBuildFilesWithoutIvy
boolean
_skipBuildWithoutIvy
skipBuildFilesWithoutIvy
isReverse
boolean
return
_reverse
setReverse
reverse
boolean
_reverse
reverse
IvyTask
