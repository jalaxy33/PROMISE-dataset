IvyPatternHelper
String
CONF_KEY
String
TYPE_KEY
String
EXT_KEY
String
ARTIFACT_KEY
String
BRANCH_KEY
String
REVISION_KEY
String
MODULE_KEY
String
ORGANISATION_KEY
String
ORGANISATION_KEY2
String
ORIGINAL_ARTIFACTNAME_KEY
Pattern
PARAM_PATTERN
compile
Pattern
VAR_PATTERN
compile
substitute
String
pattern
String
moduleRevision
ModuleRevisionId
return
substitute
pattern
getOrganisation
getName
getRevision
getAttributes
substitute
String
pattern
String
moduleRevision
ModuleRevisionId
artifact
String
type
String
ext
String
return
substitute
pattern
moduleRevision
DefaultArtifact
moduleRevision
artifact
type
ext
substitute
String
pattern
String
artifact
Artifact
return
substitute
pattern
artifact
String
substitute
String
pattern
String
artifact
Artifact
origin
ArtifactOrigin
return
substitute
pattern
getModuleRevisionId
artifact
origin
substitute
String
pattern
String
artifact
Artifact
conf
String
return
substitute
pattern
getModuleRevisionId
artifact
conf
substitute
String
pattern
String
mrid
ModuleRevisionId
artifact
Artifact
return
substitute
pattern
mrid
artifact
substitute
String
pattern
String
mrid
ModuleRevisionId
artifact
Artifact
conf
String
return
substitute
pattern
mrid
artifact
conf
substitute
String
pattern
String
mrid
ModuleRevisionId
artifact
Artifact
conf
String
origin
ArtifactOrigin
Map
attributes
HashMap
putAll
getAttributes
putAll
getAttributes
return
substitute
pattern
getOrganisation
getName
getBranch
getRevision
getName
getType
getExt
conf
origin
attributes
substitute
String
pattern
String
org
String
module
String
revision
String
artifact
String
type
String
ext
String
return
substitute
pattern
org
module
revision
artifact
type
ext
substitute
String
pattern
String
org
String
module
String
revision
String
artifact
String
type
String
ext
String
conf
String
return
substitute
pattern
org
module
revision
artifact
type
ext
conf
substitute
String
pattern
String
org
String
module
String
revision
String
artifact
String
type
String
ext
String
conf
String
extraAttributes
Map
return
substitute
pattern
org
module
revision
artifact
type
ext
conf
extraAttributes
substitute
String
pattern
String
org
String
module
String
revision
String
artifact
String
type
String
ext
String
conf
String
origin
ArtifactOrigin
extraAttributes
Map
return
substitute
pattern
org
module
revision
artifact
type
ext
conf
origin
extraAttributes
substitute
String
pattern
String
org
String
module
String
branch
String
revision
String
artifact
String
type
String
ext
String
conf
String
origin
ArtifactOrigin
extraAttributes
Map
Map
tokens
HashMap
extraAttributes
EMPTY_MAP
extraAttributes
put
ORGANISATION_KEY
org
org
put
ORGANISATION_KEY2
org
org
put
MODULE_KEY
module
module
put
BRANCH_KEY
branch
branch
put
REVISION_KEY
revision
revision
put
ARTIFACT_KEY
artifact
module
artifact
put
TYPE_KEY
type
type
put
EXT_KEY
ext
ext
put
CONF_KEY
conf
conf
put
ORIGINAL_ARTIFACTNAME_KEY
origin
OriginalArtifactNameValue
org
module
branch
revision
artifact
type
ext
OriginalArtifactNameValue
origin
return
substituteTokens
pattern
tokens
substitute
String
pattern
String
variables
Map
tokens
Map
return
substituteTokens
substituteVariables
pattern
variables
tokens
substituteVariables
String
pattern
String
variables
Map
return
substituteVariables
pattern
variables
Stack
substituteVariables
String
pattern
String
variables
Map
substituting
Stack
if
pattern
block
return
Matcher
m
matcher
pattern
StringBuffer
sb
StringBuffer
while
find
block
String
var
group
String
val
String
get
var
if
val
block
int
index
if
index
indexOf
var
block
List
cycle
ArrayList
subList
index
size
add
var
throw
IllegalArgumentException
cycle
push
var
val
substituteVariables
val
variables
substituting
pop
block
val
group
appendReplacement
sb
replaceAll
replaceAll
appendTail
sb
return
toString
substituteTokens
String
pattern
String
tokens
Map
StringBuffer
buffer
StringBuffer
char
chars
toCharArray
StringBuffer
optionalPart
StringBuffer
tokenBuffer
boolean
insideOptionalPart
boolean
insideToken
boolean
tokenHadValue
for
forControl
int
i
i
length
i
block
switch
chars
i
case
if
insideOptionalPart
block
throw
IllegalArgumentException
i
pattern
optionalPart
StringBuffer
insideOptionalPart
tokenHadValue
break
case
if
insideOptionalPart
insideToken
block
throw
IllegalArgumentException
i
pattern
if
tokenHadValue
block
append
toString
insideOptionalPart
break
case
if
insideToken
block
throw
IllegalArgumentException
i
pattern
tokenBuffer
StringBuffer
insideToken
break
case
if
insideToken
block
throw
IllegalArgumentException
i
pattern
String
token
toString
Object
tokenValue
get
token
String
value
tokenValue
toString
if
insideOptionalPart
block
tokenHadValue
value
length
append
value
block
if
value
block
value
token
append
value
insideToken
break
case
if
insideToken
block
append
chars
i
if
insideOptionalPart
block
append
chars
i
block
append
chars
i
break
if
insideToken
block
throw
IllegalArgumentException
pattern
if
insideOptionalPart
block
throw
IllegalArgumentException
pattern
return
toString
substituteVariable
String
pattern
String
variable
String
value
String
StringBuffer
buf
StringBuffer
pattern
substituteVariable
buf
variable
value
return
toString
substituteVariable
buf
StringBuffer
variable
String
value
String
String
from
variable
int
fromLength
length
for
forControl
int
index
indexOf
from
index
index
indexOf
from
index
block
replace
index
index
fromLength
value
substituteToken
String
pattern
String
token
String
value
String
StringBuffer
buf
StringBuffer
pattern
substituteToken
buf
token
value
return
toString
substituteToken
buf
StringBuffer
token
String
value
String
String
from
getTokenString
token
int
fromLength
length
for
forControl
int
index
indexOf
from
index
index
indexOf
from
index
block
replace
index
index
fromLength
value
getTokenString
String
token
String
return
token
substituteParams
String
pattern
String
params
Map
return
substituteParams
pattern
params
Stack
substituteParams
String
pattern
String
params
Map
substituting
Stack
if
pattern
block
return
Matcher
m
matcher
pattern
StringBuffer
sb
StringBuffer
while
find
block
String
var
group
String
val
String
get
var
if
val
block
int
index
if
index
indexOf
var
block
List
cycle
ArrayList
subList
index
size
add
var
throw
IllegalArgumentException
cycle
push
var
val
substituteVariables
val
params
substituting
pop
block
val
group
appendReplacement
sb
replaceAll
replaceAll
appendTail
sb
return
toString
main
args
String
String
pattern
println
pattern
println
substitute
pattern
Map
variables
HashMap
put
put
pattern
println
pattern
println
substituteVariables
pattern
variables
OriginalArtifactNameValue
String
org
String
moduleName
String
branch
String
revision
String
artifactName
String
artifactType
String
artifactExt
ArtifactOrigin
origin
OriginalArtifactNameValue
org
String
moduleName
String
branch
String
revision
String
artifactName
String
artifactType
String
artifactExt
String
org
org
moduleName
moduleName
branch
branch
revision
revision
artifactName
artifactName
artifactType
artifactType
artifactExt
artifactExt
OriginalArtifactNameValue
origin
ArtifactOrigin
origin
origin
toString
String
if
origin
block
ModuleRevisionId
revId
newInstance
org
moduleName
branch
revision
Artifact
artifact
DefaultArtifact
revId
artifactName
artifactType
artifactExt
Ivy
ivy
getContext
getIvy
File
cache
getContext
getCache
origin
getSavedArtifactOrigin
cache
artifact
if
origin
block
debug
artifact
cache
return
String
location
getLocation
int
lastPathIndex
lastIndexOf
if
lastPathIndex
block
lastPathIndex
lastIndexOf
int
lastColonIndex
lastIndexOf
return
substring
lastPathIndex
lastColonIndex
getTokenRoot
String
pattern
String
int
index
indexOf
if
index
block
return
pattern
block
return
substring
index
