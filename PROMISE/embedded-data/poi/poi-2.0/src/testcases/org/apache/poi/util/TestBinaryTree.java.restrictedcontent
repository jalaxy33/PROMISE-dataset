TestBinaryTree
TestBinaryTree
name
String
name
testSize
Map
m
BinaryTree
assertEquals
size
LocalTestNode
nodes
makeLocalNodes
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
getValue
assertEquals
k
size
int
count
size
for
forControl
int
k
k
length
k
block
remove
nodes
k
getKey
count
assertEquals
count
size
remove
nodes
k
getKey
assertEquals
count
size
testIsEmpty
Map
m
BinaryTree
assertTrue
isEmpty
LocalTestNode
nodes
makeLocalNodes
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
getValue
assertTrue
isEmpty
int
count
size
for
forControl
int
k
k
length
k
block
remove
nodes
k
getKey
count
if
count
block
assertTrue
isEmpty
block
assertTrue
isEmpty
remove
nodes
k
getKey
if
count
block
assertTrue
isEmpty
block
assertTrue
isEmpty
testContainsKey
Map
m
BinaryTree
try
containsKey
Object
fail
catchClause
ignored
try
containsKey
fail
catchClause
ignored
assertTrue
containsKey
LocalTestNode
nodes
makeLocalNodes
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
assertTrue
containsKey
nodes
k
getKey
assertTrue
containsKey
Integer
try
containsKey
fail
catchClause
ignored
for
forControl
int
k
k
length
k
block
remove
nodes
k
getKey
assertTrue
containsKey
nodes
k
getKey
testContainsValue
Map
m
BinaryTree
LocalTestNode
nodes
makeLocalNodes
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
assertTrue
containsValue
nodes
k
for
forControl
int
k
k
length
k
block
remove
nodes
k
getKey
assertTrue
containsValue
nodes
k
testGet
Map
m
BinaryTree
try
get
Object
fail
catchClause
ignored
try
get
fail
catchClause
ignored
assertNull
get
LocalTestNode
nodes
makeLocalNodes
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
assertSame
get
nodes
k
getKey
nodes
k
assertNull
get
Integer
try
get
fail
catchClause
ignored
for
forControl
int
k
k
length
k
block
assertNotNull
get
nodes
k
getKey
remove
nodes
k
getKey
assertNull
get
nodes
k
getKey
testPut
Map
m
BinaryTree
try
put
Object
fail
catchClause
ignored
try
put
fail
catchClause
ignored
try
put
fail
catchClause
ignored
try
put
Object
fail
catchClause
ignored
LocalTestNode
nodes
makeLocalNodes
for
forControl
int
k
k
length
k
block
assertNull
put
nodes
k
getKey
nodes
k
getValue
try
put
nodes
k
getKey
catchClause
ignored
testRemove
BinaryTree
m
BinaryTree
LocalTestNode
nodes
makeLocalNodes
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
try
remove
fail
catchClause
ignored
try
remove
Object
fail
catchClause
ignored
assertNull
remove
Integer
try
remove
fail
catchClause
ignored
for
forControl
int
k
k
length
k
block
Comparable
key
nodes
k
getKey
assertNotNull
get
key
assertSame
nodes
k
remove
key
assertNull
remove
key
assertNull
get
key
for
forControl
int
k
k
length
k
block
Comparable
key
nodes
k
getKey
assertNotNull
get
key
assertSame
nodes
k
remove
key
assertNull
remove
key
assertNull
get
key
assertTrue
isEmpty
testPutAll
Map
m
BinaryTree
LocalTestNode
nodes
makeLocalNodes
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
Map
m1
HashMap
put
try
putAll
m1
fail
catchClause
ignored
m1
HashMap
put
Object
try
putAll
m1
fail
catchClause
ignored
m1
HashMap
put
try
putAll
m1
fail
catchClause
ignored
m1
HashMap
put
Object
try
putAll
m1
fail
catchClause
ignored
assertEquals
length
size
m
BinaryTree
m1
HashMap
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
getValue
putAll
m1
assertEquals
length
size
for
forControl
int
k
k
length
k
block
assertSame
nodes
k
getValue
get
nodes
k
getKey
testClear
Map
m
BinaryTree
LocalTestNode
nodes
makeLocalNodes
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
getValue
assertTrue
isEmpty
assertTrue
isEmpty
for
forControl
int
k
k
length
k
block
assertTrue
containsKey
nodes
k
getKey
assertTrue
containsValue
nodes
k
getValue
clear
assertTrue
isEmpty
for
forControl
int
k
k
length
k
block
assertTrue
containsKey
nodes
k
getKey
assertTrue
containsValue
nodes
k
getValue
testKeySet
testKeySet
BinaryTree
Map
m
BinaryTree
LocalTestNode
nodes
makeLocalNodes
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
testKeySet
m
m
BinaryTree
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
int
count
size
for
forControl
Iterator
iter
keySet
iterator
hasNext
block
next
remove
count
assertEquals
count
size
assertTrue
isEmpty
m
BinaryTree
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
Set
s
keySet
try
remove
fail
catchClause
ignored
try
remove
Object
fail
catchClause
ignored
for
forControl
int
k
k
length
k
block
Comparable
key
nodes
k
getKey
assertTrue
remove
key
assertTrue
contains
key
assertTrue
containsKey
key
assertTrue
containsValue
nodes
k
assertTrue
isEmpty
m
BinaryTree
Collection
c1
LinkedList
Collection
c2
LinkedList
add
Integer
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
add
nodes
k
getKey
add
nodes
k
getKey
assertTrue
keySet
containsAll
c1
assertTrue
keySet
containsAll
c2
m
BinaryTree
c1
LinkedList
add
Integer
try
keySet
addAll
c1
fail
catchClause
ignored
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
add
nodes
k
getKey
assertTrue
keySet
retainAll
c1
assertEquals
length
size
m
BinaryTree
c1
LinkedList
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
if
k
block
add
nodes
k
getKey
assertTrue
keySet
retainAll
c1
assertEquals
length
size
m
BinaryTree
c1
LinkedList
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
assertTrue
keySet
retainAll
c1
assertEquals
size
m
BinaryTree
c1
LinkedList
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
assertTrue
keySet
removeAll
c1
assertEquals
length
size
m
BinaryTree
c1
LinkedList
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
if
k
block
add
nodes
k
getKey
assertTrue
keySet
removeAll
c1
assertEquals
length
size
m
BinaryTree
c1
LinkedList
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
add
nodes
k
getKey
assertTrue
keySet
removeAll
c1
assertTrue
size
m
BinaryTree
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
keySet
clear
assertTrue
size
testValues
testValues
BinaryTree
Map
m
BinaryTree
LocalTestNode
nodes
makeLocalNodes
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
testValues
m
m
BinaryTree
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
int
count
size
for
forControl
Iterator
iter
values
iterator
hasNext
block
next
remove
count
assertEquals
count
size
assertTrue
isEmpty
m
BinaryTree
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
count
size
Collection
s
values
for
forControl
int
k
k
count
k
block
assertTrue
remove
nodes
k
assertTrue
contains
nodes
k
assertTrue
containsKey
nodes
k
getKey
assertTrue
containsValue
nodes
k
assertTrue
isEmpty
m
BinaryTree
Collection
c1
LinkedList
Collection
c2
LinkedList
add
LocalTestNode
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
add
nodes
k
add
nodes
k
assertTrue
values
containsAll
c1
assertTrue
values
containsAll
c2
m
BinaryTree
c1
LinkedList
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
add
nodes
k
try
values
addAll
c1
fail
catchClause
ignored
m
BinaryTree
c1
LinkedList
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
add
nodes
k
assertTrue
values
retainAll
c1
assertEquals
length
size
m
BinaryTree
c1
LinkedList
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
if
k
block
add
nodes
k
assertTrue
values
retainAll
c1
assertEquals
length
size
m
BinaryTree
c1
LinkedList
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
assertTrue
values
retainAll
c1
assertEquals
size
m
BinaryTree
c1
LinkedList
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
assertTrue
values
removeAll
c1
assertEquals
length
size
m
BinaryTree
c1
LinkedList
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
if
k
block
add
nodes
k
assertTrue
values
removeAll
c1
assertEquals
length
size
m
BinaryTree
c1
LinkedList
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
add
nodes
k
assertTrue
values
removeAll
c1
assertEquals
size
m
BinaryTree
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
values
clear
assertEquals
size
testEntrySet
testEntrySet
BinaryTree
Map
m
BinaryTree
LocalTestNode
nodes
makeLocalNodes
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
testEntrySet
m
m
BinaryTree
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
try
Map
Entry
entrySet
iterator
next
fail
catchClause
ignored
int
count
size
for
forControl
Iterator
iter
entrySet
iterator
hasNext
block
next
remove
count
assertEquals
count
size
assertTrue
isEmpty
m
BinaryTree
Collection
c1
LinkedList
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
add
nodes
k
getKey
try
entrySet
addAll
c1
fail
catchClause
ignored
m
BinaryTree
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
entrySet
clear
assertEquals
size
m
BinaryTree
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
int
x
for
forControl
Iterator
iter
entrySet
iterator
hasNext
block
Map
Entry
entry
Map
Entry
next
assertSame
getKey
nodes
x
getKey
assertSame
getValue
nodes
x
x
testEquals
Map
m
BinaryTree
LocalTestNode
nodes
makeLocalNodes
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
assertTrue
equals
assertEquals
m
m
Map
m1
HashMap
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
assertEquals
m
m1
m1
BinaryTree
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
assertTrue
equals
m1
m1
BinaryTree
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
LocalTestNode
node1
LocalTestNode
put
getKey
node1
assertTrue
equals
m1
m1
BinaryTree
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
length
k
assertTrue
equals
m1
m1
BinaryTree
for
forControl
int
k
length
k
k
block
put
nodes
k
getKey
nodes
k
assertEquals
m
m1
testHashCode
Map
m
BinaryTree
LocalTestNode
nodes
makeLocalNodes
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
Map
m1
BinaryTree
for
forControl
int
k
length
k
k
block
put
nodes
k
getKey
nodes
k
assertTrue
hashCode
hashCode
testConstructors
BinaryTree
m
BinaryTree
assertTrue
isEmpty
BinaryTree
m1
BinaryTree
m
assertTrue
isEmpty
m1
BinaryTree
LocalTestNode
nodes
makeLocalNodes
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
m
BinaryTree
m1
assertEquals
m
m1
Map
m2
HashMap
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
m
BinaryTree
m2
assertEquals
m
m2
m2
HashMap
put
put
try
m
BinaryTree
m2
fail
catchClause
ignored
put
try
m
BinaryTree
m2
fail
catchClause
ignored
put
Object
try
m
BinaryTree
m2
fail
catchClause
ignored
put
Integer
try
m
BinaryTree
m2
fail
catchClause
ignored
remove
put
Integer
try
m
BinaryTree
m2
fail
catchClause
ignored
clear
put
put
Object
try
m
BinaryTree
m2
fail
catchClause
ignored
testGetKeyForValue
BinaryTree
m
BinaryTree
try
getKeyForValue
Object
fail
catchClause
ignored
try
getKeyForValue
fail
catchClause
ignored
assertNull
getKeyForValue
LocalTestNode
nodes
makeLocalNodes
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
assertSame
getKeyForValue
nodes
k
nodes
k
getKey
assertNull
getKeyForValue
LocalTestNode
try
getKeyForValue
fail
catchClause
ignored
for
forControl
int
k
k
length
k
block
assertNotNull
getKeyForValue
nodes
k
remove
nodes
k
getKey
assertNull
getKeyForValue
nodes
k
testRemoveValue
BinaryTree
m
BinaryTree
LocalTestNode
nodes
makeLocalNodes
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
try
removeValue
fail
catchClause
ignored
try
removeValue
Object
fail
catchClause
ignored
assertNull
remove
Integer
try
removeValue
fail
catchClause
ignored
for
forControl
int
k
k
length
k
block
assertNotNull
getKeyForValue
nodes
k
assertSame
nodes
k
getKey
removeValue
nodes
k
assertNull
removeValue
nodes
k
assertNull
getKeyForValue
nodes
k
for
forControl
int
k
k
length
k
block
assertNotNull
getKeyForValue
nodes
k
assertSame
nodes
k
getKey
removeValue
nodes
k
assertNull
removeValue
nodes
k
assertNull
getKeyForValue
nodes
k
assertTrue
isEmpty
testEntrySetByValue
testEntrySetByValue
BinaryTree
BinaryTree
m
BinaryTree
LocalTestNode
nodes
makeLocalNodes
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
testEntrySetByValue
m
m
BinaryTree
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
try
Map
Entry
entrySetByValue
iterator
next
fail
catchClause
ignored
int
count
size
for
forControl
Iterator
iter
entrySetByValue
iterator
hasNext
block
next
remove
count
assertEquals
count
size
assertTrue
isEmpty
m
BinaryTree
Collection
c1
LinkedList
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
add
nodes
k
getKey
try
entrySetByValue
addAll
c1
fail
catchClause
ignored
m
BinaryTree
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
entrySetByValue
clear
assertEquals
size
m
BinaryTree
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
int
x
for
forControl
Iterator
iter
entrySetByValue
iterator
hasNext
block
Map
Entry
entry
Map
Entry
next
assertSame
getKey
nodes
x
getKey
assertSame
getValue
nodes
x
x
testKeySetByValue
testKeySetByValue
BinaryTree
BinaryTree
m
BinaryTree
LocalTestNode
nodes
makeLocalNodes
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
testKeySetByValue
m
m
BinaryTree
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
int
count
size
for
forControl
Iterator
iter
keySetByValue
iterator
hasNext
block
next
remove
count
assertEquals
count
size
assertTrue
isEmpty
m
BinaryTree
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
Set
s
keySetByValue
try
remove
fail
catchClause
ignored
try
remove
Object
fail
catchClause
ignored
for
forControl
int
k
k
length
k
block
Comparable
key
nodes
k
getKey
assertTrue
remove
key
assertTrue
contains
key
assertTrue
containsKey
key
assertTrue
containsValue
nodes
k
assertTrue
isEmpty
m
BinaryTree
Collection
c1
LinkedList
Collection
c2
LinkedList
add
Integer
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
add
nodes
k
getKey
add
nodes
k
getKey
assertTrue
keySetByValue
containsAll
c1
assertTrue
keySetByValue
containsAll
c2
m
BinaryTree
c1
LinkedList
add
Integer
try
keySetByValue
addAll
c1
fail
catchClause
ignored
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
add
nodes
k
getKey
assertTrue
keySetByValue
retainAll
c1
assertEquals
length
size
m
BinaryTree
c1
LinkedList
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
if
k
block
add
nodes
k
getKey
assertTrue
keySetByValue
retainAll
c1
assertEquals
length
size
m
BinaryTree
c1
LinkedList
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
assertTrue
keySetByValue
retainAll
c1
assertEquals
size
m
BinaryTree
c1
LinkedList
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
assertTrue
keySetByValue
removeAll
c1
assertEquals
length
size
m
BinaryTree
c1
LinkedList
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
if
k
block
add
nodes
k
getKey
assertTrue
keySetByValue
removeAll
c1
assertEquals
length
size
m
BinaryTree
c1
LinkedList
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
add
nodes
k
getKey
assertTrue
keySetByValue
removeAll
c1
assertTrue
size
m
BinaryTree
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
keySetByValue
clear
assertTrue
size
testValuesByValue
testValuesByValue
BinaryTree
BinaryTree
m
BinaryTree
LocalTestNode
nodes
makeLocalNodes
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
testValuesByValue
m
m
BinaryTree
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
int
count
size
for
forControl
Iterator
iter
valuesByValue
iterator
hasNext
block
next
remove
count
assertEquals
count
size
assertTrue
isEmpty
m
BinaryTree
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
count
size
Collection
s
valuesByValue
for
forControl
int
k
k
count
k
block
assertTrue
remove
nodes
k
assertTrue
contains
nodes
k
assertTrue
containsKey
nodes
k
getKey
assertTrue
containsValue
nodes
k
assertTrue
isEmpty
m
BinaryTree
Collection
c1
LinkedList
Collection
c2
LinkedList
add
LocalTestNode
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
add
nodes
k
add
nodes
k
assertTrue
valuesByValue
containsAll
c1
assertTrue
valuesByValue
containsAll
c2
m
BinaryTree
c1
LinkedList
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
add
nodes
k
try
valuesByValue
addAll
c1
fail
catchClause
ignored
m
BinaryTree
c1
LinkedList
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
add
nodes
k
assertTrue
valuesByValue
retainAll
c1
assertEquals
length
size
m
BinaryTree
c1
LinkedList
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
if
k
block
add
nodes
k
assertTrue
valuesByValue
retainAll
c1
assertEquals
length
size
m
BinaryTree
c1
LinkedList
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
assertTrue
valuesByValue
retainAll
c1
assertEquals
size
m
BinaryTree
c1
LinkedList
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
assertTrue
valuesByValue
removeAll
c1
assertEquals
length
size
m
BinaryTree
c1
LinkedList
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
if
k
block
add
nodes
k
assertTrue
valuesByValue
removeAll
c1
assertEquals
length
size
m
BinaryTree
c1
LinkedList
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
add
nodes
k
assertTrue
valuesByValue
removeAll
c1
assertEquals
size
m
BinaryTree
for
forControl
int
k
k
length
k
block
put
nodes
k
getKey
nodes
k
valuesByValue
clear
assertEquals
size
testKeySet
m
Map
Set
s
keySet
assertEquals
size
size
assertEquals
isEmpty
isEmpty
LocalTestNode
node
LocalTestNode
put
getKey
node
assertTrue
contains
getKey
assertEquals
size
size
assertEquals
isEmpty
isEmpty
remove
getKey
assertTrue
contains
getKey
assertEquals
size
size
assertEquals
isEmpty
isEmpty
try
contains
fail
catchClause
ignored
try
contains
Object
fail
catchClause
ignored
for
forControl
int
k
k
size
k
block
assertTrue
contains
Integer
k
int
count
for
forControl
Iterator
iter
iterator
hasNext
block
next
count
assertEquals
count
size
put
getKey
node
Iterator
iter
keySet
iterator
LocalTestNode
node2
LocalTestNode
put
getKey
node2
try
next
fail
catchClause
ignored
remove
getKey
iter
iterator
remove
getKey
try
next
fail
catchClause
ignored
put
getKey
node
iter
iterator
remove
getKey
try
next
fail
catchClause
ignored
iter
iterator
count
boolean
terminated
try
while
block
next
count
catchClause
ignored
terminated
assertTrue
terminated
assertEquals
size
count
iter
iterator
try
remove
fail
catchClause
ignored
put
getKey
node
iter
iterator
next
put
getKey
node2
try
remove
fail
catchClause
ignored
Iterator
iter2
iterator
next
LocalTestNode
node3
LocalTestNode
put
getKey
node3
try
remove
fail
catchClause
ignored
int
r_count
for
forControl
iter
iterator
hasNext
block
if
next
equals
getKey
block
try
remove
r_count
remove
fail
catchClause
ignored
assertEquals
r_count
assertEquals
r_count
assertTrue
contains
getKey
r_count
put
getKey
node
Object
a1
toArray
assertEquals
size
length
if
length
block
Comparable
first
Comparable
a1
for
forControl
int
k
k
length
k
block
Comparable
second
Comparable
a1
k
assertTrue
compareTo
second
first
second
iter
iterator
first
Comparable
next
for
forControl
hasNext
block
Comparable
second
Comparable
next
assertTrue
compareTo
second
first
second
try
String
array2
String
toArray
String
if
size
block
fail
catchClause
ignored
Comparable
array2
Comparable
toArray
Comparable
Integer
array3
Integer
toArray
Integer
size
if
length
block
Integer
first
array3
for
forControl
int
k
k
length
k
block
Integer
second
array3
k
assertTrue
compareTo
second
first
second
try
add
fail
catchClause
ignored
assertTrue
equals
assertEquals
s
s
Set
hs
HashSet
s
assertEquals
s
hs
assertEquals
hs
s
assertTrue
hashCode
hashCode
testKeySetByValue
m
BinaryTree
Set
s
keySetByValue
assertEquals
size
size
assertEquals
isEmpty
isEmpty
LocalTestNode
node
LocalTestNode
put
getKey
node
assertTrue
contains
getKey
assertEquals
size
size
assertEquals
isEmpty
isEmpty
remove
getKey
assertTrue
contains
getKey
assertEquals
size
size
assertEquals
isEmpty
isEmpty
try
contains
fail
catchClause
ignored
try
contains
Object
fail
catchClause
ignored
for
forControl
int
k
k
size
k
block
assertTrue
contains
Integer
k
int
count
for
forControl
Iterator
iter
iterator
hasNext
block
next
count
assertEquals
count
size
put
getKey
node
Iterator
iter
keySetByValue
iterator
LocalTestNode
node2
LocalTestNode
put
getKey
node2
try
next
fail
catchClause
ignored
remove
getKey
iter
iterator
remove
getKey
try
next
fail
catchClause
ignored
put
getKey
node
iter
iterator
remove
getKey
try
next
fail
catchClause
ignored
iter
iterator
count
boolean
terminated
try
while
block
next
count
catchClause
ignored
terminated
assertTrue
terminated
assertEquals
size
count
iter
iterator
try
remove
fail
catchClause
ignored
put
getKey
node
iter
iterator
next
put
getKey
node2
try
remove
fail
catchClause
ignored
Iterator
iter2
iterator
next
LocalTestNode
node3
LocalTestNode
put
getKey
node3
try
remove
fail
catchClause
ignored
int
r_count
for
forControl
iter
iterator
hasNext
block
if
next
equals
getKey
block
try
remove
r_count
remove
fail
catchClause
ignored
assertEquals
r_count
assertEquals
r_count
assertTrue
contains
getKey
r_count
put
getKey
node
Object
a1
toArray
assertEquals
size
length
try
String
array2
String
toArray
String
if
size
block
fail
catchClause
ignored
Comparable
array2
Comparable
toArray
Comparable
Integer
array3
Integer
toArray
Integer
size
try
add
fail
catchClause
ignored
assertTrue
equals
assertEquals
s
s
Set
hs
HashSet
s
assertEquals
s
hs
assertEquals
hs
s
assertTrue
hashCode
hashCode
testValues
m
Map
Collection
s
values
assertEquals
size
size
assertEquals
isEmpty
isEmpty
LocalTestNode
node
LocalTestNode
put
getKey
node
assertEquals
size
size
assertEquals
isEmpty
isEmpty
remove
getKey
assertEquals
size
size
assertEquals
isEmpty
isEmpty
assertTrue
contains
node
for
forControl
int
k
k
size
k
block
assertTrue
contains
LocalTestNode
k
put
getKey
node
assertTrue
contains
node
remove
getKey
assertTrue
contains
node
int
count
for
forControl
Iterator
iter
iterator
hasNext
block
next
count
assertEquals
size
count
LocalTestNode
node4
LocalTestNode
put
getKey
node4
Iterator
iter
iterator
put
getKey
node
try
next
fail
catchClause
ignored
iter
iterator
remove
getKey
try
next
fail
catchClause
ignored
put
getKey
node
iter
iterator
remove
node
try
next
fail
catchClause
ignored
iter
iterator
count
boolean
terminated
try
while
block
next
count
catchClause
ignored
terminated
assertTrue
terminated
assertEquals
size
count
iter
iterator
try
remove
fail
catchClause
ignored
Iterator
iter2
iterator
try
remove
fail
catchClause
ignored
put
getKey
node
iter
iterator
next
LocalTestNode
node2
LocalTestNode
put
getKey
node2
try
remove
fail
catchClause
ignored
LocalTestNode
node3
LocalTestNode
put
getKey
node3
iter2
iterator
while
hasNext
block
next
int
r_count
for
forControl
iter
iterator
hasNext
block
if
next
equals
node3
block
try
remove
r_count
remove
fail
catchClause
ignored
assertEquals
r_count
assertEquals
r_count
assertTrue
contains
node3
Object
a1
toArray
assertTrue
length
size
if
length
block
Comparable
first
Comparable
a1
for
forControl
int
k
k
length
k
block
Comparable
second
Comparable
a1
k
assertTrue
compareTo
second
first
second
iter
iterator
first
Comparable
next
for
forControl
hasNext
block
Comparable
second
Comparable
next
assertTrue
compareTo
second
first
second
try
String
array2
String
toArray
String
if
size
block
fail
catchClause
ignored
remove
getKey
remove
getKey
remove
getKey
LocalTestNode
array2
LocalTestNode
toArray
LocalTestNode
LocalTestNode
array3
LocalTestNode
toArray
LocalTestNode
size
if
length
block
LocalTestNode
first
array3
for
forControl
int
k
k
length
k
block
LocalTestNode
second
array3
k
assertTrue
compareTo
second
first
second
try
add
getKey
fail
catchClause
ignored
assertTrue
equals
assertEquals
s
s
Set
hs
HashSet
s
assertTrue
equals
hs
assertTrue
equals
s
testValuesByValue
m
BinaryTree
Collection
s
valuesByValue
assertEquals
size
size
assertEquals
isEmpty
isEmpty
LocalTestNode
node
LocalTestNode
put
getKey
node
assertEquals
size
size
assertEquals
isEmpty
isEmpty
remove
getKey
assertEquals
size
size
assertEquals
isEmpty
isEmpty
assertTrue
contains
node
for
forControl
int
k
k
size
k
block
assertTrue
contains
LocalTestNode
k
put
getKey
node
assertTrue
contains
node
remove
getKey
assertTrue
contains
node
int
count
for
forControl
Iterator
iter
iterator
hasNext
block
next
count
assertEquals
size
count
LocalTestNode
node4
LocalTestNode
put
getKey
node4
Iterator
iter
iterator
put
getKey
node
try
next
fail
catchClause
ignored
iter
iterator
remove
getKey
try
next
fail
catchClause
ignored
put
getKey
node
iter
iterator
remove
node
try
next
fail
catchClause
ignored
iter
iterator
count
boolean
terminated
try
while
block
next
count
catchClause
ignored
terminated
assertTrue
terminated
assertEquals
size
count
iter
iterator
try
remove
fail
catchClause
ignored
Iterator
iter2
iterator
try
remove
fail
catchClause
ignored
put
getKey
node
iter
iterator
next
LocalTestNode
node2
LocalTestNode
put
getKey
node2
try
remove
fail
catchClause
ignored
LocalTestNode
node3
LocalTestNode
put
getKey
node3
iter2
iterator
while
hasNext
block
next
int
r_count
for
forControl
iter
iterator
hasNext
block
if
next
equals
node3
block
try
remove
r_count
remove
fail
catchClause
ignored
assertEquals
r_count
assertEquals
r_count
assertTrue
contains
node3
Object
a1
toArray
assertTrue
length
size
try
String
array2
String
toArray
String
if
size
block
fail
catchClause
ignored
remove
getKey
remove
getKey
remove
getKey
LocalTestNode
array2
LocalTestNode
toArray
LocalTestNode
LocalTestNode
array3
LocalTestNode
toArray
LocalTestNode
size
try
add
getKey
fail
catchClause
ignored
assertTrue
equals
assertEquals
s
s
Set
hs
HashSet
s
assertTrue
equals
hs
assertTrue
equals
s
testEntrySet
m
Map
Set
s
entrySet
assertEquals
size
size
assertEquals
isEmpty
isEmpty
LocalTestNode
node
LocalTestNode
put
getKey
node
assertEquals
size
size
assertEquals
isEmpty
isEmpty
remove
getKey
assertEquals
size
size
assertEquals
isEmpty
isEmpty
int
count
for
forControl
Iterator
iter
iterator
hasNext
block
next
count
assertEquals
size
count
LocalTestNode
node2
LocalTestNode
if
size
block
put
getKey
node2
Iterator
iter
iterator
put
getKey
node
try
next
fail
catchClause
ignored
remove
getKey
iter
iterator
remove
getKey
try
next
fail
catchClause
ignored
put
getKey
node
iter
iterator
count
boolean
terminated
try
while
block
next
count
catchClause
ignored
terminated
assertTrue
terminated
assertEquals
size
count
iter
iterator
try
remove
fail
catchClause
ignored
iter
iterator
next
LocalTestNode
node3
LocalTestNode
put
getKey
node3
try
remove
fail
catchClause
ignored
int
r_count
int
when
size
int
timer
for
forControl
iter
iterator
hasNext
block
next
if
timer
when
block
try
remove
r_count
remove
fail
catchClause
ignored
assertEquals
r_count
timer
assertEquals
r_count
Iterator
iter2
iterator
try
remove
fail
catchClause
ignored
iter2
iterator
while
hasNext
block
next
LocalTestNode
node4
LocalTestNode
put
getKey
node4
try
remove
fail
catchClause
ignored
Object
a1
toArray
assertTrue
length
size
if
length
block
Map
Entry
first
Map
Entry
a1
for
forControl
int
k
k
length
k
block
Map
Entry
second
Map
Entry
a1
k
assertTrue
Comparable
getKey
first
second
iter
iterator
first
Map
Entry
next
for
forControl
hasNext
block
Map
Entry
second
Map
Entry
next
assertTrue
Comparable
getKey
first
second
try
Integer
array2
Integer
toArray
Integer
if
size
block
fail
catchClause
ignored
Map
Entry
array2
Map
Entry
toArray
Map
Entry
Map
Entry
array3
Map
Entry
toArray
Map
Entry
size
if
length
block
Comparable
first
Comparable
Map
Entry
array3
for
forControl
int
k
k
length
k
block
Comparable
second
Comparable
Map
Entry
array3
k
assertTrue
compareTo
second
first
second
try
add
getKey
fail
catchClause
ignored
assertTrue
equals
assertEquals
s
s
Set
hs
HashSet
s
assertEquals
s
hs
assertEquals
hs
s
assertTrue
hashCode
hashCode
testEntrySetByValue
m
BinaryTree
Set
s
entrySetByValue
assertEquals
size
size
assertEquals
isEmpty
isEmpty
LocalTestNode
node
LocalTestNode
put
getKey
node
assertEquals
size
size
assertEquals
isEmpty
isEmpty
remove
getKey
assertEquals
size
size
assertEquals
isEmpty
isEmpty
int
count
for
forControl
Iterator
iter
iterator
hasNext
block
next
count
assertEquals
size
count
LocalTestNode
node2
LocalTestNode
if
size
block
put
getKey
node2
Iterator
iter
iterator
put
getKey
node
try
next
fail
catchClause
ignored
remove
getKey
iter
iterator
remove
getKey
try
next
fail
catchClause
ignored
put
getKey
node
iter
iterator
count
boolean
terminated
try
while
block
next
count
catchClause
ignored
terminated
assertTrue
terminated
assertEquals
size
count
iter
iterator
try
remove
fail
catchClause
ignored
iter
iterator
next
LocalTestNode
node3
LocalTestNode
put
getKey
node3
try
remove
fail
catchClause
ignored
int
r_count
int
when
size
int
timer
for
forControl
iter
iterator
hasNext
block
next
if
timer
when
block
try
remove
r_count
remove
fail
catchClause
ignored
assertEquals
r_count
timer
assertEquals
r_count
Iterator
iter2
iterator
try
remove
fail
catchClause
ignored
iter2
iterator
while
hasNext
block
next
LocalTestNode
node4
LocalTestNode
put
getKey
node4
try
remove
fail
catchClause
ignored
Object
a1
toArray
assertTrue
length
size
if
length
block
Map
Entry
first
Map
Entry
a1
for
forControl
int
k
k
length
k
block
Map
Entry
second
Map
Entry
a1
k
assertTrue
Comparable
getKey
first
second
iter
iterator
first
Map
Entry
next
for
forControl
hasNext
block
Map
Entry
second
Map
Entry
next
assertTrue
Comparable
getKey
first
second
try
Integer
array2
Integer
toArray
Integer
if
size
block
fail
catchClause
ignored
Map
Entry
array2
Map
Entry
toArray
Map
Entry
Map
Entry
array3
Map
Entry
toArray
Map
Entry
size
if
length
block
Comparable
first
Comparable
Map
Entry
array3
for
forControl
int
k
k
length
k
block
Comparable
second
Comparable
Map
Entry
array3
k
assertTrue
compareTo
second
first
second
try
add
getKey
fail
catchClause
ignored
assertTrue
equals
assertEquals
s
s
Set
hs
HashSet
s
assertEquals
s
hs
assertEquals
hs
s
assertTrue
hashCode
hashCode
makeLocalNodes
LocalTestNode
LocalTestNode
nodes
LocalTestNode
for
forControl
int
k
k
length
k
block
nodes
k
LocalTestNode
k
return
nodes
main
unused_args
String
run
TestBinaryTree
TestCase
