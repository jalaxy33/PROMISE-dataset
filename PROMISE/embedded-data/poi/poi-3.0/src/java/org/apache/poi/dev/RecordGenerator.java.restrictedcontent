RecordGenerator
main
args
String
forName
if
length
block
println
println
block
generateRecords
args
args
args
args
generateRecords
defintionsDir
String
recordStyleDir
String
destSrcPathDir
String
testSrcPathDir
String
File
definitionsFile
File
defintionsDir
for
forControl
int
i
i
listFiles
length
i
block
File
file
listFiles
i
if
isFile
getName
endsWith
getName
endsWith
block
DocumentBuilderFactory
factory
newInstance
DocumentBuilder
builder
newDocumentBuilder
Document
document
parse
file
Element
record
getDocumentElement
String
extendstg
getElementsByTagName
item
getFirstChild
getNodeValue
String
suffix
getElementsByTagName
item
getFirstChild
getNodeValue
String
recordName
getAttributes
getNamedItem
getNodeValue
String
packageName
getAttributes
getNamedItem
getNodeValue
packageName
replace
String
destinationPath
destSrcPathDir
packageName
File
destinationPathFile
File
destinationPath
mkdirs
String
destinationFilepath
destinationPath
recordName
suffix
transform
file
File
destinationFilepath
File
recordStyleDir
toLowerCase
println
suffix
destinationFilepath
destinationPath
testSrcPathDir
packageName
destinationPathFile
File
destinationPath
mkdirs
destinationFilepath
destinationPath
recordName
suffix
if
exists
File
destinationFilepath
block
String
temp
recordStyleDir
toLowerCase
transform
file
File
destinationFilepath
File
temp
println
destinationFilepath
block
println
destinationFilepath
transform
in
File
out
File
xslt
File
Reader
r
FileReader
xslt
StreamSource
ss
StreamSource
r
TransformerFactory
tf
newInstance
Transformer
t
try
t
newTransformer
ss
catchClause
ex
println
xslt
throw
ex
Properties
p
Properties
setProperty
METHOD
setOutputProperties
p
Result
result
StreamResult
out
transform
StreamSource
in
result
