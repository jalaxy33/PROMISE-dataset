FormulaParser
int
FORMULA_TYPE_CELL
int
FORMULA_TYPE_SHARED
int
FORMULA_TYPE_ARRAY
int
FORMULA_TYPE_CONDFOMRAT
int
FORMULA_TYPE_NAMEDRANGE
String
formulaString
int
pointer
int
formulaLength
List
tokens
java
util
Stack
List
functionTokens
LinkedList
char
TAB
char
CR
char
look
Workbook
book
FormulaParser
formula
String
book
Workbook
formulaString
formula
pointer
book
book
formulaLength
length
GetChar
if
pointer
formulaLength
block
look
char
return
look
charAt
pointer
Error
s
String
println
s
Abort
s
String
Error
s
throw
RuntimeException
s
pointer
formulaString
Expected
s
String
Abort
s
IsAlpha
boolean
c
char
return
isLetter
c
c
c
IsDigit
boolean
c
char
return
isDigit
c
IsAlNum
boolean
c
char
return
IsAlpha
c
IsDigit
c
IsAddop
boolean
c
char
return
c
c
IsWhite
boolean
c
char
return
c
c
TAB
IsSpecialChar
boolean
c
char
return
c
c
c
c
c
c
SkipWhite
while
IsWhite
look
block
GetChar
Match
x
char
if
look
x
block
Expected
x
block
GetChar
SkipWhite
GetName
String
StringBuffer
Token
StringBuffer
if
IsAlpha
look
look
block
Expected
if
look
block
Match
boolean
done
look
while
done
block
append
toUpperCase
look
GetChar
if
look
block
Match
done
look
block
while
IsAlNum
look
block
append
toUpperCase
look
GetChar
SkipWhite
return
toString
GetNameAsIs
String
StringBuffer
Token
StringBuffer
while
IsAlNum
look
IsWhite
look
IsSpecialChar
look
block
Token
append
look
GetChar
return
toString
GetExponent
String
StringBuffer
retval
StringBuffer
String
sign
GetChar
if
look
block
sign
GetChar
while
IsDigit
look
block
append
look
GetChar
if
length
block
insert
sign
return
toString
GetNum
String
StringBuffer
value
StringBuffer
if
IsDigit
look
Expected
while
IsDigit
look
block
append
look
GetChar
SkipWhite
return
toString
Emit
s
String
print
TAB
s
EmitLn
s
String
Emit
s
println
Ident
String
name
name
GetName
if
look
block
function
name
if
look
block
String
first
name
Match
String
second
GetName
add
AreaPtg
first
second
if
look
block
Match
String
sheetName
name
String
first
GetName
short
externIdx
checkExternSheet
getSheetIndex
sheetName
if
look
block
Match
String
second
GetName
if
look
block
Match
String
third
GetName
if
equals
second
throw
RuntimeException
add
Area3DPtg
first
third
externIdx
block
add
Area3DPtg
first
second
externIdx
block
add
Ref3DPtg
first
externIdx
block
boolean
cellRef
boolean
boolLit
equals
equals
if
boolLit
block
add
BoolPtg
name
if
cellRef
block
add
ReferencePtg
name
block
addArgumentPointer
if
functionTokens
size
block
List
arguments
List
functionTokens
get
add
get
size
function
name
String
functionTokens
add
ArrayList
Match
int
numArgs
Arguments
Match
AbstractFunctionPtg
functionPtg
getFunction
name
byte
numArgs
add
functionPtg
if
getName
equals
block
add
NamePtg
name
book
functionTokens
remove
getPtgSize
int
index
int
int
count
Iterator
ptgIterator
listIterator
index
while
hasNext
block
Ptg
ptg
Ptg
next
count
getSize
return
count
getPtgSize
int
start
int
end
int
int
count
int
index
start
Iterator
ptgIterator
listIterator
index
while
hasNext
index
end
block
Ptg
ptg
Ptg
next
count
getSize
index
return
count
getFunction
AbstractFunctionPtg
name
String
numArgs
byte
AbstractFunctionPtg
retval
if
equals
block
retval
FuncVarPtg
ATTR_NAME
numArgs
List
argumentPointers
List
functionTokens
get
AttrPtg
ifPtg
AttrPtg
setData
short
setOptimizedIf
if
size
size
block
throw
IllegalArgumentException
size
int
ifIndex
indexOf
get
add
ifIndex
ifPtg
int
gotoIndex
indexOf
get
AttrPtg
goto1Ptg
AttrPtg
setGoto
add
gotoIndex
goto1Ptg
if
numArgs
block
AttrPtg
goto2Ptg
AttrPtg
setGoto
setData
short
getSize
add
goto2Ptg
setData
short
getPtgSize
ifIndex
gotoIndex
int
ptgCount
getPtgSize
gotoIndex
getSize
getSize
if
ptgCount
int
MAX_VALUE
block
throw
RuntimeException
setData
short
ptgCount
block
retval
FuncVarPtg
name
numArgs
return
retval
Arguments
int
int
numArgs
if
look
block
numArgs
Expression
addArgumentPointer
while
look
look
block
if
look
block
Match
block
Match
Expression
addArgumentPointer
numArgs
return
numArgs
Factor
if
look
block
Match
Factor
add
UnaryMinusPtg
if
look
block
Match
Factor
add
UnaryPlusPtg
if
look
block
Match
Expression
Match
add
ParenthesisPtg
if
IsAlpha
look
look
block
Ident
if
look
block
StringLiteral
if
look
look
block
add
MissingArgPtg
block
String
number
GetNum
if
look
block
Match
String
decimalPart
if
IsDigit
look
number
number
GetNum
if
look
block
String
exponent
GetExponent
number
exponent
add
NumberPtg
number
if
look
block
String
exponent
GetExponent
number
exponent
add
NumberPtg
number
block
add
getNumberPtgFromString
number
getNumberPtgFromString
Ptg
number
String
try
return
IntPtg
number
catchClause
e
return
NumberPtg
number
StringLiteral
if
look
Expected
block
GetChar
StringBuffer
Token
StringBuffer
for
forControl
block
if
look
block
GetChar
SkipWhite
if
look
append
break
if
look
block
break
block
append
look
GetChar
add
StringPtg
toString
Multiply
Match
Factor
add
MultiplyPtg
Divide
Match
Factor
add
DividePtg
Term
Factor
while
look
look
look
look
block
if
look
Multiply
if
look
Divide
if
look
Power
if
look
Concat
Add
Match
Term
add
AddPtg
Concat
Match
Term
add
ConcatPtg
Equal
Match
Expression
add
EqualPtg
Subtract
Match
Term
add
SubtractPtg
Power
Match
Term
add
PowerPtg
Expression
Term
while
IsAddop
look
block
if
look
Add
if
look
Subtract
if
look
look
look
block
if
look
Equal
if
look
GreaterThan
if
look
LessThan
return
GreaterThan
Match
if
look
GreaterEqual
block
Expression
add
GreaterThanPtg
LessThan
Match
if
look
LessEqual
if
look
NotEqual
block
Expression
add
LessThanPtg
GreaterEqual
Match
Expression
add
GreaterEqualPtg
LessEqual
Match
Expression
add
LessEqualPtg
NotEqual
Match
Expression
add
NotEqualPtg
init
GetChar
SkipWhite
parse
synchronized
tokens
init
Expression
getRPNPtg
Ptg
return
getRPNPtg
FORMULA_TYPE_CELL
getRPNPtg
Ptg
formulaType
int
Node
node
createTree
setRootLevelRVA
node
formulaType
setParameterRVA
node
formulaType
return
Ptg
toArray
Ptg
setRootLevelRVA
n
Node
formulaType
int
Ptg
p
Ptg
getValue
if
formulaType
FORMULA_TYPE_NAMEDRANGE
block
if
getDefaultOperandClass
CLASS_REF
block
setClass
n
CLASS_REF
block
setClass
n
CLASS_ARRAY
block
setClass
n
CLASS_VALUE
setParameterRVA
n
Node
formulaType
int
Ptg
p
getValue
int
numOperands
getNumChildren
if
p
AbstractFunctionPtg
block
for
forControl
int
i
i
numOperands
i
block
setParameterRVA
getChild
i
AbstractFunctionPtg
p
formulaType
setParameterRVA
getChild
i
formulaType
block
for
forControl
int
i
i
numOperands
i
block
setParameterRVA
getChild
i
formulaType
setParameterRVA
n
Node
expectedClass
int
formulaType
int
Ptg
p
Ptg
getValue
if
expectedClass
CLASS_REF
block
if
getDefaultOperandClass
CLASS_REF
block
setClass
n
CLASS_REF
if
getDefaultOperandClass
CLASS_VALUE
block
if
formulaType
FORMULA_TYPE_CELL
formulaType
FORMULA_TYPE_SHARED
block
setClass
n
CLASS_VALUE
block
setClass
n
CLASS_ARRAY
if
getDefaultOperandClass
CLASS_ARRAY
block
setClass
n
CLASS_ARRAY
if
expectedClass
CLASS_VALUE
block
if
formulaType
FORMULA_TYPE_NAMEDRANGE
block
setClass
n
CLASS_ARRAY
block
setClass
n
CLASS_VALUE
block
if
getDefaultOperandClass
CLASS_VALUE
formulaType
FORMULA_TYPE_CELL
formulaType
FORMULA_TYPE_SHARED
block
setClass
n
CLASS_VALUE
block
setClass
n
CLASS_ARRAY
setClass
n
Node
theClass
byte
Ptg
p
Ptg
getValue
if
p
AbstractFunctionPtg
p
OperationPtg
block
setClass
theClass
block
for
forControl
int
i
i
getNumChildren
i
block
setClass
getChild
i
theClass
toFormulaString
String
book
Workbook
lptgs
List
String
retval
if
lptgs
size
return
Ptg
ptgs
Ptg
size
ptgs
Ptg
toArray
ptgs
retval
toFormulaString
book
ptgs
return
retval
toFormulaString
String
book
Workbook
ptgs
Ptg
if
ptgs
length
return
java
util
Stack
stack
java
util
Stack
AttrPtg
ifptg
push
ptgs
toFormulaString
book
for
forControl
int
i
i
length
i
block
if
ptgs
i
OperationPtg
block
push
ptgs
i
toFormulaString
book
continue
if
ptgs
i
AttrPtg
AttrPtg
ptgs
i
block
ifptg
AttrPtg
ptgs
i
continue
OperationPtg
o
OperationPtg
ptgs
i
String
operands
String
getNumberOfOperands
for
forControl
int
j
length
j
j
block
operands
j
String
pop
push
toFormulaString
operands
if
o
AbstractFunctionPtg
continue
AbstractFunctionPtg
f
AbstractFunctionPtg
o
String
fname
getName
if
fname
continue
if
ifptg
equals
block
push
toFormulaString
String
String
pop
continue
if
equals
block
String
top
String
pop
int
paren
indexOf
int
comma
indexOf
if
comma
block
int
rparen
indexOf
push
substring
paren
rparen
block
push
substring
paren
comma
substring
comma
return
String
pop
createTree
Node
java
util
Stack
stack
java
util
Stack
int
numPtgs
size
OperationPtg
o
int
numOperands
Node
operands
for
forControl
int
i
i
numPtgs
i
block
if
get
i
OperationPtg
block
o
OperationPtg
get
i
numOperands
getNumberOfOperands
operands
Node
numOperands
for
forControl
int
j
j
numOperands
j
block
operands
numOperands
j
Node
pop
Node
result
Node
o
setChildren
operands
push
result
block
push
Node
Ptg
get
i
return
Node
pop
toString
String
StringBuffer
buf
StringBuffer
for
forControl
int
i
i
size
i
block
append
Ptg
get
i
append
return
toString
Node
Ptg
value
Node
children
Node
int
numChild
Node
val
Ptg
value
val
setChildren
child
Node
children
child
numChild
length
getNumChildren
int
return
numChild
getChild
Node
number
int
return
children
number
getValue
Ptg
return
value
