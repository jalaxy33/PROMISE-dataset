Sheet
short
LeftMargin
short
RightMargin
short
TopMargin
short
BottomMargin
POILogger
log
getLogger
Sheet
ArrayList
records
int
preoffset
int
loc
int
dimsloc
DimensionsRecord
dims
DefaultColWidthRecord
defaultcolwidth
DefaultRowHeightRecord
defaultrowheight
GridsetRecord
gridset
PrintSetupRecord
printSetup
HeaderRecord
header
FooterRecord
footer
PrintGridlinesRecord
printGridlines
WindowTwoRecord
windowTwo
MergeCellsRecord
merged
Margin
margins
List
mergedRecords
ArrayList
int
numMergedRegions
SelectionRecord
selection
ColumnInfoRecordsAggregate
columns
ValueRecordsAggregate
cells
RowRecordsAggregate
rows
Iterator
valueRecIterator
Iterator
rowRecIterator
int
eofLoc
ProtectRecord
protect
PageBreakRecord
rowBreaks
PageBreakRecord
colBreaks
byte
PANE_LOWER_RIGHT
byte
byte
PANE_UPPER_RIGHT
byte
byte
PANE_LOWER_LEFT
byte
byte
PANE_UPPER_LEFT
byte
Sheet
createSheet
Sheet
recs
List
sheetnum
int
offset
int
if
check
DEBUG
logFormatted
DEBUG
Integer
size
Sheet
retval
Sheet
ArrayList
records
ArrayList
size
boolean
isfirstcell
boolean
isfirstrow
int
bofEofNestingLevel
for
forControl
int
k
offset
k
size
k
block
Record
rec
Record
get
k
if
getSid
sid
block
bofEofNestingLevel
if
check
DEBUG
log
DEBUG
bofEofNestingLevel
if
getSid
sid
block
bofEofNestingLevel
if
check
DEBUG
log
DEBUG
bofEofNestingLevel
if
bofEofNestingLevel
block
add
rec
eofLoc
k
break
if
getSid
sid
block
if
columns
block
columns
ColumnInfoRecordsAggregate
add
columns
dims
DimensionsRecord
rec
dimsloc
size
if
getSid
sid
block
add
rec
merged
MergeCellsRecord
rec
numMergedRegions
getNumAreas
if
getSid
sid
block
ColumnInfoRecord
col
ColumnInfoRecord
rec
if
columns
block
rec
block
rec
columns
ColumnInfoRecordsAggregate
insertColumn
col
if
getSid
sid
block
defaultcolwidth
DefaultColWidthRecord
rec
if
getSid
sid
block
defaultrowheight
DefaultRowHeightRecord
rec
if
isValue
bofEofNestingLevel
block
if
isfirstcell
block
cells
ValueRecordsAggregate
rec
cells
construct
k
recs
isfirstcell
block
rec
if
getSid
sid
block
rec
if
getSid
sid
block
RowRecord
row
RowRecord
rec
if
isfirstrow
rec
if
isfirstrow
block
rows
RowRecordsAggregate
rec
rows
isfirstrow
insertRow
row
if
getSid
sid
block
printGridlines
PrintGridlinesRecord
rec
if
getSid
sid
block
gridset
GridsetRecord
rec
if
getSid
sid
bofEofNestingLevel
block
header
HeaderRecord
rec
if
getSid
sid
bofEofNestingLevel
block
footer
FooterRecord
rec
if
getSid
sid
bofEofNestingLevel
block
printSetup
PrintSetupRecord
rec
if
getSid
sid
block
getMargins
LeftMargin
LeftMarginRecord
rec
if
getSid
sid
block
getMargins
RightMargin
RightMarginRecord
rec
if
getSid
sid
block
getMargins
TopMargin
TopMarginRecord
rec
if
getSid
sid
block
getMargins
BottomMargin
BottomMarginRecord
rec
if
getSid
sid
block
selection
SelectionRecord
rec
if
getSid
sid
block
windowTwo
WindowTwoRecord
rec
if
getSid
sid
block
rec
if
getSid
sid
block
rec
if
getSid
sid
block
protect
ProtectRecord
rec
if
getSid
HORIZONTAL_SID
block
rowBreaks
PageBreakRecord
rec
if
getSid
VERTICAL_SID
block
colBreaks
PageBreakRecord
rec
if
rec
block
add
rec
records
records
checkCells
checkRows
if
check
DEBUG
log
DEBUG
return
retval
cloneSheet
Sheet
ArrayList
clonedRecords
ArrayList
records
size
for
forControl
int
i
i
records
size
i
block
Record
rec
Record
Record
records
get
i
if
rec
RowRecordsAggregate
block
RowRecordsAggregate
rrAgg
RowRecordsAggregate
rec
for
forControl
Iterator
rowIter
getIterator
hasNext
block
Record
rowRec
Record
next
add
rowRec
if
rec
ValueRecordsAggregate
block
ValueRecordsAggregate
vrAgg
ValueRecordsAggregate
rec
for
forControl
Iterator
cellIter
getIterator
hasNext
block
Record
valRec
Record
next
if
valRec
FormulaRecordAggregate
block
FormulaRecordAggregate
fmAgg
FormulaRecordAggregate
valRec
Record
fmAggRec
getFormulaRecord
if
fmAggRec
add
fmAggRec
fmAggRec
getStringRecord
if
fmAggRec
add
fmAggRec
block
add
valRec
if
rec
FormulaRecordAggregate
block
FormulaRecordAggregate
fmAgg
FormulaRecordAggregate
rec
Record
fmAggRec
getFormulaRecord
if
fmAggRec
add
fmAggRec
fmAggRec
getStringRecord
if
fmAggRec
add
fmAggRec
block
add
rec
return
createSheet
clonedRecords
createSheet
Sheet
records
List
sheetnum
int
if
check
DEBUG
log
DEBUG
return
createSheet
records
sheetnum
createSheet
Sheet
if
check
DEBUG
log
DEBUG
Sheet
retval
Sheet
ArrayList
records
ArrayList
add
createBOF
add
createCalcMode
add
createCalcCount
add
createRefMode
add
createIteration
add
createDelta
add
createSaveRecalc
add
createPrintHeaders
printGridlines
PrintGridlinesRecord
createPrintGridlines
add
printGridlines
gridset
GridsetRecord
createGridset
add
gridset
add
createGuts
defaultrowheight
DefaultRowHeightRecord
createDefaultRowHeight
add
defaultrowheight
add
createWSBool
rowBreaks
PageBreakRecord
HORIZONTAL_SID
add
rowBreaks
colBreaks
PageBreakRecord
VERTICAL_SID
add
colBreaks
header
HeaderRecord
createHeader
add
header
footer
FooterRecord
createFooter
add
footer
add
createHCenter
add
createVCenter
printSetup
PrintSetupRecord
createPrintSetup
add
printSetup
defaultcolwidth
DefaultColWidthRecord
createDefaultColWidth
add
defaultcolwidth
ColumnInfoRecordsAggregate
columns
ColumnInfoRecordsAggregate
add
columns
columns
columns
dims
DimensionsRecord
createDimensions
add
dims
dimsloc
size
add
windowTwo
createWindowTwo
setLoc
size
selection
SelectionRecord
createSelection
add
selection
protect
ProtectRecord
createProtect
add
protect
add
createEOF
records
records
if
check
DEBUG
log
DEBUG
return
retval
checkCells
if
cells
block
cells
ValueRecordsAggregate
add
getDimsLoc
cells
checkRows
if
rows
block
rows
RowRecordsAggregate
add
getDimsLoc
rows
addMergedRegion
int
rowFrom
int
colFrom
short
rowTo
int
colTo
short
if
merged
getNumAreas
block
merged
MergeCellsRecord
createMergedCells
add
merged
add
size
merged
addArea
rowFrom
colFrom
rowTo
colTo
return
numMergedRegions
removeMergedRegion
index
int
if
index
numMergedRegions
size
return
int
pos
int
startNumRegions
if
numMergedRegions
index
getNumAreas
block
pos
size
startNumRegions
numMergedRegions
getNumAreas
block
for
forControl
int
n
n
size
n
block
MergeCellsRecord
record
MergeCellsRecord
get
n
if
startNumRegions
getNumAreas
index
block
pos
n
break
startNumRegions
getNumAreas
MergeCellsRecord
rec
MergeCellsRecord
get
pos
removeAreaAt
index
startNumRegions
numMergedRegions
if
getNumAreas
block
remove
pos
remove
merged
if
merged
rec
block
if
size
block
merged
MergeCellsRecord
get
size
block
merged
getMergedRegionAt
MergeCellsRecord
MergedRegion
index
int
if
index
numMergedRegions
size
return
int
pos
int
startNumRegions
if
numMergedRegions
index
getNumAreas
block
pos
size
startNumRegions
numMergedRegions
getNumAreas
block
for
forControl
int
n
n
size
n
block
MergeCellsRecord
record
MergeCellsRecord
get
n
if
startNumRegions
getNumAreas
index
block
pos
n
break
startNumRegions
getNumAreas
return
MergeCellsRecord
get
pos
getNumMergedRegions
int
return
numMergedRegions
getNumRecords
int
checkCells
checkRows
if
check
DEBUG
block
log
DEBUG
logFormatted
DEBUG
int
size
getPhysicalNumberOfCells
getPhysicalNumberOfRows
size
getPhysicalNumberOfCells
getPhysicalNumberOfRows
return
size
getPhysicalNumberOfCells
getPhysicalNumberOfRows
setDimensions
firstrow
int
firstcol
short
lastrow
int
lastcol
short
if
check
DEBUG
block
log
DEBUG
log
DEBUG
append
firstrow
append
append
firstcol
append
append
lastrow
append
append
lastcol
toString
StringBuffer
setFirstCol
firstcol
setFirstRow
firstrow
setLastCol
lastcol
setLastRow
lastrow
if
check
DEBUG
log
DEBUG
setLoc
loc
int
valueRecIterator
if
check
DEBUG
log
DEBUG
loc
loc
loc
getLoc
int
if
check
DEBUG
log
DEBUG
loc
return
loc
setPreOffset
offset
int
preoffset
offset
getPreOffset
int
return
preoffset
serialize
int
offset
int
data
byte
if
check
DEBUG
log
DEBUG
int
pos
offset
boolean
haveSerializedIndex
for
forControl
int
k
k
size
k
block
Record
record
Record
get
k
if
record
RowRecordsAggregate
block
pos
RowRecordsAggregate
record
if
record
ValueRecordsAggregate
block
block
pos
serialize
pos
data
if
getSid
sid
block
if
rows
haveSerializedIndex
block
haveSerializedIndex
pos
serializeIndexRecord
k
pos
data
if
check
DEBUG
log
DEBUG
return
pos
offset
serializeIndexRecord
int
BOFRecordIndex
int
offset
int
data
byte
IndexRecord
index
IndexRecord
setFirstRow
getFirstRowNum
setLastRowAdd1
getLastRowNum
int
sheetRecSize
for
forControl
int
j
BOFRecordIndex
j
size
j
block
Record
tmpRec
Record
get
j
if
tmpRec
RowRecordsAggregate
break
sheetRecSize
getRecordSize
int
blockCount
getRowBlockCount
int
indexRecSize
getRecordSizeForBlockCount
blockCount
int
rowBlockOffset
int
cellBlockOffset
int
dbCellOffset
for
forControl
int
block
block
blockCount
block
block
rowBlockOffset
getRowBlockSize
block
cellBlockOffset
cells
getRowCellBlockSize
getStartRowNumberForBlock
block
getEndRowNumberForBlock
block
addDbcell
offset
indexRecSize
sheetRecSize
dbCellOffset
rowBlockOffset
cellBlockOffset
dbCellOffset
getRowCountForBlock
block
return
serialize
offset
data
createRow
RowRecord
row
int
return
createRow
row
createLabelSST
LabelSSTRecord
row
int
col
short
index
int
logFormatted
DEBUG
int
row
col
index
LabelSSTRecord
rec
LabelSSTRecord
setRow
row
setColumn
col
setSSTIndex
index
setXFIndex
short
return
rec
createNumber
NumberRecord
row
int
col
short
value
double
logFormatted
DEBUG
double
row
col
value
NumberRecord
rec
NumberRecord
setRow
row
setColumn
col
setValue
value
setXFIndex
short
return
rec
createBlank
BlankRecord
row
int
col
short
logFormatted
DEBUG
int
row
col
BlankRecord
rec
BlankRecord
setRow
row
setColumn
col
setXFIndex
short
return
rec
createFormula
FormulaRecord
row
int
col
short
formula
String
logFormatted
DEBUG
int
row
col
formula
FormulaRecord
rec
FormulaRecord
setRow
row
setColumn
col
setOptions
short
setValue
setXFIndex
short
FormulaParser
fp
FormulaParser
formula
parse
Ptg
ptg
getRPNPtg
int
size
for
forControl
int
k
k
length
k
block
size
ptg
k
getSize
pushExpressionToken
ptg
k
setExpressionLength
short
size
return
rec
addValueRecord
row
int
col
CellValueRecordInterface
checkCells
if
check
DEBUG
block
logFormatted
DEBUG
int
row
loc
DimensionsRecord
d
DimensionsRecord
get
getDimsLoc
if
getColumn
getLastCol
block
setLastCol
short
getColumn
if
getColumn
getFirstCol
block
setFirstCol
getColumn
insertCell
col
removeValueRecord
row
int
col
CellValueRecordInterface
checkCells
logFormatted
DEBUG
int
row
dimsloc
loc
dimsloc
removeCell
col
replaceValueRecord
newval
CellValueRecordInterface
checkCells
setLoc
dimsloc
if
check
DEBUG
log
DEBUG
removeCell
newval
insertCell
newval
addRow
row
RowRecord
checkRows
if
check
DEBUG
log
DEBUG
DimensionsRecord
d
DimensionsRecord
get
getDimsLoc
if
getRowNumber
getLastRow
block
setLastRow
getRowNumber
if
getRowNumber
getFirstRow
block
setFirstRow
getRowNumber
RowRecord
existingRow
getRow
getRowNumber
if
existingRow
removeRow
existingRow
insertRow
row
if
check
DEBUG
log
DEBUG
removeRow
row
RowRecord
checkRows
setLoc
getDimsLoc
removeRow
row
getNextValueRecord
CellValueRecordInterface
if
check
DEBUG
log
DEBUG
loc
if
valueRecIterator
block
valueRecIterator
getIterator
if
hasNext
block
return
return
CellValueRecordInterface
next
getNextRow
RowRecord
if
check
DEBUG
log
DEBUG
loc
if
rowRecIterator
block
rowRecIterator
getIterator
if
hasNext
block
return
return
RowRecord
next
getRow
RowRecord
rownum
int
if
check
DEBUG
log
DEBUG
loc
return
getRow
rownum
createBOF
Record
BOFRecord
retval
BOFRecord
setVersion
short
setType
short
setBuild
short
setBuildYear
short
setHistoryBitMask
setRequiredVersion
return
retval
createIndex
Record
IndexRecord
retval
IndexRecord
setFirstRow
setLastRowAdd1
return
retval
createCalcMode
Record
CalcModeRecord
retval
CalcModeRecord
setCalcMode
short
return
retval
createCalcCount
Record
CalcCountRecord
retval
CalcCountRecord
setIterations
short
return
retval
createRefMode
Record
RefModeRecord
retval
RefModeRecord
setMode
USE_A1_MODE
return
retval
createIteration
Record
IterationRecord
retval
IterationRecord
setIteration
return
retval
createDelta
Record
DeltaRecord
retval
DeltaRecord
setMaxChange
return
retval
createSaveRecalc
Record
SaveRecalcRecord
retval
SaveRecalcRecord
setRecalc
return
retval
createPrintHeaders
Record
PrintHeadersRecord
retval
PrintHeadersRecord
setPrintHeaders
return
retval
createPrintGridlines
Record
PrintGridlinesRecord
retval
PrintGridlinesRecord
setPrintGridlines
return
retval
createGridset
Record
GridsetRecord
retval
GridsetRecord
setGridset
return
retval
createGuts
Record
GutsRecord
retval
GutsRecord
setLeftRowGutter
short
setTopColGutter
short
setRowLevelMax
short
setColLevelMax
short
return
retval
createDefaultRowHeight
Record
DefaultRowHeightRecord
retval
DefaultRowHeightRecord
setOptionFlags
short
setRowHeight
short
return
retval
createWSBool
Record
WSBoolRecord
retval
WSBoolRecord
setWSBool1
byte
setWSBool2
byte
return
retval
createHeader
Record
HeaderRecord
retval
HeaderRecord
setHeaderLength
byte
setHeader
return
retval
createFooter
Record
FooterRecord
retval
FooterRecord
setFooterLength
byte
setFooter
return
retval
createHCenter
Record
HCenterRecord
retval
HCenterRecord
setHCenter
return
retval
createVCenter
Record
VCenterRecord
retval
VCenterRecord
setVCenter
return
retval
createPrintSetup
Record
PrintSetupRecord
retval
PrintSetupRecord
setPaperSize
short
setScale
short
setPageStart
short
setFitWidth
short
setFitHeight
short
setOptions
short
setHResolution
short
setVResolution
short
setHeaderMargin
setFooterMargin
setCopies
short
return
retval
createDefaultColWidth
Record
DefaultColWidthRecord
retval
DefaultColWidthRecord
setColWidth
short
return
retval
createColInfo
Record
return
createColInfo
getDefaultColumnWidth
short
return
getColWidth
isGridsPrinted
boolean
if
gridset
block
gridset
GridsetRecord
createGridset
int
loc
findFirstRecordLocBySid
sid
add
loc
gridset
return
getGridset
setGridsPrinted
value
boolean
setGridset
value
setDefaultColumnWidth
dcw
short
setColWidth
dcw
setDefaultRowHeight
dch
short
setRowHeight
dch
getDefaultRowHeight
short
return
getRowHeight
getColumnWidth
short
column
short
short
retval
ColumnInfoRecord
ci
if
columns
block
int
count
getNumColumns
for
forControl
int
k
k
count
k
block
ci
getColInfo
k
if
getFirstColumn
column
column
getLastColumn
block
break
ci
if
ci
block
retval
getColumnWidth
block
retval
getColWidth
return
retval
getXFIndexForColAt
short
column
short
short
retval
ColumnInfoRecord
ci
if
columns
block
int
count
getNumColumns
for
forControl
int
k
k
count
k
block
ci
getColInfo
k
if
getFirstColumn
column
column
getLastColumn
block
break
ci
retval
ci
getXFIndex
return
retval
setColumnWidth
column
short
width
short
setColumn
column
Short
width
isColumnHidden
boolean
column
short
boolean
retval
ColumnInfoRecord
ci
if
columns
block
for
forControl
Iterator
iterator
getIterator
hasNext
block
ci
ColumnInfoRecord
next
if
getFirstColumn
column
column
getLastColumn
block
break
ci
if
ci
block
retval
getHidden
return
retval
setColumnHidden
column
short
hidden
boolean
setColumn
column
Boolean
hidden
setColumn
column
short
width
Short
level
Integer
hidden
Boolean
collapsed
Boolean
if
columns
columns
ColumnInfoRecordsAggregate
setColumn
column
width
level
hidden
collapsed
setColumn
column
short
xfStyle
Short
width
Short
level
Integer
hidden
Boolean
collapsed
Boolean
if
columns
columns
ColumnInfoRecordsAggregate
setColumn
column
xfStyle
width
level
hidden
collapsed
groupColumnRange
fromColumn
short
toColumn
short
indent
boolean
groupColumnRange
fromColumn
toColumn
indent
int
maxLevel
int
count
getNumColumns
for
forControl
int
k
k
count
k
block
ColumnInfoRecord
columnInfoRecord
getColInfo
k
maxLevel
max
getOutlineLevel
maxLevel
GutsRecord
guts
GutsRecord
findFirstRecordBySid
sid
setColLevelMax
short
maxLevel
if
maxLevel
setTopColGutter
short
setTopColGutter
short
maxLevel
createDimensions
Record
DimensionsRecord
retval
DimensionsRecord
setFirstCol
short
setLastRow
setFirstRow
setLastCol
short
return
retval
createWindowTwo
WindowTwoRecord
WindowTwoRecord
retval
WindowTwoRecord
setOptions
short
setTopRow
short
setLeftCol
short
setHeaderColor
setPageBreakZoom
short
setNormalZoom
short
return
retval
createSelection
Record
SelectionRecord
retval
SelectionRecord
setPane
byte
setActiveCellCol
short
setActiveCellRow
short
setNumRefs
short
return
retval
getTopRow
short
return
windowTwo
short
getTopRow
setTopRow
topRow
short
if
windowTwo
block
setTopRow
topRow
setLeftCol
leftCol
short
if
windowTwo
block
setLeftCol
leftCol
getLeftCol
short
return
windowTwo
short
getLeftCol
getActiveCellRow
int
if
selection
block
return
return
getActiveCellRow
setActiveCellRow
row
int
if
selection
block
setActiveCellRow
row
getActiveCellCol
short
if
selection
block
return
short
return
getActiveCellCol
setActiveCellCol
col
short
if
selection
block
setActiveCellCol
col
createMergedCells
Record
MergeCellsRecord
retval
MergeCellsRecord
setNumAreas
short
return
retval
createEOF
Record
return
EOFRecord
getDimsLoc
int
if
check
DEBUG
log
DEBUG
dimsloc
return
dimsloc
checkDimsLoc
rec
Record
recloc
int
if
getSid
sid
block
loc
recloc
dimsloc
recloc
getSize
int
int
retval
for
forControl
int
k
k
size
k
block
retval
Record
get
k
if
rows
block
int
blocks
getRowBlockCount
retval
getRecordSizeForBlockCount
blocks
retval
blocks
for
forControl
Iterator
itr
getIterator
hasNext
block
RowRecord
row
RowRecord
next
if
cells
rowHasCells
getRowNumber
retval
return
retval
getRecords
List
return
records
getGridsetRecord
GridsetRecord
return
gridset
findFirstRecordBySid
Record
sid
short
for
forControl
Iterator
iterator
iterator
hasNext
block
Record
record
Record
next
if
getSid
sid
block
return
record
return
setSCLRecord
sclRecord
SCLRecord
int
oldRecordLoc
findFirstRecordLocBySid
sid
if
oldRecordLoc
block
int
windowRecordLoc
findFirstRecordLocBySid
sid
add
windowRecordLoc
sclRecord
block
set
oldRecordLoc
sclRecord
findFirstRecordLocBySid
int
sid
short
int
index
for
forControl
Iterator
iterator
iterator
hasNext
block
Record
record
Record
next
if
getSid
sid
block
return
index
index
return
getHeader
HeaderRecord
return
header
setHeader
newHeader
HeaderRecord
header
newHeader
getFooter
FooterRecord
return
footer
setFooter
newFooter
FooterRecord
footer
newFooter
getPrintSetup
PrintSetupRecord
return
printSetup
setPrintSetup
newPrintSetup
PrintSetupRecord
printSetup
newPrintSetup
getPrintGridlines
PrintGridlinesRecord
return
printGridlines
setPrintGridlines
newPrintGridlines
PrintGridlinesRecord
printGridlines
newPrintGridlines
setSelected
sel
boolean
setSelected
sel
getMargin
double
margin
short
if
getMargins
margin
return
margins
margin
getMargin
block
switch
margin
case
return
case
return
case
return
case
return
case
throw
RuntimeException
margin
setMargin
margin
short
size
double
Margin
m
getMargins
margin
if
m
block
switch
margin
case
m
LeftMarginRecord
add
getDimsLoc
m
break
case
m
RightMarginRecord
add
getDimsLoc
m
break
case
m
TopMarginRecord
add
getDimsLoc
m
break
case
m
BottomMarginRecord
add
getDimsLoc
m
break
case
throw
RuntimeException
margin
margins
margin
m
setMargin
size
getEofLoc
int
return
eofLoc
createFreezePane
colSplit
int
rowSplit
int
topRow
int
leftmostColumn
int
int
paneLoc
findFirstRecordLocBySid
sid
if
paneLoc
remove
paneLoc
int
loc
findFirstRecordLocBySid
sid
PaneRecord
pane
PaneRecord
setX
short
colSplit
setY
short
rowSplit
setTopRow
short
topRow
setLeftColumn
short
leftmostColumn
if
rowSplit
block
setTopRow
short
setActivePane
short
if
colSplit
block
setLeftColumn
short
setActivePane
short
block
setActivePane
short
add
loc
pane
setFreezePanes
setFreezePanesNoSplit
SelectionRecord
sel
SelectionRecord
findFirstRecordBySid
sid
setPane
byte
getActivePane
createSplitPane
xSplitPos
int
ySplitPos
int
topRow
int
leftmostColumn
int
activePane
int
int
paneLoc
findFirstRecordLocBySid
sid
if
paneLoc
remove
paneLoc
int
loc
findFirstRecordLocBySid
sid
PaneRecord
r
PaneRecord
setX
short
xSplitPos
setY
short
ySplitPos
setTopRow
short
topRow
setLeftColumn
short
leftmostColumn
setActivePane
short
activePane
add
loc
r
setFreezePanes
setFreezePanesNoSplit
SelectionRecord
sel
SelectionRecord
findFirstRecordBySid
sid
setPane
PANE_LOWER_RIGHT
getPaneInformation
PaneInformation
PaneRecord
rec
PaneRecord
findFirstRecordBySid
sid
if
rec
return
return
PaneInformation
getX
getY
getTopRow
getLeftColumn
byte
getActivePane
getFreezePanes
getSelection
SelectionRecord
return
selection
setSelection
selection
SelectionRecord
selection
selection
createProtect
Record
if
check
DEBUG
log
DEBUG
ProtectRecord
retval
ProtectRecord
setProtect
return
retval
getProtect
ProtectRecord
if
protect
block
protect
ProtectRecord
createProtect
int
loc
findFirstRecordLocBySid
sid
add
loc
protect
return
protect
setDisplayGridlines
show
boolean
setDisplayGridlines
show
isDisplayGridlines
boolean
return
getDisplayGridlines
setDisplayFormulas
show
boolean
setDisplayFormulas
show
isDisplayFormulas
boolean
return
getDisplayFormulas
setDisplayRowColHeadings
show
boolean
setDisplayRowColHeadings
show
isDisplayRowColHeadings
boolean
return
getDisplayRowColHeadings
getMargins
Margin
if
margins
margins
Margin
return
margins
aggregateDrawingRecords
int
drawingManager
DrawingManager2
int
loc
findFirstRecordLocBySid
sid
boolean
noDrawingRecordsFound
loc
if
noDrawingRecordsFound
block
EscherAggregate
aggregate
EscherAggregate
drawingManager
loc
findFirstRecordLocBySid
sid
if
loc
block
loc
findFirstRecordLocBySid
sid
block
getRecords
remove
loc
getRecords
add
loc
aggregate
return
loc
block
List
records
getRecords
EscherAggregate
r
createAggregate
records
loc
drawingManager
int
startloc
loc
while
loc
size
get
loc
DrawingRecord
get
loc
ObjRecord
block
loc
int
endloc
loc
for
forControl
int
i
i
endloc
startloc
i
remove
startloc
add
startloc
r
return
startloc
preSerialize
for
forControl
Iterator
iterator
getRecords
iterator
hasNext
block
Record
r
Record
next
if
r
EscherAggregate
getRecordSize
shiftBreaks
breaks
PageBreakRecord
start
short
stop
short
count
int
if
rowBreaks
return
Iterator
iterator
getBreaksIterator
List
shiftedBreak
ArrayList
while
hasNext
block
PageBreakRecord
Break
breakItem
PageBreakRecord
Break
next
short
breakLocation
main
boolean
inStart
breakLocation
start
boolean
inEnd
breakLocation
stop
if
inStart
inEnd
add
breakItem
iterator
iterator
while
hasNext
block
PageBreakRecord
Break
breakItem
PageBreakRecord
Break
next
removeBreak
main
addBreak
short
main
count
subFrom
subTo
setRowBreak
row
int
fromCol
short
toCol
short
if
rowBreaks
block
int
loc
findFirstRecordLocBySid
sid
rowBreaks
PageBreakRecord
HORIZONTAL_SID
add
loc
rowBreaks
addBreak
short
row
fromCol
toCol
removeRowBreak
row
int
if
rowBreaks
throw
IllegalArgumentException
removeBreak
short
row
isRowBroken
boolean
row
int
return
rowBreaks
getBreak
short
row
setColumnBreak
column
short
fromRow
short
toRow
short
if
colBreaks
block
int
loc
findFirstRecordLocBySid
sid
colBreaks
PageBreakRecord
VERTICAL_SID
add
loc
colBreaks
addBreak
column
fromRow
toRow
removeColumnBreak
column
short
if
colBreaks
throw
IllegalArgumentException
removeBreak
column
isColumnBroken
boolean
column
short
return
colBreaks
getBreak
column
shiftRowBreaks
startingRow
int
endingRow
int
count
int
shiftBreaks
rowBreaks
short
startingRow
short
endingRow
short
count
shiftColumnBreaks
startingCol
short
endingCol
short
count
short
shiftBreaks
colBreaks
startingCol
endingCol
count
getRowBreaks
Iterator
return
getBreaksIterator
getNumRowBreaks
int
return
rowBreaks
int
getNumBreaks
getColumnBreaks
Iterator
return
getBreaksIterator
getNumColumnBreaks
int
return
colBreaks
int
getNumBreaks
setColumnGroupCollapsed
columnNumber
short
collapsed
boolean
if
collapsed
block
collapseColumn
columnNumber
block
expandColumn
columnNumber
groupRowRange
fromRow
int
toRow
int
indent
boolean
checkRows
for
forControl
int
rowNum
fromRow
rowNum
toRow
rowNum
block
RowRecord
row
getRow
rowNum
if
row
block
row
createRow
rowNum
addRow
row
int
level
getOutlineLevel
if
indent
level
level
level
max
level
level
min
level
setOutlineLevel
short
level
recalcRowGutter
recalcRowGutter
int
maxLevel
Iterator
iterator
getIterator
while
hasNext
block
RowRecord
rowRecord
RowRecord
next
maxLevel
max
getOutlineLevel
maxLevel
GutsRecord
guts
GutsRecord
findFirstRecordBySid
sid
setRowLevelMax
short
maxLevel
setLeftRowGutter
short
maxLevel
setRowGroupCollapsed
row
int
collapse
boolean
if
collapse
block
collapseRow
row
block
expandRow
row
Model
