SlideShow
HSLFSlideShow
_hslfSlideShow
Record
_records
Record
_mostRecentCoreRecords
Hashtable
_sheetIdToCoreRecordsLookup
int
_highestSheetId
Document
_documentRecord
SlideMaster
_masters
Slide
_slides
Notes
_notes
FontCollection
_fonts
POILogger
logger
getLogger
getClass
SlideShow
hslfSlideShow
HSLFSlideShow
_hslfSlideShow
hslfSlideShow
_records
getRecords
for
forControl
int
i
i
length
i
block
handleParentAwareRecords
_records
i
findMostRecentCoreRecords
buildSlidesAndNotes
SlideShow
HSLFSlideShow
handleParentAwareRecords
baseRecord
Record
if
baseRecord
RecordContainer
block
RecordContainer
br
RecordContainer
baseRecord
Record
childRecords
getChildRecords
for
forControl
int
i
i
length
i
block
Record
record
childRecords
i
if
record
ParentAwareRecord
block
ParentAwareRecord
record
if
record
RecordContainer
block
handleParentAwareRecords
record
findMostRecentCoreRecords
Hashtable
mostRecentByBytes
Hashtable
for
forControl
int
i
i
length
i
block
if
_records
i
PersistPtrHolder
block
PersistPtrHolder
pph
PersistPtrHolder
_records
i
int
ids
getKnownSlideIDs
for
forControl
int
j
j
length
j
block
Integer
id
Integer
ids
j
if
containsKey
id
block
remove
id
Hashtable
thisSetOfLocations
getSlideLocationsLookup
for
forControl
int
j
j
length
j
block
Integer
id
Integer
ids
j
put
id
get
id
_mostRecentCoreRecords
Record
size
_sheetIdToCoreRecordsLookup
Hashtable
int
allIDs
int
length
Enumeration
ids
keys
for
forControl
int
i
i
length
i
block
Integer
id
Integer
nextElement
allIDs
i
intValue
sort
allIDs
for
forControl
int
i
i
length
i
block
put
Integer
allIDs
i
Integer
i
_highestSheetId
allIDs
length
for
forControl
int
i
i
length
i
block
if
_records
i
PositionDependentRecord
block
PositionDependentRecord
pdr
PositionDependentRecord
_records
i
Integer
recordAt
Integer
getLastOnDiskOffset
for
forControl
int
j
j
length
j
block
Integer
thisID
Integer
allIDs
j
Integer
thatRecordAt
Integer
get
thisID
if
equals
recordAt
block
Integer
storeAtI
Integer
get
thisID
int
storeAt
intValue
if
pdr
PositionDependentRecordContainer
block
PositionDependentRecordContainer
pdrc
PositionDependentRecordContainer
_records
i
setSheetId
intValue
_mostRecentCoreRecords
storeAt
_records
i
for
forControl
int
i
i
length
i
block
if
_mostRecentCoreRecords
i
block
if
_mostRecentCoreRecords
i
getRecordType
typeID
block
_documentRecord
Document
_mostRecentCoreRecords
i
_fonts
getEnvironment
getFontCollection
block
getCoreRecordForSAS
Record
sas
SlideAtomsSet
SlidePersistAtom
spa
getSlidePersistAtom
int
refID
getRefID
return
getCoreRecordForRefID
refID
getCoreRecordForRefID
Record
refID
int
Integer
coreRecordId
Integer
get
Integer
refID
if
coreRecordId
block
Record
r
_mostRecentCoreRecords
intValue
return
r
block
log
ERROR
refID
return
buildSlidesAndNotes
if
_documentRecord
block
throw
CorruptPowerPointFileException
SlideListWithText
masterSLWT
getMasterSlideListWithText
SlideListWithText
slidesSLWT
getSlideSlideListWithText
SlideListWithText
notesSLWT
getNotesSlideListWithText
SlideAtomsSet
masterSets
SlideAtomsSet
org
apache
poi
hslf
record
MainMaster
mainMasterRecords
if
masterSLWT
block
masterSets
getSlideAtomsSets
ArrayList
mmr
ArrayList
for
forControl
int
i
i
length
i
block
Record
r
getCoreRecordForSAS
masterSets
i
if
r
org
apache
poi
hslf
record
Slide
block
if
r
org
apache
poi
hslf
record
MainMaster
block
add
r
mainMasterRecords
org
apache
poi
hslf
record
MainMaster
size
toArray
mainMasterRecords
org
apache
poi
hslf
record
Notes
notesRecords
SlideAtomsSet
notesSets
SlideAtomsSet
Hashtable
slideIdToNotes
Hashtable
if
notesSLWT
block
notesRecords
org
apache
poi
hslf
record
Notes
block
notesSets
getSlideAtomsSets
ArrayList
notesRecordsL
ArrayList
for
forControl
int
i
i
length
i
block
Record
r
getCoreRecordForSAS
notesSets
i
if
r
r
org
apache
poi
hslf
record
Notes
block
add
org
apache
poi
hslf
record
Notes
r
SlidePersistAtom
spa
notesSets
i
getSlidePersistAtom
Integer
slideId
Integer
getSlideIdentifier
put
slideId
Integer
i
block
log
ERROR
i
notesSets
i
getSlidePersistAtom
getRefID
r
notesRecords
org
apache
poi
hslf
record
Notes
size
notesRecords
org
apache
poi
hslf
record
Notes
toArray
notesRecords
org
apache
poi
hslf
record
Slide
slidesRecords
SlideAtomsSet
slidesSets
SlideAtomsSet
if
slidesSLWT
block
slidesRecords
org
apache
poi
hslf
record
Slide
block
slidesSets
getSlideAtomsSets
slidesRecords
org
apache
poi
hslf
record
Slide
length
for
forControl
int
i
i
length
i
block
Record
r
getCoreRecordForSAS
slidesSets
i
if
r
org
apache
poi
hslf
record
Slide
block
slidesRecords
i
org
apache
poi
hslf
record
Slide
r
block
println
i
slidesSets
i
getSlidePersistAtom
getRefID
r
_masters
SlideMaster
length
for
forControl
int
i
i
length
i
block
SlideAtomsSet
sas
masterSets
i
int
sheetNo
getSlidePersistAtom
getSlideIdentifier
_masters
i
SlideMaster
mainMasterRecords
i
sheetNo
_masters
i
setSlideShow
_notes
Notes
length
for
forControl
int
i
i
length
i
block
_notes
i
Notes
notesRecords
i
_notes
i
setSlideShow
_slides
Slide
length
for
forControl
int
i
i
length
i
block
SlideAtomsSet
sas
slidesSets
i
int
slideIdentifier
getSlidePersistAtom
getSlideIdentifier
Integer
slideIdentifierI
Integer
slideIdentifier
Notes
notes
if
containsKey
slideIdentifierI
block
Integer
notesPos
Integer
get
slideIdentifierI
notes
_notes
intValue
_slides
i
Slide
slidesRecords
i
notes
sas
slideIdentifier
i
_slides
i
setSlideShow
write
out
OutputStream
write
out
getMostRecentCoreRecords
Record
return
_mostRecentCoreRecords
getSlides
Slide
return
_slides
getNotes
Notes
return
_notes
getSlidesMasters
SlideMaster
return
_masters
getPictureData
PictureData
return
getPictures
getPageSize
Dimension
DocumentAtom
docatom
getDocumentAtom
int
pgx
int
getSlideSizeX
POINT_DPI
MASTER_DPI
int
pgy
int
getSlideSizeY
POINT_DPI
MASTER_DPI
return
Dimension
pgx
pgy
setPageSize
pgsize
Dimension
DocumentAtom
docatom
getDocumentAtom
setSlideSizeX
width
MASTER_DPI
POINT_DPI
setSlideSizeY
height
MASTER_DPI
POINT_DPI
getFontCollection
FontCollection
return
_fonts
getDocumentRecord
Document
return
_documentRecord
reorderSlide
oldSlideNumer
int
newSlideNumber
int
if
oldSlideNumer
newSlideNumber
block
throw
IllegalArgumentException
if
oldSlideNumer
length
newSlideNumber
length
block
throw
IllegalArgumentException
length
SlideListWithText
slwt
getSlideSlideListWithText
repositionSlideAtomsSet
getSlideAtomsSets
oldSlideNumer
newSlideNumber
arrayMoveWithin
_slides
oldSlideNumer
newSlideNumber
for
forControl
int
i
i
length
i
block
_slides
i
setSlideNumber
i
createSlide
Slide
SlideListWithText
slist
slist
getSlideSlideListWithText
if
slist
block
slist
SlideListWithText
addSlideListWithText
slist
SlidePersistAtom
prev
SlideAtomsSet
sas
getSlideAtomsSets
for
forControl
int
j
j
length
j
block
SlidePersistAtom
spa
sas
j
getSlidePersistAtom
if
getSlideIdentifier
block
block
if
prev
block
prev
spa
if
getSlideIdentifier
getSlideIdentifier
block
prev
spa
SlidePersistAtom
sp
SlidePersistAtom
_highestSheetId
setRefID
_highestSheetId
setSlideIdentifier
prev
getSlideIdentifier
addSlidePersistAtom
sp
Slide
slide
Slide
getSlideIdentifier
getRefID
length
Slide
s
Slide
length
arraycopy
_slides
s
length
s
length
slide
_slides
s
log
INFO
length
getRefID
getSlideIdentifier
org
apache
poi
hslf
record
Slide
slideRecord
getSlideRecord
setSheetId
getRefID
int
slideRecordPos
appendRootLevelRecord
slideRecord
_records
getRecords
int
offset
int
slideOffset
PersistPtrHolder
ptr
UserEditAtom
usr
for
forControl
int
i
i
length
i
block
Record
record
_records
i
ByteArrayOutputStream
out
ByteArrayOutputStream
writeOut
out
if
_records
i
getRecordType
typeID
block
ptr
PersistPtrHolder
_records
i
if
_records
i
getRecordType
typeID
block
usr
UserEditAtom
_records
i
if
i
slideRecordPos
block
slideOffset
offset
offset
size
setLastOnDiskOffset
slideOffset
addSlideLookup
getRefID
slideOffset
log
INFO
slideOffset
setLastViewType
short
LAST_VIEW_SLIDE_VIEW
setSlideShow
return
slide
addPicture
int
data
byte
format
int
byte
uid
getChecksum
data
EscherContainerRecord
bstore
int
offset
EscherContainerRecord
dggContainer
getPPDrawingGroup
getDggContainer
bstore
EscherContainerRecord
getEscherChild
dggContainer
BSTORE_CONTAINER
if
bstore
block
bstore
EscherContainerRecord
setRecordId
BSTORE_CONTAINER
List
child
getChildRecords
for
forControl
int
i
i
size
i
block
EscherRecord
rec
EscherRecord
get
i
if
getRecordId
RECORD_ID
block
add
i
bstore
i
setChildRecords
child
block
List
lst
getChildRecords
for
forControl
int
i
i
size
i
block
EscherBSERecord
bse
EscherBSERecord
get
i
if
equals
getUid
uid
block
return
i
offset
getSize
PictureData
pict
create
format
setData
data
setOffset
offset
EscherBSERecord
bse
EscherBSERecord
setRecordId
RECORD_ID
setOptions
short
format
setSize
getRawData
length
setUid
uid
setBlipTypeMacOS
byte
format
setBlipTypeWin32
byte
format
if
format
EMF
setBlipTypeMacOS
byte
PICT
if
format
WMF
setBlipTypeMacOS
byte
PICT
if
format
PICT
setBlipTypeWin32
byte
WMF
setRef
setOffset
offset
addChildRecord
bse
int
count
getChildRecords
size
setOptions
short
count
addPicture
pict
return
count
addPicture
int
pict
File
format
int
int
length
int
length
byte
data
byte
length
try
FileInputStream
is
FileInputStream
pict
read
data
close
catchClause
e
throw
RuntimeException
e
return
addPicture
data
format
