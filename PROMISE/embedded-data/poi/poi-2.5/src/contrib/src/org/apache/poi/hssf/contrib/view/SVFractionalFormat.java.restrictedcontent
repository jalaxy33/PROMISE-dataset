SVFractionalFormat
short
ONE_DIGIT
short
TWO_DIGIT
short
THREE_DIGIT
short
UNITS
int
units
short
mode
SVFractionalFormat
formatStr
String
if
equals
formatStr
mode
ONE_DIGIT
if
equals
formatStr
mode
TWO_DIGIT
if
equals
formatStr
mode
THREE_DIGIT
if
equals
formatStr
block
mode
UNITS
units
if
equals
formatStr
block
mode
UNITS
units
if
equals
formatStr
block
mode
UNITS
units
if
equals
formatStr
block
mode
UNITS
units
if
equals
formatStr
block
mode
UNITS
units
if
equals
formatStr
block
mode
UNITS
units
format
String
f
double
MaxDen
int
long
Whole
long
f
int
sign
if
f
block
sign
double
Precision
double
AllowedError
Precision
double
d
abs
f
d
Whole
double
Frac
d
double
Diff
Frac
long
Num
long
Den
long
A
long
B
long
i
if
Frac
Precision
block
while
block
d
d
i
long
d
Precision
d
i
if
A
block
Num
i
Num
B
Den
long
Num
Frac
Diff
abs
double
Num
Den
Frac
if
Den
MaxDen
block
if
A
block
Num
A
Den
long
Num
Frac
Diff
abs
double
Num
Den
Frac
block
Den
MaxDen
Num
Diff
abs
double
Num
Den
Frac
if
Diff
Frac
block
Num
Den
Diff
Frac
break
if
Diff
AllowedError
d
Precision
block
break
Precision
AllowedError
Diff
B
A
A
Num
if
Num
Den
block
Whole
Num
Den
if
Den
block
Num
if
sign
block
if
Whole
block
Num
Num
block
Whole
Whole
return
append
Whole
append
append
Num
append
append
Den
toString
StringBuffer
formatUnit
String
f
double
units
int
long
Whole
long
f
f
Whole
long
Num
round
f
units
return
append
Whole
append
append
Num
append
append
units
toString
StringBuffer
format
String
val
double
if
mode
ONE_DIGIT
block
return
format
val
if
mode
TWO_DIGIT
block
return
format
val
if
mode
THREE_DIGIT
block
return
format
val
if
mode
UNITS
block
return
formatUnit
val
units
throw
RuntimeException
format
StringBuffer
obj
Object
toAppendTo
StringBuffer
pos
FieldPosition
if
obj
Number
block
append
format
Number
obj
return
toAppendTo
throw
IllegalArgumentException
parseObject
Object
source
String
status
ParsePosition
return
parseObject
Object
source
String
return
clone
Object
return
Format
