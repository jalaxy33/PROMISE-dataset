FormulaViewer
String
file
boolean
list
FormulaViewer
run
POIFSFileSystem
fs
POIFSFileSystem
FileInputStream
file
List
records
createRecords
createDocumentInputStream
for
forControl
int
k
k
size
k
block
Record
record
Record
get
k
if
getSid
sid
block
if
list
block
listFormula
FormulaRecord
record
block
parseFormulaRecord
FormulaRecord
record
listFormula
record
FormulaRecord
String
sep
List
tokens
getParsedExpression
int
numptgs
getNumberOfExpressionTokens
Ptg
token
String
name
numArg
if
tokens
block
token
Ptg
get
numptgs
if
token
FuncPtg
block
numArg
valueOf
numptgs
block
numArg
valueOf
StringBuffer
buf
StringBuffer
if
token
ExpPtg
return
append
name
OperationPtg
token
append
sep
switch
getPtgClass
case
CLASS_REF
append
break
case
CLASS_VALUE
append
break
case
CLASS_ARRAY
append
break
append
sep
if
numptgs
block
token
Ptg
get
numptgs
switch
getPtgClass
case
CLASS_REF
append
break
case
CLASS_VALUE
append
break
case
CLASS_ARRAY
append
break
block
append
append
sep
append
numArg
println
toString
block
println
parseFormulaRecord
record
FormulaRecord
println
print
getRow
println
getColumn
println
getValue
print
getXFIndex
print
getNumberOfExpressionTokens
println
getOptions
println
formulaString
record
println
composeFormula
record
formulaString
String
record
FormulaRecord
StringBuffer
formula
StringBuffer
int
numptgs
getNumberOfExpressionTokens
List
tokens
getParsedExpression
Ptg
token
StringBuffer
buf
StringBuffer
for
forControl
int
i
i
numptgs
i
block
token
Ptg
get
i
append
toFormulaString
Workbook
switch
getPtgClass
case
CLASS_REF
append
break
case
CLASS_VALUE
append
break
case
CLASS_ARRAY
append
break
append
return
toString
composeFormula
String
record
FormulaRecord
return
toFormulaString
Workbook
getParsedExpression
setFile
file
String
file
file
setList
list
boolean
list
list
main
args
String
if
args
length
args
equals
block
println
println
if
args
equals
block
try
FormulaViewer
viewer
FormulaViewer
setFile
args
setList
run
catchClause
e
println
printStackTrace
block
try
FormulaViewer
viewer
FormulaViewer
setFile
args
run
catchClause
e
println
printStackTrace
