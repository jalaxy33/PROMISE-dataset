FilterSetTest
int
BUF_SIZE
FilterSetTest
name
String
name
setUp
configureProject
tearDown
executeTarget
test1
executeTarget
assertTrue
compareFiles
test2
executeTarget
assertTrue
compareFiles
test3
executeTarget
assertTrue
compareFiles
testRecursive
String
result
String
line
FilterSet
fs
FilterSet
addFilter
addFilter
addFilter
setBeginToken
setEndToken
assertEquals
result
replaceTokens
line
testInfinite
String
result
String
line
FilterSet
fs
FilterSet
addFilter
addFilter
addFilter
addFilter
setBeginToken
setEndToken
assertEquals
result
replaceTokens
line
testRecursionDisabled
String
result
String
line
FilterSet
fs
FilterSet
addFilter
addFilter
addFilter
setBeginToken
setEndToken
setRecurse
assertEquals
result
replaceTokens
line
testNonInfiniteRecursiveMultipleOnSingleLine
FilterSet
filters
FilterSet
setBeginToken
setEndToken
addFilter
addFilter
addFilter
addFilter
String
result
String
line
assertEquals
result
replaceTokens
line
testNestedFilterSets
executeTarget
FilterSet
fs
FilterSet
getProject
getReference
Hashtable
filters
getFilterHash
assertEquals
size
assertEquals
get
fs
FilterSet
getProject
getReference
filters
getFilterHash
assertEquals
size
assertEquals
get
assertEquals
get
fs
FilterSet
getProject
getReference
filters
getFilterHash
assertEquals
size
assertEquals
get
fs
FilterSet
getProject
getReference
filters
getFilterHash
assertEquals
size
assertEquals
get
testFiltersFileElement
executeTarget
testFiltersFileAttribute
executeTarget
testMultipleFiltersFiles
executeTarget
testMissingFiltersFile
expectBuildException
testAllowMissingFiltersFile
executeTarget
compareFiles
boolean
name1
String
name2
String
File
file1
File
getProperty
name1
File
file2
File
getProperty
name2
try
if
exists
exists
block
println
name1
name2
return
if
length
length
block
println
name1
length
name2
length
return
byte
buffer1
byte
BUF_SIZE
byte
buffer2
byte
BUF_SIZE
FileInputStream
fis1
FileInputStream
file1
FileInputStream
fis2
FileInputStream
file2
int
index
int
read
while
read
read
buffer1
block
read
buffer2
for
forControl
int
i
i
read
i
index
block
if
buffer1
i
buffer2
i
block
println
name1
name2
index
return
return
catchClause
e
println
name1
name2
return
BuildFileTest
