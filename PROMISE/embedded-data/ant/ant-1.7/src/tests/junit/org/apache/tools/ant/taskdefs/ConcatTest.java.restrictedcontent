ConcatTest
String
tempFile
String
tempFile2
FileUtils
FILE_UTILS
getFileUtils
ConcatTest
name
String
name
setUp
configureProject
tearDown
executeTarget
test1
expectBuildException
test2
expectBuildException
test3
File
file
File
getProjectDir
tempFile
if
exists
block
delete
executeTarget
assertTrue
exists
test4
test3
File
file
File
getProjectDir
tempFile
long
origSize
length
executeTarget
File
file2
File
getProjectDir
tempFile2
long
newSize
length
assertEquals
origSize
newSize
test5
expectLog
test6
String
filename
replace
separatorChar
expectLogContaining
filename
testConcatNoNewline
expectLog
testConcatNoNewlineEncoding
expectLog
testPath
test3
File
file
File
getProjectDir
tempFile
long
origSize
length
executeTarget
File
file2
File
getProjectDir
tempFile2
long
newSize
length
assertEquals
origSize
newSize
testAppend
test3
File
file
File
getProjectDir
tempFile
long
origSize
length
executeTarget
File
file2
File
getProjectDir
tempFile2
long
newSize
length
assertEquals
origSize
newSize
testFilter
executeTarget
assertTrue
getLog
indexOf
testNoOverwrite
executeTarget
File
file2
File
getProjectDir
tempFile2
long
size
length
assertEquals
size
testheaderfooter
test3
expectLog
testfileheader
test3
expectLog
testsame
expectBuildException
testfilterinline
executeTarget
assertTrue
getLog
indexOf
testmultireader
executeTarget
assertTrue
getLog
indexOf
assertTrue
getLog
indexOf
testfixlastline
expectFileContains
getProperty
testfixlastlineeol
expectFileContains
getFileString
String
filename
String
Reader
r
try
r
FileReader
getProject
resolveFile
filename
return
readFully
r
close
r
getFileString
String
target
String
filename
String
executeTarget
target
return
getFileString
filename
expectFileContains
target
String
filename
String
contains
String
String
content
getFileString
target
filename
assertTrue
filename
contains
content
indexOf
contains
testTranscoding
executeTarget
File
f1
getProject
resolveFile
File
f2
getProject
resolveFile
assertTrue
contentEquals
f1
f2
testResources
executeTarget
BuildFileTest
