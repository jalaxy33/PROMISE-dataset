MailMessageTest
int
TEST_PORT
String
local
MailMessageTest
name
String
name
setUp
try
local
getLocalHost
getHostName
catchClause
uhe
testAPIExample
ServerThread
testMailServer
ServerThread
Thread
server
Thread
testMailServer
start
ClientThread
testMailClient
ClientThread
from
to
cc
cc
bcc
setSubject
setMessage
Thread
client
Thread
testMailClient
start
try
join
join
catchClause
ie
fail
ie
String
result
getResult
String
expectedResult
local
local
local
for
forControl
int
icounter
icounter
length
icounter
block
if
icounter
length
block
if
charAt
icounter
charAt
icounter
block
println
icounter
charAt
icounter
charAt
icounter
if
length
length
block
println
substring
length
if
length
length
block
println
substring
length
assertEquals
length
length
assertEquals
expectedResult
result
if
isFailed
block
fail
getFailMessage
testToOnly
ServerThread
testMailServer
ServerThread
Thread
server
Thread
testMailServer
start
ClientThread
testMailClient
ClientThread
from
to
setSubject
setMessage
Thread
client
Thread
testMailClient
start
try
join
join
catchClause
ie
fail
ie
String
result
getResult
String
expectedResult
local
local
local
assertEquals
length
length
assertEquals
expectedResult
result
if
isFailed
block
fail
getFailMessage
testCcOnly
ServerThread
testMailServer
ServerThread
Thread
server
Thread
testMailServer
start
ClientThread
testMailClient
ClientThread
from
cc
setSubject
setMessage
Thread
client
Thread
testMailClient
start
try
join
join
catchClause
ie
fail
ie
String
result
getResult
String
expectedResult
local
local
local
assertEquals
length
length
assertEquals
expectedResult
result
if
isFailed
block
fail
getFailMessage
testBccOnly
ServerThread
testMailServer
ServerThread
Thread
server
Thread
testMailServer
start
ClientThread
testMailClient
ClientThread
from
bcc
setSubject
setMessage
Thread
client
Thread
testMailClient
start
try
join
join
catchClause
ie
fail
ie
String
result
getResult
String
expectedResult
local
local
local
assertEquals
length
length
assertEquals
expectedResult
result
if
isFailed
block
fail
getFailMessage
testNoSubject
ServerThread
testMailServer
ServerThread
Thread
server
Thread
testMailServer
start
ClientThread
testMailClient
ClientThread
from
to
setMessage
Thread
client
Thread
testMailClient
start
try
join
join
catchClause
ie
fail
ie
String
result
getResult
String
expectedResult
local
local
local
assertEquals
length
length
assertEquals
expectedResult
result
if
isFailed
block
fail
getFailMessage
testEmptyBody
ServerThread
testMailServer
ServerThread
Thread
server
Thread
testMailServer
start
ClientThread
testMailClient
ClientThread
from
to
setSubject
setMessage
Thread
client
Thread
testMailClient
start
try
join
join
catchClause
ie
fail
ie
String
result
getResult
String
expectedResult
local
local
local
assertEquals
length
length
assertEquals
expectedResult
result
if
isFailed
block
fail
getFailMessage
testAsciiCharset
ServerThread
testMailServer
ServerThread
Thread
server
Thread
testMailServer
start
ClientThread
testMailClient
ClientThread
from
to
setSubject
setMessage
Thread
client
Thread
testMailClient
start
try
join
join
catchClause
ie
fail
ie
String
result
getResult
String
expectedResult
local
local
local
ByteArrayOutputStream
baos1
ByteArrayOutputStream
ByteArrayOutputStream
baos2
ByteArrayOutputStream
PrintStream
bos1
PrintStream
baos1
PrintStream
bos2
PrintStream
baos2
print
expectedResult
print
result
assertEquals
length
length
assertEquals
toString
toString
if
isFailed
block
fail
getFailMessage
ServerThread
StringBuffer
sb
boolean
loop
ServerSocket
ssock
Socket
sock
BufferedWriter
out
BufferedReader
in
boolean
data
run
try
ssock
ServerSocket
TEST_PORT
sock
accept
in
BufferedReader
InputStreamReader
getInputStream
out
BufferedWriter
OutputStreamWriter
getOutputStream
sb
StringBuffer
send
loop
while
loop
block
String
response
readLine
if
response
block
loop
break
append
response
if
data
startsWith
block
send
local
local
if
data
startsWith
block
send
if
data
startsWith
block
send
if
data
startsWith
block
send
data
if
data
equals
block
send
data
if
data
startsWith
block
send
loop
if
data
block
send
response
loop
block
catchClause
ioe
fail
disconnect
send
retmsg
String
write
retmsg
flush
append
retmsg
disconnect
if
out
block
try
flush
close
out
catchClause
e
if
in
block
try
close
in
catchClause
e
if
sock
block
try
close
sock
catchClause
e
if
ssock
block
try
close
ssock
catchClause
e
getResult
String
loop
return
toString
Runnable
ClientThread
MailMessage
msg
boolean
fail
String
failMessage
String
from
String
subject
String
message
Vector
replyToList
Vector
Vector
toList
Vector
Vector
ccList
Vector
Vector
bccList
Vector
run
for
forControl
int
i
i
i
block
try
msg
MailMessage
TEST_PORT
catchClause
ce
try
sleep
catchClause
ie
catchClause
ioe
fail
failMessage
ioe
return
if
msg
block
break
if
msg
block
fail
failMessage
return
try
from
from
Enumeration
e
e
elements
while
hasMoreElements
block
replyto
nextElement
toString
e
elements
while
hasMoreElements
block
to
nextElement
toString
e
elements
while
hasMoreElements
block
cc
nextElement
toString
e
elements
while
hasMoreElements
block
bcc
nextElement
toString
if
subject
block
setSubject
subject
if
message
block
PrintStream
out
getPrintStream
println
message
sendAndClose
catchClause
ioe
fail
failMessage
ioe
return
isFailed
boolean
return
fail
getFailMessage
String
return
failMessage
replyTo
replyTo
String
add
replyTo
to
to
String
add
to
cc
cc
String
add
cc
bcc
bcc
String
add
bcc
setSubject
subject
String
subject
subject
from
from
String
from
from
setMessage
message
String
message
message
Runnable
TestCase
