DirectoryScannerTest
DirectoryScannerTest
name
String
name
boolean
supportsSymlinks
isFamily
setUp
configureProject
getProject
executeTarget
tearDown
getProject
executeTarget
test1
DirectoryScanner
ds
DirectoryScanner
setBasedir
File
getProject
getBaseDir
setIncludes
String
scan
compareFiles
ds
String
String
test2
DirectoryScanner
ds
DirectoryScanner
setBasedir
File
getProject
getBaseDir
setIncludes
String
scan
compareFiles
ds
String
String
test3
DirectoryScanner
ds
DirectoryScanner
setBasedir
File
getProject
getBaseDir
scan
compareFiles
ds
String
String
testFullPathMatchesCaseSensitive
DirectoryScanner
ds
DirectoryScanner
setBasedir
File
getProject
getBaseDir
setIncludes
String
scan
compareFiles
ds
String
String
testFullPathMatchesCaseInsensitive
DirectoryScanner
ds
DirectoryScanner
setCaseSensitive
setBasedir
File
getProject
getBaseDir
setIncludes
String
scan
compareFiles
ds
String
String
test2ButCaseInsensitive
DirectoryScanner
ds
DirectoryScanner
setBasedir
File
getProject
getBaseDir
setIncludes
String
setCaseSensitive
scan
compareFiles
ds
String
String
testAllowSymlinks
if
supportsSymlinks
block
return
getProject
executeTarget
DirectoryScanner
ds
DirectoryScanner
setBasedir
File
getProject
getBaseDir
setIncludes
String
scan
compareFiles
ds
String
String
testProhibitSymlinks
if
supportsSymlinks
block
return
getProject
executeTarget
DirectoryScanner
ds
DirectoryScanner
setBasedir
File
getProject
getBaseDir
setIncludes
String
setFollowSymlinks
scan
compareFiles
ds
String
String
testOrderOfIncludePatternsIrrelevant
String
expectedFiles
String
expectedDirectories
DirectoryScanner
ds
DirectoryScanner
setBasedir
File
getProject
getBaseDir
setIncludes
String
scan
compareFiles
ds
expectedFiles
expectedDirectories
ds
DirectoryScanner
setBasedir
File
getProject
getBaseDir
setIncludes
String
scan
compareFiles
ds
expectedFiles
expectedDirectories
testPatternsDifferInCaseScanningSensitive
DirectoryScanner
ds
DirectoryScanner
setBasedir
File
getProject
getBaseDir
setIncludes
String
scan
compareFiles
ds
String
String
testPatternsDifferInCaseScanningInsensitive
DirectoryScanner
ds
DirectoryScanner
setBasedir
File
getProject
getBaseDir
setIncludes
String
setCaseSensitive
scan
compareFiles
ds
String
String
testFullpathDiffersInCaseScanningSensitive
DirectoryScanner
ds
DirectoryScanner
setBasedir
File
getProject
getBaseDir
setIncludes
String
scan
compareFiles
ds
String
String
testFullpathDiffersInCaseScanningInsensitive
DirectoryScanner
ds
DirectoryScanner
setBasedir
File
getProject
getBaseDir
setIncludes
String
setCaseSensitive
scan
compareFiles
ds
String
String
testParentDiffersInCaseScanningSensitive
DirectoryScanner
ds
DirectoryScanner
setBasedir
File
getProject
getBaseDir
setIncludes
String
scan
compareFiles
ds
String
String
testParentDiffersInCaseScanningInsensitive
DirectoryScanner
ds
DirectoryScanner
setBasedir
File
getProject
getBaseDir
setIncludes
String
setCaseSensitive
scan
compareFiles
ds
String
String
testSetFollowLinks
if
supportsSymlinks
block
File
linkFile
File
getProperty
println
exists
try
String
command
String
getAbsolutePath
try
getRuntime
exec
command
sleep
catchClause
ioe
fail
ioe
catchClause
ie
File
dir
File
getProperty
println
exists
println
getFileUtils
isSymbolicLink
dir
DirectoryScanner
ds
DirectoryScanner
setFollowSymlinks
setBasedir
dir
setExcludes
String
scan
boolean
haveZipPackage
boolean
haveTaskdefsPackage
String
included
getIncludedDirectories
for
forControl
int
i
i
length
i
block
if
included
i
equals
block
haveZipPackage
if
included
i
equals
separator
block
haveTaskdefsPackage
assertTrue
haveZipPackage
assertTrue
haveTaskdefsPackage
ds
DirectoryScanner
setFollowSymlinks
setBasedir
dir
setExcludes
String
scan
haveZipPackage
haveTaskdefsPackage
included
getIncludedDirectories
for
forControl
int
i
i
length
i
block
if
included
i
equals
block
haveZipPackage
if
included
i
equals
separator
block
haveTaskdefsPackage
assertTrue
haveZipPackage
assertTrue
haveTaskdefsPackage
println
exists
if
delete
block
throw
RuntimeException
linkFile
println
exists
testExcludeOneFile
DirectoryScanner
ds
DirectoryScanner
setBasedir
File
getProject
getBaseDir
setIncludes
String
setExcludes
String
scan
compareFiles
ds
String
String
testExcludeHasPrecedence
DirectoryScanner
ds
DirectoryScanner
setBasedir
File
getProject
getBaseDir
setIncludes
String
setExcludes
String
scan
compareFiles
ds
String
String
testAlternateIncludeExclude
DirectoryScanner
ds
DirectoryScanner
setBasedir
File
getProject
getBaseDir
setIncludes
String
setExcludes
String
scan
compareFiles
ds
String
String
testAlternateExcludeInclude
DirectoryScanner
ds
DirectoryScanner
setBasedir
File
getProject
getBaseDir
setExcludes
String
setIncludes
String
scan
compareFiles
ds
String
String
testChildrenOfExcludedDirectory
getProject
executeTarget
DirectoryScanner
ds
DirectoryScanner
setBasedir
File
getProject
getBaseDir
setExcludes
String
setFollowSymlinks
scan
compareFiles
ds
String
String
ds
DirectoryScanner
setBasedir
File
getProject
getBaseDir
setExcludes
String
setFollowSymlinks
scan
compareFiles
ds
String
String
testIsExcludedDirectoryScanned
String
shareclassloader
getProject
getProperty
if
shareclassloader
shareclassloader
indexOf
block
println
return
getProject
executeTarget
DirectoryScanner
ds
DirectoryScanner
setBasedir
File
getProject
getBaseDir
setExcludes
String
setFollowSymlinks
scan
Set
set
getScannedDirs
assertFalse
isEmpty
String
s
replace
separatorChar
assertFalse
s
contains
s
testAbsolute1
getProject
executeTarget
DirectoryScanner
ds
DirectoryScanner
String
tmpdir
getProject
getBaseDir
getAbsolutePath
replace
separatorChar
setIncludes
String
tmpdir
scan
compareFiles
ds
String
tmpdir
tmpdir
tmpdir
String
tmpdir
tmpdir
tmpdir
tmpdir
testAbsolute2
getProject
executeTarget
DirectoryScanner
ds
DirectoryScanner
setIncludes
String
scan
String
mt
String
compareFiles
ds
mt
mt
testAbsolute3
getProject
executeTarget
DirectoryScanner
ds
DirectoryScanner
String
tmpdir
getProject
getBaseDir
getAbsolutePath
replace
separatorChar
setIncludes
String
tmpdir
setExcludes
String
scan
compareFiles
ds
String
tmpdir
tmpdir
String
tmpdir
tmpdir
tmpdir
testAbsolute4
getProject
executeTarget
DirectoryScanner
ds
DirectoryScanner
String
tmpdir
getProject
getBaseDir
getAbsolutePath
replace
separatorChar
setIncludes
String
tmpdir
tmpdir
setExcludes
String
scan
compareFiles
ds
String
tmpdir
tmpdir
String
tmpdir
testAbsolute5
if
isFamily
isFamily
block
return
DirectoryScanner
ds
DirectoryScanner
String
pattern
getAbsolutePath
toUpperCase
File
separator
setIncludes
String
pattern
scan
assertTrue
getIncludedFilesCount
getIncludedDirsCount
compareFiles
ds
DirectoryScanner
expectedFiles
String
expectedDirectories
String
String
includedFiles
getIncludedFiles
String
includedDirectories
getIncludedDirectories
assertEquals
length
length
assertEquals
length
length
TreeSet
files
TreeSet
for
forControl
int
counter
counter
length
counter
block
add
includedFiles
counter
replace
separatorChar
TreeSet
directories
TreeSet
for
forControl
int
counter
counter
length
counter
block
add
includedDirectories
counter
replace
separatorChar
String
currentfile
Iterator
i
iterator
int
counter
while
hasNext
block
currentfile
String
next
assertEquals
expectedFiles
counter
currentfile
counter
String
currentdirectory
Iterator
dirit
iterator
counter
while
hasNext
block
currentdirectory
String
next
assertEquals
expectedDirectories
counter
currentdirectory
counter
BuildFileTest
