MacroInstance
MacroDef
macroDef
Map
map
HashMap
Map
nsElements
Map
presentElements
Hashtable
localAttributes
String
text
String
implicitTag
List
unknownElements
ArrayList
setMacroDef
macroDef
MacroDef
macroDef
macroDef
getMacroDef
MacroDef
return
macroDef
setDynamicAttribute
name
String
value
String
put
name
value
createDynamicElement
Object
name
String
throw
BuildException
getNsElements
Map
if
nsElements
block
nsElements
HashMap
for
forControl
Iterator
i
getElements
entrySet
iterator
hasNext
block
Map
Entry
entry
Map
Entry
next
put
String
getKey
getValue
MacroDef
TemplateElement
te
MacroDef
TemplateElement
getValue
if
isImplicit
block
implicitTag
getName
return
nsElements
addTask
nestedTask
Task
add
nestedTask
processTasks
if
implicitTag
block
return
for
forControl
Iterator
i
iterator
hasNext
block
UnknownElement
ue
UnknownElement
next
String
name
extractNameFromComponentName
toLowerCase
US
getTag
if
getNsElements
get
name
block
throw
BuildException
name
if
get
name
block
throw
BuildException
name
put
name
ue
Element
List
unknownElements
ArrayList
addTask
nestedTask
Task
add
nestedTask
getUnknownElements
List
return
unknownElements
TaskContainer
int
STATE_NORMAL
int
STATE_EXPECT_BRACKET
int
STATE_EXPECT_NAME
macroSubs
String
s
String
macroMapping
Map
if
s
block
return
StringBuffer
ret
StringBuffer
StringBuffer
macroName
int
state
STATE_NORMAL
for
forControl
int
i
i
length
i
block
char
ch
charAt
i
switch
state
case
if
ch
block
state
STATE_EXPECT_BRACKET
block
append
ch
break
case
if
ch
block
state
STATE_EXPECT_NAME
macroName
StringBuffer
if
ch
block
state
STATE_NORMAL
append
block
state
STATE_NORMAL
append
append
ch
break
case
if
ch
block
state
STATE_NORMAL
String
name
toString
toLowerCase
US
String
value
String
get
name
if
value
block
append
append
name
append
block
append
value
macroName
block
append
ch
break
case
break
switch
state
case
break
case
append
break
case
append
append
toString
break
case
break
return
toString
addText
text
String
text
text
copy
UnknownElement
ue
UnknownElement
UnknownElement
ret
UnknownElement
getTag
setNamespace
getNamespace
setProject
getProject
setQName
getQName
setTaskType
getTaskType
setTaskName
getTaskName
setLocation
getBackTrace
getLocation
getLocation
if
getOwningTarget
block
Target
t
Target
setProject
getProject
setOwningTarget
t
block
setOwningTarget
getOwningTarget
RuntimeConfigurable
rc
RuntimeConfigurable
ret
getTaskName
setPolyType
getWrapper
getPolyType
Map
m
getWrapper
getAttributeMap
for
forControl
Iterator
i
entrySet
iterator
hasNext
block
Map
Entry
entry
Map
Entry
next
setAttribute
String
getKey
macroSubs
String
getValue
localAttributes
addText
macroSubs
getWrapper
getText
toString
localAttributes
Enumeration
e
getWrapper
getChildren
while
hasMoreElements
block
RuntimeConfigurable
r
RuntimeConfigurable
nextElement
UnknownElement
unknownElement
UnknownElement
getProxy
String
tag
getTaskType
if
tag
block
tag
toLowerCase
US
MacroDef
TemplateElement
templateElement
MacroDef
TemplateElement
getNsElements
get
tag
if
templateElement
block
UnknownElement
child
copy
unknownElement
addChild
getWrapper
addChild
child
if
isImplicit
block
if
size
isOptional
block
throw
BuildException
getName
for
forControl
Iterator
i
iterator
hasNext
block
UnknownElement
child
copy
UnknownElement
next
addChild
getWrapper
addChild
child
block
UnknownElement
presentElement
UnknownElement
get
tag
if
presentElement
block
if
isOptional
block
throw
BuildException
getName
continue
String
presentText
getWrapper
getText
toString
if
equals
presentText
block
addText
macroSubs
presentText
localAttributes
List
list
getChildren
if
list
block
for
forControl
Iterator
i
iterator
hasNext
block
UnknownElement
child
copy
UnknownElement
next
addChild
getWrapper
addChild
child
return
ret
execute
presentElements
HashMap
getNsElements
processTasks
localAttributes
Hashtable
Set
copyKeys
HashSet
keySet
for
forControl
Iterator
i
getAttributes
iterator
hasNext
block
MacroDef
Attribute
attribute
MacroDef
Attribute
next
String
value
String
get
getName
if
value
equals
getName
block
value
getDescription
if
value
block
value
getDefault
value
macroSubs
value
localAttributes
if
value
block
throw
BuildException
getName
put
getName
value
remove
getName
if
contains
block
remove
if
getText
block
if
text
block
if
getText
getOptional
block
throw
BuildException
text
if
getText
getTrim
block
text
trim
put
getText
getName
text
block
if
text
trim
equals
block
throw
BuildException
getTaskName
if
size
block
throw
BuildException
size
copyKeys
UnknownElement
c
copy
getNestedTask
init
try
perform
catchClause
ex
if
getBackTrace
block
throw
addLocationToBuildException
ex
getLocation
block
setLocation
getLocation
throw
ex
presentElements
localAttributes
Task
DynamicAttribute
TaskContainer
