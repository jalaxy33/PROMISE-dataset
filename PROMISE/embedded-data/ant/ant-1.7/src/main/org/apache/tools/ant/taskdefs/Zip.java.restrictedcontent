Zip
File
zipFile
ZipScanner
zs
File
baseDir
Hashtable
entries
Hashtable
Vector
groupfilesets
Vector
Vector
filesetsFromGroupfilesets
Vector
String
duplicate
boolean
doCompress
boolean
doUpdate
boolean
savedDoUpdate
boolean
doFilesonly
String
archiveType
long
EMPTY_CRC
getValue
CRC32
String
emptyBehavior
Vector
resources
Vector
Hashtable
addedDirs
Hashtable
Vector
addedFiles
Vector
boolean
doubleFilePass
boolean
skipWriting
FileUtils
FILE_UTILS
getFileUtils
boolean
addingNewFiles
String
encoding
boolean
keepCompression
boolean
roundUp
String
comment
int
level
DEFAULT_COMPRESSION
setZipfile
zipFile
File
setDestFile
zipFile
setFile
file
File
setDestFile
file
setDestFile
destFile
File
zipFile
destFile
getDestFile
File
return
zipFile
setBasedir
baseDir
File
baseDir
baseDir
setCompress
c
boolean
doCompress
c
isCompress
boolean
return
doCompress
setFilesonly
f
boolean
doFilesonly
f
setUpdate
c
boolean
doUpdate
c
savedDoUpdate
c
isInUpdateMode
boolean
return
doUpdate
addFileset
set
FileSet
add
set
addZipfileset
set
ZipFileSet
add
set
add
a
ResourceCollection
add
a
addZipGroupFileset
set
FileSet
addElement
set
setDuplicate
df
Duplicate
duplicate
getValue
WhenEmpty
getValues
String
return
String
EnumeratedAttribute
setWhenempty
we
WhenEmpty
emptyBehavior
getValue
setEncoding
encoding
String
encoding
encoding
getEncoding
String
return
encoding
setKeepCompression
keep
boolean
keepCompression
keep
setComment
comment
String
comment
comment
getComment
String
return
comment
setLevel
level
int
level
level
getLevel
int
return
level
setRoundUp
r
boolean
roundUp
r
execute
if
doubleFilePass
block
skipWriting
executeMain
skipWriting
executeMain
block
executeMain
executeMain
if
baseDir
size
size
equals
archiveType
block
throw
BuildException
if
zipFile
block
throw
BuildException
archiveType
if
exists
isFile
block
throw
BuildException
zipFile
if
exists
canWrite
block
throw
BuildException
zipFile
File
renamedFile
addingNewFiles
if
doUpdate
exists
block
doUpdate
log
archiveType
MSG_DEBUG
for
forControl
int
i
i
size
i
block
log
MSG_VERBOSE
FileSet
fs
FileSet
elementAt
i
FileScanner
scanner
getDirectoryScanner
getProject
String
files
getIncludedFiles
File
basedir
getBasedir
for
forControl
int
j
j
length
j
block
log
files
j
MSG_VERBOSE
ZipFileSet
zf
ZipFileSet
setProject
getProject
setSrc
File
basedir
files
j
add
zf
addElement
zf
Vector
vfss
Vector
if
baseDir
block
FileSet
fs
FileSet
getImplicitFileSet
clone
setDir
baseDir
addElement
fs
for
forControl
int
i
i
size
i
block
ResourceCollection
rc
ResourceCollection
elementAt
i
addElement
rc
ResourceCollection
fss
ResourceCollection
size
copyInto
fss
boolean
success
try
ArchiveState
state
getResourcesToAdd
fss
zipFile
if
isOutOfDate
block
return
if
exists
isWithoutAnyResources
block
createEmptyZip
zipFile
return
Resource
addThem
getResourcesToAdd
if
doUpdate
block
renamedFile
createTempFile
getParentFile
deleteOnExit
try
rename
zipFile
renamedFile
catchClause
e
throw
BuildException
getAbsolutePath
catchClause
e
throw
BuildException
getAbsolutePath
String
action
doUpdate
log
action
archiveType
getAbsolutePath
ZipOutputStream
zOut
try
if
skipWriting
block
zOut
ZipOutputStream
zipFile
setEncoding
encoding
setMethod
doCompress
DEFLATED
STORED
setLevel
level
initZipOutputStream
zOut
for
forControl
int
i
i
length
i
block
if
addThem
i
length
block
addResources
fss
i
addThem
i
zOut
if
doUpdate
block
addingNewFiles
ZipFileSet
oldFiles
ZipFileSet
setProject
getProject
setSrc
renamedFile
setDefaultexcludes
for
forControl
int
i
i
size
i
block
PatternSet
NameEntry
ne
createExclude
setName
String
elementAt
i
DirectoryScanner
ds
getDirectoryScanner
getProject
ZipScanner
ds
String
f
getIncludedFiles
Resource
r
Resource
length
for
forControl
int
i
i
length
i
block
r
i
getResource
f
i
if
doFilesonly
block
String
d
getIncludedDirectories
Resource
dr
Resource
length
for
forControl
int
i
i
length
i
block
dr
i
getResource
d
i
Resource
tmp
r
r
Resource
length
length
arraycopy
dr
r
length
arraycopy
tmp
r
length
length
addResources
oldFiles
r
zOut
if
zOut
block
setComment
comment
finalizeZipOutputStream
zOut
if
doUpdate
block
if
delete
block
log
getName
MSG_WARN
success
try
if
zOut
block
close
catchClause
ex
if
success
block
throw
ex
catchClause
ioe
String
msg
archiveType
getMessage
if
doUpdate
renamedFile
delete
block
msg
if
doUpdate
renamedFile
block
try
rename
renamedFile
zipFile
catchClause
e
msg
getName
throw
BuildException
msg
ioe
getLocation
cleanUp
isAddingNewFiles
boolean
return
addingNewFiles
addResources
fileset
FileSet
resources
Resource
zOut
ZipOutputStream
String
prefix
String
fullpath
int
dirMode
DEFAULT_DIR_MODE
int
fileMode
DEFAULT_FILE_MODE
ArchiveFileSet
zfs
if
fileset
ArchiveFileSet
block
zfs
ArchiveFileSet
fileset
prefix
getPrefix
getProject
fullpath
getFullpath
getProject
dirMode
getDirMode
getProject
fileMode
getFileMode
getProject
if
length
length
block
throw
BuildException
if
length
length
block
throw
BuildException
if
length
block
if
endsWith
endsWith
block
prefix
addParentDirs
prefix
zOut
dirMode
ZipFile
zf
try
boolean
dealingWithFiles
File
base
if
zfs
getSrc
getProject
block
dealingWithFiles
base
getDir
getProject
if
zfs
ZipFileSet
block
zf
ZipFile
getSrc
getProject
encoding
for
forControl
int
i
i
length
i
block
String
name
if
length
block
name
fullpath
block
name
resources
i
getName
name
replace
separatorChar
if
equals
name
block
continue
if
resources
i
isDirectory
endsWith
block
name
name
if
doFilesonly
dealingWithFiles
resources
i
isDirectory
hasDirModeBeenSet
block
int
nextToLastSlash
lastIndexOf
length
if
nextToLastSlash
block
addParentDirs
base
substring
nextToLastSlash
zOut
prefix
dirMode
if
zf
block
ZipEntry
ze
getEntry
resources
i
getName
addParentDirs
base
name
zOut
prefix
getUnixMode
block
ArchiveResource
tr
ArchiveResource
resources
i
addParentDirs
base
name
zOut
prefix
getMode
block
addParentDirs
base
name
zOut
prefix
dirMode
if
resources
i
isDirectory
dealingWithFiles
block
File
f
resolveFile
base
resources
i
getName
zipFile
f
zOut
prefix
name
fileMode
if
resources
i
isDirectory
block
if
zf
block
ZipEntry
ze
getEntry
resources
i
getName
if
ze
block
boolean
oldCompress
doCompress
if
keepCompression
block
doCompress
getMethod
DEFLATED
try
zipFile
getInputStream
ze
zOut
prefix
name
getTime
getSrc
getProject
hasFileModeBeenSet
fileMode
getUnixMode
doCompress
oldCompress
block
ArchiveResource
tr
ArchiveResource
resources
i
InputStream
is
try
is
getInputStream
zipFile
is
zOut
prefix
name
resources
i
getLastModified
getSrc
getProject
hasFileModeBeenSet
fileMode
getMode
close
is
if
zf
block
close
addResources
rc
ResourceCollection
resources
Resource
zOut
ZipOutputStream
if
rc
FileSet
block
addResources
FileSet
rc
resources
zOut
return
for
forControl
int
i
i
length
i
block
String
name
resources
i
getName
replace
separatorChar
if
equals
name
block
continue
if
resources
i
isDirectory
doFilesonly
block
continue
File
base
if
resources
i
FileResource
block
base
FileResource
resources
i
if
resources
i
isDirectory
block
if
endsWith
block
name
name
addParentDirs
base
name
zOut
DEFAULT_DIR_MODE
if
resources
i
isDirectory
block
if
resources
i
FileResource
block
File
f
FileResource
resources
i
zipFile
f
zOut
name
DEFAULT_FILE_MODE
block
InputStream
is
try
is
resources
i
getInputStream
zipFile
is
zOut
name
resources
i
getLastModified
DEFAULT_FILE_MODE
close
is
initZipOutputStream
zOut
ZipOutputStream
finalizeZipOutputStream
zOut
ZipOutputStream
createEmptyZip
boolean
zipFile
File
log
archiveType
zipFile
MSG_INFO
OutputStream
os
try
os
FileOutputStream
zipFile
byte
empty
byte
empty
empty
empty
empty
write
empty
catchClause
ioe
throw
BuildException
getMessage
ioe
getLocation
if
os
block
try
close
catchClause
e
return
getZipScanner
ZipScanner
if
zs
block
zs
ZipScanner
setEncoding
encoding
setSrc
zipFile
return
zs
getResourcesToAdd
ArchiveState
rcs
ResourceCollection
zipFile
File
needsUpdate
boolean
ArrayList
filesets
ArrayList
ArrayList
rest
ArrayList
for
forControl
int
i
i
length
i
block
if
rcs
i
FileSet
block
add
rcs
i
block
add
rcs
i
ResourceCollection
rc
ResourceCollection
toArray
ResourceCollection
size
ArchiveState
as
getNonFileSetResourcesToAdd
rc
zipFile
needsUpdate
FileSet
fs
FileSet
toArray
FileSet
size
ArchiveState
as2
getResourcesToAdd
fs
zipFile
isOutOfDate
if
isOutOfDate
isOutOfDate
block
as
getNonFileSetResourcesToAdd
rc
zipFile
Resource
toAdd
Resource
length
int
fsIndex
int
restIndex
for
forControl
int
i
i
length
i
block
if
rcs
i
FileSet
block
toAdd
i
getResourcesToAdd
fsIndex
block
toAdd
i
getResourcesToAdd
restIndex
return
ArchiveState
isOutOfDate
toAdd
getResourcesToAdd
ArchiveState
filesets
FileSet
zipFile
File
needsUpdate
boolean
Resource
initialResources
grabResources
filesets
if
isEmpty
initialResources
block
if
needsUpdate
doUpdate
block
return
ArchiveState
initialResources
if
equals
block
if
doUpdate
block
log
archiveType
zipFile
MSG_VERBOSE
block
log
archiveType
zipFile
MSG_WARN
if
equals
block
throw
BuildException
archiveType
zipFile
getLocation
block
if
exists
block
needsUpdate
return
ArchiveState
needsUpdate
initialResources
if
exists
block
return
ArchiveState
initialResources
if
needsUpdate
doUpdate
block
return
ArchiveState
initialResources
Resource
newerResources
Resource
length
for
forControl
int
i
i
length
i
block
if
fileset
ZipFileSet
ZipFileSet
fileset
block
File
base
filesets
i
getDir
getProject
for
forControl
int
j
j
initialResources
i
length
j
block
File
resourceAsFile
resolveFile
base
initialResources
i
j
getName
if
equals
zipFile
block
throw
BuildException
getLocation
for
forControl
int
i
i
length
i
block
if
initialResources
i
length
block
newerResources
i
Resource
continue
FileNameMapper
myMapper
IdentityMapper
if
filesets
i
ZipFileSet
block
ZipFileSet
zfs
ZipFileSet
filesets
i
if
getFullpath
getProject
getFullpath
equals
getProject
block
MergingMapper
fm
MergingMapper
setTo
getFullpath
getProject
myMapper
fm
if
getPrefix
getProject
getPrefix
equals
getProject
block
GlobPatternMapper
gm
GlobPatternMapper
setFrom
String
prefix
getPrefix
getProject
if
endsWith
endsWith
block
prefix
setTo
prefix
myMapper
gm
Resource
resources
initialResources
i
if
doFilesonly
block
resources
selectFileResources
resources
newerResources
i
selectOutOfDateSources
resources
myMapper
getZipScanner
needsUpdate
needsUpdate
newerResources
i
length
if
needsUpdate
doUpdate
block
break
if
needsUpdate
doUpdate
block
return
ArchiveState
initialResources
return
ArchiveState
needsUpdate
newerResources
getNonFileSetResourcesToAdd
ArchiveState
rcs
ResourceCollection
zipFile
File
needsUpdate
boolean
Resource
initialResources
grabNonFileSetResources
rcs
if
isEmpty
initialResources
block
return
ArchiveState
needsUpdate
initialResources
if
exists
block
return
ArchiveState
initialResources
if
needsUpdate
doUpdate
block
return
ArchiveState
initialResources
Resource
newerResources
Resource
length
for
forControl
int
i
i
length
i
block
if
initialResources
i
length
block
newerResources
i
Resource
continue
for
forControl
int
j
j
initialResources
i
length
j
block
if
initialResources
i
j
FileResource
equals
FileResource
initialResources
i
j
block
throw
BuildException
getLocation
Resource
rs
initialResources
i
if
doFilesonly
block
rs
selectFileResources
rs
newerResources
i
selectOutOfDateSources
rs
IdentityMapper
getZipScanner
needsUpdate
needsUpdate
newerResources
i
length
if
needsUpdate
doUpdate
block
break
if
needsUpdate
doUpdate
block
return
ArchiveState
initialResources
return
ArchiveState
needsUpdate
newerResources
grabResources
Resource
filesets
FileSet
Resource
result
Resource
length
for
forControl
int
i
i
length
i
block
boolean
skipEmptyNames
if
filesets
i
ZipFileSet
block
ZipFileSet
zfs
ZipFileSet
filesets
i
skipEmptyNames
getPrefix
equals
getProject
getFullpath
equals
getProject
DirectoryScanner
rs
filesets
i
getDirectoryScanner
getProject
if
rs
ZipScanner
block
ZipScanner
rs
Vector
resources
Vector
if
doFilesonly
block
String
directories
getIncludedDirectories
for
forControl
int
j
j
length
j
block
if
equals
directories
j
skipEmptyNames
block
addElement
getResource
directories
j
String
files
getIncludedFiles
for
forControl
int
j
j
length
j
block
if
equals
files
j
skipEmptyNames
block
addElement
getResource
files
j
result
i
Resource
size
copyInto
result
i
return
result
grabNonFileSetResources
Resource
rcs
ResourceCollection
Resource
result
Resource
length
for
forControl
int
i
i
length
i
block
Iterator
iter
rcs
i
iterator
ArrayList
rs
ArrayList
int
lastDir
while
hasNext
block
Resource
r
Resource
next
if
isExists
block
if
isDirectory
block
add
lastDir
r
block
add
r
result
i
Resource
toArray
Resource
size
return
result
zipDir
dir
File
zOut
ZipOutputStream
vPath
String
mode
int
zipDir
dir
zOut
vPath
mode
zipDir
dir
File
zOut
ZipOutputStream
vPath
String
mode
int
extra
ZipExtraField
if
doFilesonly
block
log
vPath
MSG_VERBOSE
return
if
get
vPath
block
return
log
vPath
MSG_VERBOSE
put
vPath
vPath
if
skipWriting
block
ZipEntry
ze
ZipEntry
vPath
if
dir
exists
block
setTime
lastModified
roundUp
block
setTime
currentTimeMillis
roundUp
setSize
setMethod
STORED
setCrc
EMPTY_CRC
setUnixMode
mode
if
extra
block
setExtraFields
extra
putNextEntry
ze
zipFile
in
InputStream
zOut
ZipOutputStream
vPath
String
lastModified
long
fromArchive
File
mode
int
if
contains
vPath
block
if
equals
block
log
vPath
MSG_INFO
return
if
equals
block
throw
BuildException
vPath
block
log
vPath
MSG_VERBOSE
block
log
vPath
MSG_VERBOSE
put
vPath
vPath
if
skipWriting
block
ZipEntry
ze
ZipEntry
vPath
setTime
lastModified
setMethod
doCompress
DEFLATED
STORED
if
isSeekable
doCompress
block
long
size
CRC32
cal
CRC32
if
markSupported
block
ByteArrayOutputStream
bos
ByteArrayOutputStream
byte
buffer
byte
int
count
do
count
block
size
count
update
buffer
count
write
buffer
count
count
read
buffer
length
in
ByteArrayInputStream
toByteArray
block
mark
MAX_VALUE
byte
buffer
byte
int
count
do
count
block
size
count
update
buffer
count
count
read
buffer
length
reset
setSize
size
setCrc
getValue
setUnixMode
mode
putNextEntry
ze
byte
buffer
byte
int
count
do
count
block
if
count
block
write
buffer
count
count
read
buffer
length
addElement
vPath
zipFile
file
File
zOut
ZipOutputStream
vPath
String
mode
int
if
equals
zipFile
block
throw
BuildException
getLocation
FileInputStream
fIn
FileInputStream
file
try
zipFile
fIn
zOut
vPath
lastModified
roundUp
mode
close
addParentDirs
baseDir
File
entry
String
zOut
ZipOutputStream
prefix
String
dirMode
int
if
doFilesonly
block
Stack
directories
Stack
int
slashPos
length
while
slashPos
lastIndexOf
slashPos
block
String
dir
substring
slashPos
if
get
prefix
dir
block
break
push
dir
while
isEmpty
block
String
dir
String
pop
File
f
if
baseDir
block
f
File
baseDir
dir
block
f
File
dir
zipDir
f
zOut
prefix
dir
dirMode
cleanUp
clear
removeAllElements
clear
addingNewFiles
doUpdate
savedDoUpdate
Enumeration
e
elements
while
hasMoreElements
block
ZipFileSet
zf
ZipFileSet
nextElement
removeElement
zf
removeAllElements
reset
removeAllElements
zipFile
baseDir
removeAllElements
duplicate
archiveType
doCompress
emptyBehavior
doUpdate
doFilesonly
encoding
isEmpty
boolean
r
Resource
for
forControl
int
i
i
length
i
block
if
r
i
length
block
return
return
selectFileResources
Resource
orig
Resource
if
length
block
return
orig
Vector
v
Vector
length
for
forControl
int
i
i
length
i
block
if
orig
i
isDirectory
block
addElement
orig
i
block
log
orig
i
getName
MSG_VERBOSE
if
size
length
block
Resource
r
Resource
size
copyInto
r
return
r
return
orig
Duplicate
getValues
String
return
String
EnumeratedAttribute
ArchiveState
boolean
outOfDate
Resource
resourcesToAdd
ArchiveState
state
boolean
r
Resource
outOfDate
state
resourcesToAdd
r
isOutOfDate
boolean
return
outOfDate
getResourcesToAdd
Resource
return
resourcesToAdd
isWithoutAnyResources
boolean
if
resourcesToAdd
block
return
for
forControl
int
counter
counter
length
counter
block
if
resourcesToAdd
counter
block
if
resourcesToAdd
counter
length
block
return
return
MatchingTask
