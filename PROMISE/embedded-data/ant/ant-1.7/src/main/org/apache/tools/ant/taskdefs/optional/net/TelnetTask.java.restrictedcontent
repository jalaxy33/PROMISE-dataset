TelnetTask
String
userid
String
password
String
server
int
port
Vector
telnetTasks
Vector
boolean
addCarriageReturn
Integer
defaultTimeout
execute
if
server
block
throw
BuildException
if
userid
password
block
throw
BuildException
if
password
userid
block
throw
BuildException
AntTelnetClient
telnet
try
telnet
AntTelnetClient
try
connect
server
port
catchClause
e
throw
BuildException
server
if
userid
password
block
login
telnet
Enumeration
tasksToRun
elements
while
tasksToRun
hasMoreElements
block
TelnetSubTask
task
TelnetSubTask
nextElement
if
task
TelnetRead
defaultTimeout
block
TelnetRead
task
execute
telnet
if
telnet
isConnected
block
try
disconnect
catchClause
e
throw
BuildException
server
login
telnet
AntTelnetClient
if
addCarriageReturn
block
sendString
waitForString
sendString
userid
waitForString
sendString
password
setUserid
u
String
userid
u
setPassword
p
String
password
p
setServer
m
String
server
m
setPort
p
int
port
p
setInitialCR
b
boolean
addCarriageReturn
b
setTimeout
i
Integer
defaultTimeout
i
createRead
TelnetSubTask
TelnetSubTask
task
TelnetSubTask
TelnetRead
addElement
task
return
task
createWrite
TelnetSubTask
TelnetSubTask
task
TelnetSubTask
TelnetWrite
addElement
task
return
task
TelnetSubTask
String
taskString
execute
telnet
AntTelnetClient
throw
BuildException
addText
s
String
setString
getProject
replaceProperties
s
setString
s
String
taskString
s
TelnetWrite
boolean
echoString
execute
telnet
AntTelnetClient
sendString
taskString
echoString
setEcho
b
boolean
echoString
b
TelnetSubTask
TelnetRead
Integer
timeout
execute
telnet
AntTelnetClient
waitForString
taskString
timeout
setTimeout
i
Integer
timeout
i
setDefaultTimeout
defaultTimeout
Integer
if
timeout
block
timeout
defaultTimeout
TelnetSubTask
AntTelnetClient
waitForString
s
String
waitForString
s
waitForString
s
String
timeout
Integer
InputStream
is
getInputStream
try
StringBuffer
sb
StringBuffer
if
timeout
intValue
block
while
toString
indexOf
s
block
append
char
read
block
Calendar
endTime
getInstance
add
SECOND
intValue
while
toString
indexOf
s
block
while
getInstance
before
endTime
available
block
sleep
if
available
block
log
toString
MSG_DEBUG
throw
BuildException
s
getLocation
append
char
read
log
toString
MSG_INFO
catchClause
be
throw
be
catchClause
e
throw
BuildException
e
getLocation
sendString
s
String
echoString
boolean
OutputStream
os
getOutputStream
try
write
s
if
echoString
block
log
s
MSG_INFO
flush
catchClause
e
throw
BuildException
e
getLocation
TelnetClient
Task
