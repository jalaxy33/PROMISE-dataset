CBZip2InputStream
reportCRCError
println
makeMaps
boolean
inUse
data
inUse
byte
seqToUnseq
data
seqToUnseq
int
nInUseShadow
for
forControl
int
i
i
i
block
if
inUse
i
seqToUnseq
nInUseShadow
byte
i
nInUse
nInUseShadow
int
last
int
origPtr
int
blockSize100k
boolean
blockRandomised
int
bsBuff
int
bsLive
CRC
crc
CRC
int
nInUse
InputStream
in
int
currentChar
int
EOF
int
START_BLOCK_STATE
int
RAND_PART_A_STATE
int
RAND_PART_B_STATE
int
RAND_PART_C_STATE
int
NO_RAND_PART_A_STATE
int
NO_RAND_PART_B_STATE
int
NO_RAND_PART_C_STATE
int
currentState
START_BLOCK_STATE
int
storedBlockCRC
storedCombinedCRC
int
computedBlockCRC
computedCombinedCRC
int
su_count
int
su_ch2
int
su_chPrev
int
su_i2
int
su_j2
int
su_rNToGo
int
su_rTPos
int
su_tPos
char
su_z
CBZip2InputStream
Data
data
CBZip2InputStream
in
InputStream
in
in
init
read
int
if
in
block
return
read0
block
throw
IOException
read
int
dest
byte
offs
int
len
int
if
offs
block
throw
IndexOutOfBoundsException
offs
if
len
block
throw
IndexOutOfBoundsException
len
if
offs
len
length
block
throw
IndexOutOfBoundsException
offs
len
length
if
in
block
throw
IOException
int
hi
offs
len
int
destOffs
offs
for
forControl
int
b
destOffs
hi
b
read0
block
dest
destOffs
byte
b
return
destOffs
offs
destOffs
offs
read0
int
int
retChar
currentChar
switch
currentState
case
return
case
throw
IllegalStateException
case
throw
IllegalStateException
case
setupRandPartB
break
case
setupRandPartC
break
case
throw
IllegalStateException
case
setupNoRandPartB
break
case
setupNoRandPartC
break
case
throw
IllegalStateException
return
retChar
init
int
magic2
in
read
if
magic2
block
throw
IOException
char
magic2
int
blockSize
in
read
if
blockSize
blockSize
block
throw
IOException
char
blockSize
blockSize100k
blockSize
initBlock
setupBlock
initBlock
char
magic0
bsGetUByte
char
magic1
bsGetUByte
char
magic2
bsGetUByte
char
magic3
bsGetUByte
char
magic4
bsGetUByte
char
magic5
bsGetUByte
if
magic0
magic1
magic2
magic3
magic4
magic5
block
complete
if
magic0
magic1
magic2
magic3
magic4
magic5
block
currentState
EOF
throw
IOException
block
storedBlockCRC
bsGetInt
blockRandomised
bsR
if
data
block
data
Data
blockSize100k
getAndMoveToFrontDecode
crc
initialiseCRC
currentState
START_BLOCK_STATE
endBlock
computedBlockCRC
crc
getFinalCRC
if
storedBlockCRC
computedBlockCRC
block
computedCombinedCRC
storedCombinedCRC
storedCombinedCRC
computedCombinedCRC
storedBlockCRC
reportCRCError
computedCombinedCRC
computedCombinedCRC
computedCombinedCRC
computedCombinedCRC
computedBlockCRC
complete
storedCombinedCRC
bsGetInt
currentState
EOF
data
if
storedCombinedCRC
computedCombinedCRC
block
reportCRCError
close
InputStream
inShadow
in
if
inShadow
block
try
if
inShadow
in
block
close
data
in
bsR
int
n
int
int
bsLiveShadow
bsLive
int
bsBuffShadow
bsBuff
if
bsLiveShadow
n
block
InputStream
inShadow
in
do
bsLiveShadow
n
block
int
thech
read
if
thech
block
throw
IOException
bsBuffShadow
bsBuffShadow
thech
bsLiveShadow
bsBuff
bsBuffShadow
bsLive
bsLiveShadow
n
return
bsBuffShadow
bsLiveShadow
n
n
bsGetBit
boolean
int
bsLiveShadow
bsLive
int
bsBuffShadow
bsBuff
if
bsLiveShadow
block
int
thech
in
read
if
thech
block
throw
IOException
bsBuffShadow
bsBuffShadow
thech
bsLiveShadow
bsBuff
bsBuffShadow
bsLive
bsLiveShadow
return
bsBuffShadow
bsLiveShadow
bsGetUByte
char
return
char
bsR
bsGetInt
int
return
bsR
bsR
bsR
bsR
hbCreateDecodeTables
limit
int
base
int
perm
int
length
char
minLen
int
maxLen
int
alphaSize
int
for
forControl
int
i
minLen
pp
i
maxLen
i
block
for
forControl
int
j
j
alphaSize
j
block
if
length
j
i
block
perm
pp
j
for
forControl
int
i
MAX_CODE_LEN
i
block
base
i
limit
i
for
forControl
int
i
i
alphaSize
i
block
base
length
i
for
forControl
int
i
b
base
i
MAX_CODE_LEN
i
block
b
base
i
base
i
b
for
forControl
int
i
minLen
vec
b
base
i
i
maxLen
i
block
int
nb
base
i
vec
nb
b
b
nb
limit
i
vec
vec
for
forControl
int
i
minLen
i
maxLen
i
block
base
i
limit
i
base
i
recvDecodingTables
Data
dataShadow
data
boolean
inUse
inUse
byte
pos
recvDecodingTables_pos
byte
selector
selector
byte
selectorMtf
selectorMtf
int
inUse16
for
forControl
int
i
i
i
block
if
bsGetBit
block
inUse16
i
for
forControl
int
i
i
block
inUse
i
for
forControl
int
i
i
i
block
if
inUse16
i
block
int
i16
i
for
forControl
int
j
j
j
block
if
bsGetBit
block
inUse
i16
j
makeMaps
int
alphaSize
nInUse
int
nGroups
bsR
int
nSelectors
bsR
for
forControl
int
i
i
nSelectors
i
block
int
j
while
bsGetBit
block
j
selectorMtf
i
byte
j
for
forControl
int
v
nGroups
v
block
pos
v
byte
v
for
forControl
int
i
i
nSelectors
i
block
int
v
selectorMtf
i
byte
tmp
pos
v
while
v
block
pos
v
pos
v
v
pos
tmp
selector
i
tmp
char
len
temp_charArray2d
for
forControl
int
t
t
nGroups
t
block
int
curr
bsR
char
len_t
len
t
for
forControl
int
i
i
alphaSize
i
block
while
bsGetBit
block
curr
bsGetBit
len_t
i
char
curr
createHuffmanDecodingTables
alphaSize
nGroups
createHuffmanDecodingTables
alphaSize
int
nGroups
int
Data
dataShadow
data
char
len
temp_charArray2d
int
minLens
minLens
int
limit
limit
int
base
base
int
perm
perm
for
forControl
int
t
t
nGroups
t
block
int
minLen
int
maxLen
char
len_t
len
t
for
forControl
int
i
alphaSize
i
block
char
lent
len_t
i
if
lent
maxLen
block
maxLen
lent
if
lent
minLen
block
minLen
lent
hbCreateDecodeTables
limit
t
base
t
perm
t
len
t
minLen
maxLen
alphaSize
minLens
t
minLen
getAndMoveToFrontDecode
origPtr
bsR
recvDecodingTables
InputStream
inShadow
in
Data
dataShadow
data
byte
ll8
ll8
int
unzftab
unzftab
byte
selector
selector
byte
seqToUnseq
seqToUnseq
char
yy
getAndMoveToFrontDecode_yy
int
minLens
minLens
int
limit
limit
int
base
base
int
perm
perm
int
limitLast
blockSize100k
for
forControl
int
i
i
block
yy
i
char
i
unzftab
i
int
groupNo
int
groupPos
G_SIZE
int
eob
nInUse
int
nextSym
getAndMoveToFrontDecode0
int
bsBuffShadow
bsBuff
int
bsLiveShadow
bsLive
int
lastShadow
int
zt
selector
groupNo
int
base_zt
base
zt
int
limit_zt
limit
zt
int
perm_zt
perm
zt
int
minLens_zt
minLens
zt
while
nextSym
eob
block
if
nextSym
RUNA
nextSym
RUNB
block
int
s
for
forControl
int
n
n
block
if
nextSym
RUNA
block
s
n
if
nextSym
RUNB
block
s
n
block
break
if
groupPos
block
groupPos
G_SIZE
zt
selector
groupNo
base_zt
base
zt
limit_zt
limit
zt
perm_zt
perm
zt
minLens_zt
minLens
zt
block
groupPos
int
zn
minLens_zt
while
bsLiveShadow
zn
block
int
thech
read
if
thech
block
bsBuffShadow
bsBuffShadow
thech
bsLiveShadow
continue
block
throw
IOException
int
zvec
bsBuffShadow
bsLiveShadow
zn
zn
bsLiveShadow
zn
while
zvec
limit_zt
zn
block
zn
while
bsLiveShadow
block
int
thech
read
if
thech
block
bsBuffShadow
bsBuffShadow
thech
bsLiveShadow
continue
block
throw
IOException
bsLiveShadow
zvec
zvec
bsBuffShadow
bsLiveShadow
nextSym
perm_zt
zvec
base_zt
zn
byte
ch
seqToUnseq
yy
unzftab
ch
s
while
s
block
ll8
lastShadow
ch
if
lastShadow
limitLast
block
throw
IOException
block
if
lastShadow
limitLast
block
throw
IOException
char
tmp
yy
nextSym
unzftab
seqToUnseq
tmp
ll8
lastShadow
seqToUnseq
tmp
if
nextSym
block
for
forControl
int
j
nextSym
j
block
yy
j
yy
j
block
arraycopy
yy
yy
nextSym
yy
tmp
if
groupPos
block
groupPos
G_SIZE
zt
selector
groupNo
base_zt
base
zt
limit_zt
limit
zt
perm_zt
perm
zt
minLens_zt
minLens
zt
block
groupPos
int
zn
minLens_zt
while
bsLiveShadow
zn
block
int
thech
read
if
thech
block
bsBuffShadow
bsBuffShadow
thech
bsLiveShadow
continue
block
throw
IOException
int
zvec
bsBuffShadow
bsLiveShadow
zn
zn
bsLiveShadow
zn
while
zvec
limit_zt
zn
block
zn
while
bsLiveShadow
block
int
thech
read
if
thech
block
bsBuffShadow
bsBuffShadow
thech
bsLiveShadow
continue
block
throw
IOException
bsLiveShadow
zvec
zvec
bsBuffShadow
bsLiveShadow
nextSym
perm_zt
zvec
base_zt
zn
last
lastShadow
bsLive
bsLiveShadow
bsBuff
bsBuffShadow
getAndMoveToFrontDecode0
int
groupNo
int
InputStream
inShadow
in
Data
dataShadow
data
int
zt
selector
groupNo
int
limit_zt
limit
zt
int
zn
minLens
zt
int
zvec
bsR
zn
int
bsLiveShadow
bsLive
int
bsBuffShadow
bsBuff
while
zvec
limit_zt
zn
block
zn
while
bsLiveShadow
block
int
thech
read
if
thech
block
bsBuffShadow
bsBuffShadow
thech
bsLiveShadow
continue
block
throw
IOException
bsLiveShadow
zvec
zvec
bsBuffShadow
bsLiveShadow
bsLive
bsLiveShadow
bsBuff
bsBuffShadow
return
perm
zt
zvec
base
zt
zn
setupBlock
if
data
block
return
int
cftab
data
cftab
int
tt
data
initTT
last
byte
ll8
data
ll8
cftab
arraycopy
data
unzftab
cftab
for
forControl
int
i
c
cftab
i
i
block
c
cftab
i
cftab
i
c
for
forControl
int
i
lastShadow
last
i
lastShadow
i
block
tt
cftab
ll8
i
i
if
origPtr
origPtr
length
block
throw
IOException
su_tPos
tt
origPtr
su_count
su_i2
su_ch2
if
blockRandomised
block
su_rNToGo
su_rTPos
setupRandPartA
block
setupNoRandPartA
setupRandPartA
if
su_i2
last
block
su_chPrev
su_ch2
int
su_ch2Shadow
data
ll8
su_tPos
su_tPos
data
tt
su_tPos
if
su_rNToGo
block
su_rNToGo
rNums
su_rTPos
if
su_rTPos
block
su_rTPos
block
su_rNToGo
su_ch2
su_ch2Shadow
su_rNToGo
su_i2
currentChar
su_ch2Shadow
currentState
RAND_PART_B_STATE
crc
updateCRC
su_ch2Shadow
block
endBlock
initBlock
setupBlock
setupNoRandPartA
if
su_i2
last
block
su_chPrev
su_ch2
int
su_ch2Shadow
data
ll8
su_tPos
su_ch2
su_ch2Shadow
su_tPos
data
tt
su_tPos
su_i2
currentChar
su_ch2Shadow
currentState
NO_RAND_PART_B_STATE
crc
updateCRC
su_ch2Shadow
block
currentState
NO_RAND_PART_A_STATE
endBlock
initBlock
setupBlock
setupRandPartB
if
su_ch2
su_chPrev
block
currentState
RAND_PART_A_STATE
su_count
setupRandPartA
if
su_count
block
su_z
char
data
ll8
su_tPos
su_tPos
data
tt
su_tPos
if
su_rNToGo
block
su_rNToGo
rNums
su_rTPos
if
su_rTPos
block
su_rTPos
block
su_rNToGo
su_j2
currentState
RAND_PART_C_STATE
if
su_rNToGo
block
su_z
setupRandPartC
block
currentState
RAND_PART_A_STATE
setupRandPartA
setupRandPartC
if
su_j2
su_z
block
currentChar
su_ch2
crc
updateCRC
su_ch2
su_j2
block
currentState
RAND_PART_A_STATE
su_i2
su_count
setupRandPartA
setupNoRandPartB
if
su_ch2
su_chPrev
block
su_count
setupNoRandPartA
if
su_count
block
su_z
char
data
ll8
su_tPos
su_tPos
data
tt
su_tPos
su_j2
setupNoRandPartC
block
setupNoRandPartA
setupNoRandPartC
if
su_j2
su_z
block
int
su_ch2Shadow
su_ch2
currentChar
su_ch2Shadow
crc
updateCRC
su_ch2Shadow
su_j2
currentState
NO_RAND_PART_C_STATE
block
su_i2
su_count
setupNoRandPartA
Data
boolean
inUse
boolean
byte
seqToUnseq
byte
byte
selector
byte
MAX_SELECTORS
byte
selectorMtf
byte
MAX_SELECTORS
int
unzftab
int
int
limit
int
N_GROUPS
MAX_ALPHA_SIZE
int
base
int
N_GROUPS
MAX_ALPHA_SIZE
int
perm
int
N_GROUPS
MAX_ALPHA_SIZE
int
minLens
int
N_GROUPS
int
cftab
int
char
getAndMoveToFrontDecode_yy
char
char
temp_charArray2d
char
N_GROUPS
MAX_ALPHA_SIZE
byte
recvDecodingTables_pos
byte
N_GROUPS
int
tt
byte
ll8
Data
blockSize100k
int
ll8
byte
blockSize100k
baseBlockSize
initTT
int
length
int
int
ttShadow
tt
if
ttShadow
length
length
block
tt
ttShadow
int
length
return
ttShadow
Object
InputStream
BZip2Constants
