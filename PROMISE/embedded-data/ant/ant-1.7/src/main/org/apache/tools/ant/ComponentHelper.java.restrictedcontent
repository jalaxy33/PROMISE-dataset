ComponentHelper
AntTypeTable
antTypeTable
Hashtable
taskClassDefinitions
Hashtable
boolean
rebuildTaskClassDefinitions
Hashtable
typeClassDefinitions
Hashtable
boolean
rebuildTypeClassDefinitions
Set
checkedNamespaces
HashSet
Stack
antLibStack
Stack
String
antLibCurrentUri
ComponentHelper
next
Project
project
String
ERROR_NO_TASK_LIST_LOAD
String
ERROR_NO_TYPE_LIST_LOAD
String
COMPONENT_HELPER_REFERENCE
String
BUILD_SYSCLASSPATH_ONLY
String
ANT_PROPERTY_TASK
Properties
defaultDefinitions
Properties
getComponentHelper
ComponentHelper
project
Project
if
project
block
return
ComponentHelper
ph
ComponentHelper
getReference
COMPONENT_HELPER_REFERENCE
if
ph
block
return
ph
ph
ComponentHelper
setProject
project
addReference
COMPONENT_HELPER_REFERENCE
ph
return
ph
ComponentHelper
setNext
next
ComponentHelper
next
next
getNext
ComponentHelper
return
next
setProject
project
Project
project
project
antTypeTable
AntTypeTable
project
initSubProject
helper
ComponentHelper
AntTypeTable
typeTable
antTypeTable
for
forControl
Iterator
i
values
iterator
hasNext
block
AntTypeDefinition
def
AntTypeDefinition
next
put
getName
def
for
forControl
Iterator
i
iterator
hasNext
block
add
next
createComponent
Object
ue
UnknownElement
ns
String
componentType
String
Object
component
createComponent
componentType
if
component
Task
block
Task
task
Task
component
setLocation
getLocation
setTaskType
componentType
setTaskName
getTaskName
setOwningTarget
getOwningTarget
init
return
component
createComponent
Object
componentName
String
AntTypeDefinition
def
getDefinition
componentName
return
def
create
project
getComponentClass
Class
componentName
String
AntTypeDefinition
def
getDefinition
componentName
return
def
getExposedClass
project
getDefinition
AntTypeDefinition
componentName
String
checkNamespace
componentName
return
getDefinition
componentName
initDefaultDefinitions
initTasks
initTypes
addTaskDefinition
taskName
String
taskClass
Class
checkTaskClass
taskClass
AntTypeDefinition
def
AntTypeDefinition
setName
taskName
setClassLoader
getClassLoader
setClass
taskClass
setAdapterClass
TaskAdapter
setClassName
getName
setAdaptToClass
Task
updateDataTypeDefinition
def
checkTaskClass
taskClass
Class
if
isPublic
getModifiers
block
String
message
taskClass
log
message
MSG_ERR
throw
BuildException
message
if
isAbstract
getModifiers
block
String
message
taskClass
log
message
MSG_ERR
throw
BuildException
message
try
getConstructor
Class
catchClause
e
String
message
taskClass
log
message
MSG_ERR
throw
BuildException
message
if
isAssignableFrom
taskClass
Task
block
checkTaskClass
taskClass
project
getTaskDefinitions
Hashtable
synchronized
taskClassDefinitions
synchronized
antTypeTable
if
rebuildTaskClassDefinitions
block
clear
for
forControl
Iterator
i
keySet
iterator
hasNext
block
String
name
String
next
Class
clazz
getExposedClass
name
if
clazz
block
continue
if
isAssignableFrom
clazz
Task
block
put
name
getTypeClass
name
rebuildTaskClassDefinitions
return
taskClassDefinitions
getDataTypeDefinitions
Hashtable
synchronized
typeClassDefinitions
synchronized
antTypeTable
if
rebuildTypeClassDefinitions
block
clear
for
forControl
Iterator
i
keySet
iterator
hasNext
block
String
name
String
next
Class
clazz
getExposedClass
name
if
clazz
block
continue
if
Task
block
put
name
getTypeClass
name
rebuildTypeClassDefinitions
return
typeClassDefinitions
addDataTypeDefinition
typeName
String
typeClass
Class
AntTypeDefinition
def
AntTypeDefinition
setName
typeName
setClass
typeClass
updateDataTypeDefinition
def
log
typeName
getName
MSG_DEBUG
addDataTypeDefinition
def
AntTypeDefinition
updateDataTypeDefinition
def
getAntTypeTable
Hashtable
return
antTypeTable
createTask
Task
taskType
String
Task
task
createNewTask
taskType
if
task
equals
ANT_PROPERTY_TASK
block
addTaskDefinition
ANT_PROPERTY_TASK
Property
task
createNewTask
taskType
return
task
createNewTask
Task
taskType
String
Class
c
getComponentClass
taskType
if
c
Task
block
return
Object
obj
createComponent
taskType
if
obj
block
return
if
obj
Task
block
throw
BuildException
taskType
getClass
getName
Task
task
Task
obj
setTaskType
taskType
setTaskName
taskType
log
taskType
MSG_DEBUG
return
task
createDataType
Object
typeName
String
return
createComponent
typeName
getElementName
String
element
Object
return
getElementName
element
getElementName
String
o
Object
brief
boolean
Class
elementClass
getClass
String
elementClassname
getName
for
forControl
Iterator
i
values
iterator
hasNext
block
AntTypeDefinition
def
AntTypeDefinition
next
if
equals
getClassName
elementClass
getExposedClass
project
block
String
name
getName
return
brief
name
name
return
getUnmappedElementName
getClass
brief
getElementName
String
p
Project
o
Object
brief
boolean
if
p
block
p
getProject
o
return
p
getUnmappedElementName
getClass
brief
getComponentHelper
getElementName
o
brief
p
getUnmappedElementName
String
c
Class
brief
boolean
if
brief
block
String
name
getName
return
substring
lastIndexOf
return
toString
getProject
Project
o
Object
if
o
ProjectComponent
block
return
ProjectComponent
o
try
Method
m
getClass
getMethod
Class
if
Project
getReturnType
block
return
Project
invoke
o
Object
catchClause
e
return
validDefinition
boolean
def
AntTypeDefinition
return
getTypeClass
project
getExposedClass
project
sameDefinition
boolean
def
AntTypeDefinition
old
AntTypeDefinition
boolean
defValid
validDefinition
def
boolean
sameValidity
defValid
validDefinition
old
return
sameValidity
defValid
sameDefinition
old
project
updateDataTypeDefinition
def
AntTypeDefinition
String
name
getName
synchronized
antTypeTable
rebuildTaskClassDefinitions
rebuildTypeClassDefinitions
AntTypeDefinition
old
getDefinition
name
if
old
block
if
sameDefinition
def
old
block
return
Class
oldClass
getExposedClass
name
boolean
isTask
oldClass
isAssignableFrom
oldClass
Task
log
isTask
name
similarDefinition
old
project
MSG_VERBOSE
MSG_WARN
log
name
getClassName
MSG_DEBUG
put
name
def
enterAntLib
uri
String
antLibCurrentUri
uri
push
uri
getCurrentAntlibUri
String
return
antLibCurrentUri
exitAntLib
pop
antLibCurrentUri
size
String
peek
initTasks
ClassLoader
classLoader
getClassLoader
Properties
props
getDefaultDefinitions
Enumeration
e
propertyNames
while
hasMoreElements
block
String
name
String
nextElement
String
className
getProperty
name
AntTypeDefinition
def
AntTypeDefinition
setName
name
setClassName
className
setClassLoader
classLoader
setAdaptToClass
Task
setAdapterClass
TaskAdapter
put
name
def
getClassLoader
ClassLoader
classLoader
ClassLoader
String
buildSysclasspath
getProperty
BUILD_SYSCLASSPATH
if
getCoreLoader
equals
buildSysclasspath
block
classLoader
getCoreLoader
return
classLoader
getDefaultDefinitions
Properties
type
boolean
int
idx
type
if
defaultDefinitions
idx
block
String
resource
type
TYPEDEFS_PROPERTIES_RESOURCE
TASKDEF_PROPERTIES_RESOURCE
String
errorString
type
ERROR_NO_TYPE_LIST_LOAD
ERROR_NO_TASK_LIST_LOAD
InputStream
in
try
in
getResourceAsStream
resource
ComponentHelper
if
in
block
throw
BuildException
errorString
Properties
p
Properties
load
in
defaultDefinitions
idx
p
catchClause
e
throw
BuildException
errorString
e
close
in
return
defaultDefinitions
idx
initTypes
ClassLoader
classLoader
getClassLoader
Properties
props
getDefaultDefinitions
Enumeration
e
propertyNames
while
hasMoreElements
block
String
name
String
nextElement
String
className
getProperty
name
AntTypeDefinition
def
AntTypeDefinition
setName
name
setClassName
className
setClassLoader
classLoader
put
name
def
checkNamespace
componentName
String
String
uri
extractUriFromComponentName
componentName
if
equals
uri
block
uri
ANT_CORE_URI
if
startsWith
ANTLIB_URI
block
return
if
contains
uri
block
return
add
uri
Typedef
definer
Typedef
setProject
project
init
setURI
uri
setTaskName
uri
setResource
makeResourceFromURI
uri
setOnError
Typedef
OnError
POLICY_IGNORE
execute
diagnoseCreationFailure
String
componentName
String
type
String
StringWriter
errorText
StringWriter
PrintWriter
out
PrintWriter
errorText
println
type
componentName
boolean
lowlevel
boolean
jars
boolean
definitions
boolean
antTask
String
home
getProperty
USER_HOMEDIR
File
libDir
File
home
USER_LIBDIR
String
antHomeLib
boolean
probablyIDE
String
anthome
getProperty
ANT_HOME
if
anthome
block
File
antHomeLibDir
File
anthome
antHomeLib
getAbsolutePath
block
probablyIDE
antHomeLib
separatorChar
StringBuffer
dirListingText
StringBuffer
String
tab
append
tab
append
antHomeLib
append
if
probablyIDE
block
append
tab
append
block
append
tab
append
libDir
append
append
tab
append
String
dirListing
toString
AntTypeDefinition
def
getDefinition
componentName
if
def
block
boolean
isAntlib
indexOf
ANTLIB_PREFIX
println
println
println
println
if
isAntlib
block
println
println
println
println
dirListing
definitions
block
String
classname
getClassName
antTask
startsWith
boolean
optional
startsWith
optional
startsWith
Class
clazz
try
clazz
innerGetTypeClass
catchClause
e
println
classname
jars
if
optional
block
println
println
println
dirListing
block
println
println
println
dirListing
definitions
catchClause
ncdfe
jars
println
getMessage
if
optional
block
println
println
println
block
println
println
println
dirListing
if
clazz
block
try
innerCreateAndSet
clazz
project
println
catchClause
e
lowlevel
println
classname
catchClause
e
lowlevel
println
classname
catchClause
e
lowlevel
println
classname
catchClause
ex
lowlevel
Throwable
t
getTargetException
println
println
toString
printStackTrace
out
catchClause
ncdfe
jars
println
classname
println
getMessage
println
println
dirListing
println
println
if
definitions
block
println
if
jars
block
println
if
lowlevel
block
println
if
antTask
block
println
block
println
println
type
println
block
println
println
flush
close
return
toString
AntTypeTable
Project
project
AntTypeTable
project
Project
project
project
getDefinition
AntTypeDefinition
key
String
return
AntTypeDefinition
get
key
get
Object
key
Object
return
getTypeClass
String
key
create
Object
name
String
AntTypeDefinition
def
getDefinition
name
return
def
create
project
getTypeClass
Class
name
String
AntTypeDefinition
def
getDefinition
name
return
def
getTypeClass
project
getExposedClass
Class
name
String
AntTypeDefinition
def
getDefinition
name
return
def
getExposedClass
project
contains
boolean
clazz
Object
boolean
found
if
clazz
Class
block
for
forControl
Iterator
i
values
iterator
hasNext
found
block
found
AntTypeDefinition
next
clazz
return
found
containsValue
boolean
value
Object
return
contains
value
Hashtable
