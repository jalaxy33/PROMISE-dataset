TarInputStream
boolean
debug
boolean
hasHitEOF
long
entrySize
long
entryOffset
byte
readBuf
TarBuffer
buffer
TarEntry
currEntry
byte
oneBuf
TarInputStream
is
InputStream
is
DEFAULT_BLKSIZE
DEFAULT_RCDSIZE
TarInputStream
is
InputStream
blockSize
int
is
blockSize
DEFAULT_RCDSIZE
TarInputStream
is
InputStream
blockSize
int
recordSize
int
is
buffer
TarBuffer
is
blockSize
recordSize
readBuf
oneBuf
byte
debug
hasHitEOF
setDebug
debug
boolean
debug
debug
buffer
setDebug
debug
close
buffer
close
getRecordSize
int
return
buffer
getRecordSize
available
int
if
entrySize
entryOffset
MAX_VALUE
block
return
MAX_VALUE
return
int
entrySize
entryOffset
skip
long
numToSkip
long
byte
skipBuf
byte
long
skip
numToSkip
while
skip
block
int
realSkip
int
skip
length
length
skip
int
numRead
read
skipBuf
realSkip
if
numRead
block
break
skip
numRead
return
numToSkip
skip
markSupported
boolean
return
mark
markLimit
int
reset
getNextEntry
TarEntry
if
hasHitEOF
block
return
if
currEntry
block
long
numToSkip
entrySize
entryOffset
if
debug
block
println
currEntry
getName
entrySize
entryOffset
numToSkip
if
numToSkip
block
skip
numToSkip
readBuf
byte
headerBuf
buffer
readRecord
if
headerBuf
block
if
debug
block
println
hasHitEOF
if
buffer
isEOFRecord
headerBuf
block
if
debug
block
println
hasHitEOF
if
hasHitEOF
block
currEntry
block
currEntry
TarEntry
headerBuf
if
debug
block
println
currEntry
getName
currEntry
getSize
entryOffset
entrySize
currEntry
getSize
if
currEntry
currEntry
isGNULongNameEntry
block
StringBuffer
longName
StringBuffer
byte
buf
byte
int
length
while
length
read
buf
block
append
String
buf
length
getNextEntry
if
currEntry
block
return
if
length
charAt
length
block
deleteCharAt
length
currEntry
setName
toString
return
currEntry
read
int
int
num
read
oneBuf
return
num
int
oneBuf
read
int
buf
byte
offset
int
numToRead
int
int
totalRead
if
entryOffset
entrySize
block
return
if
numToRead
entryOffset
entrySize
block
numToRead
int
entrySize
entryOffset
if
readBuf
block
int
sz
numToRead
readBuf
length
readBuf
length
numToRead
arraycopy
readBuf
buf
offset
sz
if
sz
readBuf
length
block
readBuf
block
int
newLen
readBuf
length
sz
byte
newBuf
byte
newLen
arraycopy
readBuf
sz
newBuf
newLen
readBuf
newBuf
totalRead
sz
numToRead
sz
offset
sz
while
numToRead
block
byte
rec
buffer
readRecord
if
rec
block
throw
IOException
numToRead
int
sz
numToRead
int
recLen
length
if
recLen
sz
block
arraycopy
rec
buf
offset
sz
readBuf
byte
recLen
sz
arraycopy
rec
sz
readBuf
recLen
sz
block
sz
recLen
arraycopy
rec
buf
offset
recLen
totalRead
sz
numToRead
sz
offset
sz
entryOffset
totalRead
return
totalRead
copyEntryContents
out
OutputStream
byte
buf
byte
while
block
int
numRead
read
buf
length
if
numRead
block
break
write
buf
numRead
FilterInputStream
