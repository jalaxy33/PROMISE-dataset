XMLCatalog
FileUtils
FILE_UTILS
getFileUtils
Vector
elements
Vector
Path
classpath
Path
catalogPath
String
APACHE_RESOLVER
String
CATALOG_RESOLVER
XMLCatalog
setChecked
getElements
Vector
return
getRef
elements
getClasspath
Path
return
getRef
classpath
createClasspath
Path
if
isReference
block
throw
noChildrenAllowed
if
classpath
block
classpath
Path
getProject
setChecked
return
classpath
createPath
setClasspath
classpath
Path
if
isReference
block
throw
tooManyAttributes
if
classpath
block
classpath
classpath
block
classpath
append
classpath
setChecked
setClasspathRef
r
Reference
if
isReference
block
throw
tooManyAttributes
createClasspath
setRefid
r
setChecked
createCatalogPath
Path
if
isReference
block
throw
noChildrenAllowed
if
catalogPath
block
catalogPath
Path
getProject
setChecked
return
catalogPath
createPath
setCatalogPathRef
r
Reference
if
isReference
block
throw
tooManyAttributes
createCatalogPath
setRefid
r
setChecked
getCatalogPath
Path
return
getRef
catalogPath
addDTD
dtd
ResourceLocation
if
isReference
block
throw
noChildrenAllowed
getElements
addElement
dtd
setChecked
addEntity
entity
ResourceLocation
addDTD
entity
addConfiguredXMLCatalog
catalog
XMLCatalog
if
isReference
block
throw
noChildrenAllowed
Vector
newElements
getElements
Vector
ourElements
getElements
Enumeration
e
elements
while
hasMoreElements
block
addElement
nextElement
Path
nestedClasspath
getClasspath
createClasspath
append
nestedClasspath
Path
nestedCatalogPath
getCatalogPath
createCatalogPath
append
nestedCatalogPath
setChecked
setRefid
r
Reference
if
isEmpty
block
throw
tooManyAttributes
setRefid
r
resolveEntity
InputSource
publicId
String
systemId
String
if
isReference
block
return
getRef
resolveEntity
publicId
systemId
dieOnCircularReference
log
publicId
systemId
MSG_DEBUG
InputSource
inputSource
getCatalogResolver
resolveEntity
publicId
systemId
if
inputSource
block
log
systemId
MSG_DEBUG
return
inputSource
resolve
Source
href
String
base
String
if
isReference
block
return
getRef
resolve
href
base
dieOnCircularReference
SAXSource
source
String
uri
removeFragment
href
log
uri
base
MSG_DEBUG
source
SAXSource
getCatalogResolver
resolve
uri
base
if
source
block
log
href
MSG_DEBUG
source
SAXSource
URL
baseURL
try
if
base
block
baseURL
getFileURL
getProject
getBaseDir
block
baseURL
URL
base
URL
url
length
baseURL
URL
baseURL
uri
setInputSource
InputSource
toString
catchClause
ex
setInputSource
InputSource
uri
setEntityResolver
source
return
source
getRef
XMLCatalog
if
isReference
block
return
return
XMLCatalog
getCheckedRef
XMLCatalog
CatalogResolver
catalogResolver
getCatalogResolver
CatalogResolver
if
catalogResolver
block
AntClassLoader
loader
loader
getProject
createClassLoader
systemClasspath
try
Class
clazz
forName
APACHE_RESOLVER
loader
ClassLoader
apacheResolverLoader
getClassLoader
Class
baseResolverClass
forName
CATALOG_RESOLVER
apacheResolverLoader
ClassLoader
baseResolverLoader
getClassLoader
clazz
forName
APACHE_RESOLVER
baseResolverLoader
Object
obj
newInstance
catalogResolver
ExternalResolver
clazz
obj
catchClause
ex
catalogResolver
InternalResolver
if
getCatalogPath
getCatalogPath
list
length
block
log
MSG_WARN
log
ex
MSG_DEBUG
return
catalogResolver
setEntityResolver
source
SAXSource
XMLReader
reader
getXMLReader
if
reader
block
SAXParserFactory
spFactory
newInstance
setNamespaceAware
try
reader
newSAXParser
getXMLReader
catchClause
ex
throw
TransformerException
ex
catchClause
ex
throw
TransformerException
ex
setEntityResolver
setXMLReader
reader
findMatchingEntry
ResourceLocation
publicId
String
Enumeration
e
getElements
elements
ResourceLocation
element
while
hasMoreElements
block
Object
o
nextElement
if
o
ResourceLocation
block
element
ResourceLocation
o
if
getPublicId
equals
publicId
block
return
element
return
removeFragment
String
uri
String
String
result
uri
int
hashPos
indexOf
if
hashPos
block
result
substring
hashPos
return
result
filesystemLookup
InputSource
matchingEntry
ResourceLocation
String
uri
getLocation
uri
replace
separatorChar
URL
baseURL
if
getBase
block
baseURL
getBase
block
try
baseURL
getFileURL
getProject
getBaseDir
catchClause
ex
throw
BuildException
InputSource
source
URL
url
try
url
URL
baseURL
uri
catchClause
ex
File
testFile
File
uri
if
exists
canRead
block
log
uri
MSG_DEBUG
try
url
getFileURL
testFile
catchClause
ex1
throw
BuildException
getAbsolutePath
block
log
uri
MSG_DEBUG
if
url
getProtocol
equals
block
String
fileName
fromURI
toString
if
fileName
block
log
fileName
MSG_DEBUG
File
resFile
File
fileName
if
exists
canRead
block
try
source
InputSource
FileInputStream
resFile
String
sysid
getSystemId
resFile
setSystemId
sysid
log
sysid
MSG_DEBUG
catchClause
ex
return
source
classpathLookup
InputSource
matchingEntry
ResourceLocation
InputSource
source
AntClassLoader
loader
Path
cp
classpath
if
cp
block
cp
concatSystemClasspath
block
cp
concatSystemClasspath
Path
getProject
loader
getProject
createClassLoader
cp
InputStream
is
getResourceAsStream
getLocation
if
is
block
source
InputSource
is
URL
entryURL
getResource
getLocation
String
sysid
toExternalForm
setSystemId
sysid
log
sysid
MSG_DEBUG
return
source
urlLookup
InputSource
matchingEntry
ResourceLocation
String
uri
getLocation
URL
baseURL
if
getBase
block
baseURL
getBase
block
try
baseURL
getFileURL
getProject
getBaseDir
catchClause
ex
throw
BuildException
InputSource
source
URL
url
try
url
URL
baseURL
uri
catchClause
ex
if
url
block
try
InputStream
is
openStream
if
is
block
source
InputSource
is
String
sysid
toExternalForm
setSystemId
sysid
log
sysid
MSG_DEBUG
catchClause
ex
return
source
CatalogResolver
resolveEntity
InputSource
publicId
String
systemId
String
resolve
Source
href
String
base
String
URIResolver
EntityResolver
InternalResolver
InternalResolver
log
MSG_VERBOSE
resolveEntity
InputSource
publicId
String
systemId
String
InputSource
result
ResourceLocation
matchingEntry
findMatchingEntry
publicId
if
matchingEntry
block
log
getPublicId
getLocation
MSG_DEBUG
result
filesystemLookup
matchingEntry
if
result
block
result
classpathLookup
matchingEntry
if
result
block
result
urlLookup
matchingEntry
return
result
resolve
Source
href
String
base
String
SAXSource
result
InputSource
source
ResourceLocation
matchingEntry
findMatchingEntry
href
if
matchingEntry
block
log
getPublicId
getLocation
MSG_DEBUG
ResourceLocation
entryCopy
matchingEntry
if
base
block
try
URL
baseURL
URL
base
entryCopy
ResourceLocation
setBase
baseURL
catchClause
ex
setPublicId
getPublicId
setLocation
getLocation
source
filesystemLookup
entryCopy
if
source
block
source
classpathLookup
entryCopy
if
source
block
source
urlLookup
entryCopy
if
source
block
result
SAXSource
source
return
result
CatalogResolver
ExternalResolver
Method
setXMLCatalog
Method
parseCatalog
Method
resolveEntity
Method
resolve
Object
resolverImpl
boolean
externalCatalogsProcessed
ExternalResolver
resolverImplClass
Class
resolverImpl
Object
resolverImpl
resolverImpl
try
setXMLCatalog
getMethod
Class
XMLCatalog
parseCatalog
getMethod
Class
String
resolveEntity
getMethod
Class
String
String
resolve
getMethod
Class
String
String
catchClause
ex
throw
BuildException
ex
log
MSG_VERBOSE
resolveEntity
InputSource
publicId
String
systemId
String
InputSource
result
processExternalCatalogs
ResourceLocation
matchingEntry
findMatchingEntry
publicId
if
matchingEntry
block
log
getPublicId
getLocation
MSG_DEBUG
result
filesystemLookup
matchingEntry
if
result
block
result
classpathLookup
matchingEntry
if
result
block
try
result
InputSource
invoke
resolverImpl
Object
publicId
systemId
catchClause
ex
throw
BuildException
ex
block
try
result
InputSource
invoke
resolverImpl
Object
publicId
systemId
catchClause
ex
throw
BuildException
ex
return
result
resolve
Source
href
String
base
String
SAXSource
result
InputSource
source
processExternalCatalogs
ResourceLocation
matchingEntry
findMatchingEntry
href
if
matchingEntry
block
log
getPublicId
getLocation
MSG_DEBUG
ResourceLocation
entryCopy
matchingEntry
if
base
block
try
URL
baseURL
URL
base
entryCopy
ResourceLocation
setBase
baseURL
catchClause
ex
setPublicId
getPublicId
setLocation
getLocation
source
filesystemLookup
entryCopy
if
source
block
source
classpathLookup
entryCopy
if
source
block
result
SAXSource
source
block
try
result
SAXSource
invoke
resolverImpl
Object
href
base
catchClause
ex
throw
BuildException
ex
block
try
result
SAXSource
invoke
resolverImpl
Object
href
base
catchClause
ex
throw
BuildException
ex
return
result
processExternalCatalogs
if
externalCatalogsProcessed
block
try
invoke
resolverImpl
Object
catchClause
ex
throw
BuildException
ex
Path
catPath
getCatalogPath
if
catPath
block
log
getCatalogPath
MSG_DEBUG
String
catPathList
getCatalogPath
list
for
forControl
int
i
i
length
i
block
File
catFile
File
catPathList
i
log
catFile
MSG_DEBUG
try
invoke
resolverImpl
Object
getPath
catchClause
ex
throw
BuildException
ex
externalCatalogsProcessed
CatalogResolver
DataType
Cloneable
EntityResolver
URIResolver
