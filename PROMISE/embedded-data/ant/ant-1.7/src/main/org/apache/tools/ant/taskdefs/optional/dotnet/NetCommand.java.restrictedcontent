NetCommand
FileUtils
FILE_UTILS
getFileUtils
Task
owner
Execute
executable
Commandline
commandLine
String
title
String
program
boolean
traceCommandLine
boolean
failOnError
File
directory
boolean
useResponseFile
File
temporaryCommandFile
int
automaticResponseFileThreshold
NetCommand
owner
Task
title
String
program
String
owner
owner
title
title
program
program
commandLine
Commandline
setExecutable
program
setTraceCommandLine
b
boolean
traceCommandLine
b
setFailOnError
b
boolean
failOnError
b
getFailFailOnError
boolean
return
failOnError
setDirectory
directory
File
directory
directory
logVerbose
msg
String
getProject
log
msg
MSG_VERBOSE
logError
msg
String
getProject
log
msg
MSG_ERR
addArgument
argument
String
if
argument
length
block
createArgument
setValue
argument
addArguments
arguments
String
if
arguments
length
block
for
forControl
int
i
i
length
i
block
addArgument
arguments
i
addArgument
argument1
String
argument2
String
if
argument2
length
block
createArgument
setValue
argument1
argument2
isUseResponseFile
boolean
return
useResponseFile
setUseResponseFile
useResponseFile
boolean
useResponseFile
useResponseFile
getAutomaticResponseFileThreshold
int
return
automaticResponseFileThreshold
setAutomaticResponseFileThreshold
automaticResponseFileThreshold
int
automaticResponseFileThreshold
automaticResponseFileThreshold
prepareExecutor
if
owner
block
throw
RuntimeException
if
getProject
block
throw
RuntimeException
File
dir
getProject
getBaseDir
if
directory
block
dir
directory
ExecuteStreamHandler
handler
LogStreamHandler
owner
MSG_INFO
MSG_WARN
executable
Execute
handler
setAntRun
getProject
setWorkingDirectory
dir
runCommand
prepareExecutor
int
err
try
if
traceCommandLine
block
log
getWorkingDirectory
log
describeCommand
block
logVerbose
getWorkingDirectory
logVerbose
describeCommand
setExecutableCommandLine
err
execute
if
isFailure
err
block
if
failOnError
block
throw
BuildException
title
err
getLocation
block
log
title
err
MSG_ERR
catchClause
e
throw
BuildException
title
e
e
getLocation
if
temporaryCommandFile
block
delete
setExecutableCommandLine
String
commands
getCommandline
if
automaticResponseFileThreshold
length
automaticResponseFileThreshold
block
useResponseFile
if
useResponseFile
length
block
setCommandline
commands
block
FileOutputStream
fos
temporaryCommandFile
createTempFile
log
temporaryCommandFile
MSG_VERBOSE
try
fos
FileOutputStream
temporaryCommandFile
PrintWriter
out
PrintWriter
BufferedOutputStream
fos
for
forControl
int
i
i
length
i
block
println
commands
i
flush
close
catchClause
ex
throw
BuildException
temporaryCommandFile
ex
String
newCommandLine
String
newCommandLine
commands
newCommandLine
getAbsolutePath
logVerbose
describeCommand
newCommandLine
setCommandline
newCommandLine
scanOneFileset
int
scanner
DirectoryScanner
filesToBuild
Hashtable
outputTimestamp
long
int
filesOutOfDate
String
dependencies
getIncludedFiles
File
base
getBasedir
for
forControl
int
i
i
length
i
block
File
targetFile
File
base
dependencies
i
if
get
targetFile
block
put
targetFile
targetFile
if
lastModified
outputTimestamp
block
filesOutOfDate
log
toString
MSG_VERBOSE
block
log
toString
MSG_VERBOSE
return
filesOutOfDate
