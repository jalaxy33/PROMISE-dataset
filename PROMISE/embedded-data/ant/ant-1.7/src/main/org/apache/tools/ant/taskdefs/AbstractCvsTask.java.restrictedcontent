AbstractCvsTask
int
DEFAULT_COMPRESSION_LEVEL
int
MAXIMUM_COMRESSION_LEVEL
Commandline
cmd
Commandline
Vector
vecCommandlines
Vector
String
cvsRoot
String
cvsRsh
String
cvsPackage
String
tag
String
DEFAULT_COMMAND
String
command
boolean
quiet
boolean
reallyquiet
int
compression
boolean
noexec
int
port
File
passFile
File
dest
boolean
append
File
output
File
error
boolean
failOnError
ExecuteStreamHandler
executeStreamHandler
OutputStream
outputStream
OutputStream
errorStream
AbstractCvsTask
setExecuteStreamHandler
handler
ExecuteStreamHandler
executeStreamHandler
handler
getExecuteStreamHandler
ExecuteStreamHandler
if
executeStreamHandler
block
setExecuteStreamHandler
PumpStreamHandler
getOutputStream
getErrorStream
return
executeStreamHandler
setOutputStream
outputStream
OutputStream
outputStream
outputStream
getOutputStream
OutputStream
if
outputStream
block
if
output
block
try
setOutputStream
PrintStream
BufferedOutputStream
FileOutputStream
getPath
append
catchClause
e
throw
BuildException
e
getLocation
block
setOutputStream
LogOutputStream
MSG_INFO
return
outputStream
setErrorStream
errorStream
OutputStream
errorStream
errorStream
getErrorStream
OutputStream
if
errorStream
block
if
error
block
try
setErrorStream
PrintStream
BufferedOutputStream
FileOutputStream
getPath
append
catchClause
e
throw
BuildException
e
getLocation
block
setErrorStream
LogOutputStream
MSG_WARN
return
errorStream
runCommand
toExecute
Commandline
Environment
env
Environment
if
port
block
Environment
Variable
var
Environment
Variable
setKey
setValue
valueOf
port
addVariable
var
if
passFile
block
File
defaultPassFile
File
getProperty
getProperty
separatorChar
if
exists
block
setPassfile
defaultPassFile
if
passFile
block
if
isFile
canRead
block
Environment
Variable
var
Environment
Variable
setKey
setValue
valueOf
passFile
addVariable
var
log
valueOf
passFile
MSG_VERBOSE
if
canRead
block
log
valueOf
passFile
MSG_WARN
block
log
valueOf
passFile
MSG_WARN
if
cvsRsh
block
Environment
Variable
var
Environment
Variable
setKey
setValue
valueOf
cvsRsh
addVariable
var
Execute
exe
Execute
getExecuteStreamHandler
setAntRun
getProject
if
dest
block
dest
getProject
getBaseDir
if
exists
block
mkdirs
setWorkingDirectory
dest
setCommandline
getCommandline
setEnvironment
getVariables
try
String
actualCommandLine
executeToString
exe
log
actualCommandLine
MSG_VERBOSE
int
retCode
execute
log
retCode
MSG_DEBUG
if
failOnError
isFailure
retCode
block
throw
BuildException
retCode
LINE_SEP
actualCommandLine
getLocation
catchClause
e
if
failOnError
block
throw
BuildException
e
getLocation
log
getMessage
MSG_WARN
catchClause
e
if
failOnError
block
throw
e
Throwable
t
getException
if
t
block
t
e
log
getMessage
MSG_WARN
catchClause
e
if
failOnError
block
throw
BuildException
e
getLocation
log
getMessage
MSG_WARN
execute
String
savedCommand
getCommand
if
getCommand
size
block
setCommand
DEFAULT_COMMAND
String
c
getCommand
Commandline
cloned
if
c
block
cloned
Commandline
clone
createArgument
setLine
c
addConfiguredCommandline
cloned
try
for
forControl
int
i
i
size
i
block
runCommand
Commandline
elementAt
i
if
cloned
block
removeCommandline
cloned
setCommand
savedCommand
close
outputStream
close
errorStream
executeToString
String
execute
Execute
StringBuffer
stringBuffer
StringBuffer
describeCommand
getCommandline
String
newLine
LINE_SEP
String
variableArray
getEnvironment
if
variableArray
block
append
newLine
append
newLine
append
append
newLine
for
forControl
int
z
z
length
z
block
append
newLine
append
append
variableArray
z
return
toString
setCvsRoot
root
String
if
root
block
if
trim
equals
block
root
cvsRoot
root
getCvsRoot
String
return
cvsRoot
setCvsRsh
rsh
String
if
rsh
block
if
trim
equals
block
rsh
cvsRsh
rsh
getCvsRsh
String
return
cvsRsh
setPort
port
int
port
port
getPort
int
return
port
setPassfile
passFile
File
passFile
passFile
getPassFile
File
return
passFile
setDest
dest
File
dest
dest
getDest
File
return
dest
setPackage
p
String
cvsPackage
p
getPackage
String
return
cvsPackage
getTag
String
return
tag
setTag
p
String
if
p
trim
length
block
tag
p
addCommandArgument
p
addCommandArgument
arg
String
addCommandArgument
cmd
arg
addCommandArgument
c
Commandline
arg
String
createArgument
setValue
arg
setDate
p
String
if
p
trim
length
block
addCommandArgument
addCommandArgument
p
setCommand
c
String
command
c
getCommand
String
return
command
setQuiet
q
boolean
quiet
q
setReallyquiet
q
boolean
reallyquiet
q
setNoexec
ne
boolean
noexec
ne
setOutput
output
File
output
output
setError
error
File
error
error
setAppend
value
boolean
append
value
setFailOnError
failOnError
boolean
failOnError
failOnError
configureCommandline
c
Commandline
if
c
block
return
setExecutable
if
cvsPackage
block
createArgument
setLine
cvsPackage
if
compression
compression
MAXIMUM_COMRESSION_LEVEL
block
createArgument
setValue
compression
if
quiet
reallyquiet
block
createArgument
setValue
if
reallyquiet
block
createArgument
setValue
if
noexec
block
createArgument
setValue
if
cvsRoot
block
createArgument
setLine
cvsRoot
removeCommandline
c
Commandline
removeElement
c
addConfiguredCommandline
c
Commandline
addConfiguredCommandline
c
addConfiguredCommandline
c
Commandline
insertAtStart
boolean
if
c
block
return
configureCommandline
c
if
insertAtStart
block
insertElementAt
c
block
addElement
c
setCompressionLevel
level
int
compression
level
setCompression
usecomp
boolean
setCompressionLevel
usecomp
DEFAULT_COMPRESSION_LEVEL
Task
