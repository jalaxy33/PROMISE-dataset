ProjectHelperImpl
FileUtils
FILE_UTILS
getFileUtils
org
xml
sax
Parser
parser
Project
project
File
buildFile
File
buildFileParent
Locator
locator
Target
implicitTarget
Target
ProjectHelperImpl
setName
parse
project
Project
source
Object
if
source
File
block
throw
BuildException
File
bFile
File
source
FileInputStream
inputStream
InputSource
inputSource
project
project
buildFile
File
getAbsolutePath
buildFileParent
File
buildFile
getParent
try
try
parser
getParser
catchClause
e
parser
XMLReaderAdapter
getXMLReader
String
uri
toURI
getAbsolutePath
inputStream
FileInputStream
bFile
inputSource
InputSource
inputStream
setSystemId
uri
log
bFile
uri
MSG_VERBOSE
HandlerBase
hb
RootHandler
setDocumentHandler
hb
setEntityResolver
hb
setErrorHandler
hb
setDTDHandler
hb
parse
inputSource
catchClause
exc
Location
location
Location
getSystemId
getLineNumber
getColumnNumber
Throwable
t
getException
if
t
BuildException
block
BuildException
be
BuildException
t
if
getLocation
UNKNOWN_LOCATION
block
setLocation
location
throw
be
throw
BuildException
getMessage
t
location
catchClause
exc
Throwable
t
getException
if
t
BuildException
block
throw
BuildException
t
throw
BuildException
getMessage
t
catchClause
exc
throw
BuildException
exc
catchClause
exc
throw
BuildException
exc
catchClause
exc
throw
BuildException
getMessage
exc
close
inputStream
AbstractHandler
DocumentHandler
parentHandler
ProjectHelperImpl
helperImpl
AbstractHandler
helperImpl
ProjectHelperImpl
parentHandler
DocumentHandler
parentHandler
parentHandler
helperImpl
helperImpl
setDocumentHandler
startElement
tag
String
attrs
AttributeList
throw
SAXParseException
tag
locator
characters
buf
char
start
int
count
int
String
s
trim
String
buf
start
count
if
length
block
throw
SAXParseException
s
locator
endElement
name
String
setDocumentHandler
parentHandler
HandlerBase
RootHandler
ProjectHelperImpl
helperImpl
RootHandler
helperImpl
ProjectHelperImpl
helperImpl
helperImpl
resolveEntity
InputSource
publicId
String
systemId
String
log
systemId
MSG_VERBOSE
if
startsWith
block
String
path
fromURI
systemId
File
file
File
path
if
isAbsolute
block
file
resolveFile
buildFileParent
path
log
systemId
buildFile
replace
MSG_WARN
try
InputSource
inputSource
InputSource
FileInputStream
file
setSystemId
toURI
getAbsolutePath
return
inputSource
catchClause
fne
log
getAbsolutePath
MSG_WARN
return
startElement
tag
String
attrs
AttributeList
if
equals
block
init
tag
attrs
ProjectHandler
helperImpl
block
throw
SAXParseException
locator
setDocumentLocator
locator
Locator
locator
locator
HandlerBase
ProjectHandler
ProjectHandler
helperImpl
ProjectHelperImpl
parentHandler
DocumentHandler
helperImpl
parentHandler
init
tag
String
attrs
AttributeList
String
def
String
name
String
id
String
baseDir
for
forControl
int
i
i
getLength
i
block
String
key
getName
i
String
value
getValue
i
if
equals
block
def
value
if
equals
block
name
value
if
equals
block
id
value
if
equals
block
baseDir
value
block
throw
SAXParseException
getName
i
locator
if
def
equals
block
setDefaultTarget
def
block
throw
BuildException
if
name
block
setName
name
addReference
name
project
if
id
block
addReference
id
project
if
getProperty
block
setBasedir
getProperty
block
if
baseDir
block
setBasedir
getAbsolutePath
block
if
isAbsolute
File
baseDir
block
setBasedir
baseDir
block
File
resolvedBaseDir
resolveFile
buildFileParent
baseDir
setBaseDir
resolvedBaseDir
addTarget
implicitTarget
startElement
name
String
attrs
AttributeList
if
equals
block
handleTarget
name
attrs
block
handleElement
helperImpl
implicitTarget
name
attrs
handleTarget
tag
String
attrs
AttributeList
init
tag
attrs
TargetHandler
helperImpl
AbstractHandler
TargetHandler
Target
target
TargetHandler
helperImpl
ProjectHelperImpl
parentHandler
DocumentHandler
helperImpl
parentHandler
init
tag
String
attrs
AttributeList
String
name
String
depends
String
ifCond
String
unlessCond
String
id
String
description
for
forControl
int
i
i
getLength
i
block
String
key
getName
i
String
value
getValue
i
if
equals
block
name
value
if
equals
block
throw
BuildException
Location
locator
if
equals
block
depends
value
if
equals
block
ifCond
value
if
equals
block
unlessCond
value
if
equals
block
id
value
if
equals
block
description
value
block
throw
SAXParseException
key
locator
if
name
block
throw
SAXParseException
locator
target
Target
addDependency
setName
name
setIf
ifCond
setUnless
unlessCond
setDescription
description
addTarget
name
target
if
id
equals
block
addReference
id
target
if
length
block
setDepends
depends
startElement
name
String
attrs
AttributeList
handleElement
helperImpl
target
name
attrs
AbstractHandler
handleElement
helperImpl
ProjectHelperImpl
parent
DocumentHandler
target
Target
elementName
String
attrs
AttributeList
if
equals
block
DescriptionHandler
helperImpl
parent
if
getDataTypeDefinitions
get
elementName
block
init
elementName
attrs
DataTypeHandler
helperImpl
parent
target
block
init
elementName
attrs
TaskHandler
helperImpl
parent
target
target
DescriptionHandler
DescriptionHandler
helperImpl
ProjectHelperImpl
parentHandler
DocumentHandler
helperImpl
parentHandler
characters
buf
char
start
int
count
int
String
text
String
buf
start
count
String
currentDescription
getDescription
if
currentDescription
block
setDescription
text
block
setDescription
currentDescription
text
AbstractHandler
TaskHandler
Target
target
TaskContainer
container
Task
task
RuntimeConfigurable
parentWrapper
RuntimeConfigurable
wrapper
TaskHandler
helperImpl
ProjectHelperImpl
parentHandler
DocumentHandler
container
TaskContainer
parentWrapper
RuntimeConfigurable
target
Target
helperImpl
parentHandler
container
container
parentWrapper
parentWrapper
target
target
init
tag
String
attrs
AttributeList
try
task
createTask
tag
catchClause
e
if
task
block
task
UnknownElement
tag
setProject
project
setTaskName
tag
setLocation
Location
locator
configureId
task
attrs
setOwningTarget
target
addTask
task
init
wrapper
getRuntimeConfigurableWrapper
setAttributes
attrs
if
parentWrapper
block
addChild
wrapper
characters
buf
char
start
int
count
int
addText
buf
start
count
startElement
name
String
attrs
AttributeList
if
task
TaskContainer
block
init
name
attrs
TaskHandler
helperImpl
TaskContainer
task
wrapper
target
block
init
name
attrs
NestedElementHandler
helperImpl
task
wrapper
target
AbstractHandler
NestedElementHandler
Object
parent
Object
child
RuntimeConfigurable
parentWrapper
RuntimeConfigurable
childWrapper
Target
target
NestedElementHandler
helperImpl
ProjectHelperImpl
parentHandler
DocumentHandler
parent
Object
parentWrapper
RuntimeConfigurable
target
Target
helperImpl
parentHandler
if
parent
TypeAdapter
block
parent
TypeAdapter
parent
block
parent
parent
parentWrapper
parentWrapper
target
target
init
propType
String
attrs
AttributeList
Class
parentClass
getClass
IntrospectionHelper
ih
getHelper
project
parentClass
try
String
elementName
toLowerCase
US
if
parent
UnknownElement
block
UnknownElement
uc
UnknownElement
elementName
setProject
project
UnknownElement
parent
child
uc
block
child
createElement
project
parent
elementName
configureId
child
attrs
childWrapper
RuntimeConfigurable
child
propType
setAttributes
attrs
addChild
childWrapper
catchClause
exc
throw
SAXParseException
getMessage
locator
exc
characters
buf
char
start
int
count
int
addText
buf
start
count
startElement
name
String
attrs
AttributeList
if
child
TaskContainer
block
init
name
attrs
TaskHandler
helperImpl
TaskContainer
child
childWrapper
target
block
init
name
attrs
NestedElementHandler
helperImpl
child
childWrapper
target
AbstractHandler
DataTypeHandler
Target
target
Object
element
RuntimeConfigurable
wrapper
DataTypeHandler
helperImpl
ProjectHelperImpl
parentHandler
DocumentHandler
target
Target
helperImpl
parentHandler
target
target
init
propType
String
attrs
AttributeList
try
element
createDataType
propType
if
element
block
throw
BuildException
propType
wrapper
RuntimeConfigurable
element
propType
setAttributes
attrs
addDataType
wrapper
catchClause
exc
throw
SAXParseException
getMessage
locator
exc
characters
buf
char
start
int
count
int
addText
buf
start
count
startElement
name
String
attrs
AttributeList
init
name
attrs
NestedElementHandler
helperImpl
element
wrapper
target
AbstractHandler
configureId
target
Object
attr
AttributeList
String
id
getValue
if
id
block
addReference
id
target
ProjectHelper
