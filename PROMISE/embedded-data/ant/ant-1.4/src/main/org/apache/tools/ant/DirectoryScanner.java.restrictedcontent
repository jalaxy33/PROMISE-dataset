DirectoryScanner
String
DEFAULTEXCLUDES
File
basedir
String
includes
String
excludes
Vector
filesIncluded
Vector
filesNotIncluded
Vector
filesExcluded
Vector
dirsIncluded
Vector
dirsNotIncluded
Vector
dirsExcluded
boolean
haveSlowResults
DirectoryScanner
matchPatternStart
boolean
pattern
String
str
String
if
startsWith
separator
startsWith
separator
block
return
Vector
patDirs
Vector
StringTokenizer
st
StringTokenizer
pattern
separator
while
hasMoreTokens
block
addElement
nextToken
Vector
strDirs
Vector
st
StringTokenizer
str
separator
while
hasMoreTokens
block
addElement
nextToken
int
patIdxStart
int
patIdxEnd
size
int
strIdxStart
int
strIdxEnd
size
while
patIdxStart
patIdxEnd
strIdxStart
strIdxEnd
block
String
patDir
String
elementAt
patIdxStart
if
equals
block
break
if
match
patDir
String
elementAt
strIdxStart
block
return
patIdxStart
strIdxStart
if
strIdxStart
strIdxEnd
block
return
if
patIdxStart
patIdxEnd
block
return
block
return
matchPath
boolean
pattern
String
str
String
if
startsWith
separator
startsWith
separator
block
return
Vector
patDirs
Vector
StringTokenizer
st
StringTokenizer
pattern
separator
while
hasMoreTokens
block
addElement
nextToken
Vector
strDirs
Vector
st
StringTokenizer
str
separator
while
hasMoreTokens
block
addElement
nextToken
int
patIdxStart
int
patIdxEnd
size
int
strIdxStart
int
strIdxEnd
size
while
patIdxStart
patIdxEnd
strIdxStart
strIdxEnd
block
String
patDir
String
elementAt
patIdxStart
if
equals
block
break
if
match
patDir
String
elementAt
strIdxStart
block
return
patIdxStart
strIdxStart
if
strIdxStart
strIdxEnd
block
for
forControl
int
i
patIdxStart
i
patIdxEnd
i
block
if
elementAt
equals
i
block
return
return
block
if
patIdxStart
patIdxEnd
block
return
while
patIdxStart
patIdxEnd
strIdxStart
strIdxEnd
block
String
patDir
String
elementAt
patIdxEnd
if
equals
block
break
if
match
patDir
String
elementAt
strIdxEnd
block
return
patIdxEnd
strIdxEnd
if
strIdxStart
strIdxEnd
block
for
forControl
int
i
patIdxStart
i
patIdxEnd
i
block
if
elementAt
equals
i
block
return
return
while
patIdxStart
patIdxEnd
strIdxStart
strIdxEnd
block
int
patIdxTmp
for
forControl
int
i
patIdxStart
i
patIdxEnd
i
block
if
elementAt
equals
i
block
patIdxTmp
i
break
if
patIdxTmp
patIdxStart
block
patIdxStart
continue
int
patLength
patIdxTmp
patIdxStart
int
strLength
strIdxEnd
strIdxStart
int
foundIdx
for
forControl
int
i
i
strLength
patLength
i
block
for
forControl
int
j
j
patLength
j
block
String
subPat
String
elementAt
patIdxStart
j
String
subStr
String
elementAt
strIdxStart
i
j
if
match
subPat
subStr
block
continue
foundIdx
strIdxStart
i
break
if
foundIdx
block
return
patIdxStart
patIdxTmp
strIdxStart
foundIdx
patLength
for
forControl
int
i
patIdxStart
i
patIdxEnd
i
block
if
elementAt
equals
i
block
return
return
match
boolean
pattern
String
str
String
char
patArr
toCharArray
char
strArr
toCharArray
int
patIdxStart
int
patIdxEnd
length
int
strIdxStart
int
strIdxEnd
length
char
ch
boolean
containsStar
for
forControl
int
i
i
length
i
block
if
patArr
i
block
containsStar
break
if
containsStar
block
if
patIdxEnd
strIdxEnd
block
return
for
forControl
int
i
i
patIdxEnd
i
block
ch
patArr
i
if
ch
ch
strArr
i
block
return
return
if
patIdxEnd
block
return
while
ch
patArr
patIdxStart
strIdxStart
strIdxEnd
block
if
ch
ch
strArr
strIdxStart
block
return
patIdxStart
strIdxStart
if
strIdxStart
strIdxEnd
block
for
forControl
int
i
patIdxStart
i
patIdxEnd
i
block
if
patArr
i
block
return
return
while
ch
patArr
patIdxEnd
strIdxStart
strIdxEnd
block
if
ch
ch
strArr
strIdxEnd
block
return
patIdxEnd
strIdxEnd
if
strIdxStart
strIdxEnd
block
for
forControl
int
i
patIdxStart
i
patIdxEnd
i
block
if
patArr
i
block
return
return
while
patIdxStart
patIdxEnd
strIdxStart
strIdxEnd
block
int
patIdxTmp
for
forControl
int
i
patIdxStart
i
patIdxEnd
i
block
if
patArr
i
block
patIdxTmp
i
break
if
patIdxTmp
patIdxStart
block
patIdxStart
continue
int
patLength
patIdxTmp
patIdxStart
int
strLength
strIdxEnd
strIdxStart
int
foundIdx
for
forControl
int
i
i
strLength
patLength
i
block
for
forControl
int
j
j
patLength
j
block
ch
patArr
patIdxStart
j
if
ch
ch
strArr
strIdxStart
i
j
block
continue
foundIdx
strIdxStart
i
break
if
foundIdx
block
return
patIdxStart
patIdxTmp
strIdxStart
foundIdx
patLength
for
forControl
int
i
patIdxStart
i
patIdxEnd
i
block
if
patArr
i
block
return
return
setBasedir
basedir
String
setBasedir
File
replace
replace
separatorChar
separatorChar
setBasedir
basedir
File
basedir
basedir
getBasedir
File
return
basedir
setIncludes
includes
String
if
includes
block
includes
block
includes
String
length
for
forControl
int
i
i
length
i
block
String
pattern
pattern
includes
i
replace
separatorChar
replace
separatorChar
if
endsWith
separator
block
pattern
includes
i
pattern
setExcludes
excludes
String
if
excludes
block
excludes
block
excludes
String
length
for
forControl
int
i
i
length
i
block
String
pattern
pattern
excludes
i
replace
separatorChar
replace
separatorChar
if
endsWith
separator
block
pattern
excludes
i
pattern
scan
if
basedir
block
throw
IllegalStateException
if
exists
block
throw
IllegalStateException
basedir
if
isDirectory
block
throw
IllegalStateException
basedir
if
includes
block
includes
String
includes
if
excludes
block
excludes
String
filesIncluded
Vector
filesNotIncluded
Vector
filesExcluded
Vector
dirsIncluded
Vector
dirsNotIncluded
Vector
dirsExcluded
Vector
if
isIncluded
block
if
isExcluded
block
addElement
block
addElement
block
addElement
scandir
basedir
slowScan
if
haveSlowResults
block
return
String
excl
String
size
copyInto
excl
String
notIncl
String
size
copyInto
notIncl
for
forControl
int
i
i
length
i
block
if
couldHoldIncluded
excl
i
block
scandir
File
basedir
excl
i
excl
i
separator
for
forControl
int
i
i
length
i
block
if
couldHoldIncluded
notIncl
i
block
scandir
File
basedir
notIncl
i
notIncl
i
separator
haveSlowResults
scandir
dir
File
vpath
String
fast
boolean
String
newfiles
list
if
newfiles
block
throw
BuildException
getAbsolutePath
for
forControl
int
i
i
length
i
block
String
name
vpath
newfiles
i
File
file
File
dir
newfiles
i
if
isDirectory
block
if
isIncluded
name
block
if
isExcluded
name
block
addElement
name
if
fast
block
scandir
file
name
separator
fast
block
addElement
name
if
fast
couldHoldIncluded
name
block
scandir
file
name
separator
fast
block
addElement
name
if
fast
couldHoldIncluded
name
block
scandir
file
name
separator
fast
if
fast
block
scandir
file
name
separator
fast
if
isFile
block
if
isIncluded
name
block
if
isExcluded
name
block
addElement
name
block
addElement
name
block
addElement
name
isIncluded
boolean
name
String
for
forControl
int
i
i
length
i
block
if
matchPath
includes
i
name
block
return
return
couldHoldIncluded
boolean
name
String
for
forControl
int
i
i
length
i
block
if
matchPatternStart
includes
i
name
block
return
return
isExcluded
boolean
name
String
for
forControl
int
i
i
length
i
block
if
matchPath
excludes
i
name
block
return
return
getIncludedFiles
String
int
count
size
String
files
String
count
for
forControl
int
i
i
count
i
block
files
i
String
elementAt
i
return
files
getNotIncludedFiles
String
slowScan
int
count
size
String
files
String
count
for
forControl
int
i
i
count
i
block
files
i
String
elementAt
i
return
files
getExcludedFiles
String
slowScan
int
count
size
String
files
String
count
for
forControl
int
i
i
count
i
block
files
i
String
elementAt
i
return
files
getIncludedDirectories
String
int
count
size
String
directories
String
count
for
forControl
int
i
i
count
i
block
directories
i
String
elementAt
i
return
directories
getNotIncludedDirectories
String
slowScan
int
count
size
String
directories
String
count
for
forControl
int
i
i
count
i
block
directories
i
String
elementAt
i
return
directories
getExcludedDirectories
String
slowScan
int
count
size
String
directories
String
count
for
forControl
int
i
i
count
i
block
directories
i
String
elementAt
i
return
directories
addDefaultExcludes
int
excludesLength
excludes
length
String
newExcludes
newExcludes
String
excludesLength
length
if
excludesLength
block
arraycopy
excludes
newExcludes
excludesLength
for
forControl
int
i
i
length
i
block
newExcludes
i
excludesLength
DEFAULTEXCLUDES
i
replace
separatorChar
replace
separatorChar
excludes
newExcludes
FileScanner
