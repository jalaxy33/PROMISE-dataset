ExtraFieldUtils
Hashtable
implementations
implementations
Hashtable
register
AsiExtraField
register
c
Class
try
ZipExtraField
ze
ZipExtraField
newInstance
put
getHeaderId
c
catchClause
cc
throw
RuntimeException
c
catchClause
ie
throw
RuntimeException
c
catchClause
ie
throw
RuntimeException
c
createExtraField
ZipExtraField
headerId
ZipShort
Class
c
Class
get
headerId
if
c
block
return
ZipExtraField
newInstance
UnrecognizedExtraField
u
UnrecognizedExtraField
setHeaderId
headerId
return
u
parse
ZipExtraField
data
byte
Vector
v
Vector
int
start
while
start
length
block
ZipShort
headerId
ZipShort
data
start
int
length
getValue
ZipShort
data
start
if
start
length
length
block
throw
ZipException
start
try
ZipExtraField
ze
createExtraField
headerId
parseFromLocalFileData
data
start
length
addElement
ze
catchClause
ie
throw
ZipException
getMessage
catchClause
iae
throw
ZipException
getMessage
start
length
if
start
length
block
throw
ZipException
start
ZipExtraField
result
ZipExtraField
size
copyInto
result
return
result
mergeLocalFileDataData
byte
data
ZipExtraField
int
sum
length
for
forControl
int
i
i
length
i
block
sum
data
i
getLocalFileDataLength
getValue
byte
result
byte
sum
int
start
for
forControl
int
i
i
length
i
block
arraycopy
data
i
getHeaderId
getBytes
result
start
arraycopy
data
i
getLocalFileDataLength
getBytes
result
start
byte
local
data
i
getLocalFileDataData
arraycopy
local
result
start
length
start
length
return
result
mergeCentralDirectoryData
byte
data
ZipExtraField
int
sum
length
for
forControl
int
i
i
length
i
block
sum
data
i
getCentralDirectoryLength
getValue
byte
result
byte
sum
int
start
for
forControl
int
i
i
length
i
block
arraycopy
data
i
getHeaderId
getBytes
result
start
arraycopy
data
i
getCentralDirectoryLength
getBytes
result
start
byte
local
data
i
getCentralDirectoryData
arraycopy
local
result
start
length
start
length
return
result
