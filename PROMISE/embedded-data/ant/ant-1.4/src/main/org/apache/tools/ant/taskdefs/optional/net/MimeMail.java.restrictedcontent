MimeMail
boolean
failOnError
String
from
String
mailhost
String
message
File
messageFile
String
toList
String
ccList
String
bccList
String
subject
Vector
filesets
Vector
String
messageMimeType
MimeMail
setFailOnError
failOnError
boolean
failOnError
failOnError
addFileset
set
FileSet
addElement
set
setToList
toList
String
toList
toList
setCcList
ccList
String
ccList
ccList
setBccList
bccList
String
bccList
bccList
setFrom
from
String
from
from
setMailhost
mailhost
String
mailhost
mailhost
setMessage
message
String
message
message
setMessageFile
messageFile
File
messageFile
messageFile
setMessageMimeType
type
String
messageMimeType
type
setSubject
subject
String
subject
subject
validate
if
from
block
throw
BuildException
if
toList
ccList
bccList
block
throw
BuildException
if
message
isEmpty
messageFile
block
throw
BuildException
if
message
messageFile
block
throw
BuildException
execute
try
validate
doMail
catchClause
e
if
failOnError
block
throw
BuildException
e
block
String
text
toString
log
text
MSG_ERR
addRecipients
msg
MimeMessage
recipType
Message
RecipientType
addrUserName
String
addrList
String
if
addrList
trim
length
return
try
InternetAddress
addrArray
parse
addrList
if
addrArray
length
throw
BuildException
addrUserName
setRecipients
recipType
addrArray
catchClause
ae
throw
BuildException
addrUserName
doMail
Properties
props
Properties
put
mailhost
Session
sesh
getDefaultInstance
props
MimeMessage
msg
MimeMessage
sesh
log
from
MSG_VERBOSE
setFrom
InternetAddress
from
addRecipients
msg
TO
toList
addRecipients
msg
CC
ccList
addRecipients
msg
BCC
bccList
if
subject
block
log
subject
MSG_VERBOSE
setSubject
subject
MimeMultipart
attachments
MimeMultipart
if
messageFile
block
int
size
int
length
byte
data
byte
size
try
FileInputStream
inStream
FileInputStream
messageFile
read
data
close
message
String
data
catchClause
e
throw
BuildException
e
if
message
block
MimeBodyPart
textbody
MimeBodyPart
setContent
message
messageMimeType
addBodyPart
textbody
for
forControl
int
i
i
size
i
block
FileSet
fs
FileSet
elementAt
i
if
fs
block
DirectoryScanner
ds
getDirectoryScanner
project
String
dsfiles
getIncludedFiles
File
baseDir
getBasedir
for
forControl
int
j
j
length
j
block
File
file
File
baseDir
dsfiles
j
MimeBodyPart
body
body
MimeBodyPart
if
exists
canRead
block
throw
BuildException
getAbsolutePath
log
toString
length
MSG_VERBOSE
FileDataSource
fileData
FileDataSource
file
DataHandler
fileDataHandler
DataHandler
fileData
setDataHandler
fileDataHandler
setFileName
getName
addBodyPart
body
setContent
attachments
log
send
msg
Task
