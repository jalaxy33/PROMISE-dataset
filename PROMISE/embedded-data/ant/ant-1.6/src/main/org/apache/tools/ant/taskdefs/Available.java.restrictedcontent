Available
String
property
String
classname
String
file
Path
filepath
String
resource
FileDir
type
Path
classpath
AntClassLoader
loader
String
value
boolean
isTask
boolean
ignoreSystemclasses
setClasspath
classpath
Path
createClasspath
append
classpath
createClasspath
Path
if
classpath
block
classpath
Path
getProject
return
classpath
createPath
setClasspathRef
r
Reference
createClasspath
setRefid
r
setFilepath
filepath
Path
createFilepath
append
filepath
createFilepath
Path
if
filepath
block
filepath
Path
getProject
return
filepath
createPath
setProperty
property
String
property
property
setValue
value
String
value
value
setClassname
classname
String
if
equals
classname
block
classname
classname
setFile
file
File
file
newFileUtils
removeLeadingPath
getProject
getBaseDir
file
setResource
resource
String
resource
resource
setType
type
String
log
type
FileDir
type
setValue
type
setType
type
FileDir
type
type
setIgnoresystemclasses
ignore
boolean
ignoreSystemclasses
ignore
execute
if
property
block
throw
BuildException
getLocation
isTask
try
if
eval
block
String
oldvalue
getProject
getProperty
property
if
oldvalue
equals
value
block
log
LINE_SEP
getProject
setProperty
property
value
isTask
eval
boolean
if
classname
file
resource
block
throw
BuildException
getLocation
if
type
block
if
file
block
throw
BuildException
getLocation
if
classpath
block
setProject
getProject
loader
getProject
createClassLoader
classpath
String
appendix
if
isTask
block
appendix
property
block
setTaskName
if
classname
checkClass
classname
block
log
classname
appendix
MSG_VERBOSE
return
if
file
checkFile
block
if
type
block
log
type
file
appendix
MSG_VERBOSE
block
log
file
appendix
MSG_VERBOSE
return
if
resource
checkResource
resource
block
log
resource
appendix
MSG_VERBOSE
return
if
loader
block
cleanup
loader
if
isTask
block
setTaskName
return
checkFile
boolean
if
filepath
block
return
checkFile
getProject
resolveFile
file
file
block
String
paths
list
for
forControl
int
i
i
length
i
block
log
paths
i
MSG_DEBUG
File
path
File
paths
i
if
exists
equals
paths
i
block
if
type
block
log
path
MSG_VERBOSE
return
if
isDir
isDirectory
block
log
path
MSG_VERBOSE
return
if
isFile
isFile
block
log
path
MSG_VERBOSE
return
return
FileUtils
fileUtils
newFileUtils
File
parent
getParentFile
path
if
parent
exists
equals
getAbsolutePath
block
if
type
block
log
parent
MSG_VERBOSE
return
if
isDir
block
log
parent
MSG_VERBOSE
return
return
if
exists
isDirectory
block
if
checkFile
File
path
file
file
path
block
return
if
parent
exists
block
if
checkFile
File
parent
file
file
parent
block
return
if
parent
block
File
grandParent
getParentFile
parent
if
grandParent
exists
block
if
checkFile
File
grandParent
file
file
grandParent
block
return
return
checkFile
boolean
f
File
text
String
if
type
block
if
isDir
block
if
isDirectory
block
log
text
MSG_VERBOSE
return
isDirectory
if
isFile
block
if
isFile
block
log
text
MSG_VERBOSE
return
isFile
if
exists
block
log
text
MSG_VERBOSE
return
exists
checkResource
boolean
resource
String
if
loader
block
return
getResourceAsStream
resource
block
ClassLoader
cL
getClass
getClassLoader
if
cL
block
return
getResourceAsStream
resource
block
return
getSystemResourceAsStream
resource
checkClass
boolean
classname
String
try
Class
requiredClass
if
ignoreSystemclasses
block
loader
getProject
createClassLoader
classpath
setParentFirst
addJavaLibraries
if
loader
block
try
requiredClass
findClass
classname
catchClause
se
return
block
return
if
loader
block
requiredClass
loadClass
classname
block
ClassLoader
l
getClass
getClassLoader
if
l
block
requiredClass
forName
classname
l
block
requiredClass
forName
classname
return
catchClause
e
log
classname
MSG_DEBUG
return
catchClause
e
log
getMessage
classname
MSG_DEBUG
return
FileDir
String
VALUES
getValues
String
return
VALUES
isDir
boolean
return
equalsIgnoreCase
getValue
isFile
boolean
return
equalsIgnoreCase
getValue
EnumeratedAttribute
Task
Condition
