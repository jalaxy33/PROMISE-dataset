ExecuteOn
Vector
filesets
Vector
Vector
filelists
Vector
boolean
relative
boolean
parallel
boolean
forwardSlash
String
type
Commandline
Marker
srcFilePos
boolean
skipEmpty
Commandline
Marker
targetFilePos
Mapper
mapperElement
FileNameMapper
mapper
File
destDir
int
maxParallel
boolean
addSourceFile
boolean
verbose
boolean
srcIsFirst
addFileset
set
FileSet
addElement
set
addDirset
set
DirSet
addElement
set
addFilelist
list
FileList
addElement
list
setRelative
relative
boolean
relative
relative
setParallel
parallel
boolean
parallel
parallel
setType
type
FileDirBoth
type
getValue
setSkipEmptyFilesets
skip
boolean
skipEmpty
skip
setDest
destDir
File
destDir
destDir
setForwardslash
forwardSlash
boolean
forwardSlash
forwardSlash
setMaxParallel
max
int
maxParallel
max
setAddsourcefile
b
boolean
addSourceFile
b
setVerbose
b
boolean
verbose
b
createSrcfile
Commandline
Marker
if
srcFilePos
block
throw
BuildException
getTaskType
getLocation
srcFilePos
createMarker
return
srcFilePos
createTargetfile
Commandline
Marker
if
targetFilePos
block
throw
BuildException
getTaskType
getLocation
targetFilePos
createMarker
srcIsFirst
srcFilePos
return
targetFilePos
createMapper
Mapper
if
mapperElement
block
throw
BuildException
getLocation
mapperElement
Mapper
getProject
return
mapperElement
checkConfiguration
if
equals
getTaskName
block
log
checkConfiguration
if
size
size
block
throw
BuildException
getLocation
if
targetFilePos
mapperElement
destDir
block
if
mapperElement
block
throw
BuildException
getLocation
if
destDir
block
throw
BuildException
getLocation
mapper
getImplementation
runExec
exe
Execute
int
totalFiles
int
totalDirs
boolean
haveExecuted
try
Vector
fileNames
Vector
Vector
baseDirs
Vector
for
forControl
int
i
i
size
i
block
String
currentType
type
AbstractFileSet
fs
AbstractFileSet
elementAt
i
if
fs
DirSet
block
if
equals
type
block
log
type
MSG_DEBUG
currentType
File
base
getDir
getProject
DirectoryScanner
ds
getDirectoryScanner
getProject
if
equals
currentType
block
String
s
getFiles
base
ds
for
forControl
int
j
j
length
j
block
totalFiles
addElement
s
j
addElement
base
if
equals
currentType
block
String
s
getDirs
base
ds
for
forControl
int
j
j
length
j
block
totalDirs
addElement
s
j
addElement
base
if
size
skipEmpty
block
log
base
MSG_INFO
continue
if
parallel
block
String
s
String
size
copyInto
s
for
forControl
int
j
j
length
j
block
String
command
getCommandline
s
j
base
log
describeCommand
command
MSG_VERBOSE
setCommandline
command
if
haveExecuted
block
setStreamHandler
createHandler
runExecute
exe
haveExecuted
removeAllElements
removeAllElements
for
forControl
int
i
i
size
i
block
FileList
list
FileList
elementAt
i
File
base
getDir
getProject
String
names
getFiles
getProject
for
forControl
int
j
j
length
j
block
File
f
File
base
names
j
if
isFile
equals
type
isDirectory
equals
type
block
if
isFile
block
totalFiles
block
totalDirs
addElement
names
j
addElement
base
if
size
skipEmpty
block
log
base
MSG_INFO
continue
if
parallel
block
String
s
String
size
copyInto
s
for
forControl
int
j
j
length
j
block
String
command
getCommandline
s
j
base
log
describeCommand
command
MSG_VERBOSE
setCommandline
command
if
haveExecuted
block
setStreamHandler
createHandler
runExecute
exe
haveExecuted
removeAllElements
removeAllElements
if
parallel
size
skipEmpty
block
runParallel
exe
fileNames
baseDirs
haveExecuted
if
haveExecuted
block
log
getExecutable
totalFiles
totalFiles
totalDirs
totalDirs
verbose
MSG_INFO
MSG_VERBOSE
catchClause
e
throw
BuildException
e
e
getLocation
logFlush
getCommandline
String
srcFiles
String
baseDirs
File
char
fileSeparator
separatorChar
Vector
targets
Vector
if
targetFilePos
block
Hashtable
addedFiles
Hashtable
for
forControl
int
i
i
length
i
block
String
subTargets
mapFileName
srcFiles
i
if
subTargets
block
for
forControl
int
j
j
length
j
block
String
name
if
relative
block
name
getAbsolutePath
File
destDir
subTargets
j
block
name
subTargets
j
if
forwardSlash
fileSeparator
block
name
replace
fileSeparator
if
contains
name
block
addElement
name
put
name
name
String
targetFiles
String
size
copyInto
targetFiles
if
addSourceFile
block
srcFiles
String
String
orig
getCommandline
String
result
String
length
length
length
int
srcIndex
length
if
srcFilePos
block
srcIndex
getPosition
if
targetFilePos
block
int
targetIndex
getPosition
if
srcIndex
targetIndex
srcIndex
targetIndex
srcIsFirst
block
arraycopy
orig
result
srcIndex
arraycopy
orig
srcIndex
result
srcIndex
length
targetIndex
srcIndex
arraycopy
targetFiles
result
targetIndex
length
length
arraycopy
orig
targetIndex
result
targetIndex
length
length
length
targetIndex
block
arraycopy
orig
result
targetIndex
arraycopy
targetFiles
result
targetIndex
length
arraycopy
orig
targetIndex
result
targetIndex
length
srcIndex
targetIndex
arraycopy
orig
srcIndex
result
srcIndex
length
length
length
srcIndex
srcIndex
length
block
arraycopy
orig
result
srcIndex
arraycopy
orig
srcIndex
result
srcIndex
length
length
srcIndex
for
forControl
int
i
i
length
i
block
if
relative
block
result
srcIndex
i
getAbsolutePath
File
baseDirs
i
srcFiles
i
block
result
srcIndex
i
srcFiles
i
if
forwardSlash
fileSeparator
block
result
srcIndex
i
result
srcIndex
i
replace
fileSeparator
return
result
getCommandline
String
srcFile
String
baseDir
File
return
getCommandline
String
srcFile
File
baseDir
getFiles
String
baseDir
File
ds
DirectoryScanner
if
mapper
block
SourceFileScanner
sfs
SourceFileScanner
return
restrict
getIncludedFiles
baseDir
destDir
mapper
block
return
getIncludedFiles
getDirs
String
baseDir
File
ds
DirectoryScanner
if
mapper
block
SourceFileScanner
sfs
SourceFileScanner
return
restrict
getIncludedDirectories
baseDir
destDir
mapper
block
return
getIncludedDirectories
runParallel
exe
Execute
fileNames
Vector
baseDirs
Vector
String
s
String
size
copyInto
s
File
b
File
size
copyInto
b
if
maxParallel
length
block
String
command
getCommandline
s
b
log
describeCommand
command
MSG_VERBOSE
setCommandline
command
runExecute
exe
block
int
stillToDo
size
int
currentOffset
while
stillToDo
block
int
currentAmount
min
stillToDo
maxParallel
String
cs
String
currentAmount
arraycopy
s
currentOffset
cs
currentAmount
File
cb
File
currentAmount
arraycopy
b
currentOffset
cb
currentAmount
String
command
getCommandline
cs
cb
log
describeCommand
command
MSG_VERBOSE
setCommandline
command
if
currentOffset
block
setStreamHandler
createHandler
runExecute
exe
stillToDo
currentAmount
currentOffset
currentAmount
FileDirBoth
getValues
String
return
String
EnumeratedAttribute
ExecTask
