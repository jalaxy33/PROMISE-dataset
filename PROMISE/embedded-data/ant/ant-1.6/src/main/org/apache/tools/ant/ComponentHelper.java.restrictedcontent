ComponentHelper
AntTypeTable
antTypeTable
Hashtable
taskClassDefinitions
Hashtable
boolean
rebuildTaskClassDefinitions
Hashtable
typeClassDefinitions
Hashtable
boolean
rebuildTypeClassDefinitions
Set
checkedNamespaces
HashSet
Stack
antLibStack
Stack
String
antLibCurrentUri
Hashtable
createdTasks
Hashtable
ComponentHelper
next
Project
project
getComponentHelper
ComponentHelper
project
Project
ComponentHelper
ph
ComponentHelper
getReference
if
ph
block
return
ph
ph
ComponentHelper
setProject
project
addReference
ph
return
ph
ComponentHelper
setNext
next
ComponentHelper
next
next
getNext
ComponentHelper
return
next
setProject
project
Project
project
project
antTypeTable
AntTypeTable
project
initSubProject
helper
ComponentHelper
AntTypeTable
typeTable
antTypeTable
for
forControl
Iterator
i
values
iterator
hasNext
block
AntTypeDefinition
def
AntTypeDefinition
next
put
getName
def
add
checkedNamespaces
createComponent
Object
ue
UnknownElement
ns
String
componentType
String
Object
component
createComponent
componentType
if
component
block
return
if
component
Task
block
Task
task
Task
component
setLocation
getLocation
setTaskType
componentType
setTaskName
getTaskName
setOwningTarget
getOwningTarget
init
addCreatedTask
componentType
task
return
component
createComponent
Object
componentName
String
AntTypeDefinition
def
getDefinition
componentName
if
def
block
return
return
create
project
getComponentClass
Class
componentName
String
AntTypeDefinition
def
getDefinition
componentName
if
def
block
return
return
getExposedClass
project
getDefinition
AntTypeDefinition
componentName
String
checkNamespace
componentName
AntTypeDefinition
ret
ret
getDefinition
componentName
return
ret
initDefaultDefinitions
initTasks
initTypes
addTaskDefinition
taskName
String
taskClass
Class
checkTaskClass
taskClass
AntTypeDefinition
def
AntTypeDefinition
setName
taskName
setClassLoader
getClassLoader
setClass
taskClass
setAdapterClass
TaskAdapter
setClassName
getName
setAdaptToClass
Task
updateDataTypeDefinition
def
checkTaskClass
taskClass
Class
if
isPublic
getModifiers
block
String
message
taskClass
log
message
MSG_ERR
throw
BuildException
message
if
isAbstract
getModifiers
block
String
message
taskClass
log
message
MSG_ERR
throw
BuildException
message
try
getConstructor
catchClause
e
String
message
taskClass
log
message
MSG_ERR
throw
BuildException
message
if
isAssignableFrom
taskClass
Task
block
checkTaskClass
taskClass
project
getTaskDefinitions
Hashtable
synchronized
taskClassDefinitions
synchronized
antTypeTable
if
rebuildTaskClassDefinitions
block
clear
for
forControl
Iterator
i
keySet
iterator
hasNext
block
String
name
String
next
Class
clazz
Class
getExposedClass
name
if
clazz
block
continue
if
isAssignableFrom
clazz
Task
block
put
name
getTypeClass
name
rebuildTaskClassDefinitions
return
taskClassDefinitions
getDataTypeDefinitions
Hashtable
synchronized
typeClassDefinitions
synchronized
antTypeTable
if
rebuildTypeClassDefinitions
block
clear
for
forControl
Iterator
i
keySet
iterator
hasNext
block
String
name
String
next
Class
clazz
Class
getExposedClass
name
if
clazz
block
continue
if
Task
block
put
name
getTypeClass
name
rebuildTypeClassDefinitions
return
typeClassDefinitions
addDataTypeDefinition
typeName
String
typeClass
Class
AntTypeDefinition
def
AntTypeDefinition
setName
typeName
setClass
typeClass
updateDataTypeDefinition
def
String
msg
typeName
getName
log
msg
MSG_DEBUG
addDataTypeDefinition
def
AntTypeDefinition
updateDataTypeDefinition
def
getAntTypeTable
Hashtable
return
antTypeTable
createTask
Task
taskType
String
Task
task
createNewTask
taskType
if
task
equals
block
addTaskDefinition
Property
task
createNewTask
taskType
if
task
block
addCreatedTask
taskType
task
return
task
createNewTask
Task
taskType
String
Class
c
getComponentClass
taskType
if
c
block
return
if
Task
block
return
Task
task
Task
createComponent
taskType
if
task
block
return
setTaskType
taskType
setTaskName
taskType
String
msg
taskType
log
msg
MSG_DEBUG
return
task
addCreatedTask
type
String
task
Task
synchronized
createdTasks
Vector
v
Vector
get
type
if
v
block
v
Vector
put
type
v
addElement
WeakReference
task
invalidateCreatedTasks
type
String
synchronized
createdTasks
Vector
v
Vector
get
type
if
v
block
Enumeration
taskEnum
elements
while
hasMoreElements
block
WeakReference
ref
WeakReference
nextElement
Task
t
Task
get
if
t
block
markInvalid
removeAllElements
remove
type
createDataType
Object
typeName
String
return
createComponent
typeName
getElementName
String
element
Object
Class
elementClass
getClass
for
forControl
Iterator
i
values
iterator
hasNext
block
AntTypeDefinition
def
AntTypeDefinition
next
if
elementClass
getExposedClass
project
block
return
getName
return
getName
validDefinition
boolean
def
AntTypeDefinition
if
getTypeClass
project
getExposedClass
project
block
return
return
sameDefinition
boolean
def
AntTypeDefinition
old
AntTypeDefinition
if
validDefinition
def
validDefinition
old
block
return
validDefinition
def
validDefinition
old
return
sameDefinition
old
project
updateDataTypeDefinition
def
AntTypeDefinition
String
name
getName
synchronized
antTypeTable
rebuildTaskClassDefinitions
rebuildTypeClassDefinitions
AntTypeDefinition
old
getDefinition
name
if
old
block
if
sameDefinition
def
old
block
return
int
logLevel
MSG_WARN
if
similarDefinition
old
project
block
logLevel
MSG_VERBOSE
Class
oldClass
getExposedClass
name
boolean
isTask
oldClass
isAssignableFrom
oldClass
Task
log
isTask
name
logLevel
if
isTask
block
invalidateCreatedTasks
name
log
name
getClassName
MSG_DEBUG
put
name
def
enterAntLib
uri
String
antLibCurrentUri
uri
push
uri
getCurrentAntlibUri
String
return
antLibCurrentUri
exitAntLib
pop
if
size
block
antLibCurrentUri
String
peek
block
antLibCurrentUri
initTasks
ClassLoader
classLoader
if
getCoreLoader
block
classLoader
getCoreLoader
String
dataDefs
InputStream
in
try
Properties
props
Properties
in
getClass
getResourceAsStream
dataDefs
if
in
block
throw
BuildException
load
in
Enumeration
e
propertyNames
while
hasMoreElements
block
String
name
String
nextElement
String
className
getProperty
name
AntTypeDefinition
def
AntTypeDefinition
setName
name
setClassName
className
setClassLoader
classLoader
setAdaptToClass
Task
setAdapterClass
TaskAdapter
put
name
def
catchClause
ex
throw
BuildException
if
in
block
try
close
catchClause
ignore
initTypes
ClassLoader
classLoader
if
getCoreLoader
block
classLoader
getCoreLoader
String
dataDefs
InputStream
in
try
Properties
props
Properties
in
getClass
getResourceAsStream
dataDefs
if
in
block
throw
BuildException
load
in
Enumeration
e
propertyNames
while
hasMoreElements
block
String
name
String
nextElement
String
className
getProperty
name
AntTypeDefinition
def
AntTypeDefinition
setName
name
setClassName
className
setClassLoader
classLoader
put
name
def
catchClause
ex
throw
BuildException
if
in
block
try
close
catchClause
ignore
checkNamespace
componentName
String
if
indexOf
block
return
String
uri
extractUriFromComponentName
componentName
if
startsWith
ANTLIB_URI
block
return
if
contains
uri
block
return
add
uri
Typedef
definer
Typedef
setProject
project
setURI
uri
setResource
substring
replace
length
setOnError
Typedef
OnError
init
execute
AntTypeTable
Project
project
AntTypeTable
project
Project
project
project
getDefinition
AntTypeDefinition
key
String
AntTypeDefinition
ret
AntTypeDefinition
get
key
return
ret
get
Object
key
Object
return
getTypeClass
String
key
create
Object
name
String
AntTypeDefinition
def
getDefinition
name
if
def
block
return
return
create
project
getTypeClass
Class
name
String
AntTypeDefinition
def
getDefinition
name
if
def
block
return
return
getTypeClass
project
getExposedClass
Class
name
String
AntTypeDefinition
def
getDefinition
name
if
def
block
return
return
getExposedClass
project
contains
boolean
clazz
Object
for
forControl
Iterator
i
values
iterator
hasNext
block
AntTypeDefinition
def
AntTypeDefinition
next
Class
c
getExposedClass
project
if
c
clazz
block
return
return
containsValue
boolean
value
Object
return
contains
value
Hashtable
