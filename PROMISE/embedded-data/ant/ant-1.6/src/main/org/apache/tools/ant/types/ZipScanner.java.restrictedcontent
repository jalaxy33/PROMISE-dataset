ZipScanner
File
srcFile
Resource
lastScannedResource
Hashtable
myentries
String
encoding
setSrc
srcFile
File
srcFile
srcFile
setEncoding
encoding
String
encoding
encoding
getIncludedFiles
String
if
srcFile
block
Vector
myvector
Vector
scanme
for
forControl
Enumeration
e
elements
hasMoreElements
block
Resource
myresource
Resource
nextElement
if
isDirectory
match
getName
block
addElement
getName
String
files
String
size
copyInto
files
sort
files
return
files
block
return
getIncludedFiles
getIncludedDirectories
String
if
srcFile
block
Vector
myvector
Vector
scanme
for
forControl
Enumeration
e
elements
hasMoreElements
block
Resource
myresource
Resource
nextElement
if
isDirectory
match
getName
block
addElement
getName
String
files
String
size
copyInto
files
sort
files
return
files
block
return
getIncludedDirectories
init
if
includes
block
includes
String
includes
if
excludes
block
excludes
String
match
boolean
path
String
String
vpath
replace
replace
separatorChar
separatorChar
return
isIncluded
vpath
isExcluded
vpath
getResource
Resource
name
String
if
srcFile
block
return
getResource
name
if
equals
block
return
Resource
MAX_VALUE
scanme
if
containsKey
name
block
return
Resource
get
name
if
containsKey
name
block
return
Resource
get
name
block
return
Resource
name
scanme
Resource
thisresource
Resource
getAbsolutePath
exists
lastModified
if
lastScannedResource
getName
equals
getName
getLastModified
getLastModified
block
return
ZipEntry
entry
ZipFile
zf
myentries
Hashtable
try
try
zf
ZipFile
srcFile
encoding
catchClause
ex
throw
BuildException
srcFile
ex
catchClause
ex
throw
BuildException
srcFile
ex
Enumeration
e
getEntries
while
hasMoreElements
block
entry
ZipEntry
nextElement
put
String
getName
Resource
getName
getTime
isDirectory
if
zf
block
try
close
catchClause
ex
lastScannedResource
thisresource
DirectoryScanner
