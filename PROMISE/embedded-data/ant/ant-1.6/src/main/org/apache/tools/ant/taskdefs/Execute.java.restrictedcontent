Execute
int
INVALID
MAX_VALUE
String
cmdl
String
env
int
exitValue
INVALID
ExecuteStreamHandler
streamHandler
ExecuteWatchdog
watchdog
File
workingDirectory
Project
project
boolean
newEnvironment
boolean
useVMLauncher
String
antWorkingDirectory
getProperty
CommandLauncher
vmLauncher
CommandLauncher
shellLauncher
Vector
procEnvironment
boolean
spawn
ProcessDestroyer
processDestroyer
ProcessDestroyer
try
if
isFamily
block
vmLauncher
VmsCommandLauncher
if
isFamily
block
vmLauncher
Java13CommandLauncher
catchClause
exc
if
isFamily
isFamily
block
shellLauncher
MacCommandLauncher
CommandLauncher
if
isFamily
block
shellLauncher
OS2CommandLauncher
CommandLauncher
if
isFamily
block
CommandLauncher
baseLauncher
if
getProperty
startsWith
block
baseLauncher
Java11CommandLauncher
block
baseLauncher
CommandLauncher
if
isFamily
block
shellLauncher
WinNTCommandLauncher
baseLauncher
block
shellLauncher
ScriptCommandLauncher
baseLauncher
if
isFamily
block
CommandLauncher
baseLauncher
if
getProperty
startsWith
block
baseLauncher
Java11CommandLauncher
block
baseLauncher
CommandLauncher
shellLauncher
PerlScriptCommandLauncher
baseLauncher
if
isFamily
block
shellLauncher
vmLauncher
block
shellLauncher
ScriptCommandLauncher
CommandLauncher
setSpawn
spawn
boolean
spawn
spawn
getProcEnvironment
Vector
if
procEnvironment
block
return
procEnvironment
procEnvironment
Vector
try
ByteArrayOutputStream
out
ByteArrayOutputStream
Execute
exe
Execute
PumpStreamHandler
out
setCommandline
getProcEnvCommand
setNewenvironment
int
retval
execute
if
retval
block
BufferedReader
in
BufferedReader
StringReader
toString
out
if
isFamily
block
procEnvironment
addVMSLogicals
procEnvironment
in
return
procEnvironment
String
var
String
line
lineSep
getProperty
while
line
readLine
block
if
indexOf
block
if
var
block
var
lineSep
line
block
var
lineSep
line
block
if
var
block
addElement
var
var
line
if
var
block
addElement
var
catchClause
exc
printStackTrace
return
procEnvironment
getProcEnvCommand
String
if
isFamily
block
String
cmd
return
cmd
if
isFamily
block
if
isFamily
block
String
cmd
return
cmd
block
String
cmd
return
cmd
if
isFamily
isFamily
block
String
cmd
String
if
canRead
File
block
cmd
if
canRead
File
block
cmd
block
cmd
return
cmd
if
isFamily
isFamily
block
String
cmd
return
cmd
if
isFamily
block
String
cmd
return
cmd
block
String
cmd
return
cmd
toString
String
bos
ByteArrayOutputStream
if
isFamily
block
try
return
toString
catchClause
e
if
isFamily
block
try
return
toString
catchClause
e
return
toString
Execute
PumpStreamHandler
Execute
streamHandler
ExecuteStreamHandler
streamHandler
Execute
streamHandler
ExecuteStreamHandler
watchdog
ExecuteWatchdog
setStreamHandler
streamHandler
watchdog
watchdog
setStreamHandler
streamHandler
ExecuteStreamHandler
streamHandler
streamHandler
getCommandline
String
return
cmdl
setCommandline
commandline
String
cmdl
commandline
setNewenvironment
newenv
boolean
newEnvironment
newenv
getEnvironment
String
if
env
newEnvironment
block
return
env
return
patchEnvironment
setEnvironment
env
String
env
env
setWorkingDirectory
wd
File
if
wd
getAbsolutePath
equals
antWorkingDirectory
block
workingDirectory
block
workingDirectory
wd
setAntRun
project
Project
project
project
setVMLauncher
useVMLauncher
boolean
useVMLauncher
useVMLauncher
launch
Process
project
Project
command
String
env
String
dir
File
useVM
boolean
CommandLauncher
launcher
vmLauncher
vmLauncher
shellLauncher
if
useVM
block
launcher
shellLauncher
return
exec
project
command
env
dir
execute
int
Process
process
launch
project
getCommandline
getEnvironment
workingDirectory
useVMLauncher
try
setProcessInputStream
getOutputStream
setProcessOutputStream
getInputStream
setProcessErrorStream
getErrorStream
catchClause
e
destroy
throw
e
start
try
add
process
if
watchdog
block
start
process
waitFor
process
if
watchdog
block
stop
stop
if
watchdog
block
checkException
return
getExitValue
remove
process
spawn
Process
process
launch
project
getCommandline
getEnvironment
workingDirectory
useVMLauncher
if
isFamily
block
try
sleep
catchClause
e
log
MSG_VERBOSE
log
toString
MSG_VERBOSE
waitFor
process
Process
try
waitFor
setExitValue
exitValue
catchClause
e
destroy
setExitValue
value
int
exitValue
value
getExitValue
int
return
exitValue
isFailure
boolean
exitValue
int
if
isFamily
block
return
exitValue
block
return
exitValue
killedProcess
boolean
return
watchdog
killedProcess
patchEnvironment
String
if
isFamily
block
return
env
Vector
osEnv
Vector
getProcEnvironment
clone
for
forControl
int
i
i
length
i
block
int
pos
env
i
indexOf
String
key
env
i
substring
pos
int
size
size
for
forControl
int
j
j
size
j
block
if
String
elementAt
j
block
removeElementAt
j
break
addElement
env
i
String
result
String
size
copyInto
result
return
result
runCommand
task
Task
cmdline
String
try
log
describeCommand
cmdline
MSG_VERBOSE
Execute
exe
Execute
LogStreamHandler
task
MSG_INFO
MSG_ERR
setAntRun
getProject
setCommandline
cmdline
int
retval
execute
if
isFailure
retval
block
throw
BuildException
cmdline
retval
getLocation
catchClause
exc
throw
BuildException
cmdline
exc
getLocation
addVMSLogicals
Vector
environment
Vector
in
BufferedReader
HashMap
logicals
HashMap
String
logName
logValue
newLogName
String
line
while
line
readLine
block
if
startsWith
block
if
logName
block
logValue
substring
length
if
startsWith
block
if
logName
block
put
logName
logValue
int
eqIndex
indexOf
newLogName
substring
eqIndex
if
containsKey
newLogName
block
logName
block
logName
newLogName
logValue
substring
eqIndex
length
if
logName
block
put
logName
logValue
for
forControl
Iterator
i
keySet
iterator
hasNext
block
String
logical
String
next
add
logical
get
logical
return
environment
CommandLauncher
exec
Process
project
Project
cmd
String
env
String
if
project
block
log
describeCommand
cmd
MSG_DEBUG
return
getRuntime
exec
cmd
env
exec
Process
project
Project
cmd
String
env
String
workingDir
File
if
workingDir
block
return
exec
project
cmd
env
throw
IOException
Java11CommandLauncher
exec
Process
project
Project
cmd
String
env
String
String
newcmd
String
length
for
forControl
int
i
i
length
i
block
newcmd
i
quoteArgument
cmd
i
if
project
block
log
describeCommand
newcmd
MSG_DEBUG
return
getRuntime
exec
newcmd
env
CommandLauncher
Java13CommandLauncher
Java13CommandLauncher
myExecWithCWD
getMethod
Class
String
String
File
Runtime
exec
Process
project
Project
cmd
String
env
String
workingDir
File
try
if
project
block
log
describeCommand
cmd
MSG_DEBUG
Object
arguments
cmd
env
workingDir
return
Process
invoke
getRuntime
arguments
catchClause
exc
Throwable
realexc
getTargetException
if
realexc
ThreadDeath
block
throw
ThreadDeath
realexc
if
realexc
IOException
block
throw
IOException
realexc
block
throw
BuildException
realexc
catchClause
exc
throw
BuildException
exc
Method
myExecWithCWD
CommandLauncher
CommandLauncherProxy
CommandLauncherProxy
launcher
CommandLauncher
myLauncher
launcher
exec
Process
project
Project
cmd
String
env
String
return
exec
project
cmd
env
CommandLauncher
myLauncher
CommandLauncher
OS2CommandLauncher
OS2CommandLauncher
launcher
CommandLauncher
launcher
exec
Process
project
Project
cmd
String
env
String
workingDir
File
File
commandDir
workingDir
if
workingDir
block
if
project
block
commandDir
getBaseDir
block
return
exec
project
cmd
env
int
preCmdLength
String
cmdDir
getAbsolutePath
String
newcmd
String
length
preCmdLength
newcmd
newcmd
newcmd
substring
newcmd
newcmd
newcmd
substring
newcmd
arraycopy
cmd
newcmd
preCmdLength
length
return
exec
project
newcmd
env
CommandLauncherProxy
WinNTCommandLauncher
WinNTCommandLauncher
launcher
CommandLauncher
launcher
exec
Process
project
Project
cmd
String
env
String
workingDir
File
File
commandDir
workingDir
if
workingDir
block
if
project
block
commandDir
getBaseDir
block
return
exec
project
cmd
env
int
preCmdLength
String
newcmd
String
length
preCmdLength
newcmd
newcmd
newcmd
newcmd
newcmd
getAbsolutePath
newcmd
arraycopy
cmd
newcmd
preCmdLength
length
return
exec
project
newcmd
env
CommandLauncherProxy
MacCommandLauncher
MacCommandLauncher
launcher
CommandLauncher
launcher
exec
Process
project
Project
cmd
String
env
String
workingDir
File
if
workingDir
block
return
exec
project
cmd
env
getProperties
put
getAbsolutePath
try
return
exec
project
cmd
env
getProperties
put
antWorkingDirectory
CommandLauncherProxy
ScriptCommandLauncher
ScriptCommandLauncher
script
String
launcher
CommandLauncher
launcher
myScript
script
exec
Process
project
Project
cmd
String
env
String
workingDir
File
if
project
block
if
workingDir
block
return
exec
project
cmd
env
throw
IOException
String
antHome
getProperty
if
antHome
block
throw
IOException
String
antRun
resolveFile
toString
antHome
separator
myScript
File
commandDir
workingDir
if
workingDir
project
block
commandDir
getBaseDir
String
newcmd
String
length
newcmd
antRun
newcmd
getAbsolutePath
arraycopy
cmd
newcmd
length
return
exec
project
newcmd
env
String
myScript
CommandLauncherProxy
PerlScriptCommandLauncher
PerlScriptCommandLauncher
script
String
launcher
CommandLauncher
launcher
myScript
script
exec
Process
project
Project
cmd
String
env
String
workingDir
File
if
project
block
if
workingDir
block
return
exec
project
cmd
env
throw
IOException
String
antHome
getProperty
if
antHome
block
throw
IOException
String
antRun
resolveFile
toString
antHome
separator
myScript
File
commandDir
workingDir
if
workingDir
project
block
commandDir
getBaseDir
String
newcmd
String
length
newcmd
newcmd
antRun
newcmd
getAbsolutePath
arraycopy
cmd
newcmd
length
return
exec
project
newcmd
env
String
myScript
CommandLauncherProxy
VmsCommandLauncher
VmsCommandLauncher
exec
Process
project
Project
cmd
String
env
String
String
vmsCmd
createCommandFile
getPath
cmd
env
return
exec
project
vmsCmd
env
exec
Process
project
Project
cmd
String
env
String
workingDir
File
String
vmsCmd
createCommandFile
getPath
cmd
env
return
exec
project
vmsCmd
env
workingDir
createCommandFile
File
cmd
String
env
String
File
script
createTempFile
deleteOnExit
PrintWriter
out
try
out
PrintWriter
FileWriter
script
if
env
block
int
eqIndex
for
forControl
int
i
i
length
i
block
eqIndex
env
i
indexOf
if
eqIndex
block
print
print
env
i
substring
eqIndex
print
print
env
i
substring
eqIndex
println
print
cmd
for
forControl
int
i
i
length
i
block
println
print
cmd
i
if
out
block
close
return
script
Java13CommandLauncher
