Expand
File
dest
File
source
boolean
overwrite
Vector
patternsets
Vector
Vector
filesets
Vector
String
NATIVE_ENCODING
String
encoding
execute
if
equals
getTaskType
block
log
if
source
size
block
throw
BuildException
if
dest
block
throw
BuildException
if
exists
isDirectory
block
throw
BuildException
getLocation
FileUtils
fileUtils
newFileUtils
if
source
block
if
isDirectory
block
throw
BuildException
getLocation
block
expandFile
fileUtils
source
dest
if
size
block
for
forControl
int
j
j
size
j
block
FileSet
fs
FileSet
elementAt
j
DirectoryScanner
ds
getDirectoryScanner
getProject
File
fromDir
getDir
getProject
String
files
getIncludedFiles
for
forControl
int
i
i
length
i
block
File
file
File
fromDir
files
i
expandFile
fileUtils
file
dest
expandFile
fileUtils
FileUtils
srcF
File
dir
File
log
srcF
dir
MSG_INFO
ZipFile
zf
try
zf
ZipFile
srcF
encoding
Enumeration
e
getEntries
while
hasMoreElements
block
ZipEntry
ze
ZipEntry
nextElement
extractFile
fileUtils
srcF
dir
getInputStream
ze
getName
Date
getTime
isDirectory
log
MSG_VERBOSE
catchClause
ioe
throw
BuildException
getPath
ioe
if
zf
block
try
close
catchClause
e
extractFile
fileUtils
FileUtils
srcF
File
dir
File
compressedInputStream
InputStream
entryName
String
entryDate
Date
isDirectory
boolean
if
patternsets
size
block
String
name
replace
replace
separatorChar
separatorChar
boolean
included
for
forControl
int
v
v
size
v
block
PatternSet
p
PatternSet
elementAt
v
String
incls
getIncludePatterns
getProject
if
incls
length
block
incls
String
for
forControl
int
w
w
length
w
block
String
pattern
incls
w
replace
separatorChar
replace
separatorChar
if
endsWith
separator
block
pattern
included
matchPath
pattern
name
if
included
block
break
if
included
block
break
String
excls
getExcludePatterns
getProject
if
excls
block
for
forControl
int
w
w
length
w
block
String
pattern
excls
w
replace
separatorChar
replace
separatorChar
if
endsWith
separator
block
pattern
included
matchPath
pattern
name
if
included
block
break
if
included
block
return
File
f
resolveFile
dir
entryName
try
if
overwrite
exists
lastModified
getTime
block
log
f
MSG_DEBUG
return
log
entryName
f
MSG_VERBOSE
File
dirF
getParentFile
f
if
dirF
block
mkdirs
if
isDirectory
block
mkdirs
block
byte
buffer
byte
int
length
FileOutputStream
fos
try
fos
FileOutputStream
f
while
length
read
buffer
block
write
buffer
length
close
fos
if
fos
block
try
close
catchClause
e
setFileLastModified
f
getTime
catchClause
ex
log
getPath
MSG_WARN
setDest
d
File
dest
d
setSrc
s
File
source
s
setOverwrite
b
boolean
overwrite
b
addPatternset
set
PatternSet
addElement
set
addFileset
set
FileSet
addElement
set
setEncoding
encoding
String
if
equals
encoding
block
encoding
encoding
encoding
Task
