AntClassLoader
int
BUFFER_SIZE
Path
classpath
Project
project
boolean
systemFirst
Vector
systemPackages
Vector
Vector
loaderPackages
Vector
boolean
ignoreBase
Method
getProtectionDomain
Method
defineClassProtectionDomain
try
getProtectionDomain
getMethod
Class
Class
Class
protectionDomain
forName
Class
args
Class
String
byte
TYPE
TYPE
protectionDomain
defineClassProtectionDomain
getDeclaredMethod
args
ClassLoader
catchClause
e
AntClassLoader
project
Project
classpath
Path
project
project
classpath
concatSystemClasspath
addSystemPackageRoot
addSystemPackageRoot
AntClassLoader
project
Project
classpath
Path
systemFirst
boolean
project
classpath
systemFirst
systemFirst
setIsolated
isolated
boolean
ignoreBase
isolated
addSystemPackageRoot
packageRoot
String
addElement
packageRoot
addLoaderPackageRoot
packageRoot
String
addElement
packageRoot
forceLoadClass
Class
classname
String
log
classname
MSG_DEBUG
Class
theClass
findLoadedClass
classname
if
theClass
block
theClass
findClass
classname
return
theClass
forceLoadSystemClass
Class
classname
String
log
classname
MSG_DEBUG
Class
theClass
findLoadedClass
classname
if
theClass
block
theClass
findBaseClass
classname
return
theClass
getResourceAsStream
InputStream
name
String
InputStream
stream
String
pathElements
list
for
forControl
int
i
i
length
stream
i
block
File
pathComponent
resolveFile
String
pathElements
i
stream
getResourceStream
pathComponent
name
return
stream
getResourceStream
InputStream
file
File
resourceName
String
try
if
exists
block
return
if
isDirectory
block
File
resource
File
file
resourceName
if
exists
block
return
FileInputStream
resource
block
ZipFile
zipFile
try
zipFile
ZipFile
file
ZipEntry
entry
getEntry
resourceName
if
entry
block
ByteArrayOutputStream
baos
ByteArrayOutputStream
byte
buffer
byte
BUFFER_SIZE
int
bytesRead
InputStream
stream
getInputStream
entry
while
bytesRead
read
buffer
BUFFER_SIZE
block
write
buffer
bytesRead
return
ByteArrayInputStream
toByteArray
if
zipFile
block
close
catchClause
e
printStackTrace
return
loadClass
Class
classname
String
resolve
boolean
boolean
useSystemFirst
systemFirst
for
forControl
Enumeration
e
elements
hasMoreElements
block
String
packageName
String
nextElement
if
startsWith
packageName
block
useSystemFirst
break
for
forControl
Enumeration
e
elements
hasMoreElements
block
String
packageName
String
nextElement
if
startsWith
packageName
block
useSystemFirst
break
Class
theClass
findLoadedClass
classname
if
theClass
block
if
useSystemFirst
block
try
theClass
findBaseClass
classname
log
classname
MSG_DEBUG
catchClause
cnfe
theClass
findClass
classname
log
classname
MSG_DEBUG
block
try
theClass
findClass
classname
log
classname
MSG_DEBUG
catchClause
cnfe
if
ignoreBase
block
throw
cnfe
theClass
findBaseClass
classname
log
classname
MSG_DEBUG
if
resolve
block
resolveClass
theClass
return
theClass
getClassFilename
String
classname
String
return
replace
getClassFromStream
Class
stream
InputStream
classname
String
ByteArrayOutputStream
baos
ByteArrayOutputStream
int
bytesRead
byte
buffer
byte
while
bytesRead
read
buffer
block
write
buffer
bytesRead
byte
classData
toByteArray
if
defineClassProtectionDomain
block
try
Object
domain
invoke
Project
Object
Object
args
Object
classname
classData
Integer
Integer
length
domain
return
Class
invoke
args
catchClause
ite
Throwable
t
getTargetException
if
t
ClassFormatError
block
throw
ClassFormatError
t
block
throw
IOException
toString
catchClause
e
throw
IOException
toString
block
return
defineClass
classname
classData
length
findClass
Class
name
String
log
name
MSG_DEBUG
try
return
findClass
name
classpath
catchClause
e
throw
e
findClass
Class
name
String
path
Path
InputStream
stream
String
classFilename
getClassFilename
name
try
String
pathElements
list
for
forControl
int
i
i
length
stream
i
block
File
pathComponent
resolveFile
String
pathElements
i
stream
getResourceStream
pathComponent
classFilename
if
stream
block
throw
ClassNotFoundException
return
getClassFromStream
stream
name
catchClause
ioe
printStackTrace
throw
ClassNotFoundException
try
if
stream
block
close
catchClause
e
findBaseClass
Class
name
String
ClassLoader
base
getClassLoader
AntClassLoader
if
base
block
return
findSystemClass
name
block
return
loadClass
name
ClassLoader
