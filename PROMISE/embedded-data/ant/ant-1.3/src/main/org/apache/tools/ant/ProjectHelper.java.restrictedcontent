ProjectHelper
SAXParserFactory
parserFactory
org
xml
sax
Parser
parser
Project
project
File
buildFile
File
buildFileParent
Locator
locator
configureProject
project
Project
buildFile
File
parse
ProjectHelper
project
buildFile
ProjectHelper
project
Project
buildFile
File
project
project
buildFile
File
getAbsolutePath
buildFileParent
File
buildFile
getParent
parse
FileInputStream
inputStream
InputSource
inputSource
try
SAXParser
saxParser
getParserFactory
newSAXParser
parser
getParser
String
uri
getAbsolutePath
replace
for
forControl
int
index
indexOf
index
index
indexOf
block
uri
substring
index
substring
index
inputStream
FileInputStream
buildFile
inputSource
InputSource
inputStream
setSystemId
uri
log
buildFile
uri
MSG_VERBOSE
parse
inputSource
RootHandler
catchClause
exc
throw
BuildException
exc
catchClause
exc
Location
location
Location
toString
getLineNumber
getColumnNumber
Throwable
t
getException
if
t
BuildException
block
BuildException
be
BuildException
t
if
getLocation
UNKNOWN_LOCATION
block
setLocation
location
throw
be
throw
BuildException
getMessage
t
location
catchClause
exc
Throwable
t
getException
if
t
BuildException
block
throw
BuildException
t
throw
BuildException
getMessage
t
catchClause
exc
throw
BuildException
exc
catchClause
exc
throw
BuildException
exc
if
inputStream
block
try
close
catchClause
ioe
AbstractHandler
DocumentHandler
parentHandler
AbstractHandler
parentHandler
DocumentHandler
parentHandler
parentHandler
setDocumentHandler
startElement
tag
String
attrs
AttributeList
throw
SAXParseException
tag
locator
characters
buf
char
start
int
end
int
String
s
trim
String
buf
start
end
if
length
block
throw
SAXParseException
s
locator
finished
endElement
name
String
finished
setDocumentHandler
parentHandler
HandlerBase
RootHandler
resolveEntity
InputSource
publicId
String
systemId
String
log
systemId
MSG_VERBOSE
if
startsWith
block
String
path
substring
int
index
indexOf
while
index
block
path
substring
index
substring
index
index
indexOf
String
entitySystemId
path
index
indexOf
while
index
block
path
substring
index
substring
index
index
indexOf
File
file
File
path
if
isAbsolute
block
file
File
buildFileParent
path
try
InputSource
inputSource
InputSource
FileInputStream
file
setSystemId
entitySystemId
return
inputSource
catchClause
fne
log
getAbsolutePath
MSG_WARN
return
startElement
tag
String
attrs
AttributeList
if
equals
block
init
tag
attrs
ProjectHandler
block
throw
SAXParseException
locator
setDocumentLocator
locator
Locator
locator
locator
HandlerBase
ProjectHandler
ProjectHandler
parentHandler
DocumentHandler
parentHandler
init
tag
String
attrs
AttributeList
String
def
String
name
String
id
String
baseDir
for
forControl
int
i
i
getLength
i
block
String
key
getName
i
String
value
getValue
i
if
equals
block
def
value
if
equals
block
name
value
if
equals
block
id
value
if
equals
block
baseDir
value
block
throw
SAXParseException
getName
i
locator
if
def
block
throw
SAXParseException
locator
setDefaultTarget
def
if
name
block
setName
name
addReference
name
project
if
id
addReference
id
project
if
getProperty
block
setBasedir
getProperty
block
if
baseDir
block
setBasedir
getAbsolutePath
block
if
isAbsolute
File
baseDir
block
setBasedir
baseDir
block
setBasedir
getAbsolutePath
File
buildFileParent
baseDir
startElement
name
String
attrs
AttributeList
if
equals
block
handleTaskdef
name
attrs
if
equals
block
handleProperty
name
attrs
if
equals
block
handleTarget
name
attrs
if
getDataTypeDefinitions
get
name
block
handleDataType
name
attrs
block
throw
SAXParseException
name
locator
handleTaskdef
name
String
attrs
AttributeList
init
name
attrs
TaskHandler
handleProperty
name
String
attrs
AttributeList
init
name
attrs
TaskHandler
handleTarget
tag
String
attrs
AttributeList
init
tag
attrs
TargetHandler
handleDataType
name
String
attrs
AttributeList
init
name
attrs
DataTypeHandler
AbstractHandler
TargetHandler
Target
target
TargetHandler
parentHandler
DocumentHandler
parentHandler
init
tag
String
attrs
AttributeList
String
name
String
depends
String
ifCond
String
unlessCond
String
id
String
description
for
forControl
int
i
i
getLength
i
block
String
key
getName
i
String
value
getValue
i
if
equals
block
name
value
if
equals
block
depends
value
if
equals
block
ifCond
value
if
equals
block
unlessCond
value
if
equals
block
id
value
if
equals
block
description
value
block
throw
SAXParseException
key
locator
if
name
block
throw
SAXParseException
locator
target
Target
setName
name
setIf
ifCond
setUnless
unlessCond
setDescription
description
addTarget
name
target
if
id
equals
addReference
id
target
if
length
block
StringTokenizer
tok
StringTokenizer
depends
while
hasMoreTokens
block
addDependency
nextToken
trim
startElement
name
String
attrs
AttributeList
init
name
attrs
TaskHandler
target
AbstractHandler
TaskHandler
Target
target
Task
task
RuntimeConfigurable
wrapper
TaskHandler
parentHandler
DocumentHandler
target
Target
parentHandler
target
target
init
tag
String
attrs
AttributeList
try
task
createTask
tag
catchClause
e
if
task
block
task
UnknownElement
tag
setProject
project
setLocation
Location
toString
getLineNumber
getColumnNumber
configureId
task
attrs
if
target
block
setOwningTarget
target
addTask
task
init
wrapper
getRuntimeConfigurableWrapper
setAttributes
attrs
block
init
configure
task
attrs
project
finished
if
task
target
block
execute
characters
buf
char
start
int
end
int
if
wrapper
block
try
addText
task
buf
start
end
catchClause
exc
throw
SAXParseException
getMessage
locator
exc
block
addText
buf
start
end
startElement
name
String
attrs
AttributeList
init
name
attrs
NestedElementHandler
task
wrapper
AbstractHandler
NestedElementHandler
Object
target
Object
child
RuntimeConfigurable
parentWrapper
RuntimeConfigurable
childWrapper
NestedElementHandler
parentHandler
DocumentHandler
target
Object
parentWrapper
RuntimeConfigurable
parentHandler
if
target
TaskAdapter
block
target
TaskAdapter
target
block
target
target
parentWrapper
parentWrapper
init
propType
String
attrs
AttributeList
Class
targetClass
getClass
IntrospectionHelper
ih
getHelper
targetClass
try
if
target
UnknownElement
block
child
UnknownElement
toLowerCase
UnknownElement
target
block
child
createElement
target
toLowerCase
configureId
child
attrs
if
parentWrapper
block
childWrapper
RuntimeConfigurable
child
setAttributes
attrs
addChild
childWrapper
block
configure
child
attrs
project
catchClause
exc
throw
SAXParseException
getMessage
locator
exc
characters
buf
char
start
int
end
int
if
parentWrapper
block
try
addText
child
buf
start
end
catchClause
exc
throw
SAXParseException
getMessage
locator
exc
block
addText
buf
start
end
startElement
name
String
attrs
AttributeList
init
name
attrs
NestedElementHandler
child
childWrapper
AbstractHandler
DataTypeHandler
Object
element
DataTypeHandler
parentHandler
DocumentHandler
parentHandler
init
propType
String
attrs
AttributeList
try
element
createDataType
propType
if
element
block
throw
BuildException
propType
configureId
element
attrs
configure
element
attrs
project
catchClause
exc
throw
SAXParseException
getMessage
locator
exc
characters
buf
char
start
int
end
int
try
addText
element
buf
start
end
catchClause
exc
throw
SAXParseException
getMessage
locator
exc
startElement
name
String
attrs
AttributeList
init
name
attrs
NestedElementHandler
element
AbstractHandler
configure
target
Object
attrs
AttributeList
project
Project
if
target
TaskAdapter
target
TaskAdapter
target
IntrospectionHelper
ih
getHelper
getClass
for
forControl
int
i
i
getLength
i
block
String
value
replaceProperties
project
getValue
i
getProperties
try
setAttribute
project
target
getName
toLowerCase
i
value
catchClause
be
if
getName
equals
i
block
throw
be
addText
target
Object
buf
char
start
int
end
int
addText
target
String
buf
start
end
addText
target
Object
text
String
if
text
trim
length
block
return
if
target
TaskAdapter
target
TaskAdapter
target
getHelper
addText
target
text
getClass
replaceProperties
String
project
Project
value
String
keys
Hashtable
StringBuffer
sb
StringBuffer
int
i
int
prev
int
pos
while
pos
indexOf
prev
block
if
pos
block
append
substring
prev
pos
if
pos
length
block
append
prev
pos
if
charAt
pos
block
append
charAt
pos
prev
pos
block
int
endName
indexOf
pos
if
endName
block
throw
BuildException
value
String
n
substring
pos
endName
if
containsKey
n
block
log
n
MSG_VERBOSE
String
v
containsKey
n
String
get
n
n
append
v
prev
endName
if
prev
length
append
substring
prev
return
toString
getParserFactory
SAXParserFactory
if
parserFactory
block
parserFactory
newInstance
return
parserFactory
configureId
target
Object
attr
AttributeList
String
id
getValue
if
id
block
addReference
id
target
