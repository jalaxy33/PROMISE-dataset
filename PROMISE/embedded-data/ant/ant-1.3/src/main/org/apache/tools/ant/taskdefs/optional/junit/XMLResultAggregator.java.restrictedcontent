DOMUtil
DOMUtil
NodeFilter
accept
boolean
node
Node
listChildNodes
NodeList
parent
Node
filter
NodeFilter
recurse
boolean
NodeListImpl
matches
NodeListImpl
NodeList
children
getChildNodes
if
children
block
int
len
getLength
for
forControl
int
i
i
len
i
block
Node
child
item
i
if
accept
child
block
addElement
child
if
recurse
block
NodeList
recmatches
listChildNodes
child
filter
recurse
int
reclength
getLength
for
forControl
int
j
j
reclength
j
block
addElement
item
i
return
matches
NodeListImpl
getLength
int
return
size
item
Node
i
int
try
return
Node
elementAt
i
catchClause
e
return
Vector
NodeList
getNodeAttribute
String
node
Node
name
String
if
node
Element
block
Element
element
Element
node
return
getAttribute
name
return
getChildByTagName
Element
parent
Node
tagname
String
if
parent
block
return
NodeList
childList
getChildNodes
int
len
getLength
for
forControl
int
i
i
len
i
block
Node
child
item
i
if
child
getNodeType
ELEMENT_NODE
getNodeName
equals
tagname
block
return
Element
child
return
importNode
Node
parent
Node
child
Node
Node
copy
Document
doc
getOwnerDocument
switch
getNodeType
case
CDATA_SECTION_NODE
copy
createCDATASection
CDATASection
child
break
case
COMMENT_NODE
copy
createComment
Comment
child
break
case
DOCUMENT_FRAGMENT_NODE
copy
createDocumentFragment
break
case
ELEMENT_NODE
Element
elem
createElement
Element
child
copy
elem
NamedNodeMap
attributes
getAttributes
if
attributes
block
int
size
getLength
for
forControl
int
i
i
size
i
block
Attr
attr
Attr
item
i
setAttribute
getName
getValue
break
case
ENTITY_REFERENCE_NODE
copy
createEntityReference
getNodeName
break
case
PROCESSING_INSTRUCTION_NODE
ProcessingInstruction
pi
ProcessingInstruction
child
copy
createProcessingInstruction
getTarget
getData
break
case
TEXT_NODE
copy
createTextNode
Text
child
break
case
throw
IllegalStateException
getNodeType
try
NodeList
children
getChildNodes
if
children
block
int
size
getLength
for
forControl
int
i
i
size
i
block
Node
newChild
item
i
if
newChild
block
importNode
copy
newChild
catchClause
ignored
appendChild
copy
return
copy
