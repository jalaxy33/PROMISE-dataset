Zip
File
zipFile
File
baseDir
boolean
doCompress
String
archiveType
long
emptyCrc
getValue
CRC32
String
emptyBehavior
Vector
filesets
Vector
Hashtable
addedDirs
Hashtable
setZipfile
zipFile
File
zipFile
zipFile
setBasedir
baseDir
File
baseDir
baseDir
setCompress
c
boolean
doCompress
c
addFileset
set
FileSet
addElement
set
addZipfileset
set
ZipFileSet
addElement
set
setWhenempty
we
String
we
toLowerCase
if
equals
we
equals
we
equals
we
throw
BuildException
we
emptyBehavior
we
execute
if
baseDir
size
equals
archiveType
block
throw
BuildException
if
zipFile
block
throw
BuildException
archiveType
Vector
dss
Vector
if
baseDir
addElement
getDirectoryScanner
baseDir
for
forControl
int
i
i
size
i
block
FileSet
fs
FileSet
elementAt
i
addElement
getDirectoryScanner
project
int
dssSize
size
FileScanner
scanners
FileScanner
dssSize
copyInto
scanners
if
isUpToDate
scanners
zipFile
return
log
archiveType
getAbsolutePath
try
boolean
success
ZipOutputStream
zOut
ZipOutputStream
FileOutputStream
zipFile
try
if
doCompress
block
setMethod
DEFLATED
block
setMethod
STORED
initZipOutputStream
zOut
if
baseDir
addFiles
getDirectoryScanner
baseDir
zOut
addFiles
filesets
zOut
success
try
if
zOut
close
catchClause
ex
if
success
throw
ex
catchClause
ioe
String
msg
archiveType
getMessage
if
delete
block
msg
throw
BuildException
msg
ioe
location
cleanUp
addFiles
scanner
FileScanner
zOut
ZipOutputStream
prefix
String
fullpath
String
if
length
length
throw
BuildException
File
thisBaseDir
getBasedir
String
dirs
getIncludedDirectories
if
length
length
throw
BuildException
for
forControl
int
i
i
length
i
block
String
name
dirs
i
replace
separatorChar
if
endsWith
block
name
addParentDirs
thisBaseDir
name
zOut
prefix
String
files
getIncludedFiles
if
length
length
throw
BuildException
for
forControl
int
i
i
length
i
block
File
f
File
thisBaseDir
files
i
if
length
block
addParentDirs
fullpath
zOut
zipFile
f
zOut
fullpath
block
String
name
files
i
replace
separatorChar
addParentDirs
thisBaseDir
name
zOut
prefix
zipFile
f
zOut
prefix
name
addZipEntries
fs
ZipFileSet
ds
DirectoryScanner
zOut
ZipOutputStream
prefix
String
ZipScanner
zipScanner
ZipScanner
ds
File
zipSrc
getSrc
ZipEntry
entry
ZipInputStream
in
ZipInputStream
FileInputStream
zipSrc
while
entry
getNextEntry
block
String
vPath
getName
if
match
vPath
block
addParentDirs
vPath
zOut
prefix
if
isDirectory
block
zipFile
in
zOut
prefix
vPath
getTime
initZipOutputStream
zOut
ZipOutputStream
isUpToDate
boolean
scanners
FileScanner
zipFile
File
String
fileNames
grabFileNames
scanners
File
files
grabFiles
scanners
fileNames
if
length
block
if
equals
block
log
archiveType
zipFile
MSG_WARN
return
if
equals
block
throw
BuildException
archiveType
zipFile
location
block
if
exists
return
log
archiveType
zipFile
MSG_INFO
try
OutputStream
os
FileOutputStream
zipFile
try
byte
empty
byte
empty
empty
empty
empty
write
empty
close
catchClause
ioe
throw
BuildException
ioe
location
return
block
for
forControl
int
i
i
length
i
block
if
files
i
equals
zipFile
block
throw
BuildException
location
if
exists
return
SourceFileScanner
sfs
SourceFileScanner
MergingMapper
mm
MergingMapper
setTo
getAbsolutePath
for
forControl
int
i
i
length
i
block
if
restrict
length
fileNames
i
scanners
i
getBasedir
mm
block
return
return
grabFiles
File
scanners
FileScanner
return
grabFiles
scanners
grabFileNames
scanners
grabFiles
File
scanners
FileScanner
fileNames
String
Vector
files
Vector
for
forControl
int
i
i
length
i
block
File
thisBaseDir
scanners
i
getBasedir
for
forControl
int
j
j
fileNames
i
length
j
addElement
File
thisBaseDir
fileNames
i
j
File
toret
File
size
copyInto
toret
return
toret
grabFileNames
String
scanners
FileScanner
String
result
String
length
for
forControl
int
i
i
length
i
block
String
files
scanners
i
getIncludedFiles
String
dirs
scanners
i
getIncludedDirectories
result
i
String
length
length
arraycopy
files
result
i
length
arraycopy
dirs
result
i
length
length
return
result
zipDir
dir
File
zOut
ZipOutputStream
vPath
String
if
get
vPath
block
return
put
vPath
vPath
ZipEntry
ze
ZipEntry
vPath
if
dir
setTime
lastModified
setSize
setMethod
STORED
setCrc
emptyCrc
putNextEntry
ze
zipFile
in
InputStream
zOut
ZipOutputStream
vPath
String
lastModified
long
ZipEntry
ze
ZipEntry
vPath
setTime
lastModified
if
doCompress
block
long
size
CRC32
cal
CRC32
if
markSupported
block
ByteArrayOutputStream
bos
ByteArrayOutputStream
byte
buffer
byte
int
count
do
count
block
size
count
update
buffer
count
write
buffer
count
count
read
buffer
length
in
ByteArrayInputStream
toByteArray
block
mark
MAX_VALUE
byte
buffer
byte
int
count
do
count
block
size
count
update
buffer
count
count
read
buffer
length
reset
setSize
size
setCrc
getValue
putNextEntry
ze
byte
buffer
byte
int
count
do
count
block
write
buffer
count
count
read
buffer
length
zipFile
file
File
zOut
ZipOutputStream
vPath
String
if
equals
zipFile
block
throw
BuildException
location
FileInputStream
fIn
FileInputStream
file
try
zipFile
fIn
zOut
vPath
lastModified
close
addParentDirs
baseDir
File
entry
String
zOut
ZipOutputStream
prefix
String
Stack
directories
Stack
int
slashPos
length
while
slashPos
lastIndexOf
int
slashPos
block
String
dir
substring
slashPos
if
get
prefix
dir
block
break
push
dir
while
isEmpty
block
String
dir
String
pop
File
f
if
baseDir
block
f
File
baseDir
dir
block
f
File
dir
zipDir
f
zOut
prefix
dir
addFiles
filesets
Vector
zOut
ZipOutputStream
for
forControl
int
i
i
size
i
block
FileSet
fs
FileSet
elementAt
i
DirectoryScanner
ds
getDirectoryScanner
project
String
prefix
String
fullpath
if
fs
ZipFileSet
block
ZipFileSet
zfs
ZipFileSet
fs
prefix
getPrefix
fullpath
getFullpath
if
length
endsWith
endsWith
block
prefix
if
length
block
addParentDirs
prefix
zOut
zipDir
zOut
prefix
if
length
block
addParentDirs
fullpath
zOut
if
fs
ZipFileSet
ZipFileSet
fs
block
addZipEntries
ZipFileSet
fs
ds
zOut
prefix
block
addFiles
ds
zOut
prefix
fullpath
cleanUp
MatchingTask
