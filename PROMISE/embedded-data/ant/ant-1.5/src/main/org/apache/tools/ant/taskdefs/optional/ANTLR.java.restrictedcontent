ANTLR
CommandlineJava
commandline
CommandlineJava
File
target
File
outputDirectory
String
superGrammar
boolean
debug
boolean
html
boolean
diagnostic
boolean
trace
boolean
traceParser
boolean
traceLexer
boolean
traceTreeWalker
boolean
fork
File
workingdir
ANTLR
setVm
setClassname
setTarget
target
File
log
toString
MSG_VERBOSE
target
target
setOutputdirectory
outputDirectory
File
log
toString
MSG_VERBOSE
outputDirectory
outputDirectory
setGlib
superGrammar
String
superGrammar
superGrammar
setDebug
enable
boolean
debug
enable
setHtml
enable
boolean
html
enable
setDiagnostic
enable
boolean
diagnostic
enable
setTrace
enable
boolean
trace
enable
setTraceParser
enable
boolean
traceParser
enable
setTraceLexer
enable
boolean
traceLexer
enable
setTraceTreeWalker
enable
boolean
traceTreeWalker
enable
setFork
s
boolean
setDir
d
File
workingdir
d
createClasspath
Path
return
createClasspath
createPath
project
createJvmarg
Commandline
Argument
return
createVmArgument
init
addClasspathEntry
addClasspathEntry
resource
String
URL
url
getClass
getResource
resource
if
url
block
String
u
toString
if
startsWith
block
int
pling
indexOf
String
jarName
substring
pling
log
jarName
MSG_DEBUG
createClasspath
setLocation
File
getAbsolutePath
File
jarName
if
startsWith
block
int
tail
indexOf
resource
String
dirName
substring
tail
log
dirName
MSG_DEBUG
createClasspath
setLocation
File
getAbsolutePath
File
dirName
block
log
u
MSG_DEBUG
block
log
resource
MSG_DEBUG
execute
validateAttributes
if
lastModified
getGeneratedFile
lastModified
block
populateAttributes
createArgument
setValue
toString
log
describeCommand
MSG_VERBOSE
int
err
run
getCommandline
if
err
block
throw
BuildException
err
location
block
log
MSG_VERBOSE
populateAttributes
createArgument
setValue
createArgument
setValue
toString
if
superGrammar
block
createArgument
setValue
createArgument
setValue
superGrammar
if
html
block
createArgument
setValue
if
diagnostic
block
createArgument
setValue
if
trace
block
createArgument
setValue
if
traceParser
block
createArgument
setValue
if
traceLexer
block
createArgument
setValue
if
traceTreeWalker
block
createArgument
setValue
validateAttributes
if
target
isFile
block
throw
BuildException
target
if
superGrammar
isFile
File
superGrammar
block
throw
BuildException
superGrammar
if
outputDirectory
block
String
fileName
toString
setOutputdirectory
File
getParent
if
isDirectory
block
throw
BuildException
outputDirectory
getGeneratedFile
File
String
generatedFileName
try
BufferedReader
in
BufferedReader
FileReader
target
String
line
while
line
readLine
block
int
extendsIndex
indexOf
if
startsWith
extendsIndex
block
generatedFileName
substring
trim
extendsIndex
break
close
catchClause
e
throw
BuildException
e
if
generatedFileName
block
throw
BuildException
return
File
outputDirectory
generatedFileName
run
int
command
String
Execute
exe
Execute
LogStreamHandler
MSG_INFO
MSG_WARN
setAntRun
project
if
workingdir
block
setWorkingDirectory
workingdir
setCommandline
command
try
return
execute
catchClause
e
throw
BuildException
e
location
Task
