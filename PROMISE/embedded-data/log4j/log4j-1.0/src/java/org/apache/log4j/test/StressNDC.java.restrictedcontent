StressNDC
Category
root
getRoot
Random
random
Random
int
LOOP_LENGTH
int
PUSH_MISS
LOOP_LENGTH
int
POP_MISS
PUSH_MISS
int
BRANCHING_FACTOR
int
maxThreads
int
msgCounter
int
threadCounter
double
LOG_2
log
Object
lock
Object
main
args
String
setPriority
DEBUG
configure
if
length
block
usage
try
maxThreads
parseInt
args
catchClause
e
println
e
usage
debug
push
while
block
synchronized
lock
createChildren
randomInt
BRANCHING_FACTOR
try
debug
wait
debug
catchClause
e
warn
e
usage
println
exit
Stack
parentDC
StressNDC
parentDC
Stack
setName
randomID
parentDC
parentDC
run
inherit
parentDC
int
loopLength
randomInt
LOOP_LENGTH
debug
loopLength
int
createIndex
loopLength
for
forControl
int
i
i
loopLength
i
block
if
i
createIndex
createChildren
randomInt
BRANCHING_FACTOR
if
randomInt
PUSH_MISS
block
String
id
randomID
debug
id
push
id
debug
msgCounter
if
randomInt
POP_MISS
block
debug
pop
synchronized
lock
threadCounter
debug
threadCounter
if
threadCounter
block
debug
notify
if
loopLength
block
debug
remove
createChildren
n
int
if
n
return
synchronized
lock
n
maxThreadsConstained
n
debug
n
for
forControl
int
i
i
n
i
block
debug
threadCounter
start
StressNDC
cloneStack
maxThreadsConstained
int
a
int
int
maxAllowed
maxThreads
threadCounter
return
a
maxAllowed
a
maxAllowed
randomInt
int
n
int
int
r
nextInt
n
return
r
r
r
randomID
String
return
toHexString
nextInt
Thread
