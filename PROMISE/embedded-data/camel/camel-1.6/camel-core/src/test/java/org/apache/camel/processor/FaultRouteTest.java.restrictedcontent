FaultRouteTest
MockEndpoint
a
MockEndpoint
b
MockEndpoint
c
MockEndpoint
err
boolean
shouldWork
testWithOut
whenExchangeReceived
Processor
process
exchange
Exchange
getOut
setBody
expectedMessageCount
expectedBodiesReceived
expectedMessageCount
sendBody
assertIsSatisfied
a
b
c
testWithFault
shouldWork
whenExchangeReceived
Processor
process
exchange
Exchange
getFault
setBody
expectedMessageCount
expectedMessageCount
expectedMessageCount
sendBody
assertIsSatisfied
a
b
c
List
Exchange
list
getReceivedExchanges
Exchange
exchange
get
Message
fault
getFault
assertNotNull
fault
assertEquals
getBody
testWithThrowFaultMessage
throwFaultTest
testWithThrowFaultException
throwFaultTest
testWithThrowFaultMessageUnhandled
throwFaultTest
testWithHandleFaultMessage
throwFaultTest
throwFaultTest
startPoint
String
throwFaultTest
startPoint
throwFaultTest
startPoint
String
errors
int
expectedMessageCount
expectedMessageCount
expectedMessageCount
expectedMessageCount
errors
try
sendBody
startPoint
catchClause
e
assertIsSatisfied
a
b
c
err
List
Exchange
list
getReceivedExchanges
Exchange
exchange
get
Message
fault
getFault
assertNotNull
fault
if
equals
block
assertTrue
getBody
IllegalStateException
assertEquals
IllegalStateException
getBody
block
if
errors
block
assertTrue
getBody
CamelException
assertEquals
CamelException
getBody
block
assertNull
getBody
CamelException
faultex
CamelException
getException
assertNotNull
faultex
assertEquals
getMessage
setUp
setUp
a
resolveMandatoryEndpoint
MockEndpoint
b
resolveMandatoryEndpoint
MockEndpoint
c
resolveMandatoryEndpoint
MockEndpoint
err
resolveMandatoryEndpoint
MockEndpoint
createRouteBuilder
RouteBuilder
return
RouteBuilder
configure
from
to
to
from
to
throwFault
to
from
to
throwFault
IllegalStateException
to
from
errorHandler
deadLetterChannel
maximumRedeliveries
loggingLevel
DEBUG
to
throwFault
to
from
errorHandler
deadLetterChannel
maximumRedeliveries
loggingLevel
DEBUG
to
handleFault
throwFault
to
ContextTestSupport
