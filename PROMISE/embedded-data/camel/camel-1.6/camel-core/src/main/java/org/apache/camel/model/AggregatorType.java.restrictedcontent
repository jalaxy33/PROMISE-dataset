AggregatorType
FIELD
AggregationStrategy
aggregationStrategy
AggregationCollection
aggregationCollection
Integer
batchSize
Integer
outBatchSize
Long
batchTimeout
String
strategyRef
String
collectionRef
ExpressionSubElementType
completedPredicate
AggregatorType
AggregatorType
correlationExpression
Expression
correlationExpression
AggregatorType
correlationExpression
ExpressionType
correlationExpression
AggregatorType
correlationExpression
Expression
aggregationStrategy
AggregationStrategy
correlationExpression
aggregationStrategy
aggregationStrategy
toString
String
return
getExpression
getOutputs
getShortName
String
return
createProcessor
Processor
routeContext
RouteContext
return
createAggregator
routeContext
createAggregator
Aggregator
routeContext
RouteContext
Processor
processor
createProcessor
Aggregator
aggregator
if
getAggregationCollection
block
setAggregationCollection
createAggregationCollection
routeContext
if
aggregationCollection
block
if
getCorrelationExpression
block
setCorrelationExpression
getExpression
if
getAggregationStrategy
block
AggregationStrategy
strategy
createAggregationStrategy
routeContext
setAggregationStrategy
strategy
aggregator
Aggregator
processor
aggregationCollection
block
AggregationStrategy
strategy
createAggregationStrategy
routeContext
Expression
aggregateExpression
getExpression
createExpression
routeContext
Predicate
predicate
if
getCompletedPredicate
block
predicate
getCompletedPredicate
createPredicate
routeContext
if
predicate
block
aggregator
Aggregator
processor
aggregateExpression
strategy
predicate
block
aggregator
Aggregator
processor
aggregateExpression
strategy
if
batchSize
block
setBatchSize
batchSize
if
batchTimeout
block
setBatchTimeout
batchTimeout
if
outBatchSize
block
setOutBatchSize
outBatchSize
return
aggregator
createAggregationStrategy
AggregationStrategy
routeContext
RouteContext
AggregationStrategy
strategy
getAggregationStrategy
if
strategy
strategyRef
block
strategy
lookup
strategyRef
AggregationStrategy
if
strategy
block
strategy
UseLatestAggregationStrategy
return
strategy
createAggregationCollection
AggregationCollection
routeContext
RouteContext
AggregationCollection
collection
getAggregationCollection
if
collection
collectionRef
block
collection
lookup
collectionRef
AggregationCollection
return
collection
getAggregationCollection
AggregationCollection
return
aggregationCollection
setAggregationCollection
aggregationCollection
AggregationCollection
aggregationCollection
aggregationCollection
getAggregationStrategy
AggregationStrategy
return
aggregationStrategy
setAggregationStrategy
aggregationStrategy
AggregationStrategy
aggregationStrategy
aggregationStrategy
getBatchSize
Integer
return
batchSize
setBatchSize
batchSize
Integer
batchSize
batchSize
getOutBatchSize
Integer
return
outBatchSize
setOutBatchSize
outBatchSize
Integer
outBatchSize
outBatchSize
getBatchTimeout
Long
return
batchTimeout
setBatchTimeout
batchTimeout
Long
batchTimeout
batchTimeout
getStrategyRef
String
return
strategyRef
setStrategyRef
strategyRef
String
strategyRef
strategyRef
setCompletedPredicate
completedPredicate
ExpressionSubElementType
completedPredicate
completedPredicate
getCompletedPredicate
ExpressionSubElementType
return
completedPredicate
batchSize
AggregatorType
batchSize
int
setBatchSize
batchSize
return
outBatchSize
AggregatorType
batchSize
int
setOutBatchSize
batchSize
return
batchTimeout
AggregatorType
batchTimeout
long
setBatchTimeout
batchTimeout
return
aggregationCollection
AggregatorType
aggregationCollection
AggregationCollection
setAggregationCollection
aggregationCollection
return
aggregationStrategy
AggregatorType
aggregationStrategy
AggregationStrategy
setAggregationStrategy
aggregationStrategy
return
strategyRef
AggregatorType
strategyRef
String
setStrategyRef
strategyRef
return
completedPredicate
ExpressionClause
AggregatorType
checkNoCompletedPredicate
ExpressionClause
AggregatorType
clause
ExpressionClause
AggregatorType
setCompletedPredicate
ExpressionSubElementType
Expression
clause
return
clause
completedPredicate
AggregatorType
predicate
Predicate
checkNoCompletedPredicate
setCompletedPredicate
ExpressionSubElementType
predicate
return
checkNoCompletedPredicate
if
getCompletedPredicate
block
throw
IllegalArgumentException
ExpressionNode
