MockEndpoint
Log
LOG
getLog
MockEndpoint
int
expectedCount
int
counter
Map
Integer
Processor
processors
HashMap
Integer
Processor
List
Exchange
receivedExchanges
CopyOnWriteArrayList
Exchange
List
Throwable
failures
CopyOnWriteArrayList
Throwable
List
Runnable
tests
CopyOnWriteArrayList
Runnable
CountDownLatch
latch
long
sleepForEmptyTest
long
defaulResultWaitMillis
int
expectedMinimumCount
List
expectedBodyValues
List
actualBodyValues
ArrayList
MockEndpoint
endpointUri
String
component
Component
endpointUri
component
assertWait
timeout
long
unit
TimeUnit
endpoints
MockEndpoint
long
start
currentTimeMillis
long
left
toMillis
timeout
long
end
start
left
for
MockEndpoint
endpoint
endpoints
block
if
await
left
MILLISECONDS
block
throw
AssertionError
getEndpointUri
left
end
currentTimeMillis
if
left
block
left
assertIsSatisfied
timeout
long
unit
TimeUnit
endpoints
MockEndpoint
assertWait
timeout
unit
endpoints
for
MockEndpoint
endpoint
endpoints
block
assertIsSatisfied
assertIsSatisfied
endpoints
MockEndpoint
for
MockEndpoint
endpoint
endpoints
block
assertIsSatisfied
assertIsSatisfied
context
CamelContext
Collection
Endpoint
endpoints
getSingletonEndpoints
for
Endpoint
endpoint
endpoints
block
if
endpoint
MockEndpoint
block
MockEndpoint
mockEndpoint
MockEndpoint
endpoint
assertIsSatisfied
expectsMessageCount
count
int
endpoints
MockEndpoint
for
MockEndpoint
endpoint
endpoints
block
expectsMessageCount
count
createConsumer
Consumer
Exchange
processor
Processor
throw
UnsupportedOperationException
createProducer
Producer
Exchange
return
DefaultProducer
Exchange
process
exchange
Exchange
onExchange
exchange
whenExchangeReceived
index
int
processor
Processor
processors
put
index
processor
assertIsSatisfied
assertIsSatisfied
sleepForEmptyTest
assertIsSatisfied
timeoutForEmptyEndpoints
long
info
if
expectedCount
block
if
expectedCount
getReceivedCounter
block
if
expectedCount
block
if
timeoutForEmptyEndpoints
block
debug
timeoutForEmptyEndpoints
sleep
timeoutForEmptyEndpoints
block
waitForCompleteLatch
assertEquals
expectedCount
getReceivedCounter
if
expectedMinimumCount
getReceivedCounter
expectedMinimumCount
block
waitForCompleteLatch
if
expectedMinimumCount
block
int
receivedCounter
getReceivedCounter
assertTrue
receivedCounter
expectedCount
expectedCount
receivedCounter
for
Runnable
test
tests
block
run
for
Throwable
failure
failures
block
if
failure
block
error
getEndpointUri
failure
failure
fail
failure
assertIsNotSatisfied
try
assertIsSatisfied
fail
catchClause
e
info
e
expectedMessageCount
expectedCount
int
expectedCount
expectedCount
if
expectedCount
block
latch
block
latch
CountDownLatch
expectedCount
expectedMinimumMessageCount
expectedCount
int
expectedMinimumCount
expectedCount
if
expectedCount
block
latch
block
latch
CountDownLatch
expectedMinimumCount
expectedBodiesReceived
bodies
List
expectedMessageCount
size
expectedBodyValues
bodies
actualBodyValues
ArrayList
expects
Runnable
run
for
forControl
int
i
i
size
i
block
Exchange
exchange
getReceivedExchanges
get
i
assertTrue
i
exchange
Object
expectedBody
get
i
Object
actualBody
get
i
assertEquals
i
expectedBody
actualBody
expectedBodiesReceived
bodies
Object
List
bodyList
ArrayList
for
Object
body
bodies
block
add
body
expectedBodiesReceived
bodyList
expectsAscending
expression
Expression
Exchange
expects
Runnable
run
assertMessagesAscending
expression
expectsDescending
expression
Expression
Exchange
expects
Runnable
run
assertMessagesDescending
expression
expectsNoDuplicates
expression
Expression
Exchange
expects
Runnable
run
assertNoDuplicates
expression
assertMessagesAscending
expression
Expression
Exchange
assertMessagesSorted
expression
assertMessagesDescending
expression
Expression
Exchange
assertMessagesSorted
expression
assertMessagesSorted
expression
Expression
Exchange
ascending
boolean
String
type
ascending
ExpressionComparator
comparator
ExpressionComparator
expression
List
Exchange
list
getReceivedExchanges
for
forControl
int
i
i
size
i
block
int
j
i
Exchange
e1
get
j
Exchange
e2
get
i
int
result
compare
e1
e2
if
result
block
fail
type
j
i
evaluate
e1
expression
e1
e2
block
if
ascending
block
result
result
if
result
block
fail
type
j
evaluate
e1
i
evaluate
e2
expression
e1
e2
assertNoDuplicates
expression
Expression
Exchange
Map
Object
Exchange
map
HashMap
Object
Exchange
List
Exchange
list
getReceivedExchanges
for
forControl
int
i
i
size
i
block
Exchange
e2
get
i
Object
key
evaluate
e2
Exchange
e1
get
key
if
e1
block
fail
i
key
expression
e1
e2
block
put
key
e2
expects
runnable
Runnable
add
runnable
message
AssertionClause
messageIndex
int
AssertionClause
clause
AssertionClause
run
applyAssertionOn
messageIndex
assertExchangeReceived
messageIndex
expects
clause
return
clause
allMessages
AssertionClause
AssertionClause
clause
AssertionClause
run
List
Exchange
list
getReceivedExchanges
int
index
for
Exchange
exchange
list
block
applyAssertionOn
index
exchange
expects
clause
return
clause
assertExchangeReceived
Exchange
index
int
int
count
getReceivedCounter
assertTrue
count
count
index
return
getReceivedExchanges
get
index
getFailures
List
Throwable
return
failures
getReceivedCounter
int
return
getReceivedExchanges
size
getReceivedExchanges
List
Exchange
return
receivedExchanges
getExpectedCount
int
return
expectedCount
getSleepForEmptyTest
long
return
sleepForEmptyTest
setSleepForEmptyTest
sleepForEmptyTest
long
sleepForEmptyTest
sleepForEmptyTest
getDefaulResultWaitMillis
long
return
defaulResultWaitMillis
setDefaulResultWaitMillis
defaulResultWaitMillis
long
defaulResultWaitMillis
defaulResultWaitMillis
onExchange
exchange
Exchange
try
Message
in
getIn
Object
actualBody
getBody
if
expectedBodyValues
block
int
index
size
if
size
index
block
Object
expectedBody
get
index
if
expectedBody
block
actualBody
getBody
getClass
add
actualBody
debug
getEndpointUri
counter
exchange
actualBody
add
exchange
Processor
processor
get
getReceivedCounter
if
processor
block
process
exchange
if
latch
block
countDown
catchClause
e
add
e
waitForCompleteLatch
if
latch
block
fail
debug
defaulResultWaitMillis
await
defaulResultWaitMillis
MILLISECONDS
assertEquals
message
String
expectedValue
Object
actualValue
Object
if
equals
expectedValue
actualValue
block
fail
message
expectedValue
actualValue
assertTrue
message
String
predicate
boolean
if
predicate
block
fail
message
fail
message
Object
if
isDebugEnabled
block
List
Exchange
list
getReceivedExchanges
int
index
for
Exchange
exchange
list
block
debug
index
exchange
throw
AssertionError
getEndpointUri
message
getExpectedMinimumCount
int
return
expectedMinimumCount
await
if
latch
block
await
await
boolean
timeout
long
unit
TimeUnit
if
latch
block
return
await
timeout
unit
return
isSingleton
boolean
return
DefaultEndpoint
Exchange
