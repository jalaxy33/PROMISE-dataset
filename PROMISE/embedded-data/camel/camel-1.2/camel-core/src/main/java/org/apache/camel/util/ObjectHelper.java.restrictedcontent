ObjectHelper
Log
LOG
getLog
ObjectHelper
ObjectHelper
equals
boolean
a
Object
b
Object
if
a
b
block
return
return
a
b
equals
b
isEqualToAny
boolean
object
Object
values
Object
for
Object
value
values
block
if
equals
object
value
block
return
return
compare
int
a
Object
b
Object
if
a
b
block
return
if
a
block
return
if
b
block
return
if
a
Comparable
block
Comparable
comparable
Comparable
a
return
compareTo
b
block
int
answer
getClass
getName
compareTo
getClass
getName
if
answer
block
answer
hashCode
hashCode
return
answer
notNull
value
Object
name
String
if
value
block
throw
IllegalArgumentException
name
splitOnCharacter
String
value
String
needle
String
count
int
String
rc
String
count
rc
value
for
forControl
int
i
i
count
i
block
String
v
rc
i
int
p
indexOf
needle
if
p
block
return
rc
rc
i
substring
p
rc
i
substring
p
return
rc
removeStartingCharacters
String
text
String
ch
char
int
idx
while
charAt
idx
ch
block
idx
if
idx
block
return
substring
idx
return
text
capitalize
String
text
String
int
length
length
if
text
length
block
return
text
String
answer
substring
toUpperCase
if
length
block
answer
substring
length
return
answer
contains
boolean
collectionOrArray
Object
value
Object
if
collectionOrArray
Collection
block
Collection
collection
Collection
collectionOrArray
return
contains
value
block
Iterator
iter
iterator
value
while
hasNext
block
if
equals
value
next
block
return
return
matches
boolean
list
List
if
isEmpty
block
Object
value
get
if
value
Boolean
block
Boolean
flag
Boolean
value
return
booleanValue
block
return
return
isNotNullAndNonEmpty
boolean
text
String
return
text
trim
length
isNullOrBlank
boolean
text
String
return
text
trim
length
getSystemProperty
String
name
String
defaultValue
String
try
return
getProperty
name
defaultValue
catchClause
e
if
isDebugEnabled
block
debug
name
e
e
return
defaultValue
name
String
type
Class
return
type
getName
className
String
value
Object
return
name
value
getClass
loadClass
Class
name
String
return
loadClass
name
getClassLoader
ObjectHelper
loadClass
Class
name
String
loader
ClassLoader
ClassLoader
contextClassLoader
currentThread
getContextClassLoader
if
contextClassLoader
block
try
return
loadClass
name
catchClause
e
try
return
loadClass
name
catchClause
e1
debug
name
e
return
invokeMethod
Object
method
Method
instance
Object
parameters
Object
try
return
invoke
instance
parameters
catchClause
e
throw
RuntimeCamelException
e
catchClause
e
throw
RuntimeCamelException
getCause
findMethodsWithAnnotation
List
Method
type
Class
annotationType
Class
Annotation
List
Method
answer
ArrayList
Method
do
type
block
Method
methods
getDeclaredMethods
for
Method
method
methods
block
if
getAnnotation
annotationType
block
add
method
type
getSuperclass
return
answer
asString
String
objects
Object
if
objects
block
return
block
StringBuffer
buffer
StringBuffer
int
counter
for
Object
object
objects
block
if
counter
block
append
String
text
object
toString
append
text
append
return
toString
isAssignableFrom
boolean
a
Class
b
Class
a
convertPrimitiveTypeToWrapperType
a
b
convertPrimitiveTypeToWrapperType
b
return
isAssignableFrom
b
convertPrimitiveTypeToWrapperType
Class
type
Class
Class
rc
type
if
isPrimitive
block
if
type
int
block
rc
Integer
if
type
long
block
rc
Long
if
type
double
block
rc
Double
if
type
float
block
rc
Float
if
type
short
block
rc
Short
if
type
byte
block
rc
Byte
return
rc
getDefaultCharacterSet
String
return
defaultCharset
name
getPropertyName
String
method
Method
String
propertyName
getName
if
startsWith
getParameterTypes
length
block
propertyName
substring
toLowerCase
substring
return
propertyName
hasAnnotation
boolean
annotations
Annotation
type
Class
for
Annotation
annotation
annotations
block
if
isInstance
annotation
block
return
return
close
closeable
Closeable
name
String
log
Log
if
closeable
block
try
close
catchClause
e
warn
name
e
e
cast
T
toType
Class
T
value
Object
if
toType
boolean
block
return
T
cast
Boolean
value
if
isPrimitive
block
Class
newType
convertPrimitiveTypeToWrapperType
toType
if
newType
toType
block
return
T
cast
newType
value
try
return
cast
value
catchClause
e
throw
IllegalArgumentException
value
getName
e
e
newInstance
T
type
Class
T
try
return
newInstance
catchClause
e
throw
RuntimeCamelException
getCause
catchClause
e
throw
RuntimeCamelException
e
newInstance
T
actualType
Class
expectedType
Class
T
try
Object
value
newInstance
return
cast
expectedType
value
catchClause
e
throw
RuntimeCamelException
getCause
catchClause
e
throw
RuntimeCamelException
e
