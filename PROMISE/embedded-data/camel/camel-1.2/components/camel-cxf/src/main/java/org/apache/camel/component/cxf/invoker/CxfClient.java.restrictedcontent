CxfClient
Logger
LOG
getLogger
getName
CxfClient
Endpoint
endpoint
CxfClient
b
Bus
e
Endpoint
b
e
endpoint
e
dispatch
Object
params
Object
context
Map
String
Object
exchange
Exchange
Object
retval
InvokingContext
invokingContext
get
InvokingContext
assert
invokingContext
BindingOperationInfo
inBoundOp
get
BindingOperationInfo
BindingOperationInfo
outBoundOp
if
inBoundOp
block
BindingInfo
bi
getEndpoint
getEndpointInfo
getBinding
outBoundOp
getOperation
getOperationInfo
getName
if
outBoundOp
isUnwrapped
block
outBoundOp
getUnwrappedOperation
retval
invokeWithMessageStream
outBoundOp
params
context
invokingContext
return
retval
invokeWithMessageStream
Object
bi
BindingOperationInfo
param
Object
context
Map
String
Object
invokingContext
InvokingContext
Object
retval
Map
String
Object
requestContext
Map
String
Object
responseContext
if
context
block
requestContext
Map
String
Object
get
REQUEST_CONTEXT
responseContext
Map
String
Object
get
RESPONSE_CONTEXT
Exchange
exchange
ExchangeImpl
put
MessageObserver
put
InvokingContext
invokingContext
put
Bus
bus
put
Endpoint
getEndpoint
put
BindingInfo
getEndpoint
getEndpointInfo
getBinding
if
bi
block
put
BindingOperationInfo
bi
put
BindingMessageInfo
getInput
setOneWay
getOperationInfo
isOneWay
Message
message
prepareMessage
exchange
requestContext
param
invokingContext
PhaseInterceptorChain
chain
setupOutChain
requestContext
message
invokingContext
prepareConduitSelector
message
doIntercept
message
Exception
ex
getContent
Exception
if
ex
block
if
isLoggable
FINE
block
fine
toString
throw
ex
if
isOneWay
block
ex
getException
exchange
if
ex
block
if
isLoggable
FINE
block
fine
toString
throw
ex
retval
getResponseObject
exchange
responseContext
return
retval
onMessage
message
Message
Exchange
exchange
getExchange
if
isLoggable
FINE
block
fine
exchange
if
get
InvokingContext
block
onMessage
message
block
message
getEndpoint
getBinding
createMessage
message
put
REQUESTOR_ROLE
TRUE
put
INBOUND_MESSAGE
TRUE
put
Binding
getEndpoint
getBinding
BindingOperationInfo
bi
get
BindingOperationInfo
if
bi
block
put
BindingMessageInfo
getOutput
InvokingContext
invokingContext
get
InvokingContext
assert
invokingContext
PhaseInterceptorChain
chain
getResponseInInterceptorChain
exchange
setInterceptorChain
chain
doIntercept
message
setInMessage
message
prepareMessage
Message
exchange
Exchange
requestContext
Map
String
Object
param
Object
InvokingContext
InvokingContext
Message
message
getEndpoint
getBinding
createMessage
put
REQUESTOR_ROLE
TRUE
put
INBOUND_MESSAGE
FALSE
if
requestContext
block
putAll
requestContext
if
param
block
setRequestOutMessageContent
message
param
if
requestContext
block
putAll
requestContext
setOutMessage
message
return
message
setupOutChain
PhaseInterceptorChain
requestContext
Map
String
Object
message
Message
invokingContext
InvokingContext
if
isLoggable
FINEST
block
finest
Exchange
exchange
getExchange
PhaseInterceptorChain
chain
getRequestOutInterceptorChain
exchange
setInterceptorChain
chain
modifyChain
chain
requestContext
setFaultObserver
outFaultObserver
return
chain
getEndpoint
Endpoint
return
endpoint
getBus
Bus
return
bus
ClientImpl
