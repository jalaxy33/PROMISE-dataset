OsgiComponentResolver
Log
LOG
getLog
OsgiComponentResolver
BundleContext
bundleContext
Map
String
ComponentEntry
components
BundleListener
bundleChanged
event
BundleEvent
try
Bundle
bundle
getBundle
if
getType
RESOLVED
block
if
isDebugEnabled
block
debug
getSymbolicName
mayBeAddComponentFor
bundle
if
getType
UNRESOLVED
block
if
isDebugEnabled
block
debug
getSymbolicName
mayBeRemoveComponentFor
bundle
catchClause
e
fatal
e
SynchronousBundleListener
ComponentEntry
Bundle
bundle
String
path
String
name
Class
type
OsgiComponentResolver
bundleContext
BundleContext
bundleContext
bundleContext
init
if
components
block
return
debug
components
HashMap
String
ComponentEntry
addBundleListener
BundleListener
Bundle
previousBundles
getBundles
for
forControl
int
i
i
length
i
block
int
state
previousBundles
i
getState
if
state
RESOLVED
state
ACTIVE
block
try
mayBeAddComponentFor
previousBundles
i
catchClause
e
error
previousBundles
i
toString
e
mayBeAddComponentFor
bundle
Bundle
Enumeration
e
getEntryPaths
if
e
block
while
hasMoreElements
block
String
path
String
nextElement
if
isDebugEnabled
block
debug
path
getSymbolicName
ComponentEntry
entry
ComponentEntry
bundle
bundle
path
path
name
substring
lastIndexOf
put
name
entry
mayBeRemoveComponentFor
bundle
Bundle
for
ComponentEntry
entry
values
block
if
bundle
bundle
block
if
isDebugEnabled
block
debug
path
getSymbolicName
remove
name
getComponent
Class
name
String
ComponentEntry
entry
get
name
if
entry
block
return
if
type
block
URL
url
getEntry
path
Properties
properties
Properties
BufferedInputStream
reader
try
reader
BufferedInputStream
openStream
load
reader
try
close
catchClause
ignore
String
classname
String
get
ClassLoader
loader
createBundleClassLoaderFor
bundle
type
loadClass
classname
if
isDebugEnabled
block
debug
name
getName
return
type
resolveComponent
Component
name
String
context
CamelContext
Object
bean
try
bean
getRegistry
lookup
name
if
bean
isDebugEnabled
block
debug
name
bean
catchClause
e
debug
name
e
if
bean
block
if
bean
Component
block
return
Component
bean
init
Class
type
try
type
getComponent
name
catchClause
e
throw
IllegalArgumentException
name
e
if
type
block
return
if
isAssignableFrom
type
Component
block
return
Component
getInjector
newInstance
type
block
throw
IllegalArgumentException
getName
ComponentResolver
