SimpleLanguage
simple
Expression
expression
String
SimpleLanguage
language
SimpleLanguage
return
createExpression
expression
createPredicate
Predicate
Exchange
expression
String
return
toPredicate
createExpression
expression
createExpression
Expression
Exchange
expression
String
if
indexOf
block
return
createComplexExpression
expression
return
createSimpleExpression
expression
createComplexExpression
Expression
Exchange
expression
String
List
Expression
results
ArrayList
Expression
int
pivot
int
size
length
while
pivot
size
block
int
idx
indexOf
pivot
if
idx
block
add
createConstantExpression
expression
pivot
size
break
block
if
pivot
idx
block
add
createConstantExpression
expression
pivot
idx
pivot
idx
int
endIdx
indexOf
pivot
if
endIdx
block
throw
IllegalArgumentException
expression
String
simpleText
substring
pivot
endIdx
Expression
simpleExpression
createSimpleExpression
simpleText
add
simpleExpression
pivot
endIdx
return
concatExpression
results
expression
createConstantExpression
Expression
expression
String
start
int
end
int
return
constantExpression
substring
start
end
createSimpleExpression
Expression
Exchange
expression
String
if
isEqualToAny
expression
block
return
bodyExpression
if
equal
expression
block
return
outBodyExpression
String
remainder
ifStartsWithReturnRemainder
expression
if
remainder
block
remainder
ifStartsWithReturnRemainder
expression
if
remainder
block
remainder
ifStartsWithReturnRemainder
expression
if
remainder
block
remainder
ifStartsWithReturnRemainder
expression
if
remainder
block
return
headerExpression
remainder
remainder
ifStartsWithReturnRemainder
expression
if
remainder
block
remainder
ifStartsWithReturnRemainder
expression
if
remainder
block
return
outHeaderExpression
remainder
remainder
ifStartsWithReturnRemainder
expression
if
remainder
block
return
propertyExpression
remainder
remainder
ifStartsWithReturnRemainder
expression
if
remainder
block
return
propertyExpression
remainder
throw
IllegalSyntaxException
expression
ifStartsWithReturnRemainder
String
prefix
String
text
String
if
startsWith
prefix
block
String
remainder
substring
length
if
length
block
return
remainder
return
Language
