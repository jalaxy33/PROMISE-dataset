CamelContextHelper
CamelContextHelper
getMandatoryEndpoint
Endpoint
camelContext
CamelContext
uri
String
Endpoint
endpoint
getEndpoint
uri
if
endpoint
block
throw
NoSuchEndpointException
uri
block
return
endpoint
getMandatoryEndpoint
Endpoint
T
camelContext
CamelContext
uri
String
type
Class
T
Endpoint
endpoint
getMandatoryEndpoint
camelContext
uri
return
cast
type
endpoint
getSingletonEndpoints
List
T
camelContext
CamelContext
type
Class
T
List
T
answer
ArrayList
T
Collection
Endpoint
endpoints
getSingletonEndpoints
for
Endpoint
endpoint
endpoints
block
if
isInstance
endpoint
block
T
value
cast
endpoint
add
value
return
answer
convertTo
T
context
CamelContext
type
Class
T
value
Object
notNull
context
return
getTypeConverter
convertTo
type
value
mandatoryConvertTo
T
context
CamelContext
type
Class
T
value
Object
T
answer
convertTo
context
type
value
if
answer
block
throw
IllegalArgumentException
value
getName
return
answer
newInstance
T
context
CamelContext
beanType
Class
T
return
getInjector
newInstance
beanType
lookup
Object
context
CamelContext
name
String
return
getRegistry
lookup
name
lookup
T
context
CamelContext
name
String
beanType
Class
T
return
getRegistry
lookup
name
beanType
mandatoryLookup
Object
context
CamelContext
name
String
Object
answer
lookup
context
name
notNull
answer
name
return
answer
mandatoryLookup
T
context
CamelContext
name
String
beanType
Class
T
T
answer
lookup
context
name
beanType
notNull
answer
name
getName
return
answer
resolveMandatoryLanguage
Language
camelContext
CamelContext
languageName
String
notNull
camelContext
notNull
languageName
Language
language
resolveLanguage
languageName
if
language
block
throw
IllegalArgumentException
languageName
return
language
resolveMandatoryExpression
Expression
camelContext
CamelContext
languageName
String
expressionText
String
notNull
expressionText
Language
language
resolveMandatoryLanguage
camelContext
languageName
Expression
Exchange
expression
createExpression
expressionText
if
expression
block
throw
IllegalArgumentException
expressionText
language
return
expression
