TraverseSchema
int
TOP_LEVEL_SCOPE
boolean
DEBUGGING
XMLErrorReporter
fErrorReporter
StringPool
fStringPool
GrammarResolver
fGrammarResolver
SchemaGrammar
fSchemaGrammar
Element
fSchemaRootElement
DatatypeValidatorFactoryImpl
fDatatypeRegistry
getDatatypeRegistry
Hashtable
fComplexTypeRegistry
Hashtable
Hashtable
fAttributeDeclRegistry
Hashtable
Vector
fIncludeLocations
Vector
Vector
fImportLocations
Vector
int
fAnonTypeCount
int
fScopeCount
int
fCurrentScope
TOP_LEVEL_SCOPE
int
fSimpleTypeAnonCount
Stack
fCurrentTypeNameStack
Stack
Hashtable
fElementRecurseComplex
Hashtable
boolean
fElementDefaultQualified
boolean
fAttributeDefaultQualified
int
fTargetNSURI
String
fTargetNSURIString
NamespacesScope
fNamespacesScope
String
fCurrentSchemaURL
XMLAttributeDecl
fTempAttributeDecl
XMLAttributeDecl
XMLElementDecl
fTempElementDecl
XMLElementDecl
ComplexTypeInfo
String
typeName
DatatypeValidator
baseDataTypeValidator
ComplexTypeInfo
baseComplexTypeInfo
int
derivedBy
int
blockSet
int
finalSet
boolean
isAbstract
int
scopeDefined
int
contentType
int
contentSpecHandle
int
templateElementIndex
int
attlistHead
DatatypeValidator
datatypeValidator
String
SchemaForSchemaURI
TraverseSchema
setGrammarResolver
grammarResolver
GrammarResolver
fGrammarResolver
grammarResolver
startNamespaceDeclScope
prefix
int
uri
int
endNamespaceDeclScope
prefix
int
resolvePrefixToURI
String
prefix
String
String
uriStr
toString
getNamespaceForPrefix
addSymbol
prefix
if
uriStr
block
reportGenericSchemaError
prefix
return
if
length
equals
URI_SCHEMAFORSCHEMA
length
block
uriStr
return
uriStr
TraverseSchema
root
Element
stringPool
StringPool
schemaGrammar
SchemaGrammar
grammarResolver
GrammarResolver
errorReporter
XMLErrorReporter
schemaURL
String
fErrorReporter
errorReporter
fCurrentSchemaURL
schemaURL
doTraverseSchema
root
stringPool
schemaGrammar
grammarResolver
TraverseSchema
root
Element
stringPool
StringPool
schemaGrammar
SchemaGrammar
grammarResolver
GrammarResolver
doTraverseSchema
root
stringPool
schemaGrammar
grammarResolver
doTraverseSchema
root
Element
stringPool
StringPool
schemaGrammar
SchemaGrammar
grammarResolver
GrammarResolver
fNamespacesScope
NamespacesScope
fSchemaRootElement
root
fStringPool
stringPool
fSchemaGrammar
schemaGrammar
fGrammarResolver
grammarResolver
if
root
block
return
String
rootPrefix
getPrefix
if
rootPrefix
length
block
String
xmlns
getAttribute
if
length
setAttribute
URI_SCHEMAFORSCHEMA
fTargetNSURIString
getAttribute
ATT_TARGETNAMESPACE
if
fTargetNSURIString
block
fTargetNSURIString
fTargetNSURI
addSymbol
fTargetNSURIString
if
fGrammarResolver
block
reportGenericSchemaError
block
setComplexTypeRegistry
fComplexTypeRegistry
setDatatypeRegistry
fDatatypeRegistry
setAttributeDeclRegistry
fAttributeDeclRegistry
setNamespacesScope
fNamespacesScope
setTargetNamespaceURI
fTargetNSURIString
putGrammar
fTargetNSURIString
fSchemaGrammar
NamedNodeMap
schemaEltAttrs
getAttributes
int
i
Attr
sattr
boolean
seenXMLNS
while
sattr
Attr
item
i
block
String
attName
getName
if
startsWith
block
String
attValue
getValue
String
prefix
substring
indexOf
setNamespaceForPrefix
addSymbol
prefix
addSymbol
attValue
if
equals
block
String
attValue
getValue
setNamespaceForPrefix
addSymbol
addSymbol
attValue
seenXMLNS
if
seenXMLNS
length
block
setNamespaceForPrefix
addSymbol
addSymbol
fElementDefaultQualified
getAttribute
equals
ATTVAL_QUALIFIED
ATT_ELEMENTFORMDEFAULT
fAttributeDefaultQualified
getAttribute
equals
ATTVAL_QUALIFIED
ATT_ATTRIBUTEFORMDEFAULT
if
fTargetNSURI
EMPTY_STRING
block
fElementDefaultQualified
fCurrentScope
checkTopLevelDuplicateNames
root
extractTopLevel3Components
root
for
forControl
Element
child
getFirstChildElement
root
child
child
getNextSiblingElement
child
block
String
name
getNodeName
if
equals
ELT_ANNOTATION
block
traverseAnnotationDecl
child
if
equals
ELT_SIMPLETYPE
block
traverseSimpleTypeDecl
child
if
equals
ELT_COMPLEXTYPE
block
traverseComplexTypeDecl
child
if
equals
ELT_ELEMENT
block
traverseElementDecl
child
if
equals
ELT_ATTRIBUTEGROUP
block
if
equals
ELT_ATTRIBUTE
block
traverseAttributeDecl
child
if
equals
ELT_WILDCARD
block
traverseWildcardDecl
child
if
equals
ELT_GROUP
getAttribute
equals
ATT_REF
block
if
equals
ELT_NOTATION
block
if
equals
ELT_INCLUDE
block
traverseInclude
child
if
equals
ELT_IMPORT
block
traverseImport
child
checkTopLevelDuplicateNames
root
Element
extractTopLevel3Components
root
Element
for
forControl
Element
child
getFirstChildElement
root
child
child
getNextSiblingElement
child
block
String
name
getNodeName
if
equals
ELT_ATTRIBUTEGROUP
block
put
name
child
if
equals
ELT_ATTRIBUTE
block
put
name
child
if
equals
ELT_GROUP
getAttribute
equals
ATT_REF
block
put
name
child
expandSystemId
String
systemId
String
currentSystemId
String
String
id
systemId
if
id
length
block
return
systemId
try
URL
url
URL
id
if
url
block
return
systemId
catchClause
e
id
fixURI
id
URL
base
URL
url
try
if
currentSystemId
block
String
dir
try
dir
fixURI
getProperty
catchClause
se
dir
if
endsWith
block
dir
dir
base
URL
dir
block
base
URL
currentSystemId
url
URL
base
id
catchClause
e
if
url
block
return
systemId
return
toString
fixURI
String
str
String
str
replace
separatorChar
if
length
block
char
ch1
charAt
if
ch1
block
char
ch0
toUpperCase
charAt
if
ch0
ch0
block
str
str
return
str
traverseInclude
includeDecl
Element
String
location
getAttribute
ATT_SCHEMALOCATION
location
expandSystemId
location
fCurrentSchemaURL
if
contains
Object
location
block
return
addElement
Object
location
DOMParser
parser
DOMParser
ignorableWhitespace
ch
char
start
int
length
int
ignorableWhitespace
dataIdx
int
setEntityResolver
Resolver
setErrorHandler
ErrorHandler
try
setFeature
setFeature
setFeature
catchClause
e
printStackTrace
catchClause
e
printStackTrace
try
parse
location
catchClause
e
printStackTrace
catchClause
e
Document
document
getDocument
Element
root
if
document
block
root
getDocumentElement
if
root
block
String
targetNSURI
getAttribute
ATT_TARGETNAMESPACE
if
length
equals
fTargetNSURIString
block
reportGenericSchemaError
location
targetNSURI
block
boolean
saveElementDefaultQualified
fElementDefaultQualified
boolean
saveAttributeDefaultQualified
fAttributeDefaultQualified
int
saveScope
fCurrentScope
String
savedSchemaURL
fCurrentSchemaURL
Element
saveRoot
fSchemaRootElement
fSchemaRootElement
root
fCurrentSchemaURL
location
traverseIncludedSchema
root
fCurrentSchemaURL
savedSchemaURL
fCurrentScope
saveScope
fElementDefaultQualified
saveElementDefaultQualified
fAttributeDefaultQualified
saveAttributeDefaultQualified
fSchemaRootElement
saveRoot
traverseIncludedSchema
root
Element
NamedNodeMap
schemaEltAttrs
getAttributes
int
i
Attr
sattr
boolean
seenXMLNS
while
sattr
Attr
item
i
block
String
attName
getName
if
startsWith
block
String
attValue
getValue
String
prefix
substring
indexOf
setNamespaceForPrefix
addSymbol
prefix
addSymbol
attValue
if
equals
block
String
attValue
getValue
setNamespaceForPrefix
addSymbol
addSymbol
attValue
seenXMLNS
if
seenXMLNS
length
block
setNamespaceForPrefix
addSymbol
addSymbol
fElementDefaultQualified
getAttribute
equals
ATTVAL_QUALIFIED
ATT_ELEMENTFORMDEFAULT
fAttributeDefaultQualified
getAttribute
equals
ATTVAL_QUALIFIED
ATT_ATTRIBUTEFORMDEFAULT
if
fTargetNSURI
EMPTY_STRING
block
fElementDefaultQualified
fCurrentScope
checkTopLevelDuplicateNames
root
extractTopLevel3Components
root
for
forControl
Element
child
getFirstChildElement
root
child
child
getNextSiblingElement
child
block
String
name
getNodeName
if
equals
ELT_ANNOTATION
block
traverseAnnotationDecl
child
if
equals
ELT_SIMPLETYPE
block
traverseSimpleTypeDecl
child
if
equals
ELT_COMPLEXTYPE
block
traverseComplexTypeDecl
child
if
equals
ELT_ELEMENT
block
traverseElementDecl
child
if
equals
ELT_ATTRIBUTEGROUP
block
if
equals
ELT_ATTRIBUTE
block
traverseAttributeDecl
child
if
equals
ELT_WILDCARD
block
traverseWildcardDecl
child
if
equals
ELT_GROUP
getAttribute
equals
ATT_REF
block
if
equals
ELT_NOTATION
block
if
equals
ELT_INCLUDE
block
traverseInclude
child
if
equals
ELT_IMPORT
block
traverseImport
child
traverseImport
importDecl
Element
String
location
getAttribute
ATT_SCHEMALOCATION
location
expandSystemId
location
fCurrentSchemaURL
String
namespaceString
getAttribute
ATT_NAMESPACE
SchemaGrammar
importedGrammar
SchemaGrammar
if
getGrammar
namespaceString
block
importedGrammar
SchemaGrammar
getGrammar
namespaceString
if
contains
Object
location
block
return
addElement
Object
location
DOMParser
parser
DOMParser
ignorableWhitespace
ch
char
start
int
length
int
ignorableWhitespace
dataIdx
int
setEntityResolver
Resolver
setErrorHandler
ErrorHandler
try
setFeature
setFeature
setFeature
catchClause
e
printStackTrace
catchClause
e
printStackTrace
try
parse
location
catchClause
e
printStackTrace
catchClause
e
printStackTrace
Document
document
getDocument
Element
root
if
document
block
root
getDocumentElement
if
root
block
String
targetNSURI
getAttribute
ATT_TARGETNAMESPACE
if
equals
namespaceString
block
reportGenericSchemaError
location
targetNSURI
namespaceString
TraverseSchema
root
fStringPool
importedGrammar
fGrammarResolver
fErrorReporter
location
block
reportGenericSchemaError
location
traverseAnnotationDecl
comment
Element
return
traverseSimpleTypeDecl
int
simpleTypeDecl
Element
String
varietyProperty
getAttribute
ATT_DERIVEDBY
if
length
block
varietyProperty
ATTVAL_RESTRICTION
String
nameProperty
getAttribute
ATT_NAME
String
baseTypeQNameProperty
getAttribute
ATT_BASE
String
abstractProperty
getAttribute
ATT_ABSTRACT
int
newSimpleTypeName
if
equals
block
newSimpleTypeName
addSymbol
fSimpleTypeAnonCount
newSimpleTypeName
addSymbol
nameProperty
int
basetype
DatatypeValidator
baseValidator
if
baseTypeQNameProperty
block
basetype
addSymbol
baseTypeQNameProperty
String
prefix
String
localpart
baseTypeQNameProperty
int
colonptr
indexOf
if
colonptr
block
prefix
substring
colonptr
localpart
substring
colonptr
String
uri
resolvePrefixToURI
prefix
baseValidator
getDatatypeValidator
uri
localpart
if
baseValidator
block
Element
baseTypeNode
getTopLevelComponentByName
ELT_SIMPLETYPE
localpart
if
baseTypeNode
block
traverseSimpleTypeDecl
baseTypeNode
baseValidator
getDatatypeValidator
uri
localpart
if
baseValidator
block
reportSchemaError
UnknownBaseDatatype
Object
getAttribute
ATT_BASE
getAttribute
ATT_NAME
return
block
reportSchemaError
UnknownBaseDatatype
Object
getAttribute
ATT_BASE
getAttribute
ATT_NAME
return
Element
content
getFirstChildElement
simpleTypeDecl
int
numFacets
Hashtable
facetData
if
content
block
if
getNodeName
equals
ELT_ANNOTATION
block
traverseAnnotationDecl
content
content
getNextSiblingElement
content
int
numEnumerationLiterals
facetData
Hashtable
Vector
enumData
Vector
while
content
block
if
getNodeType
ELEMENT_NODE
block
Element
facetElt
Element
content
numFacets
if
getNodeName
equals
ELT_ENUMERATION
block
numEnumerationLiterals
String
enumVal
getAttribute
ATT_VALUE
addElement
enumVal
Element
enumContent
getFirstChildElement
facetElt
if
enumContent
enumContent
getNodeName
equals
ELT_ANNOTATION
block
traverseAnnotationDecl
content
block
put
getNodeName
getAttribute
ATT_VALUE
content
getNextSiblingElement
content
if
numEnumerationLiterals
block
put
ELT_ENUMERATION
enumData
String
nameOfType
toString
newSimpleTypeName
if
length
block
nameOfType
fTargetNSURIString
nameOfType
try
DatatypeValidator
newValidator
getDatatypeValidator
nameOfType
if
newValidator
block
boolean
derivedByList
equals
ATTVAL_LIST
createDatatypeValidator
nameOfType
baseValidator
facetData
derivedByList
catchClause
e
reportSchemaError
DatatypeError
Object
getMessage
return
addSymbol
nameOfType
traverseAny
int
child
Element
int
anyIndex
String
namespace
getAttribute
trim
ATT_NAMESPACE
String
processContents
getAttribute
trim
int
processContentsAny
CONTENTSPECNODE_ANY
int
processContentsAnyOther
CONTENTSPECNODE_ANY_OTHER
int
processContentsAnyLocal
CONTENTSPECNODE_ANY_LOCAL
if
length
equals
block
if
equals
block
processContentsAny
CONTENTSPECNODE_ANY_LAX
processContentsAnyOther
CONTENTSPECNODE_ANY_OTHER_LAX
processContentsAnyLocal
CONTENTSPECNODE_ANY_LOCAL_LAX
if
equals
block
processContentsAny
CONTENTSPECNODE_ANY_SKIP
processContentsAnyOther
CONTENTSPECNODE_ANY_OTHER_SKIP
processContentsAnyLocal
CONTENTSPECNODE_ANY_LOCAL_SKIP
if
length
equals
block
anyIndex
addContentSpecNode
processContentsAny
if
equals
block
String
uri
getOwnerDocument
getDocumentElement
getAttribute
int
uriIndex
addSymbol
uri
anyIndex
addContentSpecNode
processContentsAnyOther
uriIndex
if
equals
block
anyIndex
addContentSpecNode
processContentsAnyLocal
if
length
block
StringTokenizer
tokenizer
StringTokenizer
namespace
Vector
tokens
Vector
while
hasMoreElements
block
String
token
nextToken
if
equals
block
token
getOwnerDocument
getDocumentElement
getAttribute
addElement
token
String
uri
String
elementAt
int
uriIndex
addSymbol
uri
int
leafIndex
addContentSpecNode
processContentsAny
uriIndex
int
valueIndex
leafIndex
int
count
size
if
count
block
uri
String
elementAt
uriIndex
addSymbol
uri
leafIndex
addContentSpecNode
processContentsAny
uriIndex
int
otherValueIndex
leafIndex
int
choiceIndex
addContentSpecNode
CONTENTSPECNODE_CHOICE
valueIndex
otherValueIndex
for
forControl
int
i
i
count
i
block
uri
String
elementAt
i
uriIndex
addSymbol
uri
leafIndex
addContentSpecNode
processContentsAny
uriIndex
otherValueIndex
leafIndex
choiceIndex
addContentSpecNode
CONTENTSPECNODE_CHOICE
choiceIndex
otherValueIndex
anyIndex
choiceIndex
block
anyIndex
leafIndex
block
reportGenericSchemaError
return
anyIndex
getDatatypeValidator
DatatypeValidator
uri
String
localpart
String
DatatypeValidator
dv
if
length
equals
URI_SCHEMAFORSCHEMA
block
dv
getDatatypeValidator
localpart
block
dv
getDatatypeValidator
uri
localpart
return
dv
traverseAnyAttribute
XMLAttributeDecl
anyAttributeDecl
Element
XMLAttributeDecl
anyAttDecl
XMLAttributeDecl
String
processContents
getAttribute
trim
ATT_PROCESSCONTENTS
String
namespace
getAttribute
trim
ATT_NAMESPACE
String
curTargetUri
getOwnerDocument
getDocumentElement
getAttribute
if
length
equals
ATTVAL_TWOPOUNDANY
block
type
TYPE_ANY_ANY
if
equals
ATTVAL_TWOPOUNDOTHER
block
type
TYPE_ANY_OTHER
uri
addSymbol
curTargetUri
if
equals
ATTVAL_TWOPOUNDLOCAL
block
type
TYPE_ANY_LOCAL
if
length
block
type
TYPE_ANY_LIST
StringTokenizer
tokenizer
StringTokenizer
namespace
int
aStringList
startStringList
Vector
tokens
Vector
while
hasMoreElements
block
String
token
nextToken
if
equals
block
token
curTargetUri
if
addStringToList
aStringList
addSymbol
token
block
reportGenericSchemaError
finishStringList
aStringList
enumeration
aStringList
block
reportGenericSchemaError
defaultType
PROCESSCONTENTS_STRICT
if
equals
ATTVAL_SKIP
block
defaultType
PROCESSCONTENTS_SKIP
if
equals
ATTVAL_LAX
block
defaultType
PROCESSCONTENTS_LAX
return
anyAttDecl
mergeTwoAnyAttribute
XMLAttributeDecl
oneAny
XMLAttributeDecl
anotherAny
XMLAttributeDecl
if
type
block
return
oneAny
if
type
block
return
anotherAny
if
type
TYPE_ANY_ANY
block
return
anotherAny
if
type
TYPE_ANY_ANY
block
return
oneAny
if
type
TYPE_ANY_OTHER
block
if
type
TYPE_ANY_OTHER
block
if
uri
uri
block
return
oneAny
block
type
return
oneAny
if
type
TYPE_ANY_LOCAL
block
return
anotherAny
if
type
TYPE_ANY_LIST
block
if
stringInList
enumeration
uri
block
return
anotherAny
block
int
anotherAnyURIs
stringListAsIntArray
enumeration
int
newList
startStringList
for
forControl
int
i
i
length
i
block
if
anotherAnyURIs
i
uri
block
addStringToList
newList
anotherAnyURIs
i
finishStringList
newList
enumeration
newList
return
anotherAny
if
type
TYPE_ANY_LOCAL
block
if
type
TYPE_ANY_OTHER
type
TYPE_ANY_LOCAL
block
return
oneAny
if
type
TYPE_ANY_LIST
block
type
return
oneAny
if
type
TYPE_ANY_LIST
block
if
type
TYPE_ANY_OTHER
block
if
stringInList
enumeration
uri
block
return
oneAny
block
int
oneAnyURIs
stringListAsIntArray
enumeration
int
newList
startStringList
for
forControl
int
i
i
length
i
block
if
oneAnyURIs
i
uri
block
addStringToList
newList
oneAnyURIs
i
finishStringList
newList
enumeration
newList
return
oneAny
if
type
TYPE_ANY_LOCAL
block
type
return
oneAny
if
type
TYPE_ANY_LIST
block
int
result
intersect2sets
stringListAsIntArray
enumeration
stringListAsIntArray
enumeration
int
newList
startStringList
for
forControl
int
i
i
length
i
block
addStringToList
newList
result
i
finishStringList
newList
enumeration
newList
return
oneAny
return
oneAny
intersect2sets
int
one
int
theOther
int
int
result
int
length
length
length
length
int
count
for
forControl
int
i
i
length
i
block
for
forControl
int
j
j
length
j
block
if
one
i
theOther
j
block
result
count
one
i
int
result2
int
count
arraycopy
result
result2
count
return
result2
traverseComplexTypeDecl
int
complexTypeDecl
Element
String
isAbstract
getAttribute
ATT_ABSTRACT
String
base
getAttribute
ATT_BASE
String
blockSet
getAttribute
ATT_BLOCK
String
content
getAttribute
ATT_CONTENT
String
derivedBy
getAttribute
ATT_DERIVEDBY
String
finalSet
getAttribute
ATT_FINAL
String
typeId
getAttribute
ATTVAL_ID
String
typeName
getAttribute
ATT_NAME
boolean
isNamedType
if
DEBUGGING
println
typeName
base
content
if
equals
block
typeName
fAnonTypeCount
block
push
typeName
isNamedType
if
isTopLevel
complexTypeDecl
block
String
fullName
fTargetNSURIString
typeName
ComplexTypeInfo
temp
ComplexTypeInfo
get
fullName
if
temp
block
return
addSymbol
fullName
int
scopeDefined
fScopeCount
int
previousScope
fCurrentScope
fCurrentScope
scopeDefined
Element
child
int
contentSpecType
int
csnType
int
left
int
right
ComplexTypeInfo
baseTypeInfo
DatatypeValidator
baseTypeValidator
DatatypeValidator
simpleTypeValidator
int
baseTypeSymbol
String
fullBaseName
boolean
baseIsSimpleSimple
boolean
baseIsComplexSimple
boolean
derivedByRestriction
boolean
derivedByExtension
int
baseContentSpecHandle
Element
baseTypeNode
if
length
block
if
length
block
reportGenericSchemaError
ELT_COMPLEXTYPE
typeName
block
if
equals
ATTVAL_EXTENSION
block
derivedByRestriction
String
prefix
String
localpart
base
int
colonptr
indexOf
if
colonptr
block
prefix
substring
colonptr
localpart
substring
colonptr
int
localpartIndex
addSymbol
localpart
String
typeURI
resolvePrefixToURI
prefix
if
equals
fTargetNSURIString
equals
URI_SCHEMAFORSCHEMA
length
block
baseTypeInfo
getTypeInfoFromNS
typeURI
localpart
if
baseTypeInfo
block
baseTypeValidator
getTypeValidatorFromNS
typeURI
localpart
if
baseTypeValidator
block
println
localpart
typeURI
block
baseIsSimpleSimple
block
fullBaseName
typeURI
localpart
baseTypeInfo
ComplexTypeInfo
get
fullBaseName
if
baseTypeInfo
block
baseTypeValidator
getDatatypeValidator
typeURI
localpart
if
baseTypeValidator
block
baseTypeNode
getTopLevelComponentByName
ELT_COMPLEXTYPE
localpart
if
baseTypeNode
block
baseTypeSymbol
traverseComplexTypeDecl
baseTypeNode
baseTypeInfo
ComplexTypeInfo
get
toString
baseTypeSymbol
block
baseTypeNode
getTopLevelComponentByName
ELT_SIMPLETYPE
localpart
if
baseTypeNode
block
baseTypeSymbol
traverseSimpleTypeDecl
baseTypeNode
simpleTypeValidator
baseTypeValidator
getDatatypeValidator
typeURI
localpart
if
simpleTypeValidator
block
baseIsSimpleSimple
block
reportGenericSchemaError
base
block
simpleTypeValidator
baseTypeValidator
baseIsSimpleSimple
if
baseIsSimpleSimple
derivedByRestriction
block
reportGenericSchemaError
typeName
if
baseTypeInfo
block
if
derivedByRestriction
block
block
if
contentSpecHandle
block
if
derivedByRestriction
block
checkParticleDerivationOK
complexTypeDecl
baseTypeNode
baseContentSpecHandle
contentSpecHandle
if
datatypeValidator
block
baseTypeValidator
datatypeValidator
baseIsComplexSimple
if
baseIsComplexSimple
derivedByRestriction
block
reportGenericSchemaError
typeName
child
if
baseIsComplexSimple
block
contentSpecType
TYPE_SIMPLE
int
numEnumerationLiterals
int
numFacets
Hashtable
facetData
Hashtable
Vector
enumData
Vector
for
forControl
child
getFirstChildElement
complexTypeDecl
child
getNodeName
equals
ELT_MINEXCLUSIVE
getNodeName
equals
ELT_MININCLUSIVE
getNodeName
equals
ELT_MAXEXCLUSIVE
getNodeName
equals
ELT_MAXINCLUSIVE
getNodeName
equals
ELT_PRECISION
getNodeName
equals
ELT_SCALE
getNodeName
equals
ELT_LENGTH
getNodeName
equals
ELT_MINLENGTH
getNodeName
equals
ELT_MAXLENGTH
getNodeName
equals
ELT_ENCODING
getNodeName
equals
ELT_PERIOD
getNodeName
equals
ELT_DURATION
getNodeName
equals
ELT_ENUMERATION
getNodeName
equals
ELT_PATTERN
getNodeName
equals
ELT_ANNOTATION
child
getNextSiblingElement
child
block
if
getNodeType
ELEMENT_NODE
block
Element
facetElt
Element
child
numFacets
if
getNodeName
equals
ELT_ENUMERATION
block
numEnumerationLiterals
addElement
getAttribute
ATT_VALUE
Element
enumContent
getFirstChildElement
facetElt
if
enumContent
getNodeName
equals
ELT_ANNOTATION
block
traverseAnnotationDecl
child
block
put
getNodeName
getAttribute
ATT_VALUE
if
numEnumerationLiterals
block
put
ELT_ENUMERATION
enumData
if
numFacets
block
simpleTypeValidator
createDatatypeValidator
typeName
baseTypeValidator
facetData
simpleTypeValidator
baseTypeValidator
if
child
block
reportGenericSchemaError
getNodeName
typeName
if
equals
ATTVAL_TEXTONLY
block
if
length
block
simpleTypeValidator
baseTypeValidator
getDatatypeValidator
ATTVAL_STRING
if
baseTypeValidator
baseTypeInfo
datatypeValidator
reportSchemaError
NotADatatype
Object
base
contentSpecType
TYPE_SIMPLE
block
if
baseIsComplexSimple
block
contentSpecType
TYPE_CHILDREN
csnType
CONTENTSPECNODE_SEQ
boolean
mixedContent
boolean
elementContent
boolean
textContent
boolean
emptyContent
left
right
boolean
hadContent
if
equals
ATTVAL_EMPTY
block
contentSpecType
TYPE_EMPTY
emptyContent
elementContent
left
if
equals
ATTVAL_MIXED
block
contentSpecType
TYPE_MIXED
mixedContent
elementContent
csnType
CONTENTSPECNODE_CHOICE
if
equals
ATTVAL_ELEMENTONLY
equals
block
elementContent
if
equals
ATTVAL_TEXTONLY
block
textContent
elementContent
if
mixedContent
block
left
addContentSpecNode
CONTENTSPECNODE_LEAF
csnType
CONTENTSPECNODE_CHOICE
boolean
seeParticle
boolean
seeOtherParticle
boolean
seeAll
for
forControl
child
getFirstChildElement
complexTypeDecl
child
child
getNextSiblingElement
child
block
int
index
hadContent
seeParticle
String
childName
getNodeName
if
equals
ELT_ELEMENT
block
if
mixedContent
elementContent
block
if
DEBUGGING
println
getAttribute
ATT_NAME
QName
eltQName
traverseElementDecl
child
index
addContentSpecNode
CONTENTSPECNODE_LEAF
localpart
uri
seeParticle
seeOtherParticle
block
reportSchemaError
EltRefOnlyInMixedElemOnly
if
equals
ELT_GROUP
block
index
traverseGroupDecl
child
seeParticle
seeOtherParticle
if
equals
ELT_ALL
block
index
traverseAll
child
seeParticle
seeAll
if
equals
ELT_CHOICE
block
index
traverseChoice
child
seeParticle
seeOtherParticle
if
equals
ELT_SEQUENCE
block
index
traverseSequence
child
seeParticle
seeOtherParticle
if
equals
ELT_ATTRIBUTE
equals
ELT_ATTRIBUTEGROUP
block
break
if
equals
ELT_ANY
block
index
traverseAny
child
seeParticle
seeOtherParticle
if
equals
ELT_ANNOTATION
block
if
equals
ELT_ANYATTRIBUTE
block
break
block
if
baseIsComplexSimple
if
equals
reportSchemaError
GenericError
Object
childName
typeName
reportSchemaError
GenericError
Object
childName
typeName
base
if
baseIsComplexSimple
seeParticle
block
reportGenericSchemaError
typeName
hadContent
left
index
contentSpecType
TYPE_SIMPLE
break
if
seeParticle
block
index
expandContentModel
index
child
if
seeAll
seeOtherParticle
block
reportGenericSchemaError
typeName
if
seeAll
block
if
left
block
left
index
if
right
block
right
index
block
left
addContentSpecNode
csnType
left
right
right
index
if
seeOtherParticle
seeAll
elementContent
mixedContent
length
length
derivedByRestriction
baseIsComplexSimple
block
contentSpecType
TYPE_SIMPLE
simpleTypeValidator
getDatatypeValidator
ATTVAL_STRING
reportGenericSchemaError
typeName
if
hadContent
right
left
addContentSpecNode
csnType
left
right
if
mixedContent
hadContent
block
left
addContentSpecNode
CONTENTSPECNODE_ZERO_OR_MORE
left
if
derivedByRestriction
baseContentSpecHandle
block
if
left
block
left
baseContentSpecHandle
left
addContentSpecNode
CONTENTSPECNODE_SEQ
baseContentSpecHandle
left
if
length
length
left
block
contentSpecType
TYPE_ANY
if
length
simpleTypeValidator
left
block
if
length
baseTypeInfo
contentType
TYPE_EMPTY
block
contentSpecType
TYPE_EMPTY
if
DEBUGGING
println
typeName
baseTypeInfo
baseContentSpecHandle
left
scopeDefined
ComplexTypeInfo
typeInfo
ComplexTypeInfo
baseComplexTypeInfo
baseTypeInfo
baseDataTypeValidator
baseTypeValidator
int
derivedByInt
if
length
block
derivedByInt
parseComplexDerivedBy
derivedBy
derivedBy
derivedByInt
scopeDefined
scopeDefined
contentSpecHandle
left
contentType
contentSpecType
datatypeValidator
simpleTypeValidator
blockSet
parseBlockSet
getAttribute
ATT_BLOCK
finalSet
parseFinalSet
getAttribute
ATT_FINAL
isAbstract
equals
ATTVAL_TRUE
int
typeNameIndex
addSymbol
typeName
int
templateElementNameIndex
addSymbol
typeName
templateElementIndex
addElementDecl
QName
templateElementNameIndex
typeNameIndex
fTargetNSURI
fTargetNSURI
fCurrentScope
scopeDefined
contentSpecType
left
simpleTypeValidator
attlistHead
getFirstAttributeDeclIndex
templateElementIndex
XMLAttributeDecl
attWildcard
Vector
anyAttDecls
Vector
for
forControl
child
getFirstChildElement
complexTypeDecl
child
child
getNextSiblingElement
child
block
String
childName
getNodeName
if
equals
ELT_ATTRIBUTE
block
if
baseIsComplexSimple
baseIsSimpleSimple
derivedByRestriction
block
reportGenericSchemaError
typeName
break
traverseAttributeDecl
child
typeInfo
if
equals
ELT_ATTRIBUTEGROUP
block
if
baseIsComplexSimple
baseIsSimpleSimple
derivedByRestriction
block
reportGenericSchemaError
typeName
break
traverseAttributeGroupDecl
child
typeInfo
anyAttDecls
if
equals
ELT_ANYATTRIBUTE
block
attWildcard
traverseAnyAttribute
child
if
attWildcard
block
XMLAttributeDecl
fromGroup
int
count
size
if
count
block
fromGroup
XMLAttributeDecl
elementAt
for
forControl
int
i
i
count
i
block
fromGroup
mergeTwoAnyAttribute
fromGroup
XMLAttributeDecl
elementAt
i
if
fromGroup
block
int
saveProcessContents
defaultType
attWildcard
mergeTwoAnyAttribute
attWildcard
fromGroup
defaultType
saveProcessContents
block
XMLAttributeDecl
baseAttWildcard
if
baseTypeInfo
attlistHead
block
int
attDefIndex
attlistHead
while
attDefIndex
block
clear
getAttributeDecl
attDefIndex
fTempAttributeDecl
if
type
TYPE_ANY_ANY
type
TYPE_ANY_LIST
type
TYPE_ANY_LOCAL
type
TYPE_ANY_OTHER
block
if
attWildcard
block
baseAttWildcard
fTempAttributeDecl
attDefIndex
getNextAttributeDeclIndex
attDefIndex
continue
int
temp
getAttributeDeclIndex
templateElementIndex
name
if
temp
block
if
derivedByRestriction
block
attDefIndex
getNextAttributeDeclIndex
attDefIndex
continue
addAttDef
templateElementIndex
name
type
enumeration
defaultType
defaultValue
datatypeValidator
list
attDefIndex
getNextAttributeDeclIndex
attDefIndex
if
attWildcard
block
if
type
block
addAttDef
templateElementIndex
name
type
enumeration
defaultType
defaultValue
datatypeValidator
list
block
if
baseAttWildcard
block
addAttDef
templateElementIndex
name
type
enumeration
defaultType
defaultValue
datatypeValidator
list
attlistHead
getFirstAttributeDeclIndex
templateElementIndex
if
startsWith
block
typeName
fTargetNSURIString
typeName
typeName
String
typeName
if
DEBUGGING
println
typeName
content
put
typeName
typeInfo
fCurrentScope
previousScope
if
isNamedType
block
pop
checkRecursingComplexType
setElementComplexTypeInfo
templateElementIndex
typeInfo
typeNameIndex
addSymbol
typeName
return
typeNameIndex
checkRecursingComplexType
if
empty
block
if
isEmpty
block
Enumeration
e
keys
while
hasMoreElements
block
QName
nameThenScope
QName
nextElement
String
typeName
String
get
nameThenScope
int
eltUriIndex
uri
int
eltNameIndex
localpart
int
enclosingScope
prefix
ComplexTypeInfo
typeInfo
ComplexTypeInfo
get
fTargetNSURIString
typeName
if
typeInfo
block
throw
Exception
block
int
elementIndex
addElementDecl
QName
eltNameIndex
eltNameIndex
eltUriIndex
enclosingScope
scopeDefined
contentType
contentSpecHandle
attlistHead
datatypeValidator
setElementComplexTypeInfo
elementIndex
typeInfo
clear
checkParticleDerivationOK
derivedTypeNode
Element
baseTypeNode
Element
expandContentModel
int
index
int
particle
Element
String
minOccurs
getAttribute
ATT_MINOCCURS
String
maxOccurs
getAttribute
ATT_MAXOCCURS
int
min
max
if
equals
block
minOccurs
if
equals
block
if
equals
block
maxOccurs
block
maxOccurs
minOccurs
int
leafIndex
index
if
equals
equals
block
if
equals
equals
block
index
addContentSpecNode
CONTENTSPECNODE_ZERO_OR_ONE
index
if
equals
equals
block
index
addContentSpecNode
CONTENTSPECNODE_ZERO_OR_MORE
index
if
equals
equals
block
index
addContentSpecNode
CONTENTSPECNODE_ONE_OR_MORE
index
if
equals
block
try
min
parseInt
minOccurs
catchClause
e
reportSchemaError
GenericError
Object
getMessage
if
min
block
index
addContentSpecNode
CONTENTSPECNODE_ONE_OR_MORE
index
for
forControl
int
i
i
min
i
block
index
addContentSpecNode
CONTENTSPECNODE_SEQ
leafIndex
index
block
try
min
parseInt
minOccurs
max
parseInt
maxOccurs
catchClause
e
reportSchemaError
GenericError
Object
getMessage
if
min
block
int
optional
addContentSpecNode
CONTENTSPECNODE_ZERO_OR_ONE
leafIndex
index
optional
for
forControl
int
i
i
max
min
i
block
index
addContentSpecNode
CONTENTSPECNODE_SEQ
index
optional
block
for
forControl
int
i
i
min
i
block
index
addContentSpecNode
CONTENTSPECNODE_SEQ
index
leafIndex
int
optional
addContentSpecNode
CONTENTSPECNODE_ZERO_OR_ONE
leafIndex
for
forControl
int
i
i
max
min
i
block
index
addContentSpecNode
CONTENTSPECNODE_SEQ
index
optional
return
index
traverseAttributeDecl
int
attrDecl
Element
typeInfo
ComplexTypeInfo
String
attNameStr
getAttribute
ATT_NAME
int
attName
addSymbol
attNameStr
String
isQName
getAttribute
ATT_FORM
DatatypeValidator
dv
int
attType
boolean
attIsList
int
dataTypeSymbol
String
ref
getAttribute
ATT_REF
String
datatype
getAttribute
ATT_TYPE
String
localpart
if
equals
block
if
getFirstChildElement
attrDecl
reportSchemaError
NoContentForRef
String
prefix
localpart
ref
int
colonptr
indexOf
if
colonptr
block
prefix
substring
colonptr
localpart
substring
colonptr
String
uriStr
resolvePrefixToURI
prefix
if
equals
fTargetNSURIString
block
addAttributeDeclFromAnotherSchema
localpart
uriStr
typeInfo
return
Element
referredAttribute
getTopLevelComponentByName
ELT_ATTRIBUTE
localpart
if
referredAttribute
block
traverseAttributeDecl
referredAttribute
typeInfo
block
reportGenericSchemaError
ref
return
if
equals
block
Element
child
getFirstChildElement
attrDecl
while
child
getNodeName
equals
ELT_SIMPLETYPE
child
getNextSiblingElement
child
if
child
getNodeName
equals
ELT_SIMPLETYPE
block
attType
TYPE_SIMPLE
dataTypeSymbol
traverseSimpleTypeDecl
child
localpart
toString
dataTypeSymbol
block
attType
TYPE_SIMPLE
localpart
dataTypeSymbol
addSymbol
localpart
localpart
toString
dataTypeSymbol
dv
getDatatypeValidator
localpart
block
String
prefix
localpart
datatype
dataTypeSymbol
addSymbol
localpart
int
colonptr
indexOf
if
colonptr
block
prefix
substring
colonptr
localpart
substring
colonptr
String
typeURI
resolvePrefixToURI
prefix
if
equals
URI_SCHEMAFORSCHEMA
length
block
dv
getDatatypeValidator
localpart
if
equals
block
attType
TYPE_ID
if
equals
block
attType
TYPE_IDREF
if
equals
block
attType
TYPE_IDREF
attIsList
if
equals
block
attType
TYPE_ENTITY
if
equals
block
attType
TYPE_ENTITY
attIsList
if
equals
block
attType
TYPE_NMTOKEN
if
equals
block
attType
TYPE_NMTOKEN
attIsList
if
equals
ELT_NOTATION
block
attType
TYPE_NOTATION
block
attType
TYPE_SIMPLE
if
dv
length
block
Element
topleveltype
getTopLevelComponentByName
ELT_SIMPLETYPE
localpart
if
topleveltype
block
traverseSimpleTypeDecl
topleveltype
dv
getDatatypeValidator
typeURI
localpart
block
reportGenericSchemaError
localpart
block
dv
getDatatypeValidator
typeURI
localpart
if
dv
equals
fTargetNSURIString
block
Element
topleveltype
getTopLevelComponentByName
ELT_SIMPLETYPE
localpart
if
topleveltype
block
traverseSimpleTypeDecl
topleveltype
dv
getDatatypeValidator
typeURI
localpart
block
reportGenericSchemaError
localpart
attType
TYPE_SIMPLE
int
attDefaultType
int
attDefaultValue
String
use
getAttribute
ATT_USE
boolean
required
equals
ATTVAL_REQUIRED
if
dv
block
reportGenericSchemaError
toString
dataTypeSymbol
if
required
block
attDefaultType
DEFAULT_TYPE_REQUIRED
block
if
equals
ATTVAL_FIXED
block
String
fixed
getAttribute
ATT_VALUE
if
equals
block
attDefaultType
DEFAULT_TYPE_FIXED
attDefaultValue
addString
fixed
if
equals
ATTVAL_DEFAULT
block
String
defaultValue
getAttribute
ATT_VALUE
if
equals
block
attDefaultType
DEFAULT_TYPE_DEFAULT
attDefaultValue
addString
defaultValue
if
equals
ATTVAL_PROHIBITED
block
attDefaultType
DEFAULT_TYPE_IMPLIED
block
attDefaultType
DEFAULT_TYPE_IMPLIED
if
attType
TYPE_SIMPLE
attDefaultValue
block
try
if
dv
validate
toString
attDefaultValue
reportSchemaError
NoValidatorFor
Object
datatype
catchClause
idve
reportSchemaError
IncorrectDefaultType
Object
getAttribute
ATT_NAME
getMessage
catchClause
e
printStackTrace
println
int
uriIndex
if
equals
ATTVAL_QUALIFIED
fAttributeDefaultQualified
isTopLevel
attrDecl
block
uriIndex
fTargetNSURI
QName
attQName
QName
attName
attName
uriIndex
if
DEBUGGING
println
toString
attName
dv
if
isTopLevel
attrDecl
block
datatypeValidator
dv
setValues
attQName
type
attType
defaultType
attDefaultType
list
attIsList
if
attDefaultValue
block
defaultValue
String
toString
attDefaultValue
put
attNameStr
XMLAttributeDecl
fTempAttributeDecl
if
typeInfo
block
addAttDef
templateElementIndex
attQName
attType
dataTypeSymbol
attDefaultType
toString
attDefaultValue
dv
attIsList
return
addAttributeDeclFromAnotherSchema
int
name
String
uriStr
String
typeInfo
ComplexTypeInfo
SchemaGrammar
aGrammar
SchemaGrammar
getGrammar
uriStr
if
uriStr
aGrammar
SchemaGrammar
block
reportGenericSchemaError
uriStr
return
Hashtable
attrRegistry
getAttirubteDeclRegistry
if
attrRegistry
block
reportGenericSchemaError
uriStr
return
XMLAttributeDecl
tempAttrDecl
XMLAttributeDecl
get
name
if
tempAttrDecl
block
reportGenericSchemaError
name
uriStr
return
if
typeInfo
block
addAttDef
templateElementIndex
name
type
defaultType
defaultValue
datatypeValidator
list
return
traverseAttributeGroupDecl
int
attrGrpDecl
Element
typeInfo
ComplexTypeInfo
anyAttDecls
Vector
int
attGrpName
addSymbol
getAttribute
ATT_NAME
String
ref
getAttribute
ATT_REF
int
attType
int
enumeration
if
equals
block
if
getFirstChildElement
attrGrpDecl
reportSchemaError
NoContentForRef
String
prefix
String
localpart
ref
int
colonptr
indexOf
if
colonptr
block
prefix
substring
colonptr
localpart
substring
colonptr
String
uriStr
resolvePrefixToURI
prefix
if
equals
fTargetNSURIString
block
traverseAttributeGroupDeclFromAnotherSchema
localpart
uriStr
typeInfo
anyAttDecls
return
Element
referredAttrGrp
getTopLevelComponentByName
ELT_ATTRIBUTEGROUP
localpart
if
referredAttrGrp
block
traverseAttributeGroupDecl
referredAttrGrp
typeInfo
anyAttDecls
block
reportGenericSchemaError
ref
return
for
forControl
Element
child
getFirstChildElement
attrGrpDecl
child
child
getNextSiblingElement
child
block
if
getNodeName
equals
ELT_ATTRIBUTE
block
traverseAttributeDecl
child
typeInfo
if
getNodeName
equals
ELT_ATTRIBUTEGROUP
block
traverseAttributeGroupDecl
child
typeInfo
anyAttDecls
if
getNodeName
equals
ELT_ANYATTRIBUTE
block
addElement
traverseAnyAttribute
child
break
if
getNodeName
equals
ELT_ANNOTATION
block
return
traverseAttributeGroupDeclFromAnotherSchema
int
attGrpName
String
uriStr
String
typeInfo
ComplexTypeInfo
anyAttDecls
Vector
SchemaGrammar
aGrammar
SchemaGrammar
getGrammar
uriStr
if
uriStr
aGrammar
aGrammar
SchemaGrammar
block
reportGenericSchemaError
uriStr
return
Element
attGrpDecl
Element
get
Object
attGrpName
if
attGrpDecl
block
reportGenericSchemaError
attGrpName
uriStr
return
NamespacesScope
saveNSMapping
fNamespacesScope
int
saveTargetNSUri
fTargetNSURI
fTargetNSURI
addSymbol
getTargetNamespaceURI
fNamespacesScope
getNamespacesScope
int
attType
int
enumeration
for
forControl
Element
child
getFirstChildElement
attGrpDecl
child
child
getNextSiblingElement
child
block
if
getNodeName
equals
ELT_ATTRIBUTE
block
String
childAttName
getAttribute
ATT_NAME
if
length
block
Hashtable
attDeclRegistry
getAttirubteDeclRegistry
if
attDeclRegistry
block
if
get
Object
childAttName
block
addAttributeDeclFromAnotherSchema
childAttName
uriStr
typeInfo
return
traverseAttributeDecl
child
typeInfo
if
getNodeName
equals
ELT_ATTRIBUTEGROUP
block
traverseAttributeGroupDecl
child
typeInfo
anyAttDecls
if
getNodeName
equals
ELT_ANYATTRIBUTE
block
addElement
traverseAnyAttribute
child
break
if
getNodeName
equals
ELT_ANNOTATION
block
fNamespacesScope
saveNSMapping
fTargetNSURI
saveTargetNSUri
return
traverseElementDecl
QName
elementDecl
Element
int
contentSpecType
int
contentSpecNodeIndex
int
typeNameIndex
int
scopeDefined
DatatypeValidator
dv
String
name
getAttribute
ATT_NAME
if
DEBUGGING
println
name
String
ref
getAttribute
ATT_REF
String
type
getAttribute
ATT_TYPE
String
minOccurs
getAttribute
ATT_MINOCCURS
String
maxOccurs
getAttribute
ATT_MAXOCCURS
String
dflt
getAttribute
ATT_DEFAULT
String
fixed
getAttribute
ATT_FIXED
String
equivClass
getAttribute
ATT_EQUIVCLASS
String
isQName
getAttribute
ATT_FORM
String
fromAnotherSchema
if
isTopLevel
elementDecl
block
int
nameIndex
addSymbol
name
int
eltKey
getElementDeclIndex
fTargetNSURI
nameIndex
TOP_LEVEL_SCOPE
if
eltKey
block
return
QName
nameIndex
nameIndex
fTargetNSURI
int
blockSet
parseBlockSet
getAttribute
ATT_BLOCK
int
finalSet
parseFinalSet
getAttribute
ATT_FINAL
boolean
isNullable
getAttribute
equals
ATTVAL_TRUE
ATT_NULLABLE
boolean
isAbstract
getAttribute
equals
ATTVAL_TRUE
ATT_ABSTRACT
int
elementMiscFlags
if
isNullable
block
elementMiscFlags
NULLABLE
if
isAbstract
block
elementMiscFlags
ABSTRACT
int
attrCount
if
equals
attrCount
if
equals
attrCount
if
attrCount
reportSchemaError
OneOfTypeRefArchRef
if
equals
block
if
getFirstChildElement
elementDecl
reportSchemaError
NoContentForRef
String
prefix
String
localpart
ref
int
colonptr
indexOf
if
colonptr
block
prefix
substring
colonptr
localpart
substring
colonptr
int
localpartIndex
addSymbol
localpart
String
uriString
resolvePrefixToURI
prefix
QName
eltName
QName
prefix
addSymbol
prefix
localpartIndex
addSymbol
ref
uriString
addSymbol
uriString
if
equals
fTargetNSURIString
block
return
eltName
int
elementIndex
getElementDeclIndex
eltName
TOP_LEVEL_SCOPE
if
elementIndex
block
Element
targetElement
getTopLevelComponentByName
ELT_ELEMENT
localpart
if
targetElement
block
reportGenericSchemaError
localpart
return
eltName
block
return
eltName
Element
equivClassElementDecl
int
equivClassElementDeclIndex
boolean
noErrorSoFar
String
equivClassUri
String
equivClassLocalpart
String
equivClassFullName
ComplexTypeInfo
equivClassEltTypeInfo
DatatypeValidator
equivClassEltDV
if
length
block
equivClassUri
resolvePrefixToURI
getPrefix
equivClass
equivClassLocalpart
getLocalPart
equivClass
equivClassFullName
equivClassUri
equivClassLocalpart
if
equals
fTargetNSURIString
block
equivClassEltTypeInfo
getElementDeclTypeInfoFromNS
equivClassUri
equivClassLocalpart
if
equivClassEltTypeInfo
block
equivClassEltDV
getElementDeclTypeValidatorFromNS
equivClassUri
equivClassLocalpart
if
equivClassEltDV
block
noErrorSoFar
reportGenericSchemaError
equivClassLocalpart
equivClassUri
block
equivClassElementDecl
getTopLevelComponentByName
ELT_ELEMENT
equivClassLocalpart
if
equivClassElementDecl
block
equivClassElementDeclIndex
getElementDeclIndex
fTargetNSURI
getLocalPartIndex
equivClass
TOP_LEVEL_SCOPE
if
equivClassElementDeclIndex
block
noErrorSoFar
reportGenericSchemaError
equivClass
name
block
equivClassElementDeclIndex
getElementDeclIndex
fTargetNSURI
getLocalPartIndex
equivClass
TOP_LEVEL_SCOPE
if
equivClassElementDeclIndex
block
traverseElementDecl
equivClassElementDecl
equivClassElementDeclIndex
getElementDeclIndex
fTargetNSURI
getLocalPartIndex
equivClass
TOP_LEVEL_SCOPE
if
equivClassElementDeclIndex
block
equivClassEltTypeInfo
getElementComplexTypeInfo
equivClassElementDeclIndex
if
equivClassEltTypeInfo
block
getElementDecl
equivClassElementDeclIndex
fTempElementDecl
equivClassEltDV
datatypeValidator
if
equivClassEltDV
block
noErrorSoFar
reportGenericSchemaError
equivClassLocalpart
equivClassUri
ComplexTypeInfo
typeInfo
Element
child
getFirstChildElement
elementDecl
while
child
getNodeName
equals
ELT_ANNOTATION
child
getNextSiblingElement
child
boolean
haveAnonType
if
child
block
String
childName
getNodeName
if
equals
ELT_COMPLEXTYPE
block
if
getAttribute
length
ATT_NAME
block
noErrorSoFar
reportGenericSchemaError
name
typeNameIndex
traverseComplexTypeDecl
child
if
typeNameIndex
block
typeInfo
ComplexTypeInfo
get
toString
typeNameIndex
block
noErrorSoFar
reportGenericSchemaError
name
haveAnonType
if
equals
ELT_SIMPLETYPE
block
if
getAttribute
length
ATT_NAME
block
noErrorSoFar
reportGenericSchemaError
name
typeNameIndex
traverseSimpleTypeDecl
child
if
typeNameIndex
block
dv
getDatatypeValidator
toString
typeNameIndex
block
noErrorSoFar
reportGenericSchemaError
name
contentSpecType
TYPE_SIMPLE
haveAnonType
if
equals
block
contentSpecType
TYPE_ANY
contentSpecNodeIndex
block
println
if
haveAnonType
length
block
noErrorSoFar
reportGenericSchemaError
name
if
equals
block
if
equivClassElementDecl
block
checkEquivClassOK
elementDecl
equivClassElementDecl
String
prefix
String
localpart
type
int
colonptr
indexOf
if
colonptr
block
prefix
substring
colonptr
localpart
substring
colonptr
String
typeURI
resolvePrefixToURI
prefix
if
equals
fTargetNSURIString
equals
URI_SCHEMAFORSCHEMA
length
block
fromAnotherSchema
typeURI
typeInfo
getTypeInfoFromNS
typeURI
localpart
if
typeInfo
block
dv
getTypeValidatorFromNS
typeURI
localpart
if
dv
block
noErrorSoFar
reportGenericSchemaError
localpart
typeURI
block
typeInfo
ComplexTypeInfo
get
typeURI
localpart
if
typeInfo
block
dv
getDatatypeValidator
typeURI
localpart
if
dv
if
equals
URI_SCHEMAFORSCHEMA
equals
URI_SCHEMAFORSCHEMA
block
noErrorSoFar
reportGenericSchemaError
typeURI
localpart
block
Element
topleveltype
getTopLevelComponentByName
ELT_COMPLEXTYPE
localpart
if
topleveltype
block
if
search
Object
localpart
block
int
uriInd
if
equals
ATTVAL_QUALIFIED
fElementDefaultQualified
block
uriInd
fTargetNSURI
int
nameIndex
addSymbol
name
QName
tempQName
QName
fCurrentScope
nameIndex
nameIndex
uriInd
put
tempQName
localpart
return
QName
nameIndex
nameIndex
uriInd
block
typeNameIndex
traverseComplexTypeDecl
topleveltype
typeInfo
ComplexTypeInfo
get
toString
typeNameIndex
block
topleveltype
getTopLevelComponentByName
ELT_SIMPLETYPE
localpart
if
topleveltype
block
typeNameIndex
traverseSimpleTypeDecl
topleveltype
dv
getDatatypeValidator
typeURI
localpart
block
noErrorSoFar
reportGenericSchemaError
typeURI
localpart
if
haveAnonType
block
if
equivClassElementDecl
block
checkEquivClassOK
elementDecl
equivClassElementDecl
block
if
typeInfo
dv
typeInfo
equivClassEltTypeInfo
if
typeInfo
dv
dv
equivClassEltDV
if
typeInfo
dv
block
if
noErrorSoFar
block
contentSpecType
TYPE_ANY
block
noErrorSoFar
reportGenericSchemaError
name
if
typeInfo
block
contentSpecNodeIndex
contentSpecHandle
contentSpecType
contentType
scopeDefined
scopeDefined
dv
datatypeValidator
if
dv
block
contentSpecType
TYPE_SIMPLE
child
getFirstChildElement
elementDecl
Vector
idConstraints
while
child
block
String
childName
getNodeName
child
getNextSiblingElement
child
int
elementNameIndex
addSymbol
name
int
localpartIndex
elementNameIndex
int
uriIndex
int
enclosingScope
fCurrentScope
if
equals
ATTVAL_QUALIFIED
fElementDefaultQualified
block
uriIndex
fTargetNSURI
if
isTopLevel
elementDecl
block
uriIndex
fTargetNSURI
enclosingScope
TOP_LEVEL_SCOPE
int
existSuchElementIndex
getElementDeclIndex
uriIndex
localpartIndex
enclosingScope
if
existSuchElementIndex
block
getElementDecl
existSuchElementIndex
fTempElementDecl
DatatypeValidator
edv
datatypeValidator
ComplexTypeInfo
eTypeInfo
getElementComplexTypeInfo
existSuchElementIndex
if
eTypeInfo
eTypeInfo
typeInfo
edv
edv
dv
block
noErrorSoFar
reportGenericSchemaError
toString
localpartIndex
QName
eltQName
QName
localpartIndex
elementNameIndex
uriIndex
int
attrListHead
if
typeInfo
block
attrListHead
attlistHead
int
elementIndex
addElementDecl
eltQName
enclosingScope
scopeDefined
contentSpecType
contentSpecNodeIndex
attrListHead
dv
if
DEBUGGING
block
println
elementIndex
toString
uri
toString
localpart
type
contentSpecType
contentSpecNodeIndex
enclosingScope
scopeDefined
if
typeInfo
block
setElementComplexTypeInfo
elementIndex
typeInfo
block
setElementComplexTypeInfo
elementIndex
typeInfo
setElementFromAnotherSchemaURI
elementIndex
fromAnotherSchema
setElementDeclBlockSet
elementIndex
blockSet
setElementDeclFinalSet
elementIndex
finalSet
setElementDeclMiscFlags
elementIndex
elementMiscFlags
setElementDeclEquivClassElementFullName
elementIndex
equivClassFullName
return
eltQName
getLocalPartIndex
int
fullName
String
int
colonAt
indexOf
String
localpart
fullName
if
colonAt
block
localpart
substring
colonAt
return
addSymbol
localpart
getLocalPart
String
fullName
String
int
colonAt
indexOf
String
localpart
fullName
if
colonAt
block
localpart
substring
colonAt
return
localpart
getPrefixIndex
int
fullName
String
int
colonAt
indexOf
String
prefix
if
colonAt
block
prefix
substring
colonAt
return
addSymbol
prefix
getPrefix
String
fullName
String
int
colonAt
indexOf
String
prefix
if
colonAt
block
prefix
substring
colonAt
return
prefix
checkEquivClassOK
elementDecl
Element
equivClassElementDecl
Element
getTopLevelComponentByName
Element
componentCategory
String
name
String
Element
child
getFirstChildElement
fSchemaRootElement
if
child
block
return
while
child
block
if
getNodeName
equals
componentCategory
block
if
getAttribute
equals
name
ATT_NAME
block
return
child
child
getNextSiblingElement
child
return
isTopLevel
boolean
component
Element
if
getParentNode
getNodeName
endsWith
ELT_SCHEMA
block
return
return
getTypeValidatorFromNS
DatatypeValidator
newSchemaURI
String
localpart
String
return
getDatatypeValidator
newSchemaURI
localpart
getTypeInfoFromNS
ComplexTypeInfo
newSchemaURI
String
localpart
String
Grammar
grammar
getGrammar
newSchemaURI
if
grammar
grammar
SchemaGrammar
block
SchemaGrammar
sGrammar
SchemaGrammar
grammar
ComplexTypeInfo
typeInfo
ComplexTypeInfo
getComplexTypeRegistry
get
newSchemaURI
localpart
return
typeInfo
block
reportGenericSchemaError
newSchemaURI
return
getElementDeclTypeValidatorFromNS
DatatypeValidator
newSchemaURI
String
localpart
String
Grammar
grammar
getGrammar
newSchemaURI
if
grammar
grammar
SchemaGrammar
block
SchemaGrammar
sGrammar
SchemaGrammar
grammar
int
eltIndex
getElementDeclIndex
addSymbol
newSchemaURI
addSymbol
localpart
TOP_LEVEL_SCOPE
DatatypeValidator
dv
if
eltIndex
block
getElementDecl
eltIndex
fTempElementDecl
dv
datatypeValidator
block
reportGenericSchemaError
localpart
newSchemaURI
return
dv
block
reportGenericSchemaError
newSchemaURI
return
getElementDeclTypeInfoFromNS
ComplexTypeInfo
newSchemaURI
String
localpart
String
Grammar
grammar
getGrammar
newSchemaURI
if
grammar
grammar
SchemaGrammar
block
SchemaGrammar
sGrammar
SchemaGrammar
grammar
int
eltIndex
getElementDeclIndex
addSymbol
newSchemaURI
addSymbol
localpart
TOP_LEVEL_SCOPE
ComplexTypeInfo
typeInfo
if
eltIndex
block
typeInfo
getElementComplexTypeInfo
eltIndex
block
reportGenericSchemaError
localpart
newSchemaURI
return
typeInfo
block
reportGenericSchemaError
newSchemaURI
return
traverseGroupDecl
int
groupDecl
Element
String
groupName
getAttribute
ATT_NAME
String
ref
getAttribute
ATT_REF
if
equals
block
if
getFirstChildElement
groupDecl
reportSchemaError
NoContentForRef
String
prefix
String
localpart
ref
int
colonptr
indexOf
if
colonptr
block
prefix
substring
colonptr
localpart
substring
colonptr
int
localpartIndex
addSymbol
localpart
String
uriStr
resolvePrefixToURI
prefix
if
equals
fTargetNSURIString
block
return
traverseGroupDeclFromAnotherSchema
localpart
uriStr
int
contentSpecIndex
Element
referredGroup
getTopLevelComponentByName
ELT_GROUP
localpart
if
referredGroup
block
reportGenericSchemaError
localpart
throw
Exception
localpart
block
contentSpecIndex
traverseGroupDecl
referredGroup
return
contentSpecIndex
boolean
traverseElt
if
fCurrentScope
TOP_LEVEL_SCOPE
block
traverseElt
Element
child
getFirstChildElement
groupDecl
while
child
getNodeName
equals
ELT_ANNOTATION
child
getNextSiblingElement
child
int
contentSpecType
int
csnType
int
allChildren
int
allChildCount
csnType
CONTENTSPECNODE_SEQ
contentSpecType
TYPE_CHILDREN
int
left
int
right
boolean
hadContent
boolean
seeAll
boolean
seeParticle
for
forControl
child
child
getNextSiblingElement
child
block
int
index
hadContent
boolean
illegalChild
String
childName
getNodeName
if
equals
ELT_ELEMENT
block
QName
eltQName
traverseElementDecl
child
index
addContentSpecNode
CONTENTSPECNODE_LEAF
localpart
uri
seeParticle
if
equals
ELT_GROUP
block
index
traverseGroupDecl
child
seeParticle
if
equals
ELT_ALL
block
index
traverseAll
child
seeAll
if
equals
ELT_CHOICE
block
index
traverseChoice
child
seeParticle
if
equals
ELT_SEQUENCE
block
index
traverseSequence
child
seeParticle
if
equals
ELT_ANY
block
index
traverseAny
child
seeParticle
block
illegalChild
reportSchemaError
GroupContentRestricted
Object
childName
if
illegalChild
block
index
expandContentModel
index
child
if
seeParticle
seeAll
block
reportSchemaError
GroupContentRestricted
Object
childName
if
left
block
left
index
if
right
block
right
index
block
left
addContentSpecNode
csnType
left
right
right
index
if
hadContent
right
left
addContentSpecNode
csnType
left
right
return
left
traverseGroupDeclFromAnotherSchema
int
groupName
String
uriStr
String
SchemaGrammar
aGrammar
SchemaGrammar
getGrammar
uriStr
if
uriStr
aGrammar
aGrammar
SchemaGrammar
block
reportGenericSchemaError
uriStr
groupName
return
Element
groupDecl
Element
get
Object
groupName
if
groupDecl
block
reportGenericSchemaError
groupName
uriStr
return
NamespacesScope
saveNSMapping
fNamespacesScope
int
saveTargetNSUri
fTargetNSURI
fTargetNSURI
addSymbol
getTargetNamespaceURI
fNamespacesScope
getNamespacesScope
boolean
traverseElt
if
fCurrentScope
TOP_LEVEL_SCOPE
block
traverseElt
Element
child
getFirstChildElement
groupDecl
while
child
getNodeName
equals
ELT_ANNOTATION
child
getNextSiblingElement
child
int
contentSpecType
int
csnType
int
allChildren
int
allChildCount
csnType
CONTENTSPECNODE_SEQ
contentSpecType
TYPE_CHILDREN
int
left
int
right
boolean
hadContent
for
forControl
child
child
getNextSiblingElement
child
block
int
index
hadContent
boolean
seeParticle
String
childName
getNodeName
int
childNameIndex
addSymbol
childName
String
formAttrVal
getAttribute
ATT_FORM
if
equals
ELT_ELEMENT
block
QName
eltQName
traverseElementDecl
child
index
addContentSpecNode
CONTENTSPECNODE_LEAF
localpart
uri
seeParticle
if
equals
ELT_GROUP
block
index
traverseGroupDecl
child
seeParticle
if
equals
ELT_ALL
block
index
traverseAll
child
seeParticle
if
equals
ELT_CHOICE
block
index
traverseChoice
child
seeParticle
if
equals
ELT_SEQUENCE
block
index
traverseSequence
child
seeParticle
if
equals
ELT_ANY
block
index
traverseAny
child
seeParticle
block
reportSchemaError
GroupContentRestricted
Object
childName
if
seeParticle
block
index
expandContentModel
index
child
if
left
block
left
index
if
right
block
right
index
block
left
addContentSpecNode
csnType
left
right
right
index
if
hadContent
right
left
addContentSpecNode
csnType
left
right
fNamespacesScope
saveNSMapping
fTargetNSURI
saveTargetNSUri
return
left
traverseSequence
int
sequenceDecl
Element
Element
child
getFirstChildElement
sequenceDecl
while
child
getNodeName
equals
ELT_ANNOTATION
child
getNextSiblingElement
child
int
contentSpecType
int
csnType
csnType
CONTENTSPECNODE_SEQ
contentSpecType
TYPE_CHILDREN
int
left
int
right
boolean
hadContent
for
forControl
child
child
getNextSiblingElement
child
block
int
index
hadContent
boolean
seeParticle
String
childName
getNodeName
if
equals
ELT_ELEMENT
block
QName
eltQName
traverseElementDecl
child
index
addContentSpecNode
CONTENTSPECNODE_LEAF
localpart
uri
seeParticle
if
equals
ELT_GROUP
block
index
traverseGroupDecl
child
seeParticle
if
equals
ELT_CHOICE
block
index
traverseChoice
child
seeParticle
if
equals
ELT_SEQUENCE
block
index
traverseSequence
child
seeParticle
if
equals
ELT_ANY
block
index
traverseAny
child
seeParticle
block
reportSchemaError
GroupContentRestricted
Object
childName
if
seeParticle
block
index
expandContentModel
index
child
if
left
block
left
index
if
right
block
right
index
block
left
addContentSpecNode
csnType
left
right
right
index
if
hadContent
right
left
addContentSpecNode
csnType
left
right
return
left
traverseChoice
int
choiceDecl
Element
Element
child
getFirstChildElement
choiceDecl
while
child
getNodeName
equals
ELT_ANNOTATION
child
getNextSiblingElement
child
int
contentSpecType
int
csnType
csnType
CONTENTSPECNODE_CHOICE
contentSpecType
TYPE_CHILDREN
int
left
int
right
boolean
hadContent
for
forControl
child
child
getNextSiblingElement
child
block
int
index
hadContent
boolean
seeParticle
String
childName
getNodeName
if
equals
ELT_ELEMENT
block
QName
eltQName
traverseElementDecl
child
index
addContentSpecNode
CONTENTSPECNODE_LEAF
localpart
uri
seeParticle
if
equals
ELT_GROUP
block
index
traverseGroupDecl
child
seeParticle
if
equals
ELT_CHOICE
block
index
traverseChoice
child
seeParticle
if
equals
ELT_SEQUENCE
block
index
traverseSequence
child
seeParticle
if
equals
ELT_ANY
block
index
traverseAny
child
seeParticle
block
reportSchemaError
GroupContentRestricted
Object
childName
if
seeParticle
block
index
expandContentModel
index
child
if
left
block
left
index
if
right
block
right
index
block
left
addContentSpecNode
csnType
left
right
right
index
if
hadContent
right
left
addContentSpecNode
csnType
left
right
return
left
traverseAll
int
allDecl
Element
Element
child
getFirstChildElement
allDecl
while
child
getNodeName
equals
ELT_ANNOTATION
child
getNextSiblingElement
child
int
allChildren
int
allChildCount
int
left
for
forControl
child
child
getNextSiblingElement
child
block
int
index
boolean
seeParticle
String
childName
getNodeName
if
equals
ELT_ELEMENT
block
QName
eltQName
traverseElementDecl
child
index
addContentSpecNode
CONTENTSPECNODE_LEAF
localpart
uri
seeParticle
if
equals
ELT_GROUP
block
index
traverseGroupDecl
child
seeParticle
if
equals
ELT_CHOICE
block
index
traverseChoice
child
seeParticle
if
equals
ELT_SEQUENCE
block
index
traverseSequence
child
seeParticle
if
equals
ELT_ANY
block
index
traverseAny
child
seeParticle
block
reportSchemaError
GroupContentRestricted
Object
childName
if
seeParticle
block
index
expandContentModel
index
child
try
allChildren
allChildCount
index
catchClause
ne
allChildren
int
allChildren
allChildCount
index
catchClause
ae
int
newArray
int
length
arraycopy
allChildren
newArray
length
allChildren
allChildCount
index
allChildCount
left
buildAllModel
allChildren
allChildCount
return
left
buildAllModel
int
children
int
count
int
if
count
block
XMLContentSpec
choice
XMLContentSpec
type
CONTENTSPECNODE_CHOICE
value
otherValue
int
exactChildren
int
count
arraycopy
children
exactChildren
count
sort
exactChildren
count
int
index
buildAllModel
exactChildren
choice
return
index
if
count
block
return
children
return
buildAllModel
int
src
int
offset
int
choice
XMLContentSpec
if
length
offset
block
int
seqIndex
createSeq
src
if
value
block
value
seqIndex
block
if
otherValue
block
value
addContentSpecNode
type
value
otherValue
otherValue
seqIndex
swap
src
offset
offset
seqIndex
createSeq
src
if
value
block
value
seqIndex
block
if
otherValue
block
value
addContentSpecNode
type
value
otherValue
otherValue
seqIndex
return
addContentSpecNode
type
value
otherValue
for
forControl
int
i
offset
i
length
i
block
value
buildAllModel
src
offset
choice
otherValue
sort
src
offset
length
offset
shift
src
offset
i
int
choiceIndex
buildAllModel
src
offset
choice
sort
src
offset
length
offset
return
choiceIndex
createSeq
int
src
int
int
left
src
int
right
src
for
forControl
int
i
i
length
i
block
left
addContentSpecNode
CONTENTSPECNODE_SEQ
left
right
right
src
i
return
addContentSpecNode
CONTENTSPECNODE_SEQ
left
right
shift
src
int
pos
int
offset
int
int
temp
src
offset
for
forControl
int
i
offset
i
pos
i
block
src
i
src
i
src
pos
temp
sort
src
int
offset
int
length
int
for
forControl
int
i
offset
i
offset
length
i
block
int
lowest
i
for
forControl
int
j
i
j
offset
length
j
block
if
src
j
src
lowest
block
lowest
j
if
lowest
i
block
int
temp
src
i
src
i
src
lowest
src
lowest
temp
swap
src
int
i
int
j
int
int
temp
src
i
src
i
src
j
src
j
temp
traverseWildcardDecl
int
wildcardDecl
Element
int
wildcardID
addSymbol
getAttribute
ATTVAL_ID
int
wildcardMaxOccurs
addSymbol
getAttribute
ATT_MAXOCCURS
int
wildcardMinOccurs
addSymbol
getAttribute
ATT_MINOCCURS
int
wildcardNamespace
addSymbol
getAttribute
ATT_NAMESPACE
int
wildcardProcessContents
addSymbol
getAttribute
ATT_PROCESSCONTENTS
int
wildcardContent
addSymbol
getAttribute
ATT_CONTENT
return
parseInt
int
intString
String
if
equals
block
return
INFINITY
block
return
parseInt
intString
parseSimpleDerivedBy
int
derivedByString
String
if
equals
ATTVAL_LIST
block
return
LIST
if
equals
ATTVAL_RESTRICTION
block
return
RESTRICTION
block
reportGenericSchemaError
return
parseComplexDerivedBy
int
derivedByString
String
if
equals
ATTVAL_EXTENSION
block
return
EXTENSION
if
equals
ATTVAL_RESTRICTION
block
return
RESTRICTION
block
reportGenericSchemaError
return
parseSimpleFinal
int
finalString
String
if
equals
ATTVAL_POUNDALL
block
return
ENUMERATION
RESTRICTION
LIST
REPRODUCTION
block
int
enumerate
int
restrict
int
list
int
reproduce
StringTokenizer
t
StringTokenizer
finalString
while
hasMoreTokens
block
String
token
nextToken
if
equals
ATTVAL_RESTRICTION
block
if
restrict
block
restrict
RESTRICTION
block
reportGenericSchemaError
if
equals
ATTVAL_LIST
block
if
list
block
list
LIST
block
reportGenericSchemaError
block
reportGenericSchemaError
finalString
return
enumerate
restrict
list
reproduce
parseComplexContent
int
contentString
String
if
equals
ATTVAL_EMPTY
block
return
TYPE_EMPTY
if
equals
ATTVAL_ELEMENTONLY
block
return
TYPE_CHILDREN
if
equals
ATTVAL_TEXTONLY
block
return
TYPE_SIMPLE
if
equals
ATTVAL_MIXED
block
return
TYPE_MIXED
block
reportGenericSchemaError
return
parseDerivationSet
int
finalString
String
if
equals
block
return
EXTENSION
RESTRICTION
REPRODUCTION
block
int
extend
int
restrict
int
reproduce
StringTokenizer
t
StringTokenizer
finalString
while
hasMoreTokens
block
String
token
nextToken
if
equals
ATTVAL_EXTENSION
block
if
extend
block
extend
EXTENSION
block
reportGenericSchemaError
if
equals
ATTVAL_RESTRICTION
block
if
restrict
block
restrict
RESTRICTION
block
reportGenericSchemaError
block
reportGenericSchemaError
finalString
return
extend
restrict
reproduce
parseBlockSet
int
finalString
String
if
equals
block
return
EQUIVCLASS
EXTENSION
LIST
RESTRICTION
REPRODUCTION
block
int
extend
int
restrict
int
reproduce
StringTokenizer
t
StringTokenizer
finalString
while
hasMoreTokens
block
String
token
nextToken
if
equals
ATTVAL_EQUIVCLASS
block
if
extend
block
extend
EQUIVCLASS
block
reportGenericSchemaError
if
equals
ATTVAL_EXTENSION
block
if
extend
block
extend
EXTENSION
block
reportGenericSchemaError
if
equals
ATTVAL_LIST
block
if
extend
block
extend
LIST
block
reportGenericSchemaError
if
equals
ATTVAL_RESTRICTION
block
if
restrict
block
restrict
RESTRICTION
block
reportGenericSchemaError
block
reportGenericSchemaError
finalString
return
extend
restrict
reproduce
parseFinalSet
int
finalString
String
if
equals
block
return
EQUIVCLASS
EXTENSION
LIST
RESTRICTION
REPRODUCTION
block
int
extend
int
restrict
int
reproduce
StringTokenizer
t
StringTokenizer
finalString
while
hasMoreTokens
block
String
token
nextToken
if
equals
ATTVAL_EQUIVCLASS
block
if
extend
block
extend
EQUIVCLASS
block
reportGenericSchemaError
if
equals
ATTVAL_EXTENSION
block
if
extend
block
extend
EXTENSION
block
reportGenericSchemaError
if
equals
ATTVAL_LIST
block
if
extend
block
extend
LIST
block
reportGenericSchemaError
if
equals
ATTVAL_RESTRICTION
block
if
restrict
block
restrict
RESTRICTION
block
reportGenericSchemaError
block
reportGenericSchemaError
finalString
return
extend
restrict
reproduce
reportGenericSchemaError
error
String
if
fErrorReporter
block
println
error
block
reportSchemaError
GenericError
Object
error
reportSchemaError
major
int
args
Object
if
fErrorReporter
block
println
fgMessageKeys
major
for
forControl
int
i
i
length
i
block
println
String
args
i
block
reportError
getLocator
SCHEMA_DOMAIN
major
MSG_NONE
args
ERRORTYPE_RECOVERABLE_ERROR
main
args
String
if
length
block
println
exit
DOMParser
parser
DOMParser
ignorableWhitespace
ch
char
start
int
length
int
ignorableWhitespace
dataIdx
int
setEntityResolver
Resolver
setErrorHandler
ErrorHandler
try
setFeature
setFeature
catchClause
e
printStackTrace
catchClause
e
printStackTrace
try
parse
args
catchClause
e
printStackTrace
catchClause
e
printStackTrace
Document
document
getDocument
OutputFormat
format
OutputFormat
document
java
io
StringWriter
outWriter
java
io
StringWriter
XMLSerializer
serial
XMLSerializer
outWriter
format
TraverseSchema
tst
try
Element
root
getDocumentElement
tst
TraverseSchema
root
StringPool
SchemaGrammar
GrammarResolver
GrammarResolverImpl
catchClause
e
printStackTrace
err
getDocument
Resolver
String
SYSTEM
String
PATH
resolveEntity
InputSource
publicId
String
systemId
String
for
forControl
int
i
i
length
i
block
if
equals
SYSTEM
i
block
InputSource
source
InputSource
getClass
getResourceAsStream
PATH
i
setPublicId
publicId
setSystemId
systemId
return
source
return
EntityResolver
ErrorHandler
warning
ex
SAXParseException
println
getLocationString
ex
getMessage
error
ex
SAXParseException
println
getLocationString
ex
getMessage
fatalError
ex
SAXParseException
println
getLocationString
ex
getMessage
throw
ex
getLocationString
String
ex
SAXParseException
StringBuffer
str
StringBuffer
String
systemId_
getSystemId
if
systemId_
block
int
index
lastIndexOf
if
index
systemId_
substring
index
append
systemId_
append
append
getLineNumber
append
append
getColumnNumber
return
toString
org
xml
sax
ErrorHandler
NamespacesScope
NamespacesHandler
