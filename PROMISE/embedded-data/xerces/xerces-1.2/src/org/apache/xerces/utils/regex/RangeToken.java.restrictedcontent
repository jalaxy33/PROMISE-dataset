RangeToken
int
ranges
boolean
sorted
boolean
compacted
RangeToken
icaseCache
int
map
int
nonMapIndex
RangeToken
type
int
type
setSorted
addRange
start
int
end
int
icaseCache
int
r1
r2
if
start
end
block
r1
start
r2
end
block
r1
end
r2
start
int
pos
if
ranges
block
ranges
int
ranges
r1
ranges
r2
setSorted
block
pos
ranges
length
if
ranges
pos
r1
block
ranges
pos
r2
return
int
temp
int
pos
arraycopy
ranges
temp
pos
ranges
temp
if
ranges
pos
r1
setSorted
ranges
pos
r1
ranges
pos
r2
if
sorted
sortRanges
isSorted
boolean
return
sorted
setSorted
sort
boolean
sorted
sort
if
sort
compacted
isCompacted
boolean
return
compacted
setCompacted
compacted
sortRanges
if
isSorted
return
if
ranges
return
for
forControl
int
i
ranges
length
i
i
block
for
forControl
int
j
j
i
j
block
if
ranges
j
ranges
j
ranges
j
ranges
j
ranges
j
ranges
j
block
int
tmp
tmp
ranges
j
ranges
j
ranges
j
ranges
j
tmp
tmp
ranges
j
ranges
j
ranges
j
ranges
j
tmp
setSorted
compactRanges
boolean
DEBUG
if
ranges
ranges
length
return
if
isCompacted
return
int
base
int
target
while
target
ranges
length
block
if
base
target
block
ranges
base
ranges
target
ranges
base
ranges
target
target
int
baseend
ranges
base
while
target
ranges
length
block
if
baseend
ranges
target
break
if
baseend
ranges
target
block
if
DEBUG
println
ranges
base
ranges
base
ranges
target
ranges
target
ranges
base
ranges
target
ranges
base
ranges
target
baseend
ranges
base
target
if
baseend
ranges
target
block
if
DEBUG
println
ranges
base
ranges
base
ranges
target
ranges
target
ranges
base
ranges
base
target
if
baseend
ranges
target
block
if
DEBUG
println
ranges
base
ranges
base
ranges
target
ranges
target
ranges
base
ranges
target
ranges
base
ranges
target
baseend
ranges
base
target
block
throw
RuntimeException
ranges
base
ranges
base
ranges
target
ranges
target
base
if
base
ranges
length
block
int
result
int
base
arraycopy
ranges
result
base
ranges
result
setCompacted
mergeRanges
token
Token
if
type
type
throw
IllegalArgumentException
type
RangeToken
tok
RangeToken
token
sortRanges
sortRanges
if
ranges
return
icaseCache
setSorted
if
ranges
block
ranges
int
length
arraycopy
ranges
ranges
length
return
int
result
int
ranges
length
length
for
forControl
int
i
j
k
i
ranges
length
j
length
block
if
i
ranges
length
block
result
k
ranges
j
result
k
ranges
j
if
j
length
block
result
k
ranges
i
result
k
ranges
i
if
ranges
j
ranges
i
ranges
j
ranges
i
ranges
j
ranges
i
block
result
k
ranges
j
result
k
ranges
j
block
result
k
ranges
i
result
k
ranges
i
ranges
result
subtractRanges
token
Token
if
type
NRANGE
block
intersectRanges
token
return
RangeToken
tok
RangeToken
token
if
ranges
ranges
return
icaseCache
sortRanges
compactRanges
sortRanges
compactRanges
int
result
int
ranges
length
length
int
wp
src
sub
while
src
ranges
length
sub
length
block
int
srcbegin
ranges
src
int
srcend
ranges
src
int
subbegin
ranges
sub
int
subend
ranges
sub
if
srcend
subbegin
block
result
wp
ranges
src
result
wp
ranges
src
if
srcend
subbegin
srcbegin
subend
block
if
subbegin
srcbegin
srcend
subend
block
src
if
subbegin
srcbegin
block
ranges
src
subend
sub
if
srcend
subend
block
result
wp
srcbegin
result
wp
subbegin
src
block
result
wp
srcbegin
result
wp
subbegin
ranges
src
subend
sub
if
subend
srcbegin
block
sub
block
throw
RuntimeException
ranges
src
ranges
src
ranges
sub
ranges
sub
while
src
ranges
length
block
result
wp
ranges
src
result
wp
ranges
src
ranges
int
wp
arraycopy
result
ranges
wp
intersectRanges
token
Token
RangeToken
tok
RangeToken
token
if
ranges
ranges
return
icaseCache
sortRanges
compactRanges
sortRanges
compactRanges
int
result
int
ranges
length
length
int
wp
src1
src2
while
src1
ranges
length
src2
length
block
int
src1begin
ranges
src1
int
src1end
ranges
src1
int
src2begin
ranges
src2
int
src2end
ranges
src2
if
src1end
src2begin
block
src1
if
src1end
src2begin
src1begin
src2end
block
if
src2begin
src2begin
src1end
src2end
block
result
wp
src1begin
result
wp
src1end
src1
if
src2begin
src1begin
block
result
wp
src1begin
result
wp
src2end
ranges
src1
src2end
src2
if
src1end
src2end
block
result
wp
src2begin
result
wp
src1end
src1
block
result
wp
src2begin
result
wp
src2end
ranges
src1
src2end
if
src2end
src1begin
block
src2
block
throw
RuntimeException
ranges
src1
ranges
src1
ranges
src2
ranges
src2
while
src1
ranges
length
block
result
wp
ranges
src1
result
wp
ranges
src1
ranges
int
wp
arraycopy
result
ranges
wp
complementRanges
Token
token
Token
if
type
RANGE
type
NRANGE
throw
IllegalArgumentException
type
RangeToken
tok
RangeToken
token
sortRanges
compactRanges
int
len
length
if
ranges
len
int
last
ranges
length
if
last
UTF16_MAX
len
RangeToken
ret
createRange
ranges
int
len
int
wp
if
ranges
block
ranges
wp
ranges
wp
ranges
for
forControl
int
i
i
length
i
block
ranges
wp
ranges
i
ranges
wp
ranges
i
if
last
UTF16_MAX
block
ranges
wp
last
ranges
wp
UTF16_MAX
setCompacted
return
ret
getCaseInsensitiveToken
RangeToken
if
icaseCache
return
icaseCache
RangeToken
uppers
type
RANGE
createRange
createNRange
for
forControl
int
i
i
ranges
length
i
block
for
forControl
int
ch
ranges
i
ch
ranges
i
ch
block
if
ch
addRange
ch
ch
block
char
uch
toUpperCase
char
ch
addRange
uch
uch
RangeToken
lowers
type
RANGE
createRange
createNRange
for
forControl
int
i
i
length
i
block
for
forControl
int
ch
ranges
i
ch
ranges
i
ch
block
if
ch
addRange
ch
ch
block
char
uch
toUpperCase
char
ch
addRange
uch
uch
mergeRanges
uppers
mergeRanges
compactRanges
icaseCache
lowers
return
lowers
dumpRanges
print
if
ranges
println
for
forControl
int
i
i
ranges
length
i
block
print
ranges
i
ranges
i
println
match
boolean
ch
int
if
map
createMap
boolean
ret
if
type
RANGE
block
if
ch
MAPSIZE
return
map
ch
ch
ret
for
forControl
int
i
nonMapIndex
i
ranges
length
i
block
if
ranges
i
ch
ch
ranges
i
return
block
if
ch
MAPSIZE
return
map
ch
ch
ret
for
forControl
int
i
nonMapIndex
i
ranges
length
i
block
if
ranges
i
ch
ch
ranges
i
return
return
ret
int
MAPSIZE
createMap
int
asize
MAPSIZE
map
int
asize
nonMapIndex
ranges
length
for
forControl
int
i
i
asize
i
map
i
for
forControl
int
i
i
ranges
length
i
block
int
s
ranges
i
int
e
ranges
i
if
s
MAPSIZE
block
for
forControl
int
j
s
j
e
j
MAPSIZE
j
map
j
j
block
nonMapIndex
i
break
if
e
MAPSIZE
block
nonMapIndex
i
break
toString
String
options
int
String
ret
if
type
RANGE
block
if
token_dot
ret
if
token_0to9
ret
if
token_wordchars
ret
if
token_spaces
ret
block
StringBuffer
sb
StringBuffer
append
for
forControl
int
i
i
ranges
length
i
block
if
options
SPECIAL_COMMA
i
append
if
ranges
i
ranges
i
block
append
escapeCharInCharClass
ranges
i
block
append
escapeCharInCharClass
ranges
i
append
char
append
escapeCharInCharClass
ranges
i
append
ret
toString
block
if
token_not_0to9
ret
if
token_not_wordchars
ret
if
token_not_spaces
ret
block
StringBuffer
sb
StringBuffer
append
for
forControl
int
i
i
ranges
length
i
block
if
options
SPECIAL_COMMA
i
append
if
ranges
i
ranges
i
block
append
escapeCharInCharClass
ranges
i
block
append
escapeCharInCharClass
ranges
i
append
append
escapeCharInCharClass
ranges
i
append
ret
toString
return
ret
escapeCharInCharClass
String
ch
int
String
ret
switch
ch
case
ret
char
ch
break
case
ret
break
case
ret
break
case
ret
break
case
ret
break
case
ret
break
case
if
ch
block
String
pre
toHexString
ch
ret
substring
length
length
if
ch
block
String
pre
toHexString
ch
ret
substring
length
length
ret
char
ch
return
ret
Token
java
io
Serializable
