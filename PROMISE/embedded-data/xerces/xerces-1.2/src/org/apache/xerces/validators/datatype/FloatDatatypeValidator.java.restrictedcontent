FloatDatatypeValidator
Locale
fLocale
DatatypeValidator
fBaseValidator
float
fEnumFloats
String
fPattern
boolean
fDerivedByList
float
fMaxInclusive
MAX_VALUE
float
fMaxExclusive
MAX_VALUE
float
fMinInclusive
MIN_VALUE
float
fMinExclusive
MIN_VALUE
int
fFacetsDefined
boolean
isMaxExclusiveDefined
boolean
isMaxInclusiveDefined
boolean
isMinExclusiveDefined
boolean
isMinInclusiveDefined
DatatypeMessageProvider
fMessageProvider
DatatypeMessageProvider
RegularExpression
fRegex
FloatDatatypeValidator
FloatDatatypeValidator
base
DatatypeValidator
facets
Hashtable
derivedByList
boolean
if
base
setBasetype
base
fDerivedByList
derivedByList
if
facets
block
if
fDerivedByList
block
for
forControl
Enumeration
e
keys
hasMoreElements
block
String
key
String
nextElement
if
equals
ELT_PATTERN
block
fFacetsDefined
FACET_PATTERN
fPattern
String
get
key
if
fPattern
fRegex
RegularExpression
fPattern
if
equals
ELT_ENUMERATION
block
fFacetsDefined
FACET_ENUMERATION
continue
if
equals
ELT_MAXINCLUSIVE
block
fFacetsDefined
FACET_MAXINCLUSIVE
String
value
try
value
String
get
key
fMaxInclusive
valueOf
floatValue
value
catchClause
ex
throw
InvalidDatatypeFacetException
getErrorString
IllegalFacetValue
MSG_NONE
Object
value
key
if
equals
ELT_MAXEXCLUSIVE
block
fFacetsDefined
FACET_MAXEXCLUSIVE
String
value
try
value
String
get
key
fMaxExclusive
valueOf
floatValue
value
catchClause
ex
throw
InvalidDatatypeFacetException
getErrorString
IllegalFacetValue
MSG_NONE
Object
value
key
if
equals
ELT_MININCLUSIVE
block
fFacetsDefined
FACET_MININCLUSIVE
String
value
try
value
String
get
key
fMinInclusive
valueOf
floatValue
value
catchClause
ex
throw
InvalidDatatypeFacetException
getErrorString
IllegalFacetValue
MSG_NONE
Object
value
key
if
equals
ELT_MINEXCLUSIVE
block
fFacetsDefined
FACET_MININCLUSIVE
String
value
try
value
String
get
key
fMinExclusive
valueOf
floatValue
value
catchClause
ex
throw
InvalidDatatypeFacetException
getErrorString
IllegalFacetValue
MSG_NONE
Object
value
key
block
throw
InvalidDatatypeFacetException
getErrorString
MSG_FORMAT_FAILURE
MSG_NONE
isMaxExclusiveDefined
fFacetsDefined
FACET_MAXEXCLUSIVE
isMaxInclusiveDefined
fFacetsDefined
FACET_MAXINCLUSIVE
isMinExclusiveDefined
fFacetsDefined
FACET_MINEXCLUSIVE
isMinInclusiveDefined
fFacetsDefined
FACET_MININCLUSIVE
if
isMaxExclusiveDefined
isMaxInclusiveDefined
block
throw
InvalidDatatypeFacetException
if
isMinExclusiveDefined
isMinInclusiveDefined
block
throw
InvalidDatatypeFacetException
if
fFacetsDefined
FACET_ENUMERATION
block
Vector
v
Vector
get
ELT_ENUMERATION
if
v
block
fEnumFloats
float
size
for
forControl
int
i
i
size
i
try
fEnumFloats
i
valueOf
floatValue
String
elementAt
i
boundsCheck
fEnumFloats
i
catchClause
idve
throw
InvalidDatatypeFacetException
getErrorString
InvalidEnumValue
MSG_NONE
Object
elementAt
i
catchClause
nfe
println
block
validate
Object
content
String
state
Object
if
fDerivedByList
block
checkContent
content
block
StringTokenizer
parsedList
StringTokenizer
content
try
while
hasMoreTokens
block
checkContent
nextToken
catchClause
e
printStackTrace
return
boundsCheck
f
float
boolean
inUpperBound
boolean
inLowerBound
if
isMaxInclusiveDefined
block
inUpperBound
f
fMaxInclusive
if
isMaxExclusiveDefined
block
inUpperBound
f
fMaxExclusive
if
isMinInclusiveDefined
block
inLowerBound
f
fMinInclusive
if
isMinExclusiveDefined
block
inLowerBound
f
fMinExclusive
if
inUpperBound
inLowerBound
block
getErrorString
OutOfBounds
MSG_NONE
Object
Float
f
enumCheck
v
float
for
forControl
int
i
i
length
i
block
if
v
fEnumFloats
i
return
throw
InvalidDatatypeValueException
getErrorString
NotAnEnumValue
MSG_NONE
Object
Float
v
setLocale
locale
Locale
fLocale
locale
compare
int
content1
String
content2
String
return
getFacets
Hashtable
return
clone
Object
throw
CloneNotSupportedException
getClass
getName
getErrorString
String
major
int
minor
int
args
Object
try
return
createMessage
fLocale
major
minor
args
catchClause
e
return
minor
setBasetype
base
DatatypeValidator
fBaseValidator
base
checkContent
content
String
if
fFacetsDefined
FACET_PATTERN
block
if
fRegex
matches
content
throw
InvalidDatatypeValueException
content
fPattern
float
f
try
f
valueOf
floatValue
content
catchClause
nfe
if
equals
block
f
POSITIVE_INFINITY
if
equals
block
f
NEGATIVE_INFINITY
if
equals
block
f
NaN
block
throw
InvalidDatatypeValueException
getErrorString
NotFloat
MSG_NONE
Object
content
boundsCheck
f
if
fFacetsDefined
FACET_ENUMERATION
enumCheck
f
AbstractDatatypeValidator
