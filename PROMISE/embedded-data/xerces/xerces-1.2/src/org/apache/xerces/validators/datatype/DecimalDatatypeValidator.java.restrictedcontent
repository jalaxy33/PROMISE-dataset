DecimalDatatypeValidator
Locale
fLocale
DatatypeValidator
fBaseValidator
boolean
fDerivedByList
BigDecimal
fEnumDecimal
String
fPattern
BigDecimal
fMaxInclusive
BigDecimal
fMaxExclusive
BigDecimal
fMinInclusive
BigDecimal
fMinExclusive
int
fFacetsDefined
int
fScale
int
fPrecision
boolean
isMaxExclusiveDefined
boolean
isMaxInclusiveDefined
boolean
isMinExclusiveDefined
boolean
isMinInclusiveDefined
boolean
isScaleDefined
boolean
isPrecisionDefined
DatatypeMessageProvider
fMessageProvider
DatatypeMessageProvider
RegularExpression
fRegex
Hashtable
fFacets
DecimalDatatypeValidator
DecimalDatatypeValidator
base
DatatypeValidator
facets
Hashtable
derivedByList
boolean
setBasetype
base
fDerivedByList
derivedByList
if
facets
block
fFacets
checkForFacetConsistency
facets
getFacets
fFacets
facets
if
fDerivedByList
block
Vector
enumeration
String
value
for
forControl
Enumeration
e
keys
hasMoreElements
block
String
key
String
nextElement
try
if
equals
ELT_PATTERN
block
value
String
get
key
fFacetsDefined
FACET_PATTERN
fPattern
value
if
fPattern
fRegex
RegularExpression
fPattern
if
equals
ELT_ENUMERATION
block
fFacetsDefined
FACET_ENUMERATION
enumeration
Vector
get
key
if
equals
ELT_MAXINCLUSIVE
block
value
String
get
key
fFacetsDefined
FACET_MAXINCLUSIVE
fMaxInclusive
BigDecimal
stripPlusIfPresent
value
if
equals
ELT_MAXEXCLUSIVE
block
value
String
get
key
fFacetsDefined
FACET_MAXEXCLUSIVE
fMaxExclusive
BigDecimal
stripPlusIfPresent
value
if
equals
ELT_MININCLUSIVE
block
value
String
get
key
fFacetsDefined
FACET_MININCLUSIVE
fMinInclusive
BigDecimal
stripPlusIfPresent
value
if
equals
ELT_MINEXCLUSIVE
block
value
String
get
key
fFacetsDefined
FACET_MINEXCLUSIVE
fMinExclusive
BigDecimal
stripPlusIfPresent
value
if
equals
ELT_PRECISION
block
value
String
get
key
fFacetsDefined
FACET_PRECISSION
isPrecisionDefined
fPrecision
parseInt
value
if
equals
ELT_SCALE
block
value
String
get
key
fFacetsDefined
FACET_SCALE
isScaleDefined
fScale
parseInt
value
block
throw
InvalidDatatypeFacetException
getErrorString
MSG_FORMAT_FAILURE
MSG_NONE
catchClause
ex
throw
InvalidDatatypeFacetException
getErrorString
IllegalFacetValue
MSG_NONE
Object
value
key
isMaxExclusiveDefined
fFacetsDefined
FACET_MAXEXCLUSIVE
isMaxInclusiveDefined
fFacetsDefined
FACET_MAXINCLUSIVE
isMinExclusiveDefined
fFacetsDefined
FACET_MINEXCLUSIVE
isMinInclusiveDefined
fFacetsDefined
FACET_MININCLUSIVE
if
isMaxExclusiveDefined
isMaxInclusiveDefined
block
throw
InvalidDatatypeFacetException
if
isMinExclusiveDefined
isMinInclusiveDefined
block
throw
InvalidDatatypeFacetException
if
isMaxExclusiveDefined
isMinExclusiveDefined
block
int
compareTo
fMaxExclusive
compareTo
fMinExclusive
if
compareTo
throw
InvalidDatatypeFacetException
fMaxExclusive
fMinExclusive
if
isMaxInclusiveDefined
isMinInclusiveDefined
block
int
compareTo
fMaxInclusive
compareTo
fMinInclusive
if
compareTo
throw
InvalidDatatypeFacetException
fMaxInclusive
fMinInclusive
if
isMaxExclusiveDefined
isMinInclusiveDefined
block
int
compareTo
fMaxExclusive
compareTo
fMinInclusive
if
compareTo
throw
InvalidDatatypeFacetException
fMaxExclusive
fMinInclusive
if
isMaxInclusiveDefined
isMinExclusiveDefined
block
int
compareTo
fMaxInclusive
compareTo
fMinExclusive
if
compareTo
throw
InvalidDatatypeFacetException
fMaxInclusive
fMinExclusive
if
fFacetsDefined
FACET_ENUMERATION
block
if
enumeration
block
fEnumDecimal
BigDecimal
size
int
i
try
for
forControl
i
size
i
block
fEnumDecimal
i
BigDecimal
stripPlusIfPresent
String
elementAt
i
boundsCheck
fEnumDecimal
i
catchClause
idve
throw
InvalidDatatypeFacetException
getErrorString
InvalidEnumValue
MSG_NONE
Object
elementAt
i
block
validate
Object
content
String
state
Object
if
fDerivedByList
block
if
fBaseValidator
block
fBaseValidator
validate
content
state
if
fFacetsDefined
FACET_PATTERN
block
if
fRegex
matches
content
throw
InvalidDatatypeValueException
content
getPattern
BigDecimal
d
try
d
BigDecimal
stripPlusIfPresent
content
catchClause
nfe
throw
InvalidDatatypeValueException
getErrorString
NotDecimal
MSG_NONE
Object
content
if
isScaleDefined
block
if
scale
fScale
throw
InvalidDatatypeValueException
getErrorString
ScaleExceeded
MSG_NONE
Object
content
if
isPrecisionDefined
block
int
precision
movePointRight
toString
length
scale
signum
if
precision
fPrecision
throw
InvalidDatatypeValueException
getErrorString
PrecisionExceeded
MSG_NONE
Object
content
boundsCheck
d
if
fEnumDecimal
enumCheck
d
block
return
boundsCheck
d
BigDecimal
boolean
minOk
boolean
maxOk
String
upperBound
fMaxExclusive
toString
fMaxInclusive
toString
String
lowerBound
fMinExclusive
toString
fMinInclusive
toString
String
lowerBoundIndicator
String
upperBoundIndicator
if
isMaxInclusiveDefined
block
maxOk
compareTo
fMaxInclusive
upperBound
toString
if
upperBound
block
upperBoundIndicator
block
upperBound
if
isMaxExclusiveDefined
block
maxOk
compareTo
fMaxExclusive
upperBound
toString
if
upperBound
block
upperBoundIndicator
block
upperBound
block
maxOk
isMaxInclusiveDefined
isMaxExclusiveDefined
if
isMinInclusiveDefined
block
minOk
compareTo
fMinInclusive
lowerBound
toString
if
lowerBound
block
lowerBoundIndicator
block
lowerBound
if
isMinExclusiveDefined
block
minOk
compareTo
fMinExclusive
lowerBound
toString
if
lowerBound
block
lowerBoundIndicator
block
lowerBound
block
minOk
isMinInclusiveDefined
isMinExclusiveDefined
if
minOk
maxOk
throw
InvalidDatatypeValueException
getErrorString
OutOfBounds
MSG_NONE
Object
toString
lowerBound
upperBound
lowerBoundIndicator
upperBoundIndicator
enumCheck
v
BigDecimal
for
forControl
int
i
i
length
i
block
if
equals
fEnumDecimal
i
block
return
throw
InvalidDatatypeValueException
getErrorString
NotAnEnumValue
MSG_NONE
Object
v
setLocale
locale
Locale
fLocale
locale
getFacets
Hashtable
return
fFacets
getErrorString
String
major
int
minor
int
args
Object
try
return
createMessage
fLocale
major
minor
args
catchClause
e
return
minor
clone
Object
throw
CloneNotSupportedException
getClass
getName
compare
int
content1
String
content2
String
return
setBasetype
base
DatatypeValidator
fBaseValidator
base
stripPlusIfPresent
String
value
String
String
strippedPlus
value
if
length
charAt
charAt
block
strippedPlus
substring
return
strippedPlus
checkForFacetConsistency
Hashtable
thisTypeFacets
Hashtable
baseTypeFacets
Hashtable
String
thisTypeFacetValue
String
baseValue
if
baseTypeFacets
block
Enumeration
setOfBaseKeys
keys
String
keyInBase
BigDecimal
valueOfThisType
BigDecimal
valueOfBase
while
hasMoreElements
block
keyInBase
String
nextElement
baseValue
String
get
keyInBase
thisTypeFacetValue
String
get
keyInBase
if
thisTypeFacetValue
block
String
strThisType
put
keyInBase
baseValue
if
equals
ELT_MAXEXCLUSIVE
containsKey
ELT_MAXINCLUSIVE
block
strThisType
String
get
ELT_MAXINCLUSIVE
valueOfThisType
BigDecimal
stripPlusIfPresent
strThisType
valueOfBase
BigDecimal
stripPlusIfPresent
baseValue
if
compareTo
valueOfBase
block
remove
keyInBase
block
remove
ELT_MAXINCLUSIVE
if
equals
ELT_MAXINCLUSIVE
containsKey
ELT_MAXEXCLUSIVE
block
strThisType
String
get
ELT_MAXEXCLUSIVE
valueOfThisType
BigDecimal
stripPlusIfPresent
strThisType
valueOfBase
BigDecimal
stripPlusIfPresent
baseValue
if
compareTo
valueOfBase
block
remove
keyInBase
block
remove
ELT_MAXEXCLUSIVE
if
equals
ELT_MINEXCLUSIVE
containsKey
ELT_MININCLUSIVE
block
strThisType
String
get
ELT_MININCLUSIVE
valueOfThisType
BigDecimal
stripPlusIfPresent
strThisType
valueOfBase
BigDecimal
stripPlusIfPresent
baseValue
if
compareTo
valueOfBase
block
remove
keyInBase
block
remove
ELT_MININCLUSIVE
if
equals
ELT_MININCLUSIVE
containsKey
ELT_MINEXCLUSIVE
block
strThisType
String
get
ELT_MINEXCLUSIVE
valueOfThisType
BigDecimal
stripPlusIfPresent
strThisType
valueOfBase
BigDecimal
stripPlusIfPresent
baseValue
if
compareTo
valueOfBase
block
remove
keyInBase
block
remove
ELT_MINEXCLUSIVE
block
if
equals
ELT_MAXEXCLUSIVE
block
valueOfThisType
BigDecimal
stripPlusIfPresent
thisTypeFacetValue
valueOfBase
BigDecimal
stripPlusIfPresent
baseValue
if
compareTo
valueOfBase
block
block
if
equals
ELT_MAXINCLUSIVE
block
valueOfThisType
BigDecimal
stripPlusIfPresent
thisTypeFacetValue
valueOfBase
BigDecimal
stripPlusIfPresent
baseValue
if
compareTo
valueOfBase
block
block
if
equals
ELT_MINEXCLUSIVE
block
valueOfThisType
BigDecimal
stripPlusIfPresent
thisTypeFacetValue
valueOfBase
BigDecimal
stripPlusIfPresent
baseValue
if
compareTo
valueOfBase
block
block
if
equals
ELT_MININCLUSIVE
block
valueOfThisType
BigDecimal
stripPlusIfPresent
thisTypeFacetValue
valueOfBase
BigDecimal
stripPlusIfPresent
baseValue
if
compareTo
valueOfBase
block
block
return
thisTypeFacets
AbstractDatatypeValidator
