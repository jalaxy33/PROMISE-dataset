DoubleDatatypeValidator
Locale
fLocale
DatatypeValidator
fBaseValidator
boolean
fDerivedByList
double
fEnumDoubles
String
fPattern
double
fMaxInclusive
MAX_VALUE
double
fMaxExclusive
MAX_VALUE
double
fMinInclusive
MIN_VALUE
double
fMinExclusive
MIN_VALUE
int
fFacetsDefined
boolean
isMaxExclusiveDefined
boolean
isMaxInclusiveDefined
boolean
isMinExclusiveDefined
boolean
isMinInclusiveDefined
RegularExpression
fRegex
DatatypeMessageProvider
fMessageProvider
DatatypeMessageProvider
DoubleDatatypeValidator
DoubleDatatypeValidator
base
DatatypeValidator
facets
Hashtable
derivedByList
boolean
if
base
setBasetype
base
fDerivedByList
derivedByList
if
facets
block
if
fDerivedByList
block
for
forControl
Enumeration
e
keys
hasMoreElements
block
String
key
String
nextElement
if
equals
ELT_PATTERN
block
fFacetsDefined
FACET_PATTERN
fPattern
String
get
key
if
fPattern
fRegex
RegularExpression
fPattern
if
equals
ELT_ENUMERATION
block
fFacetsDefined
FACET_ENUMERATION
continue
if
equals
ELT_MAXINCLUSIVE
block
fFacetsDefined
FACET_MAXINCLUSIVE
String
value
try
value
String
get
key
fMaxInclusive
valueOf
doubleValue
value
catchClause
ex
throw
InvalidDatatypeFacetException
getErrorString
IllegalFacetValue
MSG_NONE
Object
value
key
if
equals
ELT_MAXEXCLUSIVE
block
fFacetsDefined
FACET_MAXEXCLUSIVE
String
value
try
value
String
get
key
fMaxExclusive
valueOf
doubleValue
value
catchClause
ex
throw
InvalidDatatypeFacetException
getErrorString
IllegalFacetValue
MSG_NONE
Object
value
key
if
equals
ELT_MININCLUSIVE
block
fFacetsDefined
FACET_MININCLUSIVE
String
value
try
value
String
get
key
fMinInclusive
valueOf
doubleValue
value
catchClause
ex
throw
InvalidDatatypeFacetException
getErrorString
IllegalFacetValue
MSG_NONE
Object
value
key
if
equals
ELT_MINEXCLUSIVE
block
fFacetsDefined
FACET_MININCLUSIVE
String
value
try
value
String
get
key
fMinExclusive
valueOf
doubleValue
value
catchClause
ex
throw
InvalidDatatypeFacetException
getErrorString
IllegalFacetValue
MSG_NONE
Object
value
key
block
throw
InvalidDatatypeFacetException
getErrorString
MSG_FORMAT_FAILURE
MSG_NONE
isMaxExclusiveDefined
fFacetsDefined
FACET_MAXEXCLUSIVE
isMaxInclusiveDefined
fFacetsDefined
FACET_MAXINCLUSIVE
isMinExclusiveDefined
fFacetsDefined
FACET_MINEXCLUSIVE
isMinInclusiveDefined
fFacetsDefined
FACET_MININCLUSIVE
if
isMaxExclusiveDefined
isMaxInclusiveDefined
block
throw
InvalidDatatypeFacetException
if
isMinExclusiveDefined
isMinInclusiveDefined
block
throw
InvalidDatatypeFacetException
if
fFacetsDefined
FACET_ENUMERATION
block
Vector
v
Vector
get
ELT_ENUMERATION
if
v
block
fEnumDoubles
double
size
for
forControl
int
i
i
size
i
try
fEnumDoubles
i
valueOf
doubleValue
String
elementAt
i
boundsCheck
fEnumDoubles
i
catchClause
idve
throw
InvalidDatatypeFacetException
getErrorString
InvalidEnumValue
MSG_NONE
Object
elementAt
i
catchClause
nfe
println
block
validate
Object
content
String
state
Object
if
fDerivedByList
block
if
fFacetsDefined
FACET_PATTERN
block
if
fRegex
matches
content
throw
InvalidDatatypeValueException
content
fPattern
double
d
try
d
valueOf
doubleValue
content
catchClause
nfe
throw
InvalidDatatypeValueException
getErrorString
NotReal
MSG_NONE
Object
content
boundsCheck
d
if
fFacetsDefined
FACET_ENUMERATION
enumCheck
d
block
return
boundsCheck
d
double
boolean
inUpperBound
boolean
inLowerBound
if
isMaxInclusiveDefined
block
inUpperBound
d
fMaxInclusive
if
isMaxExclusiveDefined
block
inUpperBound
d
fMaxExclusive
if
isMinInclusiveDefined
block
inLowerBound
d
fMinInclusive
if
isMinExclusiveDefined
block
inLowerBound
d
fMinExclusive
if
inUpperBound
inLowerBound
block
getErrorString
OutOfBounds
MSG_NONE
Object
Double
d
enumCheck
v
double
for
forControl
int
i
i
length
i
block
if
v
fEnumDoubles
i
return
throw
InvalidDatatypeValueException
getErrorString
NotAnEnumValue
MSG_NONE
Object
Double
v
compare
int
content1
String
content2
String
return
getFacets
Hashtable
return
clone
Object
throw
CloneNotSupportedException
getClass
getName
getErrorString
String
major
int
minor
int
args
Object
try
return
createMessage
fLocale
major
minor
args
catchClause
e
return
minor
setBasetype
base
DatatypeValidator
fBaseValidator
base
AbstractDatatypeValidator
