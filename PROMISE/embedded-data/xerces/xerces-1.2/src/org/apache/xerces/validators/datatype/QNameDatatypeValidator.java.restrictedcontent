QNameDatatypeValidator
Locale
fLocale
DatatypeValidator
fBaseValidator
boolean
fDerivedByList
int
fLength
int
fMaxLength
MAX_VALUE
int
fMinLength
String
fPattern
Vector
fEnumeration
String
fMaxInclusive
String
fMaxExclusive
String
fMinInclusive
String
fMinExclusive
int
fFacetsDefined
boolean
isMaxExclusiveDefined
boolean
isMaxInclusiveDefined
boolean
isMinExclusiveDefined
boolean
isMinInclusiveDefined
RegularExpression
fRegex
QNameDatatypeValidator
QNameDatatypeValidator
base
DatatypeValidator
facets
Hashtable
derivedByList
boolean
setBasetype
base
fDerivedByList
derivedByList
if
facets
block
if
fDerivedByList
block
for
forControl
Enumeration
e
keys
hasMoreElements
block
String
key
String
nextElement
if
equals
ELT_LENGTH
block
fFacetsDefined
FACET_LENGTH
String
lengthValue
String
get
key
try
fLength
parseInt
lengthValue
catchClause
nfe
throw
InvalidDatatypeFacetException
lengthValue
if
fLength
throw
InvalidDatatypeFacetException
lengthValue
if
equals
ELT_MINLENGTH
block
fFacetsDefined
FACET_MINLENGTH
String
minLengthValue
String
get
key
try
fMinLength
parseInt
minLengthValue
catchClause
nfe
throw
InvalidDatatypeFacetException
minLengthValue
if
equals
ELT_MAXLENGTH
block
fFacetsDefined
FACET_MAXLENGTH
String
maxLengthValue
String
get
key
try
fMaxLength
parseInt
maxLengthValue
catchClause
nfe
throw
InvalidDatatypeFacetException
maxLengthValue
if
equals
ELT_PATTERN
block
fFacetsDefined
FACET_PATTERN
fPattern
String
get
key
fRegex
RegularExpression
fPattern
if
equals
ELT_ENUMERATION
block
fFacetsDefined
FACET_ENUMERATION
fEnumeration
Vector
get
key
if
equals
ELT_MAXINCLUSIVE
block
fFacetsDefined
FACET_MAXINCLUSIVE
fMaxInclusive
String
get
key
if
equals
ELT_MAXEXCLUSIVE
block
fFacetsDefined
FACET_MAXEXCLUSIVE
fMaxExclusive
String
get
key
if
equals
ELT_MININCLUSIVE
block
fFacetsDefined
FACET_MININCLUSIVE
fMinInclusive
String
get
key
if
equals
ELT_MINEXCLUSIVE
block
fFacetsDefined
FACET_MINEXCLUSIVE
fMinExclusive
String
get
key
block
throw
InvalidDatatypeFacetException
if
fFacetsDefined
FACET_LENGTH
block
if
fFacetsDefined
FACET_MAXLENGTH
block
throw
InvalidDatatypeFacetException
if
fFacetsDefined
FACET_MINLENGTH
block
throw
InvalidDatatypeFacetException
if
fFacetsDefined
FACET_MINLENGTH
FACET_MAXLENGTH
block
if
fMinLength
fMaxLength
block
throw
InvalidDatatypeFacetException
fMaxLength
fMinLength
isMaxExclusiveDefined
fFacetsDefined
FACET_MAXEXCLUSIVE
isMaxInclusiveDefined
fFacetsDefined
FACET_MAXINCLUSIVE
isMinExclusiveDefined
fFacetsDefined
FACET_MINEXCLUSIVE
isMinInclusiveDefined
fFacetsDefined
FACET_MININCLUSIVE
if
isMaxExclusiveDefined
isMaxInclusiveDefined
block
throw
InvalidDatatypeFacetException
if
isMinExclusiveDefined
isMinInclusiveDefined
block
throw
InvalidDatatypeFacetException
block
for
forControl
Enumeration
e
keys
hasMoreElements
block
String
key
String
nextElement
if
equals
ELT_LENGTH
block
fFacetsDefined
FACET_LENGTH
String
lengthValue
String
get
key
try
fLength
parseInt
lengthValue
catchClause
nfe
throw
InvalidDatatypeFacetException
lengthValue
if
fLength
throw
InvalidDatatypeFacetException
lengthValue
if
equals
ELT_MINLENGTH
block
fFacetsDefined
FACET_MINLENGTH
String
minLengthValue
String
get
key
try
fMinLength
parseInt
minLengthValue
catchClause
nfe
throw
InvalidDatatypeFacetException
minLengthValue
if
equals
ELT_MAXLENGTH
block
fFacetsDefined
FACET_MAXLENGTH
String
maxLengthValue
String
get
key
try
fMaxLength
parseInt
maxLengthValue
catchClause
nfe
throw
InvalidDatatypeFacetException
maxLengthValue
if
equals
ELT_ENUMERATION
block
fFacetsDefined
FACET_ENUMERATION
fEnumeration
Vector
get
key
block
throw
InvalidDatatypeFacetException
if
fFacetsDefined
FACET_LENGTH
block
if
fFacetsDefined
FACET_MAXLENGTH
block
throw
InvalidDatatypeFacetException
if
fFacetsDefined
FACET_MINLENGTH
block
throw
InvalidDatatypeFacetException
if
fFacetsDefined
FACET_MINLENGTH
FACET_MAXLENGTH
block
if
fMinLength
fMaxLength
block
throw
InvalidDatatypeFacetException
fMinLength
fMaxLength
validate
Object
content
String
state
Object
StringTokenizer
parsedList
if
fDerivedByList
block
parsedList
StringTokenizer
content
try
while
hasMoreTokens
block
checkContentList
nextToken
catchClause
e
printStackTrace
block
checkContent
content
return
setLocale
locale
Locale
fLocale
locale
checkContent
content
String
if
fFacetsDefined
FACET_MAXLENGTH
block
if
length
fMaxLength
block
throw
InvalidDatatypeValueException
content
length
fMaxLength
if
fFacetsDefined
FACET_ENUMERATION
block
if
contains
content
throw
InvalidDatatypeValueException
content
fEnumeration
if
isMaxExclusiveDefined
block
int
comparisonResult
comparisonResult
compare
content
fMaxExclusive
if
comparisonResult
block
throw
InvalidDatatypeValueException
content
fMaxExclusive
if
isMaxInclusiveDefined
block
int
comparisonResult
comparisonResult
compare
content
fMaxInclusive
if
comparisonResult
throw
InvalidDatatypeValueException
content
fMaxInclusive
if
isMinExclusiveDefined
block
int
comparisonResult
comparisonResult
compare
content
fMinExclusive
if
comparisonResult
throw
InvalidDatatypeValueException
content
fMinExclusive
if
isMinInclusiveDefined
block
int
comparisonResult
comparisonResult
compare
content
fMinInclusive
if
comparisonResult
throw
InvalidDatatypeValueException
content
fMinInclusive
if
fFacetsDefined
FACET_PATTERN
block
if
fRegex
matches
content
throw
InvalidDatatypeValueException
content
fPattern
getFacets
Hashtable
return
compare
int
content
String
facetValue
String
Locale
loc
getDefault
Collator
collator
getInstance
loc
return
compare
content
facetValue
clone
Object
throw
CloneNotSupportedException
getClass
getName
checkContentList
content
String
setBasetype
base
DatatypeValidator
fBaseValidator
base
AbstractDatatypeValidator
