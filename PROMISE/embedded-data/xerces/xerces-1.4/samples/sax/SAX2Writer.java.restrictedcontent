SAX2Writer
String
DEFAULT_PARSER_NAME
boolean
setValidation
boolean
setNameSpaces
boolean
setSchemaSupport
boolean
setSchemaFullSupport
PrintWriter
out
boolean
canonical
SAX2Writer
canonical
boolean
canonical
SAX2Writer
encoding
String
canonical
boolean
if
encoding
block
encoding
out
PrintWriter
OutputStreamWriter
out
encoding
canonical
canonical
print
parserName
String
uri
String
canonical
boolean
try
DefaultHandler
handler
SAX2Writer
canonical
XMLReader
parser
XMLReader
forName
newInstance
parserName
setFeature
setValidation
setFeature
setNameSpaces
setFeature
setSchemaSupport
setFeature
setSchemaFullSupport
setContentHandler
handler
setErrorHandler
handler
parse
uri
catchClause
e
printStackTrace
err
processingInstruction
target
String
data
String
print
print
target
if
data
length
block
print
print
data
print
flush
startDocument
if
canonical
block
println
flush
startElement
uri
String
local
String
raw
String
attrs
Attributes
print
print
raw
if
attrs
block
attrs
sortAttributes
attrs
int
len
getLength
for
forControl
int
i
i
len
i
block
print
print
getQName
i
print
print
normalize
getValue
i
print
print
flush
characters
ch
char
start
int
length
int
print
normalize
String
ch
start
length
flush
ignorableWhitespace
ch
char
start
int
length
int
characters
ch
start
length
flush
endElement
uri
String
local
String
raw
String
print
print
raw
print
flush
warning
ex
SAXParseException
println
getLocationString
ex
getMessage
error
ex
SAXParseException
println
getLocationString
ex
getMessage
fatalError
ex
SAXParseException
println
getLocationString
ex
getMessage
throw
ex
getLocationString
String
ex
SAXParseException
StringBuffer
str
StringBuffer
String
systemId
getSystemId
if
systemId
block
int
index
lastIndexOf
if
index
systemId
substring
index
append
systemId
append
append
getLineNumber
append
append
getColumnNumber
return
toString
normalize
String
s
String
StringBuffer
str
StringBuffer
int
len
s
length
for
forControl
int
i
i
len
i
block
char
ch
charAt
i
switch
ch
case
block
append
break
case
block
append
break
case
block
append
break
case
block
append
break
case
block
if
canonical
block
append
append
toString
ch
append
break
case
block
append
ch
return
toString
sortAttributes
Attributes
attrs
Attributes
AttributesImpl
attributes
AttributesImpl
int
len
attrs
getLength
for
forControl
int
i
i
len
i
block
String
name
getQName
i
int
count
getLength
int
j
while
j
count
block
if
compareTo
getQName
j
block
break
j
insertAttributeAt
j
name
getType
i
getValue
i
return
attributes
main
argv
String
Arguments
argopt
Arguments
setUsage
String
if
length
block
printUsage
exit
boolean
canonical
String
parserName
DEFAULT_PARSER_NAME
parseArgumentTokens
argv
char
int
c
String
arg
while
arg
getlistFiles
block
while
c
getArguments
block
switch
c
case
canonical
break
case
canonical
break
case
setValidation
break
case
setValidation
break
case
setNameSpaces
break
case
setNameSpaces
break
case
parserName
getStringParameter
break
case
setSchemaSupport
break
case
setSchemaSupport
break
case
setSchemaFullSupport
break
case
setSchemaFullSupport
break
case
printUsage
exit
break
case
break
case
break
println
arg
print
parserName
arg
canonical
DefaultHandler
