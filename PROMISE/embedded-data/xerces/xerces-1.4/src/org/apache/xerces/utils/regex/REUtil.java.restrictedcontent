REUtil
REUtil
composeFromSurrogates
int
high
int
low
int
return
high
low
isLowSurrogate
boolean
ch
int
return
ch
isHighSurrogate
boolean
ch
int
return
ch
decomposeToSurrogates
String
ch
int
char
chs
char
ch
chs
char
ch
chs
char
ch
return
String
chs
substring
String
iterator
CharacterIterator
begin
int
end
int
char
src
char
end
begin
for
forControl
int
i
i
length
i
src
i
setIndex
i
begin
return
String
src
getOptionValue
int
ch
int
int
ret
switch
ch
case
ret
IGNORE_CASE
break
case
ret
MULTIPLE_LINES
break
case
ret
SINGLE_LINE
break
case
ret
EXTENDED_COMMENT
break
case
ret
USE_UNICODE_CATEGORY
break
case
ret
UNICODE_WORD_BOUNDARY
break
case
ret
PROHIBIT_FIXED_STRING_OPTIMIZATION
break
case
ret
PROHIBIT_HEAD_CHARACTER_OPTIMIZATION
break
case
ret
XMLSCHEMA_MODE
break
case
ret
SPECIAL_COMMA
break
case
return
ret
parseOptions
int
opts
String
if
opts
return
int
options
for
forControl
int
i
i
length
i
block
int
v
getOptionValue
charAt
i
if
v
throw
ParseException
substring
i
options
v
return
options
createOptionString
String
options
int
StringBuffer
sb
StringBuffer
if
options
PROHIBIT_FIXED_STRING_OPTIMIZATION
append
char
if
options
PROHIBIT_HEAD_CHARACTER_OPTIMIZATION
append
char
if
options
XMLSCHEMA_MODE
append
char
if
options
IGNORE_CASE
append
char
if
options
MULTIPLE_LINES
append
char
if
options
SINGLE_LINE
append
char
if
options
USE_UNICODE_CATEGORY
append
char
if
options
UNICODE_WORD_BOUNDARY
append
char
if
options
EXTENDED_COMMENT
append
char
if
options
SPECIAL_COMMA
append
char
return
toString
intern
stripExtendedComment
String
regex
String
int
len
length
StringBuffer
buffer
StringBuffer
len
int
offset
while
offset
len
block
int
ch
charAt
offset
if
ch
ch
ch
ch
ch
continue
if
ch
block
while
offset
len
block
ch
charAt
offset
if
ch
ch
break
continue
int
next
if
ch
offset
len
block
if
next
charAt
offset
next
next
next
next
next
block
append
char
next
offset
block
append
char
append
char
next
offset
append
char
ch
return
toString
main
argv
String
String
pattern
try
String
options
String
target
if
length
block
println
exit
for
forControl
int
i
i
length
i
block
if
argv
i
length
argv
i
charAt
block
if
pattern
pattern
argv
i
if
target
target
argv
i
println
argv
i
if
argv
i
equals
block
options
if
argv
i
equals
block
options
if
argv
i
equals
block
options
if
argv
i
equals
block
options
if
argv
i
equals
block
options
if
argv
i
equals
block
options
block
println
argv
i
RegularExpression
reg
RegularExpression
pattern
options
println
reg
Match
match
Match
matches
target
match
for
forControl
int
i
i
getNumberOfGroups
i
block
if
i
print
print
i
if
getBeginning
i
println
block
print
getBeginning
i
getEnd
i
println
getCapturedText
i
catchClause
pe
if
pattern
block
printStackTrace
block
println
getMessage
String
indent
println
indent
pattern
int
loc
getLocation
if
loc
block
print
indent
for
forControl
int
i
i
loc
i
print
println
catchClause
e
printStackTrace
int
CACHESIZE
RegularExpression
regexCache
RegularExpression
CACHESIZE
createRegex
RegularExpression
pattern
String
options
String
RegularExpression
re
int
intOptions
parseOptions
options
synchronized
regexCache
int
i
for
forControl
i
i
CACHESIZE
i
block
re
regexCache
i
if
re
block
i
break
if
equals
pattern
intOptions
break
if
re
block
if
i
block
arraycopy
regexCache
regexCache
i
regexCache
re
block
re
RegularExpression
pattern
options
arraycopy
regexCache
regexCache
CACHESIZE
regexCache
re
return
re
matches
boolean
regex
String
target
String
return
createRegex
matches
target
regex
matches
boolean
regex
String
options
String
target
String
return
createRegex
matches
target
regex
options
quoteMeta
String
literal
String
int
len
length
StringBuffer
buffer
for
forControl
int
i
i
len
i
block
int
ch
charAt
i
if
indexOf
ch
block
if
buffer
block
buffer
StringBuffer
i
len
i
if
i
append
substring
i
append
char
if
buffer
append
char
ch
return
buffer
toString
literal
dumpString
v
String
for
forControl
int
i
i
length
i
block
print
toHexString
charAt
i
print
println
