SymbolCache
int
CHAR_OFFSET
int
INDEX_OFFSET
int
NEXT_OFFSET
int
CACHE_RECORD_SIZE
int
INITIAL_CACHE_RECORD_COUNT
int
HEAD_INITIAL_CACHE_RECORD_COUNT
char
fSymbolChars
char
int
fSymbolCharsOffset
int
fCacheLines
int
int
fCacheLineCount
SymbolCache
fCacheLines
fCacheLineCount
int
HEAD_INITIAL_CACHE_RECORD_COUNT
CACHE_RECORD_SIZE
reset
fSymbolCharsOffset
fCacheLineCount
fCacheLines
fCacheLineCount
int
HEAD_INITIAL_CACHE_RECORD_COUNT
CACHE_RECORD_SIZE
getSymbolChars
char
return
fSymbolChars
createSymbol
String
symbolHandle
int
startOffset
int
entry
int
entries
int
offset
int
int
slen
fSymbolCharsOffset
startOffset
String
str
String
fSymbolChars
startOffset
slen
try
entries
offset
INDEX_OFFSET
symbolHandle
catchClause
ex
throw
RuntimeException
return
str
addSymbolToCache
int
str
String
slen
int
symbolHandle
int
int
charsOffset
fSymbolCharsOffset
if
slen
return
charsOffset
int
strIndex
char
ch
charAt
strIndex
try
fSymbolChars
fSymbolCharsOffset
ch
catchClause
ex
char
newChars
char
length
arraycopy
fSymbolChars
newChars
length
fSymbolChars
newChars
fSymbolChars
fSymbolCharsOffset
ch
fSymbolCharsOffset
int
entry
int
entries
fCacheLines
entry
int
count
entries
int
i
int
offset
while
block
if
i
count
break
if
entries
offset
CHAR_OFFSET
ch
block
i
offset
CACHE_RECORD_SIZE
continue
if
strIndex
slen
block
if
entries
offset
INDEX_OFFSET
block
throw
RuntimeException
entries
offset
INDEX_OFFSET
symbolHandle
return
charsOffset
ch
charAt
strIndex
try
fSymbolChars
fSymbolCharsOffset
ch
catchClause
ex
char
newChars
char
length
arraycopy
fSymbolChars
newChars
length
fSymbolChars
newChars
fSymbolChars
fSymbolCharsOffset
ch
fSymbolCharsOffset
entry
entries
offset
NEXT_OFFSET
try
entries
fCacheLines
entry
catchClause
ex
if
entry
block
entry
fCacheLineCount
entries
offset
NEXT_OFFSET
entry
entries
int
INITIAL_CACHE_RECORD_COUNT
CACHE_RECORD_SIZE
try
fCacheLines
entry
entries
catchClause
ex2
int
newCache
int
entry
arraycopy
fCacheLines
newCache
entry
fCacheLines
newCache
fCacheLines
entry
entries
block
entries
fCacheLines
entry
throw
RuntimeException
count
entries
i
offset
while
block
entries
try
entries
offset
CHAR_OFFSET
ch
catchClause
ex
int
newSize
offset
int
newEntries
int
newSize
arraycopy
entries
newEntries
offset
fCacheLines
entry
entries
newEntries
entries
offset
CHAR_OFFSET
ch
if
strIndex
slen
block
entries
offset
INDEX_OFFSET
symbolHandle
entries
offset
NEXT_OFFSET
break
entry
fCacheLineCount
entries
offset
INDEX_OFFSET
entries
offset
NEXT_OFFSET
entry
entries
int
INITIAL_CACHE_RECORD_COUNT
CACHE_RECORD_SIZE
try
fCacheLines
entry
entries
catchClause
ex
int
newCache
int
entry
arraycopy
fCacheLines
newCache
entry
fCacheLines
newCache
fCacheLines
entry
entries
offset
ch
charAt
strIndex
try
fSymbolChars
fSymbolCharsOffset
ch
catchClause
ex
char
newChars
char
length
arraycopy
fSymbolChars
newChars
length
fSymbolChars
newChars
fSymbolChars
fSymbolCharsOffset
ch
fSymbolCharsOffset
return
charsOffset
updateCacheLine
charsOffset
int
totalMisses
int
length
int
int
entry
int
entries
fCacheLines
int
ch
fSymbolChars
charsOffset
int
count
entries
int
offset
count
CACHE_RECORD_SIZE
int
misses
while
block
if
ch
entries
offset
CHAR_OFFSET
block
offset
CACHE_RECORD_SIZE
misses
continue
if
misses
block
int
symIndex
entries
offset
INDEX_OFFSET
int
nextIndex
entries
offset
NEXT_OFFSET
arraycopy
entries
offset
CACHE_RECORD_SIZE
entries
offset
misses
CACHE_RECORD_SIZE
offset
count
CACHE_RECORD_SIZE
entries
offset
CHAR_OFFSET
ch
entries
offset
INDEX_OFFSET
symIndex
entries
offset
NEXT_OFFSET
nextIndex
if
length
break
entry
entries
offset
NEXT_OFFSET
entries
fCacheLines
entry
ch
fSymbolChars
charsOffset
count
entries
offset
count
CACHE_RECORD_SIZE
misses
