AbstractStringValidator
int
fLength
int
fMaxLength
MAX_VALUE
int
fMinLength
Vector
fEnumeration
String
FACET_SPECIAL_TOKEN
String
SPECIAL_TOKEN_NONE
String
SPECIAL_TOKEN_NMTOKEN
String
SPECIAL_TOKEN_NAME
String
SPECIAL_TOKEN_IDNAME
String
SPECIAL_TOKEN_IDREFNAME
String
SPECIAL_TOKEN_NCNAME
String
SPECIAL_TOKEN_IDNCNAME
String
SPECIAL_TOKEN_IDREFNCNAME
String
SPECIAL_TOKEN_ENTITY
String
fTokenType
SPECIAL_TOKEN_NONE
AbstractStringValidator
AbstractStringValidator
base
DatatypeValidator
facets
Hashtable
derivedByList
boolean
fBaseValidator
base
if
derivationList
derivedByList
return
if
facets
block
for
forControl
Enumeration
e
keys
hasMoreElements
block
String
key
String
nextElement
if
equals
ELT_LENGTH
block
fFacetsDefined
FACET_LENGTH
String
lengthValue
String
get
key
try
fLength
parseInt
lengthValue
catchClause
nfe
throw
InvalidDatatypeFacetException
lengthValue
if
fLength
throw
InvalidDatatypeFacetException
lengthValue
if
equals
ELT_MINLENGTH
block
fFacetsDefined
FACET_MINLENGTH
String
minLengthValue
String
get
key
try
fMinLength
parseInt
minLengthValue
catchClause
nfe
throw
InvalidDatatypeFacetException
minLengthValue
if
fMinLength
throw
InvalidDatatypeFacetException
minLengthValue
if
equals
ELT_MAXLENGTH
block
fFacetsDefined
FACET_MAXLENGTH
String
maxLengthValue
String
get
key
try
fMaxLength
parseInt
maxLengthValue
catchClause
nfe
throw
InvalidDatatypeFacetException
maxLengthValue
if
fMaxLength
throw
InvalidDatatypeFacetException
maxLengthValue
if
equals
ELT_PATTERN
block
fFacetsDefined
FACET_PATTERN
fPattern
String
get
key
if
fPattern
fRegex
RegularExpression
fPattern
if
equals
ELT_ENUMERATION
block
fEnumeration
Vector
get
key
fFacetsDefined
FACET_ENUMERATION
if
equals
FACET_FIXED
block
fFlags
Short
get
key
if
key
FACET_SPECIAL_TOKEN
block
setTokenType
String
get
key
block
assignAdditionalFacets
key
facets
if
base
block
if
fFacetsDefined
FACET_ENUMERATION
fEnumeration
block
int
i
try
for
forControl
i
size
i
block
AbstractStringValidator
base
catchClause
idve
throw
InvalidDatatypeFacetException
elementAt
i
if
fFacetsDefined
FACET_LENGTH
block
if
fFacetsDefined
FACET_MAXLENGTH
block
throw
InvalidDatatypeFacetException
if
fFacetsDefined
FACET_MINLENGTH
block
throw
InvalidDatatypeFacetException
if
fFacetsDefined
FACET_MINLENGTH
FACET_MAXLENGTH
block
if
fMinLength
fMaxLength
block
throw
InvalidDatatypeFacetException
fMinLength
fMaxLength
if
base
block
AbstractStringValidator
strBase
AbstractStringValidator
base
if
fFacetsDefined
FACET_LENGTH
block
if
fFacetsDefined
FACET_MAXLENGTH
block
throw
InvalidDatatypeFacetException
if
fFacetsDefined
FACET_MINLENGTH
block
throw
InvalidDatatypeFacetException
if
fFacetsDefined
FACET_LENGTH
block
if
fLength
fLength
throw
InvalidDatatypeFacetException
fLength
fLength
if
fFacetsDefined
FACET_LENGTH
block
if
fFacetsDefined
FACET_MAXLENGTH
block
throw
InvalidDatatypeFacetException
if
fFacetsDefined
FACET_MINLENGTH
block
throw
InvalidDatatypeFacetException
if
fFacetsDefined
FACET_MINLENGTH
block
if
fFacetsDefined
FACET_MAXLENGTH
block
if
fMinLength
fMaxLength
block
throw
InvalidDatatypeFacetException
fMinLength
fMaxLength
if
fFacetsDefined
FACET_MINLENGTH
block
if
fFlags
FACET_MINLENGTH
fMinLength
fMinLength
block
throw
InvalidDatatypeFacetException
fMinLength
fMinLength
if
fMinLength
fMinLength
block
throw
InvalidDatatypeFacetException
fMinLength
fMinLength
if
fFacetsDefined
FACET_MINLENGTH
fFacetsDefined
FACET_MAXLENGTH
block
if
fMinLength
fMaxLength
block
throw
InvalidDatatypeFacetException
fMinLength
fMaxLength
if
fFacetsDefined
FACET_MAXLENGTH
block
if
fFlags
FACET_MAXLENGTH
fMaxLength
fMaxLength
block
throw
InvalidDatatypeFacetException
fMaxLength
fMaxLength
if
fFacetsDefined
FACET_MAXLENGTH
block
if
fMaxLength
fMaxLength
block
throw
InvalidDatatypeFacetException
fMaxLength
fMaxLength
checkBaseFacetConstraints
if
fFacetsDefined
FACET_LENGTH
block
if
fFacetsDefined
FACET_LENGTH
block
fFacetsDefined
FACET_LENGTH
fLength
fLength
if
fFacetsDefined
FACET_MINLENGTH
block
if
fFacetsDefined
FACET_MINLENGTH
block
fFacetsDefined
FACET_MINLENGTH
fMinLength
fMinLength
if
fFacetsDefined
FACET_MAXLENGTH
block
if
fFacetsDefined
FACET_MAXLENGTH
block
fFacetsDefined
FACET_MAXLENGTH
fMaxLength
fMaxLength
if
fFacetsDefined
FACET_ENUMERATION
fFacetsDefined
FACET_ENUMERATION
block
fFacetsDefined
FACET_ENUMERATION
fEnumeration
fEnumeration
inheritAdditionalFacets
fFlags
fFlags
assignAdditionalFacets
key
String
facets
Hashtable
inheritAdditionalFacets
checkBaseFacetConstraints
derivationList
boolean
derivedByList
boolean
return
derivedByList
validate
Object
content
String
state
Object
checkContent
content
state
return
checkContent
content
String
state
Object
asBase
boolean
if
fBaseValidator
block
AbstractStringValidator
fBaseValidator
if
fFacetsDefined
FACET_PATTERN
block
if
fRegex
matches
content
throw
InvalidDatatypeValueException
content
fPattern
if
fTokenType
SPECIAL_TOKEN_NONE
block
validateToken
fTokenType
content
if
asBase
return
checkValueSpace
content
int
length
getLength
content
if
fFacetsDefined
FACET_MAXLENGTH
block
if
length
fMaxLength
block
throw
InvalidDatatypeValueException
content
length
fMaxLength
if
fFacetsDefined
FACET_MINLENGTH
block
if
length
fMinLength
block
throw
InvalidDatatypeValueException
content
length
fMinLength
if
fFacetsDefined
FACET_LENGTH
block
if
length
fLength
block
throw
InvalidDatatypeValueException
content
length
fLength
if
fFacetsDefined
FACET_ENUMERATION
fEnumeration
block
if
contains
content
throw
InvalidDatatypeValueException
content
fEnumeration
getLength
int
content
String
return
length
checkValueSpace
content
String
clone
Object
throw
CloneNotSupportedException
getClass
getName
setTokenType
tokenType
String
fTokenType
tokenType
validateToken
tokenType
String
content
String
int
len
if
content
len
length
block
throw
InvalidDatatypeValueException
boolean
seenErr
if
tokenType
SPECIAL_TOKEN_NMTOKEN
block
seenErr
validNmtoken
content
if
tokenType
SPECIAL_TOKEN_NAME
tokenType
SPECIAL_TOKEN_IDNAME
tokenType
SPECIAL_TOKEN_IDREFNAME
block
seenErr
validName
content
if
tokenType
SPECIAL_TOKEN_NCNAME
tokenType
SPECIAL_TOKEN_IDNCNAME
tokenType
SPECIAL_TOKEN_IDREFNCNAME
tokenType
SPECIAL_TOKEN_ENTITY
block
seenErr
validNCName
content
if
seenErr
block
throw
InvalidDatatypeValueException
content
tokenType
AbstractDatatypeValidator
