DatatypeValidatorFactoryImpl
boolean
fDebug
Hashtable
fRegistry
Hashtable
fDTDDatatypeRegistry
Hashtable
fSchemaDatatypeRegistry
byte
fRegistryExpanded
byte
fSchemaValidation
DatatypeValidatorFactoryImpl
fRegistry
Hashtable
fSchemaDatatypeRegistry
Hashtable
fDTDDatatypeRegistry
Hashtable
initializeDTDRegistry
if
fRegistryExpanded
block
try
put
StringDatatypeValidator
put
IDDatatypeValidator
put
IDREFDatatypeValidator
put
ENTITYDatatypeValidator
put
NOTATIONDatatypeValidator
createDTDDatatypeValidator
IDREFDatatypeValidator
createDTDDatatypeValidator
ENTITYDatatypeValidator
Hashtable
facets
Hashtable
put
FACET_SPECIAL_TOKEN
SPECIAL_TOKEN_NMTOKEN
put
ELT_WHITESPACE
ATT_COLLAPSE
createDTDDatatypeValidator
StringDatatypeValidator
facets
createDTDDatatypeValidator
getDatatypeValidator
fRegistryExpanded
catchClause
ex
printStackTrace
expandRegistryToFullSchemaSet
fSchemaValidation
if
fRegistryExpanded
block
DatatypeValidator
v
try
put
AnySimpleType
put
BooleanDatatypeValidator
put
FloatDatatypeValidator
put
DoubleDatatypeValidator
put
DecimalDatatypeValidator
put
HexBinaryDatatypeValidator
put
Base64BinaryDatatypeValidator
put
AnyURIDatatypeValidator
put
QNameDatatypeValidator
put
DurationDatatypeValidator
put
DayDatatypeValidator
put
TimeDatatypeValidator
put
DateTimeDatatypeValidator
put
DateDatatypeValidator
put
MonthDayDatatypeValidator
put
YearMonthDatatypeValidator
put
YearDatatypeValidator
put
MonthDatatypeValidator
if
fRegistryExpanded
block
initializeDTDRegistry
Hashtable
facets
Hashtable
put
ELT_WHITESPACE
ATT_REPLACE
createSchemaDatatypeValidator
getDatatypeValidator
facets
clear
put
ELT_WHITESPACE
ATT_COLLAPSE
createSchemaDatatypeValidator
getDatatypeValidator
facets
clear
put
ELT_WHITESPACE
ATT_COLLAPSE
put
ELT_PATTERN
createSchemaDatatypeValidator
getDatatypeValidator
facets
clear
put
ELT_WHITESPACE
ATT_COLLAPSE
put
FACET_SPECIAL_TOKEN
SPECIAL_TOKEN_NAME
createSchemaDatatypeValidator
getDatatypeValidator
facets
clear
put
ELT_WHITESPACE
ATT_COLLAPSE
put
FACET_SPECIAL_TOKEN
SPECIAL_TOKEN_NCNAME
createSchemaDatatypeValidator
getDatatypeValidator
facets
clear
put
ELT_FRACTIONDIGITS
createSchemaDatatypeValidator
getDatatypeValidator
facets
clear
put
ELT_MAXINCLUSIVE
createSchemaDatatypeValidator
getDatatypeValidator
facets
clear
put
ELT_MAXINCLUSIVE
createSchemaDatatypeValidator
getDatatypeValidator
facets
clear
put
ELT_MAXINCLUSIVE
put
ELT_MININCLUSIVE
createSchemaDatatypeValidator
getDatatypeValidator
facets
clear
put
ELT_MAXINCLUSIVE
put
ELT_MININCLUSIVE
createSchemaDatatypeValidator
getDatatypeValidator
facets
clear
put
ELT_MAXINCLUSIVE
put
ELT_MININCLUSIVE
createSchemaDatatypeValidator
getDatatypeValidator
facets
clear
put
ELT_MAXINCLUSIVE
put
ELT_MININCLUSIVE
createSchemaDatatypeValidator
getDatatypeValidator
facets
clear
put
ELT_MININCLUSIVE
createSchemaDatatypeValidator
getDatatypeValidator
facets
clear
put
ELT_MAXINCLUSIVE
createSchemaDatatypeValidator
getDatatypeValidator
facets
clear
put
ELT_MAXINCLUSIVE
createSchemaDatatypeValidator
getDatatypeValidator
facets
clear
put
ELT_MAXINCLUSIVE
createSchemaDatatypeValidator
getDatatypeValidator
facets
clear
put
ELT_MAXINCLUSIVE
createSchemaDatatypeValidator
getDatatypeValidator
facets
clear
put
ELT_MININCLUSIVE
createSchemaDatatypeValidator
getDatatypeValidator
facets
IDDatatypeValidator
getDatatypeValidator
IDREFDatatypeValidator
getDatatypeValidator
setNCNameValidator
getDatatypeValidator
fRegistryExpanded
catchClause
ex
printStackTrace
resetRegistry
clear
fSchemaValidation
createDatatypeValidator
DatatypeValidator
typeName
String
base
DatatypeValidator
facets
Hashtable
list
boolean
if
base
block
return
DatatypeValidator
simpleType
createSchemaValidator
typeName
base
facets
list
registerUserDefinedValidator
typeName
simpleType
return
simpleType
createDatatypeValidator
DatatypeValidator
typeName
String
validators
Vector
DatatypeValidator
simpleType
if
validators
block
simpleType
UnionDatatypeValidator
validators
if
simpleType
block
registerUserDefinedValidator
typeName
simpleType
return
simpleType
getDatatypeValidator
DatatypeValidator
type
String
AbstractDatatypeValidator
simpleType
if
type
block
return
simpleType
AbstractDatatypeValidator
get
type
if
simpleType
fSchemaValidation
block
simpleType
AbstractDatatypeValidator
get
type
if
simpleType
block
return
DatatypeValidator
get
type
return
DatatypeValidator
simpleType
createSchemaDatatypeValidator
DatatypeValidator
typeName
String
base
DatatypeValidator
facets
Hashtable
list
boolean
DatatypeValidator
primitive
createSchemaValidator
typeName
base
facets
list
registerSchemaValidator
typeName
primitive
return
primitive
createDTDDatatypeValidator
DatatypeValidator
typeName
String
base
DatatypeValidator
facets
Hashtable
list
boolean
DatatypeValidator
primitive
createSchemaValidator
typeName
base
facets
list
registerDTDValidator
typeName
primitive
return
primitive
createSchemaValidator
DatatypeValidator
typeName
String
base
DatatypeValidator
facets
Hashtable
list
boolean
DatatypeValidator
simpleType
if
list
block
simpleType
ListDatatypeValidator
base
facets
list
block
try
String
value
String
get
ELT_WHITESPACE
if
value
base
StringDatatypeValidator
block
if
equals
ATT_COLLAPSE
throw
InvalidDatatypeFacetException
value
remove
ELT_WHITESPACE
Class
validatorDef
getClass
Class
validatorArgsClass
Class
DatatypeValidator
Hashtable
boolean
Object
validatorArgs
Object
base
facets
FALSE
Constructor
validatorConstructor
getConstructor
validatorArgsClass
simpleType
DatatypeValidator
createDatatypeValidator
validatorConstructor
validatorArgs
catchClause
e
printStackTrace
return
simpleType
registerUserDefinedValidator
typeName
String
simpleType
DatatypeValidator
if
simpleType
block
put
typeName
simpleType
registerSchemaValidator
typeName
String
simpleType
DatatypeValidator
if
simpleType
block
put
typeName
simpleType
registerDTDValidator
typeName
String
simpleType
DatatypeValidator
if
simpleType
block
put
typeName
simpleType
createDatatypeValidator
Object
validatorConstructor
Constructor
arguments
Object
Object
validator
try
validator
newInstance
arguments
catchClause
e
if
fDebug
block
printStackTrace
catchClause
e
if
fDebug
block
printStackTrace
catchClause
e
if
fDebug
block
printStackTrace
catchClause
e
if
fDebug
block
println
getTargetException
getMessage
getTargetException
printStackTrace
block
throw
InvalidDatatypeFacetException
getTargetException
getMessage
return
validator
DatatypeValidatorFactory
