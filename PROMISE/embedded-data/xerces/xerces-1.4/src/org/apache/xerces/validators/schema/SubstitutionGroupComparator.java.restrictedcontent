SubstitutionGroupComparator
int
TOP_LEVEL_SCOPE
StringPool
fStringPool
GrammarResolver
fGrammarResolver
XMLErrorReporter
fErrorReporter
SubstitutionGroupComparator
SubstitutionGroupComparator
grammarResolver
GrammarResolver
stringPool
StringPool
errorReporter
XMLErrorReporter
fGrammarResolver
grammarResolver
fStringPool
stringPool
fErrorReporter
errorReporter
getStringPool
StringPool
return
fStringPool
getErrorReporter
XMLErrorReporter
return
fErrorReporter
isEquivalentTo
boolean
anElement
QName
exemplar
QName
if
localpart
localpart
uri
uri
block
return
if
fGrammarResolver
fStringPool
block
throw
SAXException
int
uriIndex
uri
int
localpartIndex
localpart
String
uri
toString
uri
String
localpart
toString
localpart
if
uri
block
return
SchemaGrammar
sGrammar
try
sGrammar
SchemaGrammar
getGrammar
uri
catchClause
ce
String
er
uri
Object
a
er
reportError
getLocator
XML_DOMAIN
MSG_GENERIC_SCHEMA_ERROR
SCHEMA_GENERIC_ERROR
a
ERRORTYPE_RECOVERABLE_ERROR
return
if
sGrammar
block
return
int
elementIndex
getElementDeclIndex
uriIndex
localpartIndex
TOP_LEVEL_SCOPE
int
anElementIndex
elementIndex
String
substitutionGroupFullName
getElementDeclSubstitutionGroupAffFullName
elementIndex
boolean
foundIt
while
substitutionGroupFullName
block
int
commaAt
indexOf
uri
localpart
substitutionGroupFullName
if
commaAt
block
if
commaAt
block
uri
substring
commaAt
localpart
substring
commaAt
if
uri
block
return
try
sGrammar
SchemaGrammar
getGrammar
uri
catchClause
ce
String
er
uri
Object
a
er
reportError
getLocator
XML_DOMAIN
MSG_GENERIC_SCHEMA_ERROR
SCHEMA_GENERIC_ERROR
a
ERRORTYPE_RECOVERABLE_ERROR
return
if
sGrammar
block
return
uriIndex
addSymbol
uri
localpartIndex
addSymbol
localpart
elementIndex
getElementDeclIndex
uriIndex
localpartIndex
TOP_LEVEL_SCOPE
if
elementIndex
block
return
if
uriIndex
uri
localpartIndex
localpart
block
if
getElementDeclBlockSet
elementIndex
SUBSTITUTION
block
return
foundIt
break
substitutionGroupFullName
getElementDeclSubstitutionGroupAffFullName
elementIndex
if
foundIt
block
return
TraverseSchema
ComplexTypeInfo
aComplexType
getElementComplexTypeInfo
anElementIndex
int
exemplarBlockSet
getElementDeclBlockSet
elementIndex
if
aComplexType
block
XMLElementDecl
anElementDecl
XMLElementDecl
getElementDecl
anElementIndex
anElementDecl
DatatypeValidator
anElementDV
datatypeValidator
XMLElementDecl
exemplarDecl
XMLElementDecl
getElementDecl
elementIndex
exemplarDecl
DatatypeValidator
exemplarDV
datatypeValidator
return
anElementDV
anElementDV
exemplarDV
exemplarBlockSet
RESTRICTION
int
anElementDerivationMethod
derivedBy
if
anElementDerivationMethod
exemplarBlockSet
return
TraverseSchema
ComplexTypeInfo
exemplarComplexType
getElementComplexTypeInfo
elementIndex
for
forControl
TraverseSchema
ComplexTypeInfo
tempType
aComplexType
tempType
tempType
exemplarComplexType
tempType
baseComplexTypeInfo
block
if
blockSet
anElementDerivationMethod
block
return
return
isAllowedByWildcard
boolean
element
QName
wuri
int
wother
boolean
if
wother
uri
wuri
wother
uri
wuri
block
return
if
fGrammarResolver
fStringPool
block
throw
SAXException
String
uri
toString
uri
if
uri
return
SchemaGrammar
sGrammar
try
sGrammar
SchemaGrammar
getGrammar
uri
catchClause
ce
String
er
uri
Object
a
er
reportError
getLocator
XML_DOMAIN
MSG_GENERIC_SCHEMA_ERROR
SCHEMA_GENERIC_ERROR
a
ERRORTYPE_RECOVERABLE_ERROR
return
if
sGrammar
return
int
elementIndex
getElementDeclIndex
element
TOP_LEVEL_SCOPE
Vector
substitutionGroupQNames
getElementDeclAllSubstitutionGroupQNames
elementIndex
fGrammarResolver
fStringPool
int
size
substitutionGroupQNames
size
for
forControl
int
i
i
size
i
block
QName
name
SchemaGrammar
OneSubGroup
elementAt
i
if
wother
uri
wuri
wother
uri
wuri
block
return
return
