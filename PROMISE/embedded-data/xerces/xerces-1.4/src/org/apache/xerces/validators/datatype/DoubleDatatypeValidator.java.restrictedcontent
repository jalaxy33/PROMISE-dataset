DoubleDatatypeValidator
DoubleDatatypeValidator
DoubleDatatypeValidator
base
DatatypeValidator
facets
Hashtable
derivedByList
boolean
base
facets
derivedByList
compare
int
value1
String
value2
String
try
double
d1
dValueOf
doubleValue
value1
double
d2
dValueOf
doubleValue
value2
return
compareDoubles
d1
d2
catchClause
e
return
assignAdditionalFacets
key
String
facets
Hashtable
throw
InvalidDatatypeFacetException
getErrorString
ILLEGAL_DOUBLE_FACET
MSG_NONE
Object
key
compareValues
int
value1
Object
value2
Object
double
d1
Double
value1
double
d2
Double
value2
return
compareDoubles
d1
d2
setMaxInclusive
value
String
fMaxInclusive
dValueOf
value
setMinInclusive
value
String
fMinInclusive
dValueOf
value
setMaxExclusive
value
String
fMaxExclusive
dValueOf
value
setMinExclusive
value
String
fMinExclusive
dValueOf
value
setEnumeration
enumeration
Vector
if
enumeration
block
fEnumeration
Double
size
Object
baseEnum
try
for
forControl
int
i
i
size
i
block
fEnumeration
i
dValueOf
String
elementAt
i
DoubleDatatypeValidator
fBaseValidator
catchClause
e
throw
InvalidDatatypeValueException
getMessage
getMaxInclusive
String
isBase
boolean
return
isBase
DoubleDatatypeValidator
fBaseValidator
Double
fMaxInclusive
getMinInclusive
String
isBase
boolean
return
isBase
DoubleDatatypeValidator
fBaseValidator
Double
fMinInclusive
getMaxExclusive
String
isBase
boolean
return
isBase
DoubleDatatypeValidator
fBaseValidator
Double
fMaxExclusive
getMinExclusive
String
isBase
boolean
return
isBase
DoubleDatatypeValidator
fBaseValidator
Double
fMinExclusive
checkContentEnum
content
String
state
Object
enumeration
Vector
checkContent
content
state
enumeration
checkContent
content
String
state
Object
enumeration
Vector
asBase
boolean
if
fBaseValidator
block
DoubleDatatypeValidator
fBaseValidator
if
fFacetsDefined
FACET_PATTERN
block
if
fRegex
matches
content
throw
InvalidDatatypeValueException
content
fPattern
if
asBase
return
Double
d
try
d
dValueOf
content
catchClause
nfe
throw
InvalidDatatypeValueException
getErrorString
NOT_DOUBLE
MSG_NONE
Object
content
if
enumeration
block
int
size
size
Double
enumDoubles
Double
size
int
i
try
for
forControl
i
size
i
enumDoubles
i
dValueOf
String
elementAt
i
catchClause
nfe
throw
InvalidDatatypeValueException
getErrorString
INVALID_ENUM_VALUE
MSG_NONE
Object
elementAt
i
enumCheck
doubleValue
enumDoubles
boundsCheck
d
if
fFacetsDefined
FACET_ENUMERATION
fEnumeration
enumCheck
doubleValue
Double
fEnumeration
getInvalidFacetMsg
int
return
ILLEGAL_DOUBLE_FACET
dValueOf
Double
s
String
Double
d
try
d
valueOf
s
catchClause
nfe
if
equals
block
d
Double
POSITIVE_INFINITY
if
equals
block
d
Double
NEGATIVE_INFINITY
if
equals
block
d
Double
NaN
block
throw
nfe
return
d
enumCheck
v
double
enumDoubles
Double
for
forControl
int
i
i
length
i
block
if
v
enumDoubles
i
doubleValue
return
throw
InvalidDatatypeValueException
getErrorString
NOT_ENUM_VALUE
MSG_NONE
Object
Double
v
compareDoubles
int
d1
double
d2
double
long
d1V
doubleToLongBits
d1
long
d2V
doubleToLongBits
d2
if
d1
d2
block
return
if
d1
d2
block
return
if
d1V
d2V
block
return
return
d1V
d2V
AbstractNumericValidator
