ParentNode
long
serialVersionUID
CoreDocumentImpl
ownerDocument
ChildNode
firstChild
int
fCachedLength
ChildNode
fCachedChild
int
fCachedChildIndex
ParentNode
ownerDocument
CoreDocumentImpl
ownerDocument
ownerDocument
ownerDocument
ParentNode
cloneNode
Node
deep
boolean
if
needsSyncChildren
block
synchronizeChildren
ParentNode
newnode
ParentNode
cloneNode
deep
ownerDocument
ownerDocument
firstChild
fCachedChildIndex
fCachedLength
if
deep
block
for
forControl
ChildNode
child
firstChild
child
child
nextSibling
block
appendChild
cloneNode
return
newnode
getOwnerDocument
Document
return
ownerDocument
ownerDocument
CoreDocumentImpl
return
ownerDocument
setOwnerDocument
doc
CoreDocumentImpl
if
needsSyncChildren
block
synchronizeChildren
setOwnerDocument
doc
ownerDocument
doc
for
forControl
ChildNode
child
firstChild
child
child
nextSibling
block
setOwnerDocument
doc
hasChildNodes
boolean
if
needsSyncChildren
block
synchronizeChildren
return
firstChild
getChildNodes
NodeList
if
needsSyncChildren
block
synchronizeChildren
return
getFirstChild
Node
if
needsSyncChildren
block
synchronizeChildren
return
firstChild
getLastChild
Node
if
needsSyncChildren
block
synchronizeChildren
return
lastChild
lastChild
ChildNode
return
firstChild
previousSibling
lastChild
node
ChildNode
if
firstChild
block
previousSibling
node
insertBefore
Node
newChild
Node
refChild
Node
return
internalInsertBefore
newChild
refChild
internalInsertBefore
Node
newChild
Node
refChild
Node
replace
boolean
boolean
errorChecking
errorChecking
if
getNodeType
DOCUMENT_FRAGMENT_NODE
block
if
errorChecking
block
for
forControl
Node
kid
getFirstChild
kid
kid
getNextSibling
block
if
isKidOK
kid
block
throw
DOMException
HIERARCHY_REQUEST_ERR
while
hasChildNodes
block
insertBefore
getFirstChild
refChild
return
newChild
if
newChild
refChild
block
refChild
getNextSibling
removeChild
newChild
insertBefore
newChild
refChild
return
newChild
if
needsSyncChildren
block
synchronizeChildren
if
errorChecking
block
if
isReadOnly
block
throw
DOMException
NO_MODIFICATION_ALLOWED_ERR
if
getOwnerDocument
ownerDocument
block
throw
DOMException
WRONG_DOCUMENT_ERR
if
isKidOK
newChild
block
throw
DOMException
HIERARCHY_REQUEST_ERR
if
refChild
getParentNode
block
throw
DOMException
NOT_FOUND_ERR
boolean
treeSafe
for
forControl
NodeImpl
a
treeSafe
a
a
parentNode
block
treeSafe
newChild
a
if
treeSafe
block
throw
DOMException
HIERARCHY_REQUEST_ERR
insertingNode
replace
ChildNode
newInternal
ChildNode
newChild
Node
oldparent
parentNode
if
oldparent
block
removeChild
newInternal
ChildNode
refInternal
ChildNode
refChild
ownerNode
isOwned
if
firstChild
block
firstChild
newInternal
isFirstChild
previousSibling
newInternal
block
if
refInternal
block
ChildNode
lastChild
previousSibling
nextSibling
newInternal
previousSibling
lastChild
previousSibling
newInternal
block
if
refChild
firstChild
block
isFirstChild
nextSibling
firstChild
previousSibling
previousSibling
previousSibling
newInternal
firstChild
newInternal
isFirstChild
block
ChildNode
prev
previousSibling
nextSibling
refInternal
nextSibling
newInternal
previousSibling
newInternal
previousSibling
prev
changed
if
fCachedLength
block
fCachedLength
if
fCachedChildIndex
block
if
fCachedChild
refInternal
block
fCachedChild
newInternal
block
fCachedChildIndex
insertedNode
newInternal
replace
checkNormalizationAfterInsert
newInternal
return
newChild
removeChild
Node
oldChild
Node
return
internalRemoveChild
oldChild
internalRemoveChild
Node
oldChild
Node
replace
boolean
CoreDocumentImpl
ownerDocument
ownerDocument
if
errorChecking
block
if
isReadOnly
block
throw
DOMException
NO_MODIFICATION_ALLOWED_ERR
if
oldChild
getParentNode
block
throw
DOMException
NOT_FOUND_ERR
ChildNode
oldInternal
ChildNode
oldChild
removingNode
oldInternal
replace
if
fCachedLength
block
fCachedLength
if
fCachedChildIndex
block
if
fCachedChild
oldInternal
block
fCachedChildIndex
fCachedChild
previousSibling
block
fCachedChildIndex
if
oldInternal
firstChild
block
isFirstChild
firstChild
nextSibling
if
firstChild
block
isFirstChild
previousSibling
previousSibling
block
ChildNode
prev
previousSibling
ChildNode
next
nextSibling
nextSibling
next
if
next
block
previousSibling
prev
block
previousSibling
prev
ChildNode
oldPreviousSibling
previousSibling
ownerNode
ownerDocument
isOwned
nextSibling
previousSibling
changed
removedNode
replace
checkNormalizationAfterRemove
oldPreviousSibling
return
oldInternal
replaceChild
Node
newChild
Node
oldChild
Node
replacingNode
internalInsertBefore
newChild
oldChild
if
newChild
oldChild
block
internalRemoveChild
oldChild
replacedNode
return
oldChild
nodeListGetLength
int
if
fCachedLength
block
ChildNode
node
if
fCachedChildIndex
fCachedChild
block
fCachedLength
fCachedChildIndex
node
fCachedChild
block
node
firstChild
fCachedLength
for
forControl
node
node
nextSibling
block
fCachedLength
return
fCachedLength
getLength
int
return
nodeListGetLength
nodeListItem
Node
index
int
if
fCachedChildIndex
fCachedChild
block
if
fCachedChildIndex
index
block
while
fCachedChildIndex
index
fCachedChild
block
fCachedChildIndex
fCachedChild
nextSibling
if
fCachedChildIndex
index
block
while
fCachedChildIndex
index
fCachedChild
block
fCachedChildIndex
fCachedChild
previousSibling
return
fCachedChild
fCachedChild
firstChild
for
forControl
fCachedChildIndex
fCachedChildIndex
index
fCachedChild
fCachedChildIndex
block
fCachedChild
nextSibling
return
fCachedChild
item
Node
index
int
return
nodeListItem
index
getChildNodesUnoptimized
NodeList
if
needsSyncChildren
block
synchronizeChildren
return
NodeList
getLength
int
return
nodeListGetLength
item
Node
index
int
return
nodeListItem
index
normalize
if
isNormalized
block
return
if
needsSyncChildren
block
synchronizeChildren
ChildNode
kid
for
forControl
kid
firstChild
kid
kid
nextSibling
block
normalize
isNormalized
setReadOnly
readOnly
boolean
deep
boolean
setReadOnly
readOnly
deep
if
deep
block
if
needsSyncChildren
block
synchronizeChildren
for
forControl
ChildNode
mykid
firstChild
mykid
mykid
nextSibling
block
if
getNodeType
ENTITY_REFERENCE_NODE
block
setReadOnly
readOnly
synchronizeChildren
needsSyncChildren
checkNormalizationAfterInsert
insertedChild
ChildNode
if
getNodeType
TEXT_NODE
block
ChildNode
prev
previousSibling
ChildNode
next
nextSibling
if
prev
getNodeType
TEXT_NODE
next
getNodeType
TEXT_NODE
block
isNormalized
block
if
isNormalized
block
isNormalized
checkNormalizationAfterRemove
previousSibling
ChildNode
if
previousSibling
getNodeType
TEXT_NODE
block
ChildNode
next
nextSibling
if
next
getNodeType
TEXT_NODE
block
isNormalized
writeObject
out
ObjectOutputStream
if
needsSyncChildren
block
synchronizeChildren
defaultWriteObject
readObject
ois
ObjectInputStream
defaultReadObject
needsSyncChildren
fCachedLength
fCachedChildIndex
ChildNode
