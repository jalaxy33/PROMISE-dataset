Base64
int
BASELENGTH
int
LOOKUPLENGTH
int
TWENTYFOURBITGROUP
int
EIGHTBIT
int
SIXTEENBIT
int
SIXBIT
int
FOURBYTE
int
SIGN
byte
PAD
byte
boolean
fDebug
byte
base64Alphabet
byte
BASELENGTH
byte
lookUpBase64Alphabet
byte
LOOKUPLENGTH
for
forControl
int
i
i
BASELENGTH
i
block
base64Alphabet
i
for
forControl
int
i
i
i
block
base64Alphabet
i
byte
i
for
forControl
int
i
i
i
block
base64Alphabet
i
byte
i
for
forControl
int
i
i
i
block
base64Alphabet
i
byte
i
base64Alphabet
base64Alphabet
for
forControl
int
i
i
i
lookUpBase64Alphabet
i
byte
i
for
forControl
int
i
j
i
i
j
lookUpBase64Alphabet
i
byte
j
for
forControl
int
i
j
i
i
j
lookUpBase64Alphabet
i
byte
j
lookUpBase64Alphabet
byte
lookUpBase64Alphabet
byte
isWhiteSpace
boolean
octect
byte
return
octect
octect
octect
octect
isPad
boolean
octect
byte
return
octect
PAD
isData
boolean
octect
byte
return
base64Alphabet
octect
isBase64
boolean
isValidString
String
if
isValidString
return
return
isArrayByteBase64
getBytes
isBase64
boolean
octect
byte
return
isWhiteSpace
octect
isPad
octect
isData
octect
removeWhiteSpace
byte
data
byte
if
data
return
int
newSize
int
len
length
int
i
for
forControl
i
len
i
block
if
isWhiteSpace
data
i
newSize
if
newSize
len
return
data
byte
arrayWithoutSpaces
byte
newSize
int
j
for
forControl
i
i
len
i
block
if
isWhiteSpace
data
i
continue
arrayWithoutSpaces
j
data
i
return
arrayWithoutSpaces
isArrayByteBase64
boolean
arrayOctect
byte
return
getDecodedDataLength
arrayOctect
encode
byte
binaryData
byte
if
binaryData
return
int
lengthDataBits
length
EIGHTBIT
int
fewerThan24bits
lengthDataBits
TWENTYFOURBITGROUP
int
numberTriplets
lengthDataBits
TWENTYFOURBITGROUP
byte
encodedData
if
fewerThan24bits
encodedData
byte
numberTriplets
encodedData
byte
numberTriplets
byte
k
l
b1
b2
b3
int
encodedIndex
int
dataIndex
int
i
if
fDebug
block
println
numberTriplets
for
forControl
i
i
numberTriplets
i
block
dataIndex
i
b1
binaryData
dataIndex
b2
binaryData
dataIndex
b3
binaryData
dataIndex
if
fDebug
block
println
b1
b2
b3
l
byte
b2
k
byte
b1
encodedIndex
i
byte
val1
b1
SIGN
byte
b1
byte
b1
byte
val2
b2
SIGN
byte
b2
byte
b2
byte
val3
b3
SIGN
byte
b3
byte
b3
encodedData
encodedIndex
lookUpBase64Alphabet
val1
if
fDebug
block
println
val2
println
k
println
val2
k
encodedData
encodedIndex
lookUpBase64Alphabet
val2
k
encodedData
encodedIndex
lookUpBase64Alphabet
l
val3
encodedData
encodedIndex
lookUpBase64Alphabet
b3
dataIndex
i
encodedIndex
i
if
fewerThan24bits
EIGHTBIT
block
b1
binaryData
dataIndex
k
byte
b1
if
fDebug
block
println
b1
println
b1
byte
val1
b1
SIGN
byte
b1
byte
b1
encodedData
encodedIndex
lookUpBase64Alphabet
val1
encodedData
encodedIndex
lookUpBase64Alphabet
k
encodedData
encodedIndex
PAD
encodedData
encodedIndex
PAD
if
fewerThan24bits
SIXTEENBIT
block
b1
binaryData
dataIndex
b2
binaryData
dataIndex
l
byte
b2
k
byte
b1
byte
val1
b1
SIGN
byte
b1
byte
b1
byte
val2
b2
SIGN
byte
b2
byte
b2
encodedData
encodedIndex
lookUpBase64Alphabet
val1
encodedData
encodedIndex
lookUpBase64Alphabet
val2
k
encodedData
encodedIndex
lookUpBase64Alphabet
l
encodedData
encodedIndex
PAD
return
encodedData
decode
byte
base64Data
byte
if
base64Data
return
byte
normalizedBase64Data
removeWhiteSpace
base64Data
if
length
FOURBYTE
block
return
int
numberQuadruple
length
FOURBYTE
if
numberQuadruple
return
byte
byte
decodedData
byte
b1
b2
b3
b4
marker0
marker1
byte
d1
d2
d3
d4
int
i
int
encodedIndex
int
dataIndex
decodedData
byte
numberQuadruple
for
forControl
i
numberQuadruple
i
block
if
isData
d1
normalizedBase64Data
dataIndex
isData
d2
normalizedBase64Data
dataIndex
isData
d3
normalizedBase64Data
dataIndex
isData
d4
normalizedBase64Data
dataIndex
return
b1
base64Alphabet
d1
b2
base64Alphabet
d2
b3
base64Alphabet
d3
b4
base64Alphabet
d4
decodedData
encodedIndex
byte
b1
b2
decodedData
encodedIndex
byte
b2
b3
decodedData
encodedIndex
byte
b3
b4
if
isData
d1
normalizedBase64Data
dataIndex
isData
d2
normalizedBase64Data
dataIndex
block
return
b1
base64Alphabet
d1
b2
base64Alphabet
d2
d3
normalizedBase64Data
dataIndex
d4
normalizedBase64Data
dataIndex
if
isData
d3
isData
d4
block
if
isPad
d3
isPad
d4
block
if
b2
return
byte
tmp
byte
i
arraycopy
decodedData
tmp
i
tmp
encodedIndex
byte
b1
b2
return
tmp
if
isPad
d3
isPad
d4
block
b3
base64Alphabet
d3
if
b3
return
byte
tmp
byte
i
arraycopy
decodedData
tmp
i
tmp
encodedIndex
byte
b1
b2
tmp
encodedIndex
byte
b2
b3
return
tmp
block
return
block
b3
base64Alphabet
d3
b4
base64Alphabet
d4
decodedData
encodedIndex
byte
b1
b2
decodedData
encodedIndex
byte
b2
b3
decodedData
encodedIndex
byte
b3
b4
return
decodedData
getDecodedDataLength
int
base64Data
byte
if
base64Data
return
if
length
return
byte
decodedData
if
decodedData
decode
base64Data
return
return
length
