AllContentModel
QName
fAllElements
QName
boolean
fIsOptionalElement
boolean
boolean
fHasOptionalContent
boolean
fIsMixed
int
fNumElements
int
fNumRequired
Hashtable
fElementsHash
SubstitutionGroupComparator
fComparator
boolean
DEBUG_VALIDATE_CONTENT
AllContentModel
hasOptionalContent
boolean
fHasOptionalContent
hasOptionalContent
if
DEBUG_VALIDATE_CONTENT
block
println
println
println
hasOptionalContent
AllContentModel
hasOptionalContent
boolean
isMixed
boolean
hasOptionalContent
fIsMixed
isMixed
if
DEBUG_VALIDATE_CONTENT
block
println
fIsMixed
addElement
newElement
QName
isOptional
boolean
if
DEBUG_VALIDATE_CONTENT
block
println
if
fNumElements
length
block
QName
newAllElements
QName
length
boolean
newIsOptionalElements
boolean
length
arraycopy
fAllElements
newAllElements
length
arraycopy
fIsOptionalElement
newIsOptionalElements
length
fAllElements
newAllElements
fIsOptionalElement
newIsOptionalElements
fAllElements
fNumElements
newElement
fIsOptionalElement
fNumElements
isOptional
fNumElements
if
isOptional
block
fNumRequired
if
DEBUG_VALIDATE_CONTENT
block
showAllElements
println
checkUniqueParticleAttribution
gram
SchemaGrammar
for
forControl
int
i
i
fNumElements
i
fAllElements
i
uri
getContentSpecOrgUri
fAllElements
i
uri
for
forControl
int
j
j
fNumElements
j
block
for
forControl
int
k
j
k
fNumElements
k
block
conflict
CONTENTSPECNODE_LEAF
fAllElements
j
localpart
fAllElements
j
uri
CONTENTSPECNODE_LEAF
fAllElements
k
localpart
fAllElements
k
uri
fComparator
validateContent
int
children
QName
offset
int
length
int
if
DEBUG_VALIDATE_CONTENT
println
if
fHasOptionalContent
length
block
if
DEBUG_VALIDATE_CONTENT
block
println
println
return
int
numElements
fNumElements
if
fElementsHash
createElementsHash
boolean
elementSeen
boolean
numElements
int
numRequiredSeen
for
forControl
int
childIndex
childIndex
length
childIndex
block
QName
currChild
children
offset
childIndex
if
fIsMixed
localpart
continue
Integer
foundIdx
Integer
get
currChild
if
foundIdx
block
if
DEBUG_VALIDATE_CONTENT
block
println
childIndex
currChild
println
return
childIndex
int
foundIdxVal
intValue
if
elementSeen
foundIdxVal
block
if
DEBUG_VALIDATE_CONTENT
block
println
childIndex
currChild
println
return
childIndex
elementSeen
foundIdxVal
if
fIsOptionalElement
foundIdxVal
block
numRequiredSeen
if
numRequiredSeen
fNumRequired
block
if
DEBUG_VALIDATE_CONTENT
block
println
println
return
length
if
DEBUG_VALIDATE_CONTENT
block
println
println
return
validateContentSpecial
int
children
QName
offset
int
length
int
if
fComparator
return
validateContent
children
offset
length
if
DEBUG_VALIDATE_CONTENT
println
if
fHasOptionalContent
length
block
if
DEBUG_VALIDATE_CONTENT
block
println
println
return
int
numElements
fNumElements
boolean
elementSeen
boolean
numElements
int
numRequiredSeen
for
forControl
int
childIndex
childIndex
length
childIndex
block
QName
currChild
children
offset
childIndex
if
fIsMixed
localpart
continue
int
compareIdx
for
forControl
compareIdx
compareIdx
numElements
compareIdx
block
if
isEquivalentTo
currChild
fAllElements
compareIdx
block
if
elementSeen
compareIdx
block
if
DEBUG_VALIDATE_CONTENT
block
println
childIndex
currChild
println
return
childIndex
elementSeen
compareIdx
if
fIsOptionalElement
compareIdx
block
numRequiredSeen
continue
if
DEBUG_VALIDATE_CONTENT
block
println
childIndex
currChild
println
return
childIndex
if
numRequiredSeen
fNumRequired
block
if
DEBUG_VALIDATE_CONTENT
block
println
println
return
length
if
DEBUG_VALIDATE_CONTENT
block
println
println
return
setSubstitutionGroupComparator
comparator
SubstitutionGroupComparator
fComparator
comparator
whatCanGoHere
int
fullyValid
boolean
info
InsertableElementsInfo
if
DEBUG_VALIDATE_CONTENT
println
if
fElementsHash
createElementsHash
int
numElements
fNumElements
boolean
elementSeen
boolean
numElements
int
numChildren
length
int
insertAt
insertAt
QName
curChildren
curChildren
for
forControl
int
childIndex
childIndex
insertAt
childIndex
block
QName
currChild
curChildren
childIndex
Integer
foundIdx
Integer
get
currChild
if
foundIdx
return
childIndex
int
foundIdxVal
intValue
if
elementSeen
foundIdxVal
return
childIndex
elementSeen
foundIdxVal
canHoldPCData
fIsMixed
int
resultsCount
numElements
insertAt
resultsCount
resultsCount
if
results
length
resultsCount
results
boolean
resultsCount
if
possibleChildren
length
resultsCount
block
possibleChildren
QName
resultsCount
QName
possibleChildren
possibleChildren
int
possibleChildrenLen
length
for
forControl
int
i
i
possibleChildrenLen
i
block
possibleChildren
i
QName
int
possibleChildIdx
for
forControl
int
elemIdx
elemIdx
numElements
elemIdx
block
if
elementSeen
elemIdx
block
possibleChildren
possibleChildIdx
setValues
fAllElements
elemIdx
results
possibleChildIdx
possibleChildIdx
isValidEOC
resultsCount
if
DEBUG_VALIDATE_CONTENT
println
if
resultsCount
return
return
childCount
getContentLeafNameTypeVector
ContentLeafNameTypeVector
if
DEBUG_VALIDATE_CONTENT
println
if
DEBUG_VALIDATE_CONTENT
println
return
createElementsHash
int
numElements
fNumElements
fElementsHash
Hashtable
numElements
for
forControl
int
elementIdx
elementIdx
numElements
elementIdx
block
put
fAllElements
elementIdx
Integer
elementIdx
showAllElements
for
forControl
int
elementIdx
elementIdx
fNumElements
elementIdx
block
print
elementIdx
fAllElements
elementIdx
toString
if
fIsOptionalElement
elementIdx
block
print
println
XMLContentModel
