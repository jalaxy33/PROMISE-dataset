Test
boolean
DEBUG
String
tests
String
deleteResult
String
extractResult
String
INSERT
String
insertResult
INSERT
INSERT
INSERT
INSERT
INSERT
String
SURROUND
String
surroundResult
SURROUND
SURROUND
SURROUND
SURROUND
SURROUND
SURROUND
SURROUND
SURROUND
SURROUND
SURROUND
String
rangeDelete
String
rangeDeleteResult
String
INSERT2
String
INSERTED_TEXT
String
rangeInsertResult
main
args
String
if
length
block
printUsage
exit
Test
args
printUsage
println
println
println
println
println
println
println
println
println
println
println
Test
arg
String
if
equals
block
boolean
all
all
performTest
all
performTest
all
all
performTest
all
all
performTest
all
all
performTest
all
all
performTest
all
all
performTest
all
if
all
println
println
block
performTest
arg
performTest
boolean
arg
String
boolean
passed
try
DOMWriter
writer
DOMWriter
DOMParser
parser
DOMParser
if
equals
equals
block
println
arg
for
forControl
int
i
i
length
i
block
println
i
println
arg
tests
i
parse
InputSource
StringReader
tests
i
DocumentImpl
document
DocumentImpl
getDocument
Range
range
createRange
Node
root
getDocumentElement
boolean
surround
Node
surroundNode
createElement
SURROUND
if
equals
block
surround
if
i
block
setStart
getFirstChild
setEndBefore
getLastChild
if
surround
setEnd
getLastChild
if
i
block
Node
n1
getFirstChild
getNextSibling
getFirstChild
setStart
n1
setEnd
getLastChild
if
surround
setEnd
n1
if
i
block
setStart
getFirstChild
Node
n2
getFirstChild
getNextSibling
getFirstChild
setEnd
n2
if
surround
setEndBefore
getLastChild
if
i
block
Node
n3
getFirstChild
getFirstChild
setStart
n3
setEnd
getLastChild
getFirstChild
if
surround
block
selectNode
getFirstChild
getNextSibling
if
i
block
Node
n4
getFirstChild
getFirstChild
getNextSibling
getFirstChild
setStartAfter
n4
setEndAfter
getLastChild
getFirstChild
if
surround
block
selectNodeContents
getFirstChild
getNextSibling
println
toString
DocumentFragment
frag
if
equals
block
try
println
surroundNode
surroundContents
surroundNode
catchClause
e
println
e
String
result
toString
document
println
result
if
equals
surroundResult
i
block
println
surroundResult
i
passed
println
println
i
if
equals
block
insertNode
createTextNode
INSERT
String
result
toString
document
println
result
if
equals
insertResult
i
block
println
insertResult
i
passed
println
println
i
if
equals
block
deleteContents
String
result
toString
document
println
result
if
equals
deleteResult
i
block
println
deleteResult
i
passed
println
println
i
if
equals
block
frag
extractContents
String
result
toString
document
println
result
if
equals
deleteResult
i
block
println
deleteResult
i
passed
println
i
String
fragResult
toString
frag
println
fragResult
if
equals
extractResult
i
block
println
extractResult
i
passed
println
i
if
equals
block
frag
cloneContents
String
fragResult
toString
frag
println
fragResult
if
equals
extractResult
i
block
println
extractResult
i
passed
println
i
if
equals
block
println
arg
for
forControl
int
i
i
i
block
println
i
println
arg
INSERT2
parse
InputSource
StringReader
INSERT2
DocumentImpl
document
DocumentImpl
getDocument
Node
root
getDocumentElement
Range
range
createRange
setStart
getFirstChild
setEnd
getFirstChild
Range
rangei
createRange
if
i
block
setStart
getFirstChild
setEnd
getFirstChild
if
i
block
setStart
getFirstChild
setEnd
getFirstChild
if
i
block
setStart
getFirstChild
setEnd
getFirstChild
if
i
block
setStart
getFirstChild
setEnd
getFirstChild
if
DEBUG
println
getStartOffset
if
DEBUG
println
getEndOffset
insertNode
createTextNode
INSERTED_TEXT
if
DEBUG
println
getStartOffset
if
DEBUG
println
getEndOffset
String
result
toString
document
println
result
if
equals
rangeInsertResult
i
block
println
rangeInsertResult
i
passed
println
println
i
if
equals
block
println
arg
for
forControl
int
i
i
length
i
block
println
i
println
arg
rangeDelete
i
parse
InputSource
StringReader
rangeDelete
i
DocumentImpl
document
DocumentImpl
getDocument
Range
range
createRange
Range
ranged
createRange
Node
root
getDocumentElement
boolean
surround
Node
surroundNode
createElement
SURROUND
if
equals
block
surround
if
i
block
setStart
getFirstChild
setEnd
getFirstChild
setStart
getFirstChild
setEnd
getFirstChild
if
i
block
setStart
getFirstChild
setEnd
getFirstChild
setStart
getFirstChild
setEnd
getFirstChild
if
i
block
setStart
getFirstChild
setEnd
getFirstChild
getNextSibling
getFirstChild
setStart
getFirstChild
setEndAfter
getFirstChild
getNextSibling
getFirstChild
if
i
block
setStart
getFirstChild
setEnd
getFirstChild
setStart
getFirstChild
setEnd
getFirstChild
if
i
block
selectNode
getFirstChild
getNextSibling
setStart
getFirstChild
getNextSibling
getFirstChild
setEnd
getFirstChild
getNextSibling
getFirstChild
DocumentFragment
frag
if
equals
block
if
DEBUG
block
println
println
getStartContainer
println
getStartOffset
println
getEndContainer
println
getEndOffset
println
getStartContainer
println
getStartOffset
println
getEndContainer
println
getEndOffset
deleteContents
String
result
if
DEBUG
block
println
result
toString
document
println
getStartContainer
println
getStartOffset
println
getEndContainer
println
getEndOffset
println
getStartContainer
println
getStartOffset
println
getEndContainer
println
getEndOffset
insertNode
createTextNode
result
toString
document
println
result
if
equals
rangeDeleteResult
i
block
println
rangeDeleteResult
i
passed
println
println
i
catchClause
spe
passed
catchClause
se
if
getException
getException
printStackTrace
err
printStackTrace
err
passed
catchClause
e
printStackTrace
err
passed
if
passed
println
arg
return
passed
StringBuffer
sb
boolean
canonical
toString
String
node
Node
sb
StringBuffer
return
print
node
print
String
node
Node
if
node
block
return
toString
int
type
getNodeType
switch
type
case
DOCUMENT_NODE
block
return
print
Document
node
case
ELEMENT_NODE
block
append
append
getNodeName
Attr
attrs
sortAttributes
getAttributes
for
forControl
int
i
i
length
i
block
Attr
attr
attrs
i
append
append
getNodeName
append
append
normalize
getNodeValue
append
append
NodeList
children
getChildNodes
if
children
block
int
len
getLength
for
forControl
int
i
i
len
i
block
print
item
i
break
case
ENTITY_REFERENCE_NODE
block
if
canonical
block
NodeList
children
getChildNodes
if
children
block
int
len
getLength
for
forControl
int
i
i
len
i
block
print
item
i
block
append
append
getNodeName
append
break
case
CDATA_SECTION_NODE
block
if
canonical
block
append
normalize
getNodeValue
block
append
append
getNodeValue
append
break
case
TEXT_NODE
block
append
normalize
getNodeValue
break
case
PROCESSING_INSTRUCTION_NODE
block
append
append
getNodeName
String
data
getNodeValue
if
data
length
block
append
append
data
append
break
case
DOCUMENT_FRAGMENT_NODE
block
NodeList
children
getChildNodes
if
children
block
int
len
getLength
for
forControl
int
i
i
len
i
block
print
item
i
break
if
type
ELEMENT_NODE
block
append
append
getNodeName
append
return
toString
sortAttributes
Attr
attrs
NamedNodeMap
int
len
attrs
getLength
Attr
array
Attr
len
for
forControl
int
i
i
len
i
block
array
i
Attr
item
i
for
forControl
int
i
i
len
i
block
String
name
array
i
getNodeName
int
index
i
for
forControl
int
j
i
j
len
j
block
String
curName
array
j
getNodeName
if
compareTo
name
block
name
curName
index
j
if
index
i
block
Attr
temp
array
i
array
i
array
index
array
index
temp
return
array
normalize
String
s
String
StringBuffer
str
StringBuffer
int
len
s
length
for
forControl
int
i
i
len
i
block
char
ch
charAt
i
switch
ch
case
block
append
break
case
block
append
break
case
block
append
break
case
block
append
break
case
block
if
canonical
block
append
append
toString
ch
append
break
case
block
append
ch
return
toString
