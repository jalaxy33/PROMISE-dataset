TestFirstChild
main
args
String
println
fVersion
Document
doc
getNodeSet1
NodeFilter
nodefilter
boolean
entityReferenceExpansion
int
whatToShow
SHOW_ALL
TreeWalker
treewalker
DocumentTraversal
doc
ByteArrayOutputStream
bytearrayoutputstream
ByteArrayOutputStream
PrintWriter
printwriter
PrintWriter
OutputStreamWriter
bytearrayoutputstream
process2
treewalker
printwriter
flush
println
println
String
toByteArray
getNodeSet1
Document
DocumentBuilderFactory
dfactory
newInstance
setValidating
setNamespaceAware
DocumentBuilder
db
newDocumentBuilder
Document
doc
newDocument
Element
root
createElement
Element
e1
createElement
Element
e2
createElement
Element
e3
createElement
Text
e3t
createTextNode
appendChild
e3t
appendChild
e1
appendChild
e2
appendChild
e3
appendChild
root
String
s1
return
doc
process2
treewalker
TreeWalker
printwriter
PrintWriter
Node
currentNode
getCurrentNode
switch
getNodeType
case
TEXT_NODE
CDATA_SECTION_NODE
print
getNodeValue
break
case
ENTITY_REFERENCE_NODE
DOCUMENT_NODE
ELEMENT_NODE
if
getNodeType
ELEMENT_NODE
block
print
print
getNodeName
print
Node
node1
firstChild
if
node1
block
println
getNodeTypeString
getNodeType
getNodeName
block
println
getNodeTypeString
getNodeType
getNodeName
while
node1
block
block
String
qStr
for
forControl
Node
q
node1
q
q
getParentNode
block
qStr
getNodeName
qStr
println
getNodeTypeString
getNodeType
qStr
process2
treewalker
printwriter
node1
nextSibling
if
node1
block
println
getNodeName
println
getNodeName
setCurrentNode
currentNode
if
getNodeType
ELEMENT_NODE
block
print
print
getNodeName
print
break
String
nodeTypeString
String
getNodeTypeString
String
nodeType
short
if
nodeType
nodeType
block
return
nodeTypeString
nodeType
block
return
