Test
InFileInfo
String
fileName
String
fileContent
int
checkSum
int
MAXINFILES
RunInfo
boolean
quiet
boolean
verbose
int
numThreads
boolean
validating
boolean
dom
boolean
reuseParser
boolean
inMemory
boolean
dumpOnErr
int
totalTime
int
numInputFiles
InFileInfo
files
InFileInfo
MAXINFILES
ThreadInfo
boolean
fHeartBeat
int
fParses
int
fThreadNum
ThreadInfo
fHeartBeat
fParses
fThreadNum
RunInfo
gRunInfo
RunInfo
ThreadInfo
gThreadInfo
ThreadParser
int
fCheckSum
SAXParser
fSAXParser
DOMParser
fDOMParser
characters
chars
char
start
int
length
int
addToCheckSum
chars
start
length
ignorableWhitespace
chars
char
start
int
length
int
addToCheckSum
chars
start
length
warning
ex
SAXParseException
print
getMessage
error
ex
SAXParseException
print
getMessage
fatalError
ex
SAXParseException
print
getMessage
ThreadParser
if
dom
block
fDOMParser
org
apache
xerces
parsers
DOMParser
try
setFeature
validating
catchClause
e
setErrorHandler
block
fSAXParser
org
apache
xerces
parsers
SAXParser
try
setFeature
validating
catchClause
e
setDocumentHandler
setErrorHandler
parse
int
fileNum
int
InputSource
mbis
InFileInfo
fInfo
files
fileNum
fCheckSum
if
inMemory
block
mbis
InputSource
StringReader
fileContent
try
if
dom
block
if
inMemory
parse
mbis
parse
fileName
Document
doc
getDocument
domCheckSum
doc
block
if
inMemory
parse
mbis
parse
fileName
catchClause
e
String
exceptionMessage
getMessage
println
fileName
exceptionMessage
catchClause
e
String
exceptionMessage
getMessage
println
fileName
exceptionMessage
return
fCheckSum
addToCheckSum
chars
char
start
int
len
int
int
i
for
forControl
i
start
i
len
i
fCheckSum
fCheckSum
chars
i
addToCheckSum
chars
String
int
i
int
len
length
for
forControl
i
i
len
i
fCheckSum
fCheckSum
charAt
i
startElement
name
String
attributes
AttributeList
addToCheckSum
name
int
n
getLength
int
i
for
forControl
i
i
n
i
block
String
attNam
getName
i
addToCheckSum
attNam
String
attVal
getValue
i
addToCheckSum
attVal
domCheckSum
node
Node
String
s
Node
child
NamedNodeMap
attributes
switch
getNodeType
case
ELEMENT_NODE
block
s
getNodeName
attributes
getAttributes
int
numAttributes
getLength
int
i
for
forControl
i
i
numAttributes
i
domCheckSum
item
i
addToCheckSum
s
for
forControl
child
getFirstChild
child
child
getNextSibling
domCheckSum
child
break
case
ATTRIBUTE_NODE
block
s
getNodeName
addToCheckSum
s
s
getNodeValue
if
s
addToCheckSum
s
break
case
TEXT_NODE
CDATA_SECTION_NODE
block
s
getNodeValue
addToCheckSum
s
break
case
ENTITY_REFERENCE_NODE
DOCUMENT_NODE
block
for
forControl
child
getFirstChild
child
child
getNextSibling
domCheckSum
child
break
reCheck
int
if
dom
block
fCheckSum
Document
doc
getDocument
domCheckSum
doc
return
fCheckSum
domPrint
println
if
dom
domPrint
getDocument
println
domPrint
node
Node
String
s
Node
child
NamedNodeMap
attributes
switch
getNodeType
case
ELEMENT_NODE
block
print
print
getNodeName
attributes
getAttributes
int
numAttributes
getLength
int
i
for
forControl
i
i
numAttributes
i
block
domPrint
item
i
print
for
forControl
child
getFirstChild
child
child
getNextSibling
domPrint
child
print
print
getNodeName
print
break
case
ATTRIBUTE_NODE
block
print
print
getNodeName
print
print
getNodeValue
print
break
case
TEXT_NODE
CDATA_SECTION_NODE
block
print
getNodeValue
break
case
ENTITY_REFERENCE_NODE
DOCUMENT_NODE
block
for
forControl
child
getFirstChild
child
child
getNextSibling
domPrint
child
break
HandlerBase
parseCommandLine
argv
String
quiet
verbose
numThreads
validating
dom
reuseParser
inMemory
dumpOnErr
totalTime
numInputFiles
try
int
argnum
int
argc
length
while
argnum
argc
block
if
argv
argnum
equals
quiet
if
argv
argnum
equals
verbose
if
argv
argnum
equals
validating
if
argv
argnum
equals
dom
if
argv
argnum
equals
reuseParser
if
argv
argnum
equals
dumpOnErr
if
argv
argnum
equals
inMemory
if
argv
argnum
equals
block
argnum
if
argnum
argc
throw
Exception
try
numThreads
parseInt
argv
argnum
catchClause
e
throw
Exception
if
numThreads
throw
Exception
if
argv
argnum
equals
block
argnum
if
argnum
argc
throw
Exception
try
totalTime
parseInt
argv
argnum
catchClause
e
throw
Exception
if
totalTime
throw
Exception
if
argv
argnum
charAt
block
println
argv
argnum
throw
Exception
block
numInputFiles
if
numInputFiles
MAXINFILES
block
println
MAXINFILES
throw
Exception
files
numInputFiles
InFileInfo
files
numInputFiles
fileName
argv
argnum
argnum
if
numInputFiles
block
println
throw
Exception
catchClause
e
print
exit
ReadFilesIntoMemory
int
fileNum
InputStreamReader
fileF
char
chars
char
StringBuffer
buf
StringBuffer
if
inMemory
block
for
forControl
fileNum
fileNum
numInputFiles
fileNum
block
InFileInfo
fInfo
files
fileNum
setLength
try
FileInputStream
in
FileInputStream
fileName
fileF
InputStreamReader
in
int
len
while
len
read
chars
length
block
append
chars
len
fileContent
toString
close
catchClause
e
print
fileName
exit
catchClause
e
println
fileName
exit
thread
ThreadInfo
thInfo
thread
param
ThreadInfo
thInfo
param
run
ThreadParser
thParser
if
verbose
println
fThreadNum
int
docNum
numInputFiles
while
block
if
thParser
thParser
ThreadParser
docNum
if
docNum
numInputFiles
docNum
InFileInfo
fInfo
files
docNum
if
verbose
println
fThreadNum
fileName
int
checkSum
checkSum
parse
docNum
if
checkSum
files
docNum
checkSum
block
println
fThreadNum
fileName
checkSum
checkSum
int
secondTryCheckSum
reCheck
println
secondTryCheckSum
if
dumpOnErr
domPrint
flush
exit
if
reuseParser
block
thParser
fHeartBeat
fParses
Thread
run
argv
String
parseCommandLine
argv
ReadFilesIntoMemory
ThreadParser
mainParser
ThreadParser
int
n
boolean
errors
int
cksum
for
forControl
n
n
numInputFiles
n
block
String
fileName
files
n
fileName
if
verbose
print
fileName
cksum
parse
n
if
cksum
block
println
fileName
errors
files
n
checkSum
cksum
if
verbose
println
cksum
if
dumpOnErr
errors
domPrint
if
errors
exit
if
numThreads
return
gThreadInfo
ThreadInfo
numThreads
int
threadNum
for
forControl
threadNum
threadNum
numThreads
threadNum
block
gThreadInfo
threadNum
ThreadInfo
gThreadInfo
threadNum
fThreadNum
threadNum
thread
t
thread
gThreadInfo
threadNum
start
long
startTime
currentTimeMillis
long
elapsedSeconds
while
totalTime
totalTime
elapsedSeconds
block
try
sleep
catchClause
e
if
quiet
verbose
block
char
c
for
forControl
threadNum
threadNum
numThreads
threadNum
block
if
gThreadInfo
threadNum
fHeartBeat
block
c
break
print
c
flush
if
c
for
forControl
threadNum
threadNum
numThreads
threadNum
gThreadInfo
threadNum
fHeartBeat
elapsedSeconds
currentTimeMillis
startTime
double
totalParsesCompleted
for
forControl
threadNum
threadNum
numThreads
threadNum
block
totalParsesCompleted
gThreadInfo
threadNum
fParses
double
parsesPerMinute
totalParsesCompleted
double
totalTime
double
println
parsesPerMinute
exit
main
argv
String
Test
test
Test
run
argv
