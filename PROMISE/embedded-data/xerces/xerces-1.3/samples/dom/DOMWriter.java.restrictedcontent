DOMWriter
String
DEFAULT_PARSER_NAME
boolean
setValidation
boolean
setNameSpaces
boolean
setSchemaSupport
boolean
setDeferredDOM
String
PRINTWRITER_ENCODING
String
MIME2JAVA_ENCODINGS
PrintWriter
out
boolean
canonical
DOMWriter
encoding
String
canonical
boolean
out
PrintWriter
OutputStreamWriter
out
encoding
canonical
canonical
DOMWriter
canonical
boolean
getWriterEncoding
canonical
getWriterEncoding
String
return
PRINTWRITER_ENCODING
setWriterEncoding
encoding
String
if
equalsIgnoreCase
PRINTWRITER_ENCODING
if
equalsIgnoreCase
PRINTWRITER_ENCODING
PRINTWRITER_ENCODING
convert
encoding
isValidJavaEncoding
boolean
encoding
String
for
forControl
int
i
i
length
i
if
equals
MIME2JAVA_ENCODINGS
i
return
return
print
parserWrapperName
String
uri
String
canonical
boolean
try
DOMParserWrapper
parser
DOMParserWrapper
forName
newInstance
parserWrapperName
setFeature
setDeferredDOM
setFeature
setValidation
setFeature
setNameSpaces
setFeature
setSchemaSupport
Document
document
parse
uri
DOMWriter
writer
DOMWriter
canonical
print
document
catchClause
e
print
node
Node
if
node
block
return
int
type
getNodeType
switch
type
case
DOCUMENT_NODE
block
if
canonical
block
String
Encoding
getWriterEncoding
if
equalsIgnoreCase
Encoding
if
equalsIgnoreCase
Encoding
Encoding
reverse
Encoding
println
Encoding
NodeList
children
getChildNodes
for
forControl
int
iChild
iChild
getLength
iChild
block
print
item
iChild
flush
break
case
ELEMENT_NODE
block
print
print
getNodeName
Attr
attrs
sortAttributes
getAttributes
for
forControl
int
i
i
length
i
block
Attr
attr
attrs
i
print
print
getNodeName
print
print
normalize
getNodeValue
print
print
NodeList
children
getChildNodes
if
children
block
int
len
getLength
for
forControl
int
i
i
len
i
block
print
item
i
break
case
ENTITY_REFERENCE_NODE
block
if
canonical
block
NodeList
children
getChildNodes
if
children
block
int
len
getLength
for
forControl
int
i
i
len
i
block
print
item
i
block
print
print
getNodeName
print
break
case
CDATA_SECTION_NODE
block
if
canonical
block
print
normalize
getNodeValue
block
print
print
getNodeValue
print
break
case
TEXT_NODE
block
print
normalize
getNodeValue
break
case
PROCESSING_INSTRUCTION_NODE
block
print
print
getNodeName
String
data
getNodeValue
if
data
length
block
print
print
data
println
break
if
type
ELEMENT_NODE
block
print
print
getNodeName
print
flush
sortAttributes
Attr
attrs
NamedNodeMap
int
len
attrs
getLength
Attr
array
Attr
len
for
forControl
int
i
i
len
i
block
array
i
Attr
item
i
for
forControl
int
i
i
len
i
block
String
name
array
i
getNodeName
int
index
i
for
forControl
int
j
i
j
len
j
block
String
curName
array
j
getNodeName
if
compareTo
name
block
name
curName
index
j
if
index
i
block
Attr
temp
array
i
array
i
array
index
array
index
temp
return
array
main
argv
String
Arguments
argopt
Arguments
setUsage
String
if
length
block
printUsage
exit
String
parserName
DEFAULT_PARSER_NAME
boolean
canonical
String
encoding
parseArgumentTokens
argv
char
int
c
String
arg
while
arg
getlistFiles
block
while
c
getArguments
block
switch
c
case
canonical
break
case
encoding
getStringParameter
if
encoding
isValidJavaEncoding
encoding
setWriterEncoding
encoding
block
printValidJavaEncoding
exit
break
case
setValidation
break
case
setValidation
break
case
setNameSpaces
break
case
setNameSpaces
break
case
parserName
getStringParameter
break
case
setDeferredDOM
break
case
setDeferredDOM
break
case
setSchemaSupport
break
case
setSchemaSupport
break
case
printUsage
exit
break
case
break
case
break
println
arg
print
parserName
arg
canonical
println
normalize
String
s
String
StringBuffer
str
StringBuffer
int
len
s
length
for
forControl
int
i
i
len
i
block
char
ch
charAt
i
switch
ch
case
block
append
break
case
block
append
break
case
block
append
break
case
block
append
break
case
block
if
canonical
block
append
append
toString
ch
append
break
case
block
append
ch
return
toString
printValidJavaEncoding
println
print
for
forControl
int
i
i
length
i
block
print
MIME2JAVA_ENCODINGS
i
if
i
block
println
print
