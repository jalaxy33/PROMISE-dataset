UTF8CharReader
UTF8CharReader
entityHandler
XMLEntityHandler
errorReporter
XMLErrorReporter
sendCharDataAsCharArray
boolean
dataStream
InputStream
stringPool
StringPool
entityHandler
errorReporter
sendCharDataAsCharArray
stringPool
fInputStream
dataStream
fillCurrentChunk
InputStream
fInputStream
boolean
fCheckOverflow
byte
fOverflow
int
fOverflowOffset
int
fOverflowEnd
int
fOutputOffset
boolean
fSkipLinefeed
int
fPartialMultiByteIn
byte
fPartialMultiByteChar
byte
int
fPartialSurrogatePair
boolean
fPartialMultiByteResult
fillCurrentChunk
int
char
recycledData
toCharArray
fOutputOffset
if
fCheckOverflow
block
fMostRecentData
recycledData
if
fOverflowEnd
CHUNK_SIZE
block
recycledData
if
fOverflowEnd
block
if
fMostRecentData
length
fOverflowEnd
fOverflowOffset
fMostRecentData
char
fOverflowEnd
fOverflowOffset
copyNormalize
fOverflow
fOverflowOffset
fMostRecentData
fOutputOffset
block
if
fMostRecentData
fMostRecentData
char
fMostRecentData
fOutputOffset
fOverflow
fLength
fOutputOffset
fCurrentIndex
setCharArray
fMostRecentData
return
fMostRecentChar
fMostRecentData
if
fMostRecentData
length
CHUNK_SIZE
fMostRecentData
char
CHUNK_SIZE
recycledData
copyNormalize
fOverflow
fOverflowOffset
fMostRecentData
fOutputOffset
fCheckOverflow
block
if
fOverflow
fOverflow
byte
CHUNK_SIZE
fMostRecentData
while
block
fOverflowOffset
fOverflowEnd
int
capacity
CHUNK_SIZE
int
result
do
capacity
block
try
result
read
fOverflow
fOverflowEnd
capacity
catchClause
ex
result
if
result
block
close
fInputStream
if
fMostRecentData
block
fMostRecentData
recycledData
if
fMostRecentData
length
fOverflowEnd
fMostRecentData
char
fOverflowEnd
recycledData
copyNormalize
fOverflow
fOverflowOffset
fMostRecentData
fOutputOffset
fOverflow
fMostRecentData
fOutputOffset
block
boolean
alldone
copyNormalize
fOverflow
fOverflowOffset
fMostRecentData
fOutputOffset
if
alldone
block
if
fOverflowEnd
CHUNK_SIZE
block
fCheckOverflow
fOverflowOffset
fOverflowEnd
block
fOverflow
fMostRecentData
fOutputOffset
block
fCheckOverflow
break
if
result
block
fOverflowEnd
result
capacity
result
if
result
break
if
fMostRecentData
block
boolean
alldone
copyNormalize
fOverflow
fOverflowOffset
fMostRecentData
fOutputOffset
if
fOutputOffset
CHUNK_SIZE
block
if
alldone
block
fCheckOverflow
break
block
fMostRecentData
recycledData
if
fMostRecentData
length
CHUNK_SIZE
fMostRecentData
char
CHUNK_SIZE
recycledData
copyNormalize
fOverflow
fOverflowOffset
fMostRecentData
fOutputOffset
if
fOutputOffset
CHUNK_SIZE
block
break
fLength
fOutputOffset
fCurrentIndex
setCharArray
fMostRecentData
return
fMostRecentChar
fMostRecentData
copyNormalize
boolean
in
byte
inOffset
int
out
char
outOffset
int
int
inEnd
fOverflowEnd
int
outEnd
length
if
inOffset
inEnd
return
byte
b
in
inOffset
if
fSkipLinefeed
block
fSkipLinefeed
if
b
block
if
inOffset
inEnd
return
exitNormalize
inOffset
outOffset
b
in
inOffset
if
fPartialMultiByteIn
block
if
handlePartialMultiByteChar
b
in
inOffset
inEnd
out
outOffset
outEnd
return
fPartialMultiByteResult
inOffset
fOverflowOffset
outOffset
fOutputOffset
b
in
inOffset
while
outOffset
outEnd
block
int
inCount
inEnd
inOffset
int
outCount
outEnd
outOffset
if
inCount
outCount
inCount
outCount
inOffset
while
block
while
b
b
block
if
b
block
out
outOffset
if
inOffset
inEnd
block
fSkipLinefeed
return
exitNormalize
inOffset
outOffset
b
in
inOffset
if
b
block
if
inOffset
inEnd
return
exitNormalize
inOffset
outOffset
b
in
inOffset
if
outOffset
outEnd
return
exitNormalize
inOffset
outOffset
block
if
handleMultiByteChar
b
in
inOffset
inEnd
out
outOffset
outEnd
return
fPartialMultiByteResult
inOffset
fOverflowOffset
outOffset
fOutputOffset
b
in
inOffset
inCount
inEnd
inOffset
outCount
outEnd
outOffset
if
inCount
outCount
inCount
outCount
inOffset
while
block
out
outOffset
char
b
if
inCount
break
b
in
inOffset
if
b
b
break
if
inCount
break
if
inOffset
inEnd
break
return
exitNormalize
inOffset
outOffset
inOffset
inEnd
exitNormalize
boolean
inOffset
int
outOffset
int
result
boolean
fOverflowOffset
inOffset
fOutputOffset
outOffset
return
result
savePartialMultiByte
inCount
int
bz
byte
by
byte
bx
byte
fPartialMultiByteIn
inCount
fPartialMultiByteChar
inCount
bz
fPartialMultiByteChar
inCount
by
fPartialMultiByteChar
inCount
bx
savePartialMultiByte
inCount
int
bz
byte
by
byte
fPartialMultiByteIn
inCount
fPartialMultiByteChar
inCount
bz
fPartialMultiByteChar
inCount
by
savePartialMultiByte
inCount
int
bz
byte
fPartialMultiByteIn
inCount
fPartialMultiByteChar
inCount
bz
handleMultiByteChar
boolean
b
byte
in
byte
inOffset
int
inEnd
int
out
char
outOffset
int
outEnd
int
if
inOffset
inEnd
block
savePartialMultiByte
b
fPartialMultiByteResult
exitNormalize
inOffset
outOffset
return
byte
b1
in
inOffset
if
b1
block
Object
args
toHexString
b
toHexString
b1
deferException
ENC5
args
outOffset
out
outOffset
return
exitNormalize
inOffset
outOffset
if
b
block
int
ch
b
b1
out
outOffset
char
ch
if
inOffset
inEnd
outOffset
outEnd
block
fPartialMultiByteResult
exitNormalize
inOffset
outOffset
inOffset
inEnd
return
block
if
inOffset
inEnd
block
savePartialMultiByte
b1
b
fPartialMultiByteResult
exitNormalize
inOffset
outOffset
return
byte
b2
in
inOffset
if
b2
block
Object
args
toHexString
b
toHexString
b1
toHexString
b2
deferException
ENC6
args
outOffset
out
outOffset
return
exitNormalize
inOffset
outOffset
if
b
block
int
ch
b
b1
b2
out
outOffset
char
ch
if
inOffset
inEnd
outOffset
outEnd
block
fPartialMultiByteResult
exitNormalize
inOffset
outOffset
inOffset
inEnd
return
block
if
b
block
Object
args
toHexString
b
deferException
ENC4
args
outOffset
out
outOffset
return
exitNormalize
inOffset
outOffset
if
inOffset
inEnd
block
savePartialMultiByte
b2
b1
b
fPartialMultiByteResult
exitNormalize
inOffset
outOffset
return
byte
b3
in
inOffset
if
b3
block
Object
args
toHexString
b
toHexString
b1
toHexString
b2
toHexString
b3
deferException
ENC7
args
outOffset
out
outOffset
return
exitNormalize
inOffset
outOffset
int
ch
b
b1
b2
b3
if
ch
block
out
outOffset
char
ch
ch
ch
if
outOffset
outEnd
block
fPartialSurrogatePair
ch
fPartialMultiByteResult
exitNormalize
inOffset
outOffset
inOffset
inEnd
return
out
outOffset
char
ch
if
inOffset
inEnd
outOffset
outEnd
block
fPartialMultiByteResult
exitNormalize
inOffset
outOffset
inOffset
inEnd
return
return
exitNormalize
inOffset
outOffset
handlePartialMultiByteChar
boolean
b
byte
in
byte
inOffset
int
inEnd
int
out
char
outOffset
int
outEnd
int
if
outOffset
outEnd
block
fPartialMultiByteResult
exitNormalize
inOffset
outOffset
inOffset
inEnd
return
if
fPartialMultiByteIn
block
out
outOffset
char
fPartialSurrogatePair
if
outOffset
outEnd
block
fPartialMultiByteResult
exitNormalize
inOffset
outOffset
return
fOutputOffset
outOffset
return
int
byteIn
fPartialMultiByteIn
fPartialMultiByteIn
byte
b1
byte
b2
byte
b3
switch
byteIn
case
b1
b
break
case
b2
b
break
case
b3
b
break
int
i
byteIn
switch
byteIn
case
b2
fPartialMultiByteChar
i
case
b1
fPartialMultiByteChar
i
case
b
fPartialMultiByteChar
i
switch
byteIn
case
if
b1
block
Object
args
toHexString
b
toHexString
b1
deferException
ENC5
args
outOffset
out
outOffset
break
case
if
b
block
int
ch
b
b1
out
outOffset
char
ch
if
outOffset
outEnd
block
fPartialMultiByteResult
exitNormalize
inOffset
outOffset
return
if
byteIn
inOffset
inEnd
block
fPartialMultiByteResult
exitNormalize
inOffset
outOffset
return
break
if
byteIn
block
if
inOffset
inEnd
block
savePartialMultiByte
b1
fPartialMultiByteResult
exitNormalize
inOffset
outOffset
return
b2
in
inOffset
if
b2
block
Object
args
toHexString
b
toHexString
b1
toHexString
b2
deferException
ENC6
args
outOffset
out
outOffset
break
case
if
b
block
int
ch
b
b1
b2
out
outOffset
char
ch
if
outOffset
outEnd
block
fPartialMultiByteResult
exitNormalize
inOffset
outOffset
return
if
byteIn
inOffset
inEnd
block
fPartialMultiByteResult
exitNormalize
inOffset
outOffset
return
break
if
byteIn
block
if
b
block
Object
args
toHexString
b
deferException
ENC4
args
outOffset
out
outOffset
break
if
inOffset
inEnd
block
savePartialMultiByte
b2
b1
fPartialMultiByteResult
exitNormalize
inOffset
outOffset
return
b3
in
inOffset
if
b3
block
Object
args
toHexString
b
toHexString
b1
toHexString
b2
toHexString
b3
deferException
ENC7
args
outOffset
out
outOffset
break
int
ch
b
b1
b2
b3
if
ch
block
out
outOffset
char
ch
ch
ch
if
outOffset
outEnd
block
fPartialSurrogatePair
ch
fPartialMultiByteResult
exitNormalize
inOffset
outOffset
return
out
outOffset
char
ch
if
outOffset
outEnd
block
fPartialMultiByteResult
exitNormalize
inOffset
outOffset
return
if
inOffset
inEnd
block
fPartialMultiByteResult
exitNormalize
inOffset
outOffset
return
break
return
exitNormalize
inOffset
outOffset
AbstractCharReader
