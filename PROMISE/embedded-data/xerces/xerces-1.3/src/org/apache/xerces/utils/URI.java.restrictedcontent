URI
MalformedURIException
MalformedURIException
MalformedURIException
p_msg
String
p_msg
IOException
String
RESERVED_CHARACTERS
String
MARK_CHARACTERS
String
SCHEME_CHARACTERS
String
USERINFO_CHARACTERS
String
m_scheme
String
m_userinfo
String
m_host
int
m_port
String
m_path
String
m_queryString
String
m_fragment
boolean
DEBUG
URI
URI
p_other
URI
initialize
p_other
URI
p_uriSpec
String
URI
p_uriSpec
URI
p_base
URI
p_uriSpec
String
initialize
p_base
p_uriSpec
URI
p_scheme
String
p_schemeSpecificPart
String
if
p_scheme
trim
length
block
throw
MalformedURIException
if
p_schemeSpecificPart
trim
length
block
throw
MalformedURIException
setScheme
p_scheme
setPath
p_schemeSpecificPart
URI
p_scheme
String
p_host
String
p_path
String
p_queryString
String
p_fragment
String
p_scheme
p_host
p_path
p_queryString
p_fragment
URI
p_scheme
String
p_userinfo
String
p_host
String
p_port
int
p_path
String
p_queryString
String
p_fragment
String
if
p_scheme
trim
length
block
throw
MalformedURIException
if
p_host
block
if
p_userinfo
block
throw
MalformedURIException
if
p_port
block
throw
MalformedURIException
if
p_path
block
if
indexOf
p_queryString
block
throw
MalformedURIException
if
indexOf
p_fragment
block
throw
MalformedURIException
setScheme
p_scheme
setHost
p_host
setPort
p_port
setUserinfo
p_userinfo
setPath
p_path
setQueryString
p_queryString
setFragment
p_fragment
initialize
p_other
URI
m_scheme
getScheme
m_userinfo
getUserinfo
m_host
getHost
m_port
getPort
m_path
getPath
m_queryString
getQueryString
m_fragment
getFragment
initialize
p_base
URI
p_uriSpec
String
if
p_base
p_uriSpec
trim
length
block
throw
MalformedURIException
if
p_uriSpec
trim
length
block
initialize
p_base
return
String
uriSpec
trim
int
uriSpecLen
length
int
index
int
colonIdx
indexOf
if
colonIdx
colonIdx
indexOf
block
int
fragmentIdx
indexOf
if
p_base
fragmentIdx
block
throw
MalformedURIException
block
initializeScheme
uriSpec
index
length
if
index
uriSpecLen
substring
index
block
index
int
startPos
index
char
testChar
while
index
uriSpecLen
block
testChar
charAt
index
if
testChar
testChar
testChar
block
break
index
if
index
startPos
block
initializeAuthority
substring
startPos
index
block
m_host
initializePath
substring
index
if
p_base
block
if
length
m_scheme
m_host
block
m_scheme
getScheme
m_userinfo
getUserinfo
m_host
getHost
m_port
getPort
m_path
getPath
if
m_queryString
block
m_queryString
getQueryString
return
if
m_scheme
block
m_scheme
getScheme
block
return
if
m_host
block
m_userinfo
getUserinfo
m_host
getHost
m_port
getPort
block
return
if
length
startsWith
block
return
String
path
String
String
basePath
getPath
if
basePath
block
int
lastSlash
lastIndexOf
if
lastSlash
block
path
substring
lastSlash
path
concat
m_path
index
while
index
indexOf
block
path
substring
concat
substring
index
index
if
endsWith
block
path
substring
length
index
int
segIndex
String
tempString
while
index
indexOf
block
tempString
substring
indexOf
segIndex
lastIndexOf
if
segIndex
block
if
substring
equals
segIndex
block
path
substring
concat
substring
index
segIndex
if
endsWith
block
tempString
substring
length
segIndex
lastIndexOf
if
segIndex
block
path
substring
segIndex
m_path
path
initializeScheme
p_uriSpec
String
int
uriSpecLen
length
int
index
String
scheme
char
testChar
while
index
uriSpecLen
block
testChar
charAt
index
if
testChar
testChar
testChar
testChar
block
break
index
scheme
substring
index
if
length
block
throw
MalformedURIException
block
setScheme
scheme
initializeAuthority
p_uriSpec
String
int
index
int
start
int
end
length
char
testChar
String
userinfo
if
indexOf
start
block
while
index
end
block
testChar
charAt
index
if
testChar
block
break
index
userinfo
substring
start
index
index
String
host
start
index
while
index
end
block
testChar
charAt
index
if
testChar
block
break
index
host
substring
start
index
int
port
if
length
block
if
testChar
block
index
start
index
while
index
end
block
index
String
portStr
substring
start
index
if
length
block
for
forControl
int
i
i
length
i
block
if
isDigit
charAt
i
block
throw
MalformedURIException
portStr
try
port
parseInt
portStr
catchClause
nfe
setHost
host
setPort
port
setUserinfo
userinfo
initializePath
p_uriSpec
String
if
p_uriSpec
block
throw
MalformedURIException
int
index
int
start
int
end
length
char
testChar
while
index
end
block
testChar
charAt
index
if
testChar
testChar
block
break
if
testChar
block
if
index
end
isHex
charAt
index
isHex
charAt
index
block
throw
MalformedURIException
if
isReservedCharacter
testChar
isUnreservedCharacter
testChar
block
throw
MalformedURIException
testChar
index
m_path
substring
start
index
if
testChar
block
index
start
index
while
index
end
block
testChar
charAt
index
if
testChar
block
break
if
testChar
block
if
index
end
isHex
charAt
index
isHex
charAt
index
block
throw
MalformedURIException
if
isReservedCharacter
testChar
isUnreservedCharacter
testChar
block
throw
MalformedURIException
testChar
index
m_queryString
substring
start
index
if
testChar
block
index
start
index
while
index
end
block
testChar
charAt
index
if
testChar
block
if
index
end
isHex
charAt
index
isHex
charAt
index
block
throw
MalformedURIException
if
isReservedCharacter
testChar
isUnreservedCharacter
testChar
block
throw
MalformedURIException
testChar
index
m_fragment
substring
start
index
getScheme
String
return
m_scheme
getSchemeSpecificPart
String
StringBuffer
schemespec
StringBuffer
if
m_userinfo
m_host
m_port
block
append
if
m_userinfo
block
append
m_userinfo
append
if
m_host
block
append
m_host
if
m_port
block
append
append
m_port
if
m_path
block
append
m_path
if
m_queryString
block
append
append
m_queryString
if
m_fragment
block
append
append
m_fragment
return
toString
getUserinfo
String
return
m_userinfo
getHost
String
return
m_host
getPort
int
return
m_port
getPath
String
p_includeQueryString
boolean
p_includeFragment
boolean
StringBuffer
pathString
StringBuffer
m_path
if
p_includeQueryString
m_queryString
block
append
append
m_queryString
if
p_includeFragment
m_fragment
block
append
append
m_fragment
return
toString
getPath
String
return
m_path
getQueryString
String
return
m_queryString
getFragment
String
return
m_fragment
setScheme
p_scheme
String
if
p_scheme
block
throw
MalformedURIException
if
isConformantSchemeName
p_scheme
block
throw
MalformedURIException
m_scheme
toLowerCase
setUserinfo
p_userinfo
String
if
p_userinfo
block
m_userinfo
block
if
m_host
block
throw
MalformedURIException
int
index
int
end
length
char
testChar
while
index
end
block
testChar
charAt
index
if
testChar
block
if
index
end
isHex
charAt
index
isHex
charAt
index
block
throw
MalformedURIException
if
isUnreservedCharacter
testChar
indexOf
testChar
block
throw
MalformedURIException
testChar
index
m_userinfo
p_userinfo
setHost
p_host
String
if
p_host
trim
length
block
m_host
p_host
m_userinfo
m_port
if
isWellFormedAddress
p_host
block
throw
MalformedURIException
m_host
p_host
setPort
p_port
int
if
p_port
p_port
block
if
m_host
block
throw
MalformedURIException
if
p_port
block
throw
MalformedURIException
m_port
p_port
setPath
p_path
String
if
p_path
block
m_path
m_queryString
m_fragment
block
initializePath
p_path
appendPath
p_addToPath
String
if
p_addToPath
trim
length
block
return
if
isURIString
p_addToPath
block
throw
MalformedURIException
if
m_path
trim
length
block
if
startsWith
block
m_path
p_addToPath
block
m_path
p_addToPath
if
endsWith
block
if
startsWith
block
m_path
concat
substring
block
m_path
concat
p_addToPath
block
if
startsWith
block
m_path
concat
p_addToPath
block
m_path
concat
p_addToPath
setQueryString
p_queryString
String
if
p_queryString
block
m_queryString
if
isGenericURI
block
throw
MalformedURIException
if
getPath
block
throw
MalformedURIException
if
isURIString
p_queryString
block
throw
MalformedURIException
block
m_queryString
p_queryString
setFragment
p_fragment
String
if
p_fragment
block
m_fragment
if
isGenericURI
block
throw
MalformedURIException
if
getPath
block
throw
MalformedURIException
if
isURIString
p_fragment
block
throw
MalformedURIException
block
m_fragment
p_fragment
equals
boolean
p_test
Object
if
p_test
URI
block
URI
testURI
URI
p_test
if
m_scheme
m_scheme
m_scheme
m_scheme
equals
m_scheme
m_userinfo
m_userinfo
m_userinfo
m_userinfo
equals
m_userinfo
m_host
m_host
m_host
m_host
equals
m_host
m_port
m_port
m_path
m_path
m_path
m_path
equals
m_path
m_queryString
m_queryString
m_queryString
m_queryString
equals
m_queryString
m_fragment
m_fragment
m_fragment
m_fragment
equals
m_fragment
block
return
return
toString
String
StringBuffer
uriSpecString
StringBuffer
if
m_scheme
block
append
m_scheme
append
append
getSchemeSpecificPart
return
toString
isGenericURI
boolean
return
m_host
isConformantSchemeName
boolean
p_scheme
String
if
p_scheme
trim
length
block
return
if
isAlpha
charAt
block
return
char
testChar
for
forControl
int
i
i
length
i
block
testChar
charAt
i
if
isAlphanum
testChar
indexOf
testChar
block
return
return
isWellFormedAddress
boolean
p_address
String
if
p_address
block
return
String
address
trim
int
addrLength
length
if
addrLength
addrLength
block
return
if
startsWith
startsWith
block
return
int
index
lastIndexOf
if
endsWith
block
index
substring
lastIndexOf
index
if
index
addrLength
isDigit
charAt
index
block
char
testChar
int
numDots
for
forControl
int
i
i
addrLength
i
block
testChar
charAt
i
if
testChar
block
if
isDigit
charAt
i
i
addrLength
isDigit
charAt
i
block
return
numDots
if
isDigit
testChar
block
return
if
numDots
block
return
block
char
testChar
for
forControl
int
i
i
addrLength
i
block
testChar
charAt
i
if
testChar
block
if
isAlphanum
charAt
i
block
return
if
i
addrLength
isAlphanum
charAt
i
block
return
if
isAlphanum
testChar
testChar
block
return
return
isDigit
boolean
p_char
char
return
p_char
p_char
isHex
boolean
p_char
char
return
isDigit
p_char
p_char
p_char
p_char
p_char
isAlpha
boolean
p_char
char
return
p_char
p_char
p_char
p_char
isAlphanum
boolean
p_char
char
return
isAlpha
p_char
isDigit
p_char
isReservedCharacter
boolean
p_char
char
return
indexOf
p_char
isUnreservedCharacter
boolean
p_char
char
return
isAlphanum
p_char
indexOf
p_char
isURIString
boolean
p_uric
String
if
p_uric
block
return
int
end
length
char
testChar
for
forControl
int
i
i
end
i
block
testChar
charAt
i
if
testChar
block
if
i
end
isHex
charAt
i
isHex
charAt
i
block
return
block
i
continue
if
isReservedCharacter
testChar
isUnreservedCharacter
testChar
block
continue
block
return
return
Serializable
