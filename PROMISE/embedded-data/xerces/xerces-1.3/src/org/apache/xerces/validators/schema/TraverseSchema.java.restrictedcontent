TraverseSchema
int
TOP_LEVEL_SCOPE
String
IDENTITY_CONSTRAINTS
ELT_UNIQUE
ELT_KEY
ELT_KEYREF
boolean
DEBUGGING
boolean
DEBUG_IDENTITY_CONSTRAINTS
boolean
DEBUG_UNION
boolean
CR_IMPL
XMLErrorReporter
fErrorReporter
StringPool
fStringPool
GrammarResolver
fGrammarResolver
SchemaGrammar
fSchemaGrammar
Element
fSchemaRootElement
DatatypeValidatorFactoryImpl
fDatatypeRegistry
Hashtable
fComplexTypeRegistry
Hashtable
Hashtable
fAttributeDeclRegistry
Hashtable
Vector
fIncludeLocations
Vector
Vector
fImportLocations
Vector
int
fAnonTypeCount
int
fScopeCount
int
fCurrentScope
TOP_LEVEL_SCOPE
int
fSimpleTypeAnonCount
Stack
fCurrentTypeNameStack
Stack
Hashtable
fElementRecurseComplex
Hashtable
boolean
fElementDefaultQualified
boolean
fAttributeDefaultQualified
int
fTargetNSURI
String
fTargetNSURIString
NamespacesScope
fNamespacesScope
String
fCurrentSchemaURL
XMLAttributeDecl
fTempAttributeDecl
XMLAttributeDecl
XMLElementDecl
fTempElementDecl
XMLElementDecl
EntityResolver
fEntityResolver
ComplexTypeInfo
String
typeName
DatatypeValidator
baseDataTypeValidator
ComplexTypeInfo
baseComplexTypeInfo
int
derivedBy
int
blockSet
int
finalSet
boolean
isAbstract
int
scopeDefined
int
contentType
int
contentSpecHandle
int
templateElementIndex
int
attlistHead
DatatypeValidator
datatypeValidator
ComplexTypeRecoverableError
ComplexTypeRecoverableError
ComplexTypeRecoverableError
s
String
s
Exception
String
SchemaForSchemaURI
TraverseSchema
setGrammarResolver
grammarResolver
GrammarResolver
fGrammarResolver
grammarResolver
startNamespaceDeclScope
prefix
int
uri
int
endNamespaceDeclScope
prefix
int
resolvePrefixToURI
String
prefix
String
String
uriStr
toString
getNamespaceForPrefix
addSymbol
prefix
if
uriStr
block
reportGenericSchemaError
prefix
return
if
length
equals
URI_SCHEMAFORSCHEMA
length
block
uriStr
return
uriStr
TraverseSchema
root
Element
stringPool
StringPool
schemaGrammar
SchemaGrammar
grammarResolver
GrammarResolver
errorReporter
XMLErrorReporter
schemaURL
String
entityResolver
EntityResolver
fErrorReporter
errorReporter
fCurrentSchemaURL
schemaURL
fEntityResolver
entityResolver
doTraverseSchema
root
stringPool
schemaGrammar
grammarResolver
TraverseSchema
root
Element
stringPool
StringPool
schemaGrammar
SchemaGrammar
grammarResolver
GrammarResolver
errorReporter
XMLErrorReporter
schemaURL
String
fErrorReporter
errorReporter
fCurrentSchemaURL
schemaURL
doTraverseSchema
root
stringPool
schemaGrammar
grammarResolver
TraverseSchema
root
Element
stringPool
StringPool
schemaGrammar
SchemaGrammar
grammarResolver
GrammarResolver
doTraverseSchema
root
stringPool
schemaGrammar
grammarResolver
doTraverseSchema
root
Element
stringPool
StringPool
schemaGrammar
SchemaGrammar
grammarResolver
GrammarResolver
fNamespacesScope
NamespacesScope
fSchemaRootElement
root
fStringPool
stringPool
fSchemaGrammar
schemaGrammar
fGrammarResolver
grammarResolver
fDatatypeRegistry
DatatypeValidatorFactoryImpl
getDatatypeRegistry
expandRegistryToFullSchemaSet
if
root
block
return
String
rootPrefix
getPrefix
if
rootPrefix
length
block
String
xmlns
getAttribute
if
length
setAttribute
URI_SCHEMAFORSCHEMA
fTargetNSURIString
getAttribute
ATT_TARGETNAMESPACE
if
fTargetNSURIString
block
fTargetNSURIString
fTargetNSURI
addSymbol
fTargetNSURIString
if
fGrammarResolver
block
reportGenericSchemaError
block
if
getComplexTypeRegistry
block
setComplexTypeRegistry
fComplexTypeRegistry
block
fComplexTypeRegistry
getComplexTypeRegistry
if
getAttirubteDeclRegistry
block
setAttributeDeclRegistry
fAttributeDeclRegistry
block
fAttributeDeclRegistry
getAttirubteDeclRegistry
if
getNamespacesScope
block
setNamespacesScope
fNamespacesScope
block
fNamespacesScope
getNamespacesScope
setDatatypeRegistry
fDatatypeRegistry
setTargetNamespaceURI
fTargetNSURIString
putGrammar
fTargetNSURIString
fSchemaGrammar
NamedNodeMap
schemaEltAttrs
getAttributes
int
i
Attr
sattr
boolean
seenXMLNS
while
sattr
Attr
item
i
block
String
attName
getName
if
startsWith
block
String
attValue
getValue
String
prefix
substring
indexOf
setNamespaceForPrefix
addSymbol
prefix
addSymbol
attValue
if
equals
block
String
attValue
getValue
setNamespaceForPrefix
addSymbol
addSymbol
attValue
seenXMLNS
if
seenXMLNS
length
block
setNamespaceForPrefix
addSymbol
addSymbol
fElementDefaultQualified
getAttribute
equals
ATTVAL_QUALIFIED
ATT_ELEMENTFORMDEFAULT
fAttributeDefaultQualified
getAttribute
equals
ATTVAL_QUALIFIED
ATT_ATTRIBUTEFORMDEFAULT
if
fTargetNSURI
EMPTY_STRING
block
fElementDefaultQualified
fCurrentScope
checkTopLevelDuplicateNames
root
extractTopLevel3Components
root
for
forControl
Element
child
getFirstChildElement
root
child
child
getNextSiblingElement
child
block
String
name
getLocalName
if
equals
ELT_ANNOTATION
block
traverseAnnotationDecl
child
if
equals
ELT_SIMPLETYPE
block
traverseSimpleTypeDecl
child
if
equals
ELT_COMPLEXTYPE
block
traverseComplexTypeDecl
child
if
equals
ELT_ELEMENT
block
traverseElementDecl
child
if
equals
ELT_ATTRIBUTEGROUP
block
if
equals
ELT_ATTRIBUTE
block
traverseAttributeDecl
child
if
equals
ELT_GROUP
block
traverseGroupDecl
child
if
equals
ELT_NOTATION
block
if
equals
ELT_INCLUDE
block
traverseInclude
child
if
equals
ELT_IMPORT
block
traverseImport
child
checkTopLevelDuplicateNames
root
Element
extractTopLevel3Components
root
Element
for
forControl
Element
child
getFirstChildElement
root
child
child
getNextSiblingElement
child
block
String
name
getLocalName
String
compName
getAttribute
ATT_NAME
if
equals
ELT_ATTRIBUTEGROUP
block
put
compName
child
if
equals
ELT_ATTRIBUTE
block
put
compName
child
if
equals
ELT_GROUP
block
put
compName
child
expandSystemId
String
systemId
String
currentSystemId
String
String
id
systemId
if
id
length
block
return
systemId
try
URL
url
URL
id
if
url
block
return
systemId
catchClause
e
id
fixURI
id
URL
base
URL
url
try
if
currentSystemId
block
String
dir
try
dir
fixURI
getProperty
catchClause
se
dir
if
endsWith
block
dir
dir
base
URL
dir
block
base
URL
currentSystemId
url
URL
base
id
catchClause
e
if
url
block
return
systemId
return
toString
fixURI
String
str
String
str
replace
separatorChar
if
length
block
char
ch1
charAt
if
ch1
block
char
ch0
toUpperCase
charAt
if
ch0
ch0
block
str
str
return
str
traverseInclude
includeDecl
Element
String
location
getAttribute
ATT_SCHEMALOCATION
InputSource
source
if
fEntityResolver
block
source
resolveEntity
location
if
source
block
location
expandSystemId
location
fCurrentSchemaURL
source
InputSource
location
block
if
getPublicId
location
getPublicId
location
getSystemId
if
contains
Object
location
block
return
addElement
Object
location
DOMParser
parser
IgnoreWhitespaceParser
setEntityResolver
Resolver
setErrorHandler
ErrorHandler
try
setFeature
setFeature
setFeature
catchClause
e
printStackTrace
catchClause
e
printStackTrace
try
parse
source
catchClause
e
printStackTrace
catchClause
e
Document
document
getDocument
Element
root
if
document
block
root
getDocumentElement
if
root
block
String
targetNSURI
getAttribute
ATT_TARGETNAMESPACE
if
length
equals
fTargetNSURIString
block
reportGenericSchemaError
location
targetNSURI
block
boolean
saveElementDefaultQualified
fElementDefaultQualified
boolean
saveAttributeDefaultQualified
fAttributeDefaultQualified
int
saveScope
fCurrentScope
String
savedSchemaURL
fCurrentSchemaURL
Element
saveRoot
fSchemaRootElement
fSchemaRootElement
root
fCurrentSchemaURL
location
traverseIncludedSchema
root
fCurrentSchemaURL
savedSchemaURL
fCurrentScope
saveScope
fElementDefaultQualified
saveElementDefaultQualified
fAttributeDefaultQualified
saveAttributeDefaultQualified
fSchemaRootElement
saveRoot
traverseIncludedSchema
root
Element
NamedNodeMap
schemaEltAttrs
getAttributes
int
i
Attr
sattr
boolean
seenXMLNS
while
sattr
Attr
item
i
block
String
attName
getName
if
startsWith
block
String
attValue
getValue
String
prefix
substring
indexOf
setNamespaceForPrefix
addSymbol
prefix
addSymbol
attValue
if
equals
block
String
attValue
getValue
setNamespaceForPrefix
addSymbol
addSymbol
attValue
seenXMLNS
if
seenXMLNS
length
block
setNamespaceForPrefix
addSymbol
addSymbol
fElementDefaultQualified
getAttribute
equals
ATTVAL_QUALIFIED
ATT_ELEMENTFORMDEFAULT
fAttributeDefaultQualified
getAttribute
equals
ATTVAL_QUALIFIED
ATT_ATTRIBUTEFORMDEFAULT
if
fTargetNSURI
EMPTY_STRING
block
fElementDefaultQualified
fCurrentScope
checkTopLevelDuplicateNames
root
extractTopLevel3Components
root
for
forControl
Element
child
getFirstChildElement
root
child
child
getNextSiblingElement
child
block
String
name
getLocalName
if
equals
ELT_ANNOTATION
block
traverseAnnotationDecl
child
if
equals
ELT_SIMPLETYPE
block
traverseSimpleTypeDecl
child
if
equals
ELT_COMPLEXTYPE
block
traverseComplexTypeDecl
child
if
equals
ELT_ELEMENT
block
traverseElementDecl
child
if
equals
ELT_ATTRIBUTEGROUP
block
if
equals
ELT_ATTRIBUTE
block
traverseAttributeDecl
child
if
equals
ELT_GROUP
getAttribute
equals
ATT_REF
block
if
equals
ELT_NOTATION
block
if
equals
ELT_INCLUDE
block
traverseInclude
child
if
equals
ELT_IMPORT
block
traverseImport
child
traverseImport
importDecl
Element
String
location
getAttribute
ATT_SCHEMALOCATION
InputSource
source
if
fEntityResolver
block
source
resolveEntity
location
if
source
block
location
expandSystemId
location
fCurrentSchemaURL
source
InputSource
location
block
if
getPublicId
location
getPublicId
location
getSystemId
if
contains
Object
location
block
return
addElement
Object
location
String
namespaceString
getAttribute
ATT_NAMESPACE
SchemaGrammar
importedGrammar
SchemaGrammar
getGrammar
namespaceString
if
importedGrammar
block
importedGrammar
SchemaGrammar
DOMParser
parser
IgnoreWhitespaceParser
setEntityResolver
Resolver
setErrorHandler
ErrorHandler
try
setFeature
setFeature
setFeature
catchClause
e
printStackTrace
catchClause
e
printStackTrace
try
parse
source
catchClause
e
printStackTrace
catchClause
e
printStackTrace
Document
document
getDocument
Element
root
if
document
block
root
getDocumentElement
if
root
block
String
targetNSURI
getAttribute
ATT_TARGETNAMESPACE
if
equals
namespaceString
block
reportGenericSchemaError
location
targetNSURI
namespaceString
TraverseSchema
root
fStringPool
importedGrammar
fGrammarResolver
fErrorReporter
location
fEntityResolver
block
reportGenericSchemaError
location
traverseAnnotationDecl
comment
Element
return
checkContent
Element
elm
Element
content
Element
isEmpty
boolean
if
content
block
if
isEmpty
block
reportSchemaError
ContentError
Object
getAttribute
ATT_NAME
return
if
getLocalName
equals
ELT_ANNOTATION
block
traverseAnnotationDecl
content
content
getNextSiblingElement
content
if
content
block
if
isEmpty
block
reportSchemaError
ContentError
Object
getAttribute
ATT_NAME
return
if
getLocalName
equals
ELT_ANNOTATION
block
reportSchemaError
AnnotationError
Object
getAttribute
ATT_NAME
return
return
content
findDTValidator
DatatypeValidator
elm
Element
baseTypeStr
String
int
baseType
addSymbol
baseTypeStr
String
prefix
DatatypeValidator
baseValidator
String
localpart
baseTypeStr
int
colonptr
indexOf
if
colonptr
block
prefix
substring
colonptr
localpart
substring
colonptr
String
uri
resolvePrefixToURI
prefix
baseValidator
getDatatypeValidator
uri
localpart
if
baseValidator
block
Element
baseTypeNode
getTopLevelComponentByName
ELT_SIMPLETYPE
localpart
if
baseTypeNode
block
traverseSimpleTypeDecl
baseTypeNode
baseValidator
getDatatypeValidator
uri
localpart
if
baseValidator
block
reportSchemaError
UnknownBaseDatatype
Object
getAttribute
ATT_BASE
getAttribute
ATT_NAME
return
baseValidator
traverseSimpleTypeDecl
int
simpleTypeDecl
Element
if
DEBUG_UNION
block
println
String
nameProperty
getAttribute
ATT_NAME
boolean
list
boolean
union
boolean
restriction
int
newSimpleTypeName
if
equals
block
newSimpleTypeName
addSymbol
fSimpleTypeAnonCount
newSimpleTypeName
addSymbol
nameProperty
Element
content
getFirstChildElement
simpleTypeDecl
content
checkContent
simpleTypeDecl
content
if
content
block
return
String
varietyProperty
getLocalName
String
baseTypeQNameProperty
Vector
dTValidators
int
size
StringTokenizer
unionMembers
int
numOfTypes
if
DEBUG_UNION
block
println
varietyProperty
if
equals
ELT_LIST
block
baseTypeQNameProperty
getAttribute
ATT_ITEMTYPE
list
if
equals
ELT_RESTRICTION
block
baseTypeQNameProperty
getAttribute
ATT_BASE
restriction
if
equals
ELT_UNION
block
union
baseTypeQNameProperty
getAttribute
ATT_MEMBERTYPES
if
baseTypeQNameProperty
block
unionMembers
StringTokenizer
baseTypeQNameProperty
size
countTokens
block
size
dTValidators
Vector
size
block
reportSchemaError
FeatureUnsupported
Object
varietyProperty
return
int
typeNameIndex
DatatypeValidator
baseValidator
if
DEBUG_UNION
block
println
nameProperty
println
baseTypeQNameProperty
println
size
if
unionMembers
block
println
toString
if
baseTypeQNameProperty
block
content
getFirstChildElement
content
content
checkContent
simpleTypeDecl
content
if
content
block
return
if
getLocalName
equals
ELT_SIMPLETYPE
block
typeNameIndex
traverseSimpleTypeDecl
content
if
DEBUG_UNION
block
println
toString
typeNameIndex
println
nameProperty
if
typeNameIndex
block
baseValidator
getDatatypeValidator
toString
typeNameIndex
if
baseValidator
union
block
addElement
DatatypeValidator
baseValidator
if
typeNameIndex
baseValidator
block
reportSchemaError
UnknownBaseDatatype
Object
getAttribute
ATT_BASE
getAttribute
ATT_NAME
return
block
numOfTypes
if
union
block
numOfTypes
size
for
forControl
int
i
i
numOfTypes
i
block
if
union
block
baseTypeQNameProperty
nextToken
baseValidator
findDTValidator
simpleTypeDecl
baseTypeQNameProperty
if
baseValidator
block
return
if
union
block
addElement
DatatypeValidator
baseValidator
if
list
baseValidator
UnionDatatypeValidator
block
reportSchemaError
UnknownBaseDatatype
Object
getAttribute
ATT_BASE
getAttribute
ATT_NAME
return
if
baseTypeQNameProperty
block
content
getNextSiblingElement
content
block
content
getFirstChildElement
content
if
union
block
int
index
size
while
content
block
if
DEBUG_UNION
block
println
getNodeName
println
index
println
getNodeName
typeNameIndex
traverseSimpleTypeDecl
content
if
typeNameIndex
block
baseValidator
getDatatypeValidator
toString
typeNameIndex
if
baseValidator
block
if
DEBUG_UNION
block
println
toString
addElement
DatatypeValidator
baseValidator
if
baseValidator
typeNameIndex
block
reportSchemaError
UnknownBaseDatatype
Object
getAttribute
ATT_BASE
getAttribute
ATT_NAME
return
content
getNextSiblingElement
content
Hashtable
facetData
int
numFacets
if
restriction
content
block
int
numEnumerationLiterals
facetData
Hashtable
Vector
enumData
Vector
content
checkContent
simpleTypeDecl
content
while
content
block
if
getNodeType
ELEMENT_NODE
block
numFacets
if
getLocalName
equals
ELT_ENUMERATION
block
numEnumerationLiterals
String
enumVal
getAttribute
ATT_VALUE
addElement
enumVal
checkContent
simpleTypeDecl
getFirstChildElement
content
if
getLocalName
equals
ELT_ANNOTATION
block
reportSchemaError
ContentError
Object
getAttribute
ATT_NAME
block
put
getLocalName
getAttribute
ATT_VALUE
checkContent
simpleTypeDecl
getFirstChildElement
content
content
getNextSiblingElement
content
if
numEnumerationLiterals
block
put
ELT_ENUMERATION
enumData
if
list
content
block
if
baseTypeQNameProperty
block
content
checkContent
simpleTypeDecl
content
block
reportSchemaError
ListUnionRestrictionError
Object
getAttribute
ATT_NAME
if
union
content
block
if
baseTypeQNameProperty
block
content
checkContent
simpleTypeDecl
content
block
reportSchemaError
ListUnionRestrictionError
Object
getAttribute
ATT_NAME
String
nameOfType
toString
newSimpleTypeName
if
length
block
nameOfType
fTargetNSURIString
nameOfType
try
DatatypeValidator
newValidator
getDatatypeValidator
nameOfType
if
newValidator
block
if
list
block
createDatatypeValidator
nameOfType
baseValidator
facetData
if
restriction
block
createDatatypeValidator
nameOfType
baseValidator
facetData
block
createDatatypeValidator
nameOfType
dTValidators
catchClause
e
reportSchemaError
DatatypeError
Object
getMessage
return
addSymbol
nameOfType
traverseAny
int
child
Element
int
anyIndex
String
namespace
getAttribute
trim
ATT_NAMESPACE
String
processContents
getAttribute
trim
int
processContentsAny
CONTENTSPECNODE_ANY
int
processContentsAnyOther
CONTENTSPECNODE_ANY_OTHER
int
processContentsAnyLocal
CONTENTSPECNODE_ANY_LOCAL
if
length
equals
block
if
equals
block
processContentsAny
CONTENTSPECNODE_ANY_LAX
processContentsAnyOther
CONTENTSPECNODE_ANY_OTHER_LAX
processContentsAnyLocal
CONTENTSPECNODE_ANY_LOCAL_LAX
if
equals
block
processContentsAny
CONTENTSPECNODE_ANY_SKIP
processContentsAnyOther
CONTENTSPECNODE_ANY_OTHER_SKIP
processContentsAnyLocal
CONTENTSPECNODE_ANY_LOCAL_SKIP
if
length
equals
block
anyIndex
addContentSpecNode
processContentsAny
if
equals
block
String
uri
getOwnerDocument
getDocumentElement
getAttribute
int
uriIndex
addSymbol
uri
anyIndex
addContentSpecNode
processContentsAnyOther
uriIndex
if
equals
block
anyIndex
addContentSpecNode
processContentsAnyLocal
if
length
block
StringTokenizer
tokenizer
StringTokenizer
namespace
Vector
tokens
Vector
while
hasMoreElements
block
String
token
nextToken
if
equals
block
token
getOwnerDocument
getDocumentElement
getAttribute
addElement
token
String
uri
String
elementAt
int
uriIndex
addSymbol
uri
int
leafIndex
addContentSpecNode
processContentsAny
uriIndex
int
valueIndex
leafIndex
int
count
size
if
count
block
uri
String
elementAt
uriIndex
addSymbol
uri
leafIndex
addContentSpecNode
processContentsAny
uriIndex
int
otherValueIndex
leafIndex
int
choiceIndex
addContentSpecNode
CONTENTSPECNODE_CHOICE
valueIndex
otherValueIndex
for
forControl
int
i
i
count
i
block
uri
String
elementAt
i
uriIndex
addSymbol
uri
leafIndex
addContentSpecNode
processContentsAny
uriIndex
otherValueIndex
leafIndex
choiceIndex
addContentSpecNode
CONTENTSPECNODE_CHOICE
choiceIndex
otherValueIndex
anyIndex
choiceIndex
block
anyIndex
leafIndex
block
reportGenericSchemaError
return
anyIndex
getDatatypeValidator
DatatypeValidator
uri
String
localpart
String
DatatypeValidator
dv
if
length
equals
URI_SCHEMAFORSCHEMA
block
dv
getDatatypeValidator
localpart
block
dv
getDatatypeValidator
uri
localpart
return
dv
traverseAnyAttribute
XMLAttributeDecl
anyAttributeDecl
Element
XMLAttributeDecl
anyAttDecl
XMLAttributeDecl
String
processContents
getAttribute
trim
ATT_PROCESSCONTENTS
String
namespace
getAttribute
trim
ATT_NAMESPACE
String
curTargetUri
getOwnerDocument
getDocumentElement
getAttribute
if
length
equals
ATTVAL_TWOPOUNDANY
block
type
TYPE_ANY_ANY
if
equals
ATTVAL_TWOPOUNDOTHER
block
type
TYPE_ANY_OTHER
uri
addSymbol
curTargetUri
if
equals
ATTVAL_TWOPOUNDLOCAL
block
type
TYPE_ANY_LOCAL
if
length
block
type
TYPE_ANY_LIST
StringTokenizer
tokenizer
StringTokenizer
namespace
int
aStringList
startStringList
Vector
tokens
Vector
while
hasMoreElements
block
String
token
nextToken
if
equals
block
token
curTargetUri
if
addStringToList
aStringList
addSymbol
token
block
reportGenericSchemaError
finishStringList
aStringList
enumeration
aStringList
block
reportGenericSchemaError
defaultType
PROCESSCONTENTS_STRICT
if
equals
ATTVAL_SKIP
block
defaultType
PROCESSCONTENTS_SKIP
if
equals
ATTVAL_LAX
block
defaultType
PROCESSCONTENTS_LAX
return
anyAttDecl
mergeTwoAnyAttribute
XMLAttributeDecl
oneAny
XMLAttributeDecl
anotherAny
XMLAttributeDecl
if
type
block
return
oneAny
if
type
block
return
anotherAny
if
type
TYPE_ANY_ANY
block
return
anotherAny
if
type
TYPE_ANY_ANY
block
return
oneAny
if
type
TYPE_ANY_OTHER
block
if
type
TYPE_ANY_OTHER
block
if
uri
uri
block
return
oneAny
block
type
return
oneAny
if
type
TYPE_ANY_LOCAL
block
return
anotherAny
if
type
TYPE_ANY_LIST
block
if
stringInList
enumeration
uri
block
return
anotherAny
block
int
anotherAnyURIs
stringListAsIntArray
enumeration
int
newList
startStringList
for
forControl
int
i
i
length
i
block
if
anotherAnyURIs
i
uri
block
addStringToList
newList
anotherAnyURIs
i
finishStringList
newList
enumeration
newList
return
anotherAny
if
type
TYPE_ANY_LOCAL
block
if
type
TYPE_ANY_OTHER
type
TYPE_ANY_LOCAL
block
return
oneAny
if
type
TYPE_ANY_LIST
block
type
return
oneAny
if
type
TYPE_ANY_LIST
block
if
type
TYPE_ANY_OTHER
block
if
stringInList
enumeration
uri
block
return
oneAny
block
int
oneAnyURIs
stringListAsIntArray
enumeration
int
newList
startStringList
for
forControl
int
i
i
length
i
block
if
oneAnyURIs
i
uri
block
addStringToList
newList
oneAnyURIs
i
finishStringList
newList
enumeration
newList
return
oneAny
if
type
TYPE_ANY_LOCAL
block
type
return
oneAny
if
type
TYPE_ANY_LIST
block
int
result
intersect2sets
stringListAsIntArray
enumeration
stringListAsIntArray
enumeration
int
newList
startStringList
for
forControl
int
i
i
length
i
block
addStringToList
newList
result
i
finishStringList
newList
enumeration
newList
return
oneAny
return
oneAny
intersect2sets
int
one
int
theOther
int
int
result
int
length
length
length
length
int
count
for
forControl
int
i
i
length
i
block
for
forControl
int
j
j
length
j
block
if
one
i
theOther
j
block
result
count
one
i
int
result2
int
count
arraycopy
result
result2
count
return
result2
traverseComplexTypeDecl
int
complexTypeDecl
Element
String
isAbstract
getAttribute
ATT_ABSTRACT
String
blockSet
getAttribute
ATT_BLOCK
String
finalSet
getAttribute
ATT_FINAL
String
typeId
getAttribute
ATTVAL_ID
String
typeName
getAttribute
ATT_NAME
String
mixed
getAttribute
ATT_MIXED
boolean
isNamedType
if
DEBUGGING
println
typeName
if
equals
block
typeName
fAnonTypeCount
block
push
typeName
isNamedType
int
typeNameIndex
addSymbol
typeName
if
isTopLevel
complexTypeDecl
block
String
fullName
fTargetNSURIString
typeName
ComplexTypeInfo
temp
ComplexTypeInfo
get
fullName
if
temp
block
return
addSymbol
fullName
int
scopeDefined
fScopeCount
int
previousScope
fCurrentScope
fCurrentScope
scopeDefined
Element
child
ComplexTypeInfo
typeInfo
ComplexTypeInfo
try
child
checkContent
complexTypeDecl
getFirstChildElement
complexTypeDecl
if
child
block
processComplexContent
typeNameIndex
child
typeInfo
block
String
childName
getLocalName
int
index
if
equals
ELT_SIMPLECONTENT
block
traverseSimpleContentDecl
typeNameIndex
child
typeInfo
if
getNextSiblingElement
child
throw
ComplexTypeRecoverableError
if
equals
ELT_COMPLEXCONTENT
block
traverseComplexContentDecl
typeNameIndex
child
typeInfo
equals
ATTVAL_TRUE
if
getNextSiblingElement
child
throw
ComplexTypeRecoverableError
block
processComplexContent
typeNameIndex
child
typeInfo
equals
ATTVAL_TRUE
catchClause
e
String
message
getMessage
handleComplexTypeError
message
typeNameIndex
typeInfo
scopeDefined
scopeDefined
blockSet
parseBlockSet
blockSet
finalSet
parseFinalSet
finalSet
isAbstract
equals
ATTVAL_TRUE
if
startsWith
block
typeName
fTargetNSURIString
typeName
typeName
String
typeName
if
DEBUGGING
println
typeName
baseDataTypeValidator
baseComplexTypeInfo
derivedBy
contentType
contentSpecHandle
datatypeValidator
put
typeName
typeInfo
fCurrentScope
previousScope
if
isNamedType
block
pop
checkRecursingComplexType
setElementComplexTypeInfo
templateElementIndex
typeInfo
typeNameIndex
addSymbol
typeName
return
typeNameIndex
traverseSimpleContentDecl
typeNameIndex
int
simpleContentDecl
Element
typeInfo
ComplexTypeInfo
String
typeName
toString
typeNameIndex
String
simpleContentTypeId
getAttribute
ATTVAL_ID
contentType
TYPE_SIMPLE
contentSpecHandle
Element
simpleContent
checkContent
simpleContentDecl
getFirstChildElement
simpleContentDecl
if
simpleContent
block
throw
ComplexTypeRecoverableError
String
simpleContentName
getLocalName
if
equals
ELT_RESTRICTION
derivedBy
RESTRICTION
if
equals
ELT_EXTENSION
derivedBy
EXTENSION
block
throw
ComplexTypeRecoverableError
String
base
getAttribute
ATT_BASE
String
typeId
getAttribute
ATTVAL_ID
Element
content
checkContent
simpleContent
getFirstChildElement
simpleContent
if
length
block
throw
ComplexTypeRecoverableError
QName
baseQName
parseBase
base
processBaseTypeInfo
baseQName
typeInfo
if
baseComplexTypeInfo
block
if
contentSpecHandle
block
throw
ComplexTypeRecoverableError
base
Element
attrNode
if
derivedBy
RESTRICTION
block
if
baseDataTypeValidator
block
throw
ComplexTypeRecoverableError
base
block
baseDataTypeValidator
datatypeValidator
if
getLocalName
equals
ELT_SIMPLETYPE
block
int
simpleTypeNameIndex
traverseSimpleTypeDecl
content
if
simpleTypeNameIndex
block
baseDataTypeValidator
getDatatypeValidator
toString
simpleTypeNameIndex
content
getNextSiblingElement
content
block
throw
ComplexTypeRecoverableError
int
numEnumerationLiterals
int
numFacets
Hashtable
facetData
Hashtable
Vector
enumData
Vector
Element
child
for
forControl
child
content
child
getLocalName
equals
ELT_MINEXCLUSIVE
getLocalName
equals
ELT_MININCLUSIVE
getLocalName
equals
ELT_MAXEXCLUSIVE
getLocalName
equals
ELT_MAXINCLUSIVE
getLocalName
equals
ELT_PRECISION
getLocalName
equals
ELT_SCALE
getLocalName
equals
ELT_LENGTH
getLocalName
equals
ELT_MINLENGTH
getLocalName
equals
ELT_MAXLENGTH
getLocalName
equals
ELT_ENCODING
getLocalName
equals
ELT_PERIOD
getLocalName
equals
ELT_DURATION
getLocalName
equals
ELT_ENUMERATION
getLocalName
equals
ELT_PATTERN
getLocalName
equals
ELT_ANNOTATION
child
getNextSiblingElement
child
block
if
getNodeType
ELEMENT_NODE
block
Element
facetElt
Element
child
numFacets
if
getLocalName
equals
ELT_ENUMERATION
block
numEnumerationLiterals
addElement
getAttribute
ATT_VALUE
Element
enumContent
getFirstChildElement
facetElt
if
enumContent
getLocalName
equals
ELT_ANNOTATION
block
traverseAnnotationDecl
child
block
put
getLocalName
getAttribute
ATT_VALUE
if
numEnumerationLiterals
block
put
ELT_ENUMERATION
enumData
if
numFacets
block
datatypeValidator
createDatatypeValidator
typeName
baseDataTypeValidator
facetData
datatypeValidator
baseDataTypeValidator
if
child
block
if
isAttrOrAttrGroup
child
block
throw
ComplexTypeRecoverableError
attrNode
child
block
if
baseComplexTypeInfo
baseDataTypeValidator
datatypeValidator
datatypeValidator
baseDataTypeValidator
if
content
block
if
isAttrOrAttrGroup
content
block
throw
ComplexTypeRecoverableError
block
attrNode
content
int
templateElementNameIndex
addSymbol
typeName
templateElementIndex
addElementDecl
QName
templateElementNameIndex
typeNameIndex
fTargetNSURI
fTargetNSURI
fCurrentScope
scopeDefined
contentType
contentSpecHandle
datatypeValidator
attlistHead
getFirstAttributeDeclIndex
templateElementIndex
processAttributes
attrNode
baseQName
typeInfo
if
getNextSiblingElement
simpleContent
throw
ComplexTypeRecoverableError
traverseComplexContentDecl
typeNameIndex
int
complexContentDecl
Element
typeInfo
ComplexTypeInfo
mixedOnComplexTypeDecl
boolean
String
typeName
toString
typeNameIndex
String
typeId
getAttribute
ATTVAL_ID
String
mixed
getAttribute
ATT_MIXED
boolean
isMixed
mixedOnComplexTypeDecl
if
equals
ATTVAL_TRUE
isMixed
if
equals
ATTVAL_FALSE
isMixed
datatypeValidator
baseDataTypeValidator
Element
complexContent
checkContent
complexContentDecl
getFirstChildElement
complexContentDecl
if
complexContent
block
throw
ComplexTypeRecoverableError
String
complexContentName
getLocalName
if
equals
ELT_RESTRICTION
derivedBy
RESTRICTION
if
equals
ELT_EXTENSION
derivedBy
EXTENSION
block
throw
ComplexTypeRecoverableError
String
base
getAttribute
ATT_BASE
String
complexContentTypeId
getAttribute
ATTVAL_ID
Element
content
checkContent
complexContent
getFirstChildElement
complexContent
if
length
block
throw
ComplexTypeRecoverableError
QName
baseQName
parseBase
base
String
baseTypeURI
toString
uri
String
baseLocalName
toString
localpart
if
equals
URI_SCHEMAFORSCHEMA
equals
block
processBaseTypeInfo
baseQName
typeInfo
if
baseComplexTypeInfo
block
throw
ComplexTypeRecoverableError
processComplexContent
typeNameIndex
content
typeInfo
baseQName
isMixed
if
getNextSiblingElement
complexContent
throw
ComplexTypeRecoverableError
handleComplexTypeError
message
String
typeNameIndex
int
typeInfo
ComplexTypeInfo
String
typeName
toString
typeNameIndex
if
message
block
if
startsWith
reportGenericSchemaError
message
reportGenericSchemaError
typeName
message
contentType
TYPE_ANY
contentSpecHandle
derivedBy
datatypeValidator
attlistHead
int
templateElementNameIndex
addSymbol
typeName
templateElementIndex
addElementDecl
QName
templateElementNameIndex
typeNameIndex
fTargetNSURI
fTargetNSURI
fCurrentScope
scopeDefined
contentType
contentSpecHandle
datatypeValidator
return
parseBase
QName
base
String
String
prefix
String
localpart
base
int
colonptr
indexOf
if
colonptr
block
prefix
substring
colonptr
localpart
substring
colonptr
int
nameIndex
addSymbol
base
int
prefixIndex
addSymbol
prefix
int
localpartIndex
addSymbol
localpart
int
URIindex
addSymbol
resolvePrefixToURI
prefix
return
QName
prefixIndex
localpartIndex
nameIndex
URIindex
baseFromAnotherSchema
boolean
baseName
QName
String
typeURI
toString
uri
if
equals
fTargetNSURIString
equals
URI_SCHEMAFORSCHEMA
length
return
return
processBaseTypeInfo
baseName
QName
typeInfo
ComplexTypeInfo
ComplexTypeInfo
baseComplexTypeInfo
DatatypeValidator
baseDTValidator
String
typeURI
toString
uri
String
localpart
toString
localpart
String
base
toString
rawname
if
baseFromAnotherSchema
baseName
block
baseComplexTypeInfo
getTypeInfoFromNS
typeURI
localpart
if
baseComplexTypeInfo
block
baseDTValidator
getTypeValidatorFromNS
typeURI
localpart
if
baseDTValidator
block
throw
ComplexTypeRecoverableError
localpart
typeURI
block
String
fullBaseName
typeURI
localpart
baseComplexTypeInfo
ComplexTypeInfo
get
fullBaseName
if
baseComplexTypeInfo
block
baseDTValidator
getDatatypeValidator
typeURI
localpart
if
baseDTValidator
block
int
baseTypeSymbol
Element
baseTypeNode
getTopLevelComponentByName
ELT_COMPLEXTYPE
localpart
if
baseTypeNode
block
baseTypeSymbol
traverseComplexTypeDecl
baseTypeNode
baseComplexTypeInfo
ComplexTypeInfo
get
toString
baseTypeSymbol
block
baseTypeNode
getTopLevelComponentByName
ELT_SIMPLETYPE
localpart
if
baseTypeNode
block
baseTypeSymbol
traverseSimpleTypeDecl
baseTypeNode
baseDTValidator
getDatatypeValidator
typeURI
localpart
if
baseDTValidator
block
block
throw
ComplexTypeRecoverableError
base
baseComplexTypeInfo
baseComplexTypeInfo
baseDataTypeValidator
baseDTValidator
processComplexContent
typeNameIndex
int
complexContentChild
Element
typeInfo
ComplexTypeInfo
baseName
QName
isMixed
boolean
Element
attrNode
int
index
if
complexContentChild
block
String
childName
getLocalName
if
equals
ELT_GROUP
block
index
expandContentModel
traverseGroupDecl
complexContentChild
complexContentChild
attrNode
getNextSiblingElement
complexContentChild
if
equals
ELT_SEQUENCE
block
index
expandContentModel
traverseSequence
complexContentChild
complexContentChild
attrNode
getNextSiblingElement
complexContentChild
if
equals
ELT_CHOICE
block
index
expandContentModel
traverseChoice
complexContentChild
complexContentChild
attrNode
getNextSiblingElement
complexContentChild
if
equals
ELT_ALL
block
index
expandContentModel
traverseAll
complexContentChild
complexContentChild
attrNode
getNextSiblingElement
complexContentChild
if
isAttrOrAttrGroup
complexContentChild
block
contentType
TYPE_ANY
attrNode
complexContentChild
block
throw
ComplexTypeRecoverableError
childName
if
isMixed
block
int
pcdataNode
addContentSpecNode
CONTENTSPECNODE_LEAF
if
index
index
addContentSpecNode
CONTENTSPECNODE_CHOICE
pcdataNode
index
index
pcdataNode
contentSpecHandle
index
if
baseComplexTypeInfo
block
int
baseContentSpecHandle
contentSpecHandle
if
derivedBy
RESTRICTION
block
block
if
baseFromAnotherSchema
baseName
block
String
baseSchemaURI
toString
uri
SchemaGrammar
aGrammar
SchemaGrammar
getGrammar
baseSchemaURI
baseContentSpecHandle
importContentSpec
aGrammar
baseContentSpecHandle
if
contentSpecHandle
block
contentSpecHandle
baseContentSpecHandle
if
baseContentSpecHandle
block
contentSpecHandle
addContentSpecNode
CONTENTSPECNODE_SEQ
baseContentSpecHandle
contentSpecHandle
block
derivedBy
if
isMixed
contentType
TYPE_MIXED
if
contentSpecHandle
contentType
TYPE_EMPTY
contentType
TYPE_CHILDREN
String
typeName
toString
typeNameIndex
int
templateElementNameIndex
addSymbol
typeName
templateElementIndex
addElementDecl
QName
templateElementNameIndex
typeNameIndex
fTargetNSURI
fTargetNSURI
fCurrentScope
scopeDefined
contentType
contentSpecHandle
datatypeValidator
attlistHead
getFirstAttributeDeclIndex
templateElementIndex
if
attrNode
block
if
isAttrOrAttrGroup
attrNode
block
throw
ComplexTypeRecoverableError
getLocalName
processAttributes
attrNode
baseName
typeInfo
if
baseComplexTypeInfo
processAttributes
baseName
typeInfo
processAttributes
attrNode
Element
baseName
QName
typeInfo
ComplexTypeInfo
XMLAttributeDecl
attWildcard
Vector
anyAttDecls
Vector
Element
child
for
forControl
child
attrNode
child
child
getNextSiblingElement
child
block
String
childName
getLocalName
if
equals
ELT_ATTRIBUTE
block
traverseAttributeDecl
child
typeInfo
if
equals
ELT_ATTRIBUTEGROUP
block
traverseAttributeGroupDecl
child
typeInfo
anyAttDecls
if
equals
ELT_ANYATTRIBUTE
block
attWildcard
traverseAnyAttribute
child
if
attWildcard
block
XMLAttributeDecl
fromGroup
int
count
size
if
count
block
fromGroup
XMLAttributeDecl
elementAt
for
forControl
int
i
i
count
i
block
fromGroup
mergeTwoAnyAttribute
fromGroup
XMLAttributeDecl
elementAt
i
if
fromGroup
block
int
saveProcessContents
defaultType
attWildcard
mergeTwoAnyAttribute
attWildcard
fromGroup
defaultType
saveProcessContents
block
XMLAttributeDecl
baseAttWildcard
ComplexTypeInfo
baseTypeInfo
baseComplexTypeInfo
if
baseTypeInfo
attlistHead
block
int
attDefIndex
attlistHead
SchemaGrammar
aGrammar
fSchemaGrammar
String
baseTypeSchemaURI
baseFromAnotherSchema
baseName
toString
uri
if
baseTypeSchemaURI
block
aGrammar
SchemaGrammar
getGrammar
baseTypeSchemaURI
if
aGrammar
block
while
attDefIndex
block
clear
getAttributeDecl
attDefIndex
fTempAttributeDecl
if
type
TYPE_ANY_ANY
type
TYPE_ANY_LIST
type
TYPE_ANY_LOCAL
type
TYPE_ANY_OTHER
block
if
attWildcard
block
baseAttWildcard
fTempAttributeDecl
attDefIndex
getNextAttributeDeclIndex
attDefIndex
continue
int
temp
getAttributeDeclIndex
templateElementIndex
name
if
temp
block
if
derivedBy
RESTRICTION
block
attDefIndex
getNextAttributeDeclIndex
attDefIndex
continue
addAttDef
templateElementIndex
name
type
enumeration
defaultType
defaultValue
datatypeValidator
list
attDefIndex
getNextAttributeDeclIndex
attDefIndex
if
attWildcard
block
if
type
block
addAttDef
templateElementIndex
name
type
enumeration
defaultType
defaultValue
datatypeValidator
list
block
if
baseAttWildcard
block
addAttDef
templateElementIndex
name
type
enumeration
defaultType
defaultValue
datatypeValidator
list
attlistHead
getFirstAttributeDeclIndex
templateElementIndex
isAttrOrAttrGroup
boolean
e
Element
String
elementName
getLocalName
if
equals
ELT_ATTRIBUTE
equals
ELT_ATTRIBUTEGROUP
equals
ELT_ANYATTRIBUTE
return
return
checkRecursingComplexType
if
empty
block
if
isEmpty
block
Enumeration
e
keys
while
hasMoreElements
block
QName
nameThenScope
QName
nextElement
String
typeName
String
get
nameThenScope
int
eltUriIndex
uri
int
eltNameIndex
localpart
int
enclosingScope
prefix
ComplexTypeInfo
typeInfo
ComplexTypeInfo
get
fTargetNSURIString
typeName
if
typeInfo
block
throw
Exception
block
int
elementIndex
addElementDecl
QName
eltNameIndex
eltNameIndex
eltUriIndex
enclosingScope
scopeDefined
contentType
contentSpecHandle
attlistHead
datatypeValidator
setElementComplexTypeInfo
elementIndex
typeInfo
clear
checkParticleDerivationOK
derivedTypeNode
Element
baseTypeNode
Element
importContentSpec
int
aGrammar
SchemaGrammar
contentSpecHead
int
XMLContentSpec
ctsp
XMLContentSpec
getContentSpec
contentSpecHead
ctsp
int
left
int
right
if
type
CONTENTSPECNODE_LEAF
type
CONTENTSPECNODE_ANY
type
CONTENTSPECNODE_ANY_LOCAL
type
CONTENTSPECNODE_ANY_OTHER
block
return
addContentSpecNode
type
value
otherValue
block
if
value
block
left
block
left
importContentSpec
aGrammar
value
if
otherValue
block
right
block
right
importContentSpec
aGrammar
otherValue
return
addContentSpecNode
type
left
right
expandContentModel
int
index
int
particle
Element
String
minOccurs
getAttribute
trim
ATT_MINOCCURS
String
maxOccurs
getAttribute
trim
ATT_MAXOCCURS
int
min
max
if
equals
equals
block
return
if
equals
block
minOccurs
if
equals
block
maxOccurs
int
leafIndex
index
if
equals
equals
block
if
equals
equals
block
index
addContentSpecNode
CONTENTSPECNODE_ZERO_OR_ONE
index
if
equals
equals
block
index
addContentSpecNode
CONTENTSPECNODE_ZERO_OR_MORE
index
if
equals
equals
block
index
addContentSpecNode
CONTENTSPECNODE_ONE_OR_MORE
index
if
equals
block
try
min
parseInt
minOccurs
catchClause
e
reportSchemaError
GenericError
Object
getMessage
if
min
block
index
addContentSpecNode
CONTENTSPECNODE_ONE_OR_MORE
index
for
forControl
int
i
i
min
i
block
index
addContentSpecNode
CONTENTSPECNODE_SEQ
leafIndex
index
block
try
min
parseInt
minOccurs
max
parseInt
maxOccurs
catchClause
e
reportSchemaError
GenericError
Object
getMessage
if
min
block
int
optional
addContentSpecNode
CONTENTSPECNODE_ZERO_OR_ONE
leafIndex
index
optional
for
forControl
int
i
i
max
min
i
block
index
addContentSpecNode
CONTENTSPECNODE_SEQ
index
optional
block
for
forControl
int
i
i
min
i
block
index
addContentSpecNode
CONTENTSPECNODE_SEQ
index
leafIndex
int
optional
addContentSpecNode
CONTENTSPECNODE_ZERO_OR_ONE
leafIndex
for
forControl
int
i
i
max
min
i
block
index
addContentSpecNode
CONTENTSPECNODE_SEQ
index
optional
return
index
traverseAttributeDecl
int
attrDecl
Element
typeInfo
ComplexTypeInfo
referredTo
boolean
String
attNameStr
getAttribute
ATT_NAME
int
attName
addSymbol
attNameStr
String
isQName
getAttribute
ATT_FORM
boolean
isAttrTopLevel
isTopLevel
attrDecl
DatatypeValidator
dv
int
attType
boolean
attIsList
int
dataTypeSymbol
String
ref
getAttribute
ATT_REF
String
datatype
getAttribute
ATT_TYPE
if
equals
block
if
isAttrTopLevel
reportGenericSchemaError
if
equals
reportGenericSchemaError
attNameStr
ref
if
equals
reportGenericSchemaError
ref
if
getAttribute
equals
ATT_FORM
reportGenericSchemaError
ref
if
getAttribute
equals
ATT_VALUE
reportGenericSchemaError
ref
Element
simpleTypeChild
findAttributeSimpleType
attrDecl
String
localpart
String
use
getAttribute
ATT_USE
boolean
prohibited
equals
ATTVAL_PROHIBITED
boolean
required
equals
ATTVAL_REQUIRED
if
equals
block
String
prefix
localpart
ref
int
colonptr
indexOf
if
colonptr
block
prefix
substring
colonptr
localpart
substring
colonptr
String
uriStr
resolvePrefixToURI
prefix
if
equals
fTargetNSURIString
block
addAttributeDeclFromAnotherSchema
localpart
uriStr
typeInfo
return
Element
referredAttribute
getTopLevelComponentByName
ELT_ATTRIBUTE
localpart
if
referredAttribute
block
traverseAttributeDecl
referredAttribute
typeInfo
int
referredAttName
addSymbol
getAttribute
ATT_NAME
int
uriIndex
if
length
uriIndex
fTargetNSURI
QName
referredAttQName
QName
referredAttName
referredAttName
uriIndex
if
prohibited
block
int
tempIndex
getAttributeDeclIndex
templateElementIndex
referredAttQName
XMLAttributeDecl
referredAttrDecl
XMLAttributeDecl
getAttributeDecl
tempIndex
referredAttrDecl
defaultType
DEFAULT_TYPE_PROHIBITED
setAttributeDecl
templateElementIndex
tempIndex
referredAttrDecl
if
required
block
int
tempIndex
getAttributeDeclIndex
templateElementIndex
referredAttQName
XMLAttributeDecl
referredAttrDecl
XMLAttributeDecl
getAttributeDecl
tempIndex
referredAttrDecl
if
defaultType
DEFAULT_TYPE_FIXED
defaultType
DEFAULT_TYPE_REQUIRED_AND_FIXED
defaultType
DEFAULT_TYPE_REQUIRED
setAttributeDecl
templateElementIndex
tempIndex
referredAttrDecl
block
if
get
localpart
block
addAttributeDeclFromAnotherSchema
localpart
uriStr
typeInfo
reportGenericSchemaError
ref
return
if
equals
block
if
simpleTypeChild
block
attType
TYPE_SIMPLE
dataTypeSymbol
traverseSimpleTypeDecl
simpleTypeChild
localpart
toString
dataTypeSymbol
block
attType
TYPE_SIMPLE
localpart
dataTypeSymbol
addSymbol
localpart
localpart
toString
dataTypeSymbol
dv
getDatatypeValidator
localpart
block
if
simpleTypeChild
referredTo
reportGenericSchemaError
String
prefix
localpart
datatype
dataTypeSymbol
addSymbol
localpart
int
colonptr
indexOf
if
colonptr
block
prefix
substring
colonptr
localpart
substring
colonptr
String
typeURI
resolvePrefixToURI
prefix
if
equals
URI_SCHEMAFORSCHEMA
length
block
dv
getDatatypeValidator
localpart
if
equals
block
attType
TYPE_ID
if
equals
block
attType
TYPE_IDREF
if
equals
block
attType
TYPE_IDREF
attIsList
if
equals
block
attType
TYPE_ENTITY
if
equals
block
attType
TYPE_ENTITY
attIsList
if
equals
block
attType
TYPE_NMTOKEN
if
equals
block
attType
TYPE_NMTOKEN
attIsList
if
equals
ELT_NOTATION
block
attType
TYPE_NOTATION
block
attType
TYPE_SIMPLE
if
dv
length
block
Element
topleveltype
getTopLevelComponentByName
ELT_SIMPLETYPE
localpart
if
topleveltype
block
traverseSimpleTypeDecl
topleveltype
dv
getDatatypeValidator
typeURI
localpart
if
referredTo
block
reportGenericSchemaError
typeURI
localpart
block
dv
getDatatypeValidator
typeURI
localpart
if
dv
equals
fTargetNSURIString
block
Element
topleveltype
getTopLevelComponentByName
ELT_SIMPLETYPE
localpart
if
topleveltype
block
traverseSimpleTypeDecl
topleveltype
dv
getDatatypeValidator
typeURI
localpart
if
referredTo
block
reportGenericSchemaError
typeURI
localpart
attType
TYPE_SIMPLE
int
attDefaultType
int
attDefaultValue
if
dv
referredTo
block
reportGenericSchemaError
toString
dataTypeSymbol
String
fixed
getAttribute
ATT_VALUE
if
isAttrTopLevel
block
if
equals
block
if
required
prohibited
equals
ATTVAL_OPTIONAL
referredTo
reportGenericSchemaError
use
if
equals
referredTo
reportGenericSchemaError
if
equals
ATTVAL_FIXED
block
attDefaultType
DEFAULT_TYPE_FIXED
attDefaultValue
addString
fixed
block
attDefaultType
DEFAULT_TYPE_DEFAULT
attDefaultValue
addString
fixed
block
if
equals
referredTo
reportGenericSchemaError
attDefaultType
DEFAULT_TYPE_IMPLIED
block
if
equals
block
if
required
prohibited
equals
ATTVAL_OPTIONAL
reportGenericSchemaError
use
if
equals
reportGenericSchemaError
if
equals
ATTVAL_FIXED
block
attDefaultType
DEFAULT_TYPE_FIXED
attDefaultValue
addString
fixed
block
attDefaultType
DEFAULT_TYPE_DEFAULT
attDefaultValue
addString
fixed
block
if
required
attDefaultType
DEFAULT_TYPE_REQUIRED
if
prohibited
attDefaultType
DEFAULT_TYPE_PROHIBITED
attDefaultType
DEFAULT_TYPE_IMPLIED
if
attType
TYPE_SIMPLE
attDefaultValue
block
try
if
dv
validate
toString
attDefaultValue
if
referredTo
reportSchemaError
NoValidatorFor
Object
datatype
catchClause
idve
if
referredTo
reportSchemaError
IncorrectDefaultType
Object
getAttribute
ATT_NAME
getMessage
catchClause
e
printStackTrace
println
int
uriIndex
if
length
block
if
isAttrTopLevel
block
uriIndex
fTargetNSURI
if
equals
ATTVAL_UNQUALIFIED
block
if
equals
ATTVAL_QUALIFIED
fAttributeDefaultQualified
block
uriIndex
fTargetNSURI
QName
attQName
QName
attName
attName
uriIndex
if
DEBUGGING
println
toString
attName
dv
if
isAttrTopLevel
block
datatypeValidator
dv
setValues
attQName
type
attType
defaultType
attDefaultType
list
attIsList
if
attDefaultValue
block
defaultValue
String
toString
attDefaultValue
put
attNameStr
XMLAttributeDecl
fTempAttributeDecl
if
typeInfo
block
addAttDef
templateElementIndex
attQName
attType
dataTypeSymbol
attDefaultType
toString
attDefaultValue
dv
attIsList
return
addAttributeDeclFromAnotherSchema
int
name
String
uriStr
String
typeInfo
ComplexTypeInfo
SchemaGrammar
aGrammar
SchemaGrammar
getGrammar
uriStr
if
uriStr
aGrammar
SchemaGrammar
block
reportGenericSchemaError
uriStr
return
Hashtable
attrRegistry
getAttirubteDeclRegistry
if
attrRegistry
block
reportGenericSchemaError
uriStr
return
XMLAttributeDecl
tempAttrDecl
XMLAttributeDecl
get
name
if
tempAttrDecl
block
reportGenericSchemaError
name
uriStr
return
if
typeInfo
block
addAttDef
templateElementIndex
name
type
defaultType
defaultValue
datatypeValidator
list
return
traverseAttributeGroupDecl
int
attrGrpDecl
Element
typeInfo
ComplexTypeInfo
anyAttDecls
Vector
int
attGrpName
addSymbol
getAttribute
ATT_NAME
String
ref
getAttribute
ATT_REF
int
attType
int
enumeration
if
equals
block
if
getFirstChildElement
attrGrpDecl
reportSchemaError
NoContentForRef
String
prefix
String
localpart
ref
int
colonptr
indexOf
if
colonptr
block
prefix
substring
colonptr
localpart
substring
colonptr
String
uriStr
resolvePrefixToURI
prefix
if
equals
fTargetNSURIString
block
traverseAttributeGroupDeclFromAnotherSchema
localpart
uriStr
typeInfo
anyAttDecls
return
Element
referredAttrGrp
getTopLevelComponentByName
ELT_ATTRIBUTEGROUP
localpart
if
referredAttrGrp
block
traverseAttributeGroupDecl
referredAttrGrp
typeInfo
anyAttDecls
block
reportGenericSchemaError
ref
return
for
forControl
Element
child
getFirstChildElement
attrGrpDecl
child
child
getNextSiblingElement
child
block
if
getLocalName
equals
ELT_ATTRIBUTE
block
traverseAttributeDecl
child
typeInfo
if
getLocalName
equals
ELT_ATTRIBUTEGROUP
block
traverseAttributeGroupDecl
child
typeInfo
anyAttDecls
if
getLocalName
equals
ELT_ANYATTRIBUTE
block
addElement
traverseAnyAttribute
child
break
if
getLocalName
equals
ELT_ANNOTATION
block
return
traverseAttributeGroupDeclFromAnotherSchema
int
attGrpName
String
uriStr
String
typeInfo
ComplexTypeInfo
anyAttDecls
Vector
SchemaGrammar
aGrammar
SchemaGrammar
getGrammar
uriStr
if
uriStr
aGrammar
aGrammar
SchemaGrammar
block
reportGenericSchemaError
uriStr
return
Element
attGrpDecl
Element
get
Object
attGrpName
if
attGrpDecl
block
reportGenericSchemaError
attGrpName
uriStr
return
NamespacesScope
saveNSMapping
fNamespacesScope
int
saveTargetNSUri
fTargetNSURI
fTargetNSURI
addSymbol
getTargetNamespaceURI
fNamespacesScope
getNamespacesScope
int
attType
int
enumeration
for
forControl
Element
child
getFirstChildElement
attGrpDecl
child
child
getNextSiblingElement
child
block
if
getLocalName
equals
ELT_ATTRIBUTE
block
String
childAttName
getAttribute
ATT_NAME
if
length
block
Hashtable
attDeclRegistry
getAttirubteDeclRegistry
if
attDeclRegistry
block
if
get
Object
childAttName
block
addAttributeDeclFromAnotherSchema
childAttName
uriStr
typeInfo
return
traverseAttributeDecl
child
typeInfo
if
getLocalName
equals
ELT_ATTRIBUTEGROUP
block
traverseAttributeGroupDecl
child
typeInfo
anyAttDecls
if
getLocalName
equals
ELT_ANYATTRIBUTE
block
addElement
traverseAnyAttribute
child
break
if
getLocalName
equals
ELT_ANNOTATION
block
fNamespacesScope
saveNSMapping
fTargetNSURI
saveTargetNSUri
return
findAttributeSimpleType
Element
attrDecl
Element
Element
child
getFirstChildElement
attrDecl
if
child
return
if
getLocalName
equals
ELT_SIMPLETYPE
return
child
if
getLocalName
equals
ELT_ANNOTATION
block
traverseAnnotationDecl
child
child
getNextSiblingElement
child
if
child
return
if
getLocalName
equals
ELT_SIMPLETYPE
getNextSiblingElement
child
return
child
reportGenericSchemaError
return
traverseElementDecl
QName
elementDecl
Element
int
contentSpecType
int
contentSpecNodeIndex
int
typeNameIndex
int
scopeDefined
DatatypeValidator
dv
String
name
getAttribute
ATT_NAME
if
DEBUGGING
println
name
String
ref
getAttribute
ATT_REF
String
type
getAttribute
ATT_TYPE
String
minOccurs
getAttribute
ATT_MINOCCURS
String
maxOccurs
getAttribute
ATT_MAXOCCURS
String
dflt
getAttribute
ATT_DEFAULT
String
fixed
getAttribute
ATT_FIXED
if
equals
equals
reportGenericSchemaError
String
substitutionGroup
getAttribute
ATT_SUBSTITUTIONGROUP
String
isQName
getAttribute
ATT_FORM
String
fromAnotherSchema
if
isTopLevel
elementDecl
block
if
equals
reportGenericSchemaError
if
equals
reportGenericSchemaError
name
int
nameIndex
addSymbol
name
int
eltKey
getElementDeclIndex
fTargetNSURI
nameIndex
TOP_LEVEL_SCOPE
if
eltKey
block
return
QName
nameIndex
nameIndex
fTargetNSURI
int
blockSet
parseBlockSet
getAttribute
ATT_BLOCK
int
finalSet
parseFinalSet
getAttribute
ATT_FINAL
boolean
isNullable
getAttribute
equals
ATTVAL_TRUE
ATT_NULLABLE
boolean
isAbstract
getAttribute
equals
ATTVAL_TRUE
ATT_ABSTRACT
int
elementMiscFlags
if
isNullable
block
elementMiscFlags
NULLABLE
if
isAbstract
block
elementMiscFlags
ABSTRACT
if
equals
block
if
equals
elementMiscFlags
finalSet
blockSet
equals
equals
reportSchemaError
BadAttWithRef
if
equals
reportGenericSchemaError
name
Element
child
getFirstChildElement
elementDecl
if
child
getLocalName
equals
ELT_ANNOTATION
block
if
getNextSiblingElement
child
reportSchemaError
NoContentForRef
traverseAnnotationDecl
child
if
child
reportSchemaError
NoContentForRef
String
prefix
String
localpart
ref
int
colonptr
indexOf
if
colonptr
block
prefix
substring
colonptr
localpart
substring
colonptr
int
localpartIndex
addSymbol
localpart
String
uriString
resolvePrefixToURI
prefix
QName
eltName
QName
prefix
addSymbol
prefix
localpartIndex
addSymbol
ref
uriString
addSymbol
uriString
if
equals
fTargetNSURIString
block
return
eltName
int
elementIndex
getElementDeclIndex
eltName
TOP_LEVEL_SCOPE
if
elementIndex
block
Element
targetElement
getTopLevelComponentByName
ELT_ELEMENT
localpart
if
targetElement
block
reportGenericSchemaError
localpart
return
eltName
block
return
eltName
Element
substitutionGroupElementDecl
int
substitutionGroupElementDeclIndex
boolean
noErrorSoFar
String
substitutionGroupUri
String
substitutionGroupLocalpart
String
substitutionGroupFullName
ComplexTypeInfo
substitutionGroupEltTypeInfo
DatatypeValidator
substitutionGroupEltDV
if
length
block
substitutionGroupUri
resolvePrefixToURI
getPrefix
substitutionGroup
substitutionGroupLocalpart
getLocalPart
substitutionGroup
substitutionGroupFullName
substitutionGroupUri
substitutionGroupLocalpart
if
equals
fTargetNSURIString
block
substitutionGroupEltTypeInfo
getElementDeclTypeInfoFromNS
substitutionGroupUri
substitutionGroupLocalpart
if
substitutionGroupEltTypeInfo
block
substitutionGroupEltDV
getElementDeclTypeValidatorFromNS
substitutionGroupUri
substitutionGroupLocalpart
if
substitutionGroupEltDV
block
noErrorSoFar
reportGenericSchemaError
substitutionGroupLocalpart
substitutionGroupUri
block
substitutionGroupElementDecl
getTopLevelComponentByName
ELT_ELEMENT
substitutionGroupLocalpart
if
substitutionGroupElementDecl
block
substitutionGroupElementDeclIndex
getElementDeclIndex
fTargetNSURI
getLocalPartIndex
substitutionGroup
TOP_LEVEL_SCOPE
if
substitutionGroupElementDeclIndex
block
noErrorSoFar
reportGenericSchemaError
substitutionGroup
name
block
substitutionGroupElementDeclIndex
getElementDeclIndex
fTargetNSURI
getLocalPartIndex
substitutionGroup
TOP_LEVEL_SCOPE
if
substitutionGroupElementDeclIndex
block
traverseElementDecl
substitutionGroupElementDecl
substitutionGroupElementDeclIndex
getElementDeclIndex
fTargetNSURI
getLocalPartIndex
substitutionGroup
TOP_LEVEL_SCOPE
if
substitutionGroupElementDeclIndex
block
substitutionGroupEltTypeInfo
getElementComplexTypeInfo
substitutionGroupElementDeclIndex
if
substitutionGroupEltTypeInfo
block
getElementDecl
substitutionGroupElementDeclIndex
fTempElementDecl
substitutionGroupEltDV
datatypeValidator
if
substitutionGroupEltDV
block
noErrorSoFar
reportGenericSchemaError
substitutionGroupLocalpart
substitutionGroupUri
ComplexTypeInfo
typeInfo
Element
child
getFirstChildElement
elementDecl
if
child
getLocalName
equals
ELT_ANNOTATION
block
traverseAnnotationDecl
child
child
getNextSiblingElement
child
if
child
getLocalName
equals
ELT_ANNOTATION
reportGenericSchemaError
boolean
haveAnonType
if
child
block
String
childName
getLocalName
if
equals
ELT_COMPLEXTYPE
block
if
getAttribute
length
ATT_NAME
block
noErrorSoFar
reportGenericSchemaError
name
typeNameIndex
traverseComplexTypeDecl
child
if
typeNameIndex
block
typeInfo
ComplexTypeInfo
get
toString
typeNameIndex
block
noErrorSoFar
reportGenericSchemaError
name
haveAnonType
child
getNextSiblingElement
child
if
equals
ELT_SIMPLETYPE
block
if
getAttribute
length
ATT_NAME
block
noErrorSoFar
reportGenericSchemaError
name
typeNameIndex
traverseSimpleTypeDecl
child
if
typeNameIndex
block
dv
getDatatypeValidator
toString
typeNameIndex
block
noErrorSoFar
reportGenericSchemaError
name
contentSpecType
TYPE_SIMPLE
haveAnonType
child
getNextSiblingElement
child
if
equals
block
contentSpecType
TYPE_ANY
contentSpecNodeIndex
if
child
childName
getLocalName
while
child
equals
ELT_KEY
equals
ELT_KEYREF
equals
ELT_UNIQUE
block
child
getNextSiblingElement
child
if
child
block
childName
getLocalName
if
child
block
noErrorSoFar
reportGenericSchemaError
if
haveAnonType
length
block
noErrorSoFar
reportGenericSchemaError
name
if
equals
block
if
substitutionGroupElementDecl
block
checkSubstitutionGroupOK
elementDecl
substitutionGroupElementDecl
String
prefix
String
localpart
type
int
colonptr
indexOf
if
colonptr
block
prefix
substring
colonptr
localpart
substring
colonptr
String
typeURI
resolvePrefixToURI
prefix
if
equals
fTargetNSURIString
equals
URI_SCHEMAFORSCHEMA
length
block
fromAnotherSchema
typeURI
typeInfo
getTypeInfoFromNS
typeURI
localpart
if
typeInfo
block
dv
getTypeValidatorFromNS
typeURI
localpart
if
dv
block
noErrorSoFar
reportGenericSchemaError
localpart
typeURI
block
typeInfo
ComplexTypeInfo
get
typeURI
localpart
if
typeInfo
block
dv
getDatatypeValidator
typeURI
localpart
if
dv
if
equals
URI_SCHEMAFORSCHEMA
equals
URI_SCHEMAFORSCHEMA
block
noErrorSoFar
reportGenericSchemaError
typeURI
localpart
block
Element
topleveltype
getTopLevelComponentByName
ELT_COMPLEXTYPE
localpart
if
topleveltype
block
if
search
Object
localpart
block
int
uriInd
if
equals
ATTVAL_QUALIFIED
fElementDefaultQualified
block
uriInd
fTargetNSURI
int
nameIndex
addSymbol
name
QName
tempQName
QName
fCurrentScope
nameIndex
nameIndex
uriInd
put
tempQName
localpart
return
QName
nameIndex
nameIndex
uriInd
block
typeNameIndex
traverseComplexTypeDecl
topleveltype
typeInfo
ComplexTypeInfo
get
toString
typeNameIndex
block
topleveltype
getTopLevelComponentByName
ELT_SIMPLETYPE
localpart
if
topleveltype
block
typeNameIndex
traverseSimpleTypeDecl
topleveltype
dv
getDatatypeValidator
typeURI
localpart
block
noErrorSoFar
reportGenericSchemaError
typeURI
localpart
if
haveAnonType
block
if
substitutionGroupElementDecl
block
checkSubstitutionGroupOK
elementDecl
substitutionGroupElementDecl
block
if
typeInfo
dv
typeInfo
substitutionGroupEltTypeInfo
if
typeInfo
dv
dv
substitutionGroupEltDV
if
typeInfo
dv
block
if
noErrorSoFar
block
contentSpecType
TYPE_ANY
block
noErrorSoFar
reportGenericSchemaError
name
if
typeInfo
block
contentSpecNodeIndex
contentSpecHandle
contentSpecType
contentType
scopeDefined
scopeDefined
dv
datatypeValidator
if
dv
block
contentSpecType
TYPE_SIMPLE
if
typeInfo
block
fromAnotherSchema
int
elementNameIndex
addSymbol
name
int
localpartIndex
elementNameIndex
int
uriIndex
int
enclosingScope
fCurrentScope
if
isTopLevel
elementDecl
block
uriIndex
fTargetNSURI
enclosingScope
TOP_LEVEL_SCOPE
if
equals
ATTVAL_UNQUALIFIED
block
if
equals
ATTVAL_QUALIFIED
fElementDefaultQualified
block
uriIndex
fTargetNSURI
int
existSuchElementIndex
getElementDeclIndex
uriIndex
localpartIndex
enclosingScope
if
existSuchElementIndex
block
getElementDecl
existSuchElementIndex
fTempElementDecl
DatatypeValidator
edv
datatypeValidator
ComplexTypeInfo
eTypeInfo
getElementComplexTypeInfo
existSuchElementIndex
if
eTypeInfo
eTypeInfo
typeInfo
edv
edv
dv
block
noErrorSoFar
reportGenericSchemaError
toString
localpartIndex
QName
eltQName
QName
localpartIndex
elementNameIndex
uriIndex
int
attrListHead
if
typeInfo
block
attrListHead
attlistHead
int
elementIndex
addElementDecl
eltQName
enclosingScope
scopeDefined
contentSpecType
contentSpecNodeIndex
attrListHead
dv
if
DEBUGGING
block
println
elementIndex
toString
uri
toString
localpart
type
contentSpecType
contentSpecNodeIndex
enclosingScope
scopeDefined
setElementComplexTypeInfo
elementIndex
typeInfo
setElementFromAnotherSchemaURI
elementIndex
fromAnotherSchema
setElementDeclBlockSet
elementIndex
blockSet
setElementDeclFinalSet
elementIndex
finalSet
setElementDeclMiscFlags
elementIndex
elementMiscFlags
setElementDeclSubstitutionGroupElementFullName
elementIndex
substitutionGroupFullName
Element
ic
getFirstChildElement
elementDecl
IDENTITY_CONSTRAINTS
Vector
idConstraints
if
ic
block
XMLElementDecl
edecl
XMLElementDecl
getElementDecl
elementIndex
edecl
while
ic
block
String
icName
getLocalName
if
equals
ELT_KEY
block
traverseKey
ic
edecl
if
equals
ELT_KEYREF
block
traverseKeyRef
ic
edecl
if
equals
ELT_UNIQUE
block
traverseUnique
ic
edecl
block
throw
RuntimeException
ELT_UNIQUE
ELT_KEY
ELT_KEYREF
setElementDecl
elementIndex
edecl
ic
getNextSiblingElement
ic
IDENTITY_CONSTRAINTS
return
eltQName
traverseUnique
uelem
Element
edecl
XMLElementDecl
if
DEBUG_IDENTITY_CONSTRAINTS
block
println
getNodeName
String
ename
getElementNameFor
uelem
Unique
unique
Unique
ename
traverseIdentityConstraint
unique
uelem
addElement
unique
traverseKey
kelem
Element
edecl
XMLElementDecl
String
kname
getAttribute
ATT_NAME
if
DEBUG_IDENTITY_CONSTRAINTS
block
println
getNodeName
kname
String
ename
getElementNameFor
kelem
Key
key
Key
ename
kname
traverseIdentityConstraint
key
kelem
addElement
key
traverseKeyRef
krelem
Element
edecl
XMLElementDecl
String
krname
getAttribute
ATT_NAME
if
DEBUG_IDENTITY_CONSTRAINTS
block
println
getNodeName
krname
String
ename
getElementNameFor
krelem
KeyRef
keyRef
KeyRef
ename
krname
traverseIdentityConstraint
keyRef
krelem
addElement
keyRef
traverseIdentityConstraint
ic
IdentityConstraint
icelem
Element
Element
selem
getFirstChildElement
icelem
ELT_SELECTOR
String
stext
CR_IMPL
getAttribute
ATT_XPATH
getChildText
selem
stext
trim
try
Selector
XPath
sxpath
Selector
XPath
stext
fStringPool
fNamespacesScope
Selector
selector
Selector
sxpath
ic
if
DEBUG_IDENTITY_CONSTRAINTS
block
println
selector
setSelector
selector
catchClause
e
throw
SAXException
getMessage
Element
felem
getNextSiblingElement
selem
ELT_FIELD
while
felem
block
String
ftext
CR_IMPL
getAttribute
ATT_XPATH
getChildText
felem
ftext
trim
try
Field
XPath
fxpath
Field
XPath
ftext
fStringPool
fNamespacesScope
Field
field
Field
fxpath
ic
if
DEBUG_IDENTITY_CONSTRAINTS
block
println
field
addField
field
catchClause
e
throw
SAXException
getMessage
felem
getNextSiblingElement
felem
ELT_FIELD
getElementNameFor
String
icnode
Element
Element
enode
Element
getParentNode
String
ename
getAttribute
if
length
block
ename
getAttribute
return
ename
getLocalPartIndex
int
fullName
String
int
colonAt
indexOf
String
localpart
fullName
if
colonAt
block
localpart
substring
colonAt
return
addSymbol
localpart
getLocalPart
String
fullName
String
int
colonAt
indexOf
String
localpart
fullName
if
colonAt
block
localpart
substring
colonAt
return
localpart
getPrefixIndex
int
fullName
String
int
colonAt
indexOf
String
prefix
if
colonAt
block
prefix
substring
colonAt
return
addSymbol
prefix
getPrefix
String
fullName
String
int
colonAt
indexOf
String
prefix
if
colonAt
block
prefix
substring
colonAt
return
prefix
checkSubstitutionGroupOK
elementDecl
Element
substitutionGroupElementDecl
Element
getTopLevelComponentByName
Element
componentCategory
String
name
String
Element
child
if
equals
ELT_GROUP
block
child
Element
get
name
if
equals
ELT_ATTRIBUTEGROUP
block
child
Element
get
name
if
equals
ELT_ATTRIBUTE
block
child
Element
get
name
if
child
block
return
child
child
getFirstChildElement
fSchemaRootElement
if
child
block
return
while
child
block
if
getLocalName
equals
componentCategory
block
if
getAttribute
equals
name
ATT_NAME
block
return
child
child
getNextSiblingElement
child
return
isTopLevel
boolean
component
Element
return
getParentNode
getTypeValidatorFromNS
DatatypeValidator
newSchemaURI
String
localpart
String
return
getDatatypeValidator
newSchemaURI
localpart
getTypeInfoFromNS
ComplexTypeInfo
newSchemaURI
String
localpart
String
Grammar
grammar
getGrammar
newSchemaURI
if
grammar
grammar
SchemaGrammar
block
SchemaGrammar
sGrammar
SchemaGrammar
grammar
ComplexTypeInfo
typeInfo
ComplexTypeInfo
getComplexTypeRegistry
get
newSchemaURI
localpart
return
typeInfo
block
reportGenericSchemaError
newSchemaURI
return
getElementDeclTypeValidatorFromNS
DatatypeValidator
newSchemaURI
String
localpart
String
Grammar
grammar
getGrammar
newSchemaURI
if
grammar
grammar
SchemaGrammar
block
SchemaGrammar
sGrammar
SchemaGrammar
grammar
int
eltIndex
getElementDeclIndex
addSymbol
newSchemaURI
addSymbol
localpart
TOP_LEVEL_SCOPE
DatatypeValidator
dv
if
eltIndex
block
getElementDecl
eltIndex
fTempElementDecl
dv
datatypeValidator
block
reportGenericSchemaError
localpart
newSchemaURI
return
dv
block
reportGenericSchemaError
newSchemaURI
return
getElementDeclTypeInfoFromNS
ComplexTypeInfo
newSchemaURI
String
localpart
String
Grammar
grammar
getGrammar
newSchemaURI
if
grammar
grammar
SchemaGrammar
block
SchemaGrammar
sGrammar
SchemaGrammar
grammar
int
eltIndex
getElementDeclIndex
addSymbol
newSchemaURI
addSymbol
localpart
TOP_LEVEL_SCOPE
ComplexTypeInfo
typeInfo
if
eltIndex
block
typeInfo
getElementComplexTypeInfo
eltIndex
block
reportGenericSchemaError
localpart
newSchemaURI
return
typeInfo
block
reportGenericSchemaError
newSchemaURI
return
traverseGroupDecl
int
groupDecl
Element
String
groupName
getAttribute
ATT_NAME
String
ref
getAttribute
ATT_REF
if
equals
block
if
getFirstChildElement
groupDecl
reportSchemaError
NoContentForRef
String
prefix
String
localpart
ref
int
colonptr
indexOf
if
colonptr
block
prefix
substring
colonptr
localpart
substring
colonptr
int
localpartIndex
addSymbol
localpart
String
uriStr
resolvePrefixToURI
prefix
if
equals
fTargetNSURIString
block
return
traverseGroupDeclFromAnotherSchema
localpart
uriStr
int
contentSpecIndex
Element
referredGroup
getTopLevelComponentByName
ELT_GROUP
localpart
if
referredGroup
block
reportGenericSchemaError
localpart
block
contentSpecIndex
traverseGroupDecl
referredGroup
return
contentSpecIndex
boolean
traverseElt
if
fCurrentScope
TOP_LEVEL_SCOPE
block
traverseElt
Element
child
getFirstChildElement
groupDecl
while
child
getLocalName
equals
ELT_ANNOTATION
child
getNextSiblingElement
child
int
contentSpecType
int
csnType
int
allChildren
int
allChildCount
csnType
CONTENTSPECNODE_SEQ
contentSpecType
TYPE_CHILDREN
int
left
int
right
boolean
hadContent
boolean
seeAll
boolean
seeParticle
for
forControl
child
child
getNextSiblingElement
child
block
int
index
hadContent
boolean
illegalChild
String
childName
getLocalName
if
equals
ELT_ELEMENT
block
QName
eltQName
traverseElementDecl
child
index
addContentSpecNode
CONTENTSPECNODE_LEAF
localpart
uri
seeParticle
if
equals
ELT_GROUP
block
index
traverseGroupDecl
child
if
index
continue
seeParticle
if
equals
ELT_ALL
block
index
traverseAll
child
seeAll
if
equals
ELT_CHOICE
block
index
traverseChoice
child
seeParticle
if
equals
ELT_SEQUENCE
block
index
traverseSequence
child
seeParticle
if
equals
ELT_ANY
block
index
traverseAny
child
seeParticle
block
illegalChild
reportSchemaError
GroupContentRestricted
Object
childName
if
illegalChild
block
index
expandContentModel
index
child
if
seeParticle
seeAll
block
reportSchemaError
GroupContentRestricted
Object
childName
if
left
block
left
index
if
right
block
right
index
block
left
addContentSpecNode
csnType
left
right
right
index
if
hadContent
right
left
addContentSpecNode
csnType
left
right
return
left
traverseGroupDeclFromAnotherSchema
int
groupName
String
uriStr
String
SchemaGrammar
aGrammar
SchemaGrammar
getGrammar
uriStr
if
uriStr
aGrammar
aGrammar
SchemaGrammar
block
reportGenericSchemaError
uriStr
groupName
return
Element
groupDecl
Element
get
Object
groupName
if
groupDecl
block
reportGenericSchemaError
groupName
uriStr
return
NamespacesScope
saveNSMapping
fNamespacesScope
int
saveTargetNSUri
fTargetNSURI
fTargetNSURI
addSymbol
getTargetNamespaceURI
fNamespacesScope
getNamespacesScope
boolean
traverseElt
if
fCurrentScope
TOP_LEVEL_SCOPE
block
traverseElt
Element
child
getFirstChildElement
groupDecl
while
child
getLocalName
equals
ELT_ANNOTATION
child
getNextSiblingElement
child
int
contentSpecType
int
csnType
int
allChildren
int
allChildCount
csnType
CONTENTSPECNODE_SEQ
contentSpecType
TYPE_CHILDREN
int
left
int
right
boolean
hadContent
for
forControl
child
child
getNextSiblingElement
child
block
int
index
hadContent
boolean
seeParticle
String
childName
getLocalName
int
childNameIndex
addSymbol
childName
String
formAttrVal
getAttribute
ATT_FORM
if
equals
ELT_ELEMENT
block
QName
eltQName
traverseElementDecl
child
index
addContentSpecNode
CONTENTSPECNODE_LEAF
localpart
uri
seeParticle
if
equals
ELT_GROUP
block
index
traverseGroupDecl
child
if
index
continue
seeParticle
if
equals
ELT_ALL
block
index
traverseAll
child
seeParticle
if
equals
ELT_CHOICE
block
index
traverseChoice
child
seeParticle
if
equals
ELT_SEQUENCE
block
index
traverseSequence
child
seeParticle
if
equals
ELT_ANY
block
index
traverseAny
child
seeParticle
block
reportSchemaError
GroupContentRestricted
Object
childName
if
seeParticle
block
index
expandContentModel
index
child
if
left
block
left
index
if
right
block
right
index
block
left
addContentSpecNode
csnType
left
right
right
index
if
hadContent
right
left
addContentSpecNode
csnType
left
right
fNamespacesScope
saveNSMapping
fTargetNSURI
saveTargetNSUri
return
left
traverseSequence
int
sequenceDecl
Element
Element
child
getFirstChildElement
sequenceDecl
while
child
getLocalName
equals
ELT_ANNOTATION
child
getNextSiblingElement
child
int
contentSpecType
int
csnType
csnType
CONTENTSPECNODE_SEQ
contentSpecType
TYPE_CHILDREN
int
left
int
right
boolean
hadContent
for
forControl
child
child
getNextSiblingElement
child
block
int
index
hadContent
boolean
seeParticle
String
childName
getLocalName
if
equals
ELT_ELEMENT
block
QName
eltQName
traverseElementDecl
child
index
addContentSpecNode
CONTENTSPECNODE_LEAF
localpart
uri
seeParticle
if
equals
ELT_GROUP
block
index
traverseGroupDecl
child
if
index
continue
seeParticle
if
equals
ELT_CHOICE
block
index
traverseChoice
child
seeParticle
if
equals
ELT_SEQUENCE
block
index
traverseSequence
child
seeParticle
if
equals
ELT_ANY
block
index
traverseAny
child
seeParticle
block
reportSchemaError
GroupContentRestricted
Object
childName
if
seeParticle
block
index
expandContentModel
index
child
if
left
block
left
index
if
right
block
right
index
block
left
addContentSpecNode
csnType
left
right
right
index
if
hadContent
right
left
addContentSpecNode
csnType
left
right
return
left
traverseChoice
int
choiceDecl
Element
Element
child
getFirstChildElement
choiceDecl
while
child
getLocalName
equals
ELT_ANNOTATION
child
getNextSiblingElement
child
int
contentSpecType
int
csnType
csnType
CONTENTSPECNODE_CHOICE
contentSpecType
TYPE_CHILDREN
int
left
int
right
boolean
hadContent
for
forControl
child
child
getNextSiblingElement
child
block
int
index
hadContent
boolean
seeParticle
String
childName
getLocalName
if
equals
ELT_ELEMENT
block
QName
eltQName
traverseElementDecl
child
index
addContentSpecNode
CONTENTSPECNODE_LEAF
localpart
uri
seeParticle
if
equals
ELT_GROUP
block
index
traverseGroupDecl
child
if
index
continue
seeParticle
if
equals
ELT_CHOICE
block
index
traverseChoice
child
seeParticle
if
equals
ELT_SEQUENCE
block
index
traverseSequence
child
seeParticle
if
equals
ELT_ANY
block
index
traverseAny
child
seeParticle
block
reportSchemaError
GroupContentRestricted
Object
childName
if
seeParticle
block
index
expandContentModel
index
child
if
left
block
left
index
if
right
block
right
index
block
left
addContentSpecNode
csnType
left
right
right
index
if
hadContent
right
left
addContentSpecNode
csnType
left
right
return
left
traverseAll
int
allDecl
Element
Element
child
getFirstChildElement
allDecl
while
child
getLocalName
equals
ELT_ANNOTATION
child
getNextSiblingElement
child
int
allChildren
int
allChildCount
int
left
for
forControl
child
child
getNextSiblingElement
child
block
int
index
boolean
seeParticle
String
childName
getLocalName
if
equals
ELT_ELEMENT
block
QName
eltQName
traverseElementDecl
child
index
addContentSpecNode
CONTENTSPECNODE_LEAF
localpart
uri
seeParticle
if
CR_IMPL
block
reportGenericSchemaError
childName
break
block
if
equals
ELT_GROUP
block
index
traverseGroupDecl
child
if
index
continue
seeParticle
if
equals
ELT_CHOICE
block
index
traverseChoice
child
seeParticle
if
equals
ELT_SEQUENCE
block
index
traverseSequence
child
seeParticle
if
equals
ELT_ANY
block
index
traverseAny
child
seeParticle
block
reportSchemaError
GroupContentRestricted
Object
childName
if
seeParticle
block
index
expandContentModel
index
child
try
allChildren
allChildCount
index
catchClause
ne
allChildren
int
allChildren
allChildCount
index
catchClause
ae
int
newArray
int
length
arraycopy
allChildren
newArray
length
allChildren
allChildCount
index
allChildCount
if
allChildCount
return
left
try
left
allCalcWrapper
allChildren
allChildCount
catchClause
e
reportGenericSchemaError
return
left
allCalcWrapper
int
initialArray
int
size
int
int
permSize
size
int
targetArray
int
size
arraycopy
initialArray
targetArray
size
if
length
block
return
targetArray
if
length
block
return
if
permSize
length
block
reportGenericSchemaError
permSize
return
if
length
block
return
allCombo
targetArray
block
return
allCalc
targetArray
permSize
int
length
permSize
allCombo
int
targetArray
int
if
length
block
int
left
right
int
lA
targetArray
targetArray
int
rA
targetArray
targetArray
left
createSeq
lA
right
createSeq
rA
return
addContentSpecNode
CONTENTSPECNODE_CHOICE
left
right
if
length
block
int
tempChoice
int
a1
targetArray
targetArray
targetArray
int
a2
targetArray
targetArray
targetArray
int
a3
targetArray
targetArray
targetArray
int
a4
targetArray
targetArray
targetArray
int
a5
targetArray
targetArray
targetArray
int
a6
targetArray
targetArray
targetArray
int
s1
createSeq
a1
int
s2
createSeq
a2
int
s3
createSeq
a3
int
s4
createSeq
a4
int
s5
createSeq
a5
int
s6
createSeq
a6
tempChoice
addContentSpecNode
CONTENTSPECNODE_CHOICE
s1
s2
tempChoice
addContentSpecNode
CONTENTSPECNODE_CHOICE
tempChoice
s3
tempChoice
addContentSpecNode
CONTENTSPECNODE_CHOICE
tempChoice
s4
tempChoice
addContentSpecNode
CONTENTSPECNODE_CHOICE
tempChoice
s5
return
addContentSpecNode
CONTENTSPECNODE_CHOICE
tempChoice
s6
block
return
allCalc
int
targetArray
int
targetPosition
int
permSize
int
progressIndicator
int
complementArray
int
choiceHead
int
if
length
permSize
targetPosition
block
int
newTargetArray
int
permSize
targetPosition
int
allSeq
for
forControl
int
i
targetPosition
i
length
i
block
arrayProducer
targetArray
i
newTargetArray
complementArray
progressIndicator
int
c1
allCalcWrapper
newTargetArray
length
int
c2
allCalcWrapper
complementArray
length
allSeq
addContentSpecNode
CONTENTSPECNODE_SEQ
c1
c2
if
choiceHead
block
choiceHead
addContentSpecNode
CONTENTSPECNODE_CHOICE
choiceHead
allSeq
block
choiceHead
allSeq
return
choiceHead
block
for
forControl
int
i
targetPosition
i
length
i
block
int
newTargetArray
int
length
arrayProducer
targetArray
i
newTargetArray
complementArray
progressIndicator
choiceHead
allCalc
newTargetArray
targetPosition
permSize
progressIndicator
complementArray
choiceHead
targetPosition
permSize
return
choiceHead
arrayProducer
targetArray
int
tPos
int
newTargetArray
int
complementArray
int
cPos
int
complementArray
cPos
targetArray
tPos
if
tPos
arraycopy
targetArray
newTargetArray
tPos
if
tPos
length
arraycopy
targetArray
tPos
newTargetArray
tPos
length
tPos
createSeq
int
src
int
int
left
src
int
right
src
for
forControl
int
i
i
length
i
block
left
addContentSpecNode
CONTENTSPECNODE_SEQ
left
right
right
src
i
return
addContentSpecNode
CONTENTSPECNODE_SEQ
left
right
parseInt
int
intString
String
if
equals
block
return
INFINITY
block
return
parseInt
intString
parseSimpleFinal
int
finalString
String
if
equals
ATTVAL_POUNDALL
block
return
ENUMERATION
RESTRICTION
LIST
REPRODUCTION
block
int
enumerate
int
restrict
int
list
int
reproduce
StringTokenizer
t
StringTokenizer
finalString
while
hasMoreTokens
block
String
token
nextToken
if
equals
ATTVAL_RESTRICTION
block
if
restrict
block
restrict
RESTRICTION
block
reportGenericSchemaError
if
equals
ELT_LIST
block
if
list
block
list
LIST
block
reportGenericSchemaError
block
reportGenericSchemaError
finalString
return
enumerate
restrict
list
reproduce
parseComplexContent
int
contentString
String
if
equals
ATTVAL_EMPTY
block
return
TYPE_EMPTY
if
equals
ATTVAL_ELEMENTONLY
block
return
TYPE_CHILDREN
if
equals
ATTVAL_TEXTONLY
block
return
TYPE_SIMPLE
if
equals
ATTVAL_MIXED
block
return
TYPE_MIXED
block
reportGenericSchemaError
return
parseDerivationSet
int
finalString
String
if
equals
block
return
EXTENSION
RESTRICTION
REPRODUCTION
block
int
extend
int
restrict
int
reproduce
StringTokenizer
t
StringTokenizer
finalString
while
hasMoreTokens
block
String
token
nextToken
if
equals
ATTVAL_EXTENSION
block
if
extend
block
extend
EXTENSION
block
reportGenericSchemaError
if
equals
ATTVAL_RESTRICTION
block
if
restrict
block
restrict
RESTRICTION
block
reportGenericSchemaError
block
reportGenericSchemaError
finalString
return
extend
restrict
reproduce
parseBlockSet
int
finalString
String
if
equals
block
return
SUBSTITUTIONGROUP
EXTENSION
LIST
RESTRICTION
REPRODUCTION
block
int
extend
int
restrict
int
reproduce
StringTokenizer
t
StringTokenizer
finalString
while
hasMoreTokens
block
String
token
nextToken
if
equals
ATTVAL_SUBSTITUTIONGROUP
block
if
extend
block
extend
SUBSTITUTIONGROUP
block
reportGenericSchemaError
if
equals
ATTVAL_EXTENSION
block
if
extend
block
extend
EXTENSION
block
reportGenericSchemaError
if
equals
ELT_LIST
block
if
extend
block
extend
LIST
block
reportGenericSchemaError
if
equals
ATTVAL_RESTRICTION
block
if
restrict
block
restrict
RESTRICTION
block
reportGenericSchemaError
block
reportGenericSchemaError
finalString
return
extend
restrict
reproduce
parseFinalSet
int
finalString
String
if
equals
block
return
SUBSTITUTIONGROUP
EXTENSION
LIST
RESTRICTION
REPRODUCTION
block
int
extend
int
restrict
int
reproduce
StringTokenizer
t
StringTokenizer
finalString
while
hasMoreTokens
block
String
token
nextToken
if
equals
ATTVAL_SUBSTITUTIONGROUP
block
if
extend
block
extend
SUBSTITUTIONGROUP
block
reportGenericSchemaError
if
equals
ATTVAL_EXTENSION
block
if
extend
block
extend
EXTENSION
block
reportGenericSchemaError
if
equals
ELT_LIST
block
if
extend
block
extend
LIST
block
reportGenericSchemaError
if
equals
ATTVAL_RESTRICTION
block
if
restrict
block
restrict
RESTRICTION
block
reportGenericSchemaError
block
reportGenericSchemaError
finalString
return
extend
restrict
reproduce
reportGenericSchemaError
error
String
if
fErrorReporter
block
println
error
block
reportSchemaError
GenericError
Object
error
reportSchemaError
major
int
args
Object
if
fErrorReporter
block
println
fgMessageKeys
major
for
forControl
int
i
i
length
i
block
println
String
args
i
block
reportError
getLocator
SCHEMA_DOMAIN
major
MSG_NONE
args
ERRORTYPE_RECOVERABLE_ERROR
main
args
String
if
length
block
println
exit
DOMParser
parser
IgnoreWhitespaceParser
setEntityResolver
Resolver
setErrorHandler
ErrorHandler
try
setFeature
setFeature
catchClause
e
printStackTrace
catchClause
e
printStackTrace
try
parse
args
catchClause
e
printStackTrace
catchClause
e
printStackTrace
Document
document
getDocument
OutputFormat
format
OutputFormat
document
java
io
StringWriter
outWriter
java
io
StringWriter
XMLSerializer
serial
XMLSerializer
outWriter
format
TraverseSchema
tst
try
Element
root
getDocumentElement
tst
TraverseSchema
root
StringPool
SchemaGrammar
GrammarResolver
GrammarResolverImpl
catchClause
e
printStackTrace
err
getDocument
Resolver
String
SYSTEM
String
PATH
resolveEntity
InputSource
publicId
String
systemId
String
for
forControl
int
i
i
length
i
block
if
equals
SYSTEM
i
block
InputSource
source
InputSource
getClass
getResourceAsStream
PATH
i
setPublicId
publicId
setSystemId
systemId
return
source
return
EntityResolver
ErrorHandler
warning
ex
SAXParseException
println
getLocationString
ex
getMessage
error
ex
SAXParseException
println
getLocationString
ex
getMessage
fatalError
ex
SAXParseException
println
getLocationString
ex
getMessage
throw
ex
getLocationString
String
ex
SAXParseException
StringBuffer
str
StringBuffer
String
systemId_
getSystemId
if
systemId_
block
int
index
lastIndexOf
if
index
systemId_
substring
index
append
systemId_
append
append
getLineNumber
append
append
getColumnNumber
return
toString
org
xml
sax
ErrorHandler
IgnoreWhitespaceParser
ignorableWhitespace
ch
char
start
int
length
int
ignorableWhitespace
dataIdx
int
DOMParser
NamespacesScope
NamespacesHandler
