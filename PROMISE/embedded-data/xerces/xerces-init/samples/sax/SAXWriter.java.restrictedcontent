SAXWriter
String
DEFAULT_PARSER_NAME
PrintWriter
out
boolean
canonical
SAXWriter
canonical
boolean
canonical
SAXWriter
encoding
String
canonical
boolean
if
encoding
block
encoding
out
PrintWriter
OutputStreamWriter
out
encoding
canonical
canonical
print
parserName
String
uri
String
canonical
boolean
try
HandlerBase
handler
SAXWriter
canonical
Parser
parser
makeParser
parserName
setDocumentHandler
handler
setErrorHandler
handler
parse
uri
catchClause
e
printStackTrace
err
processingInstruction
target
String
data
String
print
print
target
if
data
length
block
print
print
data
print
startDocument
if
canonical
block
println
startElement
name
String
attrs
AttributeList
print
print
name
if
attrs
block
attrs
sortAttributes
attrs
int
len
getLength
for
forControl
int
i
i
len
i
block
print
print
getName
i
print
print
normalize
getValue
i
print
print
characters
ch
char
start
int
length
int
print
normalize
String
ch
start
length
ignorableWhitespace
ch
char
start
int
length
int
characters
ch
start
length
endElement
name
String
print
print
name
print
endDocument
flush
warning
ex
SAXParseException
println
getLocationString
ex
getMessage
error
ex
SAXParseException
println
getLocationString
ex
getMessage
fatalError
ex
SAXParseException
println
getLocationString
ex
getMessage
throw
ex
getLocationString
String
ex
SAXParseException
StringBuffer
str
StringBuffer
String
systemId
getSystemId
if
systemId
block
int
index
lastIndexOf
if
index
systemId
substring
index
append
systemId
append
append
getLineNumber
append
append
getColumnNumber
return
toString
normalize
String
s
String
StringBuffer
str
StringBuffer
int
len
s
length
for
forControl
int
i
i
len
i
block
char
ch
charAt
i
switch
ch
case
block
append
break
case
block
append
break
case
block
append
break
case
block
append
break
case
block
if
canonical
block
append
append
toString
ch
append
break
case
block
append
ch
return
toString
sortAttributes
AttributeList
attrs
AttributeList
AttributeListImpl
attributes
AttributeListImpl
int
len
attrs
getLength
for
forControl
int
i
i
len
i
block
String
name
getName
i
int
count
getLength
int
j
while
j
count
block
if
compareTo
getName
j
block
break
j
insertAttributeAt
j
name
getType
i
getValue
i
return
attributes
main
argv
String
if
length
block
printUsage
exit
String
parserName
DEFAULT_PARSER_NAME
boolean
canonical
for
forControl
int
i
i
length
i
block
String
arg
argv
i
if
startsWith
block
if
equals
block
if
i
length
block
println
exit
parserName
argv
i
continue
if
equals
block
canonical
continue
if
equals
block
printUsage
exit
println
arg
print
parserName
arg
canonical
println
printUsage
println
println
println
println
println
DEFAULT_PARSER_NAME
println
println
HandlerBase
