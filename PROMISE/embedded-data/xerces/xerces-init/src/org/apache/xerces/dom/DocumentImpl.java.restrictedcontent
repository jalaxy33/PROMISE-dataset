DocumentImpl
long
serialVersionUID
DocumentTypeImpl
docType
ElementImpl
docElement
Hashtable
identifiers
Vector
iterators
Vector
treeWalkers
boolean
allowGrammarAccess
DocumentImpl
DocumentImpl
grammarAccess
boolean
ownerDocument
allowGrammarAccess
grammarAccess
DocumentImpl
doctype
DocumentType
doctype
DocumentImpl
doctype
DocumentType
grammarAccess
boolean
grammarAccess
docType
docType
if
docType
block
ownerDocument
getNodeType
short
return
DOCUMENT_NODE
getNodeName
String
return
getNodeValue
String
return
cloneNode
Node
deep
boolean
DocumentImpl
newdoc
DocumentImpl
if
deep
block
for
forControl
NodeImpl
n
NodeImpl
getFirstChild
n
n
nextSibling
block
appendChild
importNode
n
return
newdoc
insertBefore
Node
newChild
Node
refChild
Node
int
type
getNodeType
if
type
ELEMENT_NODE
docElement
type
DOCUMENT_TYPE_NODE
docType
block
throw
DOMExceptionImpl
HIERARCHY_REQUEST_ERR
insertBefore
newChild
refChild
if
type
ELEMENT_NODE
block
docElement
ElementImpl
newChild
if
type
DOCUMENT_TYPE_NODE
block
docType
DocumentTypeImpl
newChild
return
newChild
removeChild
Node
oldChild
Node
removeChild
oldChild
int
type
getNodeType
if
type
ELEMENT_NODE
block
docElement
if
type
DOCUMENT_TYPE_NODE
block
docType
return
oldChild
setNodeValue
x
String
throw
DOMExceptionImpl
NO_MODIFICATION_ALLOWED_ERR
createAttribute
Attr
name
String
if
isXMLName
name
block
throw
DOMExceptionImpl
INVALID_CHARACTER_ERR
return
AttrImpl
name
createCDATASection
CDATASection
data
String
return
CDATASectionImpl
data
createComment
Comment
data
String
return
CommentImpl
data
createDocumentFragment
DocumentFragment
return
DocumentFragmentImpl
createElement
Element
tagName
String
if
isXMLName
tagName
block
throw
DOMExceptionImpl
INVALID_CHARACTER_ERR
return
ElementImpl
tagName
createEntityReference
EntityReference
name
String
if
isXMLName
name
block
throw
DOMExceptionImpl
INVALID_CHARACTER_ERR
return
EntityReferenceImpl
name
createProcessingInstruction
ProcessingInstruction
target
String
data
String
if
isXMLName
target
block
throw
DOMExceptionImpl
INVALID_CHARACTER_ERR
return
ProcessingInstructionImpl
target
data
createTextNode
Text
data
String
return
TextImpl
data
getDoctype
DocumentType
if
syncChildren
block
synchronizeChildren
return
docType
getDocumentElement
Element
if
syncChildren
block
synchronizeChildren
return
docElement
getElementsByTagName
NodeList
tagname
String
return
DeepNodeListImpl
tagname
getImplementation
DOMImplementation
return
getDOMImplementation
createDocumentType
DocumentType
qualifiedName
String
publicID
String
systemID
String
if
isXMLName
qualifiedName
block
throw
DOMExceptionImpl
INVALID_CHARACTER_ERR
return
DocumentTypeImpl
qualifiedName
publicID
systemID
createEntity
Entity
name
String
return
EntityImpl
name
createNotation
Notation
name
String
return
NotationImpl
name
createElementDefinition
ElementDefinitionImpl
name
String
return
ElementDefinitionImpl
name
importNode
Node
source
Node
deep
boolean
NodeImpl
newnode
int
type
getNodeType
switch
type
case
block
Element
newelement
createElement
getNodeName
NamedNodeMap
srcattr
getAttributes
if
srcattr
block
for
forControl
int
i
i
getLength
i
block
setAttributeNode
AttrImpl
importNode
item
i
newnode
NodeImpl
newelement
break
case
block
newnode
NodeImpl
createAttribute
getNodeName
break
case
block
newnode
NodeImpl
createTextNode
getNodeValue
break
case
block
newnode
NodeImpl
createCDATASection
getNodeValue
break
case
block
newnode
NodeImpl
createEntityReference
getNodeName
deep
break
case
block
Entity
srcentity
Entity
source
EntityImpl
newentity
EntityImpl
createEntity
getNodeName
setPublicId
getPublicId
setSystemId
getSystemId
setNotationName
getNotationName
newnode
newentity
break
case
block
newnode
ProcessingInstructionImpl
createProcessingInstruction
getNodeName
getNodeValue
break
case
block
newnode
NodeImpl
createComment
getNodeValue
break
case
block
DocumentTypeImpl
doctype
DocumentTypeImpl
source
DocumentTypeImpl
newdoctype
DocumentTypeImpl
createDocumentType
getNodeName
getPublicID
getSystemID
NamedNodeMap
smap
DocumentType
source
NamedNodeMap
tmap
getEntities
if
smap
block
for
forControl
int
i
i
getLength
i
block
setNamedItem
EntityImpl
importNode
item
i
smap
DocumentType
source
tmap
getNotations
if
smap
block
for
forControl
int
i
i
getLength
i
block
setNamedItem
NotationImpl
importNode
item
i
newnode
newdoctype
break
case
block
newnode
NodeImpl
createDocumentFragment
break
case
block
Notation
srcnotation
Notation
source
NotationImpl
newnotation
NotationImpl
createNotation
getNodeName
setPublicId
getPublicId
setSystemId
getSystemId
newnode
newnotation
break
case
block
throw
DOMExceptionImpl
HIERARCHY_REQUEST_ERR
if
deep
block
for
forControl
Node
srckid
getFirstChild
srckid
srckid
getNextSibling
block
appendChild
importNode
srckid
return
newnode
putIdentifier
idName
String
element
Element
if
element
block
removeIdentifier
idName
if
syncData
block
synchronizeData
if
identifiers
block
identifiers
Hashtable
put
idName
element
getIdentifier
Element
idName
String
if
syncData
block
synchronizeData
if
identifiers
block
return
return
Element
get
idName
removeIdentifier
idName
String
if
syncData
block
synchronizeData
if
identifiers
block
return
remove
idName
getIdentifiers
Enumeration
if
syncData
block
synchronizeData
if
identifiers
block
identifiers
Hashtable
return
keys
createElementNS
Element
namespaceURI
String
qualifiedName
String
if
namespaceURI
equals
block
return
ElementImpl
qualifiedName
return
ElementImpl
namespaceURI
qualifiedName
createAttributeNS
Attr
namespaceURI
String
qualifiedName
String
if
namespaceURI
equals
block
return
AttrImpl
qualifiedName
return
AttrImpl
namespaceURI
qualifiedName
getElementsByTagNameNS
NodeList
namespaceURI
String
localName
String
return
DeepNodeListImpl
namespaceURI
localName
createNodeIterator
NodeIterator
root
Node
whatToShow
short
filter
NodeFilter
return
createNodeIterator
root
whatToShow
filter
createNodeIterator
NodeIterator
root
Node
whatToShow
int
filter
NodeFilter
entityReferenceExpansion
boolean
NodeIterator
iterator
NodeIteratorImpl
root
whatToShow
filter
entityReferenceExpansion
if
iterators
block
iterators
Vector
addElement
iterator
return
iterator
createTreeWalker
TreeWalker
root
Node
whatToShow
short
filter
NodeFilter
return
createTreeWalker
root
whatToShow
filter
createTreeWalker
TreeWalker
root
Node
whatToShow
int
filter
NodeFilter
entityReferenceExpansion
boolean
if
root
block
throw
DOMExceptionImpl
NOT_SUPPORTED_ERR
TreeWalker
treeWalker
TreeWalkerImpl
root
whatToShow
filter
entityReferenceExpansion
if
treeWalkers
block
treeWalkers
Vector
addElement
treeWalker
return
treeWalker
removeNodeIterator
nodeIterator
NodeIterator
if
nodeIterator
return
if
iterators
return
removeElement
nodeIterator
removeTreeWalker
treeWalker
TreeWalker
if
treeWalker
return
if
treeWalkers
return
removeElement
treeWalker
getNodeIterators
Enumeration
if
iterators
return
return
elements
getTreeWalkers
Enumeration
if
treeWalkers
return
return
elements
removeNodeIterators
iterators
removeTreeWalkers
treeWalkers
createEvent
Event
type
String
if
equals
type
return
EventImpl
if
equals
type
return
MutationEventImpl
throw
DOMExceptionImpl
UNSUPPORTED_EVENT_TYPE
isXMLName
boolean
s
String
if
s
block
return
char
ca
char
length
getChars
length
ca
if
isLetter
ca
indexOf
int
ca
block
return
for
forControl
int
i
i
length
i
block
char
c
ca
i
int
ctype
getType
c
if
isLetterOrDigit
c
indexOf
c
ctype
ctype
c
c
c
c
c
ctype
c
c
c
c
c
c
c
c
block
return
return
isKidOK
boolean
parent
Node
child
Node
if
allowGrammarAccess
getNodeType
DOCUMENT_TYPE_NODE
block
return
getNodeType
ELEMENT_NODE
return
kidOK
getNodeType
getNodeType
NodeImpl
Document
DocumentTraversal
DocumentEvent
