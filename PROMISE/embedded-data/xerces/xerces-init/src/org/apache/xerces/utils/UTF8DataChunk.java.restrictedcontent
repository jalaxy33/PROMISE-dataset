UTF8DataChunk
int
CHUNK_SHIFT
int
CHUNK_SIZE
CHUNK_SHIFT
int
CHUNK_MASK
CHUNK_SIZE
createChunk
UTF8DataChunk
stringPool
StringPool
prev
UTF8DataChunk
if
fgFreeChunks
block
UTF8DataChunk
newChunk
fgFreeChunks
fgFreeChunks
fNextChunk
fNextChunk
init
stringPool
prev
return
newChunk
return
UTF8DataChunk
stringPool
prev
toByteArray
byte
return
fData
setByteArray
data
byte
fData
data
nextChunk
UTF8DataChunk
return
fNextChunk
clearPreviousChunk
boolean
if
fPreviousChunk
block
setNextChunk
removeRef
fPreviousChunk
return
return
fChunk
releaseChunk
removeRef
releaseString
offset
int
length
int
removeRef
toString
String
offset
int
length
int
int
outOffset
UTF8DataChunk
dataChunk
int
endOffset
offset
length
int
index
offset
CHUNK_MASK
byte
data
fData
boolean
skiplf
while
offset
endOffset
block
int
b0
data
index
offset
if
index
CHUNK_SIZE
offset
endOffset
block
dataChunk
fNextChunk
data
fData
index
if
b0
block
if
skiplf
block
skiplf
if
b0
continue
if
b0
block
b0
skiplf
try
fTempBuffer
outOffset
char
b0
outOffset
catchClause
ex
fTempBuffer
char
CHUNK_SIZE
fTempBuffer
outOffset
char
b0
catchClause
ex
char
newBuffer
char
outOffset
arraycopy
fTempBuffer
newBuffer
outOffset
fTempBuffer
newBuffer
fTempBuffer
outOffset
char
b0
continue
int
b1
data
index
offset
if
index
CHUNK_SIZE
offset
endOffset
block
dataChunk
fNextChunk
data
fData
index
if
b0
block
int
ch
b0
b1
try
fTempBuffer
outOffset
char
ch
outOffset
catchClause
ex
fTempBuffer
char
CHUNK_SIZE
fTempBuffer
outOffset
char
ch
catchClause
ex
char
newBuffer
char
outOffset
arraycopy
fTempBuffer
newBuffer
outOffset
fTempBuffer
newBuffer
fTempBuffer
outOffset
char
ch
continue
int
b2
data
index
offset
if
index
CHUNK_SIZE
offset
endOffset
block
dataChunk
fNextChunk
data
fData
index
if
b0
block
int
ch
b0
b1
b2
try
fTempBuffer
outOffset
char
ch
outOffset
catchClause
ex
fTempBuffer
char
CHUNK_SIZE
fTempBuffer
outOffset
char
ch
catchClause
ex
char
newBuffer
char
outOffset
arraycopy
fTempBuffer
newBuffer
outOffset
fTempBuffer
newBuffer
fTempBuffer
outOffset
char
ch
continue
int
b3
data
index
offset
if
index
CHUNK_SIZE
offset
endOffset
block
dataChunk
fNextChunk
data
fData
index
int
ch
b0
b1
b2
b3
if
ch
block
try
fTempBuffer
outOffset
char
ch
outOffset
catchClause
ex
fTempBuffer
char
CHUNK_SIZE
fTempBuffer
outOffset
char
ch
catchClause
ex
char
newBuffer
char
outOffset
arraycopy
fTempBuffer
newBuffer
outOffset
fTempBuffer
newBuffer
fTempBuffer
outOffset
char
ch
block
char
ch1
char
ch
char
ch2
char
ch
try
fTempBuffer
outOffset
char
ch1
outOffset
catchClause
ex
fTempBuffer
char
CHUNK_SIZE
fTempBuffer
outOffset
char
ch1
catchClause
ex
char
newBuffer
char
outOffset
arraycopy
fTempBuffer
newBuffer
outOffset
fTempBuffer
newBuffer
fTempBuffer
outOffset
char
ch1
try
fTempBuffer
outOffset
char
ch2
outOffset
catchClause
ex
fTempBuffer
char
CHUNK_SIZE
fTempBuffer
outOffset
char
ch2
catchClause
ex
char
newBuffer
char
outOffset
arraycopy
fTempBuffer
newBuffer
outOffset
fTempBuffer
newBuffer
fTempBuffer
outOffset
char
ch2
return
String
fTempBuffer
outOffset
equalsString
boolean
offset
int
length
int
strChars
char
strOffset
int
strLength
int
UTF8DataChunk
dataChunk
int
endOffset
offset
length
int
index
offset
CHUNK_MASK
byte
data
fData
boolean
skiplf
while
offset
endOffset
block
if
strLength
return
int
b0
data
index
offset
if
index
CHUNK_SIZE
offset
endOffset
block
dataChunk
fNextChunk
data
fData
index
if
b0
block
if
skiplf
block
skiplf
if
b0
continue
if
b0
block
b0
skiplf
if
b0
strChars
strOffset
return
continue
int
b1
data
index
offset
if
index
CHUNK_SIZE
offset
endOffset
block
dataChunk
fNextChunk
data
fData
index
if
b0
block
int
ch
b0
b1
if
ch
strChars
strOffset
return
continue
int
b2
data
index
offset
if
index
CHUNK_SIZE
offset
endOffset
block
dataChunk
fNextChunk
data
fData
index
if
b0
block
int
ch
b0
b1
b2
if
ch
strChars
strOffset
return
continue
int
b3
data
index
offset
if
index
CHUNK_SIZE
offset
endOffset
block
dataChunk
fNextChunk
data
fData
index
int
ch
b0
b1
b2
b3
if
ch
block
if
ch
strChars
strOffset
return
block
if
ch
strChars
strOffset
return
if
strLength
return
if
ch
strChars
strOffset
return
return
strLength
addString
int
offset
int
length
int
if
length
return
EMPTY_STRING
int
chunk
offset
CHUNK_SHIFT
if
chunk
fChunk
block
if
fPreviousChunk
throw
RuntimeException
createMessage
INT_PCN
ImplementationMessages
return
addString
offset
length
int
lastChunk
offset
length
CHUNK_SHIFT
if
chunk
lastChunk
block
addRef
return
addString
offset
CHUNK_MASK
length
String
str
toString
offset
CHUNK_MASK
length
return
addString
str
addSymbol
int
offset
int
length
int
hashcode
int
if
length
return
EMPTY_STRING
int
chunk
offset
CHUNK_SHIFT
if
chunk
fChunk
block
if
fPreviousChunk
throw
RuntimeException
createMessage
INT_PCN
ImplementationMessages
return
addSymbol
offset
length
hashcode
int
lastChunk
offset
length
CHUNK_SHIFT
int
index
offset
CHUNK_MASK
if
chunk
lastChunk
block
if
hashcode
block
hashcode
getHashcode
index
length
int
symbol
lookupSymbol
index
length
hashcode
if
symbol
block
String
str
toString
index
length
symbol
addNewSymbol
str
hashcode
return
symbol
String
str
toString
index
length
return
addSymbol
str
append
charBuffer
XMLEntityHandler
CharBuffer
offset
int
length
int
UTF8DataChunk
dataChunk
chunkFor
offset
int
endOffset
offset
length
int
index
offset
CHUNK_MASK
byte
data
fData
boolean
skiplf
while
offset
endOffset
block
int
b0
data
index
offset
if
index
CHUNK_SIZE
offset
endOffset
block
dataChunk
fNextChunk
data
fData
index
if
b0
block
if
skiplf
block
skiplf
if
b0
continue
if
b0
block
b0
skiplf
append
char
b0
continue
int
b1
data
index
offset
if
index
CHUNK_SIZE
offset
endOffset
block
dataChunk
fNextChunk
data
fData
index
if
b0
block
int
ch
b0
b1
append
char
ch
continue
int
b2
data
index
offset
if
index
CHUNK_SIZE
offset
endOffset
block
dataChunk
fNextChunk
data
fData
index
if
b0
block
int
ch
b0
b1
b2
append
char
ch
continue
int
b3
data
index
offset
if
index
CHUNK_SIZE
offset
endOffset
block
dataChunk
fNextChunk
data
fData
index
int
ch
b0
b1
b2
b3
if
ch
append
char
ch
block
append
char
ch
append
char
ch
getHashcode
int
index
int
length
int
int
endIndex
index
length
int
hashcode
byte
data
fData
while
index
endIndex
block
int
b0
data
index
if
b0
block
hashcode
hashChar
hashcode
b0
continue
int
b1
data
index
if
b0
block
int
ch
b0
b1
hashcode
hashChar
hashcode
ch
continue
int
b2
data
index
if
b0
block
int
ch
b0
b1
b2
hashcode
hashChar
hashcode
ch
continue
int
b3
data
index
int
ch
b0
b1
b2
b3
if
ch
hashcode
hashChar
hashcode
ch
block
hashcode
hashChar
hashcode
int
ch
hashcode
hashChar
hashcode
int
ch
return
finishHash
hashcode
init
stringPool
StringPool
prev
UTF8DataChunk
fStringPool
stringPool
fRefCount
fChunk
prev
fChunk
fNextChunk
fPreviousChunk
prev
if
prev
block
addRef
setNextChunk
removeRef
UTF8DataChunk
stringPool
StringPool
prev
UTF8DataChunk
init
stringPool
prev
chunkFor
UTF8DataChunk
offset
int
if
offset
CHUNK_SHIFT
fChunk
return
return
slowChunkFor
offset
slowChunkFor
UTF8DataChunk
offset
int
int
firstChunk
offset
CHUNK_SHIFT
UTF8DataChunk
dataChunk
while
firstChunk
fChunk
dataChunk
fPreviousChunk
return
dataChunk
addRef
fRefCount
removeRef
fRefCount
if
fRefCount
block
fStringPool
fChunk
fPreviousChunk
fNextChunk
fgFreeChunks
fgFreeChunks
setNextChunk
nextChunk
UTF8DataChunk
if
nextChunk
block
if
fNextChunk
removeRef
if
fNextChunk
block
addRef
throw
RuntimeException
fNextChunk
nextChunk
StringPool
fStringPool
int
fRefCount
int
fChunk
byte
fData
UTF8DataChunk
fNextChunk
UTF8DataChunk
fPreviousChunk
UTF8DataChunk
fgFreeChunks
char
fTempBuffer
StringPool
StringProducer
