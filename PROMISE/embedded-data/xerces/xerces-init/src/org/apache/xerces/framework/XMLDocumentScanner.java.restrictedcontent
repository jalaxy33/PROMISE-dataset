XMLDocumentScanner
char
cdata_string
char
xml_string
char
version_string
char
doctype_string
char
standalone_string
char
encoding_string
int
RESULT_SUCCESS
RESULT_FAILURE
RESULT_DUPLICATE_ATTR
int
SCANNER_STATE_XML_DECL
SCANNER_STATE_START_OF_MARKUP
SCANNER_STATE_COMMENT
SCANNER_STATE_PI
SCANNER_STATE_DOCTYPE
SCANNER_STATE_PROLOG
SCANNER_STATE_ROOT_ELEMENT
SCANNER_STATE_CONTENT
SCANNER_STATE_REFERENCE
SCANNER_STATE_ATTRIBUTE_LIST
SCANNER_STATE_ATTRIBUTE_NAME
SCANNER_STATE_ATTRIBUTE_VALUE
SCANNER_STATE_TRAILING_MISC
SCANNER_STATE_END_OF_INPUT
SCANNER_STATE_TERMINATED
ScannerDispatcher
fDispatcher
EventHandler
fEventHandler
StringPool
fStringPool
XMLErrorReporter
fErrorReporter
XMLEntityHandler
fEntityHandler
XMLEntityHandler
EntityReader
fEntityReader
XMLEntityHandler
CharBuffer
fLiteralData
boolean
fSeenRootElement
boolean
fSeenDoctypeDecl
boolean
fStandalone
boolean
fParseTextDecl
int
fScannerState
SCANNER_STATE_XML_DECL
int
fReaderId
int
fAttValueReader
int
fAttValueElementType
int
fAttValueAttrName
int
fAttValueOffset
int
fAttValueMark
int
fScannerMarkupDepth
EventHandler
scanElementType
int
entityReader
XMLEntityHandler
EntityReader
fastchar
char
scanExpectedElementType
boolean
entityReader
XMLEntityHandler
EntityReader
fastchar
char
scanAttributeName
int
entityReader
XMLEntityHandler
EntityReader
elementType
int
callStartDocument
version
int
encoding
int
standalone
int
callEndDocument
callStartElement
elementType
int
callEndElement
boolean
readerId
int
validVersionNum
boolean
version
String
validEncName
boolean
encoding
String
startCDATA
endCDATA
callCharacters
ch
int
callProcessingInstruction
piTarget
int
piData
int
callComment
data
int
scanDoctypeDecl
standalone
boolean
scanAttValue
int
elementType
int
attrName
int
XMLDocumentScanner
eventHandler
EventHandler
stringPool
StringPool
errorReporter
XMLErrorReporter
entityHandler
XMLEntityHandler
literalData
XMLEntityHandler
CharBuffer
fEventHandler
eventHandler
fStringPool
stringPool
fErrorReporter
errorReporter
fEntityHandler
entityHandler
fLiteralData
literalData
fDispatcher
XMLDeclDispatcher
reset
stringPool
StringPool
literalData
XMLEntityHandler
CharBuffer
fStringPool
stringPool
fLiteralData
literalData
fParseTextDecl
fSeenRootElement
fSeenDoctypeDecl
fStandalone
fDispatcher
XMLDeclDispatcher
fScannerState
SCANNER_STATE_XML_DECL
fScannerMarkupDepth
parseSome
boolean
doItAll
boolean
do
doItAll
block
if
dispatch
doItAll
return
return
readerChange
nextReader
XMLEntityHandler
EntityReader
nextReaderId
int
fEntityReader
nextReader
fReaderId
nextReaderId
if
fScannerState
SCANNER_STATE_ATTRIBUTE_VALUE
block
fAttValueOffset
currentOffset
fAttValueMark
fAttValueOffset
endOfInput
entityName
int
moreToFollow
boolean
endOfInput
entityName
moreToFollow
atEndOfInput
boolean
return
fScannerState
SCANNER_STATE_END_OF_INPUT
scanAttValue
int
elementType
int
attrName
int
asSymbol
boolean
boolean
single
if
single
lookingAtChar
lookingAtChar
block
reportFatalXMLError
MSG_QUOTE_REQUIRED_IN_ATTVALUE
P10_QUOTE_REQUIRED
elementType
attrName
return
char
qchar
single
fAttValueMark
currentOffset
int
attValue
scanAttValue
qchar
asSymbol
if
attValue
return
attValue
int
previousState
setScannerState
SCANNER_STATE_ATTRIBUTE_VALUE
fAttValueReader
fReaderId
fAttValueElementType
elementType
fAttValueAttrName
attrName
fAttValueOffset
currentOffset
int
dataOffset
length
if
fAttValueOffset
fAttValueMark
append
fLiteralData
fAttValueMark
fAttValueOffset
fAttValueMark
fAttValueMark
fAttValueOffset
boolean
setMark
boolean
skippedCR
while
block
if
lookingAtChar
qchar
block
if
fReaderId
fAttValueReader
break
if
lookingAtChar
block
if
skippedCR
lookingAtChar
char
lookingAtSpace
block
if
fAttValueOffset
fAttValueMark
append
fLiteralData
fAttValueMark
fAttValueOffset
fAttValueMark
setMark
append
if
skippedCR
block
if
lookingAtChar
block
if
fAttValueOffset
fAttValueMark
append
fLiteralData
fAttValueMark
fAttValueOffset
fAttValueMark
setMark
if
lookingAtChar
block
int
ch
scanCharRef
if
ch
block
if
ch
append
char
ch
block
append
char
ch
append
char
ch
block
int
nameOffset
currentOffset
skipPastName
int
nameLength
currentOffset
nameOffset
if
nameLength
block
reportFatalXMLError
MSG_NAME_REQUIRED_IN_REFERENCE
P68_NAME_REQUIRED
if
lookingAtChar
block
reportFatalXMLError
MSG_SEMICOLON_REQUIRED_IN_REFERENCE
P68_SEMICOLON_REQUIRED
addString
nameOffset
nameLength
block
int
entityName
addSymbol
nameOffset
nameLength
startReadingFromEntity
entityName
fScannerMarkupDepth
CONTEXT_IN_ATTVALUE
if
lookingAtChar
block
if
fAttValueOffset
fAttValueMark
append
fLiteralData
fAttValueMark
fAttValueOffset
fAttValueMark
setMark
reportFatalXMLError
MSG_LESSTHAN_IN_ATTVALUE
WFC_NO_LESSTHAN_IN_ATTVALUE
elementType
attrName
if
lookingAtValidChar
block
if
fAttValueOffset
fAttValueMark
append
fLiteralData
fAttValueMark
fAttValueOffset
fAttValueMark
setMark
int
invChar
scanInvalidChar
if
fScannerState
SCANNER_STATE_END_OF_INPUT
return
if
invChar
block
reportFatalXMLError
MSG_INVALID_CHAR_IN_ATTVALUE
P10_INVALID_CHARACTER
toString
elementType
toString
attrName
toHexString
invChar
fAttValueOffset
currentOffset
if
setMark
block
fAttValueMark
fAttValueOffset
setMark
restoreScannerState
previousState
int
dataLength
length
dataOffset
if
dataLength
block
return
addString
fAttValueMark
fAttValueOffset
fAttValueMark
if
fAttValueOffset
fAttValueMark
block
append
fLiteralData
fAttValueMark
fAttValueOffset
fAttValueMark
dataLength
length
dataOffset
return
addString
dataOffset
dataLength
checkXMLLangAttributeValue
langValue
int
String
lang
toString
langValue
int
offset
if
length
block
char
ch0
charAt
if
charAt
block
if
ch0
ch0
ch0
ch0
block
offset
block
char
ch1
charAt
if
ch0
ch0
ch0
ch0
ch1
ch1
ch1
ch1
block
offset
if
offset
length
offset
block
char
ch
charAt
offset
if
ch
block
offset
block
while
block
if
ch
block
if
length
offset
block
offset
break
ch
charAt
offset
if
ch
ch
ch
ch
block
offset
break
if
length
offset
break
if
ch
ch
ch
ch
block
offset
break
if
length
offset
break
ch
charAt
offset
if
offset
block
reportFatalXMLError
MSG_XML_LANG_INVALID
P33_INVALID
lang
reportFatalXMLError
majorCode
int
minorCode
int
reportError
getLocator
XML_DOMAIN
majorCode
minorCode
ERRORTYPE_FATAL_ERROR
reportFatalXMLError
majorCode
int
minorCode
int
stringIndex1
int
Object
args
toString
stringIndex1
reportError
getLocator
XML_DOMAIN
majorCode
minorCode
args
ERRORTYPE_FATAL_ERROR
reportFatalXMLError
majorCode
int
minorCode
int
string1
String
Object
args
string1
reportError
getLocator
XML_DOMAIN
majorCode
minorCode
args
ERRORTYPE_FATAL_ERROR
reportFatalXMLError
majorCode
int
minorCode
int
stringIndex1
int
stringIndex2
int
Object
args
toString
stringIndex1
toString
stringIndex2
reportError
getLocator
XML_DOMAIN
majorCode
minorCode
args
ERRORTYPE_FATAL_ERROR
reportFatalXMLError
majorCode
int
minorCode
int
string1
String
string2
String
Object
args
string1
string2
reportError
getLocator
XML_DOMAIN
majorCode
minorCode
args
ERRORTYPE_FATAL_ERROR
reportFatalXMLError
majorCode
int
minorCode
int
string1
String
string2
String
string3
String
Object
args
string1
string2
string3
reportError
getLocator
XML_DOMAIN
majorCode
minorCode
args
ERRORTYPE_FATAL_ERROR
abortMarkup
majorCode
int
minorCode
int
reportFatalXMLError
majorCode
minorCode
skipPastEndOfCurrentMarkup
abortMarkup
majorCode
int
minorCode
int
stringIndex1
int
reportFatalXMLError
majorCode
minorCode
stringIndex1
skipPastEndOfCurrentMarkup
abortMarkup
majorCode
int
minorCode
int
string1
String
reportFatalXMLError
majorCode
minorCode
string1
skipPastEndOfCurrentMarkup
abortMarkup
majorCode
int
minorCode
int
stringIndex1
int
stringIndex2
int
reportFatalXMLError
majorCode
minorCode
stringIndex1
stringIndex2
skipPastEndOfCurrentMarkup
skipPastEndOfCurrentMarkup
skipToChar
if
lookingAtChar
fScannerMarkupDepth
setScannerState
int
state
int
int
oldState
fScannerState
fScannerState
state
return
oldState
restoreScannerState
state
int
if
fScannerState
SCANNER_STATE_END_OF_INPUT
fScannerState
state
ScannerDispatcher
dispatch
boolean
keepgoing
boolean
endOfInput
entityName
int
moreToFollow
boolean
XMLDeclDispatcher
dispatch
boolean
keepgoing
boolean
if
lookingAtChar
block
fScannerMarkupDepth
setScannerState
SCANNER_STATE_START_OF_MARKUP
if
lookingAtChar
block
int
piTarget
scanName
if
piTarget
block
abortMarkup
MSG_PITARGET_REQUIRED
P16_PITARGET_REQUIRED
if
equals
toString
piTarget
block
if
lookingAtSpace
block
scanXMLDeclOrTextDecl
block
abortMarkup
MSG_RESERVED_PITARGET
P17_RESERVED_PITARGET
block
callStartDocument
scanPI
piTarget
callStartDocument
fDispatcher
PrologDispatcher
restoreScannerState
SCANNER_STATE_PROLOG
return
callStartDocument
if
lookingAtChar
block
if
lookingAtChar
block
if
lookingAtChar
block
scanComment
block
abortMarkup
MSG_MARKUP_NOT_RECOGNIZED_IN_PROLOG
P22_NOT_RECOGNIZED
block
if
skippedString
doctype_string
block
setScannerState
SCANNER_STATE_DOCTYPE
fSeenDoctypeDecl
scanDoctypeDecl
fStandalone
fScannerMarkupDepth
fDispatcher
PrologDispatcher
restoreScannerState
SCANNER_STATE_PROLOG
return
block
abortMarkup
MSG_MARKUP_NOT_RECOGNIZED_IN_PROLOG
P22_NOT_RECOGNIZED
block
fDispatcher
ContentDispatcher
restoreScannerState
SCANNER_STATE_ROOT_ELEMENT
return
block
callStartDocument
if
lookingAtSpace
block
skipPastSpaces
if
lookingAtValidChar
block
int
invChar
scanInvalidChar
if
fScannerState
SCANNER_STATE_END_OF_INPUT
block
if
invChar
block
String
arg
toHexString
invChar
reportFatalXMLError
MSG_INVALID_CHAR_IN_PROLOG
P22_INVALID_CHARACTER
arg
block
reportFatalXMLError
MSG_MARKUP_NOT_RECOGNIZED_IN_PROLOG
P22_NOT_RECOGNIZED
lookingAtValidChar
fDispatcher
PrologDispatcher
restoreScannerState
SCANNER_STATE_PROLOG
return
endOfInput
entityName
int
moreToFollow
boolean
switch
fScannerState
case
break
case
if
moreToFollow
block
reportFatalXMLError
MSG_COMMENT_UNTERMINATED
P15_UNTERMINATED
block
reportFatalXMLError
MSG_COMMENT_NOT_IN_ONE_ENTITY
P78_NOT_WELLFORMED
break
case
if
moreToFollow
block
reportFatalXMLError
MSG_PI_UNTERMINATED
P16_UNTERMINATED
block
reportFatalXMLError
MSG_PI_NOT_IN_ONE_ENTITY
P78_NOT_WELLFORMED
break
case
throw
RuntimeException
fScannerState
if
moreToFollow
block
reportFatalXMLError
MSG_ROOT_ELEMENT_REQUIRED
P1_ELEMENT_REQUIRED
fDispatcher
EndOfInputDispatcher
setScannerState
SCANNER_STATE_END_OF_INPUT
ScannerDispatcher
PrologDispatcher
dispatch
boolean
keepgoing
boolean
do
fScannerState
SCANNER_STATE_END_OF_INPUT
keepgoing
block
if
lookingAtChar
block
fScannerMarkupDepth
setScannerState
SCANNER_STATE_START_OF_MARKUP
if
lookingAtChar
block
int
piTarget
scanName
if
piTarget
block
abortMarkup
MSG_PITARGET_REQUIRED
P16_PITARGET_REQUIRED
if
equals
toString
piTarget
block
if
lookingAtSpace
block
abortMarkup
MSG_XMLDECL_MUST_BE_FIRST
P22_XMLDECL_MUST_BE_FIRST
block
abortMarkup
MSG_RESERVED_PITARGET
P17_RESERVED_PITARGET
block
scanPI
piTarget
if
lookingAtChar
block
if
lookingAtChar
block
if
lookingAtChar
block
scanComment
block
abortMarkup
MSG_MARKUP_NOT_RECOGNIZED_IN_PROLOG
P22_NOT_RECOGNIZED
block
if
fSeenDoctypeDecl
skippedString
doctype_string
block
setScannerState
SCANNER_STATE_DOCTYPE
fSeenDoctypeDecl
scanDoctypeDecl
fStandalone
fScannerMarkupDepth
block
abortMarkup
MSG_MARKUP_NOT_RECOGNIZED_IN_PROLOG
P22_NOT_RECOGNIZED
block
fDispatcher
ContentDispatcher
restoreScannerState
SCANNER_STATE_ROOT_ELEMENT
return
restoreScannerState
SCANNER_STATE_PROLOG
if
lookingAtSpace
block
skipPastSpaces
if
lookingAtValidChar
block
int
invChar
scanInvalidChar
if
fScannerState
SCANNER_STATE_END_OF_INPUT
block
if
invChar
block
String
arg
toHexString
invChar
reportFatalXMLError
MSG_INVALID_CHAR_IN_PROLOG
P22_INVALID_CHARACTER
arg
block
reportFatalXMLError
MSG_MARKUP_NOT_RECOGNIZED_IN_PROLOG
P22_NOT_RECOGNIZED
lookingAtValidChar
return
endOfInput
entityName
int
moreToFollow
boolean
switch
fScannerState
case
break
case
if
moreToFollow
block
reportFatalXMLError
MSG_COMMENT_UNTERMINATED
P15_UNTERMINATED
block
reportFatalXMLError
MSG_COMMENT_NOT_IN_ONE_ENTITY
P78_NOT_WELLFORMED
break
case
if
moreToFollow
block
reportFatalXMLError
MSG_PI_UNTERMINATED
P16_UNTERMINATED
block
reportFatalXMLError
MSG_PI_NOT_IN_ONE_ENTITY
P78_NOT_WELLFORMED
break
case
throw
RuntimeException
fScannerState
if
moreToFollow
block
reportFatalXMLError
MSG_ROOT_ELEMENT_REQUIRED
P1_ELEMENT_REQUIRED
fDispatcher
EndOfInputDispatcher
setScannerState
SCANNER_STATE_END_OF_INPUT
ScannerDispatcher
ContentDispatcher
int
fContentReader
int
fElementDepth
int
fCurrentElementType
int
fElementTypeStack
int
popElementType
if
fElementDepth
block
throw
RuntimeException
if
fElementDepth
block
fCurrentElementType
block
fCurrentElementType
fElementTypeStack
fElementDepth
dispatch
boolean
keepgoing
boolean
do
fScannerState
SCANNER_STATE_END_OF_INPUT
keepgoing
block
switch
fScannerState
case
block
int
elementType
scanElementType
fEntityReader
if
elementType
block
fContentReader
fReaderId
fSeenRootElement
if
lookingAtChar
block
callStartElement
elementType
fScannerMarkupDepth
if
fElementDepth
length
block
int
newStack
int
fElementDepth
arraycopy
fElementTypeStack
newStack
fElementDepth
fElementTypeStack
newStack
fCurrentElementType
elementType
fElementTypeStack
fElementDepth
elementType
fElementDepth
restoreScannerState
SCANNER_STATE_CONTENT
if
scanElement
elementType
block
if
fElementDepth
length
block
int
newStack
int
fElementDepth
arraycopy
fElementTypeStack
newStack
fElementDepth
fElementTypeStack
newStack
fCurrentElementType
elementType
fElementTypeStack
fElementDepth
elementType
fElementDepth
restoreScannerState
SCANNER_STATE_CONTENT
block
fDispatcher
TrailingMiscDispatcher
restoreScannerState
SCANNER_STATE_TRAILING_MISC
return
block
reportFatalXMLError
MSG_MARKUP_NOT_RECOGNIZED_IN_PROLOG
P22_NOT_RECOGNIZED
fDispatcher
PrologDispatcher
restoreScannerState
SCANNER_STATE_PROLOG
return
break
case
if
lookingAtChar
block
int
piTarget
scanName
if
piTarget
block
abortMarkup
MSG_PITARGET_REQUIRED
P16_PITARGET_REQUIRED
if
equals
toString
piTarget
block
if
lookingAtSpace
block
if
fParseTextDecl
block
scanXMLDeclOrTextDecl
fParseTextDecl
block
abortMarkup
MSG_TEXTDECL_MUST_BE_FIRST
P30_TEXTDECL_MUST_BE_FIRST
block
abortMarkup
MSG_RESERVED_PITARGET
P17_RESERVED_PITARGET
block
scanPI
piTarget
restoreScannerState
SCANNER_STATE_CONTENT
if
lookingAtChar
block
if
lookingAtChar
block
if
lookingAtChar
block
scanComment
block
abortMarkup
MSG_MARKUP_NOT_RECOGNIZED_IN_CONTENT
P43_NOT_RECOGNIZED
block
if
skippedString
cdata_string
block
setInCDSect
startCDATA
block
abortMarkup
MSG_MARKUP_NOT_RECOGNIZED_IN_CONTENT
P43_NOT_RECOGNIZED
block
if
lookingAtChar
block
if
scanExpectedElementType
fEntityReader
block
abortMarkup
MSG_ETAG_REQUIRED
P39_UNTERMINATED
fCurrentElementType
block
if
lookingAtChar
block
skipPastSpaces
if
lookingAtChar
block
reportFatalXMLError
MSG_ETAG_UNTERMINATED
P42_UNTERMINATED
fCurrentElementType
fScannerMarkupDepth
if
callEndElement
fReaderId
block
fDispatcher
TrailingMiscDispatcher
restoreScannerState
SCANNER_STATE_TRAILING_MISC
return
if
fElementDepth
block
throw
RuntimeException
if
fElementDepth
block
fCurrentElementType
block
fCurrentElementType
fElementTypeStack
fElementDepth
block
int
elementType
scanElementType
fEntityReader
if
elementType
block
if
lookingAtChar
block
callStartElement
elementType
fScannerMarkupDepth
if
fElementDepth
length
block
int
newStack
int
fElementDepth
arraycopy
fElementTypeStack
newStack
fElementDepth
fElementTypeStack
newStack
fCurrentElementType
elementType
fElementTypeStack
fElementDepth
elementType
fElementDepth
block
if
scanElement
elementType
block
if
fElementDepth
length
block
int
newStack
int
fElementDepth
arraycopy
fElementTypeStack
newStack
fElementDepth
fElementTypeStack
newStack
fCurrentElementType
elementType
fElementTypeStack
fElementDepth
elementType
fElementDepth
block
abortMarkup
MSG_MARKUP_NOT_RECOGNIZED_IN_CONTENT
P43_NOT_RECOGNIZED
restoreScannerState
SCANNER_STATE_CONTENT
break
case
if
fParseTextDecl
lookingAtChar
block
fScannerMarkupDepth
setScannerState
SCANNER_STATE_START_OF_MARKUP
continue
switch
scanContent
fCurrentElementType
case
CONTENT_RESULT_START_OF_PI
fScannerMarkupDepth
int
piTarget
scanName
if
piTarget
block
abortMarkup
MSG_PITARGET_REQUIRED
P16_PITARGET_REQUIRED
if
equals
toString
piTarget
block
if
lookingAtSpace
block
if
fReaderId
fContentReader
block
abortMarkup
MSG_XMLDECL_MUST_BE_FIRST
P22_XMLDECL_MUST_BE_FIRST
block
abortMarkup
MSG_TEXTDECL_MUST_BE_FIRST
P30_TEXTDECL_MUST_BE_FIRST
block
abortMarkup
MSG_RESERVED_PITARGET
P17_RESERVED_PITARGET
block
scanPI
piTarget
break
case
CONTENT_RESULT_START_OF_COMMENT
fScannerMarkupDepth
fParseTextDecl
scanComment
break
case
CONTENT_RESULT_START_OF_CDSECT
fScannerMarkupDepth
fParseTextDecl
setInCDSect
startCDATA
break
case
CONTENT_RESULT_START_OF_ETAG
fScannerMarkupDepth
fParseTextDecl
if
scanExpectedElementType
fEntityReader
block
abortMarkup
MSG_ETAG_REQUIRED
P39_UNTERMINATED
fCurrentElementType
block
if
lookingAtChar
block
skipPastSpaces
if
lookingAtChar
block
reportFatalXMLError
MSG_ETAG_UNTERMINATED
P42_UNTERMINATED
fCurrentElementType
fScannerMarkupDepth
if
callEndElement
fReaderId
block
fDispatcher
TrailingMiscDispatcher
restoreScannerState
SCANNER_STATE_TRAILING_MISC
return
if
fElementDepth
block
throw
RuntimeException
if
fElementDepth
block
fCurrentElementType
block
fCurrentElementType
fElementTypeStack
fElementDepth
restoreScannerState
SCANNER_STATE_CONTENT
break
case
CONTENT_RESULT_START_OF_ELEMENT
block
fScannerMarkupDepth
fParseTextDecl
int
elementType
scanElementType
fEntityReader
if
elementType
block
if
lookingAtChar
block
callStartElement
elementType
fScannerMarkupDepth
if
fElementDepth
length
block
int
newStack
int
fElementDepth
arraycopy
fElementTypeStack
newStack
fElementDepth
fElementTypeStack
newStack
fCurrentElementType
elementType
fElementTypeStack
fElementDepth
elementType
fElementDepth
block
if
scanElement
elementType
block
if
fElementDepth
length
block
int
newStack
int
fElementDepth
arraycopy
fElementTypeStack
newStack
fElementDepth
fElementTypeStack
newStack
fCurrentElementType
elementType
fElementTypeStack
fElementDepth
elementType
fElementDepth
block
abortMarkup
MSG_MARKUP_NOT_RECOGNIZED_IN_CONTENT
P43_NOT_RECOGNIZED
if
fScannerState
SCANNER_STATE_END_OF_INPUT
fScannerState
SCANNER_STATE_CONTENT
break
case
CONTENT_RESULT_MATCHING_ETAG
block
fParseTextDecl
if
callEndElement
fReaderId
block
if
fScannerState
SCANNER_STATE_END_OF_INPUT
block
fDispatcher
TrailingMiscDispatcher
fScannerState
SCANNER_STATE_TRAILING_MISC
return
if
fElementDepth
block
throw
RuntimeException
if
fElementDepth
block
fCurrentElementType
block
fCurrentElementType
fElementTypeStack
fElementDepth
if
fScannerState
SCANNER_STATE_END_OF_INPUT
fScannerState
SCANNER_STATE_CONTENT
break
case
CONTENT_RESULT_START_OF_CHARREF
fParseTextDecl
setScannerState
SCANNER_STATE_REFERENCE
int
num
scanCharRef
if
num
callCharacters
num
restoreScannerState
SCANNER_STATE_CONTENT
break
case
CONTENT_RESULT_REFERENCE_END_OF_INPUT
CONTENT_RESULT_START_OF_ENTITYREF
fParseTextDecl
setScannerState
SCANNER_STATE_REFERENCE
int
nameOffset
currentOffset
skipPastName
int
nameLength
currentOffset
nameOffset
if
nameLength
block
reportFatalXMLError
MSG_NAME_REQUIRED_IN_REFERENCE
P68_NAME_REQUIRED
restoreScannerState
SCANNER_STATE_CONTENT
if
lookingAtChar
block
reportFatalXMLError
MSG_SEMICOLON_REQUIRED_IN_REFERENCE
P68_SEMICOLON_REQUIRED
addString
nameOffset
nameLength
restoreScannerState
SCANNER_STATE_CONTENT
block
restoreScannerState
SCANNER_STATE_CONTENT
int
entityName
addSymbol
nameOffset
nameLength
fParseTextDecl
startReadingFromEntity
entityName
fElementDepth
CONTEXT_IN_CONTENT
break
case
CONTENT_RESULT_END_OF_CDSECT
fParseTextDecl
if
getInCDSect
block
setInCDSect
endCDATA
fScannerMarkupDepth
block
reportFatalXMLError
MSG_CDEND_IN_CONTENT
P14_INVALID
restoreScannerState
SCANNER_STATE_CONTENT
break
case
CONTENT_RESULT_INVALID_CHAR
fParseTextDecl
if
fScannerState
SCANNER_STATE_END_OF_INPUT
block
if
lookingAtValidChar
block
int
invChar
scanInvalidChar
if
fScannerState
SCANNER_STATE_END_OF_INPUT
block
if
invChar
block
if
getInCDSect
block
reportFatalXMLError
MSG_INVALID_CHAR_IN_CDSECT
P20_INVALID_CHARACTER
toHexString
invChar
block
reportFatalXMLError
MSG_INVALID_CHAR_IN_CONTENT
P43_INVALID_CHARACTER
toHexString
invChar
restoreScannerState
SCANNER_STATE_CONTENT
break
case
CONTENT_RESULT_MARKUP_NOT_RECOGNIZED
fParseTextDecl
abortMarkup
MSG_MARKUP_NOT_RECOGNIZED_IN_CONTENT
P43_NOT_RECOGNIZED
break
case
CONTENT_RESULT_MARKUP_END_OF_INPUT
fScannerMarkupDepth
fParseTextDecl
fScannerState
SCANNER_STATE_START_OF_MARKUP
break
case
throw
RuntimeException
fScannerState
break
case
throw
RuntimeException
fScannerState
return
endOfInput
entityName
int
moreToFollow
boolean
switch
fScannerState
case
break
case
if
getInCDSect
block
reportFatalXMLError
MSG_CDSECT_UNTERMINATED
P18_UNTERMINATED
break
case
if
moreToFollow
block
block
break
case
if
moreToFollow
block
block
break
case
if
moreToFollow
block
reportFatalXMLError
MSG_ATTRIBUTE_VALUE_UNTERMINATED
P10_UNTERMINATED
fAttValueElementType
fAttValueAttrName
if
fReaderId
fAttValueReader
block
block
append
fLiteralData
fAttValueMark
fAttValueOffset
fAttValueMark
break
case
if
moreToFollow
block
reportFatalXMLError
MSG_COMMENT_UNTERMINATED
P15_UNTERMINATED
block
reportFatalXMLError
MSG_COMMENT_NOT_IN_ONE_ENTITY
P78_NOT_WELLFORMED
break
case
if
moreToFollow
block
reportFatalXMLError
MSG_PI_UNTERMINATED
P16_UNTERMINATED
block
reportFatalXMLError
MSG_PI_NOT_IN_ONE_ENTITY
P78_NOT_WELLFORMED
break
case
if
moreToFollow
block
reportFatalXMLError
MSG_REFERENCE_UNTERMINATED
P67_UNTERMINATED
block
reportFatalXMLError
MSG_REFERENCE_NOT_IN_ONE_ENTITY
P78_NOT_WELLFORMED
break
case
throw
RuntimeException
fScannerState
if
moreToFollow
block
if
fElementDepth
reportFatalXMLError
MSG_ETAG_REQUIRED
P39_UNTERMINATED
fCurrentElementType
fDispatcher
EndOfInputDispatcher
setScannerState
SCANNER_STATE_END_OF_INPUT
ScannerDispatcher
TrailingMiscDispatcher
dispatch
boolean
keepgoing
boolean
do
fScannerState
SCANNER_STATE_END_OF_INPUT
keepgoing
block
if
lookingAtChar
block
fScannerMarkupDepth
setScannerState
SCANNER_STATE_START_OF_MARKUP
if
lookingAtChar
block
int
piTarget
scanName
if
piTarget
block
abortMarkup
MSG_PITARGET_REQUIRED
P16_PITARGET_REQUIRED
if
equals
toString
piTarget
block
if
lookingAtSpace
block
abortMarkup
MSG_XMLDECL_MUST_BE_FIRST
P22_XMLDECL_MUST_BE_FIRST
block
abortMarkup
MSG_RESERVED_PITARGET
P17_RESERVED_PITARGET
block
scanPI
piTarget
if
lookingAtChar
block
if
lookingAtChar
lookingAtChar
block
scanComment
block
abortMarkup
MSG_MARKUP_NOT_RECOGNIZED_IN_MISC
P27_NOT_RECOGNIZED
block
abortMarkup
MSG_MARKUP_NOT_RECOGNIZED_IN_MISC
P27_NOT_RECOGNIZED
restoreScannerState
SCANNER_STATE_TRAILING_MISC
if
lookingAtSpace
block
skipPastSpaces
if
lookingAtValidChar
block
int
invChar
scanInvalidChar
if
fScannerState
SCANNER_STATE_END_OF_INPUT
block
if
invChar
block
String
arg
toHexString
invChar
reportFatalXMLError
MSG_INVALID_CHAR_IN_MISC
P27_INVALID_CHARACTER
arg
block
reportFatalXMLError
MSG_MARKUP_NOT_RECOGNIZED_IN_MISC
P27_NOT_RECOGNIZED
lookingAtValidChar
return
endOfInput
entityName
int
moreToFollow
boolean
if
moreToFollow
throw
RuntimeException
switch
fScannerState
case
break
case
reportFatalXMLError
MSG_COMMENT_UNTERMINATED
P15_UNTERMINATED
break
case
reportFatalXMLError
MSG_PI_UNTERMINATED
P16_UNTERMINATED
break
case
throw
RuntimeException
fScannerState
fDispatcher
EndOfInputDispatcher
setScannerState
SCANNER_STATE_END_OF_INPUT
ScannerDispatcher
EndOfInputDispatcher
dispatch
boolean
keepgoing
boolean
if
fScannerState
SCANNER_STATE_TERMINATED
callEndDocument
setScannerState
SCANNER_STATE_TERMINATED
return
endOfInput
entityName
int
moreToFollow
boolean
throw
RuntimeException
fScannerState
ScannerDispatcher
scanXMLDeclOrTextDecl
scanningTextDecl
boolean
int
version
int
encoding
int
standalone
int
XMLDECL_START
int
XMLDECL_VERSION
int
XMLDECL_ENCODING
int
XMLDECL_STANDALONE
int
XMLDECL_FINISHED
int
state
XMLDECL_START
do
state
XMLDECL_FINISHED
block
skipPastSpaces
int
offset
currentOffset
if
scanningTextDecl
block
if
state
XMLDECL_START
skippedString
version_string
block
state
XMLDECL_VERSION
if
skippedString
encoding_string
block
state
XMLDECL_ENCODING
block
abortMarkup
MSG_ENCODINGDECL_REQUIRED
P77_ENCODINGDECL_REQUIRED
return
block
if
state
XMLDECL_START
block
if
skippedString
version_string
block
abortMarkup
MSG_VERSIONINFO_REQUIRED
P23_VERSIONINFO_REQUIRED
return
state
XMLDECL_VERSION
block
if
state
XMLDECL_VERSION
block
if
skippedString
encoding_string
state
XMLDECL_ENCODING
state
XMLDECL_STANDALONE
state
XMLDECL_STANDALONE
if
state
XMLDECL_STANDALONE
skippedString
standalone_string
break
int
length
currentOffset
offset
skipPastSpaces
if
lookingAtChar
block
int
majorCode
scanningTextDecl
MSG_EQ_REQUIRED_IN_TEXTDECL
MSG_EQ_REQUIRED_IN_XMLDECL
int
minorCode
state
XMLDECL_VERSION
P24_EQ_REQUIRED
state
XMLDECL_ENCODING
P80_EQ_REQUIRED
P32_EQ_REQUIRED
abortMarkup
majorCode
minorCode
addString
offset
length
return
skipPastSpaces
int
result
scanStringLiteral
switch
result
case
STRINGLIT_RESULT_QUOTE_REQUIRED
block
int
majorCode
scanningTextDecl
MSG_QUOTE_REQUIRED_IN_TEXTDECL
MSG_QUOTE_REQUIRED_IN_XMLDECL
int
minorCode
state
XMLDECL_VERSION
P24_QUOTE_REQUIRED
state
XMLDECL_ENCODING
P80_QUOTE_REQUIRED
P32_QUOTE_REQUIRED
abortMarkup
majorCode
minorCode
addString
offset
length
return
case
STRINGLIT_RESULT_INVALID_CHAR
int
invChar
scanInvalidChar
if
fScannerState
SCANNER_STATE_END_OF_INPUT
block
if
invChar
block
int
majorCode
scanningTextDecl
MSG_INVALID_CHAR_IN_TEXTDECL
MSG_INVALID_CHAR_IN_XMLDECL
int
minorCode
state
XMLDECL_VERSION
P26_INVALID_CHARACTER
state
XMLDECL_ENCODING
P81_INVALID_CHARACTER
P32_INVALID_CHARACTER
reportFatalXMLError
majorCode
minorCode
toHexString
invChar
skipPastEndOfCurrentMarkup
return
case
break
switch
state
case
version
result
String
versionString
toString
version
if
equals
versionString
block
if
validVersionNum
versionString
block
abortMarkup
MSG_VERSIONINFO_INVALID
P26_INVALID_VALUE
versionString
return
Object
args
versionString
reportError
getLocator
XML_DOMAIN
MSG_VERSION_NOT_SUPPORTED
P26_NOT_SUPPORTED
args
ERRORTYPE_RECOVERABLE_ERROR
if
lookingAtSpace
block
if
scanningTextDecl
block
abortMarkup
MSG_SPACE_REQUIRED_IN_TEXTDECL
P80_WHITESPACE_REQUIRED
return
state
XMLDECL_FINISHED
break
case
encoding
result
String
encodingString
toString
encoding
if
validEncName
encodingString
block
abortMarkup
MSG_ENCODINGDECL_INVALID
P81_INVALID_VALUE
encodingString
return
if
lookingAtSpace
block
state
XMLDECL_FINISHED
if
scanningTextDecl
block
skipPastSpaces
state
XMLDECL_FINISHED
break
case
standalone
result
String
standaloneString
toString
standalone
boolean
yes
equals
standaloneString
if
yes
equals
standaloneString
block
abortMarkup
MSG_SDDECL_INVALID
P32_INVALID_VALUE
standaloneString
return
fStandalone
yes
skipPastSpaces
state
XMLDECL_FINISHED
break
if
lookingAtChar
lookingAtChar
block
int
majorCode
minorCode
if
scanningTextDecl
block
majorCode
MSG_TEXTDECL_UNTERMINATED
minorCode
P77_UNTERMINATED
block
majorCode
MSG_XMLDECL_UNTERMINATED
minorCode
P23_UNTERMINATED
abortMarkup
majorCode
minorCode
return
fScannerMarkupDepth
if
scanningTextDecl
block
callStartDocument
version
encoding
standalone
scanElement
boolean
elementType
int
boolean
greater
boolean
slash
if
greater
lookingAtChar
block
if
lookingAtSpace
block
int
previousState
setScannerState
SCANNER_STATE_ATTRIBUTE_LIST
while
block
skipPastSpaces
if
greater
lookingAtChar
slash
lookingAtChar
break
setScannerState
SCANNER_STATE_ATTRIBUTE_NAME
int
attrName
scanAttributeName
fEntityReader
elementType
if
attrName
block
break
skipPastSpaces
if
lookingAtChar
block
if
fScannerState
SCANNER_STATE_END_OF_INPUT
block
abortMarkup
MSG_EQ_REQUIRED_IN_ATTRIBUTE
P41_EQ_REQUIRED
elementType
attrName
restoreScannerState
previousState
return
skipPastSpaces
int
result
scanAttValue
elementType
attrName
if
result
RESULT_FAILURE
block
if
fScannerState
SCANNER_STATE_END_OF_INPUT
block
skipPastEndOfCurrentMarkup
restoreScannerState
previousState
return
if
result
RESULT_DUPLICATE_ATTR
block
reportFatalXMLError
MSG_ATTRIBUTE_NOT_UNIQUE
WFC_UNIQUE_ATT_SPEC
elementType
attrName
restoreScannerState
SCANNER_STATE_ATTRIBUTE_LIST
if
lookingAtSpace
block
if
greater
lookingAtChar
slash
lookingAtChar
break
restoreScannerState
previousState
block
slash
lookingAtChar
if
greater
slash
lookingAtChar
block
if
fScannerState
SCANNER_STATE_END_OF_INPUT
block
abortMarkup
MSG_ELEMENT_UNTERMINATED
P40_UNTERMINATED
elementType
return
callStartElement
elementType
fScannerMarkupDepth
if
slash
block
callEndElement
fReaderId
return
block
return
scanCharRef
int
int
valueOffset
currentOffset
boolean
hex
lookingAtChar
int
num
scanCharRef
hex
if
num
block
switch
num
case
CHARREF_RESULT_SEMICOLON_REQUIRED
reportFatalXMLError
MSG_SEMICOLON_REQUIRED_IN_CHARREF
P66_SEMICOLON_REQUIRED
return
case
CHARREF_RESULT_INVALID_CHAR
int
majorCode
hex
MSG_HEXDIGIT_REQUIRED_IN_CHARREF
MSG_DIGIT_REQUIRED_IN_CHARREF
int
minorCode
hex
P66_HEXDIGIT_REQUIRED
P66_DIGIT_REQUIRED
reportFatalXMLError
majorCode
minorCode
return
case
CHARREF_RESULT_OUT_OF_RANGE
num
break
if
num
block
if
num
num
num
block
return
num
if
num
num
num
num
num
block
return
num
int
valueLength
currentOffset
valueOffset
reportFatalXMLError
MSG_INVALID_CHARREF
WFC_LEGAL_CHARACTER
addString
valueOffset
valueLength
return
scanComment
int
commentOffset
currentOffset
boolean
sawDashDash
int
previousState
setScannerState
SCANNER_STATE_COMMENT
while
fScannerState
SCANNER_STATE_COMMENT
block
if
lookingAtChar
block
int
nextEndOffset
currentOffset
int
endOffset
lookingAtChar
int
offset
currentOffset
int
count
while
lookingAtChar
block
count
endOffset
nextEndOffset
nextEndOffset
offset
offset
currentOffset
if
count
block
if
lookingAtChar
block
if
sawDashDash
count
block
reportFatalXMLError
MSG_DASH_DASH_IN_COMMENT
P15_DASH_DASH
sawDashDash
fScannerMarkupDepth
callComment
addString
commentOffset
endOffset
commentOffset
restoreScannerState
previousState
return
if
sawDashDash
block
reportFatalXMLError
MSG_DASH_DASH_IN_COMMENT
P15_DASH_DASH
sawDashDash
block
if
lookingAtValidChar
block
int
invChar
scanInvalidChar
if
fScannerState
SCANNER_STATE_END_OF_INPUT
block
if
invChar
block
reportFatalXMLError
MSG_INVALID_CHAR_IN_COMMENT
P15_INVALID_CHARACTER
toHexString
invChar
restoreScannerState
previousState
scanPI
piTarget
int
String
piTargetString
toString
piTarget
if
length
charAt
charAt
charAt
charAt
charAt
charAt
block
abortMarkup
MSG_RESERVED_PITARGET
P17_RESERVED_PITARGET
return
int
prevState
setScannerState
SCANNER_STATE_PI
int
piDataOffset
int
piDataLength
if
lookingAtSpace
block
if
lookingAtChar
lookingAtChar
block
if
fScannerState
SCANNER_STATE_END_OF_INPUT
block
abortMarkup
MSG_SPACE_REQUIRED_IN_PI
P16_WHITESPACE_REQUIRED
restoreScannerState
prevState
return
piDataLength
block
skipPastSpaces
piDataOffset
currentOffset
while
fScannerState
SCANNER_STATE_PI
block
while
lookingAtChar
block
int
offset
currentOffset
lookingAtChar
if
lookingAtChar
block
piDataLength
offset
piDataOffset
break
if
piDataLength
break
if
lookingAtValidChar
block
int
invChar
scanInvalidChar
if
fScannerState
SCANNER_STATE_END_OF_INPUT
block
if
invChar
block
reportFatalXMLError
MSG_INVALID_CHAR_IN_PI
P16_INVALID_CHARACTER
toHexString
invChar
skipPastEndOfCurrentMarkup
restoreScannerState
prevState
return
fScannerMarkupDepth
restoreScannerState
prevState
int
piData
piDataLength
EMPTY_STRING
addString
piDataOffset
piDataLength
callProcessingInstruction
piTarget
piData
