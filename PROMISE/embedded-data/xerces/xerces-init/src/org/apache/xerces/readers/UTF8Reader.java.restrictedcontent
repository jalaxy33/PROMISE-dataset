UTF8Reader
boolean
USE_OUT_OF_LINE_LOAD_NEXT_BYTE
boolean
USE_TRY_CATCH_FOR_LOAD_NEXT_BYTE
UTF8Reader
entityHandler
XMLEntityHandler
errorReporter
XMLErrorReporter
sendCharDataAsCharArray
boolean
dataStream
InputStream
stringPool
StringPool
entityHandler
errorReporter
sendCharDataAsCharArray
fInputStream
dataStream
fStringPool
stringPool
fCharArrayRange
createCharArrayRange
fCurrentChunk
createChunk
fStringPool
fillCurrentChunk
addString
int
offset
int
length
int
if
length
return
return
addString
offset
length
addSymbol
int
offset
int
length
int
if
length
return
return
addSymbol
offset
length
addSymbol
int
offset
int
length
int
hashcode
int
if
length
return
return
addSymbol
offset
length
hashcode
append
charBuffer
XMLEntityHandler
CharBuffer
offset
int
length
int
append
charBuffer
offset
length
slowLoadNextByte
int
fCallClearPreviousChunk
if
nextChunk
block
fCurrentChunk
nextChunk
fCurrentIndex
fMostRecentData
toByteArray
return
fMostRecentByte
fMostRecentData
fCurrentIndex
block
fCurrentChunk
createChunk
fStringPool
fCurrentChunk
return
fillCurrentChunk
loadNextByte
int
fCurrentOffset
if
USE_TRY_CATCH_FOR_LOAD_NEXT_BYTE
block
fCurrentIndex
try
fMostRecentByte
fMostRecentData
fCurrentIndex
return
fMostRecentByte
catchClause
ex
return
slowLoadNextByte
block
if
fCurrentIndex
CHUNK_SIZE
return
slowLoadNextByte
return
fMostRecentByte
fMostRecentData
fCurrentIndex
atEOF
boolean
offset
int
return
offset
fLength
changeReaders
XMLEntityHandler
EntityReader
XMLEntityHandler
EntityReader
nextReader
changeReaders
releaseChunk
fCurrentChunk
fMostRecentData
fMostRecentByte
return
nextReader
lookingAtChar
boolean
ch
char
skipPastChar
boolean
int
b0
fMostRecentByte
if
b0
ch
block
if
b0
block
if
atEOF
fCurrentOffset
block
return
changeReaders
lookingAtChar
ch
skipPastChar
if
ch
b0
block
if
skipPastChar
block
fCarriageReturnCounter
fCharacterCounter
if
USE_OUT_OF_LINE_LOAD_NEXT_BYTE
block
b0
loadNextByte
block
fCurrentOffset
if
USE_TRY_CATCH_FOR_LOAD_NEXT_BYTE
block
fCurrentIndex
try
fMostRecentByte
fMostRecentData
fCurrentIndex
b0
fMostRecentByte
catchClause
ex
b0
slowLoadNextByte
block
if
fCurrentIndex
CHUNK_SIZE
b0
slowLoadNextByte
b0
fMostRecentByte
fMostRecentData
fCurrentIndex
if
b0
block
fLinefeedCounter
if
USE_OUT_OF_LINE_LOAD_NEXT_BYTE
block
loadNextByte
block
fCurrentOffset
if
USE_TRY_CATCH_FOR_LOAD_NEXT_BYTE
block
fCurrentIndex
try
fMostRecentByte
fMostRecentData
fCurrentIndex
catchClause
ex
slowLoadNextByte
block
if
fCurrentIndex
CHUNK_SIZE
slowLoadNextByte
fMostRecentByte
fMostRecentData
fCurrentIndex
return
return
if
ch
return
if
skipPastChar
block
fCharacterCounter
if
USE_OUT_OF_LINE_LOAD_NEXT_BYTE
block
loadNextByte
block
fCurrentOffset
if
USE_TRY_CATCH_FOR_LOAD_NEXT_BYTE
block
fCurrentIndex
try
fMostRecentByte
fMostRecentData
fCurrentIndex
catchClause
ex
slowLoadNextByte
block
if
fCurrentIndex
CHUNK_SIZE
slowLoadNextByte
fMostRecentByte
fMostRecentData
fCurrentIndex
return
lookingAtValidChar
boolean
skipPastChar
boolean
int
b0
fMostRecentByte
if
b0
block
if
b0
b0
block
if
skipPastChar
block
fCharacterCounter
if
USE_OUT_OF_LINE_LOAD_NEXT_BYTE
block
loadNextByte
block
fCurrentOffset
if
USE_TRY_CATCH_FOR_LOAD_NEXT_BYTE
block
fCurrentIndex
try
fMostRecentByte
fMostRecentData
fCurrentIndex
catchClause
ex
slowLoadNextByte
block
if
fCurrentIndex
CHUNK_SIZE
slowLoadNextByte
fMostRecentByte
fMostRecentData
fCurrentIndex
return
if
b0
block
if
skipPastChar
block
fLinefeedCounter
fCharacterCounter
if
USE_OUT_OF_LINE_LOAD_NEXT_BYTE
block
loadNextByte
block
fCurrentOffset
if
USE_TRY_CATCH_FOR_LOAD_NEXT_BYTE
block
fCurrentIndex
try
fMostRecentByte
fMostRecentData
fCurrentIndex
catchClause
ex
slowLoadNextByte
block
if
fCurrentIndex
CHUNK_SIZE
slowLoadNextByte
fMostRecentByte
fMostRecentData
fCurrentIndex
return
if
b0
block
if
skipPastChar
block
fCarriageReturnCounter
fCharacterCounter
if
USE_OUT_OF_LINE_LOAD_NEXT_BYTE
block
b0
loadNextByte
block
fCurrentOffset
if
USE_TRY_CATCH_FOR_LOAD_NEXT_BYTE
block
fCurrentIndex
try
fMostRecentByte
fMostRecentData
fCurrentIndex
b0
fMostRecentByte
catchClause
ex
b0
slowLoadNextByte
block
if
fCurrentIndex
CHUNK_SIZE
b0
slowLoadNextByte
b0
fMostRecentByte
fMostRecentData
fCurrentIndex
if
b0
block
fLinefeedCounter
if
USE_OUT_OF_LINE_LOAD_NEXT_BYTE
block
loadNextByte
block
fCurrentOffset
if
USE_TRY_CATCH_FOR_LOAD_NEXT_BYTE
block
fCurrentIndex
try
fMostRecentByte
fMostRecentData
fCurrentIndex
catchClause
ex
slowLoadNextByte
block
if
fCurrentIndex
CHUNK_SIZE
slowLoadNextByte
fMostRecentByte
fMostRecentData
fCurrentIndex
return
if
b0
block
if
atEOF
fCurrentOffset
block
return
changeReaders
lookingAtValidChar
skipPastChar
return
UTF8DataChunk
saveChunk
fCurrentChunk
int
saveIndex
fCurrentIndex
int
saveOffset
fCurrentOffset
int
b1
loadNextByte
if
b0
block
if
skipPastChar
block
fCharacterCounter
loadNextByte
block
fCurrentChunk
saveChunk
fCurrentIndex
saveIndex
fCurrentOffset
saveOffset
fMostRecentData
toByteArray
fMostRecentByte
b0
return
int
b2
loadNextByte
if
b0
block
boolean
result
if
b0
b1
b0
b1
b2
block
if
skipPastChar
block
fCharacterCounter
loadNextByte
return
result
fCurrentChunk
saveChunk
fCurrentIndex
saveIndex
fCurrentOffset
saveOffset
fMostRecentData
toByteArray
fMostRecentByte
b0
return
result
int
b3
loadNextByte
boolean
result
if
b0
b0
b1
block
if
skipPastChar
block
fCharacterCounter
loadNextByte
return
result
fCurrentChunk
saveChunk
fCurrentIndex
saveIndex
fCurrentOffset
saveOffset
fMostRecentData
toByteArray
fMostRecentByte
b0
return
result
lookingAtSpace
boolean
skipPastChar
boolean
int
ch
fMostRecentByte
if
ch
return
if
ch
ch
block
if
skipPastChar
return
fCharacterCounter
if
ch
block
if
skipPastChar
return
fLinefeedCounter
fCharacterCounter
if
ch
block
if
skipPastChar
return
fCarriageReturnCounter
fCharacterCounter
if
USE_OUT_OF_LINE_LOAD_NEXT_BYTE
block
ch
loadNextByte
block
fCurrentOffset
if
USE_TRY_CATCH_FOR_LOAD_NEXT_BYTE
block
fCurrentIndex
try
fMostRecentByte
fMostRecentData
fCurrentIndex
ch
fMostRecentByte
catchClause
ex
ch
slowLoadNextByte
block
if
fCurrentIndex
CHUNK_SIZE
ch
slowLoadNextByte
ch
fMostRecentByte
fMostRecentData
fCurrentIndex
if
ch
return
fLinefeedCounter
block
if
ch
block
if
atEOF
fCurrentOffset
block
return
changeReaders
lookingAtSpace
skipPastChar
return
if
USE_OUT_OF_LINE_LOAD_NEXT_BYTE
block
loadNextByte
block
fCurrentOffset
if
USE_TRY_CATCH_FOR_LOAD_NEXT_BYTE
block
fCurrentIndex
try
fMostRecentByte
fMostRecentData
fCurrentIndex
catchClause
ex
slowLoadNextByte
block
if
fCurrentIndex
CHUNK_SIZE
slowLoadNextByte
fMostRecentByte
fMostRecentData
fCurrentIndex
return
skipToChar
ch
char
int
b0
fMostRecentByte
while
block
if
b0
ch
return
if
b0
block
if
atEOF
fCurrentOffset
block
changeReaders
skipToChar
ch
return
fCharacterCounter
if
b0
block
fLinefeedCounter
fCharacterCounter
if
b0
block
fCarriageReturnCounter
fCharacterCounter
b0
loadNextByte
if
b0
continue
fLinefeedCounter
if
b0
block
fCharacterCounter
block
fCharacterCounter
if
b0
block
loadNextByte
if
b0
block
loadNextByte
loadNextByte
block
loadNextByte
loadNextByte
loadNextByte
b0
loadNextByte
skipPastSpaces
int
ch
fMostRecentByte
while
block
if
ch
ch
block
fCharacterCounter
if
ch
block
fLinefeedCounter
fCharacterCounter
if
ch
block
fCarriageReturnCounter
fCharacterCounter
if
USE_OUT_OF_LINE_LOAD_NEXT_BYTE
block
ch
loadNextByte
block
fCurrentOffset
if
USE_TRY_CATCH_FOR_LOAD_NEXT_BYTE
block
fCurrentIndex
try
fMostRecentByte
fMostRecentData
fCurrentIndex
ch
fMostRecentByte
catchClause
ex
ch
slowLoadNextByte
block
if
fCurrentIndex
CHUNK_SIZE
ch
slowLoadNextByte
ch
fMostRecentByte
fMostRecentData
fCurrentIndex
if
ch
continue
fLinefeedCounter
block
if
ch
atEOF
fCurrentOffset
changeReaders
skipPastSpaces
return
if
USE_OUT_OF_LINE_LOAD_NEXT_BYTE
block
ch
loadNextByte
block
fCurrentOffset
if
USE_TRY_CATCH_FOR_LOAD_NEXT_BYTE
block
fCurrentIndex
try
fMostRecentByte
fMostRecentData
fCurrentIndex
ch
fMostRecentByte
catchClause
ex
ch
slowLoadNextByte
block
if
fCurrentIndex
CHUNK_SIZE
ch
slowLoadNextByte
ch
fMostRecentByte
fMostRecentData
fCurrentIndex
skippedMultiByteCharWithFlag
boolean
b0
int
flag
int
UTF8DataChunk
saveChunk
fCurrentChunk
int
saveOffset
fCurrentOffset
int
saveIndex
fCurrentIndex
int
b1
loadNextByte
if
b0
block
if
fgCharFlags
b0
b1
flag
block
fCurrentChunk
saveChunk
fCurrentIndex
saveIndex
fCurrentOffset
saveOffset
fMostRecentData
toByteArray
fMostRecentByte
b0
return
return
int
b2
loadNextByte
if
b0
block
if
b0
b1
b0
b1
b2
block
fCurrentChunk
saveChunk
fCurrentIndex
saveIndex
fCurrentOffset
saveOffset
fMostRecentData
toByteArray
fMostRecentByte
b0
return
if
fgCharFlags
b0
b1
b2
flag
block
fCurrentChunk
saveChunk
fCurrentIndex
saveIndex
fCurrentOffset
saveOffset
fMostRecentData
toByteArray
fMostRecentByte
b0
return
return
block
fCurrentChunk
saveChunk
fCurrentIndex
saveIndex
fCurrentOffset
saveOffset
fMostRecentData
toByteArray
fMostRecentByte
b0
return
skipPastName
fastcheck
char
int
b0
fMostRecentByte
if
b0
block
if
fgAsciiInitialNameChar
b0
return
block
if
skippedMultiByteCharWithFlag
b0
E_InitialNameCharFlag
return
while
block
fCharacterCounter
b0
loadNextByte
if
fastcheck
b0
return
if
b0
block
if
fgAsciiNameChar
b0
return
block
if
skippedMultiByteCharWithFlag
b0
E_NameCharFlag
return
skipPastNmtoken
fastcheck
char
int
b0
fMostRecentByte
while
block
if
fastcheck
b0
return
if
b0
block
if
fgAsciiNameChar
b0
return
block
if
skippedMultiByteCharWithFlag
b0
E_NameCharFlag
return
fCharacterCounter
b0
loadNextByte
skippedString
boolean
s
char
int
length
length
byte
data
fMostRecentData
int
index
fCurrentIndex
length
int
sindex
length
try
while
sindex
block
if
data
index
s
sindex
return
catchClause
ex
int
i
while
index
CHUNK_SIZE
block
if
data
index
s
i
return
UTF8DataChunk
dataChunk
fCurrentChunk
int
savedOffset
fCurrentOffset
int
savedIndex
fCurrentIndex
slowLoadNextByte
data
fMostRecentData
index
while
i
length
block
if
data
index
s
i
block
fCurrentChunk
dataChunk
fCurrentIndex
savedIndex
fCurrentOffset
savedOffset
fMostRecentData
toByteArray
fMostRecentByte
fMostRecentData
savedIndex
return
fCharacterCounter
length
fCurrentOffset
length
fCurrentIndex
length
try
fMostRecentByte
data
fCurrentIndex
catchClause
ex
slowLoadNextByte
return
scanInvalidChar
int
int
b0
fMostRecentByte
int
ch
b0
if
ch
block
fLinefeedCounter
fCharacterCounter
if
ch
block
fCarriageReturnCounter
fCharacterCounter
ch
loadNextByte
if
ch
return
fLinefeedCounter
if
ch
block
if
atEOF
fCurrentOffset
block
return
changeReaders
scanInvalidChar
fCharacterCounter
if
b0
block
fCharacterCounter
int
b1
loadNextByte
if
b0
block
ch
b0
b1
block
int
b2
loadNextByte
if
b0
block
ch
b0
b1
b2
block
int
b3
loadNextByte
ch
b0
b1
b2
b3
loadNextByte
return
ch
scanCharRef
int
hex
boolean
int
ch
fMostRecentByte
if
ch
block
if
atEOF
fCurrentOffset
block
return
changeReaders
scanCharRef
hex
return
CHARREF_RESULT_INVALID_CHAR
int
num
if
hex
block
if
ch
fgAsciiXDigitChar
ch
return
CHARREF_RESULT_INVALID_CHAR
num
ch
ch
ch
block
if
ch
ch
return
CHARREF_RESULT_INVALID_CHAR
num
ch
fCharacterCounter
loadNextByte
boolean
toobig
while
block
ch
fMostRecentByte
if
ch
break
if
hex
block
if
ch
fgAsciiXDigitChar
ch
break
block
if
ch
ch
break
fCharacterCounter
loadNextByte
if
hex
block
int
dig
ch
ch
ch
num
num
dig
block
int
dig
ch
num
num
dig
if
num
block
toobig
num
if
ch
return
CHARREF_RESULT_SEMICOLON_REQUIRED
fCharacterCounter
loadNextByte
if
toobig
return
CHARREF_RESULT_OUT_OF_RANGE
return
num
scanStringLiteral
int
boolean
single
if
single
lookingAtChar
lookingAtChar
block
return
STRINGLIT_RESULT_QUOTE_REQUIRED
int
offset
fCurrentOffset
char
qchar
single
while
lookingAtChar
qchar
block
if
lookingAtValidChar
block
return
STRINGLIT_RESULT_INVALID_CHAR
int
stringIndex
addString
offset
fCurrentOffset
offset
lookingAtChar
qchar
return
stringIndex
byte
fgAsciiAttValueChar
scanAttValue
int
qchar
char
asSymbol
boolean
int
offset
fCurrentOffset
int
b0
fMostRecentByte
while
block
if
b0
block
switch
fgAsciiAttValueChar
b0
case
if
b0
qchar
block
int
length
fCurrentOffset
offset
int
result
length
EMPTY_STRING
asSymbol
addSymbol
offset
length
addString
offset
length
fCharacterCounter
if
USE_OUT_OF_LINE_LOAD_NEXT_BYTE
block
loadNextByte
block
fCurrentOffset
if
USE_TRY_CATCH_FOR_LOAD_NEXT_BYTE
block
fCurrentIndex
try
fMostRecentByte
fMostRecentData
fCurrentIndex
catchClause
ex
slowLoadNextByte
block
if
fCurrentIndex
CHUNK_SIZE
slowLoadNextByte
fMostRecentByte
fMostRecentData
fCurrentIndex
return
result
case
fCharacterCounter
if
USE_OUT_OF_LINE_LOAD_NEXT_BYTE
block
b0
loadNextByte
block
fCurrentOffset
if
USE_TRY_CATCH_FOR_LOAD_NEXT_BYTE
block
fCurrentIndex
try
b0
fMostRecentByte
fMostRecentData
fCurrentIndex
catchClause
ex
b0
slowLoadNextByte
block
if
fCurrentIndex
CHUNK_SIZE
b0
slowLoadNextByte
b0
fMostRecentByte
fMostRecentData
fCurrentIndex
continue
case
return
ATTVALUE_RESULT_COMPLEX
case
return
ATTVALUE_RESULT_LESSTHAN
case
return
ATTVALUE_RESULT_INVALID_CHAR
block
if
skipMultiByteCharData
b0
return
ATTVALUE_RESULT_INVALID_CHAR
b0
fMostRecentByte
byte
fgAsciiEntityValueChar
scanEntityValue
int
qchar
int
createString
boolean
int
offset
fCurrentOffset
int
b0
fMostRecentByte
while
block
if
b0
block
switch
fgAsciiEntityValueChar
b0
case
if
b0
qchar
block
if
createString
return
ENTITYVALUE_RESULT_FINISHED
int
length
fCurrentOffset
offset
int
result
length
EMPTY_STRING
addString
offset
length
fCharacterCounter
if
USE_OUT_OF_LINE_LOAD_NEXT_BYTE
block
loadNextByte
block
fCurrentOffset
if
USE_TRY_CATCH_FOR_LOAD_NEXT_BYTE
block
fCurrentIndex
try
fMostRecentByte
fMostRecentData
fCurrentIndex
catchClause
ex
slowLoadNextByte
block
if
fCurrentIndex
CHUNK_SIZE
slowLoadNextByte
fMostRecentByte
fMostRecentData
fCurrentIndex
return
result
case
fCharacterCounter
if
USE_OUT_OF_LINE_LOAD_NEXT_BYTE
block
b0
loadNextByte
block
fCurrentOffset
if
USE_TRY_CATCH_FOR_LOAD_NEXT_BYTE
block
fCurrentIndex
try
b0
fMostRecentByte
fMostRecentData
fCurrentIndex
catchClause
ex
b0
slowLoadNextByte
block
if
fCurrentIndex
CHUNK_SIZE
b0
slowLoadNextByte
b0
fMostRecentByte
fMostRecentData
fCurrentIndex
continue
case
fLinefeedCounter
fCharacterCounter
if
USE_OUT_OF_LINE_LOAD_NEXT_BYTE
block
b0
loadNextByte
block
fCurrentOffset
if
USE_TRY_CATCH_FOR_LOAD_NEXT_BYTE
block
fCurrentIndex
try
b0
fMostRecentByte
fMostRecentData
fCurrentIndex
catchClause
ex
b0
slowLoadNextByte
block
if
fCurrentIndex
CHUNK_SIZE
b0
slowLoadNextByte
b0
fMostRecentByte
fMostRecentData
fCurrentIndex
continue
case
fCarriageReturnCounter
fCharacterCounter
if
USE_OUT_OF_LINE_LOAD_NEXT_BYTE
block
b0
loadNextByte
block
fCurrentOffset
if
USE_TRY_CATCH_FOR_LOAD_NEXT_BYTE
block
fCurrentIndex
try
b0
fMostRecentByte
fMostRecentData
fCurrentIndex
catchClause
ex
b0
slowLoadNextByte
block
if
fCurrentIndex
CHUNK_SIZE
b0
slowLoadNextByte
b0
fMostRecentByte
fMostRecentData
fCurrentIndex
if
b0
block
continue
fLinefeedCounter
if
USE_OUT_OF_LINE_LOAD_NEXT_BYTE
block
b0
loadNextByte
block
fCurrentOffset
if
USE_TRY_CATCH_FOR_LOAD_NEXT_BYTE
block
fCurrentIndex
try
b0
fMostRecentByte
fMostRecentData
fCurrentIndex
catchClause
ex
b0
slowLoadNextByte
block
if
fCurrentIndex
CHUNK_SIZE
b0
slowLoadNextByte
b0
fMostRecentByte
fMostRecentData
fCurrentIndex
continue
case
return
ENTITYVALUE_RESULT_REFERENCE
case
return
ENTITYVALUE_RESULT_PEREF
case
if
atEOF
fCurrentOffset
block
changeReaders
return
ENTITYVALUE_RESULT_END_OF_INPUT
case
return
ENTITYVALUE_RESULT_INVALID_CHAR
block
if
skipMultiByteCharData
b0
return
ENTITYVALUE_RESULT_INVALID_CHAR
b0
fMostRecentByte
scanExpectedName
boolean
fastcheck
char
expectedName
StringPool
CharArrayRange
char
expected
chars
int
offset
offset
int
len
length
int
b0
fMostRecentByte
int
ch
int
i
while
block
if
b0
block
ch
b0
if
i
len
break
if
ch
expected
offset
block
skipPastNmtoken
fastcheck
return
block
UTF8DataChunk
saveChunk
fCurrentChunk
int
saveIndex
fCurrentIndex
int
saveOffset
fCurrentOffset
int
b1
if
USE_OUT_OF_LINE_LOAD_NEXT_BYTE
block
b1
loadNextByte
block
fCurrentOffset
if
USE_TRY_CATCH_FOR_LOAD_NEXT_BYTE
block
fCurrentIndex
try
b1
fMostRecentData
fCurrentIndex
catchClause
ex
b1
slowLoadNextByte
block
if
fCurrentIndex
CHUNK_SIZE
b1
slowLoadNextByte
b1
fMostRecentByte
fMostRecentData
fCurrentIndex
if
b0
block
ch
b0
b1
if
i
len
break
if
ch
expected
offset
block
fCurrentChunk
saveChunk
fCurrentIndex
saveIndex
fCurrentOffset
saveOffset
fMostRecentData
toByteArray
fMostRecentByte
b0
skipPastNmtoken
fastcheck
return
block
int
b2
if
USE_OUT_OF_LINE_LOAD_NEXT_BYTE
block
b2
loadNextByte
block
fCurrentOffset
if
USE_TRY_CATCH_FOR_LOAD_NEXT_BYTE
block
fCurrentIndex
try
b2
fMostRecentData
fCurrentIndex
catchClause
ex
b2
slowLoadNextByte
block
if
fCurrentIndex
CHUNK_SIZE
b2
slowLoadNextByte
b2
fMostRecentByte
fMostRecentData
fCurrentIndex
if
b0
block
if
b0
b1
b0
b1
b2
block
fCurrentChunk
saveChunk
fCurrentIndex
saveIndex
fCurrentOffset
saveOffset
fMostRecentData
toByteArray
fMostRecentByte
b0
return
ch
b0
b1
b2
if
i
len
break
if
ch
expected
offset
block
fCurrentChunk
saveChunk
fCurrentIndex
saveIndex
fCurrentOffset
saveOffset
fMostRecentData
toByteArray
fMostRecentByte
b0
skipPastNmtoken
fastcheck
return
block
fCurrentChunk
saveChunk
fCurrentIndex
saveIndex
fCurrentOffset
saveOffset
fMostRecentData
toByteArray
fMostRecentByte
b0
return
i
offset
fCharacterCounter
fCurrentOffset
if
USE_TRY_CATCH_FOR_LOAD_NEXT_BYTE
block
fCurrentIndex
try
b0
fMostRecentByte
fMostRecentData
fCurrentIndex
catchClause
ex
b0
slowLoadNextByte
block
if
fCurrentIndex
CHUNK_SIZE
b0
slowLoadNextByte
b0
fMostRecentByte
fMostRecentData
fCurrentIndex
if
ch
fastcheck
return
if
ch
block
if
fgAsciiNameChar
ch
return
block
if
fgCharFlags
ch
E_NameCharFlag
return
skipPastNmtoken
fastcheck
return
scanQName
int
fastcheck
char
int
ch
fMostRecentByte
if
ch
block
if
fgAsciiInitialNameChar
ch
return
if
ch
return
block
if
fgCharFlags
ch
E_InitialNameCharFlag
return
int
offset
fCurrentOffset
int
index
fCurrentIndex
byte
data
fMostRecentData
int
prefixend
while
block
fCharacterCounter
fCurrentOffset
index
try
ch
data
index
catchClause
ex
ch
slowLoadNextByte
index
data
fMostRecentData
if
fastcheck
ch
break
if
ch
block
if
fgAsciiNameChar
ch
break
if
ch
block
if
prefixend
break
prefixend
fCurrentOffset
try
ch
data
index
catchClause
ex
UTF8DataChunk
savedChunk
fCurrentChunk
int
savedOffset
fCurrentOffset
ch
slowLoadNextByte
fCurrentChunk
savedChunk
fCurrentOffset
savedOffset
fMostRecentData
toByteArray
boolean
lpok
if
ch
block
if
fgAsciiInitialNameChar
ch
ch
lpok
block
if
fgCharFlags
ch
E_InitialNameCharFlag
lpok
ch
if
lpok
block
prefixend
break
block
if
fgCharFlags
ch
E_NameCharFlag
break
fCurrentIndex
index
fMostRecentByte
ch
int
length
fCurrentOffset
offset
int
nameIndex
addSymbol
offset
length
int
prefixIndex
prefixend
addSymbol
offset
prefixend
offset
int
localpartIndex
prefixend
nameIndex
addSymbol
prefixend
fCurrentOffset
prefixend
nameIndex
addQName
nameIndex
prefixIndex
localpartIndex
return
nameIndex
getMultiByteSymbolChar
int
b0
int
UTF8DataChunk
saveChunk
fCurrentChunk
int
saveIndex
fCurrentIndex
int
saveOffset
fCurrentOffset
int
b1
if
USE_OUT_OF_LINE_LOAD_NEXT_BYTE
block
b1
loadNextByte
block
fCurrentOffset
if
USE_TRY_CATCH_FOR_LOAD_NEXT_BYTE
block
fCurrentIndex
try
b1
fMostRecentData
fCurrentIndex
catchClause
ex
b1
slowLoadNextByte
block
if
fCurrentIndex
CHUNK_SIZE
b1
slowLoadNextByte
b1
fMostRecentByte
fMostRecentData
fCurrentIndex
if
b0
block
int
ch
b0
b1
if
fgCharFlags
ch
E_NameCharFlag
block
fCurrentChunk
saveChunk
fCurrentIndex
saveIndex
fCurrentOffset
saveOffset
fMostRecentData
toByteArray
fMostRecentByte
b0
return
loadNextByte
return
ch
int
b2
if
USE_OUT_OF_LINE_LOAD_NEXT_BYTE
block
b2
loadNextByte
block
fCurrentOffset
if
USE_TRY_CATCH_FOR_LOAD_NEXT_BYTE
block
fCurrentIndex
try
b2
fMostRecentData
fCurrentIndex
catchClause
ex
b2
slowLoadNextByte
block
if
fCurrentIndex
CHUNK_SIZE
b2
slowLoadNextByte
b2
fMostRecentByte
fMostRecentData
fCurrentIndex
if
b0
block
if
b0
b1
b0
b1
b2
block
fCurrentChunk
saveChunk
fCurrentIndex
saveIndex
fCurrentOffset
saveOffset
fMostRecentData
toByteArray
fMostRecentByte
b0
return
int
ch
b0
b1
b2
if
fgCharFlags
ch
E_NameCharFlag
block
fCurrentChunk
saveChunk
fCurrentIndex
saveIndex
fCurrentOffset
saveOffset
fMostRecentData
toByteArray
fMostRecentByte
b0
return
loadNextByte
return
ch
fCurrentChunk
saveChunk
fCurrentIndex
saveIndex
fCurrentOffset
saveOffset
fMostRecentData
toByteArray
fMostRecentByte
b0
return
scanName
int
fastcheck
char
int
b0
fMostRecentByte
int
ch
if
b0
block
if
fgAsciiInitialNameChar
b0
block
if
b0
atEOF
fCurrentOffset
block
return
changeReaders
scanName
fastcheck
return
ch
b0
block
UTF8DataChunk
saveChunk
fCurrentChunk
int
saveIndex
fCurrentIndex
int
saveOffset
fCurrentOffset
int
b1
if
USE_OUT_OF_LINE_LOAD_NEXT_BYTE
block
b1
loadNextByte
block
fCurrentOffset
if
USE_TRY_CATCH_FOR_LOAD_NEXT_BYTE
block
fCurrentIndex
try
b1
fMostRecentData
fCurrentIndex
catchClause
ex
b1
slowLoadNextByte
block
if
fCurrentIndex
CHUNK_SIZE
b1
slowLoadNextByte
b1
fMostRecentByte
fMostRecentData
fCurrentIndex
if
b0
block
ch
b0
b1
if
fgCharFlags
ch
E_InitialNameCharFlag
block
fCurrentChunk
saveChunk
fCurrentIndex
saveIndex
fCurrentOffset
saveOffset
fMostRecentData
toByteArray
fMostRecentByte
b0
return
block
int
b2
if
USE_OUT_OF_LINE_LOAD_NEXT_BYTE
block
b2
loadNextByte
block
fCurrentOffset
if
USE_TRY_CATCH_FOR_LOAD_NEXT_BYTE
block
fCurrentIndex
try
b2
fMostRecentData
fCurrentIndex
catchClause
ex
b2
slowLoadNextByte
block
if
fCurrentIndex
CHUNK_SIZE
b2
slowLoadNextByte
b2
fMostRecentByte
fMostRecentData
fCurrentIndex
if
b0
block
if
b0
b1
b0
b1
b2
block
fCurrentChunk
saveChunk
fCurrentIndex
saveIndex
fCurrentOffset
saveOffset
fMostRecentData
toByteArray
fMostRecentByte
b0
return
ch
b0
b1
b2
if
fgCharFlags
ch
E_InitialNameCharFlag
block
fCurrentChunk
saveChunk
fCurrentIndex
saveIndex
fCurrentOffset
saveOffset
fMostRecentData
toByteArray
fMostRecentByte
b0
return
block
fCurrentChunk
saveChunk
fCurrentIndex
saveIndex
fCurrentOffset
saveOffset
fMostRecentData
toByteArray
fMostRecentByte
b0
return
fCharacterCounter
if
USE_OUT_OF_LINE_LOAD_NEXT_BYTE
block
b0
loadNextByte
block
fCurrentOffset
if
USE_TRY_CATCH_FOR_LOAD_NEXT_BYTE
block
fCurrentIndex
try
b0
fMostRecentByte
fMostRecentData
fCurrentIndex
catchClause
ex
b0
slowLoadNextByte
block
if
fCurrentIndex
CHUNK_SIZE
b0
slowLoadNextByte
b0
fMostRecentByte
fMostRecentData
fCurrentIndex
return
scanMatchingName
ch
b0
fastcheck
scanMatchingName
int
ch
int
b0
int
fastcheck
int
SymbolCache
cache
getSymbolCache
int
cacheLines
fCacheLines
char
symbolChars
fSymbolChars
boolean
lengthOfOne
fastcheck
fMostRecentByte
int
startOffset
fSymbolCharsOffset
int
entry
int
entries
cacheLines
entry
int
offset
entries
CACHE_RECORD_SIZE
int
totalMisses
if
lengthOfOne
block
while
offset
block
if
entries
offset
CHAR_OFFSET
ch
block
if
entries
offset
INDEX_OFFSET
block
int
symbolIndex
entries
offset
INDEX_OFFSET
if
totalMisses
updateCacheLine
symbolIndex
totalMisses
return
symbolIndex
break
offset
CACHE_RECORD_SIZE
totalMisses
try
symbolChars
fSymbolCharsOffset
char
ch
catchClause
ex
symbolChars
char
fSymbolCharsOffset
arraycopy
fSymbolChars
symbolChars
fSymbolCharsOffset
fSymbolChars
symbolChars
symbolChars
fSymbolCharsOffset
char
ch
fSymbolCharsOffset
if
offset
block
offset
entries
CACHE_RECORD_SIZE
entries
try
entries
offset
CHAR_OFFSET
ch
catchClause
ex
int
newSize
offset
entries
int
newSize
arraycopy
cacheLines
entry
entries
offset
cacheLines
entry
entries
entries
offset
CHAR_OFFSET
ch
entries
offset
NEXT_OFFSET
int
result
createNonMatchingSymbol
startOffset
entry
entries
offset
return
result
try
symbolChars
fSymbolCharsOffset
char
ch
catchClause
ex
symbolChars
char
fSymbolCharsOffset
arraycopy
fSymbolChars
symbolChars
fSymbolCharsOffset
fSymbolChars
symbolChars
symbolChars
fSymbolCharsOffset
char
ch
fSymbolCharsOffset
int
depth
while
block
if
offset
break
if
entries
offset
CHAR_OFFSET
ch
block
offset
CACHE_RECORD_SIZE
totalMisses
continue
if
b0
block
ch
getMultiByteSymbolChar
b0
b0
fMostRecentByte
if
b0
fastcheck
fgAsciiNameChar
b0
block
ch
block
ch
b0
fCharacterCounter
if
USE_OUT_OF_LINE_LOAD_NEXT_BYTE
block
b0
loadNextByte
block
fCurrentOffset
if
USE_TRY_CATCH_FOR_LOAD_NEXT_BYTE
block
fCurrentIndex
try
b0
fMostRecentByte
fMostRecentData
fCurrentIndex
catchClause
ex
b0
slowLoadNextByte
block
if
fCurrentIndex
CHUNK_SIZE
b0
slowLoadNextByte
b0
fMostRecentByte
fMostRecentData
fCurrentIndex
if
ch
block
if
entries
offset
INDEX_OFFSET
block
return
createNonMatchingSymbol
startOffset
entry
entries
offset
fSymbolCharsOffset
startOffset
int
symbolIndex
entries
offset
INDEX_OFFSET
if
totalMisses
depth
updateCacheLine
symbolIndex
totalMisses
depth
return
symbolIndex
try
symbolChars
fSymbolCharsOffset
char
ch
catchClause
ex
symbolChars
char
fSymbolCharsOffset
arraycopy
fSymbolChars
symbolChars
fSymbolCharsOffset
fSymbolChars
symbolChars
symbolChars
fSymbolCharsOffset
char
ch
fSymbolCharsOffset
entry
entries
offset
NEXT_OFFSET
try
entries
cacheLines
entry
catchClause
ex
if
entry
block
entry
fCacheLineCount
entries
offset
NEXT_OFFSET
entry
entries
int
INITIAL_CACHE_RECORD_COUNT
CACHE_RECORD_SIZE
try
cacheLines
entry
entries
catchClause
ex2
cacheLines
int
entry
arraycopy
fCacheLines
cacheLines
entry
fCacheLines
cacheLines
cacheLines
entry
entries
block
entries
cacheLines
entry
throw
RuntimeException
offset
entries
CACHE_RECORD_SIZE
depth
if
offset
offset
entries
CACHE_RECORD_SIZE
while
block
entries
try
entries
offset
CHAR_OFFSET
ch
catchClause
ex
int
newSize
offset
entries
int
newSize
arraycopy
cacheLines
entry
entries
offset
cacheLines
entry
entries
entries
offset
CHAR_OFFSET
ch
if
b0
block
ch
getMultiByteSymbolChar
b0
b0
fMostRecentByte
if
b0
fastcheck
fgAsciiNameChar
b0
block
ch
block
ch
b0
fCharacterCounter
if
USE_OUT_OF_LINE_LOAD_NEXT_BYTE
block
b0
loadNextByte
block
fCurrentOffset
if
USE_TRY_CATCH_FOR_LOAD_NEXT_BYTE
block
fCurrentIndex
try
b0
fMostRecentByte
fMostRecentData
fCurrentIndex
catchClause
ex
b0
slowLoadNextByte
block
if
fCurrentIndex
CHUNK_SIZE
b0
slowLoadNextByte
b0
fMostRecentByte
fMostRecentData
fCurrentIndex
if
ch
block
entries
offset
NEXT_OFFSET
break
entry
fCacheLineCount
entries
offset
INDEX_OFFSET
entries
offset
NEXT_OFFSET
entry
entries
int
INITIAL_CACHE_RECORD_COUNT
CACHE_RECORD_SIZE
try
cacheLines
entry
entries
catchClause
ex
cacheLines
int
entry
arraycopy
fCacheLines
cacheLines
entry
fCacheLines
cacheLines
cacheLines
entry
entries
offset
try
symbolChars
fSymbolCharsOffset
char
ch
catchClause
ex
symbolChars
char
fSymbolCharsOffset
arraycopy
fSymbolChars
symbolChars
fSymbolCharsOffset
fSymbolChars
symbolChars
symbolChars
fSymbolCharsOffset
char
ch
fSymbolCharsOffset
int
result
createNonMatchingSymbol
startOffset
entry
entries
offset
return
result
recognizeMarkup
int
b0
int
elementType
int
switch
b0
case
return
CONTENT_RESULT_MARKUP_END_OF_INPUT
case
fCharacterCounter
loadNextByte
return
CONTENT_RESULT_START_OF_PI
case
fCharacterCounter
b0
loadNextByte
if
b0
block
fCharacterCounter
fCurrentOffset
return
CONTENT_RESULT_MARKUP_END_OF_INPUT
if
b0
block
fCharacterCounter
b0
loadNextByte
if
b0
block
fCharacterCounter
fCurrentOffset
return
CONTENT_RESULT_MARKUP_END_OF_INPUT
if
b0
block
fCharacterCounter
b0
loadNextByte
return
CONTENT_RESULT_START_OF_COMMENT
break
if
b0
block
for
forControl
int
i
i
i
block
fCharacterCounter
b0
loadNextByte
if
b0
block
fCharacterCounter
i
fCurrentOffset
i
return
CONTENT_RESULT_MARKUP_END_OF_INPUT
if
b0
cdata_string
i
block
return
CONTENT_RESULT_MARKUP_NOT_RECOGNIZED
fCharacterCounter
loadNextByte
return
CONTENT_RESULT_START_OF_CDSECT
break
case
fCharacterCounter
if
USE_OUT_OF_LINE_LOAD_NEXT_BYTE
block
b0
loadNextByte
block
fCurrentOffset
if
USE_TRY_CATCH_FOR_LOAD_NEXT_BYTE
block
fCurrentIndex
try
b0
fMostRecentByte
fMostRecentData
fCurrentIndex
catchClause
ex
b0
slowLoadNextByte
block
if
fCurrentIndex
CHUNK_SIZE
b0
slowLoadNextByte
b0
fMostRecentByte
fMostRecentData
fCurrentIndex
int
expectedName
elementType
getCharArrayRange
expectedName
fCharArrayRange
char
expected
chars
int
offset
offset
int
len
length
if
b0
expected
offset
block
UTF8DataChunk
savedChunk
fCurrentChunk
int
savedIndex
fCurrentIndex
int
savedOffset
fCurrentOffset
for
forControl
int
i
i
len
i
block
if
USE_OUT_OF_LINE_LOAD_NEXT_BYTE
block
b0
loadNextByte
block
fCurrentOffset
if
USE_TRY_CATCH_FOR_LOAD_NEXT_BYTE
block
fCurrentIndex
try
b0
fMostRecentByte
fMostRecentData
fCurrentIndex
catchClause
ex
b0
slowLoadNextByte
block
if
fCurrentIndex
CHUNK_SIZE
b0
slowLoadNextByte
b0
fMostRecentByte
fMostRecentData
fCurrentIndex
if
b0
expected
offset
block
fCurrentChunk
savedChunk
fCurrentIndex
savedIndex
fCurrentOffset
savedOffset
fMostRecentData
toByteArray
fMostRecentByte
fMostRecentData
savedIndex
return
CONTENT_RESULT_START_OF_ETAG
fCharacterCounter
len
fCharacterCounter
if
USE_OUT_OF_LINE_LOAD_NEXT_BYTE
block
b0
loadNextByte
block
fCurrentOffset
if
USE_TRY_CATCH_FOR_LOAD_NEXT_BYTE
block
fCurrentIndex
try
b0
fMostRecentByte
fMostRecentData
fCurrentIndex
catchClause
ex
b0
slowLoadNextByte
block
if
fCurrentIndex
CHUNK_SIZE
b0
slowLoadNextByte
b0
fMostRecentByte
fMostRecentData
fCurrentIndex
if
b0
block
fCharacterCounter
if
USE_OUT_OF_LINE_LOAD_NEXT_BYTE
block
loadNextByte
block
fCurrentOffset
if
USE_TRY_CATCH_FOR_LOAD_NEXT_BYTE
block
fCurrentIndex
try
fMostRecentByte
fMostRecentData
fCurrentIndex
catchClause
ex
slowLoadNextByte
block
if
fCurrentIndex
CHUNK_SIZE
slowLoadNextByte
fMostRecentByte
fMostRecentData
fCurrentIndex
return
CONTENT_RESULT_MATCHING_ETAG
while
b0
b0
b0
b0
block
if
b0
block
fLinefeedCounter
fCharacterCounter
b0
loadNextByte
if
b0
block
fCarriageReturnCounter
fCharacterCounter
b0
loadNextByte
if
b0
block
fLinefeedCounter
b0
loadNextByte
block
fCharacterCounter
b0
loadNextByte
if
b0
block
fCharacterCounter
if
USE_OUT_OF_LINE_LOAD_NEXT_BYTE
block
loadNextByte
block
fCurrentOffset
if
USE_TRY_CATCH_FOR_LOAD_NEXT_BYTE
block
fCurrentIndex
try
fMostRecentByte
fMostRecentData
fCurrentIndex
catchClause
ex
slowLoadNextByte
block
if
fCurrentIndex
CHUNK_SIZE
slowLoadNextByte
fMostRecentByte
fMostRecentData
fCurrentIndex
return
CONTENT_RESULT_MATCHING_ETAG
fCurrentChunk
savedChunk
fCurrentIndex
savedIndex
fCurrentOffset
savedOffset
fMostRecentData
toByteArray
fMostRecentByte
fMostRecentData
savedIndex
return
CONTENT_RESULT_START_OF_ETAG
case
return
CONTENT_RESULT_START_OF_ELEMENT
return
CONTENT_RESULT_MARKUP_NOT_RECOGNIZED
recognizeReference
int
ch
int
if
ch
block
return
CONTENT_RESULT_REFERENCE_END_OF_INPUT
if
ch
block
fCharacterCounter
loadNextByte
return
CONTENT_RESULT_START_OF_CHARREF
block
return
CONTENT_RESULT_START_OF_ENTITYREF
scanContent
int
elementType
int
if
fCallClearPreviousChunk
clearPreviousChunk
fCallClearPreviousChunk
fCharDataLength
int
charDataOffset
fCurrentOffset
int
ch
fMostRecentByte
if
ch
block
switch
fgAsciiWSCharData
ch
case
if
fSendCharDataAsCharArray
block
try
fCharacters
fCharDataLength
char
ch
fCharDataLength
catchClause
ex
slowAppendCharData
ch
fCharacterCounter
if
USE_OUT_OF_LINE_LOAD_NEXT_BYTE
block
ch
loadNextByte
block
fCurrentOffset
if
USE_TRY_CATCH_FOR_LOAD_NEXT_BYTE
block
fCurrentIndex
try
ch
fMostRecentByte
fMostRecentData
fCurrentIndex
catchClause
ex
ch
slowLoadNextByte
block
if
fCurrentIndex
CHUNK_SIZE
ch
slowLoadNextByte
ch
fMostRecentByte
fMostRecentData
fCurrentIndex
break
case
fCharacterCounter
if
USE_OUT_OF_LINE_LOAD_NEXT_BYTE
block
ch
loadNextByte
block
fCurrentOffset
if
USE_TRY_CATCH_FOR_LOAD_NEXT_BYTE
block
fCurrentIndex
try
ch
fMostRecentByte
fMostRecentData
fCurrentIndex
catchClause
ex
ch
slowLoadNextByte
block
if
fCurrentIndex
CHUNK_SIZE
ch
slowLoadNextByte
ch
fMostRecentByte
fMostRecentData
fCurrentIndex
if
fInCDSect
block
return
recognizeMarkup
ch
elementType
if
fSendCharDataAsCharArray
appendCharData
break
case
fCharacterCounter
ch
loadNextByte
if
fInCDSect
block
return
recognizeReference
ch
if
fSendCharDataAsCharArray
appendCharData
break
case
fCharacterCounter
ch
loadNextByte
if
ch
block
if
fSendCharDataAsCharArray
appendCharData
break
if
fCurrentIndex
CHUNK_SIZE
block
UTF8DataChunk
saveChunk
fCurrentChunk
int
saveIndex
fCurrentIndex
int
saveOffset
fCurrentOffset
if
loadNextByte
block
fCurrentChunk
saveChunk
fCurrentIndex
saveIndex
fCurrentOffset
saveOffset
fMostRecentData
toByteArray
fMostRecentByte
if
fSendCharDataAsCharArray
appendCharData
break
block
if
fMostRecentData
fCurrentIndex
block
if
fSendCharDataAsCharArray
appendCharData
break
fCurrentIndex
fCurrentOffset
loadNextByte
fCharacterCounter
return
CONTENT_RESULT_END_OF_CDSECT
case
if
ch
atEOF
fCurrentOffset
block
changeReaders
return
CONTENT_RESULT_INVALID_CHAR
return
CONTENT_RESULT_INVALID_CHAR
case
do
ch
ch
ch
ch
block
if
ch
block
fLinefeedCounter
fCharacterCounter
if
ch
block
fCarriageReturnCounter
fCharacterCounter
if
USE_OUT_OF_LINE_LOAD_NEXT_BYTE
block
ch
loadNextByte
block
fCurrentOffset
if
USE_TRY_CATCH_FOR_LOAD_NEXT_BYTE
block
fCurrentIndex
try
ch
fMostRecentByte
fMostRecentData
fCurrentIndex
catchClause
ex
ch
slowLoadNextByte
block
if
fCurrentIndex
CHUNK_SIZE
ch
slowLoadNextByte
ch
fMostRecentByte
fMostRecentData
fCurrentIndex
if
ch
block
if
fSendCharDataAsCharArray
appendCharData
if
ch
ch
ch
continue
break
fLinefeedCounter
block
fCharacterCounter
if
fSendCharDataAsCharArray
block
try
fCharacters
fCharDataLength
char
ch
fCharDataLength
catchClause
ex
slowAppendCharData
ch
if
USE_OUT_OF_LINE_LOAD_NEXT_BYTE
block
ch
loadNextByte
block
fCurrentOffset
if
USE_TRY_CATCH_FOR_LOAD_NEXT_BYTE
block
fCurrentIndex
try
ch
fMostRecentByte
fMostRecentData
fCurrentIndex
catchClause
ex
ch
slowLoadNextByte
block
if
fCurrentIndex
CHUNK_SIZE
ch
slowLoadNextByte
ch
fMostRecentByte
fMostRecentData
fCurrentIndex
if
ch
block
switch
fgAsciiCharData
ch
case
if
fSendCharDataAsCharArray
appendCharData
ch
fCharacterCounter
ch
loadNextByte
break
case
if
fInCDSect
block
if
fSendCharDataAsCharArray
block
processWhitespace
fCharacters
fCharDataLength
block
int
stringIndex
addString
charDataOffset
fCurrentOffset
charDataOffset
processWhitespace
stringIndex
fCharacterCounter
if
USE_OUT_OF_LINE_LOAD_NEXT_BYTE
block
ch
loadNextByte
block
fCurrentOffset
if
USE_TRY_CATCH_FOR_LOAD_NEXT_BYTE
block
fCurrentIndex
try
ch
fMostRecentByte
fMostRecentData
fCurrentIndex
catchClause
ex
ch
slowLoadNextByte
block
if
fCurrentIndex
CHUNK_SIZE
ch
slowLoadNextByte
ch
fMostRecentByte
fMostRecentData
fCurrentIndex
return
recognizeMarkup
ch
elementType
if
fSendCharDataAsCharArray
appendCharData
fCharacterCounter
ch
loadNextByte
break
case
if
fInCDSect
block
whitespace
charDataOffset
fCurrentOffset
fCharacterCounter
ch
loadNextByte
return
recognizeReference
ch
if
fSendCharDataAsCharArray
appendCharData
fCharacterCounter
ch
loadNextByte
break
case
int
endOffset
fCurrentOffset
ch
loadNextByte
if
ch
block
fCharacterCounter
if
fSendCharDataAsCharArray
appendCharData
break
if
fCurrentIndex
CHUNK_SIZE
block
UTF8DataChunk
saveChunk
fCurrentChunk
int
saveIndex
fCurrentIndex
int
saveOffset
fCurrentOffset
if
loadNextByte
block
fCurrentChunk
saveChunk
fCurrentIndex
saveIndex
fCurrentOffset
saveOffset
fMostRecentData
toByteArray
fMostRecentByte
fCharacterCounter
if
fSendCharDataAsCharArray
appendCharData
break
block
if
fMostRecentData
fCurrentIndex
block
fCharacterCounter
if
fSendCharDataAsCharArray
appendCharData
break
fCurrentIndex
fCurrentOffset
loadNextByte
whitespace
charDataOffset
endOffset
fCharacterCounter
return
CONTENT_RESULT_END_OF_CDSECT
case
whitespace
charDataOffset
fCurrentOffset
if
ch
atEOF
fCurrentOffset
block
changeReaders
return
CONTENT_RESULT_INVALID_CHAR
return
CONTENT_RESULT_INVALID_CHAR
block
if
fSendCharDataAsCharArray
block
if
copyMultiByteCharData
ch
block
whitespace
charDataOffset
fCurrentOffset
return
CONTENT_RESULT_INVALID_CHAR
if
skipMultiByteCharData
ch
block
whitespace
charDataOffset
fCurrentOffset
return
CONTENT_RESULT_INVALID_CHAR
break
block
if
fSendCharDataAsCharArray
block
if
copyMultiByteCharData
ch
block
return
CONTENT_RESULT_INVALID_CHAR
block
if
skipMultiByteCharData
ch
block
return
CONTENT_RESULT_INVALID_CHAR
if
fSendCharDataAsCharArray
ch
copyAsciiCharData
ch
skipAsciiCharData
while
block
if
ch
block
switch
fgAsciiCharData
ch
case
if
fSendCharDataAsCharArray
appendCharData
ch
fCharacterCounter
ch
loadNextByte
break
case
if
fInCDSect
block
if
fSendCharDataAsCharArray
block
processCharacters
fCharacters
fCharDataLength
block
int
stringIndex
addString
charDataOffset
fCurrentOffset
charDataOffset
processCharacters
stringIndex
fCharacterCounter
if
USE_OUT_OF_LINE_LOAD_NEXT_BYTE
block
ch
loadNextByte
block
fCurrentOffset
if
USE_TRY_CATCH_FOR_LOAD_NEXT_BYTE
block
fCurrentIndex
try
ch
fMostRecentByte
fMostRecentData
fCurrentIndex
catchClause
ex
ch
slowLoadNextByte
block
if
fCurrentIndex
CHUNK_SIZE
ch
slowLoadNextByte
ch
fMostRecentByte
fMostRecentData
fCurrentIndex
return
recognizeMarkup
ch
elementType
if
fSendCharDataAsCharArray
appendCharData
fCharacterCounter
ch
loadNextByte
break
case
if
fInCDSect
block
characters
charDataOffset
fCurrentOffset
fCharacterCounter
ch
loadNextByte
return
recognizeReference
ch
if
fSendCharDataAsCharArray
appendCharData
fCharacterCounter
ch
loadNextByte
break
case
int
endOffset
fCurrentOffset
ch
loadNextByte
if
ch
block
fCharacterCounter
if
fSendCharDataAsCharArray
appendCharData
break
if
fCurrentIndex
CHUNK_SIZE
block
UTF8DataChunk
saveChunk
fCurrentChunk
int
saveIndex
fCurrentIndex
int
saveOffset
fCurrentOffset
if
loadNextByte
block
fCurrentChunk
saveChunk
fCurrentIndex
saveIndex
fCurrentOffset
saveOffset
fMostRecentData
toByteArray
fMostRecentByte
fCharacterCounter
if
fSendCharDataAsCharArray
appendCharData
break
block
if
fMostRecentData
fCurrentIndex
block
fCharacterCounter
if
fSendCharDataAsCharArray
appendCharData
break
fCurrentIndex
fCurrentOffset
loadNextByte
characters
charDataOffset
endOffset
fCharacterCounter
return
CONTENT_RESULT_END_OF_CDSECT
case
if
ch
block
if
fSendCharDataAsCharArray
appendCharData
ch
fLinefeedCounter
fCharacterCounter
ch
loadNextByte
break
if
ch
block
if
fSendCharDataAsCharArray
appendCharData
fCarriageReturnCounter
fCharacterCounter
ch
loadNextByte
if
ch
block
fLinefeedCounter
ch
loadNextByte
break
characters
charDataOffset
fCurrentOffset
if
ch
atEOF
fCurrentOffset
block
changeReaders
return
CONTENT_RESULT_INVALID_CHAR
return
CONTENT_RESULT_INVALID_CHAR
block
if
fSendCharDataAsCharArray
block
if
copyMultiByteCharData
ch
block
characters
charDataOffset
fCurrentOffset
return
CONTENT_RESULT_INVALID_CHAR
if
skipMultiByteCharData
ch
block
characters
charDataOffset
fCurrentOffset
return
CONTENT_RESULT_INVALID_CHAR
ch
fMostRecentByte
copyMultiByteCharData
boolean
b0
int
UTF8DataChunk
saveChunk
fCurrentChunk
int
saveOffset
fCurrentOffset
int
saveIndex
fCurrentIndex
int
b1
loadNextByte
if
b0
block
int
ch
b0
b1
appendCharData
ch
loadNextByte
return
int
b2
loadNextByte
if
b0
block
if
b0
b1
b0
b1
b2
block
fCurrentChunk
saveChunk
fCurrentIndex
saveIndex
fCurrentOffset
saveOffset
fMostRecentData
toByteArray
fMostRecentByte
b0
return
int
ch
b0
b1
b2
appendCharData
ch
loadNextByte
return
int
b3
loadNextByte
if
b0
b0
b1
block
fCurrentChunk
saveChunk
fCurrentIndex
saveIndex
fCurrentOffset
saveOffset
fMostRecentData
toByteArray
fMostRecentByte
b0
return
int
ch
b0
b1
b2
b3
if
ch
block
appendCharData
ch
block
appendCharData
ch
appendCharData
ch
loadNextByte
return
skipMultiByteCharData
boolean
b0
int
UTF8DataChunk
saveChunk
fCurrentChunk
int
saveOffset
fCurrentOffset
int
saveIndex
fCurrentIndex
int
b1
loadNextByte
if
b0
block
loadNextByte
return
int
b2
loadNextByte
if
b0
block
if
b0
b1
b0
b1
b2
block
fCurrentChunk
saveChunk
fCurrentIndex
saveIndex
fCurrentOffset
saveOffset
fMostRecentData
toByteArray
fMostRecentByte
b0
return
loadNextByte
return
int
b3
loadNextByte
if
b0
b0
b1
block
fCurrentChunk
saveChunk
fCurrentIndex
saveIndex
fCurrentOffset
saveOffset
fMostRecentData
toByteArray
fMostRecentByte
b0
return
loadNextByte
return
copyAsciiCharData
int
int
srcIndex
fCurrentIndex
int
offset
fCurrentOffset
srcIndex
byte
data
fMostRecentData
int
dstIndex
fCharDataLength
boolean
skiplf
while
block
int
ch
try
ch
data
srcIndex
catchClause
ex
offset
srcIndex
slowLoadNextByte
srcIndex
data
fMostRecentData
ch
data
srcIndex
if
ch
block
fCurrentOffset
offset
srcIndex
fCurrentIndex
srcIndex
fMostRecentByte
ch
return
ch
if
fgAsciiCharData
ch
block
fCharacterCounter
skiplf
if
ch
block
fLinefeedCounter
if
skiplf
block
skiplf
srcIndex
continue
fCharacterCounter
if
ch
block
fCarriageReturnCounter
fCharacterCounter
skiplf
ch
block
fCurrentOffset
offset
srcIndex
fCurrentIndex
srcIndex
fMostRecentByte
ch
return
ch
srcIndex
try
fCharacters
fCharDataLength
char
ch
fCharDataLength
catchClause
ex
slowAppendCharData
ch
skipAsciiCharData
int
int
srcIndex
fCurrentIndex
int
offset
fCurrentOffset
srcIndex
byte
data
fMostRecentData
while
block
int
ch
try
ch
data
srcIndex
catchClause
ex
offset
srcIndex
slowLoadNextByte
srcIndex
data
fMostRecentData
ch
data
srcIndex
if
ch
block
fCurrentOffset
offset
srcIndex
fCurrentIndex
srcIndex
fMostRecentByte
ch
return
ch
if
fgAsciiCharData
ch
block
fCharacterCounter
if
ch
block
fLinefeedCounter
fCharacterCounter
if
ch
block
fCarriageReturnCounter
fCharacterCounter
block
fCurrentOffset
offset
srcIndex
fCurrentIndex
srcIndex
fMostRecentByte
ch
return
ch
srcIndex
char
fCharacters
char
CHUNK_SIZE
int
fCharDataLength
appendCharData
ch
int
try
fCharacters
fCharDataLength
char
ch
fCharDataLength
catchClause
ex
slowAppendCharData
ch
slowAppendCharData
ch
int
characters
fCharDataLength
fCharDataLength
fCharacters
fCharDataLength
char
ch
characters
offset
int
endOffset
int
if
fSendCharDataAsCharArray
block
int
stringIndex
addString
offset
endOffset
offset
processCharacters
stringIndex
return
processCharacters
fCharacters
fCharDataLength
whitespace
offset
int
endOffset
int
if
fSendCharDataAsCharArray
block
int
stringIndex
addString
offset
endOffset
offset
processWhitespace
stringIndex
return
processWhitespace
fCharacters
fCharDataLength
char
cdata_string
StringPool
CharArrayRange
fCharArrayRange
InputStream
fInputStream
StringPool
fStringPool
UTF8DataChunk
fCurrentChunk
int
fCurrentIndex
byte
fMostRecentData
int
fMostRecentByte
int
fLength
boolean
fCallClearPreviousChunk
fillCurrentChunk
int
byte
buf
toByteArray
if
fInputStream
block
if
buf
buf
byte
buf
fMostRecentData
buf
fCurrentIndex
setByteArray
fMostRecentData
return
fMostRecentByte
fMostRecentData
if
buf
buf
byte
CHUNK_SIZE
int
offset
int
capacity
CHUNK_SIZE
int
result
do
capacity
block
try
result
read
buf
offset
capacity
catchClause
ex
result
if
result
block
close
fInputStream
try
buf
offset
catchClause
ex
break
if
result
block
offset
result
capacity
result
fMostRecentData
buf
fLength
offset
fCurrentIndex
setByteArray
fMostRecentData
return
fMostRecentByte
fMostRecentData
XMLEntityReader
