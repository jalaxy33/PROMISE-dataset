RealValidator
double
fMaxInclusive
boolean
fIsMaxInclusive
double
fMaxExclusive
boolean
fIsMaxExclusive
double
fMinInclusive
boolean
fIsMinInclusive
double
fMinExclusive
boolean
fIsMinExclusive
double
fMinAbsoluteValue
boolean
fIsMinAbsoluteValue
double
fMaxAbsoluteValue
boolean
fIsMaxAbsoluteValue
double
fEnumValues
boolean
fHasEnums
RealValidator
fBaseValidator
DatatypeMessageProvider
fMessageProvider
DatatypeMessageProvider
Locale
fLocale
validate
content
String
double
d
try
d
valueOf
doubleValue
content
catchClause
nfe
throw
InvalidDatatypeValueException
getErrorString
NotReal
MSG_NONE
Object
content
boundsCheck
d
if
fHasEnums
enumCheck
d
validate
contentIndex
int
ensureFacetsAreConsistent
boolean
facets
Hashtable
boolean
facetsAreConsistent
for
forControl
Enumeration
e
keys
facetsAreConsistent
hasMoreElements
block
String
key
String
nextElement
String
value
if
equals
ENUMERATION
continue
value
String
get
key
double
realValue
try
realValue
valueOf
doubleValue
value
catchClause
nfe
facetsAreConsistent
if
equals
MININCLUSIVE
fIsMinInclusive
block
facetsAreConsistent
fMinInclusive
realValue
if
equals
MINEXCLUSIVE
fIsMinExclusive
block
facetsAreConsistent
fMinExclusive
realValue
if
equals
MAXINCLUSIVE
fIsMaxInclusive
block
facetsAreConsistent
fMaxInclusive
realValue
if
equals
MAXEXCLUSIVE
fIsMaxExclusive
block
facetsAreConsistent
fMaxExclusive
realValue
if
equals
MINABSOLUTEVALUE
fIsMinAbsoluteValue
block
facetsAreConsistent
fMinAbsoluteValue
realValue
if
equals
MAXABSOLUTEVALUE
fIsMaxAbsoluteValue
block
facetsAreConsistent
fMaxAbsoluteValue
realValue
return
facetsAreConsistent
setFacets
facets
Hashtable
if
fBaseValidator
if
ensureFacetsAreConsistent
facets
throw
IllegalFacetValueException
getErrorString
FacetsInconsistent
MSG_NONE
fIsMinInclusive
fIsMinExclusive
fIsMaxInclusive
fIsMaxExclusive
fHasEnums
for
forControl
Enumeration
e
keys
hasMoreElements
block
String
key
String
nextElement
String
value
if
equals
ENUMERATION
continue
value
String
get
key
double
realValue
try
realValue
valueOf
doubleValue
value
catchClause
nfe
throw
IllegalFacetValueException
getErrorString
IllegalFacetValue
MSG_NONE
Object
value
key
if
equals
MININCLUSIVE
block
fIsMinInclusive
fMinInclusive
realValue
if
equals
MINEXCLUSIVE
block
fIsMinExclusive
fMinExclusive
realValue
if
equals
MAXINCLUSIVE
block
fIsMaxInclusive
fMaxInclusive
realValue
if
equals
MAXEXCLUSIVE
block
fIsMaxExclusive
fMaxExclusive
realValue
if
equals
MINABSOLUTEVALUE
block
fIsMinAbsoluteValue
fMinAbsoluteValue
realValue
if
equals
MAXABSOLUTEVALUE
block
fIsMaxAbsoluteValue
fMaxAbsoluteValue
realValue
if
equals
ENUMERATION
block
if
equals
PRECISION
equals
SCALE
equals
LENGTH
equals
MAXLENGTH
equals
LITERAL
equals
LEXICALREPRESENTATION
equals
LEXICAL
throw
IllegalFacetException
getErrorString
IllegalRealFacet
MSG_NONE
throw
UnknownFacetException
getErrorString
UnknownFacet
MSG_NONE
Object
key
Vector
v
Vector
get
ENUMERATION
if
v
block
fHasEnums
fEnumValues
double
size
for
forControl
int
i
i
size
i
try
fEnumValues
i
valueOf
doubleValue
String
elementAt
i
boundsCheck
fEnumValues
i
catchClause
idve
throw
IllegalFacetValueException
getErrorString
InvalidEnumValue
MSG_NONE
Object
elementAt
i
catchClause
nfe
println
setFacets
facets
int
setBasetype
base
DatatypeValidator
fBaseValidator
RealValidator
base
boundsCheck
d
double
boolean
minOk
boolean
maxOk
if
fIsMaxInclusive
maxOk
d
fMaxInclusive
if
fIsMaxExclusive
maxOk
d
fMaxExclusive
maxOk
fIsMaxInclusive
fIsMaxExclusive
if
fIsMinInclusive
minOk
d
fMinInclusive
if
fIsMinExclusive
minOk
d
fMinInclusive
minOk
fIsMinInclusive
fIsMinExclusive
if
minOk
maxOk
throw
InvalidDatatypeValueException
getErrorString
OutOfBounds
MSG_NONE
Object
Double
d
enumCheck
v
double
for
forControl
int
i
i
length
i
block
if
v
fEnumValues
i
return
throw
InvalidDatatypeValueException
getErrorString
NotAnEnumValue
MSG_NONE
Object
Double
v
setLocale
locale
Locale
getErrorString
String
major
int
minor
int
args
Object
try
return
createMessage
fLocale
major
minor
args
catchClause
e
return
minor
InternalDatatypeValidator
