IntPair
int
first
second
Serializable
CharUnit
char
ch
boolean
bk
Serializable
RE
String
s_version
ResourceBundle
messages
getBundle
getDefault
REToken
firstToken
lastToken
int
numSubs
int
minimumLength
int
REG_ICASE
int
REG_DOT_NEWLINE
int
REG_MULTILINE
int
REG_NOTBOL
int
REG_NOTEOL
int
REG_ANCHORINDEX
int
REG_NO_INTERPOLATE
version
String
return
s_version
getLocalizedMessage
String
key
String
return
getString
key
RE
pattern
Object
pattern
RE_SYNTAX_PERL5
RE
pattern
Object
cflags
int
pattern
cflags
RE_SYNTAX_PERL5
RE
pattern
Object
cflags
int
syntax
RESyntax
pattern
cflags
syntax
RE
first
REToken
last
REToken
subs
int
subIndex
int
minLength
int
subIndex
firstToken
first
lastToken
last
numSubs
subs
minimumLength
minLength
addToken
RETokenEndSub
subIndex
RE
patternObj
Object
cflags
int
syntax
RESyntax
myIndex
int
nextSub
int
myIndex
char
pattern
if
patternObj
String
block
pattern
String
patternObj
if
patternObj
char
block
pattern
char
patternObj
if
patternObj
StringBuffer
block
pattern
char
StringBuffer
patternObj
StringBuffer
patternObj
block
pattern
toString
toCharArray
int
pLength
length
numSubs
Vector
branches
firstToken
lastToken
boolean
insens
cflags
REG_ICASE
int
index
CharUnit
unit
CharUnit
IntPair
minMax
IntPair
REToken
currentToken
char
ch
while
index
pLength
block
index
getCharUnit
pattern
index
unit
if
ch
get
RE_NO_BK_VBAR
bk
get
RE_NEWLINE_ALT
ch
bk
get
RE_LIMITED_OPS
block
addToken
currentToken
RE
theBranch
RE
firstToken
lastToken
numSubs
subIndex
minimumLength
if
branches
block
branches
Vector
minimumLength
addElement
theBranch
firstToken
lastToken
currentToken
if
ch
get
RE_INTERVALS
get
RE_NO_BK_BRACES
bk
block
int
newIndex
getMinMax
pattern
index
minMax
syntax
if
newIndex
index
block
if
first
second
throw
REException
getLocalizedMessage
REG_BADRPT
newIndex
if
currentToken
throw
REException
getLocalizedMessage
REG_BADRPT
newIndex
if
currentToken
RETokenRepeated
throw
REException
getLocalizedMessage
REG_BADRPT
newIndex
if
currentToken
RETokenWordBoundary
currentToken
RETokenWordBoundary
throw
REException
getLocalizedMessage
REG_BADRPT
newIndex
if
getMinimumLength
second
MAX_VALUE
throw
REException
getLocalizedMessage
REG_BADRPT
newIndex
index
newIndex
currentToken
setRepeated
currentToken
first
second
index
block
addToken
currentToken
currentToken
RETokenChar
subIndex
ch
insens
if
ch
bk
block
Vector
options
Vector
boolean
negative
char
lastChar
if
index
pLength
throw
REException
getLocalizedMessage
REG_EBRACK
index
if
ch
pattern
index
block
negative
if
index
pLength
throw
REException
getLocalizedMessage
REG_EBRACK
index
ch
pattern
index
if
ch
block
lastChar
ch
if
index
pLength
throw
REException
getLocalizedMessage
REG_EBRACK
index
while
ch
pattern
index
block
if
ch
lastChar
block
if
index
pLength
throw
REException
getLocalizedMessage
REG_EBRACK
index
if
ch
pattern
index
block
addElement
RETokenChar
subIndex
lastChar
insens
lastChar
block
addElement
RETokenRange
subIndex
lastChar
ch
insens
lastChar
index
if
ch
get
RE_BACKSLASH_ESCAPE_IN_LISTS
block
if
index
pLength
throw
REException
getLocalizedMessage
REG_EBRACK
index
int
posixID
boolean
negate
char
asciiEsc
if
indexOf
pattern
index
get
RE_CHAR_CLASS_ESC_IN_LISTS
block
switch
pattern
index
case
negate
case
posixID
DIGIT
break
case
negate
case
posixID
SPACE
break
case
negate
case
posixID
ALNUM
break
if
indexOf
pattern
index
block
switch
pattern
index
case
asciiEsc
break
case
asciiEsc
break
case
asciiEsc
break
if
lastChar
addElement
RETokenChar
subIndex
lastChar
insens
if
posixID
block
addElement
RETokenPOSIX
subIndex
posixID
insens
negate
if
asciiEsc
block
lastChar
asciiEsc
block
lastChar
pattern
index
index
if
ch
get
RE_CHAR_CLASSES
index
pLength
pattern
index
block
StringBuffer
posixSet
StringBuffer
index
getPosixSet
pattern
index
posixSet
int
posixId
intValue
toString
if
posixId
addElement
RETokenPOSIX
subIndex
posixId
insens
block
if
lastChar
addElement
RETokenChar
subIndex
lastChar
insens
lastChar
ch
if
index
pLength
throw
REException
getLocalizedMessage
REG_EBRACK
index
if
lastChar
addElement
RETokenChar
subIndex
lastChar
insens
addToken
currentToken
trimToSize
currentToken
RETokenOneOf
subIndex
options
negative
if
ch
get
RE_NO_BK_PARENS
bk
block
boolean
pure
boolean
comment
boolean
lookAhead
boolean
negativelh
if
index
pLength
pattern
index
block
switch
pattern
index
case
if
get
RE_LOOKAHEAD
block
pure
negativelh
lookAhead
index
break
case
if
get
RE_LOOKAHEAD
block
pure
lookAhead
index
break
case
if
get
RE_PURE_GROUPING
block
pure
index
break
case
if
get
RE_COMMENTS
block
comment
break
case
throw
REException
getLocalizedMessage
REG_BADRPT
index
if
index
pLength
block
throw
REException
getLocalizedMessage
REG_ESUBREG
index
int
endIndex
index
int
nextIndex
index
int
nested
while
nextIndex
getCharUnit
pattern
endIndex
unit
nested
ch
get
RE_NO_BK_PARENS
bk
if
endIndex
nextIndex
pLength
throw
REException
getLocalizedMessage
REG_ESUBREG
nextIndex
if
ch
get
RE_NO_BK_PARENS
bk
nested
if
ch
get
RE_NO_BK_PARENS
bk
nested
if
comment
index
nextIndex
block
addToken
currentToken
if
pure
block
numSubs
if
lookAhead
currentToken
RETokenLookAhead
valueOf
toCharArray
pattern
index
endIndex
index
cflags
syntax
negativelh
block
int
useIndex
pure
nextSub
numSubs
currentToken
RE
valueOf
toCharArray
pattern
index
endIndex
index
cflags
syntax
useIndex
nextSub
numSubs
numSubs
RE
currentToken
index
nextIndex
if
get
RE_UNMATCHED_RIGHT_PAREN_ORD
ch
get
RE_NO_BK_PARENS
bk
block
throw
REException
getLocalizedMessage
REG_EPAREN
index
if
ch
bk
block
addToken
currentToken
currentToken
addToken
RETokenStart
subIndex
cflags
REG_MULTILINE
getLineSeparator
if
ch
bk
block
addToken
currentToken
currentToken
addToken
RETokenEnd
subIndex
cflags
REG_MULTILINE
getLineSeparator
if
ch
bk
block
addToken
currentToken
currentToken
RETokenAny
subIndex
get
RE_DOT_NEWLINE
cflags
REG_DOT_NEWLINE
get
RE_DOT_NOT_NULL
if
ch
bk
block
if
currentToken
throw
REException
getLocalizedMessage
REG_BADRPT
index
if
currentToken
RETokenRepeated
throw
REException
getLocalizedMessage
REG_BADRPT
index
if
currentToken
RETokenWordBoundary
currentToken
RETokenWordBoundary
throw
REException
getLocalizedMessage
REG_BADRPT
index
if
getMinimumLength
throw
REException
getLocalizedMessage
REG_BADRPT
index
currentToken
setRepeated
currentToken
MAX_VALUE
index
if
ch
get
RE_LIMITED_OPS
get
RE_BK_PLUS_QM
bk
block
if
currentToken
throw
REException
getLocalizedMessage
REG_BADRPT
index
if
currentToken
RETokenRepeated
throw
REException
getLocalizedMessage
REG_BADRPT
index
if
currentToken
RETokenWordBoundary
currentToken
RETokenWordBoundary
throw
REException
getLocalizedMessage
REG_BADRPT
index
if
getMinimumLength
throw
REException
getLocalizedMessage
REG_BADRPT
index
currentToken
setRepeated
currentToken
MAX_VALUE
index
if
ch
get
RE_LIMITED_OPS
get
RE_BK_PLUS_QM
bk
block
if
currentToken
throw
REException
getLocalizedMessage
REG_BADRPT
index
if
currentToken
RETokenRepeated
block
if
get
RE_STINGY_OPS
RETokenRepeated
currentToken
RETokenRepeated
currentToken
throw
REException
getLocalizedMessage
REG_BADRPT
index
if
currentToken
RETokenWordBoundary
currentToken
RETokenWordBoundary
throw
REException
getLocalizedMessage
REG_BADRPT
index
currentToken
setRepeated
currentToken
index
if
bk
isDigit
ch
get
RE_NO_BK_REFS
block
addToken
currentToken
currentToken
RETokenBackRef
subIndex
digit
ch
insens
if
bk
ch
get
RE_STRING_ANCHORS
block
addToken
currentToken
currentToken
RETokenStart
subIndex
if
bk
ch
get
RE_STRING_ANCHORS
block
addToken
currentToken
currentToken
RETokenWordBoundary
subIndex
BEGIN
END
if
bk
ch
block
addToken
currentToken
currentToken
RETokenWordBoundary
subIndex
BEGIN
if
bk
ch
block
addToken
currentToken
currentToken
RETokenWordBoundary
subIndex
END
if
bk
ch
get
RE_STRING_ANCHORS
block
addToken
currentToken
currentToken
RETokenWordBoundary
subIndex
BEGIN
END
if
bk
ch
get
RE_CHAR_CLASS_ESCAPES
block
addToken
currentToken
currentToken
RETokenPOSIX
subIndex
DIGIT
insens
if
bk
ch
get
RE_CHAR_CLASS_ESCAPES
block
addToken
currentToken
currentToken
RETokenPOSIX
subIndex
DIGIT
insens
if
bk
ch
block
addToken
currentToken
currentToken
RETokenChar
subIndex
if
bk
ch
block
addToken
currentToken
currentToken
RETokenChar
subIndex
if
bk
ch
get
RE_CHAR_CLASS_ESCAPES
block
addToken
currentToken
currentToken
RETokenPOSIX
subIndex
SPACE
insens
if
bk
ch
get
RE_CHAR_CLASS_ESCAPES
block
addToken
currentToken
currentToken
RETokenPOSIX
subIndex
SPACE
insens
if
bk
ch
block
addToken
currentToken
currentToken
RETokenChar
subIndex
if
bk
ch
get
RE_CHAR_CLASS_ESCAPES
block
addToken
currentToken
currentToken
RETokenPOSIX
subIndex
ALNUM
insens
if
bk
ch
get
RE_CHAR_CLASS_ESCAPES
block
addToken
currentToken
currentToken
RETokenPOSIX
subIndex
ALNUM
insens
if
bk
ch
get
RE_STRING_ANCHORS
block
addToken
currentToken
currentToken
RETokenEnd
subIndex
block
addToken
currentToken
currentToken
RETokenChar
subIndex
ch
insens
addToken
currentToken
if
branches
block
addElement
RE
firstToken
lastToken
numSubs
subIndex
minimumLength
trimToSize
minimumLength
firstToken
lastToken
addToken
RETokenOneOf
subIndex
branches
addToken
RETokenEndSub
subIndex
getCharUnit
int
input
char
index
int
unit
CharUnit
ch
input
index
if
bk
ch
if
index
length
ch
input
index
throw
REException
getLocalizedMessage
REG_ESCAPE
index
return
index
isMatch
boolean
input
Object
return
isMatch
input
isMatch
boolean
input
Object
index
int
return
isMatch
input
index
isMatch
boolean
input
Object
index
int
eflags
int
return
isMatchImpl
makeCharIndexed
input
index
index
eflags
isMatchImpl
boolean
input
CharIndexed
index
int
eflags
int
if
firstToken
return
charAt
OUT_OF_BOUNDS
REMatch
m
REMatch
numSubs
index
eflags
if
match
input
m
block
while
m
block
if
charAt
index
OUT_OF_BOUNDS
block
return
m
next
return
getNumSubs
int
return
numSubs
setUncle
uncle
REToken
if
lastToken
block
setUncle
uncle
setUncle
uncle
chain
boolean
next
REToken
chain
next
setUncle
next
return
getMinimumLength
int
return
minimumLength
getAllMatches
REMatch
input
Object
return
getAllMatches
input
getAllMatches
REMatch
input
Object
index
int
return
getAllMatches
input
index
getAllMatches
REMatch
input
Object
index
int
eflags
int
return
getAllMatchesImpl
makeCharIndexed
input
index
index
eflags
getAllMatchesImpl
REMatch
input
CharIndexed
index
int
eflags
int
Vector
all
Vector
REMatch
m
while
m
getMatchImpl
input
index
eflags
block
addElement
m
index
getEndIndex
if
end
block
index
move
block
move
end
if
isValid
break
REMatch
mset
REMatch
size
copyInto
mset
return
mset
match
boolean
input
CharIndexed
mymatch
REMatch
if
firstToken
return
next
input
mymatch
start
subIndex
index
return
match
input
mymatch
getMatch
REMatch
input
Object
return
getMatch
input
getMatch
REMatch
input
Object
index
int
return
getMatch
input
index
getMatch
REMatch
input
Object
index
int
eflags
int
return
getMatch
input
index
eflags
getMatch
REMatch
input
Object
index
int
eflags
int
buffer
StringBuffer
return
getMatchImpl
makeCharIndexed
input
index
index
eflags
buffer
getMatchImpl
REMatch
input
CharIndexed
index
int
eflags
int
buffer
StringBuffer
REMatch
mymatch
REMatch
numSubs
index
eflags
do
move
block
if
minimumLength
charAt
minimumLength
OUT_OF_BOUNDS
block
if
match
input
mymatch
block
REMatch
longest
mymatch
while
mymatch
next
block
if
index
index
block
longest
mymatch
end
index
finish
input
return
longest
clear
index
if
buffer
charAt
OUT_OF_BOUNDS
block
append
charAt
return
getMatchEnumeration
REMatchEnumeration
input
Object
return
getMatchEnumeration
input
getMatchEnumeration
REMatchEnumeration
input
Object
index
int
return
getMatchEnumeration
input
index
getMatchEnumeration
REMatchEnumeration
input
Object
index
int
eflags
int
return
REMatchEnumeration
makeCharIndexed
input
index
index
eflags
substitute
String
input
Object
replace
String
return
substitute
input
replace
substitute
String
input
Object
replace
String
index
int
return
substitute
input
replace
index
substitute
String
input
Object
replace
String
index
int
eflags
int
return
substituteImpl
makeCharIndexed
input
index
replace
index
eflags
substituteImpl
String
input
CharIndexed
replace
String
index
int
eflags
int
StringBuffer
buffer
StringBuffer
REMatch
m
getMatchImpl
input
index
eflags
buffer
if
m
return
toString
append
eflags
REG_NO_INTERPOLATE
replace
substituteInto
replace
if
move
end
block
do
move
block
append
charAt
return
toString
substituteAll
String
input
Object
replace
String
return
substituteAll
input
replace
substituteAll
String
input
Object
replace
String
index
int
return
substituteAll
input
replace
index
substituteAll
String
input
Object
replace
String
index
int
eflags
int
return
substituteAllImpl
makeCharIndexed
input
index
replace
index
eflags
substituteAllImpl
String
input
CharIndexed
replace
String
index
int
eflags
int
StringBuffer
buffer
StringBuffer
REMatch
m
while
m
getMatchImpl
input
index
eflags
buffer
block
append
eflags
REG_NO_INTERPOLATE
replace
substituteInto
replace
index
getEndIndex
if
end
block
char
ch
charAt
if
ch
OUT_OF_BOUNDS
append
ch
move
block
move
end
if
isValid
break
return
toString
addToken
next
REToken
if
next
return
minimumLength
getMinimumLength
if
firstToken
block
lastToken
firstToken
next
block
if
chain
next
block
lastToken
next
setRepeated
REToken
current
REToken
min
int
max
int
index
int
if
current
throw
REException
getLocalizedMessage
REG_BADRPT
index
return
RETokenRepeated
subIndex
current
min
max
getPosixSet
int
pattern
char
index
int
buf
StringBuffer
int
i
for
forControl
i
index
i
length
i
block
if
pattern
i
pattern
i
return
i
append
pattern
i
return
index
getMinMax
int
input
char
index
int
minMax
IntPair
syntax
RESyntax
boolean
mustMatch
get
RE_NO_BK_BRACES
int
startIndex
index
if
index
length
block
if
mustMatch
throw
REException
getLocalizedMessage
REG_EBRACE
index
return
startIndex
int
min
max
CharUnit
unit
CharUnit
StringBuffer
buf
StringBuffer
do
index
length
isDigit
ch
block
index
getCharUnit
input
index
unit
if
isDigit
ch
append
ch
if
length
block
if
mustMatch
throw
REException
getLocalizedMessage
REG_EBRACE
index
return
startIndex
min
parseInt
toString
if
ch
get
RE_NO_BK_BRACES
bk
max
min
if
index
length
if
mustMatch
throw
REException
getLocalizedMessage
REG_EBRACE
index
return
startIndex
if
ch
bk
block
buf
StringBuffer
while
index
getCharUnit
input
index
unit
length
isDigit
ch
append
ch
if
ch
get
RE_NO_BK_BRACES
bk
if
mustMatch
throw
REException
getLocalizedMessage
REG_EBRACE
index
return
startIndex
if
length
max
MAX_VALUE
max
parseInt
toString
if
mustMatch
throw
REException
getLocalizedMessage
REG_EBRACE
index
return
startIndex
first
min
second
max
return
index
toString
String
StringBuffer
sb
StringBuffer
dump
sb
return
toString
dump
os
StringBuffer
append
if
subIndex
append
if
firstToken
dumpAll
os
append
makeCharIndexed
CharIndexed
input
Object
index
int
if
input
String
return
CharIndexedString
String
input
index
if
input
char
return
CharIndexedCharArray
char
input
index
if
input
StringBuffer
return
CharIndexedStringBuffer
StringBuffer
input
index
if
input
InputStream
return
CharIndexedInputStream
InputStream
input
index
if
input
Reader
return
CharIndexedReader
Reader
input
index
if
input
CharIndexed
return
CharIndexed
input
return
CharIndexedString
toString
index
REToken
