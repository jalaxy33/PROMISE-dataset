JEditTextArea
JEditTextArea
view
View
enableEvents
FOCUS_EVENT_MASK
KEY_EVENT_MASK
view
view
selection
Vector
renderer
createTextRenderer
painter
TextAreaPainter
gutter
Gutter
view
documentHandler
DocumentHandler
foldHandler
FoldHandler
listenerList
EventListenerList
caretEvent
MutableCaretEvent
bracketLine
bracketPosition
blink
lineSegment
Segment
setLayout
ScrollLayout
add
LEFT
gutter
add
CENTER
painter
add
RIGHT
vertical
JScrollBar
VERTICAL
add
BOTTOM
horizontal
JScrollBar
HORIZONTAL
setValues
if
getLookAndFeel
MetalLookAndFeel
block
setBorder
TextAreaBorder
putClientProperty
FALSE
putClientProperty
FALSE
addAdjustmentListener
AdjustHandler
addAdjustmentListener
AdjustHandler
addComponentListener
ComponentHandler
mouseHandler
MouseHandler
addMouseListener
mouseHandler
addMouseMotionListener
mouseHandler
addFocusListener
FocusHandler
focusedComponent
getPainter
TextAreaPainter
return
painter
getGutter
Gutter
return
gutter
isCaretBlinkEnabled
boolean
return
caretBlinks
setCaretBlinkEnabled
caretBlinks
boolean
caretBlinks
caretBlinks
if
caretBlinks
blink
if
buffer
invalidateLine
caretLine
blinkCaret
if
caretBlinks
block
blink
blink
invalidateLine
caretLine
blink
getElectricScroll
int
return
electricScroll
setElectricScroll
electricScroll
int
electricScroll
electricScroll
isMiddleMousePasteEnabled
boolean
return
middleMousePaste
setMiddleMousePasteEnabled
middleMousePaste
boolean
middleMousePaste
middleMousePaste
updateScrollBars
if
vertical
visibleLines
block
int
lineCount
getVirtualLineCount
if
lineCount
firstLine
visibleLines
block
int
newFirstLine
max
lineCount
visibleLines
if
newFirstLine
firstLine
block
setFirstLine
newFirstLine
return
setValues
firstLine
visibleLines
lineCount
setUnitIncrement
setBlockIncrement
visibleLines
int
width
getWidth
if
horizontal
width
block
maxHorizontalScrollWidth
repaint
setUnitIncrement
getFontMetrics
charWidth
setBlockIncrement
width
getFirstLine
int
return
firstLine
setFirstLine
firstLine
int
if
firstLine
firstLine
return
_setFirstLine
firstLine
synchroScrollVertical
firstLine
_setFirstLine
firstLine
int
firstLine
max
firstLine
physFirstLine
virtualToPhysical
firstLine
maxHorizontalScrollWidth
if
firstLine
getValue
updateScrollBars
repaint
repaint
fireScrollEvent
getVisibleLines
int
return
visibleLines
getHorizontalOffset
int
return
horizontalOffset
setHorizontalOffset
horizontalOffset
int
if
horizontalOffset
horizontalOffset
return
_setHorizontalOffset
horizontalOffset
synchroScrollHorizontal
horizontalOffset
_setHorizontalOffset
horizontalOffset
int
horizontalOffset
horizontalOffset
if
horizontalOffset
getValue
updateScrollBars
repaint
fireScrollEvent
setOrigin
boolean
firstLine
int
horizontalOffset
int
setFirstLine
firstLine
setHorizontalOffset
horizontalOffset
return
centerCaret
Element
map
getDefaultRootElement
int
gotoLine
virtualToPhysical
firstLine
visibleLines
if
gotoLine
gotoLine
getElementCount
block
getToolkit
beep
return
Element
element
getElement
gotoLine
setCaretPosition
getStartOffset
scrollUpLine
if
firstLine
setFirstLine
firstLine
getToolkit
beep
scrollUpPage
if
firstLine
block
int
newFirstLine
firstLine
visibleLines
setFirstLine
newFirstLine
block
getToolkit
beep
scrollDownLine
int
numLines
getVirtualLineCount
if
firstLine
visibleLines
numLines
setFirstLine
firstLine
getToolkit
beep
scrollDownPage
int
numLines
getVirtualLineCount
if
firstLine
visibleLines
numLines
block
int
newFirstLine
firstLine
visibleLines
setFirstLine
newFirstLine
visibleLines
numLines
newFirstLine
numLines
visibleLines
block
getToolkit
beep
scrollToCaret
doElectricScroll
boolean
if
isLineVisible
caretLine
expandFoldAt
caretLine
int
offset
caret
getLineStartOffset
caretLine
int
virtualCaretLine
physicalToVirtual
caretLine
if
visibleLines
block
setFirstLine
caretLine
electricScroll
return
int
electricScroll
if
doElectricScroll
visibleLines
electricScroll
electricScroll
electricScroll
electricScroll
boolean
changed
int
_firstLine
firstLine
electricScroll
int
_lastLine
firstLine
visibleLines
electricScroll
if
virtualCaretLine
_firstLine
virtualCaretLine
_lastLine
block
if
_firstLine
virtualCaretLine
visibleLines
virtualCaretLine
_lastLine
visibleLines
block
int
startLine
endLine
Selection
s
getSelectionAtOffset
caret
if
s
block
startLine
endLine
virtualCaretLine
block
startLine
physicalToVirtual
startLine
endLine
physicalToVirtual
endLine
if
endLine
startLine
visibleLines
firstLine
startLine
endLine
visibleLines
firstLine
physicalToVirtual
caretLine
visibleLines
firstLine
min
firstLine
getVirtualLineCount
visibleLines
firstLine
max
firstLine
changed
if
virtualCaretLine
_firstLine
block
firstLine
max
virtualCaretLine
electricScroll
changed
if
virtualCaretLine
_lastLine
block
firstLine
virtualCaretLine
visibleLines
electricScroll
if
firstLine
getVirtualLineCount
visibleLines
firstLine
getVirtualLineCount
visibleLines
changed
int
x
offsetToX
caretLine
offset
int
width
getFontMetrics
charWidth
if
x
block
horizontalOffset
min
horizontalOffset
x
width
changed
if
x
getWidth
width
block
horizontalOffset
horizontalOffset
getWidth
x
width
changed
if
changed
block
if
firstLine
firstLine
physFirstLine
virtualToPhysical
firstLine
updateScrollBars
repaint
repaint
synchroScrollVertical
firstLine
synchroScrollHorizontal
horizontalOffset
fireScrollEvent
fireScrollEvent
lineToY
int
line
int
FontMetrics
fm
getFontMetrics
return
line
firstLine
getHeight
getLeading
getDescent
yToLine
int
y
int
FontMetrics
fm
getFontMetrics
int
height
getHeight
return
max
min
getVirtualLineCount
y
height
firstLine
getTextRenderer
TextRenderer
return
renderer
offsetToX
int
line
int
offset
int
Token
tokens
markTokens
getFirstToken
line
getLineText
line
lineSegment
char
text
array
int
off
offset
float
x
float
horizontalOffset
Toolkit
toolkit
getToolkit
Font
defaultFont
getFont
SyntaxStyle
styles
getStyles
for
forControl
block
byte
id
id
if
id
END
return
int
x
Font
font
if
id
NULL
font
defaultFont
font
styles
id
getFont
int
len
length
if
offset
len
block
return
int
x
charsWidth
text
off
offset
font
x
painter
block
x
charsWidth
text
off
len
font
x
painter
off
len
offset
len
tokens
next
xToOffset
int
line
int
x
int
return
xToOffset
line
x
xToOffset
int
line
int
x
int
round
boolean
Token
tokens
markTokens
getFirstToken
line
getLineText
line
lineSegment
char
text
array
int
off
offset
Toolkit
toolkit
getToolkit
Font
defaultFont
getFont
SyntaxStyle
styles
getStyles
float
widthArray
float
horizontalOffset
for
forControl
block
byte
id
id
if
id
END
return
count
Font
font
if
id
NULL
font
defaultFont
font
styles
id
getFont
int
len
length
int
offset
xToOffset
text
off
len
font
x
painter
round
widthArray
if
offset
return
offset
offset
off
len
tokens
next
xyToOffset
int
x
int
y
int
return
xyToOffset
x
y
xyToOffset
int
x
int
y
int
round
boolean
FontMetrics
fm
getFontMetrics
int
height
getHeight
int
line
y
height
firstLine
if
line
return
if
line
getVirtualLineCount
block
return
getLineEndOffset
virtualToPhysical
getVirtualLineCount
block
line
virtualToPhysical
line
return
getLineStartOffset
line
xToOffset
line
x
invalidateLine
line
int
line
physicalToVirtual
line
FontMetrics
fm
getFontMetrics
int
y
lineToY
line
getDescent
getLeading
repaint
y
getWidth
getHeight
repaint
y
getWidth
getHeight
invalidateLineRange
firstLine
int
lastLine
int
firstLine
physicalToVirtual
firstLine
if
lastLine
virtualToPhysical
getVirtualLineCount
block
lastLine
lastLine
getLineCount
getVirtualLineCount
lastLine
physicalToVirtual
lastLine
FontMetrics
fm
getFontMetrics
int
y
lineToY
firstLine
getDescent
getLeading
int
height
lastLine
firstLine
getHeight
repaint
y
getWidth
height
repaint
y
getWidth
height
invalidateSelectedLines
for
forControl
int
i
i
size
i
block
Selection
s
Selection
elementAt
i
invalidateLineRange
startLine
endLine
getBuffer
Buffer
return
buffer
setBuffer
buffer
Buffer
if
buffer
buffer
return
if
buffer
block
buffer
removeDocumentListener
documentHandler
buffer
removeFoldListener
foldHandler
buffer
buffer
addDocumentListener
documentHandler
addFoldListener
foldHandler
documentHandlerInstalled
maxHorizontalScrollWidth
updateTabSize
setCaretPosition
updateScrollBars
repaint
repaint
getBufferLength
int
return
getLength
getLineCount
int
return
getLineCount
getVirtualLineCount
int
return
getVirtualLineCount
getLineOfOffset
int
offset
int
return
getDefaultRootElement
getElementIndex
offset
getLineStartOffset
int
line
int
Element
lineElement
getDefaultRootElement
getElement
line
if
lineElement
return
return
getStartOffset
getLineEndOffset
int
line
int
Element
lineElement
getDefaultRootElement
getElement
line
if
lineElement
return
return
getEndOffset
getLineLength
int
line
int
Element
lineElement
getDefaultRootElement
getElement
line
if
lineElement
return
return
getEndOffset
getStartOffset
getText
String
try
return
getText
getLength
catchClause
bl
printStackTrace
return
setText
text
String
try
beginCompoundEdit
remove
getLength
insertString
text
catchClause
bl
printStackTrace
endCompoundEdit
getText
String
start
int
len
int
try
return
getText
start
len
catchClause
bl
printStackTrace
return
getText
start
int
len
int
segment
Segment
try
getText
start
len
segment
catchClause
bl
printStackTrace
offset
count
getLineText
String
lineIndex
int
int
start
getLineStartOffset
lineIndex
return
getText
start
getLineEndOffset
lineIndex
start
getLineText
lineIndex
int
segment
Segment
Element
lineElement
getDefaultRootElement
getElement
lineIndex
int
start
getStartOffset
getText
start
getEndOffset
start
segment
selectAll
setSelection
Selection
Range
getLength
moveCaretPosition
getLength
selectLine
int
caretLine
getCaretLine
int
start
getLineStartOffset
caretLine
int
end
getLineEndOffset
caretLine
setSelection
Selection
Range
start
end
moveCaretPosition
end
selectParagraph
int
caretLine
getCaretLine
if
getLineLength
caretLine
block
getToolkit
beep
return
int
start
caretLine
int
end
caretLine
while
start
block
if
getLineLength
start
break
start
while
end
getLineCount
block
if
getLineLength
end
break
end
int
selectionStart
getLineStartOffset
start
int
selectionEnd
getLineEndOffset
end
setSelection
Selection
Range
selectionStart
selectionEnd
moveCaretPosition
selectionEnd
selectWord
int
line
getCaretLine
int
lineStart
getLineStartOffset
line
int
offset
getCaretPosition
lineStart
if
getLineLength
line
return
String
lineText
getLineText
line
String
noWordSep
String
getProperty
if
offset
getLineLength
line
offset
int
wordStart
findWordStart
lineText
offset
noWordSep
int
wordEnd
findWordEnd
lineText
offset
noWordSep
setSelection
Selection
Range
lineStart
wordStart
lineStart
wordEnd
moveCaretPosition
lineStart
wordEnd
getSelectionStart
int
if
size
return
caret
return
Selection
elementAt
getSelectionStart
int
line
int
if
size
return
caret
return
Selection
elementAt
getSelectionStartLine
int
if
size
return
caret
return
Selection
elementAt
setSelectionStart
selectionStart
int
select
selectionStart
getSelectionEnd
getSelectionEnd
int
if
size
return
caret
return
Selection
elementAt
getSelectionEnd
int
line
int
if
size
return
caret
return
Selection
elementAt
getSelectionEndLine
int
if
size
return
caret
return
Selection
elementAt
setSelectionEnd
selectionEnd
int
select
getSelectionStart
selectionEnd
getMarkPosition
int
Selection
s
getSelectionAtOffset
caret
if
s
return
caret
if
start
caret
return
end
if
end
caret
return
start
return
caret
getMarkLine
int
if
size
return
caretLine
Selection
s
Selection
elementAt
if
start
caret
return
endLine
if
end
caret
return
startLine
return
caretLine
select
start
int
end
int
select
start
end
select
start
int
end
int
doElectricScroll
boolean
selectNone
int
newStart
newEnd
if
start
end
block
newStart
start
newEnd
end
block
newStart
end
newEnd
start
setSelection
Selection
Range
newStart
newEnd
moveCaretPosition
end
doElectricScroll
isSelectionRectangular
boolean
Selection
s
getSelectionAtOffset
caret
if
s
return
return
s
Selection
Rect
setCaretPosition
newCaret
int
invalidateSelectedLines
removeAllElements
moveCaretPosition
newCaret
setCaretPosition
newCaret
int
doElectricScroll
boolean
invalidateSelectedLines
removeAllElements
moveCaretPosition
newCaret
doElectricScroll
moveCaretPosition
newCaret
int
moveCaretPosition
newCaret
moveCaretPosition
newCaret
int
doElectricScroll
boolean
if
newCaret
newCaret
getLength
block
throw
IllegalArgumentException
newCaret
blink
restart
if
caret
newCaret
block
scrollToCaret
doElectricScroll
return
int
newCaretLine
getLineOfOffset
newCaret
magicCaret
offsetToX
newCaretLine
newCaret
getLineStartOffset
newCaretLine
invalidateLine
caretLine
invalidateLine
newCaretLine
addUndoableEdit
CaretUndo
caret
caret
newCaret
caretLine
newCaretLine
if
focusedComponent
scrollToCaret
doElectricScroll
updateBracketHighlight
fireCaretEvent
getCaretPosition
int
return
caret
getCaretLine
int
return
caretLine
getSelectionCount
int
return
size
getSelection
Selection
Selection
sel
Selection
size
copyInto
sel
return
sel
selectNone
setSelection
Selection
setSelection
selection
Selection
invalidateSelectedLines
selection
removeAllElements
if
selection
block
for
forControl
int
i
i
length
i
_addToSelection
selection
i
fireCaretEvent
setSelection
selection
Selection
invalidateSelectedLines
selection
removeAllElements
if
selection
_addToSelection
selection
fireCaretEvent
addToSelection
selection
Selection
if
selection
block
for
forControl
int
i
i
length
i
_addToSelection
selection
i
fireCaretEvent
addToSelection
selection
Selection
_addToSelection
selection
fireCaretEvent
getSelectionAtOffset
Selection
offset
int
if
selection
block
for
forControl
int
i
i
size
i
block
Selection
s
Selection
elementAt
i
if
offset
start
offset
end
return
s
return
removeFromSelection
sel
Selection
removeElement
sel
invalidateLineRange
startLine
endLine
fireCaretEvent
removeFromSelection
offset
int
Selection
sel
getSelectionAtOffset
offset
if
sel
return
removeElement
sel
invalidateLineRange
startLine
endLine
fireCaretEvent
resizeSelection
offset
int
end
int
rect
boolean
Selection
s
getSelectionAtOffset
offset
if
s
block
invalidateLineRange
startLine
endLine
removeElement
s
if
end
offset
block
int
tmp
offset
offset
end
end
tmp
Selection
newSel
if
rect
newSel
Selection
Rect
offset
end
newSel
Selection
Range
offset
end
_addToSelection
newSel
fireCaretEvent
extendSelection
offset
int
end
int
Selection
s
getSelectionAtOffset
offset
if
s
block
invalidateLineRange
startLine
endLine
removeElement
s
if
offset
start
block
offset
end
end
end
if
offset
end
block
offset
start
if
end
offset
block
int
tmp
end
end
offset
offset
tmp
_addToSelection
Selection
Range
offset
end
fireCaretEvent
getSelectedText
String
s
Selection
StringBuffer
buf
StringBuffer
getSelectedText
s
buf
return
toString
getSelectedText
String
separator
String
if
size
return
StringBuffer
buf
StringBuffer
for
forControl
int
i
i
size
i
block
if
i
append
separator
getSelectedText
Selection
elementAt
i
buf
return
toString
getSelectedText
String
return
getSelectedText
setSelectedText
s
Selection
selectedText
String
if
isEditable
block
throw
InternalError
try
beginCompoundEdit
if
s
Selection
Rect
block
Element
map
getDefaultRootElement
int
start
start
getElement
getStartOffset
startLine
int
end
end
getElement
getStartOffset
endLine
if
end
start
block
int
tmp
end
end
start
start
tmp
int
lastNewline
int
currNewline
for
forControl
int
i
startLine
i
endLine
i
block
Element
lineElement
getElement
i
int
lineStart
getStartOffset
int
lineEnd
getEndOffset
int
rectStart
min
lineEnd
lineStart
start
remove
rectStart
min
lineEnd
rectStart
end
start
if
selectedText
continue
currNewline
indexOf
lastNewline
if
currNewline
currNewline
length
insertString
rectStart
substring
lastNewline
currNewline
lastNewline
min
length
currNewline
if
selectedText
currNewline
length
block
int
offset
getElement
getEndOffset
endLine
insertString
offset
insertString
offset
substring
currNewline
block
remove
start
end
start
if
selectedText
length
block
insertString
start
selectedText
catchClause
bl
log
ERROR
bl
endCompoundEdit
setSelectedText
selectedText
String
if
isEditable
block
throw
InternalError
Selection
selection
getSelection
if
length
block
try
insertString
caret
selectedText
catchClause
bl
log
ERROR
bl
block
try
beginCompoundEdit
for
forControl
int
i
i
length
i
block
setSelectedText
selection
i
selectedText
endCompoundEdit
selectNone
getSelectedLines
int
Integer
line
Hashtable
hash
Hashtable
for
forControl
int
i
i
size
i
block
Selection
s
Selection
elementAt
i
for
forControl
int
j
startLine
j
endLine
j
block
line
Integer
j
put
line
line
line
Integer
caretLine
put
line
line
int
returnValue
int
size
int
i
Enumeration
keys
keys
while
hasMoreElements
block
line
Integer
nextElement
returnValue
i
intValue
quicksort
returnValue
length
return
returnValue
isEditable
boolean
return
isEditable
getRightClickPopup
JPopupMenu
return
popup
setRightClickPopup
popup
JPopupMenu
popup
popup
getMagicCaretPosition
int
return
magicCaret
offsetToX
caretLine
caret
getLineStartOffset
caretLine
magicCaret
setMagicCaretPosition
magicCaret
int
magicCaret
magicCaret
userInput
ch
char
if
isEditable
block
getToolkit
beep
return
if
ch
getExpandOnInput
expandAbbrev
view
return
if
ch
block
if
getBooleanProperty
size
indentLine
caretLine
return
if
getBooleanProperty
block
int
lineStart
getLineStartOffset
caretLine
String
line
getText
lineStart
caret
lineStart
setSelectedText
createSoftTab
line
getTabSize
setSelectedText
return
if
ch
block
try
beginCompoundEdit
setSelectedText
if
getBooleanProperty
indentLine
caretLine
endCompoundEdit
return
block
String
str
valueOf
ch
if
size
block
setSelectedText
str
return
try
if
ch
block
if
doWordWrap
caretLine
return
doWordWrap
caretLine
catchClause
bl
log
ERROR
bl
try
beginCompoundEdit
if
overwrite
block
int
caretLineEnd
getLineEndOffset
caretLine
if
caretLineEnd
caret
remove
caret
insertString
caret
str
catchClause
bl
log
ERROR
bl
endCompoundEdit
String
indentOpenBrackets
String
getProperty
String
indentCloseBrackets
String
getProperty
if
indentCloseBrackets
indexOf
ch
indentOpenBrackets
indexOf
ch
block
indentLine
caretLine
isOverwriteEnabled
boolean
return
overwrite
setOverwriteEnabled
overwrite
boolean
overwrite
overwrite
invalidateLine
caretLine
if
getStatus
getStatus
updateMiscStatus
toggleOverwriteEnabled
overwrite
overwrite
invalidateLine
caretLine
if
getStatus
getStatus
updateMiscStatus
getBracketPosition
int
return
bracketPosition
getBracketLine
int
return
bracketLine
addCaretListener
listener
CaretListener
add
CaretListener
listener
removeCaretListener
listener
CaretListener
remove
CaretListener
listener
addScrollListener
listener
ScrollListener
add
ScrollListener
listener
removeScrollListener
listener
ScrollListener
remove
ScrollListener
listener
backspace
if
isEditable
block
getToolkit
beep
return
if
size
setSelectedText
block
if
caret
block
getToolkit
beep
return
try
remove
caret
catchClause
bl
log
ERROR
bl
backspaceWord
if
isEditable
block
getToolkit
beep
return
if
size
block
setSelectedText
return
int
lineStart
getLineStartOffset
caretLine
int
_caret
caret
lineStart
String
lineText
getLineText
caretLine
if
_caret
block
if
lineStart
block
getToolkit
beep
return
_caret
block
String
noWordSep
String
getProperty
_caret
findWordStart
lineText
_caret
noWordSep
try
remove
_caret
lineStart
caret
_caret
lineStart
catchClause
bl
log
ERROR
bl
delete
if
isEditable
block
getToolkit
beep
return
if
size
setSelectedText
block
if
caret
getLength
block
getToolkit
beep
return
try
remove
caret
catchClause
bl
log
ERROR
bl
deleteToEndOfLine
if
isEditable
block
getToolkit
beep
return
try
remove
caret
getLineEndOffset
caretLine
caret
catchClause
bl
log
ERROR
bl
deleteLine
if
isEditable
block
getToolkit
beep
return
Element
map
getDefaultRootElement
Element
lineElement
getElement
caretLine
try
int
start
getStartOffset
int
end
getEndOffset
if
end
getLength
block
if
start
start
end
remove
start
end
start
catchClause
bl
log
ERROR
bl
deleteParagraph
if
isEditable
block
getToolkit
beep
return
int
start
end
getLength
for
forControl
int
i
caretLine
i
i
block
getLineText
i
lineSegment
for
forControl
int
j
j
count
j
block
switch
array
offset
j
case
break
case
continue
start
getLineStartOffset
i
break
for
forControl
int
i
caretLine
i
getLineCount
i
block
getLineText
i
lineSegment
for
forControl
int
j
j
count
j
block
switch
array
offset
j
case
break
case
continue
end
getLineEndOffset
i
break
try
remove
start
end
start
catchClause
bl
log
ERROR
bl
deleteToStartOfLine
if
isEditable
block
getToolkit
beep
return
Element
map
getDefaultRootElement
Element
lineElement
getElement
caretLine
try
remove
getStartOffset
caret
getStartOffset
catchClause
bl
log
ERROR
bl
deleteWord
if
isEditable
block
getToolkit
beep
return
if
size
block
setSelectedText
return
int
lineStart
getLineStartOffset
caretLine
int
_caret
caret
lineStart
String
lineText
getLineText
caretLine
if
_caret
length
block
if
lineStart
_caret
getLength
block
getToolkit
beep
return
_caret
block
String
noWordSep
String
getProperty
_caret
findWordEnd
lineText
_caret
noWordSep
try
remove
caret
_caret
lineStart
caret
catchClause
bl
log
ERROR
bl
goToNextBracket
select
boolean
String
text
getText
caret
getLength
caret
int
newCaret
for
forControl
int
i
i
length
i
block
switch
charAt
i
case
newCaret
caret
i
break
if
newCaret
getToolkit
beep
block
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
goToNextCharacter
select
boolean
if
select
size
block
Selection
s
getSelectionAtOffset
caret
if
s
block
if
multi
block
if
caret
end
block
moveCaretPosition
end
return
block
setCaretPosition
end
return
if
caret
getLength
getToolkit
beep
int
newCaret
if
caret
getLineEndOffset
caretLine
block
int
line
getNextVisibleLine
caretLine
if
line
block
getToolkit
beep
return
newCaret
getLineStartOffset
line
newCaret
caret
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
goToNextLine
select
boolean
int
caret
getCaretPosition
int
line
getCaretLine
int
magic
getMagicCaretPosition
int
nextLine
getNextVisibleLine
line
if
nextLine
block
getToolkit
beep
return
int
newCaret
getLineStartOffset
nextLine
xToOffset
nextLine
magic
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
setMagicCaretPosition
magic
goToNextMarker
select
boolean
Vector
markers
getMarkers
Marker
marker
for
forControl
int
i
i
size
i
block
Marker
_marker
Marker
elementAt
i
if
getPosition
caret
block
marker
_marker
break
if
marker
getToolkit
beep
block
if
select
extendSelection
caret
getPosition
if
multi
selectNone
moveCaretPosition
getPosition
goToNextPage
select
boolean
int
lineCount
getVirtualLineCount
int
magic
getMagicCaretPosition
if
firstLine
visibleLines
lineCount
setFirstLine
lineCount
visibleLines
setFirstLine
firstLine
visibleLines
int
newLine
virtualToPhysical
min
lineCount
physicalToVirtual
caretLine
visibleLines
int
newCaret
getLineStartOffset
newLine
xToOffset
newLine
magic
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
setMagicCaretPosition
magic
goToNextParagraph
select
boolean
int
lineNo
getCaretLine
int
newCaret
getBufferLength
boolean
foundBlank
for
forControl
int
i
lineNo
i
getLineCount
i
block
if
isLineVisible
i
continue
getLineText
i
lineSegment
for
forControl
int
j
j
count
j
block
switch
array
offset
j
case
break
case
if
foundBlank
block
newCaret
getLineStartOffset
i
break
continue
foundBlank
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
goToNextWord
select
boolean
int
lineStart
getLineStartOffset
caretLine
int
newCaret
caret
lineStart
String
lineText
getLineText
caretLine
if
newCaret
length
block
int
nextLine
getNextVisibleLine
caretLine
if
nextLine
block
getToolkit
beep
return
newCaret
getLineStartOffset
nextLine
block
String
noWordSep
String
getProperty
newCaret
findWordEnd
lineText
newCaret
noWordSep
lineStart
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
goToPrevBracket
select
boolean
String
text
getText
caret
int
newCaret
for
forControl
int
i
getCaretPosition
i
i
block
switch
charAt
i
case
newCaret
i
break
if
newCaret
getToolkit
beep
block
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
goToPrevCharacter
select
boolean
if
select
size
block
Selection
s
getSelectionAtOffset
caret
if
s
block
if
multi
block
if
caret
start
block
moveCaretPosition
start
return
block
setCaretPosition
start
return
int
newCaret
if
caret
getLineStartOffset
caretLine
block
int
line
getPrevVisibleLine
caretLine
if
line
block
getToolkit
beep
return
newCaret
getLineEndOffset
line
newCaret
caret
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
goToPrevLine
select
boolean
int
magic
getMagicCaretPosition
int
prevLine
getPrevVisibleLine
caretLine
if
prevLine
block
getToolkit
beep
return
int
newCaret
getLineStartOffset
prevLine
xToOffset
prevLine
magic
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
setMagicCaretPosition
magic
goToPrevMarker
select
boolean
Vector
markers
getMarkers
Marker
marker
for
forControl
int
i
size
i
i
block
Marker
_marker
Marker
elementAt
i
if
getPosition
caret
block
marker
_marker
break
if
marker
getToolkit
beep
block
if
select
extendSelection
caret
getPosition
if
multi
selectNone
moveCaretPosition
getPosition
goToPrevPage
select
boolean
if
firstLine
visibleLines
setFirstLine
setFirstLine
firstLine
visibleLines
int
magic
getMagicCaretPosition
int
newLine
virtualToPhysical
max
physicalToVirtual
caretLine
visibleLines
int
newCaret
getLineStartOffset
newLine
xToOffset
newLine
magic
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
setMagicCaretPosition
magic
goToPrevParagraph
select
boolean
int
lineNo
caretLine
int
newCaret
boolean
foundBlank
for
forControl
int
i
lineNo
i
i
block
if
isLineVisible
i
continue
getLineText
i
lineSegment
for
forControl
int
j
j
count
j
block
switch
array
offset
j
case
break
case
if
foundBlank
block
newCaret
getLineEndOffset
i
break
continue
foundBlank
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
goToPrevWord
select
boolean
int
lineStart
getLineStartOffset
caretLine
int
newCaret
caret
lineStart
String
lineText
getLineText
caretLine
if
newCaret
block
if
lineStart
block
getToolkit
beep
return
block
int
prevLine
getPrevVisibleLine
caretLine
if
prevLine
block
getToolkit
beep
return
newCaret
getLineEndOffset
prevLine
block
String
noWordSep
String
getProperty
newCaret
findWordStart
lineText
newCaret
noWordSep
lineStart
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
smartHome
select
boolean
if
getBooleanProperty
goToStartOfLine
select
block
switch
getInputHandler
getLastActionCount
case
goToStartOfWhiteSpace
select
break
case
goToStartOfLine
select
break
case
goToFirstVisibleLine
select
break
smartEnd
select
boolean
if
getBooleanProperty
goToEndOfLine
select
block
switch
getInputHandler
getLastActionCount
case
goToEndOfWhiteSpace
select
break
case
goToEndOfLine
select
break
case
goToLastVisibleLine
select
break
goToStartOfLine
select
boolean
Macros
Recorder
recorder
getMacroRecorder
if
recorder
record
select
int
newCaret
getLineStartOffset
getCaretLine
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
goToEndOfLine
select
boolean
Macros
Recorder
recorder
getMacroRecorder
if
recorder
record
select
int
newCaret
getLineEndOffset
getCaretLine
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
setMagicCaretPosition
MAX_VALUE
goToStartOfWhiteSpace
select
boolean
Macros
Recorder
recorder
getMacroRecorder
if
recorder
record
select
int
firstIndent
getLeadingWhiteSpace
getLineText
caretLine
int
firstOfLine
getLineStartOffset
caretLine
firstIndent
firstOfLine
firstIndent
if
firstIndent
getLineEndOffset
caretLine
firstIndent
firstOfLine
if
select
extendSelection
caret
firstIndent
if
multi
selectNone
moveCaretPosition
firstIndent
goToEndOfWhiteSpace
select
boolean
Macros
Recorder
recorder
getMacroRecorder
if
recorder
record
select
int
lastIndent
getTrailingWhiteSpace
getLineText
caretLine
int
lastOfLine
getLineEndOffset
caretLine
lastIndent
lastOfLine
lastIndent
if
lastIndent
getLineStartOffset
caretLine
lastIndent
lastOfLine
if
select
extendSelection
caret
lastIndent
if
multi
selectNone
moveCaretPosition
lastIndent
goToFirstVisibleLine
select
boolean
Macros
Recorder
recorder
getMacroRecorder
if
recorder
record
select
int
firstVisibleLine
firstLine
electricScroll
firstLine
electricScroll
if
firstVisibleLine
getVirtualLineCount
firstVisibleLine
getVirtualLineCount
firstVisibleLine
virtualToPhysical
firstVisibleLine
int
firstVisible
getLineEndOffset
firstVisibleLine
if
select
extendSelection
caret
firstVisible
if
multi
selectNone
moveCaretPosition
firstVisible
goToLastVisibleLine
select
boolean
Macros
Recorder
recorder
getMacroRecorder
if
recorder
record
select
int
lastVisibleLine
firstLine
visibleLines
if
lastVisibleLine
getVirtualLineCount
lastVisibleLine
getVirtualLineCount
if
lastVisibleLine
electricScroll
lastVisibleLine
lastVisibleLine
electricScroll
lastVisibleLine
virtualToPhysical
lastVisibleLine
int
lastVisible
getLineEndOffset
lastVisibleLine
if
select
extendSelection
caret
lastVisible
if
multi
selectNone
moveCaretPosition
lastVisible
goToMarker
shortcut
char
select
boolean
Marker
marker
getMarker
shortcut
if
marker
block
getToolkit
beep
return
int
pos
getPosition
if
select
extendSelection
caret
pos
if
multi
selectNone
moveCaretPosition
pos
addMarker
Selection
selection
getSelection
for
forControl
int
i
i
length
i
block
Selection
s
selection
i
if
startLine
endLine
block
if
startLine
caretLine
addMarker
start
if
endLine
caretLine
addMarker
end
addOrRemoveMarker
caret
swapMarkerAndCaret
shortcut
char
Marker
marker
getMarker
shortcut
if
marker
block
getToolkit
beep
return
int
caret
getCaretPosition
setCaretPosition
getPosition
addMarker
shortcut
caret
lineComment
String
comment
String
getProperty
if
isEditable
comment
length
block
getToolkit
beep
return
comment
comment
beginCompoundEdit
int
lines
getSelectedLines
try
for
forControl
int
i
i
length
i
block
insertString
getLineStartOffset
lines
i
comment
catchClause
bl
log
ERROR
bl
endCompoundEdit
selectNone
rangeComment
String
commentStart
String
getProperty
String
commentEnd
String
getProperty
if
isEditable
commentStart
commentEnd
length
length
block
getToolkit
beep
return
commentStart
commentStart
commentEnd
commentEnd
try
beginCompoundEdit
Selection
selection
getSelection
if
length
block
int
oldCaret
caret
insertString
caret
commentStart
insertString
caret
commentEnd
setCaretPosition
oldCaret
length
for
forControl
int
i
i
length
i
block
Selection
s
selection
i
if
s
Selection
Range
block
insertString
start
commentStart
insertString
end
commentEnd
if
s
Selection
Rect
block
for
forControl
int
j
startLine
j
endLine
j
block
insertString
getStart
buffer
j
commentStart
int
end
getEnd
buffer
j
j
endLine
length
insertString
end
commentEnd
selectNone
catchClause
bl
log
ERROR
bl
endCompoundEdit
formatParagraph
if
isEditable
block
getToolkit
beep
return
int
maxLineLength
Integer
getProperty
if
maxLineLength
block
getToolkit
beep
return
Selection
selection
getSelection
if
length
block
beginCompoundEdit
for
forControl
int
i
i
length
i
block
Selection
s
selection
i
setSelectedText
s
format
getSelectedText
s
maxLineLength
endCompoundEdit
block
int
lineNo
getCaretLine
int
start
end
getLength
for
forControl
int
i
lineNo
i
i
block
getLineText
i
lineSegment
for
forControl
int
j
j
count
j
block
switch
array
offset
j
case
break
case
continue
start
getLineStartOffset
i
break
for
forControl
int
i
lineNo
i
getLineCount
i
block
getLineText
i
lineSegment
for
forControl
int
j
j
count
j
block
switch
array
offset
j
case
break
case
continue
end
getLineEndOffset
i
break
try
beginCompoundEdit
String
text
getText
start
end
start
remove
start
end
start
insertString
start
format
text
maxLineLength
catchClause
bl
return
endCompoundEdit
spacesToTabs
Selection
selection
getSelection
if
isEditable
length
block
getToolkit
beep
return
beginCompoundEdit
for
forControl
int
i
i
length
i
block
Selection
s
selection
i
setSelectedText
s
spacesToTabs
getSelectedText
s
getTabSize
endCompoundEdit
tabsToSpaces
Selection
selection
getSelection
if
isEditable
length
block
getToolkit
beep
return
beginCompoundEdit
for
forControl
int
i
i
length
i
block
Selection
s
selection
i
setSelectedText
s
tabsToSpaces
getSelectedText
s
getTabSize
endCompoundEdit
toUpperCase
Selection
selection
getSelection
if
isEditable
length
block
getToolkit
beep
return
beginCompoundEdit
for
forControl
int
i
i
length
i
block
Selection
s
selection
i
setSelectedText
s
getSelectedText
toUpperCase
s
endCompoundEdit
toLowerCase
Selection
selection
getSelection
if
isEditable
length
block
getToolkit
beep
return
beginCompoundEdit
for
forControl
int
i
i
length
i
block
Selection
s
selection
i
setSelectedText
s
getSelectedText
toLowerCase
s
endCompoundEdit
removeTrailingWhiteSpace
if
isEditable
getToolkit
beep
block
removeTrailingWhiteSpace
getSelectedLines
indentSelectedLines
if
isEditable
getToolkit
beep
block
indentLines
getSelectedLines
selectNone
shiftIndentLeft
if
isEditable
getToolkit
beep
block
shiftIndentLeft
getSelectedLines
shiftIndentRight
if
isEditable
getToolkit
beep
block
shiftIndentRight
getSelectedLines
joinLines
Element
map
getDefaultRootElement
Element
lineElement
getElement
caretLine
int
start
getStartOffset
int
end
getEndOffset
if
end
getLength
block
getToolkit
beep
return
Element
nextLineElement
getElement
caretLine
int
nextStart
getStartOffset
int
nextEnd
getEndOffset
try
remove
end
getLeadingWhiteSpace
getText
nextStart
nextEnd
nextStart
catchClause
bl
log
ERROR
bl
goToMatchingBracket
int
dot
caret
getLineStartOffset
caretLine
try
int
bracket
findMatchingBracket
buffer
caretLine
max
dot
if
bracket
block
setCaretPosition
bracket
return
catchClause
bl
log
ERROR
bl
getToolkit
beep
String
openBrackets
String
closeBrackets
selectBlock
Selection
s
getSelectionAtOffset
caret
int
start
end
if
s
start
end
caret
block
start
start
end
end
String
text
getText
getLength
int
count
char
openBracket
char
closeBracket
if
start
block
getToolkit
beep
return
while
start
block
char
c
charAt
start
int
index
indexOf
c
if
index
block
if
count
block
openBracket
c
closeBracket
charAt
index
break
if
indexOf
c
count
count
if
openBracket
block
getToolkit
beep
return
block
do
end
getLength
block
char
c
charAt
end
if
c
closeBracket
block
if
count
block
end
break
if
c
openBracket
count
setSelection
Selection
Range
start
end
moveCaretPosition
end
showGoToLineDialog
String
line
input
view
if
line
return
try
int
lineNumber
parseInt
line
setCaretPosition
getLineStartOffset
lineNumber
catchClause
e
getToolkit
beep
showSelectLineRangeDialog
SelectLineRange
view
showWordCountDialog
String
selection
getSelectedText
if
selection
block
doWordCount
view
selection
return
try
doWordCount
view
getText
getLength
catchClause
bl
log
ERROR
bl
completeWord
String
noWordSep
String
getProperty
if
noWordSep
noWordSep
if
isEditable
block
getToolkit
beep
return
String
line
getLineText
caretLine
int
dot
caret
getLineStartOffset
caretLine
if
dot
block
getToolkit
beep
return
char
ch
charAt
dot
if
isLetterOrDigit
ch
indexOf
ch
block
getToolkit
beep
return
int
wordStart
findWordStart
line
dot
noWordSep
String
word
substring
wordStart
dot
if
length
block
getToolkit
beep
return
Vector
completions
Vector
int
wordLen
length
for
forControl
int
i
i
getLineCount
i
block
line
getLineText
i
if
startsWith
word
block
if
i
caretLine
wordStart
continue
String
_word
completeWord
line
noWordSep
if
length
wordLen
block
if
indexOf
_word
addElement
_word
int
len
length
length
for
forControl
int
j
j
len
j
block
char
c
charAt
j
if
isLetterOrDigit
c
indexOf
c
block
if
i
caretLine
wordStart
j
continue
if
regionMatches
j
word
wordLen
block
String
_word
completeWord
line
j
noWordSep
if
length
wordLen
block
if
indexOf
_word
addElement
_word
quicksort
completions
MiscUtilities
StringICaseCompare
if
size
getToolkit
beep
if
size
block
setSelectedText
String
elementAt
block
Point
location
Point
offsetToX
caretLine
wordStart
getFontMetrics
getHeight
physicalToVirtual
caretLine
firstLine
convertPointToScreen
location
painter
CompleteWord
view
word
completions
location
selectFold
selectFoldAt
caretLine
selectFoldAt
line
int
int
start
int
end
if
isFoldStart
line
block
start
line
int
foldLevel
getFoldLevel
line
line
while
line
getLineCount
getFoldLevel
line
foldLevel
line
end
line
block
start
line
int
foldLevel
getFoldLevel
line
while
start
getFoldLevel
start
foldLevel
start
end
line
while
end
getLineCount
getFoldLevel
end
foldLevel
end
int
newCaret
getLineEndOffset
end
extendSelection
getLineStartOffset
start
newCaret
moveCaretPosition
newCaret
addNotify
addNotify
sharedInstance
registerComponent
painter
sharedInstance
registerComponent
gutter
if
documentHandlerInstalled
block
documentHandlerInstalled
addDocumentListener
documentHandler
addFoldListener
foldHandler
recalculateVisibleLines
removeNotify
removeNotify
sharedInstance
unregisterComponent
painter
sharedInstance
unregisterComponent
gutter
if
focusedComponent
focusedComponent
if
documentHandlerInstalled
block
removeDocumentListener
documentHandler
removeFoldListener
foldHandler
documentHandlerInstalled
hasFocus
boolean
Component
c
while
c
Window
block
if
c
return
c
getParent
Component
focusOwner
Window
c
boolean
hasFocus
focusOwner
if
hasFocus
focusedComponent
focusedComponent
return
hasFocus
grabFocus
grabFocus
hasFocus
getFocusTraversalKeysEnabled
boolean
return
isMultipleSelectionEnabled
boolean
return
multi
toggleMultipleSelectionEnabled
multi
multi
if
getStatus
getStatus
updateMiscStatus
setMultipleSelectionEnabled
multi
boolean
multi
multi
if
getStatus
getStatus
updateMiscStatus
processKeyEvent
evt
KeyEvent
evt
processKeyEvent
evt
if
evt
return
if
isClosed
return
InputHandler
inputHandler
getInputHandler
KeyListener
keyEventInterceptor
getKeyEventInterceptor
switch
getID
case
KEY_TYPED
if
keyEventInterceptor
keyTyped
evt
keyTyped
evt
break
case
KEY_PRESSED
if
keyEventInterceptor
keyPressed
evt
keyPressed
evt
break
case
KEY_RELEASED
if
keyEventInterceptor
keyReleased
evt
keyReleased
evt
break
if
isConsumed
processKeyEvent
evt
Segment
lineSegment
MouseHandler
mouseHandler
int
maxHorizontalScrollWidth
Vector
selection
isCaretVisible
boolean
return
blink
hasFocus
isHighlightVisible
boolean
return
hasFocus
recalculateVisibleLines
if
painter
return
int
height
getHeight
int
lineHeight
getFontMetrics
getHeight
visibleLines
height
lineHeight
updateScrollBars
updateMaxHorizontalScrollWidth
int
_maxHorizontalScrollWidth
getMaxLineWidth
physFirstLine
visibleLines
if
_maxHorizontalScrollWidth
maxHorizontalScrollWidth
block
maxHorizontalScrollWidth
_maxHorizontalScrollWidth
setValues
horizontalOffset
getWidth
maxHorizontalScrollWidth
getFontMetrics
charWidth
String
CENTER
String
RIGHT
String
LEFT
String
BOTTOM
Timer
caretTimer
JEditTextArea
focusedComponent
View
view
Gutter
gutter
TextAreaPainter
painter
JPopupMenu
popup
EventListenerList
listenerList
MutableCaretEvent
caretEvent
boolean
caretBlinks
boolean
blink
int
firstLine
int
physFirstLine
int
visibleLines
int
electricScroll
int
horizontalOffset
boolean
middleMousePaste
JScrollBar
vertical
JScrollBar
horizontal
boolean
scrollBarsInitialized
Buffer
buffer
DocumentHandler
documentHandler
FoldHandler
foldHandler
boolean
documentHandlerInstalled
int
caret
int
caretLine
int
bracketPosition
int
bracketLine
int
magicCaret
boolean
multi
boolean
overwrite
TextRenderer
renderer
quicksort
obj
int
_start
int
_end
int
int
start
_start
int
end
_end
int
mid
obj
_start
_end
if
_start
_end
return
while
start
end
block
while
start
_end
obj
start
mid
start
while
end
_start
obj
end
mid
end
if
start
end
block
int
tmp
obj
start
obj
start
obj
end
obj
end
tmp
start
end
if
_start
end
quicksort
obj
_start
end
if
start
_end
quicksort
obj
start
_end
_addToSelection
addMe
Selection
if
start
start
if
end
getLength
end
getLength
if
start
end
block
throw
IllegalArgumentException
start
end
if
start
end
return
for
forControl
int
i
i
size
i
block
Selection
s
Selection
elementAt
i
if
_selectionsOverlap
s
addMe
block
start
min
start
start
end
max
end
end
removeElement
s
i
startLine
getLineOfOffset
start
endLine
getLineOfOffset
end
addElement
addMe
invalidateLineRange
startLine
endLine
_selectionsOverlap
boolean
s1
Selection
s2
Selection
if
start
start
start
end
end
start
end
end
return
return
getSelectedText
s
Selection
buf
StringBuffer
if
s
Selection
Rect
block
Element
map
getDefaultRootElement
int
start
start
getElement
getStartOffset
startLine
int
end
end
getElement
getStartOffset
endLine
if
end
start
block
int
tmp
end
end
start
start
tmp
for
forControl
int
i
startLine
i
endLine
i
block
Element
lineElement
getElement
i
int
lineStart
getStartOffset
int
lineEnd
getEndOffset
int
lineLen
lineEnd
lineStart
lineStart
min
lineStart
start
lineEnd
lineLen
min
end
start
lineEnd
lineStart
getText
lineStart
lineLen
lineSegment
append
array
offset
count
if
i
endLine
append
block
getText
start
end
start
lineSegment
append
array
offset
count
fireCaretEvent
Object
listeners
getListenerList
for
forControl
int
i
length
i
i
block
if
listeners
i
CaretListener
block
CaretListener
listeners
i
fireScrollEvent
vertical
boolean
Object
listeners
getListenerList
for
forControl
int
i
length
i
i
block
if
listeners
i
ScrollListener
block
if
vertical
ScrollListener
listeners
i
ScrollListener
listeners
i
createSoftTab
String
line
String
tabSize
int
int
pos
for
forControl
int
i
i
length
i
block
switch
charAt
pos
case
pos
break
case
if
pos
tabSize
pos
break
return
createWhiteSpace
tabSize
pos
doWordWrap
boolean
line
int
spaceInserted
boolean
int
maxLineLen
Integer
getProperty
if
maxLineLen
return
Element
lineElement
getDefaultRootElement
getElement
line
int
start
getStartOffset
int
end
getEndOffset
int
len
end
start
if
getCaretPosition
end
return
boolean
returnValue
int
tabSize
getTabSize
String
wordBreakChars
String
getProperty
getText
start
len
lineSegment
int
lineStart
offset
int
logicalLength
int
lastWordOffset
boolean
lastWasSpace
boolean
initialWhiteSpace
int
initialWhiteSpaceLength
for
forControl
int
i
i
len
i
block
char
ch
array
lineStart
i
if
ch
block
if
initialWhiteSpace
initialWhiteSpaceLength
i
logicalLength
tabSize
logicalLength
tabSize
if
lastWasSpace
logicalLength
maxLineLen
block
lastWordOffset
i
lastWasSpace
if
ch
block
if
initialWhiteSpace
initialWhiteSpaceLength
i
logicalLength
if
lastWasSpace
logicalLength
maxLineLen
block
lastWordOffset
i
lastWasSpace
if
wordBreakChars
indexOf
ch
block
initialWhiteSpace
logicalLength
if
lastWasSpace
logicalLength
maxLineLen
block
lastWordOffset
i
lastWasSpace
block
initialWhiteSpace
logicalLength
lastWasSpace
int
insertNewLineAt
if
spaceInserted
logicalLength
maxLineLen
i
len
block
insertNewLineAt
end
returnValue
if
logicalLength
maxLineLen
lastWordOffset
insertNewLineAt
lastWordOffset
start
continue
try
beginCompoundEdit
insertString
insertNewLineAt
indentLine
line
endCompoundEdit
return
returnValue
return
doWordCount
view
View
text
String
char
chars
toCharArray
int
characters
length
int
words
if
characters
words
words
int
lines
boolean
word
for
forControl
int
i
i
length
i
block
switch
chars
i
case
lines
case
if
word
block
words
word
break
case
word
break
Object
args
Integer
characters
Integer
words
Integer
lines
message
view
args
completeWord
String
line
String
offset
int
noWordSep
String
int
wordEnd
findWordEnd
line
offset
noWordSep
return
substring
offset
wordEnd
updateBracketHighlight
if
isBracketHighlightEnabled
return
if
bracketLine
invalidateLine
bracketLine
int
line
getCaretLine
int
offset
getCaretPosition
getLineStartOffset
line
if
offset
block
bracketPosition
bracketLine
return
int
endLine
if
visibleLines
endLine
getLineCount
block
endLine
min
getLineCount
virtualToPhysical
firstLine
visibleLines
int
beginLine
min
line
physFirstLine
try
int
bracketOffset
findMatchingBracket
buffer
line
offset
beginLine
endLine
if
bracketOffset
block
bracketLine
getLineOfOffset
bracketOffset
bracketPosition
bracketOffset
getLineStartOffset
bracketLine
invalidateLine
bracketLine
return
catchClause
bl
log
ERROR
bl
bracketLine
bracketPosition
documentChanged
evt
DocumentEvent
DocumentEvent
ElementChange
ch
getChange
getDefaultRootElement
int
count
if
ch
count
count
getChildrenAdded
length
getChildrenRemoved
length
int
line
getLineOfOffset
getOffset
if
count
invalidateLine
line
if
line
firstLine
block
setFirstLine
firstLine
count
block
updateScrollBars
invalidateLineRange
line
virtualToPhysical
firstLine
visibleLines
TextAreaBorder
Insets
insets
Insets
paintBorder
c
Component
g
Graphics
x
int
y
int
width
int
height
int
translate
x
y
setColor
getControlDarkShadow
drawRect
width
height
setColor
getControlHighlight
drawLine
width
width
height
drawLine
height
width
height
setColor
getControl
drawLine
width
width
drawLine
height
height
translate
x
y
getBorderInsets
Insets
c
Component
return
Insets
AbstractBorder
ScrollLayout
addLayoutComponent
name
String
comp
Component
if
equals
CENTER
center
comp
if
equals
RIGHT
right
comp
if
equals
LEFT
left
comp
if
equals
BOTTOM
bottom
comp
removeLayoutComponent
comp
Component
if
center
comp
center
if
right
comp
right
if
left
comp
left
if
bottom
comp
bottom
preferredLayoutSize
Dimension
parent
Container
Dimension
dim
Dimension
Border
border
getBorder
Insets
insets
if
border
insets
Insets
block
insets
getBorder
getBorderInsets
width
left
right
height
top
bottom
Dimension
leftPref
getPreferredSize
width
width
Dimension
centerPref
getPreferredSize
width
width
height
height
Dimension
rightPref
getPreferredSize
width
width
Dimension
bottomPref
getPreferredSize
height
height
return
dim
minimumLayoutSize
Dimension
parent
Container
Dimension
dim
Dimension
Border
border
getBorder
Insets
insets
if
border
insets
Insets
block
insets
getBorder
getBorderInsets
width
left
right
height
top
bottom
Dimension
leftPref
getMinimumSize
width
width
Dimension
centerPref
getMinimumSize
width
width
height
height
Dimension
rightPref
getMinimumSize
width
width
Dimension
bottomPref
getMinimumSize
height
height
return
dim
layoutContainer
parent
Container
Dimension
size
getSize
Border
border
getBorder
Insets
insets
if
border
insets
Insets
block
insets
getBorder
getBorderInsets
int
itop
top
int
ileft
left
int
ibottom
bottom
int
iright
right
int
rightWidth
getPreferredSize
width
int
leftWidth
getPreferredSize
width
int
bottomHeight
getPreferredSize
height
int
centerWidth
max
width
leftWidth
rightWidth
ileft
iright
int
centerHeight
max
height
bottomHeight
itop
ibottom
setBounds
ileft
itop
leftWidth
centerHeight
setBounds
ileft
leftWidth
itop
centerWidth
centerHeight
setBounds
ileft
leftWidth
centerWidth
itop
rightWidth
centerHeight
setBounds
ileft
itop
centerHeight
max
width
rightWidth
ileft
iright
bottomHeight
Component
center
Component
left
Component
right
Component
bottom
LayoutManager
CaretBlinker
actionPerformed
evt
ActionEvent
if
focusedComponent
hasFocus
blinkCaret
ActionListener
MutableCaretEvent
MutableCaretEvent
getDot
int
return
getCaretPosition
getMark
int
return
getMarkPosition
CaretEvent
AdjustHandler
adjustmentValueChanged
evt
AdjustmentEvent
if
scrollBarsInitialized
return
if
getAdjustable
vertical
setFirstLine
getValue
setHorizontalOffset
getValue
AdjustmentListener
ComponentHandler
componentResized
evt
ComponentEvent
recalculateVisibleLines
scrollBarsInitialized
ComponentAdapter
DocumentHandler
insertUpdate
evt
DocumentEvent
if
isLoaded
return
documentChanged
evt
int
offset
getOffset
int
length
getLength
if
caret
offset
moveCaretPosition
caret
length
updateBracketHighlight
for
forControl
int
i
i
size
i
block
Selection
s
Selection
elementAt
i
boolean
changed
if
start
offset
block
start
length
startLine
getLineOfOffset
start
changed
if
end
offset
block
end
length
endLine
getLineOfOffset
end
changed
if
changed
invalidateLineRange
startLine
endLine
removeUpdate
evt
DocumentEvent
if
isLoaded
return
documentChanged
evt
int
offset
getOffset
int
length
getLength
int
end
offset
length
boolean
caretEvent
for
forControl
int
i
i
size
i
block
Selection
s
Selection
elementAt
i
boolean
changed
if
start
offset
start
end
block
start
offset
changed
caretEvent
if
start
end
block
start
length
changed
caretEvent
if
end
offset
end
end
block
end
offset
changed
caretEvent
if
end
end
block
end
length
changed
caretEvent
if
start
end
block
removeElement
s
invalidateLineRange
startLine
endLine
i
if
changed
block
startLine
getLineOfOffset
start
endLine
getLineOfOffset
end
invalidateLineRange
startLine
endLine
if
caret
offset
caret
end
moveCaretPosition
offset
if
caret
end
moveCaretPosition
caret
length
block
updateBracketHighlight
if
caretEvent
fireCaretEvent
changedUpdate
evt
DocumentEvent
DocumentListener
FoldHandler
foldLevelsChanged
firstLine
int
lastLine
int
invalidateLineRange
firstLine
lastLine
foldStructureChanged
setFirstLine
physicalToVirtual
physFirstLine
updateScrollBars
repaint
if
getTextArea
getStatus
updateFoldStatus
Buffer
FoldListener
FocusHandler
focusGained
evt
FocusEvent
invalidateLine
caretLine
updateGutterBorders
focusLost
evt
FocusEvent
invalidateLine
caretLine
FocusListener
MouseHandler
int
dragStartLine
int
dragStartOffset
int
dragStart
int
clickCount
mousePressed
evt
MouseEvent
endCompoundEdit
grabFocus
if
isPopupTrigger
evt
popup
block
if
isVisible
setVisible
show
painter
getX
getY
return
blink
invalidateLine
caretLine
int
x
getX
int
y
getY
dragStartLine
virtualToPhysical
yToLine
y
dragStartOffset
xToOffset
dragStartLine
x
dragStart
xyToOffset
x
y
isBlockCaretEnabled
clickCount
getClickCount
switch
clickCount
case
doSingleClick
evt
break
case
try
doDoubleClick
evt
catchClause
bl
printStackTrace
break
case
doTripleClick
evt
break
mouseReleased
evt
MouseEvent
if
getSelectionCount
setRegister
getSelectedText
doSingleClick
evt
MouseEvent
if
isShiftDown
block
resizeSelection
getMarkPosition
dragStart
isControlDown
moveCaretPosition
dragStart
dragStartLine
getMarkLine
dragStart
getMarkPosition
dragStartOffset
dragStart
getLineStartOffset
dragStartLine
block
if
multi
selectNone
moveCaretPosition
dragStart
if
middleMousePaste
getModifiers
BUTTON2_MASK
block
if
isEditable
getToolkit
beep
paste
doDoubleClick
evt
MouseEvent
if
getLineLength
dragStartLine
return
try
int
bracket
findMatchingBracket
buffer
dragStartLine
max
dragStartOffset
if
bracket
block
if
bracket
caret
block
addToSelection
Selection
Range
bracket
caret
block
addToSelection
Selection
Range
caret
bracket
moveCaretPosition
bracket
return
catchClause
bl
log
ERROR
bl
String
lineText
getLineText
dragStartLine
String
noWordSep
String
getProperty
if
dragStartOffset
getLineLength
dragStartLine
dragStartOffset
int
wordStart
findWordStart
lineText
dragStartOffset
noWordSep
int
wordEnd
findWordEnd
lineText
dragStartOffset
noWordSep
int
lineStart
getLineStartOffset
dragStartLine
addToSelection
Selection
Range
lineStart
wordStart
lineStart
wordEnd
moveCaretPosition
lineStart
wordEnd
doTripleClick
evt
MouseEvent
int
newCaret
getLineEndOffset
dragStartLine
addToSelection
Selection
Range
getLineStartOffset
dragStartLine
newCaret
moveCaretPosition
newCaret
mouseDragged
evt
MouseEvent
if
isPopupTrigger
evt
popup
isVisible
return
boolean
rect
isControlDown
switch
clickCount
case
doSingleDrag
evt
rect
break
case
doDoubleDrag
evt
rect
break
case
doTripleDrag
evt
rect
break
mouseMoved
evt
MouseEvent
doSingleDrag
evt
MouseEvent
rect
boolean
int
dot
xyToOffset
getX
getY
isBlockCaretEnabled
if
dot
caret
return
resizeSelection
dragStart
dot
rect
moveCaretPosition
dot
doDoubleDrag
evt
MouseEvent
rect
boolean
int
markLineStart
getLineStartOffset
dragStartLine
int
markLineLength
getLineLength
dragStartLine
int
mark
dragStartOffset
int
line
virtualToPhysical
yToLine
getY
int
lineStart
getLineStartOffset
line
int
lineLength
getLineLength
line
int
offset
xToOffset
line
getX
String
lineText
getLineText
line
String
markLineText
getLineText
dragStartLine
String
noWordSep
String
getProperty
if
markLineStart
dragStartOffset
lineStart
offset
block
if
offset
offset
lineLength
block
offset
findWordStart
lineText
offset
noWordSep
if
markLineLength
block
mark
findWordEnd
markLineText
mark
noWordSep
block
if
offset
lineLength
block
offset
findWordEnd
lineText
offset
noWordSep
if
mark
mark
markLineLength
block
mark
findWordStart
markLineText
mark
noWordSep
if
lineStart
offset
caret
return
resizeSelection
markLineStart
mark
lineStart
offset
rect
moveCaretPosition
lineStart
offset
doTripleDrag
evt
MouseEvent
rect
boolean
int
mouseLine
virtualToPhysical
yToLine
getY
int
offset
xToOffset
mouseLine
getX
int
mark
int
mouse
if
dragStartLine
mouseLine
block
mark
getLineEndOffset
dragStartLine
if
offset
getLineLength
mouseLine
mouse
getLineEndOffset
mouseLine
mouse
getLineStartOffset
mouseLine
block
mark
getLineStartOffset
dragStartLine
if
offset
mouse
getLineStartOffset
mouseLine
mouse
getLineEndOffset
mouseLine
if
mouse
caret
return
resizeSelection
mark
mouse
rect
moveCaretPosition
mouse
MouseAdapter
MouseMotionListener
CaretUndo
int
caret
CaretUndo
caret
int
caret
caret
isSignificant
boolean
return
getPresentationName
String
return
undo
undo
if
focusedComponent
block
int
length
getBuffer
getLength
if
caret
length
block
selectNone
setCaretPosition
caret
log
WARNING
caret
length
addEdit
boolean
edit
UndoableEdit
if
edit
CaretUndo
block
die
return
return
toString
String
return
getPresentationName
caret
AbstractUndoableEdit
caretTimer
Timer
CaretBlinker
setInitialDelay
start
JComponent
