TextUtilities
findMatchingBracket
int
buffer
Buffer
line
int
offset
int
return
findMatchingBracket
buffer
line
offset
getDefaultRootElement
getElementCount
findMatchingBracket
int
buffer
Buffer
line
int
offset
int
startLine
int
endLine
int
if
getLength
return
Element
map
getDefaultRootElement
Element
lineElement
getElement
line
Segment
lineText
Segment
int
lineStart
getStartOffset
getText
lineStart
getEndOffset
lineStart
lineText
char
c
array
offset
offset
char
cprime
boolean
direction
switch
c
case
cprime
direction
break
case
cprime
direction
break
case
cprime
direction
break
case
cprime
direction
break
case
cprime
direction
break
case
cprime
direction
break
case
return
int
count
byte
idOfBracket
NULL
Buffer
LineInfo
lineInfo
markTokens
line
Token
lineTokens
getFirstToken
int
tokenListOffset
for
forControl
block
if
id
END
throw
InternalError
if
tokenListOffset
length
offset
block
idOfBracket
id
break
block
tokenListOffset
length
lineTokens
next
if
direction
block
count
for
forControl
int
i
line
i
startLine
i
block
lineElement
getElement
i
lineStart
getStartOffset
int
lineLength
getEndOffset
lineStart
getText
lineStart
lineLength
lineText
int
scanStartOffset
if
i
line
block
lineTokens
markTokens
getLastToken
i
tokenListOffset
scanStartOffset
lineLength
block
if
tokenListOffset
lineLength
tokenListOffset
length
scanStartOffset
offset
while
lineTokens
block
byte
id
id
if
id
END
block
lineTokens
prev
continue
int
len
length
if
id
idOfBracket
block
for
forControl
int
j
scanStartOffset
j
max
tokenListOffset
len
j
block
if
j
count
println
j
count
if
j
block
println
scanStartOffset
tokenListOffset
len
println
j
char
ch
array
offset
j
if
ch
c
count
if
ch
cprime
block
if
count
return
lineStart
j
scanStartOffset
tokenListOffset
tokenListOffset
len
lineTokens
prev
block
count
for
forControl
int
i
line
i
endLine
i
block
lineElement
getElement
i
lineStart
getStartOffset
getText
lineStart
getEndOffset
lineStart
lineText
int
scanStartOffset
if
i
line
block
lineTokens
markTokens
getFirstToken
i
tokenListOffset
scanStartOffset
scanStartOffset
offset
for
forControl
block
byte
id
id
if
id
END
break
int
len
length
if
id
idOfBracket
block
for
forControl
int
j
scanStartOffset
j
tokenListOffset
len
j
block
char
ch
array
offset
j
if
ch
c
count
if
ch
cprime
block
if
count
return
lineStart
j
scanStartOffset
tokenListOffset
tokenListOffset
len
lineTokens
next
return
findWordStart
int
line
String
pos
int
noWordSep
String
char
ch
charAt
pos
if
noWordSep
noWordSep
boolean
selectNoLetter
isLetterOrDigit
ch
indexOf
ch
int
wordStart
for
forControl
int
i
pos
i
i
block
ch
charAt
i
if
selectNoLetter
isLetterOrDigit
ch
indexOf
ch
block
wordStart
i
break
return
wordStart
findWordEnd
int
line
String
pos
int
noWordSep
String
if
pos
pos
char
ch
charAt
pos
if
noWordSep
noWordSep
boolean
selectNoLetter
isLetterOrDigit
ch
indexOf
ch
int
wordEnd
length
for
forControl
int
i
pos
i
length
i
block
ch
charAt
i
if
selectNoLetter
isLetterOrDigit
ch
indexOf
ch
block
wordEnd
i
break
return
wordEnd
regionMatches
boolean
ignoreCase
boolean
text
Segment
offset
int
match
char
int
length
offset
length
char
textArray
array
if
length
offset
count
return
for
forControl
int
i
offset
j
i
length
i
j
block
char
c1
textArray
i
char
c2
match
j
if
ignoreCase
block
c1
toUpperCase
c1
c2
toUpperCase
c2
if
c1
c2
return
return
spacesToTabs
String
in
String
tabSize
int
StringBuffer
buf
StringBuffer
int
width
int
whitespace
for
forControl
int
i
i
length
i
block
switch
charAt
i
case
whitespace
width
break
case
int
tab
tabSize
width
tabSize
width
tab
whitespace
tab
break
case
if
whitespace
block
append
createWhiteSpace
whitespace
tabSize
whitespace
width
append
break
case
if
whitespace
block
append
createWhiteSpace
whitespace
tabSize
whitespace
append
charAt
i
width
break
if
whitespace
block
append
createWhiteSpace
whitespace
tabSize
return
toString
tabsToSpaces
String
in
String
tabSize
int
StringBuffer
buf
StringBuffer
int
width
for
forControl
int
i
i
length
i
block
switch
charAt
i
case
int
count
tabSize
width
tabSize
width
count
while
count
append
break
case
width
append
charAt
i
break
case
width
append
charAt
i
break
return
toString
format
String
text
String
maxLineLength
int
StringBuffer
buf
StringBuffer
StringBuffer
word
StringBuffer
int
lineLength
boolean
newline
boolean
space
char
chars
toCharArray
for
forControl
int
i
i
length
i
block
char
c
chars
i
switch
c
case
if
i
length
i
block
if
lineLength
length
maxLineLength
append
if
space
length
append
append
word
setLength
append
newline
space
break
if
newline
block
if
lineLength
length
maxLineLength
append
if
space
length
append
append
word
setLength
append
newline
space
lineLength
break
newline
case
if
lineLength
length
maxLineLength
block
append
lineLength
newline
if
space
lineLength
length
block
append
lineLength
space
space
append
word
lineLength
length
setLength
break
case
newline
if
lineLength
space
append
c
break
if
lineLength
length
maxLineLength
append
if
space
length
append
append
word
return
toString
