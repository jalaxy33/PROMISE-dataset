WorkThreadPool
WorkThreadPool
name
String
count
int
listenerList
EventListenerList
if
count
block
threadGroup
ThreadGroup
name
threads
WorkThread
count
for
forControl
int
i
i
length
i
block
threads
i
WorkThread
threadGroup
name
i
log
WARNING
start
if
threads
block
for
forControl
int
i
i
length
i
block
threads
i
start
addWorkRequest
run
Runnable
inAWT
boolean
if
threads
block
run
return
if
inAWT
requestCount
awtRequestCount
block
if
isEventDispatchThread
run
invokeLater
run
return
Request
request
Request
run
synchronized
lock
if
inAWT
block
if
firstAWTRequest
lastAWTRequest
firstAWTRequest
lastAWTRequest
request
block
next
request
lastAWTRequest
request
awtRequestCount
if
requestCount
queueAWTRunner
block
if
firstRequest
lastRequest
firstRequest
lastRequest
request
block
next
request
lastRequest
request
requestCount
notify
waitForRequests
if
threads
return
synchronized
waitForAllLock
while
requestCount
block
try
wait
catchClause
ie
log
ERROR
ie
if
isEventDispatchThread
block
doAWTRequests
block
try
invokeAndWait
RunRequestsInAWTThread
catchClause
e
log
ERROR
e
getRequestCount
int
return
requestCount
getThreadCount
int
if
threads
return
return
length
getThread
WorkThread
index
int
return
threads
index
addProgressListener
listener
WorkThreadProgressListener
add
WorkThreadProgressListener
listener
removeProgressListener
listener
WorkThreadProgressListener
remove
WorkThreadProgressListener
listener
Object
lock
String
Object
waitForAllLock
String
fireProgressChanged
thread
WorkThread
Object
listeners
getListenerList
if
length
block
int
index
for
forControl
int
i
i
length
i
block
if
threads
i
thread
block
index
i
break
int
_index
index
invokeLater
Runnable
run
for
forControl
int
i
length
i
i
block
if
listeners
i
WorkThreadProgressListener
block
WorkThreadProgressListener
listeners
i
requestDone
synchronized
lock
requestCount
if
requestCount
firstAWTRequest
queueAWTRunner
getNextRequest
Request
synchronized
lock
Request
request
firstRequest
if
request
return
firstRequest
next
if
firstRequest
lastRequest
if
alreadyRun
throw
InternalError
run
alreadyRun
return
request
ThreadGroup
threadGroup
WorkThread
threads
Request
firstRequest
Request
lastRequest
int
requestCount
boolean
awtRunnerQueued
Request
firstAWTRequest
Request
lastAWTRequest
int
awtRequestCount
EventListenerList
listenerList
doAWTRequests
while
firstAWTRequest
block
doAWTRequest
getNextAWTRequest
doAWTRequest
request
Request
try
run
catchClause
t
log
ERROR
WorkThread
log
ERROR
WorkThread
t
awtRequestCount
queueAWTRunner
if
awtRunnerQueued
block
awtRunnerQueued
invokeLater
RunRequestsInAWTThread
getNextAWTRequest
Request
synchronized
lock
Request
request
firstAWTRequest
firstAWTRequest
next
if
firstAWTRequest
lastAWTRequest
if
alreadyRun
throw
InternalError
run
alreadyRun
return
request
int
ID
Request
int
id
ID
Runnable
run
boolean
alreadyRun
Request
next
Request
run
Runnable
run
run
toString
String
return
id
run
RunRequestsInAWTThread
run
awtRunnerQueued
doAWTRequests
Runnable
