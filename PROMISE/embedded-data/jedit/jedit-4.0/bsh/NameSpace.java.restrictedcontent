NameSpace
NameSpace
JAVACODE
NameSpace
String
name
NameSpace
parent
Hashtable
variables
Hashtable
methods
Hashtable
importedClasses
This
thisReference
Vector
importedPackages
boolean
superImport
Hashtable
classCache
NameSpace
name
String
name
NameSpace
parent
NameSpace
name
String
setName
name
setParent
parent
addCMListener
setName
name
String
name
name
getName
String
return
name
SimpleNode
callerInfoNode
setNode
node
SimpleNode
callerInfoNode
node
getNode
SimpleNode
return
callerInfoNode
get
Object
name
String
interpreter
Interpreter
CallStack
callstack
CallStack
return
getNameResolver
toObject
callstack
interpreter
name
setVariable
name
String
value
Object
if
variables
variables
Hashtable
if
value
block
remove
name
return
boolean
recurse
strictJava
Object
current
getVariableImpl
name
recurse
if
current
current
TypedVariable
block
try
TypedVariable
current
catchClause
e
throw
EvalError
name
getMessage
if
strictJava
throw
EvalError
name
put
name
value
getVariableNames
String
if
variables
return
String
return
enumerationToStringArray
keys
getMethodNames
String
if
methods
return
String
return
enumerationToStringArray
keys
enumerationToStringArray
String
e
Enumeration
Vector
v
Vector
while
hasMoreElements
addElement
nextElement
String
sa
String
size
copyInto
sa
return
sa
getParent
NameSpace
return
parent
getSuper
NameSpace
if
parent
return
parent
return
getGlobal
NameSpace
if
parent
return
getGlobal
return
getThis
This
declaringInterpreter
Interpreter
if
thisReference
thisReference
getThis
declaringInterpreter
return
thisReference
prune
setParent
setParent
parent
NameSpace
parent
parent
if
parent
loadDefaultImports
getVariable
Object
name
String
return
getVariable
name
getVariable
Object
name
String
recurse
boolean
Object
val
getVariableImpl
name
recurse
return
unwrapVariable
val
unwrapVariable
Object
val
Object
if
val
TypedVariable
val
TypedVariable
val
return
val
VOID
val
getVariableImpl
Object
name
String
recurse
boolean
Object
val
if
variables
val
get
name
if
recurse
val
parent
val
getVariableImpl
name
recurse
return
val
setTypedVariable
name
String
type
Class
value
Object
isFinal
boolean
if
variables
variables
Hashtable
if
value
block
if
isPrimitive
block
if
type
TYPE
value
Primitive
FALSE
if
type
TYPE
value
Primitive
byte
if
type
TYPE
value
Primitive
short
if
type
TYPE
value
Primitive
char
if
type
TYPE
value
Primitive
int
if
type
TYPE
value
Primitive
if
type
TYPE
value
Primitive
if
type
TYPE
value
Primitive
value
NULL
if
containsKey
name
block
Object
existing
getVariableImpl
name
if
existing
TypedVariable
block
if
TypedVariable
existing
type
throw
EvalError
name
TypedVariable
existing
block
TypedVariable
existing
return
put
name
TypedVariable
type
value
isFinal
setMethod
name
String
method
BshMethod
if
methods
methods
Hashtable
Object
m
get
name
if
m
put
name
method
if
m
BshMethod
block
Vector
v
Vector
addElement
m
addElement
method
put
name
v
Vector
m
getMethod
BshMethod
name
String
sig
Class
BshMethod
method
Object
m
if
methods
m
get
name
if
m
Vector
block
Vector
vm
Vector
m
BshMethod
ma
BshMethod
size
copyInto
ma
Class
candidates
Class
length
for
forControl
int
i
i
length
i
candidates
i
ma
i
getArgTypes
int
match
findMostSpecificSignature
sig
candidates
if
match
method
ma
match
method
BshMethod
m
if
method
parent
return
getMethod
name
sig
return
method
importClass
name
String
if
importedClasses
importedClasses
Hashtable
put
suffix
name
name
nameSpaceChanged
importPackage
name
String
if
importedPackages
importedPackages
Vector
addElement
name
nameSpaceChanged
getImportedPackages
String
Vector
v
getImportedPackages
String
packages
String
size
copyInto
packages
return
packages
getImportedPackages
Vector
recurse
boolean
if
recurse
return
importedPackages
block
Vector
v
Vector
if
parent
block
String
psa
getImportedPackages
for
forControl
int
i
i
length
i
addElement
psa
i
if
importedPackages
for
forControl
int
i
i
size
i
addElement
elementAt
i
return
v
cacheClass
c
Class
if
classCache
block
classCache
Hashtable
put
name
c
getClass
Class
name
String
Class
c
getClassImpl
name
if
c
return
c
if
parent
return
getClass
name
return
getClassImpl
Class
name
String
boolean
unqualifiedName
isCompound
name
Class
c
if
classCache
block
c
Class
get
name
if
c
return
c
if
unqualifiedName
block
c
getImportedClassImpl
name
if
c
block
cacheClass
c
return
c
c
classForName
name
if
c
block
if
unqualifiedName
cacheClass
c
return
c
debug
name
return
getImportedClassImpl
Class
name
String
String
fullname
if
importedClasses
fullname
String
get
name
if
fullname
block
Class
clas
classForName
fullname
if
clas
block
if
isCompound
fullname
try
clas
getNameResolver
toClass
fullname
catchClause
e
debug
fullname
if
clas
block
cacheClassInfo
fullname
clas
return
clas
return
clas
return
if
importedPackages
for
forControl
int
i
size
i
i
block
String
s
String
elementAt
i
name
Class
c
classForName
s
if
c
return
c
if
superImport
block
BshClassManager
bcm
getClassManager
if
bcm
block
String
s
getClassNameByUnqName
name
if
s
return
classForName
s
return
classForName
Class
name
String
return
classForName
name
getAllNames
String
Vector
vec
Vector
getAllNamesAux
vec
String
names
String
size
copyInto
names
return
names
getAllNamesAux
vec
Vector
Enumeration
varNames
keys
while
hasMoreElements
addElement
nextElement
Enumeration
methodNames
keys
while
hasMoreElements
addElement
nextElement
if
parent
getAllNamesAux
vec
Vector
nameSourceListeners
addNameSourceListener
listener
NameSource
Listener
if
nameSourceListeners
nameSourceListeners
Vector
addElement
listener
doSuperImport
BshClassManager
bcm
getClassManager
if
bcm
doSuperImport
superImport
TypedVariable
Class
type
Object
value
boolean
isFinal
TypedVariable
type
Class
value
Object
isFinal
boolean
type
type
if
type
throw
InterpreterError
value
isFinal
isFinal
setValue
value
setValue
val
Object
if
isFinal
value
throw
EvalError
val
getAssignableForm
val
type
if
val
Primitive
Primitive
val
try
val
castPrimitive
Primitive
val
type
catchClause
e
throw
InterpreterError
value
val
getValue
Object
return
value
getType
Class
return
type
toString
String
return
type
value
java
io
Serializable
checkAssignableFrom
Object
rhs
Object
lhsType
Class
return
getAssignableForm
rhs
lhsType
getAssignableForm
Object
rhs
Object
lhsType
Class
Class
originalType
if
lhsType
throw
InterpreterError
if
rhs
throw
InterpreterError
if
rhs
VOID
throw
EvalError
if
rhs
NULL
if
isPrimitive
return
rhs
throw
EvalError
getName
Class
rhsType
if
rhs
Primitive
block
rhsType
originalType
Primitive
rhs
if
isPrimitive
block
block
if
isAssignableFrom
lhsType
Boolean
isAssignableFrom
lhsType
Character
isAssignableFrom
lhsType
Number
block
rhs
Primitive
rhs
rhsType
getClass
assignmentError
lhsType
originalType
block
rhsType
originalType
getClass
if
isPrimitive
block
if
rhsType
Boolean
block
rhs
Primitive
Boolean
rhs
rhsType
TYPE
if
rhsType
Character
block
rhs
Primitive
Character
rhs
rhsType
TYPE
if
isAssignableFrom
rhsType
Number
block
rhs
Primitive
Number
rhs
rhsType
Primitive
rhs
assignmentError
lhsType
originalType
if
isAssignableFrom
lhsType
rhsType
return
rhs
if
lhsType
Short
if
rhsType
Byte
return
Short
Number
rhs
if
lhsType
Integer
block
if
rhsType
Byte
rhsType
Short
return
Integer
Number
rhs
if
rhsType
Character
return
Integer
Number
rhs
if
lhsType
Long
block
if
rhsType
Byte
rhsType
Short
rhsType
Integer
return
Long
Number
rhs
if
rhsType
Character
return
Long
Number
rhs
if
lhsType
Float
block
if
rhsType
Byte
rhsType
Short
rhsType
Integer
rhsType
Long
return
Float
Number
rhs
if
rhsType
Character
return
Float
Number
rhs
if
lhsType
Double
block
if
rhsType
Byte
rhsType
Short
rhsType
Integer
rhsType
Long
rhsType
Float
return
Double
Number
rhs
if
rhsType
Character
return
Double
Number
rhs
if
canGenerateInterfaces
isInterface
rhs
bsh
This
block
return
bsh
This
rhs
assignmentError
lhsType
originalType
return
rhs
assignmentError
lhs
Class
rhs
Class
String
lhsType
normalizeClassName
lhs
String
rhsType
normalizeClassName
rhs
throw
EvalError
rhsType
lhsType
toString
String
return
name
toString
name
toString
writeObject
s
java
io
ObjectOutputStream
defaultWriteObject
invokeMethod
Object
methodName
String
args
Object
interpreter
Interpreter
return
invokeMethod
methodName
args
interpreter
invokeMethod
Object
methodName
String
args
Object
interpreter
Interpreter
callstack
CallStack
callerInfo
SimpleNode
if
callstack
block
callstack
CallStack
push
BshMethod
meth
getMethod
methodName
getTypes
args
if
meth
return
invokeDeclaredMethod
args
interpreter
callstack
callerInfo
meth
getMethod
Class
if
meth
return
invokeDeclaredMethod
Object
methodName
args
interpreter
callstack
callerInfo
throw
EvalError
methodName
classLoaderChanged
nameSpaceChanged
nameSpaceChanged
classCache
loadDefaultImports
importClass
importPackage
importPackage
importPackage
importPackage
importPackage
importPackage
importPackage
importPackage
getNameResolver
Name
name
String
return
Name
name
getInvocationLine
int
SimpleNode
node
getNode
if
node
return
getLineNumber
return
getInvocationText
String
SimpleNode
node
getNode
if
node
return
getText
return
identifierToClass
Class
ci
Name
ClassIdentifier
return
getTargetClass
clear
variables
methods
importedClasses
importedPackages
superImport
if
parent
loadDefaultImports
classCache
java
io
Serializable
BshClassManager
Listener
NameSource
