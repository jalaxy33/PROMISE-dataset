Primitive
Object
value
Special
Special
Special
NULL_VALUE
Special
Special
VOID_TYPE
Special
java
io
Serializable
Primitive
NULL
Primitive
NULL_VALUE
Primitive
VOID
Primitive
VOID_TYPE
Primitive
value
Object
if
value
throw
InterpreterError
value
value
Primitive
number
Number
Object
number
Primitive
value
Boolean
Object
value
Primitive
value
Byte
Object
value
Primitive
value
Short
Object
value
Primitive
value
Character
Object
value
Primitive
value
Integer
Object
value
Primitive
value
Long
Object
value
Primitive
value
Float
Object
value
Primitive
value
Double
Object
value
Primitive
value
boolean
Boolean
value
Primitive
value
byte
Byte
value
Primitive
value
short
Short
value
Primitive
value
char
Character
value
Primitive
value
int
Integer
value
Primitive
value
long
Long
value
Primitive
value
float
Float
value
Primitive
value
double
Double
value
getValue
Object
if
value
NULL_VALUE
return
if
value
VOID_TYPE
throw
InterpreterError
return
value
toString
String
if
value
NULL_VALUE
return
if
value
VOID_TYPE
return
return
toString
getType
Class
return
getType
value
getType
Class
o
Object
if
o
Boolean
return
TYPE
if
o
Byte
return
TYPE
if
o
Short
return
TYPE
if
o
Character
return
TYPE
if
o
Integer
return
TYPE
if
o
Long
return
TYPE
if
o
Float
return
TYPE
if
o
Double
return
TYPE
return
binaryOperation
Object
obj1
Object
obj2
Object
kind
int
if
obj1
NULL
obj2
NULL
throw
EvalError
if
obj1
VOID
obj2
VOID
throw
EvalError
Class
lhsOrgType
getClass
Class
rhsOrgType
getClass
if
obj1
Primitive
obj1
Primitive
obj1
if
obj2
Primitive
obj2
Primitive
obj2
Object
operands
promotePrimitives
obj1
obj2
Object
lhs
operands
Object
rhs
operands
if
getClass
getClass
throw
EvalError
getClass
getClass
Object
result
try
result
binaryOperationImpl
lhs
rhs
kind
catchClause
e
throw
TargetError
e
if
lhsOrgType
Primitive
rhsOrgType
Primitive
return
Primitive
result
return
result
binaryOperationImpl
Object
lhs
Object
rhs
Object
kind
int
if
lhs
Boolean
return
booleanBinaryOperation
Boolean
lhs
Boolean
rhs
kind
if
lhs
Integer
return
intBinaryOperation
Integer
lhs
Integer
rhs
kind
if
lhs
Long
return
longBinaryOperation
Long
lhs
Long
rhs
kind
if
lhs
Float
return
floatBinaryOperation
Float
lhs
Float
rhs
kind
if
lhs
Double
return
doubleBinaryOperation
Double
lhs
Double
rhs
kind
throw
EvalError
booleanBinaryOperation
Boolean
B1
Boolean
B2
Boolean
kind
int
boolean
lhs
booleanValue
boolean
rhs
booleanValue
switch
kind
case
return
Boolean
lhs
rhs
case
return
Boolean
lhs
rhs
case
return
Boolean
lhs
rhs
case
return
Boolean
lhs
rhs
case
throw
InterpreterError
longBinaryOperation
Object
L1
Long
L2
Long
kind
int
long
lhs
longValue
long
rhs
longValue
switch
kind
case
return
Boolean
lhs
rhs
case
return
Boolean
lhs
rhs
case
return
Boolean
lhs
rhs
case
return
Boolean
lhs
rhs
case
return
Boolean
lhs
rhs
case
return
Boolean
lhs
rhs
case
return
Long
lhs
rhs
case
return
Long
lhs
rhs
case
return
Long
lhs
rhs
case
return
Long
lhs
rhs
case
return
Long
lhs
rhs
case
return
Long
lhs
rhs
case
return
Long
lhs
rhs
case
return
Long
lhs
rhs
case
return
Long
lhs
rhs
case
return
Long
lhs
rhs
case
return
Long
lhs
rhs
case
throw
InterpreterError
intBinaryOperation
Object
I1
Integer
I2
Integer
kind
int
int
lhs
intValue
int
rhs
intValue
switch
kind
case
return
Boolean
lhs
rhs
case
return
Boolean
lhs
rhs
case
return
Boolean
lhs
rhs
case
return
Boolean
lhs
rhs
case
return
Boolean
lhs
rhs
case
return
Boolean
lhs
rhs
case
return
Integer
lhs
rhs
case
return
Integer
lhs
rhs
case
return
Integer
lhs
rhs
case
return
Integer
lhs
rhs
case
return
Integer
lhs
rhs
case
return
Integer
lhs
rhs
case
return
Integer
lhs
rhs
case
return
Integer
lhs
rhs
case
return
Integer
lhs
rhs
case
return
Integer
lhs
rhs
case
return
Integer
lhs
rhs
case
throw
InterpreterError
doubleBinaryOperation
Object
D1
Double
D2
Double
kind
int
double
lhs
doubleValue
double
rhs
doubleValue
switch
kind
case
return
Boolean
lhs
rhs
case
return
Boolean
lhs
rhs
case
return
Boolean
lhs
rhs
case
return
Boolean
lhs
rhs
case
return
Boolean
lhs
rhs
case
return
Boolean
lhs
rhs
case
return
Double
lhs
rhs
case
return
Double
lhs
rhs
case
return
Double
lhs
rhs
case
return
Double
lhs
rhs
case
return
Double
lhs
rhs
case
throw
EvalError
case
throw
InterpreterError
floatBinaryOperation
Object
F1
Float
F2
Float
kind
int
float
lhs
floatValue
float
rhs
floatValue
switch
kind
case
return
Boolean
lhs
rhs
case
return
Boolean
lhs
rhs
case
return
Boolean
lhs
rhs
case
return
Boolean
lhs
rhs
case
return
Boolean
lhs
rhs
case
return
Boolean
lhs
rhs
case
return
Float
lhs
rhs
case
return
Float
lhs
rhs
case
return
Float
lhs
rhs
case
return
Float
lhs
rhs
case
return
Float
lhs
rhs
case
throw
EvalError
case
throw
InterpreterError
promoteToInteger
Object
primitive
Object
if
primitive
Character
return
Integer
Character
primitive
if
primitive
Byte
primitive
Short
return
Integer
Number
primitive
return
primitive
promotePrimitives
Object
lhs
Object
rhs
Object
lhs
promoteToInteger
lhs
rhs
promoteToInteger
rhs
if
lhs
Number
rhs
Number
block
Number
lnum
Number
lhs
Number
rnum
Number
rhs
boolean
b
if
b
lnum
Double
rnum
Double
block
if
b
rhs
Double
doubleValue
lhs
Double
doubleValue
if
b
lnum
Float
rnum
Float
block
if
b
rhs
Float
floatValue
lhs
Float
floatValue
if
b
lnum
Long
rnum
Long
block
if
b
rhs
Long
longValue
lhs
Long
longValue
return
Object
lhs
rhs
unaryOperation
Primitive
val
Primitive
kind
int
if
val
NULL
throw
EvalError
if
val
VOID
throw
EvalError
Class
operandType
getType
Object
operand
promoteToInteger
getValue
if
operand
Boolean
return
Primitive
booleanUnaryOperation
Boolean
operand
kind
if
operand
Integer
block
int
result
intUnaryOperation
Integer
operand
kind
if
kind
INCR
kind
DECR
block
if
operandType
TYPE
return
Primitive
byte
result
if
operandType
TYPE
return
Primitive
short
result
if
operandType
TYPE
return
Primitive
char
result
return
Primitive
result
if
operand
Long
return
Primitive
longUnaryOperation
Long
operand
kind
if
operand
Float
return
Primitive
floatUnaryOperation
Float
operand
kind
if
operand
Double
return
Primitive
doubleUnaryOperation
Double
operand
kind
throw
InterpreterError
booleanUnaryOperation
boolean
B
Boolean
kind
int
boolean
operand
booleanValue
switch
kind
case
return
operand
case
throw
EvalError
intUnaryOperation
int
I
Integer
kind
int
int
operand
intValue
switch
kind
case
return
operand
case
return
operand
case
return
operand
case
return
operand
case
return
operand
case
throw
InterpreterError
longUnaryOperation
long
L
Long
kind
int
long
operand
longValue
switch
kind
case
return
operand
case
return
operand
case
return
operand
case
return
operand
case
return
operand
case
throw
InterpreterError
floatUnaryOperation
float
F
Float
kind
int
float
operand
floatValue
switch
kind
case
return
operand
case
return
operand
case
throw
InterpreterError
doubleUnaryOperation
double
D
Double
kind
int
double
operand
doubleValue
switch
kind
case
return
operand
case
return
operand
case
throw
InterpreterError
intValue
int
if
value
Number
return
Number
value
throw
EvalError
booleanValue
boolean
if
value
Boolean
return
Boolean
value
throw
EvalError
isNumber
boolean
return
value
Boolean
NULL
VOID
numberValue
Number
Object
value
value
if
value
Character
value
Integer
Character
value
if
value
Number
return
Number
value
throw
EvalError
equals
boolean
obj
Object
if
obj
Primitive
return
Primitive
obj
return
equals
value
unwrap
Object
obj
Object
if
obj
return
if
obj
VOID
return
if
obj
Primitive
return
Primitive
obj
return
obj
ParserConstants
java
io
Serializable
