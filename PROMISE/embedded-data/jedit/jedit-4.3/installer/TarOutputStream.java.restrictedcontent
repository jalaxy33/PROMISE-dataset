TarOutputStream
boolean
debug
int
currSize
int
currBytes
byte
oneBuf
byte
recordBuf
int
assemLen
byte
assemBuf
TarBuffer
buffer
TarOutputStream
os
OutputStream
os
DEFAULT_BLKSIZE
DEFAULT_RCDSIZE
TarOutputStream
os
OutputStream
blockSize
int
os
blockSize
DEFAULT_RCDSIZE
TarOutputStream
os
OutputStream
blockSize
int
recordSize
int
os
buffer
TarBuffer
os
blockSize
recordSize
debug
assemLen
assemBuf
byte
recordSize
recordBuf
byte
recordSize
oneBuf
byte
setDebug
debugF
boolean
debug
debugF
setBufferDebug
debug
boolean
buffer
setDebug
debug
finish
writeEOFRecord
close
finish
buffer
close
getRecordSize
int
return
buffer
getRecordSize
putNextEntry
entry
TarEntry
if
getHeader
name
length
NAMELEN
throw
InvalidHeaderException
getHeader
name
NAMELEN
writeEntryHeader
recordBuf
buffer
writeRecord
recordBuf
currBytes
if
isDirectory
currSize
currSize
int
getSize
closeEntry
if
assemLen
block
for
forControl
int
i
assemLen
i
assemBuf
length
i
assemBuf
i
buffer
writeRecord
assemBuf
currBytes
assemLen
assemLen
if
currBytes
currSize
throw
IOException
currBytes
currSize
write
b
int
oneBuf
byte
b
write
oneBuf
write
wBuf
byte
write
wBuf
length
write
wBuf
byte
wOffset
int
numToWrite
int
if
currBytes
numToWrite
currSize
throw
IOException
numToWrite
currSize
if
assemLen
block
if
assemLen
numToWrite
recordBuf
length
block
int
aLen
recordBuf
length
assemLen
arraycopy
assemBuf
recordBuf
assemLen
arraycopy
wBuf
wOffset
recordBuf
assemLen
aLen
buffer
writeRecord
recordBuf
currBytes
recordBuf
length
wOffset
aLen
numToWrite
aLen
assemLen
block
arraycopy
wBuf
wOffset
assemBuf
assemLen
numToWrite
wOffset
numToWrite
assemLen
numToWrite
numToWrite
numToWrite
for
forControl
numToWrite
block
if
numToWrite
recordBuf
length
block
arraycopy
wBuf
wOffset
assemBuf
assemLen
numToWrite
assemLen
numToWrite
break
buffer
writeRecord
wBuf
wOffset
int
num
recordBuf
length
currBytes
num
numToWrite
num
wOffset
num
writeEOFRecord
for
forControl
int
i
i
recordBuf
length
i
recordBuf
i
buffer
writeRecord
recordBuf
FilterOutputStream
