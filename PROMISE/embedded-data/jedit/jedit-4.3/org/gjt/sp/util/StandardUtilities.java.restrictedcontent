StandardUtilities
charsToEscapes
String
str
String
return
charsToEscapes
str
charsToEscapes
String
str
String
toEscape
String
StringBuilder
buf
StringBuilder
for
forControl
int
i
i
length
i
block
char
c
charAt
i
if
indexOf
c
block
if
c
append
if
c
append
block
append
append
c
append
c
return
toString
getIndentString
String
str
String
StringBuilder
indentString
StringBuilder
for
forControl
int
i
i
length
i
block
char
ch
charAt
i
if
isWhitespace
ch
break
append
ch
return
toString
getLeadingWhiteSpace
int
str
String
return
getLeadingWhiteSpace
CharSequence
str
getLeadingWhiteSpace
int
str
CharSequence
int
whitespace
for
forControl
whitespace
length
block
switch
charAt
whitespace
case
whitespace
break
case
break
return
whitespace
getTrailingWhiteSpace
int
str
String
int
whitespace
for
forControl
int
i
length
i
i
block
switch
charAt
i
case
whitespace
break
case
break
return
whitespace
getLeadingWhiteSpaceWidth
int
str
String
tabSize
int
return
getLeadingWhiteSpaceWidth
CharSequence
str
tabSize
getLeadingWhiteSpaceWidth
int
str
CharSequence
tabSize
int
int
whitespace
for
forControl
int
i
i
length
i
block
switch
charAt
i
case
whitespace
break
case
whitespace
tabSize
whitespace
tabSize
break
case
break
return
whitespace
createWhiteSpace
String
len
int
tabSize
int
return
createWhiteSpace
len
tabSize
truncateWhiteSpace
String
len
int
tabSize
int
indentStr
String
StringBuilder
buf
StringBuilder
int
indent
for
forControl
int
i
indent
len
i
length
i
block
char
c
charAt
i
if
c
block
indent
append
c
if
c
block
int
withTab
indent
tabSize
indent
tabSize
if
withTab
len
block
for
forControl
indent
len
indent
append
block
indent
withTab
append
c
return
toString
createWhiteSpace
String
len
int
tabSize
int
start
int
StringBuilder
buf
StringBuilder
if
tabSize
block
while
len
append
if
len
append
block
int
count
len
start
tabSize
tabSize
if
count
len
start
while
count
append
count
len
tabSize
while
count
append
return
toString
getVirtualWidth
int
seg
Segment
tabSize
int
int
virtualPosition
for
forControl
int
i
i
count
i
block
char
ch
array
offset
i
if
ch
block
virtualPosition
tabSize
virtualPosition
tabSize
block
virtualPosition
return
virtualPosition
getOffsetOfVirtualColumn
int
seg
Segment
tabSize
int
column
int
totalVirtualWidth
int
int
virtualPosition
for
forControl
int
i
i
count
i
block
char
ch
array
offset
i
if
ch
block
int
tabWidth
tabSize
virtualPosition
tabSize
if
virtualPosition
column
return
i
virtualPosition
tabWidth
block
if
virtualPosition
column
return
i
virtualPosition
if
totalVirtualWidth
totalVirtualWidth
virtualPosition
return
compareStrings
int
str1
String
str2
String
ignoreCase
boolean
char
char1
toCharArray
char
char2
toCharArray
int
len
min
length
length
for
forControl
int
i
j
i
len
j
len
i
j
block
char
ch1
char1
i
char
ch2
char2
j
if
isDigit
ch1
isDigit
ch2
ch1
ch2
block
int
_i
i
int
_j
j
for
forControl
_i
length
_i
block
if
isDigit
char1
_i
block
break
for
forControl
_j
length
_j
block
if
isDigit
char2
_j
block
break
int
len1
_i
i
int
len2
_j
j
if
len1
len2
return
if
len1
len2
return
block
for
forControl
int
k
k
len1
k
block
ch1
char1
i
k
ch2
char2
j
k
if
ch1
ch2
return
ch1
ch2
i
_i
j
_j
block
if
ignoreCase
block
ch1
toLowerCase
ch1
ch2
toLowerCase
ch2
if
ch1
ch2
return
ch1
ch2
return
length
length
StringCompare
boolean
icase
StringCompare
icase
boolean
icase
icase
StringCompare
compare
int
obj1
E
obj2
E
return
compareStrings
toString
toString
icase
Comparator
E
objectsEqual
boolean
o1
Object
o2
Object
if
o1
block
if
o2
return
return
if
o2
return
return
equals
o2
globToRE
String
glob
String
if
startsWith
block
return
substring
Object
NEG
Object
Object
GROUP
Object
Stack
Object
state
Stack
Object
StringBuilder
buf
StringBuilder
boolean
backslash
for
forControl
int
i
i
length
i
block
char
c
charAt
i
if
backslash
block
append
append
c
backslash
continue
switch
c
case
backslash
break
case
append
break
case
append
append
c
break
case
append
break
case
if
backslash
append
append
break
case
append
if
i
length
charAt
i
block
append
push
NEG
push
GROUP
break
case
if
isEmpty
peek
GROUP
append
append
break
case
if
isEmpty
block
append
if
pop
NEG
append
append
break
case
append
c
return
toString
regionMatches
boolean
seq
CharSequence
toff
int
other
CharSequence
ooff
int
len
int
if
toff
ooff
len
return
boolean
ret
for
forControl
int
i
i
len
i
block
char
c1
if
i
toff
length
c1
charAt
i
toff
block
ret
break
char
c2
if
i
ooff
length
c2
charAt
i
ooff
block
ret
break
if
c1
c2
block
ret
break
return
ret
startsWith
boolean
seq
CharSequence
str
String
boolean
ret
for
forControl
int
i
i
length
i
block
if
i
length
charAt
i
charAt
i
block
ret
break
return
ret
getBoolean
boolean
obj
Object
def
boolean
if
obj
return
def
if
obj
Boolean
return
Boolean
obj
if
equals
obj
equals
obj
equals
obj
return
if
equals
obj
equals
obj
equals
obj
return
return
def
StandardUtilities
