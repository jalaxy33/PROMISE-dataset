TextArea
TextArea
propertyManager
IPropertyManager
inputHandlerProvider
InputHandlerProvider
inputHandlerProvider
inputHandlerProvider
enableEvents
FOCUS_EVENT_MASK
KEY_EVENT_MASK
selectionManager
SelectionManager
chunkCache
ChunkCache
painter
TextAreaPainter
gutter
Gutter
setMouseActionsProvider
MouseActions
propertyManager
listenerList
EventListenerList
caretEvent
MutableCaretEvent
blink
offsetXY
Point
structureMatchers
LinkedList
StructureMatcher
add
StructureMatcher
BracketMatcher
setLayout
ScrollLayout
add
CENTER
painter
add
LEFT
gutter
verticalBox
Box
X_AXIS
add
vertical
JScrollBar
VERTICAL
setRequestFocusEnabled
add
RIGHT
verticalBox
add
BOTTOM
horizontal
JScrollBar
HORIZONTAL
setRequestFocusEnabled
setValues
if
getLookAndFeel
MetalLookAndFeel
block
setBorder
TextAreaBorder
putClientProperty
FALSE
putClientProperty
FALSE
addAdjustmentListener
AdjustHandler
addAdjustmentListener
AdjustHandler
addFocusListener
FocusHandler
addMouseWheelListener
MouseWheelHandler
focusedComponent
popupEnabled
getFoldPainter
FoldPainter
return
TriangleFoldPainter
initInputHandler
actionContext
JEditActionContext
JEditBeanShellAction
JEditActionSet
JEditBeanShellAction
invokeAction
evt
EventObject
action
JEditBeanShellAction
invoke
setMouseHandler
TextAreaMouseHandler
inputHandlerProvider
DefaultInputHandlerProvider
TextAreaInputHandler
getAction
JEditBeanShellAction
action
String
return
getAction
action
getActionContext
JEditActionContext
JEditBeanShellAction
JEditActionSet
JEditBeanShellAction
return
actionContext
setMouseHandler
mouseInputAdapter
MouseInputAdapter
mouseHandler
mouseInputAdapter
addMouseListener
mouseHandler
addMouseMotionListener
mouseHandler
setTransferHandler
newHandler
TransferHandler
setTransferHandler
newHandler
try
getDropTarget
addDropTargetListener
TextAreaDropHandler
catchClause
e
log
ERROR
e
toString
String
StringBuilder
builder
StringBuilder
String
baseVersion
toString
int
len
length
append
baseVersion
setLength
len
append
append
caret
append
append
caretLine
append
append
caretScreenLine
append
append
electricScroll
append
append
horizontalOffset
append
append
magicCaret
append
append
toString
append
append
oldCaretLine
append
append
screenLastLine
append
append
visibleLines
append
append
getFirstPhysicalLine
append
append
physLastLine
append
return
toString
dispose
textAreaDisposed
dispose
getInputHandler
AbstractInputHandler
return
getInputHandler
getPainter
TextAreaPainter
return
painter
getGutter
Gutter
return
gutter
getDisplayManager
DisplayManager
return
displayManager
isCaretBlinkEnabled
boolean
return
caretBlinks
setCaretBlinkEnabled
caretBlinks
boolean
caretBlinks
caretBlinks
if
caretBlinks
blink
if
buffer
invalidateLine
caretLine
getElectricScroll
int
return
electricScroll
setElectricScroll
electricScroll
int
electricScroll
electricScroll
isQuickCopyEnabled
boolean
return
quickCopy
setQuickCopyEnabled
quickCopy
boolean
quickCopy
quickCopy
getBuffer
JEditBuffer
return
buffer
setBuffer
buffer
JEditBuffer
if
buffer
buffer
return
try
bufferChanging
if
buffer
block
if
buffer
isLoading
selectNone
caretLine
caret
caretScreenLine
match
boolean
inCompoundEdit
if
buffer
inCompoundEdit
buffer
insideCompoundEdit
if
inCompoundEdit
buffer
endCompoundEdit
buffer
buffer
if
inCompoundEdit
buffer
beginCompoundEdit
setBuffer
buffer
setBuffer
buffer
propertiesChanged
if
displayManager
block
release
displayManager
getDisplayManager
buffer
init
if
isLoading
updateScrollBar
repaint
fireScrollEvent
bufferChanging
isEditable
boolean
return
isEditable
isDragInProgress
boolean
return
dndInProgress
setDragInProgress
dndInProgress
boolean
dndInProgress
dndInProgress
isDragEnabled
boolean
return
dndEnabled
setDragEnabled
dndEnabled
boolean
dndEnabled
dndEnabled
getJoinNonWordChars
boolean
return
joinNonWordChars
setJoinNonWordChars
joinNonWordChars
boolean
joinNonWordChars
joinNonWordChars
isCtrlForRectangularSelection
boolean
return
ctrlForRectangularSelection
setCtrlForRectangularSelection
ctrlForRectangularSelection
boolean
ctrlForRectangularSelection
ctrlForRectangularSelection
getFirstLine
int
return
scrollLine
skew
setFirstLine
firstLine
int
int
max
getScrollLineCount
visibleLines
lastLinePartial
if
firstLine
max
firstLine
max
if
firstLine
firstLine
if
SCROLL_DEBUG
block
log
DEBUG
getFirstLine
firstLine
int
oldFirstLine
getFirstLine
if
firstLine
oldFirstLine
return
setFirstLine
oldFirstLine
firstLine
repaint
fireScrollEvent
getFirstPhysicalLine
int
return
physicalLine
setFirstPhysicalLine
physFirstLine
int
setFirstPhysicalLine
physFirstLine
setFirstPhysicalLine
physFirstLine
int
skew
int
if
SCROLL_DEBUG
block
log
DEBUG
physFirstLine
skew
int
amount
physFirstLine
physicalLine
setFirstPhysicalLine
amount
skew
repaint
fireScrollEvent
getLastPhysicalLine
int
return
physLastLine
getLastScreenLine
int
return
screenLastLine
getVisibleLines
int
return
visibleLines
getHorizontalOffset
int
return
horizontalOffset
setHorizontalOffset
horizontalOffset
int
if
horizontalOffset
horizontalOffset
if
horizontalOffset
horizontalOffset
return
horizontalOffset
horizontalOffset
repaint
fireScrollEvent
scrollUpLine
setFirstLine
getFirstLine
scrollUpPage
setFirstLine
getFirstLine
getVisibleLines
lastLinePartial
scrollDownLine
setFirstLine
getFirstLine
scrollDownPage
setFirstLine
getFirstLine
getVisibleLines
lastLinePartial
scrollToCaret
doElectricScroll
boolean
scrollTo
caretLine
caret
getLineStartOffset
caretLine
doElectricScroll
scrollTo
offset
int
doElectricScroll
boolean
int
line
getLineOfOffset
offset
scrollTo
line
offset
getLineStartOffset
line
doElectricScroll
scrollTo
line
int
offset
int
doElectricScroll
boolean
if
SCROLL_TO_DEBUG
log
DEBUG
getLineCount
if
visibleLines
block
if
SCROLL_TO_DEBUG
log
DEBUG
ChunkCache
LineInfo
infos
getLineInfosForPhysicalLine
line
int
subregion
getSubregionOfOffset
offset
infos
setFirstPhysicalLine
line
subregion
return
int
extraEndVirt
int
lineLength
getLineLength
line
if
offset
lineLength
block
extraEndVirt
charWidth
offset
lineLength
offset
lineLength
extraEndVirt
int
_electricScroll
doElectricScroll
visibleLines
electricScroll
electricScroll
int
screenLine
getScreenLineOfOffset
line
offset
int
visibleLines
getVisibleLines
if
screenLine
block
if
SCROLL_TO_DEBUG
log
DEBUG
ChunkCache
LineInfo
infos
getLineInfosForPhysicalLine
line
int
subregion
getSubregionOfOffset
offset
infos
int
prevLine
getPrevVisibleLine
getFirstPhysicalLine
int
nextLine
getNextVisibleLine
getLastPhysicalLine
if
line
getFirstPhysicalLine
block
if
SCROLL_TO_DEBUG
log
DEBUG
line
getFirstPhysicalLine
setFirstPhysicalLine
line
subregion
_electricScroll
if
line
prevLine
block
if
SCROLL_TO_DEBUG
log
DEBUG
line
prevLine
setFirstPhysicalLine
prevLine
subregion
_electricScroll
if
line
getLastPhysicalLine
block
if
SCROLL_TO_DEBUG
log
DEBUG
line
getLastPhysicalLine
setFirstPhysicalLine
line
subregion
_electricScroll
visibleLines
lastLinePartial
if
line
nextLine
block
if
SCROLL_TO_DEBUG
log
DEBUG
line
nextLine
setFirstPhysicalLine
nextLine
subregion
_electricScroll
visibleLines
lastLinePartial
block
if
SCROLL_TO_DEBUG
block
log
DEBUG
log
DEBUG
getLastPhysicalLine
setFirstPhysicalLine
line
subregion
visibleLines
if
SCROLL_TO_DEBUG
block
log
DEBUG
getLastPhysicalLine
if
screenLine
_electricScroll
block
if
SCROLL_TO_DEBUG
log
DEBUG
setFirstLine
getFirstLine
_electricScroll
screenLine
if
screenLine
visibleLines
_electricScroll
lastLinePartial
block
if
SCROLL_TO_DEBUG
log
DEBUG
setFirstLine
getFirstLine
_electricScroll
visibleLines
screenLine
lastLinePartial
if
isLineVisible
line
return
Point
point
offsetToXY
line
offset
offsetXY
x
extraEndVirt
if
x
block
setHorizontalOffset
horizontalOffset
x
charWidth
if
x
getWidth
charWidth
block
setHorizontalOffset
horizontalOffset
getWidth
x
charWidth
addScrollListener
listener
ScrollListener
add
ScrollListener
listener
removeScrollListener
listener
ScrollListener
remove
ScrollListener
listener
getPhysicalLineOfScreenLine
int
screenLine
int
return
getLineInfo
physicalLine
screenLine
getScreenLineOfOffset
int
offset
int
int
line
getLineOfOffset
offset
offset
getLineStartOffset
line
return
getScreenLineOfOffset
line
offset
getScreenLineStartOffset
int
line
int
ChunkCache
LineInfo
lineInfo
getLineInfo
line
if
physicalLine
return
return
getLineStartOffset
physicalLine
offset
getScreenLineEndOffset
int
line
int
ChunkCache
LineInfo
lineInfo
getLineInfo
line
if
physicalLine
return
return
getLineStartOffset
physicalLine
offset
length
xyToOffset
int
x
int
y
int
return
xyToOffset
x
y
xyToOffset
int
x
int
y
int
round
boolean
FontMetrics
fm
getFontMetrics
int
height
getHeight
int
line
y
height
if
line
line
visibleLines
return
return
xToScreenLineOffset
line
x
round
xToScreenLineOffset
int
screenLine
int
x
int
round
boolean
ChunkCache
LineInfo
lineInfo
getLineInfo
screenLine
if
physicalLine
block
return
getLineEndOffset
getLastVisibleLine
block
int
offset
xToOffset
chunks
x
horizontalOffset
round
if
offset
offset
offset
length
offset
offset
length
return
getLineStartOffset
physicalLine
offset
offsetToXY
Point
offset
int
int
line
getLineOfOffset
offset
offset
getLineStartOffset
line
Point
retVal
Point
return
offsetToXY
line
offset
retVal
offsetToXY
Point
line
int
offset
int
return
offsetToXY
line
offset
Point
offsetToXY
Point
line
int
offset
int
retVal
Point
if
isLineVisible
line
return
int
screenLine
getScreenLineOfOffset
line
offset
if
screenLine
return
FontMetrics
fm
getFontMetrics
y
screenLine
getHeight
ChunkCache
LineInfo
info
getLineInfo
screenLine
x
int
horizontalOffset
offsetToX
chunks
offset
return
retVal
invalidateScreenLineRange
start
int
end
int
if
isLoading
return
if
start
end
block
int
tmp
end
end
start
start
tmp
if
needFullRepaint
end
visibleLines
FontMetrics
fm
getFontMetrics
int
y
start
getHeight
int
height
end
start
getHeight
repaint
y
getWidth
height
repaint
y
getWidth
height
invalidateLine
line
int
if
isShowing
isLoading
line
getFirstPhysicalLine
line
physLastLine
isLineVisible
line
return
int
startLine
int
endLine
for
forControl
int
i
i
visibleLines
i
block
ChunkCache
LineInfo
info
getLineInfo
i
if
physicalLine
line
physicalLine
startLine
block
startLine
i
if
physicalLine
line
lastSubregion
physicalLine
block
endLine
i
break
if
needFullRepaint
endLine
endLine
visibleLines
invalidateScreenLineRange
startLine
endLine
invalidateLineRange
start
int
end
int
if
isShowing
isLoading
return
if
end
start
block
int
tmp
end
end
start
start
tmp
if
end
getFirstPhysicalLine
start
getLastPhysicalLine
return
int
startScreenLine
int
endScreenLine
for
forControl
int
i
i
visibleLines
i
block
ChunkCache
LineInfo
info
getLineInfo
i
if
physicalLine
start
physicalLine
startScreenLine
block
startScreenLine
i
if
physicalLine
end
lastSubregion
physicalLine
block
endScreenLine
i
break
if
startScreenLine
startScreenLine
if
needFullRepaint
endScreenLine
endScreenLine
visibleLines
invalidateScreenLineRange
startScreenLine
endScreenLine
getBufferLength
int
return
getLength
getLineCount
int
return
getLineCount
getLineOfOffset
int
offset
int
return
getLineOfOffset
offset
getLineStartOffset
int
line
int
return
getLineStartOffset
line
getLineEndOffset
int
line
int
return
getLineEndOffset
line
getLineLength
int
line
int
return
getLineLength
line
getText
String
start
int
len
int
return
getText
start
len
getText
start
int
len
int
segment
Segment
getText
start
len
segment
getText
String
return
getText
getLength
getLineText
String
lineIndex
int
return
getLineText
lineIndex
getLineText
lineIndex
int
segment
Segment
getLineText
lineIndex
segment
setText
text
String
try
beginCompoundEdit
remove
getLength
insert
text
endCompoundEdit
selectAll
int
firstLine
getFirstLine
int
horizOffset
getHorizontalOffset
setSelection
Selection
Range
getLength
moveCaretPosition
getLength
setFirstLine
firstLine
setHorizontalOffset
horizOffset
selectLine
int
caretLine
getCaretLine
int
start
getLineStartOffset
caretLine
int
end
getLineEndOffset
caretLine
Selection
s
Selection
Range
start
end
if
multi
addToSelection
s
setSelection
s
moveCaretPosition
end
selectParagraph
int
caretLine
getCaretLine
if
getLineLength
caretLine
block
getToolkit
beep
return
int
start
caretLine
int
end
caretLine
while
start
block
if
getLineLength
start
break
start
while
end
getLineCount
block
if
getLineLength
end
break
end
int
selectionStart
getLineStartOffset
start
int
selectionEnd
getLineEndOffset
end
Selection
s
Selection
Range
selectionStart
selectionEnd
if
multi
addToSelection
s
setSelection
s
moveCaretPosition
selectionEnd
selectWord
int
line
getCaretLine
int
lineStart
getLineStartOffset
line
int
offset
getCaretPosition
lineStart
if
getLineLength
line
return
String
lineText
getLineText
line
String
noWordSep
getStringProperty
if
offset
getLineLength
line
offset
int
wordStart
findWordStart
lineText
offset
noWordSep
int
wordEnd
findWordEnd
lineText
offset
noWordSep
Selection
s
Selection
Range
lineStart
wordStart
lineStart
wordEnd
if
multi
addToSelection
s
setSelection
s
moveCaretPosition
lineStart
wordEnd
selectToMatchingBracket
Selection
position
int
quickCopy
boolean
int
positionLine
getLineOfOffset
position
int
lineOffset
position
getLineStartOffset
positionLine
if
getLineLength
positionLine
block
int
bracket
findMatchingBracket
buffer
positionLine
max
lineOffset
if
bracket
block
Selection
s
if
bracket
position
block
if
quickCopy
moveCaretPosition
position
s
Selection
Range
bracket
position
block
if
quickCopy
moveCaretPosition
bracket
s
Selection
Range
position
bracket
if
multi
quickCopy
selectNone
addToSelection
s
return
s
return
selectToMatchingBracket
selectToMatchingBracket
caret
selectBlock
Selection
s
getSelectionAtOffset
caret
int
start
end
if
s
start
end
caret
block
start
start
end
end
String
text
getText
getLength
if
start
block
getToolkit
beep
return
String
openBrackets
String
closeBrackets
int
count
char
openBracket
char
closeBracket
while
start
block
char
c
charAt
start
int
index
indexOf
c
if
index
block
if
count
block
openBracket
c
closeBracket
charAt
index
break
if
indexOf
c
count
count
if
openBracket
block
getToolkit
beep
return
do
end
getLength
block
char
c
charAt
end
if
c
closeBracket
block
if
count
block
end
break
if
c
openBracket
count
s
Selection
Range
start
end
if
multi
addToSelection
s
setSelection
s
moveCaretPosition
end
lineInStructureScope
boolean
line
int
if
match
return
if
startLine
caretLine
return
line
startLine
line
caretLine
return
line
endLine
line
caretLine
invertSelection
invertSelection
getSelectionCount
int
return
getSelectionCount
getSelection
Selection
return
getSelection
getSelection
Selection
index
int
return
get
index
getSelectionIterator
Iterator
Selection
return
iterator
selectNone
invalidateSelectedLines
setSelection
Selection
setSelection
selection
Selection
invalidateSelectedLines
setSelection
selection
finishCaretUpdate
caretLine
NO_SCROLL
setSelection
selection
Selection
invalidateSelectedLines
setSelection
selection
finishCaretUpdate
caretLine
NO_SCROLL
addToSelection
selection
Selection
invalidateSelectedLines
addToSelection
selection
finishCaretUpdate
caretLine
NO_SCROLL
addToSelection
selection
Selection
invalidateSelectedLines
addToSelection
selection
finishCaretUpdate
caretLine
NO_SCROLL
getSelectionAtOffset
Selection
offset
int
return
getSelectionAtOffset
offset
removeFromSelection
sel
Selection
invalidateSelectedLines
removeFromSelection
sel
finishCaretUpdate
caretLine
NO_SCROLL
removeFromSelection
offset
int
Selection
sel
getSelectionAtOffset
offset
if
sel
return
invalidateSelectedLines
removeFromSelection
sel
finishCaretUpdate
caretLine
NO_SCROLL
resizeSelection
offset
int
end
int
extraEndVirt
int
rect
boolean
Selection
s
getSelectionAtOffset
offset
if
s
block
invalidateLineRange
startLine
endLine
removeFromSelection
s
resizeSelection
offset
end
extraEndVirt
rect
fireCaretEvent
extendSelection
offset
int
end
int
extendSelection
offset
end
extendSelection
offset
int
end
int
extraStartVirt
int
extraEndVirt
int
Selection
s
getSelectionAtOffset
offset
if
s
block
invalidateLineRange
startLine
endLine
removeFromSelection
s
if
offset
start
block
offset
end
end
end
if
offset
end
block
offset
start
if
end
offset
block
int
tmp
end
end
offset
offset
tmp
if
rectangularSelectionMode
block
s
Selection
Rect
offset
end
Selection
Rect
s
extraStartVirt
Selection
Rect
s
extraEndVirt
s
Selection
Range
offset
end
addToSelection
s
fireCaretEvent
if
rectangularSelectionMode
extraEndVirt
block
int
line
getLineOfOffset
end
scrollTo
line
getLineLength
line
extraEndVirt
getSelectedText
String
s
Selection
StringBuilder
buf
StringBuilder
end
start
getText
buffer
buf
return
toString
getSelectedText
String
separator
String
Selection
sel
getSelection
if
length
return
StringBuilder
buf
StringBuilder
for
forControl
int
i
i
length
i
block
if
i
append
separator
sel
i
getText
buffer
buf
return
toString
getSelectedText
String
return
getSelectedText
setSelectedText
s
Selection
selectedText
String
if
isEditable
block
throw
InternalError
try
beginCompoundEdit
moveCaretPosition
setText
buffer
selectedText
endCompoundEdit
setSelectedText
selectedText
String
int
newCaret
replaceSelection
selectedText
if
newCaret
moveCaretPosition
newCaret
selectNone
setSelectedText
selectedText
String
moveCaret
boolean
int
newCaret
replaceSelection
selectedText
if
moveCaret
newCaret
moveCaretPosition
newCaret
selectNone
replaceSelection
int
selectedText
String
if
isEditable
throw
RuntimeException
int
newCaret
if
getSelectionCount
block
insert
caret
selectedText
block
try
beginCompoundEdit
Selection
selection
getSelection
for
forControl
int
i
i
length
i
newCaret
selection
i
setText
buffer
selectedText
endCompoundEdit
return
newCaret
getSelectedLines
int
if
getSelectionCount
return
int
caretLine
return
getSelectedLines
caretAutoScroll
boolean
return
focusedComponent
addStructureMatcher
matcher
StructureMatcher
add
matcher
removeStructureMatcher
matcher
StructureMatcher
remove
matcher
getStructureMatch
StructureMatcher
Match
return
match
blinkCaret
if
caretBlinks
block
blink
blink
invalidateLine
caretLine
blink
centerCaret
int
offset
getScreenLineStartOffset
visibleLines
if
offset
getToolkit
beep
setCaretPosition
offset
scrollAndCenterCaret
if
getDisplayManager
isLineVisible
getCaretLine
getDisplayManager
expandFold
getCaretLine
int
physicalLine
getCaretLine
int
midPhysicalLine
getPhysicalLineOfScreenLine
visibleLines
int
diff
physicalLine
midPhysicalLine
setFirstLine
getFirstLine
diff
requestFocus
setCaretPosition
newCaret
int
selectNone
moveCaretPosition
newCaret
setCaretPosition
newCaret
int
doElectricScroll
boolean
selectNone
moveCaretPosition
newCaret
doElectricScroll
moveCaretPosition
newCaret
int
moveCaretPosition
newCaret
moveCaretPosition
newCaret
int
doElectricScroll
boolean
moveCaretPosition
newCaret
doElectricScroll
ELECTRIC_SCROLL
NORMAL_SCROLL
int
NO_SCROLL
int
NORMAL_SCROLL
int
ELECTRIC_SCROLL
moveCaretPosition
newCaret
int
scrollMode
int
if
newCaret
newCaret
getLength
block
throw
IllegalArgumentException
newCaret
int
oldCaretLine
caretLine
if
caret
newCaret
finishCaretUpdate
oldCaretLine
scrollMode
block
caret
newCaret
caretLine
getLineOfOffset
newCaret
magicCaret
finishCaretUpdate
oldCaretLine
scrollMode
getCaretPosition
int
return
caret
getCaretLine
int
return
caretLine
getMagicCaretPosition
int
if
magicCaret
block
magicCaret
subregionOffsetToX
caretLine
caret
getLineStartOffset
caretLine
return
magicCaret
setMagicCaretPosition
magicCaret
int
magicCaret
magicCaret
addCaretListener
listener
CaretListener
add
CaretListener
listener
removeCaretListener
listener
CaretListener
remove
CaretListener
listener
goToNextBracket
select
boolean
int
newCaret
if
caret
getLength
block
String
text
getText
caret
getLength
caret
for
forControl
int
i
i
length
i
block
switch
charAt
i
case
newCaret
caret
i
break
if
newCaret
getToolkit
beep
block
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
goToNextCharacter
select
boolean
Selection
s
getSelectionAtOffset
caret
if
select
s
Selection
Range
block
if
multi
block
if
caret
end
block
moveCaretPosition
end
return
block
setCaretPosition
end
return
int
extraStartVirt
extraEndVirt
if
s
Selection
Rect
block
extraStartVirt
Selection
Rect
s
extraEndVirt
Selection
Rect
s
block
extraStartVirt
extraEndVirt
int
newCaret
caret
if
caret
getLength
block
if
select
rectangularSelectionMode
s
Selection
Rect
block
if
s
caret
start
extraStartVirt
extraEndVirt
block
getToolkit
beep
return
if
caret
getLineEndOffset
caretLine
block
if
select
rectangularSelectionMode
s
Selection
Rect
block
if
s
caret
start
extraStartVirt
extraEndVirt
block
int
line
getNextVisibleLine
caretLine
if
line
block
getToolkit
beep
return
newCaret
getLineStartOffset
line
newCaret
caret
if
select
extendSelection
caret
newCaret
extraStartVirt
extraEndVirt
if
multi
selectNone
moveCaretPosition
newCaret
goToNextLine
select
boolean
Selection
s
getSelectionAtOffset
caret
boolean
rectSelect
s
rectangularSelectionMode
s
Selection
Rect
int
magic
getMagicCaretPosition
int
newCaret
getBelowPosition
caretLine
caret
getLineStartOffset
caretLine
magic
rectSelect
select
if
newCaret
block
int
end
getLineEndOffset
caretLine
if
caret
end
block
getToolkit
beep
return
newCaret
end
_changeLine
select
newCaret
setMagicCaretPosition
magic
goToNextPage
select
boolean
scrollToCaret
int
magic
getMagicCaretPosition
if
caretLine
getFirstVisibleLine
block
caretLine
getNextVisibleLine
caretLine
int
newCaret
if
getFirstLine
getVisibleLines
getScrollLineCount
block
int
lastVisibleLine
getLastVisibleLine
newCaret
getLineEndOffset
lastVisibleLine
block
int
caretScreenLine
getScreenLineOfOffset
caret
scrollDownPage
newCaret
xToScreenLineOffset
caretScreenLine
magic
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
setMagicCaretPosition
magic
goToNextParagraph
select
boolean
int
lineNo
getCaretLine
int
newCaret
getBufferLength
boolean
foundBlank
for
forControl
int
i
lineNo
i
getLineCount
i
block
if
isLineVisible
i
continue
getLineText
i
lineSegment
for
forControl
int
j
j
count
j
block
switch
array
offset
j
case
break
case
if
foundBlank
block
newCaret
getLineStartOffset
i
break
continue
foundBlank
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
goToNextWord
select
boolean
goToNextWord
select
goToNextWord
select
boolean
eatWhitespace
boolean
int
lineStart
getLineStartOffset
caretLine
int
newCaret
caret
lineStart
String
lineText
getLineText
caretLine
if
newCaret
length
block
int
nextLine
getNextVisibleLine
caretLine
if
nextLine
block
getToolkit
beep
return
newCaret
getLineStartOffset
nextLine
block
String
noWordSep
getStringProperty
boolean
camelCasedWords
getBooleanProperty
newCaret
findWordEnd
lineText
newCaret
noWordSep
camelCasedWords
eatWhitespace
newCaret
lineStart
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
goToPrevBracket
select
boolean
String
text
getText
caret
int
newCaret
for
forControl
int
i
getCaretPosition
i
i
block
switch
charAt
i
case
newCaret
i
break
if
newCaret
getToolkit
beep
block
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
goToPrevCharacter
select
boolean
Selection
s
getSelectionAtOffset
caret
if
caret
block
getToolkit
beep
return
if
select
s
Selection
Range
block
if
multi
block
if
caret
start
block
moveCaretPosition
start
return
block
setCaretPosition
start
return
int
extraStartVirt
int
extraEndVirt
int
newCaret
caret
if
select
caret
getLineEndOffset
caretLine
block
if
s
Selection
Rect
block
extraStartVirt
Selection
Rect
s
extraEndVirt
Selection
Rect
s
if
caret
start
block
if
extraStartVirt
newCaret
caret
extraStartVirt
block
if
extraEndVirt
newCaret
caret
extraEndVirt
newCaret
caret
if
caret
getLineStartOffset
caretLine
block
int
line
getPrevVisibleLine
caretLine
if
line
block
getToolkit
beep
return
newCaret
getLineEndOffset
line
newCaret
caret
if
select
extendSelection
caret
newCaret
extraStartVirt
extraEndVirt
if
multi
selectNone
moveCaretPosition
newCaret
goToPrevLine
select
boolean
Selection
s
getSelectionAtOffset
caret
boolean
rectSelect
s
rectangularSelectionMode
s
Selection
Rect
int
magic
getMagicCaretPosition
int
newCaret
getAbovePosition
caretLine
caret
getLineStartOffset
caretLine
magic
rectSelect
select
if
newCaret
block
int
start
getLineStartOffset
caretLine
if
caret
start
block
getToolkit
beep
return
newCaret
start
_changeLine
select
newCaret
setMagicCaretPosition
magic
goToPrevPage
select
boolean
scrollToCaret
int
magic
getMagicCaretPosition
if
caretLine
getFirstVisibleLine
block
caretLine
getNextVisibleLine
caretLine
int
newCaret
if
getFirstLine
block
int
firstVisibleLine
getFirstVisibleLine
newCaret
getLineStartOffset
firstVisibleLine
block
int
caretScreenLine
getScreenLineOfOffset
caret
scrollUpPage
newCaret
xToScreenLineOffset
caretScreenLine
magic
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
setMagicCaretPosition
magic
goToPrevParagraph
select
boolean
int
lineNo
caretLine
int
newCaret
boolean
foundBlank
for
forControl
int
i
lineNo
i
i
block
if
isLineVisible
i
continue
getLineText
i
lineSegment
for
forControl
int
j
j
count
j
block
switch
array
offset
j
case
break
case
if
foundBlank
block
newCaret
getLineEndOffset
i
break
continue
foundBlank
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
goToPrevWord
select
boolean
goToPrevWord
select
goToPrevWord
select
boolean
eatWhitespace
boolean
int
lineStart
getLineStartOffset
caretLine
int
newCaret
caret
lineStart
String
lineText
getLineText
caretLine
if
newCaret
block
if
lineStart
block
getToolkit
beep
return
block
int
prevLine
getPrevVisibleLine
caretLine
if
prevLine
block
getToolkit
beep
return
newCaret
getLineEndOffset
prevLine
block
String
noWordSep
getStringProperty
boolean
camelCasedWords
getBooleanProperty
newCaret
findWordStart
lineText
newCaret
noWordSep
camelCasedWords
eatWhitespace
newCaret
lineStart
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
home
select
boolean
switch
getInputHandler
getLastActionCount
case
goToStartOfWhiteSpace
select
break
case
goToStartOfLine
select
break
end
select
boolean
switch
getInputHandler
getLastActionCount
case
goToEndOfWhiteSpace
select
break
case
goToEndOfLine
select
break
smartHome
select
boolean
switch
getInputHandler
getLastActionCount
case
goToStartOfWhiteSpace
select
break
case
goToStartOfLine
select
break
case
goToFirstVisibleLine
select
break
smartEnd
select
boolean
int
pos
getCaretPosition
int
npos
switch
getInputHandler
getLastActionCount
case
goToEndOfCode
select
npos
getCaretPosition
if
npos
pos
goToEndOfWhiteSpace
select
break
case
goToEndOfWhiteSpace
select
break
case
goToEndOfLine
select
break
case
goToLastVisibleLine
select
break
goToStartOfLine
select
boolean
Selection
s
getSelectionAtOffset
caret
int
line
select
s
caretLine
startLine
int
newCaret
getLineStartOffset
line
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
goToEndOfLine
select
boolean
Selection
s
getSelectionAtOffset
caret
int
line
select
s
caretLine
endLine
int
newCaret
getLineEndOffset
line
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
goToEndOfCode
select
boolean
int
line
getCaretLine
DefaultTokenHandler
tokenHandler
DefaultTokenHandler
markTokens
line
tokenHandler
Token
token
getTokens
char
txt
getLineText
toCharArray
line
while
block
if
id
COMMENT1
id
COMMENT2
id
COMMENT3
id
COMMENT4
block
for
forControl
int
i
offset
i
offset
length
i
block
txt
i
if
next
break
token
next
int
newCaret
getLineLength
line
getTrailingWhiteSpace
String
txt
newCaret
getLineStartOffset
line
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
goToStartOfWhiteSpace
select
boolean
Selection
s
getSelectionAtOffset
caret
int
line
offset
if
select
s
block
line
caretLine
offset
caret
getLineStartOffset
line
block
line
startLine
offset
start
getLineStartOffset
line
int
firstIndent
getSubregionStartOffset
line
offset
if
firstIndent
getLineStartOffset
line
block
firstIndent
getLeadingWhiteSpace
getLineText
line
if
firstIndent
getLineLength
line
firstIndent
firstIndent
getLineStartOffset
line
if
select
extendSelection
caret
firstIndent
if
multi
selectNone
moveCaretPosition
firstIndent
goToEndOfWhiteSpace
select
boolean
Selection
s
getSelectionAtOffset
caret
int
line
offset
if
select
s
block
line
caretLine
offset
caret
getLineStartOffset
line
block
line
endLine
offset
end
getLineStartOffset
line
int
lastIndent
getSubregionEndOffset
line
offset
if
lastIndent
getLineEndOffset
line
block
lastIndent
getLineLength
line
getTrailingWhiteSpace
getLineText
line
if
lastIndent
lastIndent
getLineLength
line
lastIndent
getLineStartOffset
line
block
lastIndent
if
select
extendSelection
caret
lastIndent
if
multi
selectNone
moveCaretPosition
lastIndent
goToFirstVisibleLine
select
boolean
int
firstVisibleLine
getFirstLine
electricScroll
int
firstVisible
getScreenLineStartOffset
firstVisibleLine
if
firstVisible
block
firstVisible
getLineStartOffset
getFirstVisibleLine
if
select
extendSelection
caret
firstVisible
if
multi
selectNone
moveCaretPosition
firstVisible
goToLastVisibleLine
select
boolean
int
lastVisible
if
getFirstLine
visibleLines
getScrollLineCount
block
lastVisible
getLineEndOffset
getLastVisibleLine
block
lastVisible
visibleLines
electricScroll
if
lastLinePartial
lastVisible
if
lastVisible
lastVisible
lastVisible
getScreenLineEndOffset
lastVisible
if
lastVisible
block
lastVisible
getLineEndOffset
getLastVisibleLine
if
select
extendSelection
caret
lastVisible
if
multi
selectNone
moveCaretPosition
lastVisible
goToBufferStart
select
boolean
int
start
getLineStartOffset
getFirstVisibleLine
if
select
extendSelection
caret
start
if
multi
selectNone
moveCaretPosition
start
goToBufferEnd
select
boolean
int
end
getLineEndOffset
getLastVisibleLine
if
select
extendSelection
caret
end
if
multi
selectNone
moveCaretPosition
end
goToMatchingBracket
if
getLineLength
caretLine
block
int
dot
caret
getLineStartOffset
caretLine
int
bracket
findMatchingBracket
buffer
caretLine
max
dot
if
bracket
block
selectNone
moveCaretPosition
bracket
return
getToolkit
beep
userInput
ch
char
if
isEditable
block
getToolkit
beep
return
if
hiddenCursor
getPainter
setCursor
hiddenCursor
switch
ch
case
userInputTab
break
case
backspace
break
case
delete
break
case
boolean
indent
isElectricKey
ch
caretLine
String
str
valueOf
ch
if
getSelectionCount
block
if
doWordWrap
ch
insert
str
indent
replaceSelection
str
break
isOverwriteEnabled
boolean
return
overwrite
setOverwriteEnabled
overwrite
boolean
blink
restart
overwrite
overwrite
invalidateLine
caretLine
fireStatusChanged
OVERWRITE_CHANGED
overwrite
toggleOverwriteEnabled
setOverwriteEnabled
overwrite
backspace
delete
backspaceWord
backspaceWord
backspaceWord
eatWhitespace
boolean
if
isEditable
block
getToolkit
beep
return
if
getSelectionCount
block
setSelectedText
return
int
lineStart
getLineStartOffset
caretLine
int
_caret
caret
lineStart
String
lineText
getLineText
caretLine
if
_caret
block
if
lineStart
block
getToolkit
beep
return
_caret
block
String
noWordSep
getStringProperty
boolean
camelCasedWords
getBooleanProperty
_caret
findWordStart
lineText
_caret
noWordSep
camelCasedWords
eatWhitespace
remove
_caret
lineStart
caret
_caret
lineStart
delete
delete
deleteToEndOfLine
if
isEditable
block
getToolkit
beep
return
remove
caret
getLineEndOffset
caretLine
caret
deleteLine
if
isEditable
block
getToolkit
beep
return
int
x
subregionOffsetToX
caretLine
caret
getLineStartOffset
caretLine
int
lines
getSelectedLines
try
beginCompoundEdit
for
forControl
int
i
length
i
i
block
int
start
getLineStartOffset
lines
i
int
end
getLineEndOffset
lines
i
if
end
getLength
block
if
start
start
end
remove
start
end
start
endCompoundEdit
int
lastLine
getLastVisibleLine
if
caretLine
lastLine
block
int
offset
xToSubregionOffset
lastLine
x
setCaretPosition
getLineStartOffset
lastLine
offset
block
int
offset
xToSubregionOffset
caretLine
x
setCaretPosition
getLineStartOffset
caretLine
offset
deleteParagraph
if
isEditable
block
getToolkit
beep
return
int
start
for
forControl
int
i
caretLine
i
i
block
if
lineContainsSpaceAndTabs
i
block
start
getLineStartOffset
i
break
int
end
getLength
for
forControl
int
i
caretLine
i
getLineCount
i
block
if
lineContainsSpaceAndTabs
i
block
end
getLineEndOffset
i
break
remove
start
end
start
deleteToStartOfLine
if
isEditable
block
getToolkit
beep
return
remove
getLineStartOffset
caretLine
caret
getLineStartOffset
caretLine
deleteWord
deleteWord
deleteWord
eatWhitespace
boolean
if
isEditable
block
getToolkit
beep
return
if
getSelectionCount
block
setSelectedText
return
int
lineStart
getLineStartOffset
caretLine
int
_caret
caret
lineStart
String
lineText
getLineText
caretLine
if
_caret
length
block
if
lineStart
_caret
getLength
block
getToolkit
beep
return
_caret
block
String
noWordSep
getStringProperty
boolean
camelCasedWords
getBooleanProperty
_caret
findWordEnd
lineText
_caret
noWordSep
camelCasedWords
eatWhitespace
remove
caret
_caret
lineStart
caret
isMultipleSelectionEnabled
boolean
return
multi
toggleMultipleSelectionEnabled
setMultipleSelectionEnabled
multi
setMultipleSelectionEnabled
multi
boolean
multi
multi
fireStatusChanged
MULTI_SELECT_CHANGED
multi
repaint
isRectangularSelectionEnabled
boolean
return
rectangularSelectionMode
toggleRectangularSelectionEnabled
setRectangularSelectionEnabled
rectangularSelectionMode
if
getSelectionCount
block
Selection
s
getSelection
removeFromSelection
s
if
rectangularSelectionMode
block
addToSelection
Selection
Rect
getStart
getEnd
block
addToSelection
Selection
Range
getStart
getEnd
setRectangularSelectionEnabled
rectangularSelectionMode
boolean
rectangularSelectionMode
rectangularSelectionMode
fireStatusChanged
RECT_SELECT_CHANGED
rectangularSelectionMode
repaint
goToParentFold
int
line
int
level
getFoldLevel
caretLine
for
forControl
int
i
caretLine
i
i
block
if
getFoldLevel
i
level
block
line
i
break
if
line
block
getToolkit
beep
return
int
magic
getMagicCaretPosition
int
newCaret
getLineStartOffset
line
xToSubregionOffset
line
magic
if
multi
selectNone
moveCaretPosition
newCaret
setMagicCaretPosition
magic
goToNextFold
select
boolean
int
nextFold
for
forControl
int
i
caretLine
i
getLineCount
i
block
if
isFoldStart
i
isLineVisible
i
block
nextFold
i
break
if
nextFold
block
getToolkit
beep
return
int
magic
getMagicCaretPosition
int
newCaret
getLineStartOffset
nextFold
xToSubregionOffset
nextFold
magic
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
setMagicCaretPosition
magic
goToPrevFold
select
boolean
int
prevFold
for
forControl
int
i
caretLine
i
i
block
if
isFoldStart
i
isLineVisible
i
block
prevFold
i
break
if
prevFold
block
getToolkit
beep
return
int
magic
getMagicCaretPosition
int
newCaret
getLineStartOffset
prevFold
xToSubregionOffset
prevFold
magic
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
setMagicCaretPosition
magic
collapseFold
collapseFold
caretLine
collapseFold
line
int
int
x
subregionOffsetToX
caretLine
caret
getLineStartOffset
caretLine
collapseFold
line
if
isLineVisible
caretLine
return
line
getPrevVisibleLine
caretLine
if
multi
block
invalidateSelectedLines
setSelection
Selection
moveCaretPosition
getLineStartOffset
line
xToSubregionOffset
line
x
expandFold
fully
boolean
int
x
subregionOffsetToX
caretLine
caret
getLineStartOffset
caretLine
int
line
expandFold
caretLine
fully
if
fully
line
block
if
multi
selectNone
moveCaretPosition
getLineStartOffset
line
xToSubregionOffset
line
x
selectFold
selectFold
caretLine
selectFold
line
int
int
lines
getFoldAtLine
line
int
newCaret
getLineEndOffset
lines
Selection
s
Selection
Range
getLineStartOffset
lines
newCaret
if
multi
addToSelection
s
setSelection
s
moveCaretPosition
newCaret
narrowToFold
int
lines
getFoldAtLine
caretLine
if
lines
lines
getLineCount
getToolkit
beep
narrow
lines
lines
narrowToSelection
if
getSelectionCount
block
getToolkit
beep
return
Selection
sel
getSelection
narrow
getStartLine
getEndLine
selectNone
addExplicitFold
if
isEditable
block
getToolkit
beep
return
if
getStringProperty
equals
block
throw
TextAreaException
try
beginCompoundEdit
if
getSelectionCount
block
addExplicitFold
caret
caret
caretLine
caretLine
block
Selection
selections
getSelection
Selection
selection
int
caretBack
for
forControl
int
i
i
length
i
block
selection
selections
i
caretBack
addExplicitFold
start
end
startLine
endLine
assert
selection
setCaretPosition
start
caretBack
endCompoundEdit
lineComment
if
isEditable
block
getToolkit
beep
return
String
comment
getContextSensitiveProperty
caret
if
comment
length
block
rangeLineComment
return
comment
beginCompoundEdit
int
lines
getSelectedLines
try
for
forControl
int
i
i
length
i
block
String
text
getLineText
lines
i
insert
getLineStartOffset
lines
i
getLeadingWhiteSpace
text
comment
endCompoundEdit
selectNone
rangeComment
String
commentStart
getContextSensitiveProperty
caret
String
commentEnd
getContextSensitiveProperty
caret
if
isEditable
commentStart
commentEnd
length
length
block
getToolkit
beep
return
commentStart
commentEnd
commentEnd
try
beginCompoundEdit
Selection
selection
getSelection
if
length
block
int
oldCaret
caret
insert
caret
commentStart
insert
caret
commentEnd
setCaretPosition
oldCaret
length
for
forControl
int
i
i
length
i
block
Selection
s
selection
i
if
s
Selection
Range
block
insert
start
commentStart
insert
end
commentEnd
if
s
Selection
Rect
block
Selection
Rect
rect
Selection
Rect
s
int
start
getStartColumn
buffer
int
end
getEndColumn
buffer
for
forControl
int
j
startLine
j
endLine
j
block
insertAtColumn
j
end
commentEnd
insertAtColumn
j
start
commentStart
selectNone
endCompoundEdit
formatParagraph
if
isEditable
block
getToolkit
beep
return
if
maxLineLen
block
throw
TextAreaException
Selection
selection
getSelection
if
length
block
beginCompoundEdit
for
forControl
int
i
i
length
i
block
Selection
s
selection
i
setSelectedText
s
format
getSelectedText
s
maxLineLen
getTabSize
endCompoundEdit
block
int
lineNo
getCaretLine
int
start
end
getLength
for
forControl
int
i
lineNo
i
i
block
if
lineContainsSpaceAndTabs
i
block
start
getLineEndOffset
i
break
for
forControl
int
i
lineNo
i
getLineCount
i
block
if
lineContainsSpaceAndTabs
i
block
end
getLineStartOffset
i
break
try
beginCompoundEdit
String
text
getText
start
end
start
int
offset
getCaretPosition
start
int
noSpaceOffset
indexIgnoringWhitespace
text
offset
remove
start
end
start
text
format
text
maxLineLen
getTabSize
insert
start
text
int
caretPos
start
if
length
block
caretPos
min
length
ignoringWhitespaceIndex
text
noSpaceOffset
moveCaretPosition
caretPos
endCompoundEdit
spacesToTabs
Selection
selection
getSelection
if
isEditable
block
getToolkit
beep
return
beginCompoundEdit
if
length
block
setText
spacesToTabs
getText
getTabSize
block
for
forControl
int
i
i
length
i
block
Selection
s
selection
i
setSelectedText
s
spacesToTabs
getSelectedText
s
getTabSize
endCompoundEdit
tabsToSpaces
Selection
selection
getSelection
if
isEditable
block
getToolkit
beep
return
beginCompoundEdit
if
length
block
setText
tabsToSpaces
getText
getTabSize
block
for
forControl
int
i
i
length
i
block
Selection
s
selection
i
setSelectedText
s
tabsToSpaces
getSelectedText
s
getTabSize
endCompoundEdit
toUpperCase
if
isEditable
block
getToolkit
beep
return
Selection
selection
getSelection
int
caret
if
length
block
caret
getCaretPosition
selectWord
selection
getSelection
if
length
block
if
caret
setCaretPosition
caret
getToolkit
beep
return
beginCompoundEdit
for
forControl
int
i
i
length
i
block
Selection
s
selection
i
setSelectedText
s
getSelectedText
toUpperCase
s
endCompoundEdit
if
caret
setCaretPosition
caret
toLowerCase
if
isEditable
block
getToolkit
beep
return
Selection
selection
getSelection
int
caret
if
length
block
caret
getCaretPosition
selectWord
selection
getSelection
if
length
block
if
caret
setCaretPosition
caret
getToolkit
beep
return
beginCompoundEdit
for
forControl
int
i
i
length
i
block
Selection
s
selection
i
setSelectedText
s
getSelectedText
toLowerCase
s
endCompoundEdit
if
caret
setCaretPosition
caret
removeTrailingWhiteSpace
if
isEditable
getToolkit
beep
block
removeTrailingWhiteSpace
getSelectedLines
insertEnterAndIndent
if
isEditable
getToolkit
beep
block
try
beginCompoundEdit
setSelectedText
indentLine
caretLine
endCompoundEdit
insertTabAndIndent
if
isEditable
block
getToolkit
beep
return
if
getSelectionCount
block
CharSequence
text
getLineSegment
caretLine
int
start
getLineStartOffset
caretLine
int
whiteSpace
getLeadingWhiteSpace
text
if
caret
start
whiteSpace
indentLine
caretLine
return
userInput
indentSelectedLines
if
isEditable
getToolkit
beep
block
indentLines
getSelectedLines
selectNone
shiftIndentLeft
if
isEditable
getToolkit
beep
block
shiftIndentLeft
getSelectedLines
shiftIndentRight
if
isEditable
getToolkit
beep
shiftIndentRight
getSelectedLines
joinLines
if
isEditable
block
getToolkit
beep
return
try
beginCompoundEdit
boolean
doneForSelection
for
Selection
selection
getSelection
block
while
startLine
endLine
block
joinLineAt
endLine
doneForSelection
if
doneForSelection
block
int
end
getLineEndOffset
caretLine
if
end
getLength
block
getToolkit
beep
return
joinLineAt
caretLine
if
multi
selectNone
moveCaretPosition
end
endCompoundEdit
addLeftOfScrollBar
comp
Component
add
comp
removeLeftOfScrollBar
comp
Component
remove
comp
addNotify
addNotify
sharedInstance
registerComponent
painter
sharedInstance
registerComponent
gutter
recalculateVisibleLines
if
isLoading
recalculateLastPhysicalLine
propertiesChanged
hiddenCursor
getToolkit
createCustomCursor
getGraphicsConfiguration
createCompatibleImage
BITMASK
Point
removeNotify
removeNotify
sharedInstance
unregisterComponent
painter
sharedInstance
unregisterComponent
gutter
if
focusedComponent
focusedComponent
stop
getFocusTraversalKeysEnabled
boolean
return
getFocusCycleRoot
boolean
return
processKeyEvent
evt
KeyEvent
getInputHandler
processKeyEvent
evt
if
isConsumed
processKeyEvent
evt
addTopComponent
comp
Component
add
TOP
comp
removeTopComponent
comp
Component
remove
comp
getInputMethodRequests
InputMethodRequests
if
inputMethodSupport
block
inputMethodSupport
InputMethodSupport
log
DEBUG
return
inputMethodSupport
addStatusListener
listener
StatusListener
add
StatusListener
listener
removeStatusListener
listener
StatusListener
remove
StatusListener
listener
propertiesChanged
if
buffer
return
int
_tabSize
getTabSize
char
foo
char
_tabSize
for
forControl
int
i
i
length
i
foo
i
tabSize
getStringWidth
String
foo
charWidth
int
round
getFont
getStringBounds
foo
getFontRenderContext
getWidth
String
oldWrap
wrap
wrap
getStringProperty
hardWrap
equals
softWrap
equals
boolean
oldWrapToWidth
wrapToWidth
int
oldWrapMargin
wrapMargin
setMaxLineLength
getIntegerProperty
boolean
wrapSettingsChanged
equals
oldWrap
oldWrapToWidth
wrapToWidth
oldWrapMargin
wrapMargin
if
displayManager
bufferChanging
isLoading
wrapSettingsChanged
block
invalidateScreenLineCounts
notifyScreenLineChanges
invalidateAll
repaint
repaint
addActionSet
actionSet
JEditActionSet
JEditBeanShellAction
addActionSet
actionSet
getMarkPosition
int
Selection
s
getSelectionAtOffset
caret
if
s
return
caret
if
start
caret
return
end
if
end
caret
return
start
return
caret
getMarkLine
int
if
getSelectionCount
return
caretLine
Selection
s
getSelection
if
start
caret
return
endLine
if
end
caret
return
startLine
return
caretLine
TextArea
focusedComponent
Segment
lineSegment
Segment
MouseInputAdapter
mouseHandler
ChunkCache
chunkCache
DisplayManager
displayManager
SelectionManager
selectionManager
JEditActionContext
JEditBeanShellAction
JEditActionSet
JEditBeanShellAction
actionContext
boolean
bufferChanging
int
maxHorizontalScrollWidth
String
wrap
boolean
hardWrap
boolean
softWrap
boolean
wrapToWidth
int
maxLineLen
int
wrapMargin
float
tabSize
int
charWidth
boolean
scrollBarsInitialized
Point
offsetXY
boolean
lastLinePartial
boolean
blink
isCaretVisible
boolean
return
blink
hasFocus
isStructureHighlightVisible
boolean
return
match
hasFocus
isLineVisible
startLine
isLineVisible
endLine
updateMaxHorizontalScrollWidth
int
max
getMaxHorizontalScrollWidth
if
max
maxHorizontalScrollWidth
block
maxHorizontalScrollWidth
max
setValues
max
min
maxHorizontalScrollWidth
charWidth
getWidth
horizontalOffset
getWidth
maxHorizontalScrollWidth
charWidth
setUnitIncrement
setBlockIncrement
getWidth
if
getValue
horizontalOffset
block
setValue
horizontalOffset
recalculateVisibleLines
if
painter
return
int
height
getHeight
int
lineHeight
getFontMetrics
getHeight
if
lineHeight
visibleLines
if
height
block
visibleLines
lastLinePartial
block
visibleLines
height
lineHeight
lastLinePartial
height
lineHeight
if
lastLinePartial
visibleLines
recalculateVisibleLines
if
displayManager
buffer
isLoading
setFirstLine
getFirstLine
updateScrollBar
foldStructureChanged
invalidateAll
recalculateLastPhysicalLine
repaint
updateScrollBar
if
buffer
return
if
SCROLL_DEBUG
log
DEBUG
getScrollLineCount
if
vertical
visibleLines
block
if
SCROLL_DEBUG
log
DEBUG
int
lineCount
getScrollLineCount
int
firstLine
getFirstLine
int
visible
visibleLines
lastLinePartial
setValues
firstLine
visible
lineCount
setUnitIncrement
setBlockIncrement
visible
_finishCaretUpdate
if
queuedCaretUpdate
return
try
if
match
block
if
oldCaretLine
startLine
invalidateLineRange
oldCaretLine
endLine
invalidateLineRange
startLine
oldCaretLine
match
int
newCaretScreenLine
getScreenLineOfOffset
caretLine
caret
getLineStartOffset
caretLine
if
caretScreenLine
invalidateScreenLineRange
newCaretScreenLine
newCaretScreenLine
invalidateScreenLineRange
caretScreenLine
newCaretScreenLine
caretScreenLine
newCaretScreenLine
invalidateSelectedLines
blink
restart
if
isLineVisible
caretLine
block
if
caretLine
getFirstVisibleLine
caretLine
getLastVisibleLine
block
int
collapseFolds
getIntegerProperty
if
collapseFolds
block
expandFolds
collapseFolds
expandFold
caretLine
expandAllFolds
expandFold
caretLine
if
queuedScrollMode
ELECTRIC_SCROLL
scrollToCaret
if
queuedScrollMode
NORMAL_SCROLL
scrollToCaret
updateBracketHighlightWithDelay
if
queuedFireCaretEvent
fireCaretEvent
queuedCaretUpdate
queuedFireCaretEvent
queuedScrollMode
NO_SCROLL
invalidateStructureMatch
if
match
invalidateLineRange
startLine
endLine
startDragAndDrop
evt
InputEvent
copy
boolean
TransferHandler
transferHandler
getTransferHandler
if
transferHandler
block
log
DEBUG
exportAsDrag
evt
copy
COPY
MOVE
fireNarrowActive
Object
listeners
getListenerList
for
forControl
int
i
length
i
i
block
if
listeners
i
StatusListener
block
try
StatusListener
listeners
i
catchClause
t
log
ERROR
t
Timer
caretTimer
Timer
structureTimer
JPopupMenu
popup
boolean
popupEnabled
Cursor
hiddenCursor
Gutter
gutter
TextAreaPainter
painter
EventListenerList
listenerList
MutableCaretEvent
caretEvent
boolean
caretBlinks
InputHandlerProvider
inputHandlerProvider
InputMethodSupport
inputMethodSupport
int
physLastLine
int
screenLastLine
int
visibleLines
int
electricScroll
int
horizontalOffset
boolean
quickCopy
Box
verticalBox
JScrollBar
vertical
JScrollBar
horizontal
JEditBuffer
buffer
int
caret
int
caretLine
int
caretScreenLine
java
util
List
StructureMatcher
structureMatchers
StructureMatcher
Match
match
int
magicCaret
boolean
multi
boolean
overwrite
boolean
rectangularSelectionMode
boolean
dndEnabled
boolean
dndInProgress
boolean
queuedCaretUpdate
int
queuedScrollMode
boolean
queuedFireCaretEvent
int
oldCaretLine
boolean
joinNonWordChars
boolean
ctrlForRectangularSelection
_setHorizontalOffset
horizontalOffset
int
if
horizontalOffset
horizontalOffset
if
horizontalOffset
horizontalOffset
return
int
min
min
maxHorizontalScrollWidth
charWidth
getWidth
if
horizontalOffset
min
horizontalOffset
min
setHorizontalOffset
horizontalOffset
invalidateSelectedLines
invalidateLine
caretLine
for
Selection
s
selection
invalidateLineRange
startLine
endLine
finishCaretUpdate
oldCaretLine
int
scrollMode
int
fireCaretEvent
boolean
queuedFireCaretEvent
fireCaretEvent
queuedScrollMode
max
scrollMode
queuedScrollMode
if
queuedCaretUpdate
return
oldCaretLine
oldCaretLine
queuedCaretUpdate
if
isTransactionInProgress
_finishCaretUpdate
fireCaretEvent
Object
listeners
getListenerList
for
forControl
int
i
length
i
i
block
if
listeners
i
CaretListener
block
try
CaretListener
listeners
i
catchClause
t
log
ERROR
t
fireScrollEvent
vertical
boolean
Object
listeners
getListenerList
for
forControl
int
i
length
i
i
block
if
listeners
i
ScrollListener
block
try
if
vertical
ScrollListener
listeners
i
ScrollListener
listeners
i
catchClause
t
log
ERROR
t
fireStatusChanged
flag
int
value
boolean
Object
listeners
getListenerList
for
forControl
int
i
length
i
i
block
if
listeners
i
StatusListener
block
try
StatusListener
listeners
i
catchClause
t
log
ERROR
t
fireBracketSelected
line
int
text
String
Object
listeners
getListenerList
for
forControl
int
i
length
i
i
block
if
listeners
i
StatusListener
block
try
StatusListener
listeners
i
catchClause
t
log
ERROR
t
_changeLine
select
boolean
newCaret
int
if
select
block
RectParams
params
getRectParams
caret
newCaret
int
extraStartVirt
int
extraEndVirt
if
params
block
extraStartVirt
extraEndVirt
block
extraStartVirt
extraStartVirt
extraEndVirt
extraEndVirt
newCaret
newCaret
extendSelection
caret
newCaret
extraStartVirt
extraEndVirt
if
multi
selectNone
moveCaretPosition
newCaret
lineContainsSpaceAndTabs
boolean
lineIndex
int
getLineText
lineIndex
lineSegment
for
forControl
int
j
j
count
j
block
switch
array
offset
j
case
break
case
return
return
insert
str
String
indent
boolean
try
if
overwrite
indent
beginCompoundEdit
if
overwrite
block
int
caretLineEnd
getLineEndOffset
caretLine
if
caretLineEnd
caret
remove
caret
insert
caret
str
if
indent
indentLine
caretLine
if
overwrite
indent
endCompoundEdit
insertTab
int
tabSize
getTabSize
if
getBooleanProperty
block
int
lineStart
getLineStartOffset
caretLine
String
line
getText
lineStart
caret
lineStart
int
pos
for
forControl
int
i
i
length
i
block
switch
charAt
pos
case
pos
break
case
if
pos
tabSize
pos
break
replaceSelection
createWhiteSpace
tabSize
pos
replaceSelection
userInputTab
if
getSelectionCount
block
Selection
sel
getSelection
if
sel
Selection
Rect
startLine
endLine
start
getLineStartOffset
startLine
end
getLineEndOffset
startLine
block
insertTab
shiftIndentRight
if
getSelectionCount
shiftIndentRight
insertTab
doWordWrap
boolean
spaceInserted
boolean
if
hardWrap
maxLineLen
return
getLineText
caretLine
lineSegment
int
start
getLineStartOffset
caretLine
int
end
getLineEndOffset
caretLine
int
len
end
start
int
caretPos
caret
start
for
forControl
int
i
caretPos
i
len
i
block
char
ch
array
offset
i
if
ch
ch
return
int
tabSize
getTabSize
String
wordBreakChars
getStringProperty
int
lastInLine
int
logicalLength
int
lastWordOffset
boolean
lastWasSpace
for
forControl
int
i
i
caretPos
i
block
char
ch
array
offset
i
if
ch
block
logicalLength
tabSize
logicalLength
tabSize
if
lastWasSpace
logicalLength
maxLineLen
block
lastInLine
i
lastWordOffset
i
lastWasSpace
if
ch
block
logicalLength
if
lastWasSpace
logicalLength
maxLineLen
block
lastInLine
i
lastWordOffset
i
lastWasSpace
if
wordBreakChars
indexOf
ch
block
logicalLength
if
lastWasSpace
logicalLength
maxLineLen
block
lastInLine
i
lastWordOffset
i
lastWasSpace
block
lastInLine
i
logicalLength
lastWasSpace
boolean
returnValue
int
insertNewLineAt
if
spaceInserted
logicalLength
maxLineLen
lastInLine
caretPos
block
insertNewLineAt
caretPos
returnValue
if
logicalLength
maxLineLen
lastWordOffset
block
insertNewLineAt
lastWordOffset
returnValue
return
try
beginCompoundEdit
insert
start
insertNewLineAt
indentLine
caretLine
endCompoundEdit
return
returnValue
updateBracketHighlightWithDelay
stop
start
updateStructureHighlight
if
isStructureHighlightEnabled
isStructureHighlightEnabled
return
for
StructureMatcher
matcher
structureMatchers
block
match
getMatch
if
match
break
if
match
block
if
caretLine
startLine
invalidateLineRange
caretLine
endLine
invalidateLineRange
startLine
caretLine
if
isLineVisible
startLine
getScreenLineOfOffset
startLine
start
getLineStartOffset
startLine
block
showStructureStatusMessage
startLine
caretLine
showStructureStatusMessage
backward
boolean
String
text
getLineText
trim
startLine
if
backward
startLine
length
block
switch
charAt
case
text
getLineText
trim
startLine
text
break
fireBracketSelected
startLine
replace
recalculateLastPhysicalLine
int
oldScreenLastLine
screenLastLine
for
forControl
int
i
visibleLines
i
i
block
ChunkCache
LineInfo
info
getLineInfo
i
if
physicalLine
block
physLastLine
physicalLine
screenLastLine
i
break
invalidateScreenLineRange
oldScreenLastLine
screenLastLine
RectParams
int
extraStartVirt
int
extraEndVirt
int
newCaret
RectParams
extraStartVirt
int
extraEndVirt
int
newCaret
int
extraStartVirt
extraStartVirt
extraEndVirt
extraEndVirt
newCaret
newCaret
getRectParams
RectParams
caret
int
newCaret
int
Selection
s
getSelectionAtOffset
caret
int
virtualWidth
if
s
Selection
Rect
block
if
caret
end
block
virtualWidth
getVirtualWidth
endLine
end
getLineStartOffset
endLine
Selection
Rect
s
block
virtualWidth
getVirtualWidth
startLine
start
getLineStartOffset
startLine
Selection
Rect
s
if
rectangularSelectionMode
block
virtualWidth
getVirtualWidth
caretLine
caret
getLineStartOffset
caretLine
return
int
newLine
getLineOfOffset
newCaret
int
totalVirtualWidth
int
int
newOffset
getOffsetOfVirtualColumn
newLine
virtualWidth
totalVirtualWidth
if
newOffset
block
int
extraVirt
virtualWidth
totalVirtualWidth
newCaret
getLineEndOffset
newLine
boolean
bias
if
s
bias
newCaret
caret
if
start
caret
bias
newCaret
end
if
end
caret
bias
newCaret
start
bias
RectParams
returnValue
if
bias
returnValue
RectParams
extraVirt
newCaret
returnValue
RectParams
extraVirt
newCaret
return
returnValue
block
return
RectParams
getLineStartOffset
newLine
newOffset
delete
forward
boolean
if
isEditable
block
getToolkit
beep
return
if
getSelectionCount
block
Selection
selections
getSelection
for
forControl
int
i
i
length
i
block
Selection
s
selections
i
if
s
Selection
Rect
block
Selection
Rect
r
Selection
Rect
s
int
startColumn
getStartColumn
buffer
if
startColumn
getEndColumn
buffer
block
if
forward
startColumn
getToolkit
beep
tallCaretDelete
r
forward
setSelectedText
s
setSelectedText
s
if
forward
block
if
caret
getLength
block
getToolkit
beep
return
remove
caret
block
if
caret
block
getToolkit
beep
return
remove
caret
tallCaretDelete
s
Selection
Rect
forward
boolean
try
beginCompoundEdit
int
width
int
int
startCol
getStartColumn
buffer
int
startLine
startLine
int
endLine
endLine
for
forControl
int
i
startLine
i
endLine
i
block
int
offset
getOffsetOfVirtualColumn
i
startCol
width
if
offset
block
if
width
startCol
offset
getLineLength
i
block
if
i
startLine
forward
shiftTallCaretLeft
s
continue
offset
getLineStartOffset
i
if
forward
block
if
offset
getLineEndOffset
i
remove
offset
remove
offset
endCompoundEdit
shiftTallCaretLeft
s
Selection
Rect
removeFromSelection
s
addToSelection
Selection
Rect
buffer
getStartLine
getStartColumn
buffer
getEndLine
getEndColumn
buffer
setMaxLineLength
maxLineLen
int
maxLineLen
maxLineLen
if
maxLineLen
block
if
softWrap
block
wrapToWidth
wrapMargin
getWidth
charWidth
block
wrapToWidth
wrapMargin
block
char
foo
char
maxLineLen
for
forControl
int
i
i
length
i
block
foo
i
wrapToWidth
wrapMargin
int
getFont
getStringBounds
foo
length
getFontRenderContext
getWidth
addExplicitFold
int
caretStart
int
caretEnd
int
lineStart
int
lineEnd
int
int
startCaret
caretStart
getLength
caretStart
caretStart
int
endCaret
caretEnd
caretEnd
caretEnd
String
startLineComment
getContextSensitiveProperty
startCaret
String
startCommentStart
getContextSensitiveProperty
startCaret
String
startCommentEnd
getContextSensitiveProperty
startCaret
String
endLineComment
getContextSensitiveProperty
endCaret
String
endCommentStart
getContextSensitiveProperty
endCaret
String
endCommentEnd
getContextSensitiveProperty
endCaret
String
start
int
caretBack
if
startLineComment
start
startLineComment
if
startCommentStart
startCommentEnd
block
start
startCommentStart
startCommentEnd
caretBack
length
start
if
startLineComment
block
if
getLineLength
lineStart
caretStart
block
start
block
start
String
end
if
endLineComment
end
endLineComment
if
endCommentStart
endCommentEnd
end
endCommentStart
endCommentEnd
end
String
line
getLineText
lineStart
String
whitespace
substring
getLeadingWhiteSpace
line
if
endLineComment
block
if
getLineLength
lineEnd
caretEnd
block
end
block
end
if
caretEnd
getLineStartOffset
lineEnd
insert
caretEnd
end
block
CharSequence
lineText
getSegment
caretEnd
if
isWhitespace
charAt
insert
caretEnd
end
insert
caretEnd
end
insert
caretStart
start
whitespace
return
caretBack
rangeLineComment
String
commentStart
getContextSensitiveProperty
caret
String
commentEnd
getContextSensitiveProperty
caret
if
isEditable
commentStart
commentEnd
length
length
block
getToolkit
beep
return
commentStart
commentEnd
commentEnd
try
beginCompoundEdit
int
lines
getSelectedLines
for
forControl
int
i
i
length
i
block
String
text
getLineText
lines
i
if
trim
length
continue
insert
getLineEndOffset
lines
i
commentEnd
insert
getLineStartOffset
lines
i
getLeadingWhiteSpace
text
commentStart
endCompoundEdit
joinLineAt
line
int
if
line
getLineCount
return
int
end
getLineEndOffset
line
CharSequence
nextLineText
getLineSegment
line
remove
end
getLeadingWhiteSpace
nextLineText
if
length
insert
end
isRightClickPopupEnabled
boolean
return
popupEnabled
setRightClickPopupEnabled
popupEnabled
boolean
popupEnabled
popupEnabled
getRightClickPopup
JPopupMenu
return
popup
setRightClickPopup
popup
JPopupMenu
popup
popup
handlePopupTrigger
evt
MouseEvent
createPopupMenu
evt
int
x
getX
int
y
getY
int
dragStart
xyToOffset
x
y
isBlockCaretEnabled
isOverwriteEnabled
if
getSelectionCount
multi
moveCaretPosition
dragStart
showPopupMenu
popup
x
y
createPopupMenu
evt
MouseEvent
if
popup
popup
JPopupMenu
showPopupMenu
if
isVisible
hasFocus
block
Point
caretPos
offsetToXY
getCaretPosition
if
caretPos
block
int
charHeight
getPainter
getFontMetrics
getHeight
showPopupMenu
popup
painter
x
y
charHeight
showPopupMenu
popup
JPopupMenu
comp
Component
x
int
y
int
point
boolean
int
offsetX
int
offsetY
int
extraOffset
point
Component
win
comp
while
win
Window
win
block
offsetX
getX
offsetY
getY
win
getParent
if
win
block
Dimension
size
getPreferredSize
Rectangle
screenSize
getLocalGraphicsEnvironment
getMaximumWindowBounds
if
x
offsetX
width
getX
width
x
offsetX
getX
width
block
if
point
x
width
extraOffset
x
getWidth
width
offsetX
extraOffset
block
x
extraOffset
if
y
offsetY
height
getY
height
y
offsetY
getY
height
block
if
point
y
getHeight
height
offsetY
extraOffset
y
height
block
y
extraOffset
show
comp
x
y
show
comp
x
extraOffset
y
extraOffset
CaretBlinker
actionPerformed
evt
ActionEvent
if
focusedComponent
hasFocus
blinkCaret
ActionListener
MutableCaretEvent
MutableCaretEvent
getDot
int
return
getCaretPosition
getMark
int
return
getMarkPosition
CaretEvent
AdjustHandler
adjustmentValueChanged
evt
AdjustmentEvent
if
scrollBarsInitialized
return
if
getAdjustable
vertical
setFirstLine
getValue
setHorizontalOffset
getValue
AdjustmentListener
FocusHandler
focusGained
evt
FocusEvent
if
bufferChanging
return
if
match
block
if
caretLine
startLine
invalidateLineRange
caretLine
endLine
invalidateLineRange
startLine
caretLine
invalidateLine
caretLine
focusedComponent
focusLost
evt
FocusEvent
if
isShowing
return
if
match
block
if
caretLine
startLine
invalidateLineRange
caretLine
endLine
invalidateLineRange
startLine
caretLine
invalidateLine
caretLine
FocusListener
MouseWheelHandler
mouseWheelMoved
e
MouseWheelEvent
if
isAltDown
block
boolean
select
isShiftDown
isControlDown
if
getWheelRotation
goToPrevLine
select
goToNextLine
select
if
getScrollType
WHEEL_BLOCK_SCROLL
block
if
isShiftDown
block
_setHorizontalOffset
getHorizontalOffset
getWheelRotation
getWidth
block
if
getWheelRotation
scrollDownPage
scrollUpPage
if
isControlDown
isShiftDown
block
if
getWheelRotation
scrollDownPage
scrollUpPage
if
isControlDown
block
setFirstLine
getFirstLine
getWheelRotation
if
getScrollType
WHEEL_UNIT_SCROLL
block
if
isShiftDown
block
_setHorizontalOffset
getHorizontalOffset
charWidth
getUnitsToScroll
block
setFirstLine
getFirstLine
getUnitsToScroll
block
if
isShiftDown
block
_setHorizontalOffset
getHorizontalOffset
charWidth
getWheelRotation
block
setFirstLine
getFirstLine
getWheelRotation
MouseWheelListener
caretTimer
Timer
CaretBlinker
setInitialDelay
start
structureTimer
Timer
ActionListener
actionPerformed
evt
ActionEvent
if
focusedComponent
updateStructureHighlight
setInitialDelay
setRepeats
JComponent
