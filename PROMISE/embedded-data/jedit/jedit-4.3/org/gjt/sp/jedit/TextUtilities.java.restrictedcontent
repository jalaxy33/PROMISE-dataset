TextUtilities
int
BRACKET_MATCH_LIMIT
getTokenAtOffset
Token
tokens
Token
offset
int
if
offset
id
END
return
tokens
for
forControl
block
if
id
END
throw
ArrayIndexOutOfBoundsException
if
offset
length
offset
return
tokens
tokens
next
getComplementaryBracket
char
ch
char
direction
boolean
switch
ch
case
if
direction
direction
return
case
if
direction
direction
return
case
if
direction
direction
return
case
if
direction
direction
return
case
if
direction
direction
return
case
if
direction
direction
return
case
if
direction
direction
return
case
if
direction
direction
return
case
return
findMatchingBracket
int
buffer
JEditBuffer
line
int
offset
int
if
offset
offset
getLineLength
line
block
throw
ArrayIndexOutOfBoundsException
offset
getLineLength
line
Segment
lineText
Segment
getLineText
line
lineText
char
c
array
offset
offset
boolean
direction
boolean
char
cprime
getComplementaryBracket
c
direction
if
cprime
block
return
int
count
DefaultTokenHandler
tokenHandler
DefaultTokenHandler
markTokens
line
tokenHandler
byte
idOfBracket
getTokenAtOffset
id
getTokens
offset
boolean
haveTokens
int
startLine
line
if
direction
block
offset
for
forControl
block
for
forControl
int
i
offset
i
count
i
block
char
ch
array
offset
i
if
ch
c
block
if
haveTokens
block
init
markTokens
line
tokenHandler
haveTokens
if
getTokenAtOffset
id
getTokens
i
idOfBracket
count
if
ch
cprime
block
if
haveTokens
block
init
markTokens
line
tokenHandler
haveTokens
if
getTokenAtOffset
id
getTokens
i
idOfBracket
block
count
if
count
return
getLineStartOffset
line
i
line
if
line
getLineCount
line
startLine
BRACKET_MATCH_LIMIT
break
getLineText
line
lineText
offset
haveTokens
block
offset
for
forControl
block
for
forControl
int
i
offset
i
i
block
char
ch
array
offset
i
if
ch
c
block
if
haveTokens
block
init
markTokens
line
tokenHandler
haveTokens
if
getTokenAtOffset
id
getTokens
i
idOfBracket
count
if
ch
cprime
block
if
haveTokens
block
init
markTokens
line
tokenHandler
haveTokens
if
getTokenAtOffset
id
getTokens
i
idOfBracket
block
count
if
count
return
getLineStartOffset
line
i
line
if
line
startLine
line
BRACKET_MATCH_LIMIT
break
getLineText
line
lineText
offset
count
haveTokens
return
findWordStart
int
line
String
pos
int
noWordSep
String
return
findWordStart
line
pos
noWordSep
findWordStart
int
line
CharSequence
pos
int
noWordSep
String
return
findWordStart
line
pos
noWordSep
join
String
c
Collection
String
delim
String
StringBuilder
retval
StringBuilder
Iterator
String
itr
iterator
if
hasNext
append
next
return
while
hasNext
block
append
delim
append
next
return
toString
findWordStart
int
line
String
pos
int
noWordSep
String
joinNonWordChars
boolean
return
findWordStart
line
pos
noWordSep
joinNonWordChars
findWordStart
int
line
String
pos
int
noWordSep
String
joinNonWordChars
boolean
eatWhitespace
boolean
return
findWordStart
line
pos
noWordSep
joinNonWordChars
eatWhitespace
findWordStart
int
line
String
pos
int
noWordSep
String
joinNonWordChars
boolean
camelCasedWords
boolean
eatWhitespace
boolean
return
findWordStart
CharSequence
line
pos
noWordSep
joinNonWordChars
camelCasedWords
eatWhitespace
findWordStart
int
line
CharSequence
pos
int
noWordSep
String
joinNonWordChars
boolean
camelCasedWords
boolean
eatWhitespace
boolean
char
ch
charAt
pos
if
noWordSep
noWordSep
int
type
getCharType
ch
noWordSep
for
forControl
int
i
pos
i
i
block
char
lastCh
ch
ch
charAt
i
switch
type
case
if
isWhitespace
ch
break
return
i
case
if
camelCasedWords
isUpperCase
ch
isUpperCase
lastCh
isLetterOrDigit
lastCh
block
return
i
if
camelCasedWords
isUpperCase
ch
isUpperCase
lastCh
block
return
i
if
isLetterOrDigit
ch
indexOf
ch
block
break
if
isWhitespace
ch
eatWhitespace
block
type
WHITESPACE
break
return
i
case
if
joinNonWordChars
pos
i
return
i
if
isWhitespace
ch
block
if
eatWhitespace
block
type
WHITESPACE
break
return
i
if
isLetterOrDigit
ch
indexOf
ch
block
return
i
block
break
return
findWordEnd
int
line
String
pos
int
noWordSep
String
return
findWordEnd
line
pos
noWordSep
findWordEnd
int
line
CharSequence
pos
int
noWordSep
String
return
findWordEnd
line
pos
noWordSep
findWordEnd
int
line
String
pos
int
noWordSep
String
joinNonWordChars
boolean
return
findWordEnd
line
pos
noWordSep
joinNonWordChars
findWordEnd
int
line
String
pos
int
noWordSep
String
joinNonWordChars
boolean
eatWhitespace
boolean
return
findWordEnd
line
pos
noWordSep
joinNonWordChars
eatWhitespace
findWordEnd
int
line
String
pos
int
noWordSep
String
joinNonWordChars
boolean
camelCasedWords
boolean
eatWhitespace
boolean
return
findWordEnd
CharSequence
line
pos
noWordSep
joinNonWordChars
camelCasedWords
eatWhitespace
findWordEnd
int
line
CharSequence
pos
int
noWordSep
String
joinNonWordChars
boolean
camelCasedWords
boolean
eatWhitespace
boolean
if
pos
pos
char
ch
charAt
pos
if
noWordSep
noWordSep
int
type
getCharType
ch
noWordSep
for
forControl
int
i
pos
i
length
i
block
char
lastCh
ch
ch
charAt
i
switch
type
case
if
isWhitespace
ch
break
return
i
case
if
camelCasedWords
i
pos
isUpperCase
ch
isLetterOrDigit
ch
isUpperCase
lastCh
block
return
i
if
camelCasedWords
isUpperCase
ch
isUpperCase
lastCh
block
return
i
if
isLetterOrDigit
ch
indexOf
ch
block
break
if
isWhitespace
ch
eatWhitespace
block
type
WHITESPACE
break
return
i
case
if
joinNonWordChars
i
pos
return
i
if
isWhitespace
ch
block
if
eatWhitespace
block
type
WHITESPACE
break
return
i
if
isLetterOrDigit
ch
indexOf
ch
block
return
i
block
break
return
length
getCharType
int
ch
char
noWordSep
String
int
type
if
isWhitespace
ch
type
WHITESPACE
if
isLetterOrDigit
ch
indexOf
ch
type
WORD_CHAR
type
SYMBOL
return
type
spacesToTabs
String
in
String
tabSize
int
StringBuilder
buf
StringBuilder
int
width
int
whitespace
for
forControl
int
i
i
length
i
block
switch
charAt
i
case
whitespace
width
break
case
int
tab
tabSize
width
tabSize
width
tab
whitespace
tab
break
case
if
whitespace
block
append
createWhiteSpace
whitespace
tabSize
width
whitespace
whitespace
width
append
break
case
if
whitespace
block
append
createWhiteSpace
whitespace
tabSize
width
whitespace
whitespace
append
charAt
i
width
break
if
whitespace
block
append
createWhiteSpace
whitespace
tabSize
width
whitespace
return
toString
tabsToSpaces
String
in
String
tabSize
int
StringBuilder
buf
StringBuilder
int
width
for
forControl
int
i
i
length
i
block
switch
charAt
i
case
int
count
tabSize
width
tabSize
width
count
while
count
append
break
case
width
append
charAt
i
break
case
width
append
charAt
i
break
return
toString
format
String
text
String
maxLineLength
int
tabSize
int
StringBuilder
buf
StringBuilder
int
index
for
forControl
block
int
newIndex
indexOf
index
if
newIndex
break
formatParagraph
substring
index
newIndex
maxLineLength
tabSize
buf
append
index
newIndex
if
index
length
block
formatParagraph
substring
index
maxLineLength
tabSize
buf
return
toString
indexIgnoringWhitespace
int
str
String
index
int
int
j
for
forControl
int
i
i
index
i
if
isWhitespace
charAt
i
j
return
j
ignoringWhitespaceIndex
int
str
String
index
int
int
j
for
forControl
int
i
i
block
if
isWhitespace
charAt
i
j
if
j
index
return
i
if
i
length
return
i
int
MIXED
int
LOWER_CASE
int
UPPER_CASE
int
TITLE_CASE
getStringCase
int
str
String
if
length
return
MIXED
int
state
char
ch
charAt
if
isLetter
ch
block
if
isUpperCase
ch
state
UPPER_CASE
state
LOWER_CASE
for
forControl
int
i
i
length
i
block
ch
charAt
i
if
isLetter
ch
continue
switch
state
case
if
isLowerCase
ch
block
if
i
state
TITLE_CASE
return
MIXED
break
case
if
isUpperCase
ch
return
MIXED
break
return
state
toTitleCase
String
str
String
if
length
return
str
block
return
toUpperCase
charAt
substring
toLowerCase
int
WHITESPACE
int
WORD_CHAR
int
SYMBOL
formatParagraph
text
String
maxLineLength
int
tabSize
int
buf
StringBuilder
int
leadingWhitespaceCount
getLeadingWhiteSpace
text
String
leadingWhitespace
substring
leadingWhitespaceCount
int
leadingWhitespaceWidth
getLeadingWhiteSpaceWidth
text
tabSize
append
leadingWhitespace
int
lineLength
leadingWhitespaceWidth
StringTokenizer
st
StringTokenizer
text
while
hasMoreTokens
block
String
word
nextToken
if
lineLength
leadingWhitespaceWidth
block
if
lineLength
length
maxLineLength
block
append
append
leadingWhitespace
lineLength
leadingWhitespaceWidth
block
append
lineLength
append
word
lineLength
length
indexIgnoringWhitespace
text
String
maxLineLength
int
tabSize
int
buf
StringBuffer
int
leadingWhitespaceCount
getLeadingWhiteSpace
text
String
leadingWhitespace
substring
leadingWhitespaceCount
int
leadingWhitespaceWidth
getLeadingWhiteSpaceWidth
text
tabSize
append
leadingWhitespace
int
lineLength
leadingWhitespaceWidth
StringTokenizer
st
StringTokenizer
text
while
hasMoreTokens
block
String
word
nextToken
if
lineLength
leadingWhitespaceWidth
block
if
lineLength
length
maxLineLength
block
append
append
leadingWhitespace
lineLength
leadingWhitespaceWidth
block
append
lineLength
append
word
lineLength
length
