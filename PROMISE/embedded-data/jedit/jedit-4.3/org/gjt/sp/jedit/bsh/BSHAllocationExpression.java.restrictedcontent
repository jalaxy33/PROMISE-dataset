BSHAllocationExpression
BSHAllocationExpression
id
int
id
int
innerClassCount
eval
Object
callstack
CallStack
interpreter
Interpreter
SimpleNode
type
SimpleNode
jjtGetChild
SimpleNode
args
SimpleNode
jjtGetChild
if
type
BSHAmbiguousName
block
BSHAmbiguousName
name
BSHAmbiguousName
type
if
args
BSHArguments
return
objectAllocation
name
BSHArguments
args
callstack
interpreter
return
objectArrayAllocation
name
BSHArrayDimensions
args
callstack
interpreter
return
primitiveArrayAllocation
BSHPrimitiveType
type
BSHArrayDimensions
args
callstack
interpreter
objectAllocation
Object
nameNode
BSHAmbiguousName
argumentsNode
BSHArguments
callstack
CallStack
interpreter
Interpreter
NameSpace
namespace
top
Object
args
getArguments
callstack
interpreter
if
args
throw
EvalError
callstack
Object
obj
toObject
callstack
interpreter
obj
toObject
callstack
interpreter
Class
type
if
obj
ClassIdentifier
type
ClassIdentifier
obj
throw
EvalError
text
callstack
boolean
hasBody
jjtGetNumChildren
if
hasBody
block
BSHBlock
body
BSHBlock
jjtGetChild
if
isInterface
return
constructWithInterfaceBody
type
args
body
callstack
interpreter
return
constructWithClassBody
type
args
body
callstack
interpreter
return
constructObject
type
args
callstack
constructObject
Object
type
Class
args
Object
callstack
CallStack
Object
obj
try
obj
constructObject
type
args
catchClause
e
throw
EvalError
getMessage
callstack
catchClause
e
debug
getTargetException
throw
TargetError
getTargetException
callstack
String
className
getName
if
indexOf
return
obj
This
ths
top
getThis
NameSpace
instanceNameSpace
getClassNameSpace
getNameSpace
if
instanceNameSpace
startsWith
getName
block
try
getClassGenerator
setInstanceNameSpaceParent
obj
className
instanceNameSpace
catchClause
e
throw
toEvalError
callstack
return
obj
constructWithClassBody
Object
type
Class
args
Object
block
BSHBlock
callstack
CallStack
interpreter
Interpreter
String
name
top
getName
innerClassCount
Modifiers
modifiers
Modifiers
addModifier
CLASS
Class
clas
try
clas
getClassGenerator
generateClass
name
modifiers
type
block
callstack
interpreter
catchClause
e
throw
toEvalError
callstack
try
return
constructObject
clas
args
catchClause
e
if
e
InvocationTargetException
e
Exception
InvocationTargetException
e
throw
EvalError
e
callstack
constructWithInterfaceBody
Object
type
Class
args
Object
body
BSHBlock
callstack
CallStack
interpreter
Interpreter
NameSpace
namespace
top
NameSpace
local
NameSpace
namespace
push
local
eval
callstack
interpreter
pop
importStatic
type
try
return
getThis
getInterface
type
interpreter
catchClause
e
throw
toEvalError
callstack
objectArrayAllocation
Object
nameNode
BSHAmbiguousName
dimensionsNode
BSHArrayDimensions
callstack
CallStack
interpreter
Interpreter
NameSpace
namespace
top
Class
type
toClass
callstack
interpreter
if
type
throw
EvalError
getName
namespace
callstack
return
arrayAllocation
dimensionsNode
type
callstack
interpreter
primitiveArrayAllocation
Object
typeNode
BSHPrimitiveType
dimensionsNode
BSHArrayDimensions
callstack
CallStack
interpreter
Interpreter
Class
type
getType
return
arrayAllocation
dimensionsNode
type
callstack
interpreter
arrayAllocation
Object
dimensionsNode
BSHArrayDimensions
type
Class
callstack
CallStack
interpreter
Interpreter
Object
result
eval
type
callstack
interpreter
if
result
VOID
return
result
return
arrayNewInstance
type
dimensionsNode
callstack
arrayNewInstance
Object
type
Class
dimensionsNode
BSHArrayDimensions
callstack
CallStack
if
numUndefinedDims
block
Object
proto
newInstance
type
int
numUndefinedDims
type
getClass
try
return
newInstance
type
definedDimensions
catchClause
e1
throw
TargetError
e1
callstack
catchClause
e
throw
EvalError
getMessage
callstack
SimpleNode
