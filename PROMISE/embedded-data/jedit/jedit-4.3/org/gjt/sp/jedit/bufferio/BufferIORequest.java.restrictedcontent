BufferIORequest
int
IOBUFSIZE
int
PROGRESS_INTERVAL
String
LOAD_DATA
String
END_OFFSETS
String
NEW_PATH
String
ERROR_OCCURRED
int
UTF8_MAGIC_1
int
UTF8_MAGIC_2
int
UTF8_MAGIC_3
int
UNICODE_MAGIC_1
int
UNICODE_MAGIC_2
int
XML_PI_LENGTH
int
GZIP_MAGIC_1
int
GZIP_MAGIC_2
View
view
Buffer
buffer
Object
session
VFS
vfs
String
path
String
markersPath
BufferIORequest
view
View
buffer
Buffer
session
Object
vfs
VFS
path
String
view
view
buffer
buffer
session
session
vfs
vfs
path
path
markersPath
getMarkersPath
vfs
path
toString
String
return
getClass
getName
buffer
getCharIOBufferSize
int
return
IOBUFSIZE
getByteIOBufferSize
int
return
IOBUFSIZE
autodetect
Reader
in
InputStream
return
autodetect
in
buffer
read
SegmentBuffer
in
Reader
length
long
insert
boolean
IntegerArray
endOffsets
IntegerArray
max
int
length
boolean
trackProgress
isTemporary
length
if
trackProgress
block
setMaximum
length
setValue
if
length
length
IOBUFSIZE
SegmentBuffer
seg
SegmentBuffer
int
length
char
buf
char
IOBUFSIZE
int
len
boolean
CRLF
boolean
CROnly
boolean
lastWasCR
int
lineCount
while
len
read
buf
length
block
int
lastLine
for
forControl
int
i
i
len
i
block
switch
buf
i
case
if
lastWasCR
block
CROnly
CRLF
block
lastWasCR
append
buf
lastLine
i
lastLine
append
add
count
if
trackProgress
lineCount
PROGRESS_INTERVAL
setValue
count
lastLine
i
break
case
if
lastWasCR
block
CROnly
CRLF
lastWasCR
lastLine
i
block
CROnly
CRLF
append
buf
lastLine
i
lastLine
append
add
count
if
trackProgress
lineCount
PROGRESS_INTERVAL
setValue
count
lastLine
i
break
case
if
lastWasCR
block
CROnly
CRLF
lastWasCR
break
if
trackProgress
setValue
count
append
buf
lastLine
len
lastLine
setAbortable
String
lineSeparator
if
count
block
lineSeparator
getProperty
getProperty
if
CRLF
lineSeparator
if
CROnly
lineSeparator
lineSeparator
int
bufferLength
count
if
bufferLength
block
char
ch
array
bufferLength
if
ch
count
setBooleanProperty
TRAILING_EOL
if
bufferLength
getBooleanProperty
block
char
ch
array
bufferLength
if
ch
block
setBooleanProperty
TRAILING_EOL
count
setSize
getSize
add
count
if
insert
block
setProperty
LOAD_DATA
seg
setProperty
END_OFFSETS
endOffsets
setProperty
NEW_PATH
path
if
lineSeparator
setProperty
LINESEP
lineSeparator
return
seg
write
buffer
Buffer
out
OutputStream
String
encodingName
getStringProperty
ENCODING
Encoding
encoding
getEncoding
encodingName
Writer
writer
getTextWriter
BufferedOutputStream
out
getByteIOBufferSize
Segment
lineSegment
Segment
String
newline
getStringProperty
LINESEP
if
newline
newline
getProperty
int
bufferLineCount
getLineCount
setMaximum
bufferLineCount
PROGRESS_INTERVAL
setValue
int
i
while
i
bufferLineCount
block
getLineText
i
lineSegment
try
write
array
offset
count
if
i
bufferLineCount
getBooleanProperty
getBooleanProperty
TRAILING_EOL
block
write
newline
catchClause
e
String
message
getWriteEncodingErrorMessage
encodingName
encoding
lineSegment
i
IOException
wrapping
CharConversionException
message
initCause
e
throw
wrapping
if
i
PROGRESS_INTERVAL
setValue
i
PROGRESS_INTERVAL
flush
getWriteEncodingErrorMessage
String
encodingName
String
encoding
Encoding
line
Segment
lineIndex
int
String
args
encodingName
toString
lineIndex
try
int
charIndex
getFirstGuiltyCharacterIndex
encoding
line
if
charIndex
charIndex
count
block
char
c
array
offset
charIndex
args
toString
charIndex
args
c
toHexString
toUpperCase
c
catchClause
e
return
getProperty
args
getFirstGuiltyCharacterIndex
int
encoding
Encoding
line
Segment
if
count
block
return
if
count
block
return
Writer
tester
getTextWriter
OutputStream
write
b
int
for
forControl
int
i
i
count
i
block
try
write
array
offset
i
catchClause
e
return
i
return
WorkRequest
