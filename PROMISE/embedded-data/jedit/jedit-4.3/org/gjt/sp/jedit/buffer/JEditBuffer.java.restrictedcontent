JEditBuffer
String
LINESEP
String
ENCODING
JEditBuffer
props
Map
bufferListeners
Vector
Listener
undoListeners
Vector
BufferUndoListener
lock
ReentrantReadWriteLock
contentMgr
ContentManager
lineMgr
LineManager
positionMgr
PositionManager
undoMgr
UndoManager
integerArray
IntegerArray
propertyLock
Object
properties
HashMap
Object
PropValue
Set
Map
Entry
set
entrySet
for
Map
Entry
entry
set
block
put
getKey
PropValue
getValue
if
getProperty
ENCODING
put
ENCODING
PropValue
getProperty
if
getProperty
LINESEP
put
LINESEP
PropValue
getProperty
JEditBuffer
bufferListeners
Vector
Listener
undoListeners
Vector
BufferUndoListener
lock
ReentrantReadWriteLock
contentMgr
ContentManager
lineMgr
LineManager
positionMgr
PositionManager
undoMgr
UndoManager
integerArray
IntegerArray
propertyLock
Object
properties
HashMap
Object
PropValue
put
PropValue
put
PropValue
tokenMarker
TokenMarker
addRuleSet
ParserRuleSet
setTokenMarker
tokenMarker
loadText
if
getProperty
ENCODING
put
ENCODING
PropValue
getProperty
if
getProperty
LINESEP
put
LINESEP
PropValue
getProperty
setFoldHandler
DummyFoldHandler
isDirty
boolean
return
dirty
isLoading
boolean
return
loading
setLoading
loading
boolean
loading
loading
isPerformingIO
boolean
return
isLoading
io
setPerformingIO
io
boolean
io
io
isEditable
boolean
return
isReadOnly
isPerformingIO
isReadOnly
boolean
return
readOnly
readOnlyOverride
setReadOnly
readOnly
boolean
readOnlyOverride
readOnly
setDirty
d
boolean
boolean
editable
isEditable
if
d
block
if
editable
dirty
block
dirty
if
isUndoInProgress
block
resetClearDirty
readLock
readLock
lock
readUnlock
readLock
unlock
writeLock
writeLock
lock
writeUnlock
writeLock
unlock
getLength
int
return
getLength
getLineCount
int
return
getLineCount
getLineOfOffset
int
offset
int
try
readLock
if
offset
offset
getLength
throw
ArrayIndexOutOfBoundsException
offset
return
getLineOfOffset
offset
readUnlock
getLineStartOffset
int
line
int
try
readLock
if
line
line
getLineCount
throw
ArrayIndexOutOfBoundsException
line
if
line
return
return
getLineEndOffset
line
readUnlock
getLineEndOffset
int
line
int
try
readLock
if
line
line
getLineCount
throw
ArrayIndexOutOfBoundsException
line
return
getLineEndOffset
line
readUnlock
getLineLength
int
line
int
try
readLock
return
getLineEndOffset
line
getLineStartOffset
line
readUnlock
getPriorNonEmptyLine
int
lineIndex
int
int
returnValue
if
getIgnoreWhitespace
block
return
lineIndex
for
forControl
int
i
lineIndex
i
i
block
Segment
seg
Segment
getLineText
i
seg
if
count
returnValue
i
for
forControl
int
j
j
count
j
block
char
ch
array
offset
j
if
isWhitespace
ch
return
i
return
returnValue
getLineText
String
line
int
if
line
line
getLineCount
throw
ArrayIndexOutOfBoundsException
line
try
readLock
int
start
line
getLineEndOffset
line
int
end
getLineEndOffset
line
return
getText
start
end
start
readUnlock
getLineText
line
int
segment
Segment
if
line
line
getLineCount
throw
ArrayIndexOutOfBoundsException
line
try
readLock
int
start
line
getLineEndOffset
line
int
end
getLineEndOffset
line
getText
start
end
start
segment
readUnlock
getLineSegment
CharSequence
line
int
if
line
line
getLineCount
throw
ArrayIndexOutOfBoundsException
line
try
readLock
int
start
line
getLineEndOffset
line
int
end
getLineEndOffset
line
return
getSegment
start
end
start
readUnlock
getText
String
start
int
length
int
try
readLock
if
start
length
start
length
getLength
throw
ArrayIndexOutOfBoundsException
start
length
return
getText
start
length
readUnlock
getText
start
int
length
int
seg
Segment
try
readLock
if
start
length
start
length
getLength
throw
ArrayIndexOutOfBoundsException
start
length
getText
start
length
seg
readUnlock
getSegment
CharSequence
start
int
length
int
try
readLock
if
start
length
start
length
getLength
throw
ArrayIndexOutOfBoundsException
start
length
return
getSegment
start
length
readUnlock
insert
offset
int
str
String
if
str
return
int
len
length
if
len
return
if
isReadOnly
throw
RuntimeException
try
writeLock
if
offset
offset
getLength
throw
ArrayIndexOutOfBoundsException
offset
insert
offset
str
clear
for
forControl
int
i
i
len
i
block
if
charAt
i
add
i
if
undoInProgress
block
contentInserted
offset
len
str
dirty
contentInserted
offset
len
integerArray
writeUnlock
insert
offset
int
seg
Segment
if
count
return
if
isReadOnly
throw
RuntimeException
try
writeLock
if
offset
offset
getLength
throw
ArrayIndexOutOfBoundsException
offset
insert
offset
seg
clear
for
forControl
int
i
i
count
i
block
if
array
offset
i
add
i
if
undoInProgress
block
contentInserted
offset
count
toString
dirty
contentInserted
offset
count
integerArray
writeUnlock
remove
offset
int
length
int
if
length
return
if
isReadOnly
throw
RuntimeException
try
transaction
writeLock
if
offset
length
offset
length
getLength
throw
ArrayIndexOutOfBoundsException
offset
length
int
startLine
getLineOfOffset
offset
int
endLine
getLineOfOffset
offset
length
int
numLines
endLine
startLine
if
undoInProgress
loading
block
contentRemoved
offset
length
getText
offset
length
dirty
firePreContentRemoved
startLine
offset
numLines
length
remove
offset
length
contentRemoved
startLine
offset
numLines
length
contentRemoved
offset
length
fireContentRemoved
startLine
offset
numLines
length
if
undoInProgress
insideCompoundEdit
fireTransactionComplete
setDirty
transaction
writeUnlock
removeTrailingWhiteSpace
lines
int
try
beginCompoundEdit
for
forControl
int
i
i
length
i
block
int
pos
lineStart
lineEnd
tail
Segment
seg
Segment
getLineText
lines
i
seg
if
count
continue
lineStart
offset
lineEnd
offset
count
for
forControl
pos
lineEnd
pos
lineStart
pos
block
if
isWhitespace
array
pos
break
tail
lineEnd
pos
if
tail
continue
remove
getLineEndOffset
lines
i
tail
tail
endCompoundEdit
shiftIndentLeft
lines
int
int
tabSize
getTabSize
int
indentSize
getIndentSize
boolean
noTabs
getBooleanProperty
try
beginCompoundEdit
for
forControl
int
i
i
length
i
block
int
lineStart
getLineStartOffset
lines
i
CharSequence
line
getLineSegment
lines
i
int
whiteSpace
getLeadingWhiteSpace
line
if
whiteSpace
continue
int
whiteSpaceWidth
max
getLeadingWhiteSpaceWidth
line
tabSize
indentSize
insert
lineStart
whiteSpace
createWhiteSpace
whiteSpaceWidth
noTabs
tabSize
remove
lineStart
whiteSpace
endCompoundEdit
shiftIndentRight
lines
int
try
beginCompoundEdit
int
tabSize
getTabSize
int
indentSize
getIndentSize
boolean
noTabs
getBooleanProperty
for
forControl
int
i
i
length
i
block
int
lineStart
getLineStartOffset
lines
i
CharSequence
line
getLineSegment
lines
i
int
whiteSpace
getLeadingWhiteSpace
line
int
whiteSpaceWidth
getLeadingWhiteSpaceWidth
line
tabSize
indentSize
insert
lineStart
whiteSpace
createWhiteSpace
whiteSpaceWidth
noTabs
tabSize
remove
lineStart
whiteSpace
endCompoundEdit
indentLines
start
int
end
int
try
beginCompoundEdit
for
forControl
int
i
start
i
end
i
indentLine
i
endCompoundEdit
indentLines
lines
int
try
beginCompoundEdit
for
forControl
int
i
i
length
i
indentLine
lines
i
endCompoundEdit
indentLine
boolean
lineIndex
int
canIncreaseIndent
boolean
canDecreaseIndent
boolean
return
indentLine
lineIndex
canDecreaseIndent
indentLine
boolean
lineIndex
int
canDecreaseIndent
boolean
int
whitespaceChars
int
int
currentIndent
getCurrentIndentForLine
lineIndex
whitespaceChars
int
prevLineIndex
getPriorNonEmptyLine
lineIndex
int
prevLineIndent
prevLineIndex
getLeadingWhiteSpaceWidth
getLineSegment
prevLineIndex
getTabSize
int
idealIndent
getIdealIndentForLine
lineIndex
prevLineIndex
prevLineIndent
if
idealIndent
idealIndent
currentIndent
canDecreaseIndent
idealIndent
currentIndent
return
try
beginCompoundEdit
int
start
getLineStartOffset
lineIndex
remove
start
whitespaceChars
String
prevIndentString
prevLineIndex
getIndentString
getLineText
prevLineIndex
String
indentString
if
prevIndentString
block
indentString
createWhiteSpace
idealIndent
getBooleanProperty
getTabSize
if
idealIndent
prevLineIndent
indentString
prevIndentString
if
idealIndent
prevLineIndent
indentString
truncateWhiteSpace
idealIndent
getTabSize
prevIndentString
indentString
prevIndentString
createWhiteSpace
idealIndent
prevLineIndent
getBooleanProperty
getTabSize
prevLineIndent
insert
start
indentString
endCompoundEdit
return
getCurrentIndentForLine
int
lineIndex
int
whitespaceChars
int
Segment
seg
Segment
getLineText
lineIndex
seg
int
tabSize
getTabSize
int
currentIndent
for
forControl
int
i
i
count
i
block
char
c
array
offset
i
switch
c
case
currentIndent
if
whitespaceChars
whitespaceChars
break
case
currentIndent
tabSize
currentIndent
tabSize
if
whitespaceChars
whitespaceChars
break
case
break
return
currentIndent
getIdealIndentForLine
int
lineIndex
int
int
prevLineIndex
getPriorNonEmptyLine
lineIndex
int
oldIndent
prevLineIndex
getLeadingWhiteSpaceWidth
getLineSegment
prevLineIndex
getTabSize
return
getIdealIndentForLine
lineIndex
prevLineIndex
oldIndent
getIdealIndentForLine
int
lineIndex
int
prevLineIndex
int
oldIndent
int
int
prevPrevLineIndex
prevLineIndex
getPriorNonEmptyLine
prevLineIndex
int
newIndent
oldIndent
List
IndentRule
indentRules
getIndentRules
lineIndex
List
IndentAction
actions
LinkedList
IndentAction
for
forControl
int
i
i
size
i
block
IndentRule
rule
get
i
apply
lineIndex
prevLineIndex
prevPrevLineIndex
actions
for
IndentAction
action
actions
block
newIndent
calculateIndent
lineIndex
oldIndent
newIndent
if
keepChecking
break
if
newIndent
newIndent
return
newIndent
getVirtualWidth
int
line
int
column
int
try
readLock
int
start
getLineStartOffset
line
Segment
seg
Segment
getText
start
column
seg
return
getVirtualWidth
seg
getTabSize
readUnlock
getOffsetOfVirtualColumn
int
line
int
column
int
totalVirtualWidth
int
try
readLock
Segment
seg
Segment
getLineText
line
seg
return
getOffsetOfVirtualColumn
seg
getTabSize
column
totalVirtualWidth
readUnlock
insertAtColumn
line
int
col
int
str
String
try
writeLock
int
total
int
int
offset
getOffsetOfVirtualColumn
line
col
total
if
offset
block
offset
getLineEndOffset
line
str
createWhiteSpace
col
total
str
offset
getLineStartOffset
line
insert
offset
str
writeUnlock
insertIndented
int
offset
int
text
String
try
beginCompoundEdit
int
firstLine
getLineOfOffset
offset
CharSequence
lineText
getLineSegment
firstLine
int
leadingIndent
getLeadingWhiteSpaceWidth
lineText
getTabSize
String
whiteSpace
createWhiteSpace
leadingIndent
getBooleanProperty
getTabSize
insert
offset
text
int
lastLine
getLineOfOffset
offset
length
for
forControl
int
i
firstLine
i
lastLine
i
block
insert
getLineStartOffset
i
whiteSpace
return
length
endCompoundEdit
isElectricKey
boolean
ch
char
return
isElectricKey
ch
isElectricKey
boolean
ch
char
line
int
TokenMarker
LineContext
ctx
getLineContext
line
Mode
mode
getMode
getModeName
if
mode
return
return
isElectricKey
ch
markTokens
lineIndex
int
tokenHandler
TokenHandler
Segment
seg
Segment
if
lineIndex
lineIndex
getLineCount
throw
ArrayIndexOutOfBoundsException
lineIndex
int
firstInvalidLineContext
getFirstInvalidLineContext
int
start
if
textMode
firstInvalidLineContext
block
start
lineIndex
block
start
min
firstInvalidLineContext
lineIndex
if
TOKEN_MARKER_DEBUG
log
DEBUG
start
lineIndex
TokenMarker
LineContext
oldContext
TokenMarker
LineContext
context
for
forControl
int
i
start
i
lineIndex
i
block
getLineText
i
seg
oldContext
getLineContext
i
TokenMarker
LineContext
prevContext
i
textMode
getLineContext
i
context
markTokens
prevContext
i
lineIndex
tokenHandler
INSTANCE
seg
setLineContext
i
context
int
lineCount
getLineCount
if
lineCount
lineIndex
setFirstInvalidLineContext
if
oldContext
context
setFirstInvalidLineContext
lineIndex
if
firstInvalidLineContext
block
setFirstInvalidLineContext
max
firstInvalidLineContext
lineIndex
getTokenMarker
TokenMarker
return
tokenMarker
setTokenMarker
tokenMarker
TokenMarker
TokenMarker
oldTokenMarker
tokenMarker
tokenMarker
tokenMarker
if
oldTokenMarker
tokenMarker
oldTokenMarker
block
setFirstInvalidLineContext
createPosition
Position
offset
int
try
readLock
if
offset
offset
getLength
throw
ArrayIndexOutOfBoundsException
offset
return
createPosition
offset
readUnlock
propertiesChanged
String
folding
getStringProperty
FoldHandler
handler
getFoldHandler
folding
if
handler
block
setFoldHandler
handler
block
if
folding
log
WARNING
folding
setFoldHandler
DummyFoldHandler
getTabSize
int
int
tabSize
getIntegerProperty
if
tabSize
return
return
tabSize
getIndentSize
int
int
indentSize
getIntegerProperty
if
indentSize
return
return
indentSize
getProperty
Object
name
Object
synchronized
propertyLock
PropValue
o
get
name
if
o
return
value
if
name
String
return
Object
retVal
getDefaultProperty
String
name
if
retVal
return
block
put
name
PropValue
retVal
return
retVal
getDefaultProperty
Object
key
String
return
setProperty
name
String
value
Object
if
value
remove
name
block
PropValue
test
get
name
if
test
put
name
PropValue
value
if
equals
value
block
block
value
value
defaultValue
setDefaultProperty
name
String
value
Object
put
name
PropValue
value
unsetProperty
name
String
remove
name
resetCachedProperties
Iterator
PropValue
iter
values
iterator
while
hasNext
block
PropValue
value
next
if
defaultValue
remove
getStringProperty
String
name
String
Object
obj
getProperty
name
if
obj
return
toString
return
setStringProperty
name
String
value
String
setProperty
name
value
getBooleanProperty
boolean
name
String
return
getBooleanProperty
name
getBooleanProperty
boolean
name
String
def
boolean
Object
obj
getProperty
name
return
getBoolean
obj
def
setBooleanProperty
name
String
value
boolean
setProperty
name
value
TRUE
FALSE
getIntegerProperty
int
name
String
defaultValue
int
boolean
defaultValueFlag
Object
obj
PropValue
value
get
name
if
value
block
obj
value
defaultValueFlag
defaultValue
block
obj
getProperty
name
defaultValueFlag
if
obj
return
defaultValue
if
obj
Number
return
Number
obj
block
try
int
returnValue
parseInt
toString
trim
put
name
PropValue
returnValue
defaultValueFlag
return
returnValue
catchClause
e
return
defaultValue
setIntegerProperty
name
String
value
int
setProperty
name
value
getPatternProperty
Pattern
name
String
flags
int
synchronized
propertyLock
boolean
defaultValueFlag
Object
obj
PropValue
value
get
name
if
value
block
obj
value
defaultValueFlag
defaultValue
block
obj
getProperty
name
defaultValueFlag
if
obj
return
if
obj
Pattern
return
Pattern
obj
block
Pattern
re
compile
toString
flags
put
name
PropValue
re
defaultValueFlag
return
re
getRuleSetAtOffset
ParserRuleSet
offset
int
int
line
getLineOfOffset
offset
offset
getLineStartOffset
line
if
offset
offset
DefaultTokenHandler
tokens
DefaultTokenHandler
markTokens
line
tokens
Token
token
getTokenAtOffset
getTokens
offset
return
rules
getKeywordMapAtOffset
KeywordMap
offset
int
return
getRuleSetAtOffset
getKeywords
offset
getContextSensitiveProperty
String
offset
int
name
String
ParserRuleSet
rules
getRuleSetAtOffset
offset
Object
value
Map
String
String
rulesetProps
getProperties
if
rulesetProps
value
get
name
if
value
return
return
valueOf
value
getMode
Mode
return
mode
setMode
mode
String
setMode
getMode
mode
setMode
mode
Mode
if
mode
throw
NullPointerException
mode
mode
textMode
equals
getName
setTokenMarker
getTokenMarker
resetCachedProperties
propertiesChanged
isFoldStart
boolean
line
int
return
line
getLineCount
getFoldLevel
line
getFoldLevel
line
isFoldEnd
boolean
line
int
return
line
getLineCount
getFoldLevel
line
getFoldLevel
line
invalidateCachedFoldLevels
setFirstInvalidFoldLevel
fireFoldLevelChanged
getLineCount
getFoldLevel
int
line
int
if
line
line
getLineCount
throw
ArrayIndexOutOfBoundsException
line
if
foldHandler
DummyFoldHandler
return
int
firstInvalidFoldLevel
getFirstInvalidFoldLevel
if
firstInvalidFoldLevel
line
firstInvalidFoldLevel
block
return
getFoldLevel
line
block
if
FOLD_DEBUG
log
DEBUG
firstInvalidFoldLevel
line
int
newFoldLevel
boolean
changed
int
firstUpdatedFoldLevel
firstInvalidFoldLevel
for
forControl
int
i
firstInvalidFoldLevel
i
line
i
block
Segment
seg
Segment
newFoldLevel
getFoldLevel
i
seg
if
newFoldLevel
getFoldLevel
i
block
if
FOLD_DEBUG
log
DEBUG
i
changed
if
i
firstInvalidFoldLevel
block
List
Integer
precedingFoldLevels
getPrecedingFoldLevels
i
seg
newFoldLevel
if
precedingFoldLevels
block
int
j
i
for
Integer
foldLevel
precedingFoldLevels
block
j
setFoldLevel
j
intValue
if
j
firstUpdatedFoldLevel
firstUpdatedFoldLevel
j
setFoldLevel
i
newFoldLevel
if
line
getLineCount
setFirstInvalidFoldLevel
setFirstInvalidFoldLevel
line
if
changed
block
if
FOLD_DEBUG
log
DEBUG
firstUpdatedFoldLevel
line
fireFoldLevelChanged
firstUpdatedFoldLevel
line
return
newFoldLevel
getFoldAtLine
int
line
int
int
start
end
if
isFoldStart
line
block
start
line
int
foldLevel
getFoldLevel
line
line
while
getFoldLevel
line
foldLevel
block
line
if
line
getLineCount
break
end
line
block
start
line
int
foldLevel
getFoldLevel
line
while
getFoldLevel
start
foldLevel
block
if
start
break
start
end
line
while
getFoldLevel
end
foldLevel
block
end
if
end
getLineCount
break
end
while
getLineLength
end
end
start
end
return
int
start
end
getFoldHandler
FoldHandler
return
foldHandler
setFoldHandler
foldHandler
FoldHandler
FoldHandler
oldFoldHandler
foldHandler
if
equals
oldFoldHandler
return
foldHandler
foldHandler
setFirstInvalidFoldLevel
fireFoldHandlerChanged
undo
textArea
TextArea
if
undoMgr
return
if
isEditable
block
getToolkit
beep
return
try
writeLock
undoInProgress
fireBeginUndo
int
caret
undo
if
caret
getToolkit
beep
setCaretPosition
caret
fireEndUndo
fireTransactionComplete
undoInProgress
writeUnlock
redo
textArea
TextArea
if
undoMgr
return
if
isEditable
block
getDefaultToolkit
beep
return
try
writeLock
undoInProgress
fireBeginRedo
int
caret
redo
if
caret
getToolkit
beep
setCaretPosition
caret
fireEndRedo
fireTransactionComplete
undoInProgress
writeUnlock
isTransactionInProgress
boolean
return
transaction
undoInProgress
insideCompoundEdit
beginCompoundEdit
try
writeLock
beginCompoundEdit
writeUnlock
endCompoundEdit
try
writeLock
endCompoundEdit
if
insideCompoundEdit
fireTransactionComplete
writeUnlock
insideCompoundEdit
boolean
return
insideCompoundEdit
isUndoInProgress
boolean
return
undoInProgress
getUndoId
Object
return
getUndoId
int
NORMAL_PRIORITY
int
HIGH_PRIORITY
Listener
BufferListener
listener
int
priority
Listener
listener
BufferListener
priority
int
listener
listener
priority
priority
addBufferListener
listener
BufferListener
priority
int
Listener
l
Listener
listener
priority
for
forControl
int
i
i
size
i
block
Listener
_l
get
i
if
priority
priority
block
add
i
l
return
add
l
addBufferListener
listener
BufferListener
addBufferListener
listener
NORMAL_PRIORITY
removeBufferListener
listener
BufferListener
for
forControl
int
i
i
size
i
block
if
get
listener
i
listener
block
remove
i
return
getBufferListeners
BufferListener
BufferListener
returnValue
BufferListener
size
for
forControl
int
i
i
length
i
block
returnValue
i
get
listener
i
return
returnValue
addBufferUndoListener
listener
BufferUndoListener
add
listener
removeBufferUndoListener
listener
BufferUndoListener
remove
listener
setUndoLimit
limit
int
if
undoMgr
setLimit
limit
canUndo
boolean
if
undoMgr
return
return
canUndo
canRedo
boolean
if
undoMgr
return
return
canRedo
Mode
mode
boolean
textMode
UndoManager
undoMgr
fireFoldLevelChanged
start
int
end
int
for
forControl
int
i
i
size
i
block
BufferListener
listener
getListener
i
try
foldLevelChanged
start
end
catchClause
t
log
ERROR
listener
log
ERROR
t
fireContentInserted
startLine
int
offset
int
numLines
int
length
int
for
forControl
int
i
i
size
i
block
BufferListener
listener
getListener
i
try
contentInserted
startLine
offset
numLines
length
catchClause
t
log
ERROR
listener
log
ERROR
t
fireContentRemoved
startLine
int
offset
int
numLines
int
length
int
for
forControl
int
i
i
size
i
block
BufferListener
listener
getListener
i
try
contentRemoved
startLine
offset
numLines
length
catchClause
t
log
ERROR
listener
log
ERROR
t
firePreContentInserted
startLine
int
offset
int
numLines
int
length
int
for
forControl
int
i
i
size
i
block
BufferListener
listener
getListener
i
try
preContentInserted
startLine
offset
numLines
length
catchClause
t
log
ERROR
listener
log
ERROR
t
firePreContentRemoved
startLine
int
offset
int
numLines
int
length
int
for
forControl
int
i
i
size
i
block
BufferListener
listener
getListener
i
try
preContentRemoved
startLine
offset
numLines
length
catchClause
t
log
ERROR
listener
log
ERROR
t
fireBeginUndo
for
BufferUndoListener
listener
undoListeners
block
try
beginUndo
catchClause
t
log
ERROR
listener
log
ERROR
t
fireEndUndo
for
BufferUndoListener
listener
undoListeners
block
try
endUndo
catchClause
t
log
ERROR
listener
log
ERROR
t
fireBeginRedo
for
BufferUndoListener
listener
undoListeners
block
try
beginRedo
catchClause
t
log
ERROR
listener
log
ERROR
t
fireEndRedo
for
BufferUndoListener
listener
undoListeners
block
try
endRedo
catchClause
t
log
ERROR
listener
log
ERROR
t
fireTransactionComplete
for
forControl
int
i
i
size
i
block
BufferListener
listener
getListener
i
try
transactionComplete
catchClause
t
log
ERROR
listener
log
ERROR
t
fireFoldHandlerChanged
for
forControl
int
i
i
size
i
block
BufferListener
listener
getListener
i
try
foldHandlerChanged
catchClause
t
log
ERROR
listener
log
ERROR
t
fireBufferLoaded
for
forControl
int
i
i
size
i
block
BufferListener
listener
getListener
i
try
bufferLoaded
catchClause
t
log
ERROR
listener
log
ERROR
t
isFileReadOnly
boolean
return
readOnly
setFileReadOnly
readOnly
boolean
readOnly
readOnly
loadText
seg
Segment
endOffsets
IntegerArray
if
seg
seg
Segment
char
if
endOffsets
block
endOffsets
IntegerArray
add
try
writeLock
int
length
getLength
firePreContentRemoved
getLineCount
length
remove
length
contentRemoved
getLineCount
length
contentRemoved
length
fireContentRemoved
getLineCount
length
firePreContentInserted
getSize
count
_setContent
array
count
_contentInserted
endOffsets
contentInserted
count
fireContentInserted
getSize
count
writeUnlock
invalidateFoldLevels
setFirstInvalidFoldLevel
parseBufferLocalProperties
int
lastLine
min
getLineCount
parseBufferLocalProperties
getSegment
getLineEndOffset
lastLine
int
firstLine
max
lastLine
getLineCount
if
firstLine
getLineCount
block
int
length
getLineEndOffset
getLineCount
getLineStartOffset
firstLine
parseBufferLocalProperties
getSegment
getLineStartOffset
firstLine
length
PropValue
PropValue
value
Object
defaultValue
boolean
if
value
throw
NullPointerException
value
value
defaultValue
defaultValue
Object
value
boolean
defaultValue
toString
String
return
toString
List
Listener
bufferListeners
List
BufferUndoListener
undoListeners
ReentrantReadWriteLock
lock
ContentManager
contentMgr
LineManager
lineMgr
PositionManager
positionMgr
FoldHandler
foldHandler
IntegerArray
integerArray
TokenMarker
tokenMarker
boolean
undoInProgress
boolean
dirty
boolean
readOnly
boolean
readOnlyOverride
boolean
transaction
boolean
loading
boolean
io
Map
Object
PropValue
properties
Object
propertyLock
getListener
BufferListener
index
int
return
get
listener
index
contentInserted
offset
int
length
int
endOffsets
IntegerArray
try
transaction
int
startLine
getLineOfOffset
offset
int
numLines
getSize
if
loading
block
firePreContentInserted
startLine
offset
numLines
length
contentInserted
startLine
offset
numLines
length
endOffsets
contentInserted
offset
length
setDirty
if
loading
block
fireContentInserted
startLine
offset
numLines
length
if
undoInProgress
insideCompoundEdit
fireTransactionComplete
transaction
parseBufferLocalProperties
prop
CharSequence
StringBuilder
buf
StringBuilder
String
name
boolean
escape
for
forControl
int
i
i
length
i
block
char
c
charAt
i
switch
c
case
if
escape
block
escape
append
break
if
name
block
put
name
PropValue
toString
name
setLength
break
case
if
escape
block
escape
append
break
name
toString
setLength
break
case
if
escape
append
escape
escape
break
case
if
escape
block
append
escape
break
case
if
escape
block
append
escape
break
case
if
escape
block
append
escape
break
case
append
c
break
getIndentRules
List
IndentRule
line
int
String
modeName
TokenMarker
LineContext
ctx
getLineContext
line
if
ctx
rules
modeName
getModeName
if
modeName
modeName
getMainRuleSet
getModeName
return
getMode
getIndentRules
modeName
