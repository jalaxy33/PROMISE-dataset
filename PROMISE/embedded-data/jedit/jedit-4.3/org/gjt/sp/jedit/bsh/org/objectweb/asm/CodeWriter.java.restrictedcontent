CodeWriter
boolean
CHECK
CodeWriter
next
ClassWriter
cw
Item
name
Item
desc
int
access
int
maxStack
int
maxLocals
ByteVector
code
ByteVector
int
catchCount
ByteVector
catchTable
int
exceptionCount
int
exceptions
int
localVarCount
ByteVector
localVar
int
lineNumberCount
ByteVector
lineNumber
boolean
resize
boolean
computeMaxs
int
stackSize
int
maxStackSize
Label
currentBlock
Label
blockStack
int
SIZE
Edge
head
Edge
tail
Edge
pool
int
i
int
b
int
String
s
for
forControl
i
i
length
i
block
b
i
charAt
i
SIZE
b
CodeWriter
cw
ClassWriter
computeMaxs
boolean
if
firstMethod
block
firstMethod
lastMethod
block
next
lastMethod
cw
cw
computeMaxs
computeMaxs
if
computeMaxs
block
currentBlock
Label
pushed
blockStack
currentBlock
init
access
int
name
String
desc
String
exceptions
String
access
access
name
newUTF8
name
desc
newUTF8
desc
if
exceptions
length
block
exceptionCount
length
exceptions
int
exceptionCount
for
forControl
int
i
i
exceptionCount
i
block
exceptions
i
newClass
index
exceptions
i
if
computeMaxs
block
int
size
getArgumentsAndReturnSizes
desc
if
access
ACC_STATIC
block
size
if
size
maxLocals
block
maxLocals
size
visitInsn
opcode
int
if
computeMaxs
block
int
size
stackSize
SIZE
opcode
if
size
maxStackSize
block
maxStackSize
size
stackSize
size
if
opcode
IRETURN
opcode
RETURN
opcode
ATHROW
block
if
currentBlock
block
maxStackSize
maxStackSize
currentBlock
put1
opcode
visitIntInsn
opcode
int
operand
int
if
computeMaxs
opcode
NEWARRAY
block
int
size
stackSize
if
size
maxStackSize
block
maxStackSize
size
stackSize
size
if
opcode
SIPUSH
block
put12
opcode
operand
block
put11
opcode
operand
visitVarInsn
opcode
int
var
int
if
computeMaxs
block
if
opcode
RET
block
if
currentBlock
block
maxStackSize
maxStackSize
currentBlock
block
int
size
stackSize
SIZE
opcode
if
size
maxStackSize
block
maxStackSize
size
stackSize
size
int
n
if
opcode
LLOAD
opcode
DLOAD
opcode
LSTORE
opcode
DSTORE
block
n
var
block
n
var
if
n
maxLocals
block
maxLocals
n
if
var
opcode
RET
block
int
opt
if
opcode
ISTORE
block
opt
opcode
ILOAD
var
block
opt
opcode
ISTORE
var
put1
opt
if
var
block
put1
put12
opcode
var
block
put11
opcode
var
visitTypeInsn
opcode
int
desc
String
if
computeMaxs
opcode
NEW
block
int
size
stackSize
if
size
maxStackSize
block
maxStackSize
size
stackSize
size
put12
opcode
newClass
index
desc
visitFieldInsn
opcode
int
owner
String
name
String
desc
String
if
computeMaxs
block
int
size
char
c
charAt
switch
opcode
case
GETSTATIC
size
stackSize
c
c
break
case
PUTSTATIC
size
stackSize
c
c
break
case
GETFIELD
size
stackSize
c
c
break
case
size
stackSize
c
c
break
if
size
maxStackSize
block
maxStackSize
size
stackSize
size
put12
opcode
newField
index
owner
name
desc
visitMethodInsn
opcode
int
owner
String
name
String
desc
String
Item
i
if
opcode
INVOKEINTERFACE
block
i
newItfMethod
owner
name
desc
block
i
newMethod
owner
name
desc
int
argSize
intVal
if
computeMaxs
block
if
argSize
block
argSize
getArgumentsAndReturnSizes
desc
intVal
argSize
int
size
if
opcode
INVOKESTATIC
block
size
stackSize
argSize
argSize
block
size
stackSize
argSize
argSize
if
size
maxStackSize
block
maxStackSize
size
stackSize
size
if
opcode
INVOKEINTERFACE
block
if
computeMaxs
block
if
argSize
block
argSize
getArgumentsAndReturnSizes
desc
intVal
argSize
put12
put11
argSize
INVOKEINTERFACE
index
block
put12
opcode
index
visitJumpInsn
opcode
int
label
Label
if
CHECK
block
if
owner
block
owner
if
owner
block
throw
IllegalArgumentException
if
computeMaxs
block
if
opcode
GOTO
block
if
currentBlock
block
maxStackSize
maxStackSize
addSuccessor
stackSize
label
currentBlock
if
opcode
JSR
block
if
currentBlock
block
addSuccessor
stackSize
label
block
stackSize
SIZE
opcode
if
currentBlock
block
addSuccessor
stackSize
label
if
resolved
position
length
MIN_VALUE
block
if
opcode
GOTO
block
put1
if
opcode
JSR
block
put1
block
put1
opcode
opcode
opcode
put2
put1
put
code
length
block
put1
opcode
put
code
length
visitLabel
label
Label
if
CHECK
block
if
owner
block
owner
if
owner
block
throw
IllegalArgumentException
if
computeMaxs
block
if
currentBlock
block
maxStackSize
maxStackSize
addSuccessor
stackSize
label
currentBlock
label
stackSize
maxStackSize
resize
resolve
length
data
visitLdcInsn
cst
Object
Item
i
newCst
cst
if
computeMaxs
block
int
size
if
type
LONG
type
DOUBLE
block
size
stackSize
block
size
stackSize
if
size
maxStackSize
block
maxStackSize
size
stackSize
size
int
index
index
if
type
LONG
type
DOUBLE
block
put12
index
if
index
block
put12
index
block
put11
LDC
index
visitIincInsn
var
int
increment
int
if
computeMaxs
block
int
n
var
if
n
maxLocals
block
maxLocals
n
if
var
increment
increment
block
put1
put12
IINC
var
put2
increment
block
put1
put11
var
increment
IINC
visitTableSwitchInsn
min
int
max
int
dflt
Label
labels
Label
if
computeMaxs
block
stackSize
if
currentBlock
block
maxStackSize
maxStackSize
addSuccessor
stackSize
dflt
for
forControl
int
i
i
length
i
block
addSuccessor
stackSize
labels
i
currentBlock
int
source
length
put1
TABLESWITCH
while
length
block
put1
put
code
source
put4
put4
max
min
for
forControl
int
i
i
length
i
block
labels
i
put
code
source
visitLookupSwitchInsn
dflt
Label
keys
int
labels
Label
if
computeMaxs
block
stackSize
if
currentBlock
block
maxStackSize
maxStackSize
addSuccessor
stackSize
dflt
for
forControl
int
i
i
length
i
block
addSuccessor
stackSize
labels
i
currentBlock
int
source
length
put1
LOOKUPSWITCH
while
length
block
put1
put
code
source
put4
length
for
forControl
int
i
i
length
i
block
put4
keys
i
labels
i
put
code
source
visitMultiANewArrayInsn
desc
String
dims
int
if
computeMaxs
block
stackSize
dims
Item
classItem
newClass
desc
put12
put1
dims
MULTIANEWARRAY
index
visitTryCatchBlock
start
Label
end
Label
handler
Label
type
String
if
CHECK
block
if
owner
owner
owner
block
throw
IllegalArgumentException
if
resolved
resolved
resolved
block
throw
IllegalArgumentException
if
computeMaxs
block
if
pushed
block
beginStackSize
pushed
next
blockStack
blockStack
handler
catchCount
if
catchTable
block
catchTable
ByteVector
put2
position
put2
position
put2
position
put2
type
newClass
index
type
visitMaxs
maxStack
int
maxLocals
int
if
computeMaxs
block
int
max
Label
stack
blockStack
while
stack
block
Label
l
stack
stack
next
int
start
beginStackSize
int
blockMax
start
maxStackSize
if
blockMax
max
block
max
blockMax
Edge
b
successors
while
b
block
l
successor
if
pushed
block
beginStackSize
start
stackSize
pushed
next
stack
stack
l
b
next
maxStack
max
synchronized
SIZE
if
tail
block
poolNext
pool
pool
head
block
maxStack
maxStack
maxLocals
maxLocals
visitLocalVariable
name
String
desc
String
start
Label
end
Label
index
int
if
CHECK
block
if
owner
resolved
block
throw
IllegalArgumentException
if
owner
resolved
block
throw
IllegalArgumentException
if
localVar
block
newUTF8
localVar
ByteVector
localVarCount
put2
position
put2
position
position
put2
newUTF8
index
name
put2
newUTF8
index
desc
put2
index
visitLineNumber
line
int
start
Label
if
CHECK
block
if
owner
resolved
block
throw
IllegalArgumentException
if
lineNumber
block
newUTF8
lineNumber
ByteVector
lineNumberCount
put2
position
put2
line
getArgumentsAndReturnSizes
int
desc
String
int
n
int
c
while
block
char
car
charAt
c
if
car
block
car
charAt
c
return
n
car
car
car
if
car
block
while
charAt
c
block
n
if
car
block
while
car
charAt
c
block
c
if
car
car
block
n
if
car
car
block
n
block
n
addSuccessor
stackSize
int
successor
Label
Edge
b
synchronized
SIZE
if
pool
block
b
Edge
block
b
pool
pool
poolNext
if
tail
block
tail
b
poolNext
head
head
b
stackSize
stackSize
successor
successor
next
successors
successors
b
getSize
int
if
resize
block
resizeInstructions
int
int
int
size
if
length
block
newUTF8
size
length
catchCount
if
localVar
block
size
length
if
lineNumber
block
size
length
if
exceptionCount
block
newUTF8
size
exceptionCount
if
access
ACC_SYNTHETIC
block
newUTF8
size
if
access
ACC_DEPRECATED
block
newUTF8
size
return
size
put
out
ByteVector
put2
put2
index
put2
index
access
int
attributeCount
if
length
block
attributeCount
if
exceptionCount
block
attributeCount
if
access
ACC_SYNTHETIC
block
attributeCount
if
access
ACC_DEPRECATED
block
attributeCount
put2
attributeCount
if
length
block
int
size
length
catchCount
if
localVar
block
size
length
if
lineNumber
block
size
length
put2
put4
size
newUTF8
index
put2
put2
maxLocals
maxStack
put4
putByteArray
data
length
length
put2
catchCount
if
catchCount
block
putByteArray
data
length
attributeCount
if
localVar
block
attributeCount
if
lineNumber
block
attributeCount
put2
attributeCount
if
localVar
block
put2
newUTF8
index
put4
put2
localVarCount
length
putByteArray
data
length
if
lineNumber
block
put2
newUTF8
index
put4
put2
lineNumberCount
length
putByteArray
data
length
if
exceptionCount
block
put2
put4
exceptionCount
newUTF8
index
put2
exceptionCount
for
forControl
int
i
i
exceptionCount
i
block
put2
exceptions
i
if
access
ACC_SYNTHETIC
block
put2
put4
newUTF8
index
if
access
ACC_DEPRECATED
block
put2
put4
newUTF8
index
resizeInstructions
int
indexes
int
sizes
int
len
int
byte
b
data
int
u
v
label
int
i
j
int
allIndexes
int
len
int
allSizes
int
len
boolean
resize
int
newOffset
arraycopy
indexes
allIndexes
len
arraycopy
sizes
allSizes
len
resize
boolean
length
int
state
do
state
block
if
state
block
state
u
while
u
length
block
int
opcode
b
u
int
insert
switch
TYPE
opcode
case
NOARG_INSN
IMPLVAR_INSN
u
break
case
LABEL_INSN
if
opcode
block
opcode
opcode
opcode
opcode
label
u
readUnsignedShort
b
u
block
label
u
readShort
b
u
newOffset
getNewOffset
allIndexes
allSizes
u
label
if
newOffset
MIN_VALUE
newOffset
MAX_VALUE
block
if
resize
u
block
if
opcode
GOTO
opcode
JSR
block
insert
block
insert
resize
u
u
break
case
LABELW_INSN
u
break
case
TABL_INSN
if
state
block
newOffset
getNewOffset
allIndexes
allSizes
u
insert
newOffset
if
resize
u
block
insert
u
resize
u
u
u
u
u
readInt
b
u
readInt
b
u
break
case
LOOK_INSN
if
state
block
newOffset
getNewOffset
allIndexes
allSizes
u
insert
newOffset
if
resize
u
block
insert
u
resize
u
u
u
u
u
readInt
b
u
break
case
WIDE_INSN
opcode
b
u
if
opcode
IINC
block
u
block
u
break
case
VAR_INSN
SBYTE_INSN
LDC_INSN
u
break
case
SHORT_INSN
LDCW_INSN
FIELDORMETH_INSN
TYPE_INSN
IINC_INSN
u
break
case
ITFMETH_INSN
u
break
case
u
break
if
insert
block
int
newIndexes
int
length
int
newSizes
int
length
arraycopy
allIndexes
newIndexes
length
arraycopy
allSizes
newSizes
length
newIndexes
length
u
newSizes
length
insert
allIndexes
newIndexes
allSizes
newSizes
if
insert
block
state
if
state
block
state
ByteVector
newCode
ByteVector
length
u
while
u
length
block
for
forControl
i
length
i
i
block
if
allIndexes
i
u
block
if
i
len
block
if
sizes
i
block
putByteArray
sizes
i
block
length
sizes
i
indexes
i
length
int
opcode
b
u
switch
TYPE
opcode
case
NOARG_INSN
IMPLVAR_INSN
put1
opcode
u
break
case
LABEL_INSN
if
opcode
block
opcode
opcode
opcode
opcode
label
u
readUnsignedShort
b
u
block
label
u
readShort
b
u
newOffset
getNewOffset
allIndexes
allSizes
u
label
if
newOffset
MIN_VALUE
newOffset
MAX_VALUE
block
if
opcode
GOTO
block
put1
if
opcode
JSR
block
put1
block
put1
opcode
opcode
opcode
put2
put1
newOffset
put4
newOffset
block
put1
opcode
put2
newOffset
u
break
case
LABELW_INSN
label
u
readInt
b
u
newOffset
getNewOffset
allIndexes
allSizes
u
label
put1
opcode
put4
newOffset
u
break
case
TABL_INSN
v
u
u
u
v
int
source
length
put1
TABLESWITCH
while
length
block
put1
label
v
readInt
b
u
u
newOffset
getNewOffset
allIndexes
allSizes
v
label
put4
newOffset
j
readInt
b
u
u
put4
j
j
readInt
b
u
j
u
put4
readInt
b
u
for
forControl
j
j
block
label
v
readInt
b
u
u
newOffset
getNewOffset
allIndexes
allSizes
v
label
put4
newOffset
break
case
LOOK_INSN
v
u
u
u
v
source
length
put1
LOOKUPSWITCH
while
length
block
put1
label
v
readInt
b
u
u
newOffset
getNewOffset
allIndexes
allSizes
v
label
put4
newOffset
j
readInt
b
u
u
put4
j
for
forControl
j
j
block
put4
readInt
b
u
u
label
v
readInt
b
u
u
newOffset
getNewOffset
allIndexes
allSizes
v
label
put4
newOffset
break
case
WIDE_INSN
opcode
b
u
if
opcode
IINC
block
putByteArray
b
u
u
block
putByteArray
b
u
u
break
case
VAR_INSN
SBYTE_INSN
LDC_INSN
putByteArray
b
u
u
break
case
SHORT_INSN
LDCW_INSN
FIELDORMETH_INSN
TYPE_INSN
IINC_INSN
putByteArray
b
u
u
break
case
ITFMETH_INSN
putByteArray
b
u
u
break
case
putByteArray
b
u
u
break
if
catchTable
block
b
data
u
while
u
length
block
writeShort
b
u
getNewOffset
allIndexes
allSizes
readUnsignedShort
b
u
writeShort
b
u
getNewOffset
allIndexes
allSizes
readUnsignedShort
b
u
writeShort
b
u
getNewOffset
allIndexes
allSizes
readUnsignedShort
b
u
u
if
localVar
block
b
data
u
while
u
length
block
label
readUnsignedShort
b
u
newOffset
getNewOffset
allIndexes
allSizes
label
writeShort
b
u
newOffset
label
readUnsignedShort
b
u
newOffset
getNewOffset
allIndexes
allSizes
label
newOffset
writeShort
b
u
newOffset
u
if
lineNumber
block
b
data
u
while
u
length
block
writeShort
b
u
getNewOffset
allIndexes
allSizes
readUnsignedShort
b
u
u
code
newCode
return
indexes
readUnsignedShort
int
b
byte
index
int
return
b
index
b
index
readShort
short
b
byte
index
int
return
short
b
index
b
index
readInt
int
b
byte
index
int
return
b
index
b
index
b
index
b
index
writeShort
b
byte
index
int
s
int
b
index
byte
s
b
index
byte
s
getNewOffset
int
indexes
int
sizes
int
begin
int
end
int
int
offset
end
begin
for
forControl
int
i
i
length
i
block
if
begin
indexes
i
indexes
i
end
block
offset
sizes
i
if
end
indexes
i
indexes
i
begin
block
offset
sizes
i
return
offset
getCodeSize
int
return
length
getCode
byte
return
data
CodeVisitor
