XmlParser
boolean
USE_CHEATS
XmlParser
setHandler
handler
XmlHandler
handler
handler
parse
systemId
String
publicId
String
encoding
String
doParse
systemId
publicId
encoding
parse
systemId
String
publicId
String
stream
InputStream
encoding
String
doParse
systemId
publicId
stream
encoding
parse
systemId
String
publicId
String
reader
Reader
doParse
systemId
publicId
reader
doParse
systemId
String
publicId
String
reader
Reader
stream
InputStream
encoding
String
basePublicId
publicId
baseURI
systemId
baseReader
reader
baseInputStream
stream
initializeVariables
setInternalEntity
intern
setInternalEntity
intern
setInternalEntity
intern
setInternalEntity
intern
setInternalEntity
intern
if
handler
block
startDocument
pushURL
basePublicId
baseURI
baseReader
baseInputStream
encoding
parseDocument
if
handler
block
endDocument
cleanupVariables
int
CONTENT_UNDECLARED
int
CONTENT_ANY
int
CONTENT_EMPTY
int
CONTENT_MIXED
int
CONTENT_ELEMENTS
int
ENTITY_UNDECLARED
int
ENTITY_INTERNAL
int
ENTITY_NDATA
int
ENTITY_TEXT
int
ATTRIBUTE_UNDECLARED
int
ATTRIBUTE_CDATA
int
ATTRIBUTE_ID
int
ATTRIBUTE_IDREF
int
ATTRIBUTE_IDREFS
int
ATTRIBUTE_ENTITY
int
ATTRIBUTE_ENTITIES
int
ATTRIBUTE_NMTOKEN
int
ATTRIBUTE_NMTOKENS
int
ATTRIBUTE_ENUMERATED
int
ATTRIBUTE_NOTATION
Hashtable
attributeTypeHash
attributeTypeHash
Hashtable
put
Integer
ATTRIBUTE_CDATA
put
Integer
ATTRIBUTE_ID
put
Integer
ATTRIBUTE_IDREF
put
Integer
ATTRIBUTE_IDREFS
put
Integer
ATTRIBUTE_ENTITY
put
Integer
ATTRIBUTE_ENTITIES
put
Integer
ATTRIBUTE_NMTOKEN
put
Integer
ATTRIBUTE_NMTOKENS
put
Integer
ATTRIBUTE_NOTATION
int
ENCODING_UTF_8
int
ENCODING_ISO_8859_1
int
ENCODING_UCS_2_12
int
ENCODING_UCS_2_21
int
ENCODING_UCS_4_1234
int
ENCODING_UCS_4_4321
int
ENCODING_UCS_4_2143
int
ENCODING_UCS_4_3412
int
ATTRIBUTE_DEFAULT_UNDECLARED
int
ATTRIBUTE_DEFAULT_SPECIFIED
int
ATTRIBUTE_DEFAULT_IMPLIED
int
ATTRIBUTE_DEFAULT_REQUIRED
int
ATTRIBUTE_DEFAULT_FIXED
int
INPUT_NONE
int
INPUT_INTERNAL
int
INPUT_EXTERNAL
int
INPUT_STREAM
int
INPUT_BUFFER
int
INPUT_READER
int
LIT_CHAR_REF
int
LIT_ENTITY_REF
int
LIT_PE_REF
int
LIT_NORMALIZE
int
CONTEXT_NONE
int
CONTEXT_DTD
int
CONTEXT_ENTITYVALUE
int
CONTEXT_ATTRIBUTEVALUE
error
message
String
textFound
String
textExpected
String
errorCount
if
textFound
block
message
message
textFound
if
textExpected
block
message
message
textExpected
if
handler
block
String
uri
if
externalEntity
block
uri
getURL
toString
error
message
uri
line
column
error
message
String
textFound
char
textExpected
String
error
message
toString
Character
textFound
textExpected
parseDocument
char
c
parseProlog
require
parseElement
try
parseMisc
c
readCh
error
c
catchClause
e
return
parseComment
skipUntil
parsePI
String
name
name
readNmtoken
if
tryRead
block
requireWhitespace
parseUntil
if
handler
block
processingInstruction
name
dataBufferToString
parseCDSect
parseUntil
parseProlog
parseMisc
if
tryRead
block
parseDoctypedecl
parseMisc
parseXMLDecl
ignoreEncoding
boolean
String
version
String
encodingName
String
standalone
require
parseEq
version
readLiteral
if
equals
block
error
version
skipWhitespace
if
tryRead
block
parseEq
encodingName
readLiteral
checkEncoding
encodingName
ignoreEncoding
skipWhitespace
if
tryRead
block
parseEq
standalone
readLiteral
skipWhitespace
require
parseTextDecl
ignoreEncoding
boolean
String
encodingName
if
tryRead
block
String
version
parseEq
version
readLiteral
if
equals
block
error
version
requireWhitespace
require
parseEq
encodingName
readLiteral
checkEncoding
encodingName
ignoreEncoding
skipWhitespace
require
checkEncoding
encodingName
String
ignoreEncoding
boolean
encodingName
toUpperCase
if
ignoreEncoding
block
return
switch
encoding
case
if
equals
block
encoding
ENCODING_ISO_8859_1
if
equals
block
error
encodingName
break
case
if
equals
equals
block
error
encodingName
break
case
if
equals
block
error
encodingName
parseMisc
while
block
skipWhitespace
if
tryRead
block
parsePI
if
tryRead
block
parseComment
block
return
parseDoctypedecl
char
c
String
doctypeName
ids
requireWhitespace
doctypeName
readNmtoken
skipWhitespace
ids
readExternalIds
skipWhitespace
if
tryRead
block
while
block
context
CONTEXT_DTD
skipWhitespace
context
CONTEXT_NONE
if
tryRead
block
break
block
context
CONTEXT_DTD
parseMarkupdecl
context
CONTEXT_NONE
if
ids
block
pushURL
ids
ids
while
block
context
CONTEXT_DTD
skipWhitespace
context
CONTEXT_NONE
if
tryRead
block
break
block
context
CONTEXT_DTD
parseMarkupdecl
context
CONTEXT_NONE
block
skipWhitespace
require
if
handler
block
doctypeDecl
doctypeName
ids
ids
parseMarkupdecl
if
tryRead
block
parseElementdecl
if
tryRead
block
parseAttlistDecl
if
tryRead
block
parseEntityDecl
if
tryRead
block
parseNotationDecl
if
tryRead
block
parsePI
if
tryRead
block
parseComment
if
tryRead
block
parseConditionalSect
block
error
parseElement
String
gi
char
c
int
oldElementContent
currentElementContent
String
oldElement
currentElement
tagAttributePos
gi
readNmtoken
currentElement
gi
currentElementContent
getElementContentType
gi
if
currentElementContent
CONTENT_UNDECLARED
block
currentElementContent
CONTENT_ANY
skipWhitespace
c
readCh
while
c
c
block
unread
c
parseAttribute
gi
skipWhitespace
c
readCh
unread
c
Enumeration
atts
declaredAttributes
gi
if
atts
block
String
aname
while
hasMoreElements
block
aname
String
nextElement
for
forControl
int
i
i
tagAttributePos
i
block
if
tagAttributes
i
aname
block
continue
if
handler
block
attribute
aname
getAttributeExpandedValue
gi
aname
c
readCh
switch
c
case
if
handler
block
startElement
gi
parseContent
break
case
require
if
handler
block
startElement
gi
endElement
gi
break
currentElement
oldElement
currentElementContent
oldElementContent
parseAttribute
name
String
String
aname
int
type
String
value
aname
readNmtoken
intern
type
getAttributeDefaultValueType
name
aname
parseEq
if
type
ATTRIBUTE_CDATA
type
ATTRIBUTE_UNDECLARED
block
value
readLiteral
LIT_CHAR_REF
LIT_ENTITY_REF
block
value
readLiteral
LIT_CHAR_REF
LIT_ENTITY_REF
LIT_NORMALIZE
if
handler
block
attribute
aname
value
dataBufferPos
if
tagAttributePos
length
block
String
newAttrib
String
length
arraycopy
tagAttributes
newAttrib
tagAttributePos
tagAttributes
newAttrib
tagAttributes
tagAttributePos
aname
parseEq
skipWhitespace
require
skipWhitespace
parseETag
String
name
name
readNmtoken
if
name
currentElement
block
error
name
currentElement
skipWhitespace
require
if
handler
block
endElement
name
parseContent
String
data
char
c
while
block
switch
currentElementContent
case
parsePCData
break
case
parseWhitespace
break
c
readCh
switch
c
case
c
readCh
if
c
block
parseCharRef
block
unread
c
parseEntityRef
break
case
c
readCh
switch
c
case
c
readCh
switch
c
case
require
parseComment
break
case
require
parseCDSect
break
case
error
c
break
break
case
dataBufferFlush
parsePI
break
case
dataBufferFlush
parseETag
return
case
dataBufferFlush
unread
c
parseElement
break
parseElementdecl
String
name
requireWhitespace
name
readNmtoken
requireWhitespace
parseContentspec
name
skipWhitespace
require
parseContentspec
name
String
if
tryRead
block
setElement
name
CONTENT_EMPTY
return
if
tryRead
block
setElement
name
CONTENT_ANY
return
block
require
dataBufferAppend
skipWhitespace
if
tryRead
block
dataBufferAppend
parseMixed
setElement
name
CONTENT_MIXED
dataBufferToString
block
parseElements
setElement
name
CONTENT_ELEMENTS
dataBufferToString
parseElements
char
c
char
sep
skipWhitespace
parseCp
skipWhitespace
c
readCh
switch
c
case
dataBufferAppend
c
readCh
switch
c
case
dataBufferAppend
c
break
case
unread
c
return
case
sep
c
dataBufferAppend
c
break
case
error
c
return
while
block
skipWhitespace
parseCp
skipWhitespace
c
readCh
if
c
block
dataBufferAppend
break
if
c
sep
block
error
c
return
block
dataBufferAppend
c
c
readCh
switch
c
case
dataBufferAppend
c
return
case
unread
c
return
parseCp
char
c
if
tryRead
block
dataBufferAppend
parseElements
block
dataBufferAppend
readNmtoken
c
readCh
switch
c
case
dataBufferAppend
c
break
case
unread
c
break
parseMixed
char
c
skipWhitespace
if
tryRead
block
dataBufferAppend
tryRead
return
skipWhitespace
while
tryRead
block
require
dataBufferAppend
skipWhitespace
dataBufferAppend
readNmtoken
skipWhitespace
dataBufferAppend
parseAttlistDecl
String
elementName
requireWhitespace
elementName
readNmtoken
requireWhitespace
while
tryRead
block
parseAttDef
elementName
skipWhitespace
parseAttDef
elementName
String
String
name
int
type
String
enumeration
name
readNmtoken
requireWhitespace
type
readAttType
if
type
ATTRIBUTE_ENUMERATED
type
ATTRIBUTE_NOTATION
block
enumeration
dataBufferToString
requireWhitespace
parseDefault
elementName
name
type
enumeration
readAttType
int
String
typeString
Integer
type
if
tryRead
block
parseEnumeration
return
ATTRIBUTE_ENUMERATED
block
typeString
readNmtoken
if
equals
block
parseNotationType
type
Integer
get
typeString
if
type
block
error
typeString
return
ATTRIBUTE_UNDECLARED
block
return
intValue
parseEnumeration
char
c
dataBufferAppend
skipWhitespace
dataBufferAppend
readNmtoken
skipWhitespace
while
tryRead
block
require
dataBufferAppend
skipWhitespace
dataBufferAppend
readNmtoken
skipWhitespace
dataBufferAppend
parseNotationType
requireWhitespace
require
parseEnumeration
parseDefault
elementName
String
name
String
type
int
enumeration
String
int
valueType
ATTRIBUTE_DEFAULT_SPECIFIED
String
value
boolean
normalizeWSFlag
if
tryRead
block
if
tryRead
block
valueType
ATTRIBUTE_DEFAULT_FIXED
requireWhitespace
context
CONTEXT_ATTRIBUTEVALUE
value
readLiteral
LIT_CHAR_REF
context
CONTEXT_DTD
if
tryRead
block
valueType
ATTRIBUTE_DEFAULT_REQUIRED
if
tryRead
block
valueType
ATTRIBUTE_DEFAULT_IMPLIED
block
error
block
context
CONTEXT_ATTRIBUTEVALUE
value
readLiteral
LIT_CHAR_REF
context
CONTEXT_DTD
setAttribute
elementName
name
type
enumeration
value
valueType
parseConditionalSect
skipWhitespace
if
tryRead
block
skipWhitespace
require
skipWhitespace
while
tryRead
block
parseMarkupdecl
skipWhitespace
if
tryRead
block
skipWhitespace
require
int
nesting
char
c
for
forControl
int
nest
nest
block
c
readCh
switch
c
case
if
tryRead
block
nest
case
if
tryRead
block
nest
block
error
parseCharRef
int
value
char
c
if
tryRead
block
while
block
c
readCh
switch
c
case
value
value
parseInt
toString
Character
c
break
case
break
case
error
c
break
block
while
block
c
readCh
switch
c
case
value
value
parseInt
toString
Character
c
break
case
break
case
error
c
break
if
value
block
dataBufferAppend
char
value
if
value
block
dataBufferAppend
char
value
dataBufferAppend
char
value
block
error
value
toString
Integer
value
parseEntityRef
externalAllowed
boolean
String
name
name
readNmtoken
require
switch
getEntityType
name
case
error
name
break
case
pushString
name
getEntityValue
name
break
case
if
externalAllowed
block
pushURL
name
getEntityPublicId
name
getEntitySystemId
name
block
error
name
break
case
if
externalAllowed
block
error
name
block
error
name
break
parsePEReference
isEntityValue
boolean
String
name
name
readNmtoken
require
switch
getEntityType
name
case
error
name
break
case
if
isEntityValue
block
pushString
name
getEntityValue
name
block
pushString
name
getEntityValue
name
break
case
if
isEntityValue
block
pushString
pushURL
name
getEntityPublicId
name
getEntitySystemId
name
if
isEntityValue
block
pushString
break
parseEntityDecl
char
c
boolean
peFlag
String
name
value
notationName
ids
requireWhitespace
if
tryRead
block
peFlag
requireWhitespace
name
readNmtoken
if
peFlag
block
name
name
requireWhitespace
c
readCh
unread
c
if
c
c
block
context
CONTEXT_ENTITYVALUE
value
readLiteral
LIT_CHAR_REF
LIT_PE_REF
context
CONTEXT_DTD
setInternalEntity
name
value
block
ids
readExternalIds
if
ids
block
error
name
skipWhitespace
if
tryRead
block
requireWhitespace
notationName
readNmtoken
setExternalDataEntity
name
ids
ids
notationName
block
setExternalTextEntity
name
ids
ids
skipWhitespace
require
parseNotationDecl
String
nname
ids
requireWhitespace
nname
readNmtoken
requireWhitespace
ids
readExternalIds
if
ids
ids
block
error
nname
setNotation
nname
ids
ids
skipWhitespace
require
parsePCData
char
c
if
USE_CHEATS
block
int
lineAugment
int
columnAugment
for
forControl
int
i
readBufferPos
i
readBufferLength
i
block
switch
readBuffer
i
case
lineAugment
columnAugment
break
case
int
start
readBufferPos
columnAugment
readBufferPos
i
if
lineAugment
block
line
lineAugment
column
columnAugment
block
column
columnAugment
dataBufferAppend
readBuffer
start
i
start
return
case
columnAugment
while
block
c
readCh
switch
c
case
unread
c
return
case
dataBufferAppend
c
break
requireWhitespace
char
c
readCh
if
isWhitespace
c
block
skipWhitespace
block
error
c
parseWhitespace
char
c
readCh
while
isWhitespace
c
block
dataBufferAppend
c
c
readCh
unread
c
skipWhitespace
if
USE_CHEATS
block
int
lineAugment
int
columnAugment
for
forControl
int
i
readBufferPos
i
readBufferLength
i
block
switch
readBuffer
i
case
columnAugment
break
case
lineAugment
columnAugment
break
case
if
context
CONTEXT_DTD
context
CONTEXT_ENTITYVALUE
block
break
case
readBufferPos
i
if
lineAugment
block
line
lineAugment
column
columnAugment
block
column
columnAugment
return
char
c
readCh
while
isWhitespace
c
block
c
readCh
unread
c
readNmtoken
String
isName
boolean
char
c
if
USE_CHEATS
block
for
forControl
int
i
readBufferPos
i
readBufferLength
i
block
switch
readBuffer
i
case
if
context
CONTEXT_DTD
context
CONTEXT_ENTITYVALUE
block
break
case
int
start
readBufferPos
if
i
start
block
error
readBuffer
i
readBufferPos
i
return
intern
readBuffer
start
i
start
nameBufferPos
while
block
c
readCh
switch
c
case
unread
c
if
nameBufferPos
block
error
String
s
intern
nameBuffer
nameBufferPos
nameBufferPos
return
s
case
nameBuffer
char
extendArray
nameBuffer
length
nameBufferPos
nameBuffer
nameBufferPos
c
readLiteral
String
flags
int
char
delim
c
int
startLine
line
delim
readCh
if
delim
delim
delim
char
block
error
delim
return
try
c
readCh
while
c
delim
block
switch
c
case
c
break
case
if
flags
LIT_CHAR_REF
block
c
readCh
if
c
block
parseCharRef
c
readCh
continue
if
flags
LIT_ENTITY_REF
block
unread
c
parseEntityRef
c
readCh
continue
block
dataBufferAppend
break
case
break
dataBufferAppend
c
c
readCh
catchClause
e
error
startLine
toString
Character
delim
if
flags
LIT_NORMALIZE
block
dataBufferNormalize
return
dataBufferToString
readExternalIds
String
inNotation
boolean
char
c
String
ids
String
if
tryRead
block
requireWhitespace
ids
readLiteral
LIT_NORMALIZE
if
inNotation
block
skipWhitespace
if
tryRead
tryRead
block
ids
readLiteral
block
requireWhitespace
ids
readLiteral
if
tryRead
block
requireWhitespace
ids
readLiteral
return
ids
isWhitespace
boolean
c
char
switch
int
c
case
return
case
return
dataBufferAppend
c
char
dataBuffer
char
extendArray
dataBuffer
length
dataBufferPos
dataBuffer
dataBufferPos
c
dataBufferAppend
s
String
dataBufferAppend
toCharArray
length
dataBufferAppend
ch
char
start
int
length
int
dataBuffer
char
extendArray
dataBuffer
length
dataBufferPos
length
arraycopy
Object
ch
start
Object
dataBuffer
dataBufferPos
length
dataBufferPos
length
dataBufferNormalize
int
i
int
j
int
end
dataBufferPos
while
j
end
isWhitespace
dataBuffer
j
block
j
while
end
j
isWhitespace
dataBuffer
end
block
end
while
j
end
block
char
c
dataBuffer
j
if
isWhitespace
c
block
while
j
end
isWhitespace
dataBuffer
j
block
dataBuffer
i
dataBuffer
i
dataBuffer
j
block
dataBuffer
i
c
dataBufferPos
i
dataBufferToString
String
String
s
String
dataBuffer
dataBufferPos
dataBufferPos
return
s
dataBufferFlush
if
dataBufferPos
block
switch
currentElementContent
case
break
case
if
handler
block
charData
dataBuffer
dataBufferPos
break
case
if
handler
block
ignorableWhitespace
dataBuffer
dataBufferPos
break
dataBufferPos
require
delim
String
char
ch
toCharArray
for
forControl
int
i
i
length
i
block
require
ch
i
require
delim
char
char
c
readCh
if
c
delim
block
error
c
toString
Character
delim
intern
String
s
String
char
ch
toCharArray
return
intern
ch
length
intern
String
ch
char
start
int
length
int
int
index
int
hash
for
forControl
int
i
start
i
start
length
i
block
hash
hash
int
ch
i
hash
hash
SYMBOL_TABLE_LENGTH
Object
bucket
Object
symbolTable
hash
if
bucket
block
symbolTable
hash
bucket
Object
for
forControl
index
index
length
index
block
char
chFound
char
bucket
index
if
chFound
block
break
if
length
length
block
for
forControl
int
i
i
length
i
block
if
ch
start
i
chFound
i
block
break
if
i
length
block
return
String
bucket
index
bucket
Object
extendArray
bucket
length
index
String
s
String
ch
start
length
bucket
index
toCharArray
bucket
index
s
symbolTable
hash
bucket
return
s
extendArray
Object
array
Object
currentSize
int
requiredSize
int
if
requiredSize
currentSize
block
return
array
block
Object
newArray
int
newSize
currentSize
if
newSize
requiredSize
block
newSize
requiredSize
if
array
char
block
newArray
char
newSize
if
array
Object
block
newArray
Object
newSize
arraycopy
array
newArray
currentSize
return
newArray
declaredElements
Enumeration
return
keys
getElementContentType
int
name
String
Object
element
Object
get
name
if
element
block
return
CONTENT_UNDECLARED
block
return
Integer
element
getElementContentModel
String
name
String
Object
element
Object
get
name
if
element
block
return
block
return
String
element
setElement
name
String
contentType
int
contentModel
String
attributes
Hashtable
Object
element
element
Object
get
name
if
element
block
element
Object
element
Integer
CONTENT_UNDECLARED
element
element
if
contentType
CONTENT_UNDECLARED
Integer
element
CONTENT_UNDECLARED
block
error
name
return
if
contentType
CONTENT_UNDECLARED
block
element
Integer
contentType
if
contentModel
block
element
contentModel
if
attributes
block
element
attributes
put
name
element
getElementAttributes
Hashtable
name
String
Object
element
Object
get
name
if
element
block
return
block
return
Hashtable
element
declaredAttributes
Enumeration
elname
String
Hashtable
attlist
getElementAttributes
elname
if
attlist
block
return
block
return
keys
getAttributeType
int
name
String
aname
String
Object
attribute
getAttribute
name
aname
if
attribute
block
return
ATTRIBUTE_UNDECLARED
block
return
Integer
attribute
getAttributeEnumeration
String
name
String
aname
String
Object
attribute
getAttribute
name
aname
if
attribute
block
return
block
return
String
attribute
getAttributeDefaultValue
String
name
String
aname
String
Object
attribute
getAttribute
name
aname
if
attribute
block
return
block
return
String
attribute
getAttributeExpandedValue
String
name
String
aname
String
Object
attribute
getAttribute
name
aname
if
attribute
block
return
if
attribute
attribute
block
try
pushString
char
String
attribute
char
attribute
readLiteral
LIT_NORMALIZE
LIT_CHAR_REF
LIT_ENTITY_REF
catchClause
e
return
String
attribute
getAttributeDefaultValueType
int
name
String
aname
String
Object
attribute
getAttribute
name
aname
if
attribute
block
return
ATTRIBUTE_DEFAULT_UNDECLARED
block
return
Integer
attribute
setAttribute
elName
String
name
String
type
int
enumeration
String
value
String
valueType
int
Hashtable
attlist
Object
attribute
attlist
getElementAttributes
elName
if
attlist
block
attlist
Hashtable
if
get
name
block
return
block
attribute
Object
attribute
Integer
type
attribute
value
attribute
Integer
valueType
attribute
enumeration
attribute
put
intern
attribute
setElement
elName
CONTENT_UNDECLARED
attlist
getAttribute
Object
elName
String
name
String
Hashtable
attlist
Object
attribute
attlist
getElementAttributes
elName
if
attlist
block
return
attribute
Object
get
name
return
attribute
declaredEntities
Enumeration
return
keys
getEntityType
int
ename
String
Object
entity
Object
get
ename
if
entity
block
return
ENTITY_UNDECLARED
block
return
Integer
entity
getEntityPublicId
String
ename
String
Object
entity
Object
get
ename
if
entity
block
return
block
return
String
entity
getEntitySystemId
String
ename
String
Object
entity
Object
get
ename
if
entity
block
return
block
return
String
entity
getEntityValue
String
ename
String
Object
entity
Object
get
ename
if
entity
block
return
block
return
String
entity
getEntityNotationName
String
eName
String
Object
entity
Object
get
eName
if
entity
block
return
block
return
String
entity
setInternalEntity
eName
String
value
String
setEntity
eName
ENTITY_INTERNAL
value
setExternalDataEntity
eName
String
pubid
String
sysid
String
nName
String
setEntity
eName
ENTITY_NDATA
pubid
sysid
nName
setExternalTextEntity
eName
String
pubid
String
sysid
String
setEntity
eName
ENTITY_TEXT
pubid
sysid
setEntity
eName
String
eClass
int
pubid
String
sysid
String
value
String
nName
String
Object
entity
if
get
eName
block
entity
Object
entity
Integer
eClass
entity
pubid
entity
sysid
entity
value
entity
nName
put
eName
entity
declaredNotations
Enumeration
return
keys
getNotationPublicId
String
nname
String
Object
notation
Object
get
nname
if
notation
block
return
block
return
String
notation
getNotationSystemId
String
nname
String
Object
notation
Object
get
nname
if
notation
block
return
block
return
String
notation
setNotation
nname
String
pubid
String
sysid
String
Object
notation
if
get
nname
block
notation
Object
notation
pubid
notation
sysid
put
nname
notation
block
error
nname
getLineNumber
int
return
line
getColumnNumber
int
return
column
readCh
char
char
c
while
readBufferPos
readBufferLength
block
switch
sourceType
case
readDataChunk
while
readBufferLength
block
popInput
if
readBufferLength
block
readDataChunk
break
case
popInput
break
c
readBuffer
readBufferPos
if
c
context
CONTEXT_DTD
context
CONTEXT_ENTITYVALUE
block
char
c2
readCh
unread
c2
if
isWhitespace
c2
block
parsePEReference
context
CONTEXT_ENTITYVALUE
return
readCh
if
c
block
line
column
block
column
return
c
unread
c
char
if
c
block
line
column
if
readBufferPos
block
readBuffer
readBufferPos
c
block
pushString
toString
Character
c
unread
ch
char
length
int
for
forControl
int
i
i
length
i
block
if
ch
i
block
line
column
if
length
readBufferPos
block
readBufferPos
length
block
pushCharArray
ch
length
sourceType
INPUT_BUFFER
pushURL
ename
String
publicId
String
systemId
String
reader
Reader
stream
InputStream
encoding
String
URL
url
boolean
ignoreEncoding
pushInput
ename
readBuffer
char
READ_BUFFER_MAX
readBufferPos
readBufferLength
readBufferOverflow
is
line
currentByteCount
dataBufferFlush
if
systemId
externalEntity
block
systemId
toString
URL
getURL
systemId
if
baseURI
block
try
systemId
toString
URL
URL
baseURI
systemId
catchClause
e
if
systemId
handler
block
Object
input
resolveEntity
publicId
systemId
if
input
block
if
input
String
block
systemId
String
input
if
input
InputStream
block
stream
InputStream
input
if
input
Reader
block
reader
Reader
input
if
handler
block
if
systemId
block
startExternalEntity
systemId
block
startExternalEntity
if
reader
block
sourceType
INPUT_READER
reader
reader
tryEncodingDecl
return
if
stream
block
sourceType
INPUT_STREAM
is
stream
block
sourceType
INPUT_EXTERNAL
url
URL
systemId
externalEntity
openConnection
connect
is
getInputStream
if
markSupported
block
is
BufferedInputStream
is
if
encoding
externalEntity
block
encoding
getContentEncoding
if
encoding
block
checkEncoding
encoding
ignoreEncoding
block
detectEncoding
ignoreEncoding
tryEncodingDecl
ignoreEncoding
tryEncodingDecl
ignoreEncoding
boolean
if
tryRead
block
if
tryWhitespace
block
if
size
block
parseTextDecl
ignoreEncoding
block
parseXMLDecl
ignoreEncoding
block
unread
toCharArray
parsePI
detectEncoding
byte
signature
byte
mark
read
signature
reset
if
tryEncoding
signature
byte
byte
byte
byte
block
encoding
ENCODING_UCS_4_1234
if
tryEncoding
signature
byte
byte
byte
byte
block
encoding
ENCODING_UCS_4_4321
if
tryEncoding
signature
byte
byte
byte
byte
block
encoding
ENCODING_UCS_4_2143
if
tryEncoding
signature
byte
byte
byte
byte
block
encoding
ENCODING_UCS_4_3412
if
tryEncoding
signature
byte
byte
block
encoding
ENCODING_UCS_2_12
read
read
if
tryEncoding
signature
byte
byte
block
encoding
ENCODING_UCS_2_21
read
read
if
tryEncoding
signature
byte
byte
byte
byte
block
encoding
ENCODING_UCS_2_12
error
if
tryEncoding
signature
byte
byte
byte
byte
block
encoding
ENCODING_UCS_2_21
error
if
tryEncoding
signature
byte
byte
byte
byte
block
encoding
ENCODING_UTF_8
read8bitEncodingDeclaration
block
encoding
ENCODING_UTF_8
tryEncoding
boolean
sig
byte
b1
byte
b2
byte
b3
byte
b4
byte
return
sig
b1
sig
b2
sig
b3
sig
b4
tryEncoding
boolean
sig
byte
b1
byte
b2
byte
return
sig
b1
sig
b2
pushString
ename
String
s
String
char
ch
toCharArray
pushCharArray
ename
ch
length
pushCharArray
ename
String
ch
char
start
int
length
int
pushInput
ename
sourceType
INPUT_INTERNAL
readBuffer
ch
readBufferPos
start
readBufferLength
length
readBufferOverflow
pushInput
ename
String
Object
input
Object
if
ename
block
Enumeration
entities
elements
while
hasMoreElements
block
String
e
String
nextElement
if
e
ename
block
error
ename
push
ename
if
sourceType
INPUT_NONE
block
return
input
Integer
sourceType
input
externalEntity
input
readBuffer
input
Integer
readBufferPos
input
Integer
readBufferLength
input
Integer
line
input
Integer
encoding
input
Integer
readBufferOverflow
input
is
input
Integer
currentByteCount
input
Integer
column
input
reader
push
input
popInput
Object
input
switch
sourceType
case
dataBufferFlush
if
handler
externalEntity
block
endExternalEntity
getURL
toString
break
case
dataBufferFlush
if
baseURI
block
if
handler
block
endExternalEntity
baseURI
break
case
dataBufferFlush
if
baseURI
block
if
handler
block
endExternalEntity
baseURI
break
if
isEmpty
block
throw
EOFException
block
String
s
input
Object
pop
s
String
pop
sourceType
Integer
input
externalEntity
URLConnection
input
readBuffer
char
input
readBufferPos
Integer
input
readBufferLength
Integer
input
line
Integer
input
encoding
Integer
input
readBufferOverflow
Integer
input
is
InputStream
input
currentByteCount
Integer
input
column
Integer
input
reader
Reader
input
tryRead
boolean
delim
char
char
c
c
readCh
if
c
delim
block
return
block
unread
c
return
tryRead
boolean
delim
String
char
ch
toCharArray
char
c
for
forControl
int
i
i
length
i
block
c
readCh
if
c
ch
i
block
unread
c
if
i
block
unread
ch
i
return
return
tryWhitespace
boolean
char
c
c
readCh
if
isWhitespace
c
block
skipWhitespace
return
block
unread
c
return
parseUntil
delim
String
char
c
int
startLine
line
try
while
tryRead
delim
block
c
readCh
dataBufferAppend
c
catchClause
e
error
startLine
delim
skipUntil
delim
String
while
tryRead
delim
block
readCh
read8bitEncodingDeclaration
int
ch
readBufferPos
readBufferLength
while
block
ch
read
readBuffer
readBufferLength
char
ch
switch
ch
case
int
return
case
error
return
if
length
readBufferLength
block
error
readDataChunk
int
count
i
j
if
readBufferOverflow
block
readBuffer
char
readBufferOverflow
readBufferOverflow
readBufferPos
sawCR
block
readBufferPos
sawCR
if
sourceType
INPUT_READER
block
count
read
readBuffer
readBufferPos
READ_BUFFER_MAX
if
count
block
readBufferLength
block
readBufferLength
readBufferPos
count
filterCR
sawCR
return
count
read
rawReadBuffer
READ_BUFFER_MAX
switch
encoding
case
copyUtf8ReadBuffer
count
break
case
copyIso8859_1ReadBuffer
count
break
case
copyUcs2ReadBuffer
count
break
case
copyUcs2ReadBuffer
count
break
case
copyUcs4ReadBuffer
count
break
case
copyUcs4ReadBuffer
count
break
case
copyUcs4ReadBuffer
count
break
case
copyUcs4ReadBuffer
count
break
if
sawCR
block
filterCR
sawCR
readBufferPos
currentByteCount
count
filterCR
int
i
j
readBufferOverflow
for
forControl
i
j
j
readBufferLength
i
j
block
switch
readBuffer
j
case
if
j
readBufferLength
block
readBufferOverflow
readBufferLength
break
if
readBuffer
j
block
j
readBuffer
i
break
case
readBuffer
i
readBuffer
j
break
readBufferLength
i
copyUtf8ReadBuffer
count
int
int
i
int
j
readBufferPos
int
b1
boolean
isSurrogate
while
i
count
block
b1
rawReadBuffer
i
isSurrogate
if
b1
block
readBuffer
j
char
b1
if
b1
block
readBuffer
j
char
b1
getNextUtf8Byte
i
count
if
b1
block
readBuffer
j
char
b1
getNextUtf8Byte
i
count
getNextUtf8Byte
i
count
if
b1
block
isSurrogate
int
b2
getNextUtf8Byte
i
count
int
b3
getNextUtf8Byte
i
count
int
b4
getNextUtf8Byte
i
count
readBuffer
j
char
b1
b2
b2
b3
readBuffer
j
char
b3
b4
block
encodingError
b1
i
if
readBuffer
j
block
sawCR
readBufferLength
j
getNextUtf8Byte
int
pos
int
count
int
int
val
if
pos
count
block
val
rawReadBuffer
pos
block
val
read
if
val
block
encodingError
pos
if
val
block
encodingError
val
pos
return
val
copyIso8859_1ReadBuffer
count
int
int
i
j
for
forControl
i
j
readBufferPos
i
count
i
j
block
readBuffer
j
char
rawReadBuffer
i
if
readBuffer
j
block
sawCR
readBufferLength
j
copyUcs2ReadBuffer
count
int
shift1
int
shift2
int
int
j
readBufferPos
if
count
count
block
encodingError
count
for
forControl
int
i
i
count
i
block
readBuffer
j
char
rawReadBuffer
i
shift1
rawReadBuffer
i
shift2
if
readBuffer
j
block
sawCR
readBufferLength
j
copyUcs4ReadBuffer
count
int
shift1
int
shift2
int
shift3
int
shift4
int
int
j
readBufferPos
int
value
if
count
count
block
encodingError
count
for
forControl
int
i
i
count
i
block
value
rawReadBuffer
i
shift1
rawReadBuffer
i
shift2
rawReadBuffer
i
shift3
rawReadBuffer
i
shift4
if
value
block
readBuffer
j
char
value
if
value
int
block
sawCR
if
value
block
readBuffer
j
char
value
readBuffer
j
char
value
block
encodingError
value
i
readBufferLength
j
encodingError
message
String
value
int
offset
int
String
uri
if
value
block
message
message
toHexString
value
if
externalEntity
block
uri
getURL
toString
block
uri
baseURI
error
message
uri
offset
currentByteCount
initializeVariables
errorCount
line
column
dataBufferPos
dataBuffer
char
DATA_BUFFER_INITIAL
nameBufferPos
nameBuffer
char
NAME_BUFFER_INITIAL
elementInfo
Hashtable
entityInfo
Hashtable
notationInfo
Hashtable
currentElement
currentElementContent
CONTENT_UNDECLARED
sourceType
INPUT_NONE
inputStack
Stack
entityStack
Stack
externalEntity
tagAttributePos
tagAttributes
String
rawReadBuffer
byte
READ_BUFFER_MAX
readBufferOverflow
context
CONTEXT_NONE
symbolTable
Object
SYMBOL_TABLE_LENGTH
cleanupVariables
errorCount
line
column
dataBuffer
nameBuffer
currentElement
currentElementContent
CONTENT_UNDECLARED
sourceType
INPUT_NONE
inputStack
externalEntity
entityStack
XmlHandler
handler
Reader
reader
InputStream
is
int
line
int
column
int
sourceType
Stack
inputStack
URLConnection
externalEntity
int
encoding
int
currentByteCount
int
errorCount
int
READ_BUFFER_MAX
char
readBuffer
int
readBufferPos
int
readBufferLength
int
readBufferOverflow
byte
rawReadBuffer
int
DATA_BUFFER_INITIAL
char
dataBuffer
int
dataBufferPos
int
NAME_BUFFER_INITIAL
char
nameBuffer
int
nameBufferPos
Hashtable
elementInfo
Hashtable
entityInfo
Hashtable
notationInfo
String
currentElement
int
currentElementContent
String
basePublicId
String
baseURI
int
baseEncoding
Reader
baseReader
InputStream
baseInputStream
char
baseInputBuffer
int
baseInputBufferStart
int
baseInputBufferLength
Stack
entityStack
int
context
Object
symbolTable
int
SYMBOL_TABLE_LENGTH
String
tagAttributes
int
tagAttributePos
boolean
sawCR
