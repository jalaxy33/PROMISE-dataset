BSHPrimarySuffix
int
CLASS
INDEX
NAME
PROPERTY
int
operation
Object
index
String
field
BSHPrimarySuffix
id
int
id
doSuffix
Object
obj
Object
toLHS
boolean
callstack
CallStack
interpreter
Interpreter
if
operation
CLASS
if
obj
BSHType
block
if
toLHS
throw
EvalError
callstack
NameSpace
namespace
top
return
BSHType
obj
throw
EvalError
callstack
if
obj
SimpleNode
if
obj
BSHAmbiguousName
obj
BSHAmbiguousName
obj
obj
SimpleNode
obj
if
obj
LHS
try
obj
LHS
obj
catchClause
e
throw
toEvalError
callstack
try
switch
operation
case
return
doIndex
obj
toLHS
callstack
interpreter
case
return
doName
obj
toLHS
callstack
interpreter
case
return
doProperty
toLHS
obj
callstack
interpreter
case
throw
InterpreterError
catchClause
e
throw
EvalError
e
callstack
catchClause
e
throw
TargetError
getTargetException
callstack
doName
Object
obj
Object
toLHS
boolean
callstack
CallStack
interpreter
Interpreter
try
if
equals
getClass
isArray
if
toLHS
throw
EvalError
callstack
return
Primitive
getLength
obj
if
jjtGetNumChildren
if
toLHS
return
getLHSObjectField
obj
field
return
getObjectField
obj
field
Object
oa
BSHArguments
jjtGetChild
return
invokeObjectMethod
obj
field
oa
interpreter
callstack
catchClause
e
throw
toEvalError
callstack
getIndexAux
int
obj
Object
callstack
CallStack
interpreter
Interpreter
callerInfo
SimpleNode
if
getClass
isArray
throw
EvalError
callerInfo
callstack
int
index
try
Object
indexVal
SimpleNode
jjtGetChild
if
indexVal
Primitive
indexVal
getAssignableForm
indexVal
TYPE
index
Primitive
indexVal
catchClause
e
debug
e
throw
toEvalError
callerInfo
callstack
return
index
doIndex
Object
obj
Object
toLHS
boolean
callstack
CallStack
interpreter
Interpreter
int
index
getIndexAux
obj
callstack
interpreter
if
toLHS
return
LHS
obj
index
try
return
getIndex
obj
index
catchClause
e
throw
toEvalError
callstack
doProperty
Object
toLHS
boolean
obj
Object
callstack
CallStack
interpreter
Interpreter
if
obj
VOID
throw
EvalError
callstack
if
obj
Primitive
throw
EvalError
callstack
Object
value
SimpleNode
jjtGetChild
if
value
String
throw
EvalError
callstack
if
toLHS
return
LHS
obj
String
value
CollectionManager
cm
getCollectionManager
if
isMap
obj
block
Object
val
getFromMap
obj
value
return
val
val
NULL
val
try
return
getObjectProperty
obj
String
value
catchClause
e
throw
toEvalError
value
callstack
catchClause
e
throw
EvalError
value
callstack
SimpleNode
