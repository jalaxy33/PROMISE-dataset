ClassGeneratorUtil
String
BSHSTATIC
String
BSHTHIS
String
BSHSUPER
String
BSHINIT
String
BSHCONSTRUCTORS
int
DEFAULTCONSTRUCTOR
String
OBJECT
String
className
String
fqClassName
Class
superClass
String
superClassName
Class
interfaces
Variable
vars
Constructor
superConstructors
DelayedEvalBshMethod
constructors
DelayedEvalBshMethod
methods
NameSpace
classStaticNameSpace
Modifiers
classModifiers
boolean
isInterface
ClassGeneratorUtil
classModifiers
Modifiers
className
String
packageName
String
superClass
Class
interfaces
Class
vars
Variable
bshmethods
DelayedEvalBshMethod
classStaticNameSpace
NameSpace
isInterface
boolean
classModifiers
classModifiers
className
className
if
packageName
fqClassName
replace
className
fqClassName
className
if
superClass
superClass
Object
superClass
superClass
superClassName
getInternalName
superClass
if
interfaces
interfaces
Class
interfaces
interfaces
vars
vars
classStaticNameSpace
classStaticNameSpace
superConstructors
getDeclaredConstructors
List
consl
ArrayList
List
methodsl
ArrayList
String
classBaseName
getBaseName
className
for
forControl
int
i
i
length
i
if
bshmethods
i
getName
equals
classBaseName
add
bshmethods
i
add
bshmethods
i
constructors
DelayedEvalBshMethod
toArray
DelayedEvalBshMethod
methods
DelayedEvalBshMethod
toArray
DelayedEvalBshMethod
try
setLocalVariable
BSHCONSTRUCTORS
constructors
catchClause
e
throw
InterpreterError
isInterface
isInterface
generateClass
byte
int
classMods
getASMModifiers
classModifiers
ACC_PUBLIC
if
isInterface
classMods
ACC_INTERFACE
String
interfaceNames
String
length
for
forControl
int
i
i
length
i
interfaceNames
i
getInternalName
interfaces
i
String
sourceFile
ClassWriter
cw
ClassWriter
visit
classMods
fqClassName
superClassName
interfaceNames
sourceFile
if
isInterface
block
generateField
BSHTHIS
className
ACC_PUBLIC
cw
generateField
BSHSTATIC
className
ACC_PUBLIC
ACC_STATIC
cw
for
forControl
int
i
i
length
i
block
String
type
vars
i
getTypeDescriptor
if
vars
i
hasModifier
type
continue
int
modifiers
if
isInterface
modifiers
ACC_PUBLIC
ACC_STATIC
ACC_FINAL
modifiers
getASMModifiers
vars
i
getModifiers
generateField
vars
i
getName
type
modifiers
cw
boolean
hasConstructor
for
forControl
int
i
i
length
i
block
if
constructors
i
hasModifier
continue
int
modifiers
getASMModifiers
constructors
i
getModifiers
generateConstructor
i
constructors
i
getParamTypeDescriptors
modifiers
cw
hasConstructor
if
isInterface
hasConstructor
generateConstructor
DEFAULTCONSTRUCTOR
String
ACC_PUBLIC
cw
for
forControl
int
i
i
length
i
block
String
returnType
methods
i
getReturnTypeDescriptor
if
methods
i
hasModifier
continue
int
modifiers
getASMModifiers
methods
i
getModifiers
if
isInterface
modifiers
ACC_PUBLIC
ACC_ABSTRACT
generateMethod
className
fqClassName
methods
i
getName
returnType
methods
i
getParamTypeDescriptors
modifiers
cw
boolean
isStatic
modifiers
ACC_STATIC
boolean
overridden
classContainsMethod
superClass
methods
i
getName
methods
i
getParamTypeDescriptors
if
isStatic
overridden
generateSuperDelegateMethod
superClass
superClassName
methods
i
getName
returnType
methods
i
getParamTypeDescriptors
modifiers
cw
return
toByteArray
getASMModifiers
int
modifiers
Modifiers
int
mods
if
modifiers
return
mods
if
hasModifier
mods
ACC_PUBLIC
if
hasModifier
mods
ACC_PROTECTED
if
hasModifier
mods
ACC_STATIC
if
hasModifier
mods
ACC_SYNCHRONIZED
if
hasModifier
mods
ACC_ABSTRACT
return
mods
generateField
fieldName
String
type
String
modifiers
int
cw
ClassWriter
visitField
modifiers
fieldName
type
generateMethod
className
String
fqClassName
String
methodName
String
returnType
String
paramTypes
String
modifiers
int
cw
ClassWriter
String
exceptions
boolean
isStatic
modifiers
ACC_STATIC
if
returnType
returnType
OBJECT
String
methodDescriptor
getMethodDescriptor
returnType
paramTypes
CodeVisitor
cv
visitMethod
modifiers
methodName
methodDescriptor
exceptions
if
modifiers
ACC_ABSTRACT
return
if
isStatic
block
visitFieldInsn
GETSTATIC
fqClassName
BSHSTATIC
className
block
visitVarInsn
ALOAD
visitFieldInsn
GETFIELD
fqClassName
BSHTHIS
className
visitLdcInsn
methodName
generateParameterReifierCode
paramTypes
isStatic
cv
visitInsn
ACONST_NULL
visitInsn
ACONST_NULL
visitInsn
ACONST_NULL
visitInsn
ICONST_1
visitMethodInsn
INVOKEVIRTUAL
getMethodDescriptor
getType
Object
Type
getType
String
getType
Object
getType
Interpreter
getType
CallStack
getType
SimpleNode
getType
TYPE
visitMethodInsn
INVOKESTATIC
generateReturnCode
returnType
cv
visitMaxs
generateConstructor
index
int
paramTypes
String
modifiers
int
cw
ClassWriter
int
argsVar
length
int
consArgsVar
length
String
exceptions
String
methodDescriptor
getMethodDescriptor
paramTypes
CodeVisitor
cv
visitMethod
modifiers
methodDescriptor
exceptions
generateParameterReifierCode
paramTypes
cv
visitVarInsn
ASTORE
argsVar
generateConstructorSwitch
index
argsVar
consArgsVar
cv
visitVarInsn
ALOAD
visitLdcInsn
className
visitVarInsn
ALOAD
argsVar
visitMethodInsn
INVOKESTATIC
visitInsn
RETURN
visitMaxs
generateConstructorSwitch
consIndex
int
argsVar
int
consArgsVar
int
cv
CodeVisitor
Label
defaultLabel
Label
Label
endLabel
Label
int
cases
length
length
Label
labels
Label
cases
for
forControl
int
i
i
cases
i
labels
i
Label
visitLdcInsn
getName
visitFieldInsn
GETSTATIC
fqClassName
BSHSTATIC
className
visitVarInsn
ALOAD
argsVar
visitIntInsn
BIPUSH
consIndex
visitMethodInsn
INVOKESTATIC
visitVarInsn
ASTORE
consArgsVar
visitVarInsn
ALOAD
consArgsVar
visitFieldInsn
GETFIELD
visitTableSwitchInsn
cases
defaultLabel
labels
int
index
for
forControl
int
i
i
length
i
index
doSwitchBranch
index
superClassName
getTypeDescriptors
superConstructors
i
getParameterTypes
endLabel
labels
consArgsVar
cv
for
forControl
int
i
i
length
i
index
doSwitchBranch
index
fqClassName
constructors
i
getParamTypeDescriptors
endLabel
labels
consArgsVar
cv
visitLabel
defaultLabel
visitVarInsn
ALOAD
visitMethodInsn
INVOKESPECIAL
superClassName
visitLabel
endLabel
doSwitchBranch
index
int
targetClassName
String
paramTypes
String
endLabel
Label
labels
Label
consArgsVar
int
cv
CodeVisitor
visitLabel
labels
index
visitVarInsn
ALOAD
for
forControl
int
i
i
length
i
block
String
type
paramTypes
i
String
method
if
equals
method
if
equals
method
if
equals
method
if
equals
method
if
equals
method
if
equals
method
if
equals
method
if
equals
method
method
visitVarInsn
ALOAD
consArgsVar
String
className
String
retType
if
equals
retType
OBJECT
retType
type
visitMethodInsn
INVOKEVIRTUAL
className
method
retType
if
equals
visitTypeInsn
CHECKCAST
descriptorToClassName
type
String
descriptor
getMethodDescriptor
paramTypes
visitMethodInsn
INVOKESPECIAL
targetClassName
descriptor
visitJumpInsn
GOTO
endLabel
getMethodDescriptor
String
returnType
String
paramTypes
String
StringBuffer
sb
StringBuffer
for
forControl
int
i
i
length
i
append
paramTypes
i
append
returnType
return
toString
generateSuperDelegateMethod
superClass
Class
superClassName
String
methodName
String
returnType
String
paramTypes
String
modifiers
int
cw
ClassWriter
String
exceptions
if
returnType
returnType
OBJECT
String
methodDescriptor
getMethodDescriptor
returnType
paramTypes
CodeVisitor
cv
visitMethod
modifiers
methodName
methodDescriptor
exceptions
visitVarInsn
ALOAD
int
localVarIndex
for
forControl
int
i
i
length
i
block
if
isPrimitive
paramTypes
i
visitVarInsn
ILOAD
localVarIndex
visitVarInsn
ALOAD
localVarIndex
localVarIndex
paramTypes
i
equals
paramTypes
i
equals
visitMethodInsn
INVOKESPECIAL
superClassName
methodName
methodDescriptor
generatePlainReturnCode
returnType
cv
visitMaxs
classContainsMethod
boolean
clas
Class
methodName
String
paramTypes
String
while
clas
block
Method
methods
getDeclaredMethods
for
forControl
int
i
i
length
i
block
if
methods
i
getName
equals
methodName
block
String
methodParamTypes
getTypeDescriptors
methods
i
getParameterTypes
boolean
found
for
forControl
int
j
j
length
j
block
if
paramTypes
j
equals
methodParamTypes
j
block
found
break
if
found
return
clas
getSuperclass
return
generatePlainReturnCode
returnType
String
cv
CodeVisitor
if
equals
visitInsn
RETURN
if
isPrimitive
returnType
block
int
opcode
IRETURN
if
equals
opcode
DRETURN
if
equals
opcode
FRETURN
if
equals
opcode
LRETURN
visitInsn
opcode
block
visitTypeInsn
CHECKCAST
descriptorToClassName
returnType
visitInsn
ARETURN
generateParameterReifierCode
paramTypes
String
isStatic
boolean
cv
CodeVisitor
visitIntInsn
SIPUSH
length
visitTypeInsn
ANEWARRAY
int
localVarIndex
isStatic
for
forControl
int
i
i
length
i
block
String
param
paramTypes
i
visitInsn
DUP
visitIntInsn
SIPUSH
i
if
isPrimitive
param
block
int
opcode
ILOAD
String
type
visitTypeInsn
NEW
type
visitInsn
DUP
visitVarInsn
opcode
localVarIndex
String
desc
param
visitMethodInsn
INVOKESPECIAL
type
desc
block
visitVarInsn
ALOAD
localVarIndex
visitInsn
AASTORE
localVarIndex
equals
equals
generateReturnCode
returnType
String
cv
CodeVisitor
if
equals
block
visitInsn
POP
visitInsn
RETURN
if
isPrimitive
returnType
block
int
opcode
IRETURN
String
type
String
meth
if
equals
block
type
meth
if
equals
block
type
meth
if
equals
block
type
meth
if
equals
block
opcode
DRETURN
type
meth
if
equals
block
opcode
FRETURN
type
meth
if
equals
block
opcode
LRETURN
type
meth
if
equals
block
type
meth
block
type
meth
String
desc
returnType
visitTypeInsn
CHECKCAST
type
visitMethodInsn
INVOKEVIRTUAL
type
meth
desc
visitInsn
opcode
block
visitTypeInsn
CHECKCAST
descriptorToClassName
returnType
visitInsn
ARETURN
getConstructorArgs
ConstructorArgs
superClassName
String
classStaticThis
This
consArgs
Object
index
int
DelayedEvalBshMethod
constructors
try
constructors
DelayedEvalBshMethod
getNameSpace
getVariable
BSHCONSTRUCTORS
catchClause
e
throw
InterpreterError
e
if
index
DEFAULTCONSTRUCTOR
return
DEFAULT
DelayedEvalBshMethod
constructor
constructors
index
if
jjtGetNumChildren
return
DEFAULT
String
altConstructor
BSHArguments
argsNode
SimpleNode
firstStatement
SimpleNode
jjtGetChild
if
firstStatement
BSHPrimaryExpression
firstStatement
SimpleNode
jjtGetChild
if
firstStatement
BSHMethodInvocation
block
BSHMethodInvocation
methodNode
BSHMethodInvocation
firstStatement
BSHAmbiguousName
methodName
getNameNode
if
equals
equals
block
altConstructor
text
argsNode
getArgsNode
if
altConstructor
return
DEFAULT
NameSpace
consArgsNameSpace
NameSpace
getNameSpace
String
consArgNames
getParameterNames
Class
consArgTypes
getParameterTypes
for
forControl
int
i
i
length
i
block
try
setTypedVariable
consArgNames
i
consArgTypes
i
consArgs
i
catchClause
e
throw
InterpreterError
e
CallStack
callstack
CallStack
push
consArgsNameSpace
Object
args
Interpreter
interpreter
declaringInterpreter
try
args
getArguments
callstack
interpreter
catchClause
e
throw
InterpreterError
e
Class
argTypes
getTypes
args
args
unwrap
args
Class
superClass
getClassManager
classForName
superClassName
if
superClass
throw
InterpreterError
superClassName
Constructor
superCons
getDeclaredConstructors
if
equals
block
int
i
findMostSpecificConstructorIndex
argTypes
superCons
if
i
throw
InterpreterError
return
ConstructorArgs
i
args
Class
candidates
Class
length
for
forControl
int
i
i
length
i
candidates
i
constructors
i
getParameterTypes
int
i
findMostSpecificSignature
argTypes
candidates
if
i
throw
InterpreterError
int
selector
i
length
int
ourSelector
index
length
if
selector
ourSelector
throw
InterpreterError
return
ConstructorArgs
selector
args
initInstance
instance
Object
className
String
args
Object
Class
sig
getTypes
args
CallStack
callstack
CallStack
Interpreter
interpreter
NameSpace
instanceNameSpace
This
instanceThis
getClassInstanceThis
instance
className
if
instanceThis
block
This
classStaticThis
getClassStaticThis
getClass
className
interpreter
declaringInterpreter
BSHBlock
instanceInitBlock
try
instanceInitBlock
BSHBlock
getNameSpace
getVariable
BSHINIT
catchClause
e
throw
InterpreterError
e
instanceNameSpace
NameSpace
getNameSpace
className
isClass
instanceThis
getThis
interpreter
try
LHS
lhs
getLHSObjectField
instance
BSHTHIS
className
assign
instanceThis
catchClause
e
throw
InterpreterError
e
setClassInstance
instance
push
instanceNameSpace
try
evalBlock
callstack
interpreter
CLASSINSTANCE
catchClause
e
throw
InterpreterError
e
pop
block
interpreter
declaringInterpreter
instanceNameSpace
getNameSpace
String
constructorName
getBaseName
className
try
BshMethod
constructor
getMethod
constructorName
sig
if
length
constructor
throw
InterpreterError
className
if
constructor
invoke
args
interpreter
callstack
catchClause
e
if
e
TargetError
e
Exception
TargetError
e
if
e
InvocationTargetException
e
Exception
InvocationTargetException
e
printStackTrace
err
throw
InterpreterError
e
getClassStaticThis
This
clas
Class
className
String
try
return
This
getStaticField
clas
BSHSTATIC
className
catchClause
e
throw
InterpreterError
e
getClassInstanceThis
This
instance
Object
className
String
try
Object
o
getObjectField
instance
BSHTHIS
className
return
This
unwrap
o
catchClause
e
throw
InterpreterError
e
isPrimitive
boolean
typeDescriptor
String
return
length
getTypeDescriptors
String
cparams
Class
String
sa
String
length
for
forControl
int
i
i
length
i
sa
i
getTypeDescriptor
cparams
i
return
sa
descriptorToClassName
String
s
String
if
startsWith
startsWith
return
s
return
substring
length
getBaseName
String
className
String
int
i
indexOf
if
i
return
className
return
substring
i
ConstructorArgs
ConstructorArgs
DEFAULT
ConstructorArgs
int
selector
DEFAULTCONSTRUCTOR
Object
args
int
arg
ConstructorArgs
ConstructorArgs
selector
int
args
Object
selector
selector
args
args
next
Object
return
args
arg
getBoolean
boolean
return
Boolean
next
getByte
byte
return
Byte
next
getChar
char
return
Character
next
getShort
short
return
Short
next
getInt
int
return
Integer
next
getLong
long
return
Long
next
getDouble
double
return
Double
next
getFloat
float
return
Float
next
getObject
Object
return
next
Constants
