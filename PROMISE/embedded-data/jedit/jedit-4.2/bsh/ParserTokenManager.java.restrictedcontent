ParserTokenManager
java
io
PrintStream
debugStream
out
setDebugStream
ds
java
io
PrintStream
debugStream
ds
jjStopStringLiteralDfa_0
int
pos
int
active0
long
active1
long
active2
long
switch
pos
case
if
active1
return
if
active0
return
if
active1
return
if
active0
block
jjmatchedKind
return
return
case
if
active0
return
if
active0
block
if
jjmatchedPos
block
jjmatchedKind
jjmatchedPos
return
return
case
if
active0
block
if
jjmatchedPos
block
jjmatchedKind
jjmatchedPos
return
if
active0
return
return
case
if
active0
block
if
jjmatchedPos
block
jjmatchedKind
jjmatchedPos
return
if
active0
return
return
case
if
active0
return
if
active0
block
if
jjmatchedPos
block
jjmatchedKind
jjmatchedPos
return
return
case
if
active0
block
jjmatchedKind
jjmatchedPos
return
if
active0
return
return
case
if
active0
block
jjmatchedKind
jjmatchedPos
return
if
active0
return
return
case
if
active0
return
if
active0
block
jjmatchedKind
jjmatchedPos
return
return
case
if
active0
block
jjmatchedKind
jjmatchedPos
return
if
active0
return
return
case
if
active0
block
jjmatchedKind
jjmatchedPos
return
if
active0
return
return
case
if
active0
block
if
jjmatchedPos
block
jjmatchedKind
jjmatchedPos
return
return
case
if
active0
return
return
case
return
jjStartNfa_0
int
pos
int
active0
long
active1
long
active2
long
return
jjMoveNfa_0
jjStopStringLiteralDfa_0
pos
active0
active1
active2
pos
jjStopAtPos
int
pos
int
kind
int
jjmatchedKind
kind
jjmatchedPos
pos
return
pos
jjStartNfaWithStates_0
int
pos
int
kind
int
state
int
jjmatchedKind
kind
jjmatchedPos
pos
try
curChar
readChar
catchClause
e
return
pos
return
jjMoveNfa_0
state
pos
jjMoveStringLiteralDfa0_0
int
switch
curChar
case
return
jjStartNfaWithStates_0
case
return
jjStartNfaWithStates_0
case
return
jjStartNfaWithStates_0
case
return
jjStartNfaWithStates_0
case
return
jjStartNfaWithStates_0
case
jjmatchedKind
return
jjMoveStringLiteralDfa1_0
case
jjmatchedKind
return
jjMoveStringLiteralDfa1_0
case
jjmatchedKind
return
jjMoveStringLiteralDfa1_0
case
return
jjStopAtPos
case
return
jjStopAtPos
case
jjmatchedKind
return
jjMoveStringLiteralDfa1_0
case
jjmatchedKind
return
jjMoveStringLiteralDfa1_0
case
return
jjStopAtPos
case
jjmatchedKind
return
jjMoveStringLiteralDfa1_0
case
return
jjStartNfaWithStates_0
case
jjmatchedKind
return
jjMoveStringLiteralDfa1_0
case
return
jjStopAtPos
case
return
jjStopAtPos
case
jjmatchedKind
return
jjMoveStringLiteralDfa1_0
case
jjmatchedKind
return
jjMoveStringLiteralDfa1_0
case
jjmatchedKind
return
jjMoveStringLiteralDfa1_0
case
return
jjStopAtPos
case
return
jjMoveStringLiteralDfa1_0
case
return
jjStopAtPos
case
return
jjStopAtPos
case
jjmatchedKind
return
jjMoveStringLiteralDfa1_0
case
return
jjMoveStringLiteralDfa1_0
case
return
jjMoveStringLiteralDfa1_0
case
return
jjMoveStringLiteralDfa1_0
case
return
jjMoveStringLiteralDfa1_0
case
return
jjMoveStringLiteralDfa1_0
case
return
jjMoveStringLiteralDfa1_0
case
return
jjMoveStringLiteralDfa1_0
case
return
jjMoveStringLiteralDfa1_0
case
return
jjMoveStringLiteralDfa1_0
case
return
jjMoveStringLiteralDfa1_0
case
return
jjMoveStringLiteralDfa1_0
case
return
jjMoveStringLiteralDfa1_0
case
return
jjMoveStringLiteralDfa1_0
case
return
jjMoveStringLiteralDfa1_0
case
return
jjMoveStringLiteralDfa1_0
case
return
jjMoveStringLiteralDfa1_0
case
return
jjStopAtPos
case
jjmatchedKind
return
jjMoveStringLiteralDfa1_0
case
return
jjStopAtPos
case
return
jjStopAtPos
case
return
jjMoveNfa_0
jjMoveStringLiteralDfa1_0
int
active0
long
active1
long
active2
long
try
curChar
readChar
catchClause
e
jjStopStringLiteralDfa_0
active0
active1
active2
return
switch
curChar
case
if
active1
return
jjStopAtPos
break
case
if
active1
return
jjStopAtPos
break
case
if
active1
return
jjStopAtPos
break
case
if
active1
block
jjmatchedKind
jjmatchedPos
return
jjMoveStringLiteralDfa2_0
active0
active1
active2
case
if
active1
return
jjStopAtPos
if
active1
return
jjStopAtPos
if
active1
return
jjStopAtPos
if
active1
return
jjStopAtPos
if
active1
return
jjStopAtPos
if
active1
return
jjStopAtPos
if
active1
return
jjStopAtPos
if
active1
return
jjStopAtPos
if
active1
return
jjStopAtPos
if
active1
return
jjStopAtPos
if
active1
return
jjStopAtPos
if
active1
return
jjStopAtPos
break
case
if
active1
block
jjmatchedKind
jjmatchedPos
return
jjMoveStringLiteralDfa2_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa2_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa2_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa2_0
active0
active1
active2
case
if
active0
return
jjStartNfaWithStates_0
break
case
return
jjMoveStringLiteralDfa2_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa2_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa2_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa2_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa2_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa2_0
active0
active1
active2
case
if
active0
block
jjmatchedKind
jjmatchedPos
return
jjMoveStringLiteralDfa2_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa2_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa2_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa2_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa2_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa2_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa2_0
active0
active1
active2
case
if
active1
return
jjStopAtPos
break
case
break
return
jjStartNfa_0
active0
active1
active2
jjMoveStringLiteralDfa2_0
int
old0
long
active0
long
old1
long
active1
long
old2
long
active2
long
if
active0
old0
active1
old1
active2
old2
return
jjStartNfa_0
old0
old1
old2
try
curChar
readChar
catchClause
e
jjStopStringLiteralDfa_0
active0
active1
active2
return
switch
curChar
case
if
active2
return
jjStopAtPos
if
active2
return
jjStopAtPos
break
case
if
active1
block
jjmatchedKind
jjmatchedPos
return
jjMoveStringLiteralDfa3_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa3_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa3_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa3_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa3_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa3_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa3_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa3_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa3_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa3_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa3_0
active0
active1
active2
case
if
active0
return
jjStartNfaWithStates_0
if
active1
block
jjmatchedKind
jjmatchedPos
return
jjMoveStringLiteralDfa3_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa3_0
active0
active1
active2
case
if
active0
block
jjmatchedKind
jjmatchedPos
if
active1
block
jjmatchedKind
jjmatchedPos
if
active1
block
jjmatchedKind
jjmatchedPos
return
jjMoveStringLiteralDfa3_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa3_0
active0
active1
active2
case
if
active0
return
jjStartNfaWithStates_0
break
case
if
active0
return
jjStartNfaWithStates_0
break
case
break
return
jjStartNfa_0
active0
active1
active2
jjMoveStringLiteralDfa3_0
int
old0
long
active0
long
old1
long
active1
long
old2
long
active2
long
if
active0
old0
active1
old1
active2
old2
return
jjStartNfa_0
old0
old1
old2
try
curChar
readChar
catchClause
e
jjStopStringLiteralDfa_0
active0
active1
active2
return
switch
curChar
case
if
active2
return
jjStopAtPos
break
case
return
jjMoveStringLiteralDfa4_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa4_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa4_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa4_0
active0
active1
active2
case
if
active0
return
jjStartNfaWithStates_0
if
active1
block
jjmatchedKind
jjmatchedPos
return
jjMoveStringLiteralDfa4_0
active0
active1
active2
case
if
active0
return
jjStartNfaWithStates_0
if
active0
return
jjStartNfaWithStates_0
if
active0
return
jjStartNfaWithStates_0
if
active0
return
jjStartNfaWithStates_0
return
jjMoveStringLiteralDfa4_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa4_0
active0
active1
active2
case
if
active0
return
jjStartNfaWithStates_0
return
jjMoveStringLiteralDfa4_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa4_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa4_0
active0
active1
active2
case
if
active0
return
jjStartNfaWithStates_0
return
jjMoveStringLiteralDfa4_0
active0
active1
active2
case
if
active0
return
jjStartNfaWithStates_0
break
case
return
jjMoveStringLiteralDfa4_0
active0
active1
active2
case
if
active0
return
jjStartNfaWithStates_0
return
jjMoveStringLiteralDfa4_0
active0
active1
active2
case
if
active0
return
jjStartNfaWithStates_0
return
jjMoveStringLiteralDfa4_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa4_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa4_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa4_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa4_0
active0
active1
active2
case
break
return
jjStartNfa_0
active0
active1
active2
jjMoveStringLiteralDfa4_0
int
old0
long
active0
long
old1
long
active1
long
old2
long
active2
long
if
active0
old0
active1
old1
active2
old2
return
jjStartNfa_0
old0
old1
old2
try
curChar
readChar
catchClause
e
jjStopStringLiteralDfa_0
active0
active1
active2
return
switch
curChar
case
return
jjMoveStringLiteralDfa5_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa5_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa5_0
active0
active1
active2
case
if
active0
return
jjStartNfaWithStates_0
if
active0
return
jjStartNfaWithStates_0
return
jjMoveStringLiteralDfa5_0
active0
active1
active2
case
if
active0
return
jjStartNfaWithStates_0
return
jjMoveStringLiteralDfa5_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa5_0
active0
active1
active2
case
if
active0
return
jjStartNfaWithStates_0
break
case
if
active0
block
jjmatchedKind
jjmatchedPos
return
jjMoveStringLiteralDfa5_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa5_0
active0
active1
active2
case
if
active1
return
jjStopAtPos
if
active1
return
jjStopAtPos
break
case
return
jjMoveStringLiteralDfa5_0
active0
active1
active2
case
if
active0
return
jjStartNfaWithStates_0
return
jjMoveStringLiteralDfa5_0
active0
active1
active2
case
if
active0
return
jjStartNfaWithStates_0
if
active0
return
jjStartNfaWithStates_0
if
active0
return
jjStartNfaWithStates_0
return
jjMoveStringLiteralDfa5_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa5_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa5_0
active0
active1
active2
case
if
active0
block
jjmatchedKind
jjmatchedPos
return
jjMoveStringLiteralDfa5_0
active0
active1
active2
case
break
return
jjStartNfa_0
active0
active1
active2
jjMoveStringLiteralDfa5_0
int
old0
long
active0
long
old1
long
active1
long
old2
long
active2
long
if
active0
old0
active1
old1
active2
old2
return
jjStartNfa_0
old0
old1
old2
try
curChar
readChar
catchClause
e
jjStopStringLiteralDfa_0
active0
active1
active2
return
switch
curChar
case
return
jjMoveStringLiteralDfa6_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa6_0
active0
active1
active2
case
if
active0
return
jjStartNfaWithStates_0
if
active0
return
jjStartNfaWithStates_0
return
jjMoveStringLiteralDfa6_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa6_0
active0
active1
active2
case
if
active0
return
jjStartNfaWithStates_0
if
active0
return
jjStartNfaWithStates_0
break
case
return
jjMoveStringLiteralDfa6_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa6_0
active0
active1
active2
case
if
active0
return
jjStartNfaWithStates_0
break
case
return
jjMoveStringLiteralDfa6_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa6_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa6_0
active0
active1
active2
case
if
active0
return
jjStartNfaWithStates_0
return
jjMoveStringLiteralDfa6_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa6_0
active0
active1
active2
case
if
active0
return
jjStartNfaWithStates_0
return
jjMoveStringLiteralDfa6_0
active0
active1
active2
case
if
active0
return
jjStartNfaWithStates_0
return
jjMoveStringLiteralDfa6_0
active0
active1
active2
case
break
return
jjStartNfa_0
active0
active1
active2
jjMoveStringLiteralDfa6_0
int
old0
long
active0
long
old1
long
active1
long
old2
long
active2
long
if
active0
old0
active1
old1
active2
old2
return
jjStartNfa_0
old0
old1
old2
try
curChar
readChar
catchClause
e
jjStopStringLiteralDfa_0
active0
active1
active2
return
switch
curChar
case
return
jjMoveStringLiteralDfa7_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa7_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa7_0
active0
active1
active2
case
if
active0
return
jjStartNfaWithStates_0
if
active0
return
jjStartNfaWithStates_0
return
jjMoveStringLiteralDfa7_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa7_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa7_0
active0
active1
active2
case
if
active0
return
jjStartNfaWithStates_0
break
case
return
jjMoveStringLiteralDfa7_0
active0
active1
active2
case
if
active0
return
jjStartNfaWithStates_0
return
jjMoveStringLiteralDfa7_0
active0
active1
active2
case
if
active0
return
jjStartNfaWithStates_0
return
jjMoveStringLiteralDfa7_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa7_0
active0
active1
active2
case
if
active0
return
jjStartNfaWithStates_0
break
case
break
return
jjStartNfa_0
active0
active1
active2
jjMoveStringLiteralDfa7_0
int
old0
long
active0
long
old1
long
active1
long
old2
long
active2
long
if
active0
old0
active1
old1
active2
old2
return
jjStartNfa_0
old0
old1
old2
try
curChar
readChar
catchClause
e
jjStopStringLiteralDfa_0
active0
active1
active2
return
switch
curChar
case
return
jjMoveStringLiteralDfa8_0
active0
active1
active2
case
if
active0
return
jjStartNfaWithStates_0
if
active0
return
jjStartNfaWithStates_0
return
jjMoveStringLiteralDfa8_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa8_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa8_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa8_0
active0
active1
active2
case
if
active0
return
jjStartNfaWithStates_0
break
case
return
jjMoveStringLiteralDfa8_0
active0
active1
active2
case
if
active0
return
jjStartNfaWithStates_0
break
case
return
jjMoveStringLiteralDfa8_0
active0
active1
active2
case
break
return
jjStartNfa_0
active0
active1
active2
jjMoveStringLiteralDfa8_0
int
old0
long
active0
long
old1
long
active1
long
old2
long
active2
long
if
active0
old0
active1
old1
active2
old2
return
jjStartNfa_0
old0
old1
old2
try
curChar
readChar
catchClause
e
jjStopStringLiteralDfa_0
active0
active1
active2
return
switch
curChar
case
return
jjMoveStringLiteralDfa9_0
active0
active1
active2
case
if
active0
return
jjStartNfaWithStates_0
break
case
if
active0
return
jjStartNfaWithStates_0
break
case
return
jjMoveStringLiteralDfa9_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa9_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa9_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa9_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa9_0
active0
active1
active2
case
if
active0
return
jjStartNfaWithStates_0
return
jjMoveStringLiteralDfa9_0
active0
active1
active2
case
break
return
jjStartNfa_0
active0
active1
active2
jjMoveStringLiteralDfa9_0
int
old0
long
active0
long
old1
long
active1
long
old2
long
active2
long
if
active0
old0
active1
old1
active2
old2
return
jjStartNfa_0
old0
old1
old2
try
curChar
readChar
catchClause
e
jjStopStringLiteralDfa_0
active0
active1
active2
return
switch
curChar
case
return
jjMoveStringLiteralDfa10_0
active0
active1
active2
case
if
active0
return
jjStartNfaWithStates_0
return
jjMoveStringLiteralDfa10_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa10_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa10_0
active0
active1
active2
case
if
active1
return
jjStopAtPos
break
case
return
jjMoveStringLiteralDfa10_0
active0
active1
active2
case
if
active0
return
jjStartNfaWithStates_0
return
jjMoveStringLiteralDfa10_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa10_0
active0
active1
active2
case
break
return
jjStartNfa_0
active0
active1
active2
jjMoveStringLiteralDfa10_0
int
old0
long
active0
long
old1
long
active1
long
old2
long
active2
long
if
active0
old0
active1
old1
active2
old2
return
jjStartNfa_0
old0
old1
old2
try
curChar
readChar
catchClause
e
jjStopStringLiteralDfa_0
active0
active1
active2
return
switch
curChar
case
return
jjMoveStringLiteralDfa11_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa11_0
active0
active1
active2
case
return
jjMoveStringLiteralDfa11_0
active0
active1
active2
case
if
active1
return
jjStopAtPos
return
jjMoveStringLiteralDfa11_0
active0
active1
active2
case
if
active1
return
jjStopAtPos
break
case
if
active1
block
jjmatchedKind
jjmatchedPos
return
jjMoveStringLiteralDfa11_0
active0
active1
active2
case
break
return
jjStartNfa_0
active0
active1
active2
jjMoveStringLiteralDfa11_0
int
old0
long
active0
long
old1
long
active1
long
old2
long
active2
long
if
active0
old0
active1
old1
active2
old2
return
jjStartNfa_0
old0
old1
old2
try
curChar
readChar
catchClause
e
jjStopStringLiteralDfa_0
active0
active1
active2
return
switch
curChar
case
return
jjMoveStringLiteralDfa12_0
active0
active1
active2
case
if
active0
return
jjStartNfaWithStates_0
if
active1
return
jjStopAtPos
break
case
return
jjMoveStringLiteralDfa12_0
active0
active1
active2
case
if
active1
block
jjmatchedKind
jjmatchedPos
return
jjMoveStringLiteralDfa12_0
active0
active1
active2
case
break
return
jjStartNfa_0
active0
active1
active2
jjMoveStringLiteralDfa12_0
int
old0
long
active0
long
old1
long
active1
long
old2
long
active2
long
if
active0
old0
active1
old1
active2
old2
return
jjStartNfa_0
old0
old1
old2
try
curChar
readChar
catchClause
e
jjStopStringLiteralDfa_0
active1
active2
return
switch
curChar
case
return
jjMoveStringLiteralDfa13_0
active1
active2
case
return
jjMoveStringLiteralDfa13_0
active1
active2
case
return
jjMoveStringLiteralDfa13_0
active1
active2
case
break
return
jjStartNfa_0
active1
active2
jjMoveStringLiteralDfa13_0
int
old1
long
active1
long
old2
long
active2
long
if
active1
old1
active2
old2
return
jjStartNfa_0
old1
old2
try
curChar
readChar
catchClause
e
jjStopStringLiteralDfa_0
active1
active2
return
switch
curChar
case
return
jjMoveStringLiteralDfa14_0
active1
active2
case
return
jjMoveStringLiteralDfa14_0
active1
active2
case
return
jjMoveStringLiteralDfa14_0
active1
active2
case
break
return
jjStartNfa_0
active1
active2
jjMoveStringLiteralDfa14_0
int
old1
long
active1
long
old2
long
active2
long
if
active1
old1
active2
old2
return
jjStartNfa_0
old1
old2
try
curChar
readChar
catchClause
e
jjStopStringLiteralDfa_0
active1
active2
return
switch
curChar
case
return
jjMoveStringLiteralDfa15_0
active1
active2
case
return
jjMoveStringLiteralDfa15_0
active1
active2
case
break
return
jjStartNfa_0
active1
active2
jjMoveStringLiteralDfa15_0
int
old1
long
active1
long
old2
long
active2
long
if
active1
old1
active2
old2
return
jjStartNfa_0
old1
old2
try
curChar
readChar
catchClause
e
jjStopStringLiteralDfa_0
active1
active2
return
switch
curChar
case
return
jjMoveStringLiteralDfa16_0
active1
active2
case
return
jjMoveStringLiteralDfa16_0
active1
active2
case
return
jjMoveStringLiteralDfa16_0
active1
active2
case
break
return
jjStartNfa_0
active1
active2
jjMoveStringLiteralDfa16_0
int
old1
long
active1
long
old2
long
active2
long
if
active1
old1
active2
old2
return
jjStartNfa_0
old1
old2
try
curChar
readChar
catchClause
e
jjStopStringLiteralDfa_0
active1
active2
return
switch
curChar
case
return
jjMoveStringLiteralDfa17_0
active1
active2
case
return
jjMoveStringLiteralDfa17_0
active1
active2
case
return
jjMoveStringLiteralDfa17_0
active1
active2
case
break
return
jjStartNfa_0
active1
active2
jjMoveStringLiteralDfa17_0
int
old1
long
active1
long
old2
long
active2
long
if
active1
old1
active2
old2
return
jjStartNfa_0
old1
old2
try
curChar
readChar
catchClause
e
jjStopStringLiteralDfa_0
active1
active2
return
switch
curChar
case
return
jjMoveStringLiteralDfa18_0
active1
active2
case
return
jjMoveStringLiteralDfa18_0
active1
active2
case
if
active2
return
jjStopAtPos
break
case
break
return
jjStartNfa_0
active1
active2
jjMoveStringLiteralDfa18_0
int
old1
long
active1
long
old2
long
active2
long
if
active1
old1
active2
old2
return
jjStartNfa_0
old1
old2
try
curChar
readChar
catchClause
e
jjStopStringLiteralDfa_0
active1
active2
return
switch
curChar
case
return
jjMoveStringLiteralDfa19_0
active1
active2
case
if
active2
return
jjStopAtPos
break
case
break
return
jjStartNfa_0
active1
active2
jjMoveStringLiteralDfa19_0
int
old1
long
active1
long
old2
long
active2
long
if
active1
old1
active2
old2
return
jjStartNfa_0
old1
old2
try
curChar
readChar
catchClause
e
jjStopStringLiteralDfa_0
active1
active2
return
switch
curChar
case
return
jjMoveStringLiteralDfa20_0
active1
active2
case
break
return
jjStartNfa_0
active1
active2
jjMoveStringLiteralDfa20_0
int
old1
long
active1
long
old2
long
active2
long
if
active1
old1
active2
old2
return
jjStartNfa_0
old1
old2
try
curChar
readChar
catchClause
e
jjStopStringLiteralDfa_0
active1
active2
return
switch
curChar
case
if
active1
block
jjmatchedKind
jjmatchedPos
return
jjMoveStringLiteralDfa21_0
active1
active2
case
break
return
jjStartNfa_0
active1
active2
jjMoveStringLiteralDfa21_0
int
old1
long
active1
long
old2
long
active2
long
if
active1
old1
active2
old2
return
jjStartNfa_0
old1
old2
try
curChar
readChar
catchClause
e
jjStopStringLiteralDfa_0
active2
return
switch
curChar
case
return
jjMoveStringLiteralDfa22_0
active2
case
break
return
jjStartNfa_0
active2
jjMoveStringLiteralDfa22_0
int
old2
long
active2
long
if
active2
old2
return
jjStartNfa_0
old2
try
curChar
readChar
catchClause
e
jjStopStringLiteralDfa_0
active2
return
switch
curChar
case
return
jjMoveStringLiteralDfa23_0
active2
case
break
return
jjStartNfa_0
active2
jjMoveStringLiteralDfa23_0
int
old2
long
active2
long
if
active2
old2
return
jjStartNfa_0
old2
try
curChar
readChar
catchClause
e
jjStopStringLiteralDfa_0
active2
return
switch
curChar
case
return
jjMoveStringLiteralDfa24_0
active2
case
break
return
jjStartNfa_0
active2
jjMoveStringLiteralDfa24_0
int
old2
long
active2
long
if
active2
old2
return
jjStartNfa_0
old2
try
curChar
readChar
catchClause
e
jjStopStringLiteralDfa_0
active2
return
switch
curChar
case
return
jjMoveStringLiteralDfa25_0
active2
case
break
return
jjStartNfa_0
active2
jjMoveStringLiteralDfa25_0
int
old2
long
active2
long
if
active2
old2
return
jjStartNfa_0
old2
try
curChar
readChar
catchClause
e
jjStopStringLiteralDfa_0
active2
return
switch
curChar
case
return
jjMoveStringLiteralDfa26_0
active2
case
break
return
jjStartNfa_0
active2
jjMoveStringLiteralDfa26_0
int
old2
long
active2
long
if
active2
old2
return
jjStartNfa_0
old2
try
curChar
readChar
catchClause
e
jjStopStringLiteralDfa_0
active2
return
switch
curChar
case
return
jjMoveStringLiteralDfa27_0
active2
case
break
return
jjStartNfa_0
active2
jjMoveStringLiteralDfa27_0
int
old2
long
active2
long
if
active2
old2
return
jjStartNfa_0
old2
try
curChar
readChar
catchClause
e
jjStopStringLiteralDfa_0
active2
return
switch
curChar
case
if
active2
return
jjStopAtPos
break
case
break
return
jjStartNfa_0
active2
jjCheckNAdd
state
int
if
jjrounds
state
jjround
block
jjstateSet
jjnewStateCnt
state
jjrounds
state
jjround
jjAddStates
start
int
end
int
do
start
end
block
jjstateSet
jjnewStateCnt
jjnextStates
start
jjCheckNAddTwoStates
state1
int
state2
int
jjCheckNAdd
state1
jjCheckNAdd
state2
jjCheckNAddStates
start
int
end
int
do
start
end
block
jjCheckNAdd
jjnextStates
start
jjCheckNAddStates
start
int
jjCheckNAdd
jjnextStates
start
jjCheckNAdd
jjnextStates
start
long
jjbitVec0
long
jjbitVec1
long
jjbitVec3
long
jjbitVec4
long
jjbitVec5
long
jjbitVec6
long
jjbitVec7
long
jjbitVec8
jjMoveNfa_0
int
startState
int
curPos
int
int
nextStates
int
startsAt
jjnewStateCnt
int
i
jjstateSet
startState
int
j
kind
for
forControl
block
if
jjround
ReInitRounds
if
curChar
block
long
l
curChar
do
i
startsAt
block
switch
jjstateSet
i
case
if
l
block
if
kind
kind
jjCheckNAdd
if
l
jjCheckNAddStates
if
curChar
jjAddStates
if
curChar
block
if
kind
kind
jjCheckNAdd
if
curChar
jjCheckNAddStates
if
curChar
jjAddStates
if
curChar
jjCheckNAdd
if
curChar
jjstateSet
jjnewStateCnt
if
l
block
if
kind
kind
jjCheckNAddTwoStates
if
curChar
block
if
kind
kind
jjCheckNAddStates
break
case
if
curChar
jjstateSet
jjnewStateCnt
if
curChar
block
if
kind
kind
jjCheckNAddStates
if
curChar
jjCheckNAdd
break
case
if
l
break
if
kind
kind
jjCheckNAdd
break
case
if
curChar
jjCheckNAddStates
break
case
if
l
jjCheckNAddStates
break
case
if
l
kind
kind
break
case
if
curChar
kind
kind
break
case
if
curChar
jjstateSet
jjnewStateCnt
break
case
if
l
break
if
kind
kind
jjCheckNAddTwoStates
break
case
if
l
break
if
kind
kind
jjCheckNAddTwoStates
break
case
if
curChar
jjCheckNAdd
break
case
if
l
break
if
kind
kind
jjCheckNAddStates
break
case
if
l
jjCheckNAdd
break
case
if
l
break
if
kind
kind
jjCheckNAddTwoStates
break
case
if
curChar
jjAddStates
break
case
if
l
jjCheckNAdd
break
case
if
curChar
kind
kind
break
case
if
l
jjCheckNAdd
break
case
if
l
jjCheckNAddTwoStates
break
case
if
l
jjCheckNAdd
break
case
if
l
jjstateSet
jjnewStateCnt
break
case
if
l
jjCheckNAdd
break
case
if
curChar
jjCheckNAddStates
break
case
if
l
jjCheckNAddStates
break
case
if
l
jjCheckNAddStates
break
case
if
curChar
kind
kind
break
case
if
l
jjCheckNAddStates
break
case
if
l
jjCheckNAddStates
break
case
if
l
jjstateSet
jjnewStateCnt
break
case
if
l
jjCheckNAdd
break
case
if
curChar
break
if
kind
kind
jjCheckNAdd
break
case
if
l
break
if
kind
kind
jjCheckNAdd
break
case
if
l
jjCheckNAddStates
break
case
if
l
jjCheckNAddTwoStates
break
case
if
curChar
break
if
kind
kind
jjCheckNAddStates
break
case
if
l
break
if
kind
kind
jjCheckNAddStates
break
case
if
l
jjCheckNAdd
break
case
if
l
break
if
kind
kind
jjCheckNAddTwoStates
break
case
if
l
jjCheckNAddTwoStates
break
case
if
l
jjCheckNAdd
break
case
if
l
break
if
kind
kind
jjCheckNAddTwoStates
break
case
if
l
jjCheckNAddStates
break
case
if
l
jjCheckNAdd
break
case
if
l
jjCheckNAddTwoStates
break
case
if
curChar
break
if
kind
kind
jjCheckNAddStates
break
case
if
l
break
if
kind
kind
jjCheckNAddTwoStates
break
case
if
l
break
if
kind
kind
jjCheckNAddTwoStates
break
case
if
curChar
jjAddStates
break
case
if
l
break
if
kind
kind
jjCheckNAddStates
break
case
if
l
kind
kind
break
case
if
curChar
kind
kind
break
case
if
curChar
jjstateSet
jjnewStateCnt
break
case
if
curChar
jjCheckNAdd
break
case
if
l
jjCheckNAddTwoStates
break
case
if
curChar
jjCheckNAddStates
break
case
if
l
jjCheckNAddTwoStates
break
case
if
l
jjCheckNAddTwoStates
break
case
if
curChar
kind
kind
break
case
if
curChar
jjCheckNAddTwoStates
break
case
if
l
jjCheckNAddTwoStates
break
case
if
curChar
jjCheckNAddStates
break
case
if
l
jjCheckNAddTwoStates
break
case
if
l
jjCheckNAddTwoStates
break
case
if
curChar
kind
kind
break
case
if
curChar
jjstateSet
jjnewStateCnt
break
case
break
if
curChar
block
long
l
curChar
do
i
startsAt
block
switch
jjstateSet
i
case
if
l
break
if
kind
kind
jjCheckNAdd
break
case
jjAddStates
break
case
if
l
kind
kind
break
case
if
l
jjAddStates
break
case
if
l
kind
kind
break
case
if
l
jjCheckNAdd
break
case
if
curChar
jjAddStates
break
case
if
l
jjCheckNAdd
break
case
if
l
jjCheckNAddStates
break
case
if
curChar
jjAddStates
break
case
if
l
jjCheckNAddStates
break
case
if
l
jjAddStates
break
case
if
l
jjAddStates
break
case
if
l
jjAddStates
break
case
if
l
jjCheckNAdd
break
case
if
l
break
if
kind
kind
jjCheckNAddTwoStates
break
case
if
kind
kind
jjAddStates
break
case
jjCheckNAddTwoStates
break
case
jjCheckNAddTwoStates
break
case
jjCheckNAddTwoStates
break
case
jjCheckNAddTwoStates
break
case
break
block
int
hiByte
int
curChar
int
i1
hiByte
long
l1
hiByte
int
i2
curChar
long
l2
curChar
do
i
startsAt
block
switch
jjstateSet
i
case
if
jjCanMove_0
hiByte
i1
i2
l1
l2
block
if
kind
kind
jjCheckNAdd
if
jjCanMove_2
hiByte
i1
i2
l1
l2
block
if
kind
kind
jjCheckNAdd
break
case
if
jjCanMove_0
hiByte
i1
i2
l1
l2
break
if
kind
kind
jjCheckNAdd
break
case
if
jjCanMove_1
hiByte
i1
i2
l1
l2
jjAddStates
break
case
if
jjCanMove_1
hiByte
i1
i2
l1
l2
jjstateSet
jjnewStateCnt
break
case
if
jjCanMove_1
hiByte
i1
i2
l1
l2
jjAddStates
break
case
if
jjCanMove_2
hiByte
i1
i2
l1
l2
break
if
kind
kind
jjCheckNAdd
break
case
if
jjCanMove_1
hiByte
i1
i2
l1
l2
break
if
kind
kind
jjAddStates
break
case
if
jjCanMove_1
hiByte
i1
i2
l1
l2
jjCheckNAddTwoStates
break
case
if
jjCanMove_1
hiByte
i1
i2
l1
l2
jjCheckNAddTwoStates
break
case
if
jjCanMove_1
hiByte
i1
i2
l1
l2
jjCheckNAddTwoStates
break
case
if
jjCanMove_1
hiByte
i1
i2
l1
l2
jjCheckNAddTwoStates
break
case
break
if
kind
block
jjmatchedKind
kind
jjmatchedPos
curPos
kind
curPos
if
i
jjnewStateCnt
startsAt
jjnewStateCnt
startsAt
return
curPos
try
curChar
readChar
catchClause
e
return
curPos
int
jjnextStates
jjCanMove_0
boolean
hiByte
int
i1
int
i2
int
l1
long
l2
long
switch
hiByte
case
return
jjbitVec0
i2
l2
case
return
jjCanMove_1
boolean
hiByte
int
i1
int
i2
int
l1
long
l2
long
switch
hiByte
case
return
jjbitVec0
i2
l2
case
if
jjbitVec1
i1
l1
return
return
jjCanMove_2
boolean
hiByte
int
i1
int
i2
int
l1
long
l2
long
switch
hiByte
case
return
jjbitVec4
i2
l2
case
return
jjbitVec5
i2
l2
case
return
jjbitVec6
i2
l2
case
return
jjbitVec7
i2
l2
case
return
jjbitVec8
i2
l2
case
if
jjbitVec3
i1
l1
return
return
String
jjstrLiteralImages
String
lexStateNames
long
jjtoToken
long
jjtoSkip
long
jjtoSpecial
JavaCharStream
input_stream
int
jjrounds
int
int
jjstateSet
int
char
curChar
ParserTokenManager
stream
JavaCharStream
if
staticFlag
throw
Error
input_stream
stream
ParserTokenManager
stream
JavaCharStream
lexState
int
stream
SwitchTo
lexState
ReInit
stream
JavaCharStream
jjmatchedPos
jjnewStateCnt
curLexState
defaultLexState
input_stream
stream
ReInitRounds
ReInitRounds
int
i
jjround
for
forControl
i
i
jjrounds
i
ReInit
stream
JavaCharStream
lexState
int
ReInit
stream
SwitchTo
lexState
SwitchTo
lexState
int
if
lexState
lexState
throw
TokenMgrError
lexState
INVALID_LEXICAL_STATE
curLexState
lexState
jjFillToken
Token
Token
t
newToken
jjmatchedKind
kind
jjmatchedKind
String
im
jjstrLiteralImages
jjmatchedKind
image
im
GetImage
im
beginLine
getBeginLine
beginColumn
getBeginColumn
endLine
getEndLine
endColumn
getEndColumn
return
t
int
curLexState
int
defaultLexState
int
jjnewStateCnt
int
jjround
int
jjmatchedPos
int
jjmatchedKind
getNextToken
Token
int
kind
Token
specialToken
Token
matchedToken
int
curPos
for
forControl
block
try
curChar
BeginToken
catchClause
e
jjmatchedKind
matchedToken
jjFillToken
specialToken
specialToken
return
matchedToken
jjmatchedKind
jjmatchedPos
curPos
jjMoveStringLiteralDfa0_0
if
jjmatchedKind
block
if
jjmatchedPos
curPos
backup
curPos
jjmatchedPos
if
jjtoToken
jjmatchedKind
jjmatchedKind
block
matchedToken
jjFillToken
specialToken
specialToken
return
matchedToken
block
if
jjtoSpecial
jjmatchedKind
jjmatchedKind
block
matchedToken
jjFillToken
if
specialToken
specialToken
matchedToken
block
specialToken
specialToken
specialToken
next
matchedToken
continue
int
error_line
getEndLine
int
error_column
getEndColumn
String
error_after
boolean
EOFSeen
try
readChar
backup
catchClause
e1
EOFSeen
error_after
curPos
GetImage
if
curChar
curChar
block
error_line
error_column
error_column
if
EOFSeen
block
backup
error_after
curPos
GetImage
throw
TokenMgrError
EOFSeen
curLexState
error_line
error_column
error_after
curChar
LEXICAL_ERROR
ParserConstants
