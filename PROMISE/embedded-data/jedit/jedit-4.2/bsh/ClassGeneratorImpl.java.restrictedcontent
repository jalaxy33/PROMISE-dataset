ClassGeneratorImpl
generateClass
Class
name
String
modifiers
Modifiers
interfaces
Class
superClass
Class
block
BSHBlock
isInterface
boolean
callstack
CallStack
interpreter
Interpreter
return
generateClassImpl
name
modifiers
interfaces
superClass
block
isInterface
callstack
interpreter
invokeSuperclassMethod
Object
bcm
BshClassManager
instance
Object
methodName
String
args
Object
return
invokeSuperclassMethodImpl
bcm
instance
methodName
args
setInstanceNameSpaceParent
instance
Object
className
String
parent
NameSpace
This
ithis
getClassInstanceThis
instance
className
getNameSpace
setParent
parent
generateClassImpl
Class
name
String
modifiers
Modifiers
interfaces
Class
superClass
Class
block
BSHBlock
isInterface
boolean
callstack
CallStack
interpreter
Interpreter
setAccessibility
if
haveAccessibility
throw
InterpreterError
NameSpace
enclosingNameSpace
top
String
packageName
getPackage
String
className
isClass
getName
name
name
String
fqClassName
packageName
className
packageName
className
BshClassManager
bcm
getClassManager
definingClass
fqClassName
NameSpace
classStaticNameSpace
NameSpace
enclosingNameSpace
className
isClass
push
classStaticNameSpace
evalBlock
callstack
interpreter
CLASSCLASSES
Variable
variables
getDeclaredVariables
block
callstack
interpreter
packageName
DelayedEvalBshMethod
methods
getDeclaredMethods
block
callstack
interpreter
packageName
ClassGeneratorUtil
classGenerator
ClassGeneratorUtil
modifiers
className
packageName
superClass
interfaces
variables
methods
classStaticNameSpace
isInterface
byte
code
generateClass
String
dir
getProperty
if
dir
try
FileOutputStream
out
FileOutputStream
dir
className
write
code
close
catchClause
e
Class
genClass
defineClass
fqClassName
code
importClass
replace
try
setLocalVariable
BSHINIT
block
catchClause
e
throw
InterpreterError
e
setClassStatic
genClass
evalBlock
callstack
interpreter
CLASSSTATIC
pop
if
isInterface
block
String
bshStaticFieldName
BSHSTATIC
className
try
LHS
lhs
getLHSStaticField
genClass
bshStaticFieldName
assign
getThis
interpreter
catchClause
e
throw
InterpreterError
e
doneDefiningClass
fqClassName
return
genClass
getDeclaredVariables
Variable
body
BSHBlock
callstack
CallStack
interpreter
Interpreter
defaultPackage
String
List
vars
ArrayList
for
forControl
int
child
child
jjtGetNumChildren
child
block
SimpleNode
node
SimpleNode
jjtGetChild
child
if
node
BSHTypedVariableDeclaration
block
BSHTypedVariableDeclaration
tvd
BSHTypedVariableDeclaration
node
Modifiers
modifiers
modifiers
String
type
getTypeDescriptor
callstack
interpreter
defaultPackage
BSHVariableDeclarator
vardec
getDeclarators
for
forControl
int
i
i
length
i
block
String
name
vardec
i
name
try
Variable
var
Variable
name
type
modifiers
add
var
catchClause
e
return
Variable
toArray
Variable
getDeclaredMethods
DelayedEvalBshMethod
body
BSHBlock
callstack
CallStack
interpreter
Interpreter
defaultPackage
String
List
methods
ArrayList
for
forControl
int
child
child
jjtGetNumChildren
child
block
SimpleNode
node
SimpleNode
jjtGetChild
child
if
node
BSHMethodDeclaration
block
BSHMethodDeclaration
md
BSHMethodDeclaration
node
insureNodesParsed
Modifiers
modifiers
modifiers
String
name
name
String
returnType
getReturnTypeDescriptor
callstack
interpreter
defaultPackage
BSHReturnType
returnTypeNode
getReturnTypeNode
BSHFormalParameters
paramTypesNode
paramsNode
String
paramTypes
getTypeDescriptors
callstack
interpreter
defaultPackage
DelayedEvalBshMethod
bm
DelayedEvalBshMethod
name
returnType
returnTypeNode
getParamNames
paramTypes
paramTypesNode
blockNode
modifiers
callstack
interpreter
add
bm
return
DelayedEvalBshMethod
toArray
DelayedEvalBshMethod
ClassNodeFilter
int
STATIC
INSTANCE
CLASSES
ClassNodeFilter
CLASSSTATIC
ClassNodeFilter
STATIC
ClassNodeFilter
CLASSINSTANCE
ClassNodeFilter
INSTANCE
ClassNodeFilter
CLASSCLASSES
ClassNodeFilter
CLASSES
int
context
ClassNodeFilter
context
int
context
context
isVisible
boolean
node
SimpleNode
if
context
CLASSES
return
node
BSHClassDeclaration
if
node
BSHClassDeclaration
return
if
context
STATIC
return
isStatic
node
if
context
INSTANCE
return
isStatic
node
return
isStatic
boolean
node
SimpleNode
if
node
BSHTypedVariableDeclaration
return
BSHTypedVariableDeclaration
node
BSHTypedVariableDeclaration
node
if
node
BSHMethodDeclaration
return
BSHMethodDeclaration
node
BSHMethodDeclaration
node
if
node
BSHBlock
return
return
BSHBlock
NodeFilter
invokeSuperclassMethodImpl
Object
bcm
BshClassManager
instance
Object
methodName
String
args
Object
String
superName
BSHSUPER
methodName
Class
clas
getClass
Method
superMethod
resolveJavaMethod
bcm
clas
superName
getTypes
args
if
superMethod
return
invokeOnMethod
superMethod
instance
args
Class
superClass
getSuperclass
superMethod
resolveExpectedJavaMethod
bcm
superClass
instance
methodName
args
return
invokeOnMethod
superMethod
instance
args
ClassGenerator
