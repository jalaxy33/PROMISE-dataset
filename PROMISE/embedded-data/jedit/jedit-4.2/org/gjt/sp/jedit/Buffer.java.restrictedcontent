Buffer
String
LINESEP
String
BACKED_UP
String
CARET
String
SELECTION
String
SCROLL_VERT
String
SCROLL_HORIZ
String
ENCODING
String
ENCODING_AUTODETECT
String
TRAILING_EOL
String
GZIPPED
reload
view
View
if
getFlag
DIRTY
block
String
args
path
int
result
confirm
view
args
YES_NO_OPTION
WARNING_MESSAGE
if
result
YES_OPTION
return
getEditPane
saveCaretInfo
load
view
load
boolean
view
View
reload
boolean
if
isPerformingIO
block
error
view
return
setBooleanProperty
ERROR_OCCURRED
setFlag
LOADING
if
getFlag
TEMPORARY
send
BufferUpdate
view
LOAD_STARTED
boolean
loadAutosave
if
reload
getFlag
NEW_FILE
block
if
file
modTime
lastModified
if
reload
autosaveFile
exists
loadAutosave
recoverAutosave
view
block
if
autosaveFile
delete
loadAutosave
if
loadAutosave
block
VFS
vfs
getVFSForPath
path
if
checkFileForLoad
view
vfs
path
block
setFlag
LOADING
return
if
reload
getFlag
NEW_FILE
block
if
load
view
path
block
setFlag
LOADING
return
loadAutosave
Runnable
runnable
Runnable
run
String
newPath
getStringProperty
NEW_PATH
Segment
seg
Segment
getProperty
LOAD_DATA
IntegerArray
endOffsets
IntegerArray
getProperty
END_OFFSETS
if
seg
seg
Segment
char
if
endOffsets
block
endOffsets
IntegerArray
add
try
writeLock
firePreContentRemoved
getLineCount
getLength
remove
getLength
contentRemoved
getLineCount
getLength
contentRemoved
getLength
fireContentRemoved
getLineCount
getLength
_setContent
array
count
_contentInserted
endOffsets
contentInserted
count
fireContentInserted
getSize
count
writeUnlock
unsetProperty
LOAD_DATA
unsetProperty
END_OFFSETS
unsetProperty
NEW_PATH
clear
setLimit
getIntegerProperty
if
getFlag
TEMPORARY
finishLoading
setFlag
LOADING
if
reload
setDirty
if
loadAutosave
newPath
setPath
newPath
if
loadAutosave
setFlag
DIRTY
if
getFlag
TEMPORARY
block
send
BufferUpdate
view
LOADED
if
getFlag
TEMPORARY
run
runInAWTThread
runnable
return
insertFile
boolean
view
View
path
String
if
isPerformingIO
block
error
view
return
setBooleanProperty
ERROR_OCCURRED
path
constructPath
path
path
Buffer
buffer
getBuffer
path
if
buffer
block
getTextArea
setSelectedText
getText
getLength
return
VFS
vfs
getVFSForPath
path
return
insert
view
path
autosave
if
autosaveFile
getFlag
AUTOSAVE_DIRTY
getFlag
DIRTY
getFlag
LOADING
getFlag
IO
return
setFlag
AUTOSAVE_DIRTY
runInWorkThread
BufferIORequest
AUTOSAVE
getFileVFS
getPath
saveAs
boolean
view
View
rename
boolean
String
files
showVFSFileDialog
view
path
SAVE_DIALOG
if
files
return
return
save
view
files
rename
save
boolean
view
View
path
String
return
save
view
path
save
boolean
view
View
path
String
rename
boolean
if
isPerformingIO
block
error
view
return
setBooleanProperty
ERROR_OCCURRED
if
path
getFlag
NEW_FILE
return
saveAs
view
rename
if
path
file
block
long
newModTime
lastModified
if
newModTime
modTime
getBooleanProperty
block
Object
args
path
int
result
confirm
view
args
YES_NO_OPTION
WARNING_MESSAGE
if
result
YES_OPTION
return
send
BufferUpdate
view
SAVING
setFlag
IO
String
oldPath
path
String
oldSymlinkPath
symlinkPath
String
newPath
path
path
path
VFS
vfs
getVFSForPath
newPath
if
checkFileForSave
view
vfs
newPath
block
setFlag
IO
return
if
save
view
newPath
block
setFlag
IO
return
runInAWTThread
Runnable
run
setFlag
IO
finishSaving
view
oldPath
oldSymlinkPath
newPath
rename
getBooleanProperty
ERROR_OCCURRED
return
int
FILE_NOT_CHANGED
int
FILE_CHANGED
int
FILE_DELETED
checkFileStatus
int
view
View
if
getFlag
IO
getFlag
LOADING
file
getFlag
NEW_FILE
block
boolean
newReadOnly
exists
canWrite
if
newReadOnly
getFlag
READ_ONLY
block
setFlag
READ_ONLY
newReadOnly
send
BufferUpdate
DIRTY_CHANGED
long
oldModTime
modTime
long
newModTime
lastModified
if
newModTime
oldModTime
block
modTime
newModTime
if
exists
block
setFlag
NEW_FILE
setDirty
return
FILE_DELETED
block
return
FILE_CHANGED
return
FILE_NOT_CHANGED
getLastModified
long
return
modTime
setLastModified
modTime
long
modTime
modTime
getVFS
VFS
return
getVFSForPath
path
getAutosaveFile
File
return
autosaveFile
getName
String
return
name
getPath
String
return
path
getSymlinkPath
String
return
symlinkPath
getDirectory
String
return
directory
isClosed
boolean
return
getFlag
CLOSED
isLoaded
boolean
return
getFlag
LOADING
isPerformingIO
boolean
return
getFlag
LOADING
getFlag
IO
isNewFile
boolean
return
getFlag
NEW_FILE
setNewFile
newFile
boolean
setFlag
NEW_FILE
newFile
if
newFile
setFlag
UNTITLED
isUntitled
boolean
return
getFlag
UNTITLED
isDirty
boolean
return
getFlag
DIRTY
isReadOnly
boolean
return
getFlag
READ_ONLY
getFlag
READ_ONLY_OVERRIDE
isEditable
boolean
return
getFlag
READ_ONLY
getFlag
READ_ONLY_OVERRIDE
getFlag
IO
getFlag
LOADING
setReadOnly
readOnly
boolean
setFlag
READ_ONLY_OVERRIDE
readOnly
setDirty
d
boolean
boolean
old_d
getFlag
DIRTY
boolean
editable
isEditable
if
d
block
if
editable
block
setFlag
DIRTY
setFlag
AUTOSAVE_DIRTY
block
setFlag
DIRTY
setFlag
AUTOSAVE_DIRTY
if
autosaveFile
delete
if
getFlag
UNDO_IN_PROGRESS
block
bufferSaved
if
d
old_d
editable
block
send
BufferUpdate
DIRTY_CHANGED
isTemporary
boolean
return
getFlag
TEMPORARY
getIcon
Icon
if
getFlag
DIRTY
return
loadIcon
if
getFlag
READ_ONLY
getFlag
READ_ONLY_OVERRIDE
return
loadIcon
if
getFlag
NEW_FILE
return
loadIcon
return
loadIcon
readLock
readLock
readUnlock
readUnlock
writeLock
writeLock
writeUnlock
writeUnlock
getLength
int
return
getLength
getLineCount
int
return
getLineCount
getLineOfOffset
int
offset
int
try
readLock
if
offset
offset
getLength
throw
ArrayIndexOutOfBoundsException
offset
return
getLineOfOffset
offset
readUnlock
getLineStartOffset
int
line
int
try
readLock
if
line
line
getLineCount
throw
ArrayIndexOutOfBoundsException
line
if
line
return
return
getLineEndOffset
line
readUnlock
getLineEndOffset
int
line
int
try
readLock
if
line
line
getLineCount
throw
ArrayIndexOutOfBoundsException
line
return
getLineEndOffset
line
readUnlock
getLineLength
int
line
int
try
readLock
return
getLineEndOffset
line
getLineStartOffset
line
readUnlock
invalidateCachedScreenLineCounts
invalidateScreenLineCounts
getLineText
String
line
int
if
line
line
getLineCount
throw
ArrayIndexOutOfBoundsException
line
try
readLock
int
start
line
getLineEndOffset
line
int
end
getLineEndOffset
line
return
getText
start
end
start
readUnlock
getLineText
line
int
segment
Segment
if
line
line
getLineCount
throw
ArrayIndexOutOfBoundsException
line
try
readLock
int
start
line
getLineEndOffset
line
int
end
getLineEndOffset
line
getText
start
end
start
segment
readUnlock
getText
String
start
int
length
int
try
readLock
if
start
length
start
length
getLength
throw
ArrayIndexOutOfBoundsException
start
length
return
getText
start
length
readUnlock
getText
start
int
length
int
seg
Segment
try
readLock
if
start
length
start
length
getLength
throw
ArrayIndexOutOfBoundsException
start
length
getText
start
length
seg
readUnlock
insert
offset
int
str
String
if
str
return
int
len
length
if
len
return
if
isReadOnly
throw
RuntimeException
try
writeLock
if
offset
offset
getLength
throw
ArrayIndexOutOfBoundsException
offset
insert
offset
str
clear
for
forControl
int
i
i
len
i
block
if
charAt
i
add
i
if
getFlag
UNDO_IN_PROGRESS
block
contentInserted
offset
len
str
getFlag
DIRTY
contentInserted
offset
len
integerArray
writeUnlock
insert
offset
int
seg
Segment
if
count
return
if
isReadOnly
throw
RuntimeException
try
writeLock
if
offset
offset
getLength
throw
ArrayIndexOutOfBoundsException
offset
insert
offset
seg
clear
for
forControl
int
i
i
count
i
block
if
array
offset
i
add
i
if
getFlag
UNDO_IN_PROGRESS
block
contentInserted
offset
count
toString
getFlag
DIRTY
contentInserted
offset
count
integerArray
writeUnlock
remove
offset
int
length
int
if
length
return
if
isReadOnly
throw
RuntimeException
try
setFlag
TRANSACTION
writeLock
if
offset
length
offset
length
getLength
throw
ArrayIndexOutOfBoundsException
offset
length
int
startLine
getLineOfOffset
offset
int
endLine
getLineOfOffset
offset
length
int
numLines
endLine
startLine
if
getFlag
UNDO_IN_PROGRESS
getFlag
LOADING
block
contentRemoved
offset
length
getText
offset
length
getFlag
DIRTY
firePreContentRemoved
startLine
offset
numLines
length
remove
offset
length
contentRemoved
startLine
offset
numLines
length
contentRemoved
offset
length
fireContentRemoved
startLine
offset
numLines
length
if
getFlag
UNDO_IN_PROGRESS
insideCompoundEdit
fireTransactionComplete
setDirty
setFlag
TRANSACTION
writeUnlock
undo
textArea
JEditTextArea
if
undoMgr
return
if
isEditable
block
getToolkit
beep
return
try
writeLock
setFlag
UNDO_IN_PROGRESS
int
caret
undo
if
caret
getToolkit
beep
setCaretPosition
caret
fireTransactionComplete
setFlag
UNDO_IN_PROGRESS
writeUnlock
redo
textArea
JEditTextArea
if
undoMgr
return
if
isEditable
block
getDefaultToolkit
beep
return
try
writeLock
setFlag
UNDO_IN_PROGRESS
int
caret
redo
if
caret
getToolkit
beep
setCaretPosition
caret
fireTransactionComplete
setFlag
UNDO_IN_PROGRESS
writeUnlock
isTransactionInProgress
boolean
return
getFlag
TRANSACTION
getFlag
UNDO_IN_PROGRESS
insideCompoundEdit
beginCompoundEdit
try
writeLock
beginCompoundEdit
writeUnlock
endCompoundEdit
try
writeLock
endCompoundEdit
if
insideCompoundEdit
fireTransactionComplete
writeUnlock
insideCompoundEdit
boolean
return
insideCompoundEdit
int
NORMAL_PRIORITY
int
HIGH_PRIORITY
Listener
BufferChangeListener
listener
int
priority
Listener
listener
BufferChangeListener
priority
int
listener
listener
priority
priority
addBufferChangeListener
listener
BufferChangeListener
priority
int
Listener
l
Listener
listener
priority
for
forControl
int
i
i
size
i
block
Listener
_l
Listener
get
i
if
priority
priority
block
insertElementAt
l
i
return
addElement
l
addBufferChangeListener
listener
BufferChangeListener
addBufferChangeListener
listener
NORMAL_PRIORITY
removeBufferChangeListener
listener
BufferChangeListener
for
forControl
int
i
i
size
i
block
if
Listener
get
i
listener
block
removeElementAt
i
return
getBufferChangeListeners
BufferChangeListener
BufferChangeListener
returnValue
BufferChangeListener
size
for
forControl
int
i
i
length
i
block
returnValue
i
Listener
get
i
return
returnValue
propertiesChanged
String
folding
getStringProperty
FoldHandler
handler
getFoldHandler
folding
if
handler
block
setFoldHandler
handler
block
if
folding
log
WARNING
path
folding
setFoldHandler
DummyFoldHandler
send
BufferUpdate
PROPERTIES_CHANGED
getTabSize
int
int
tabSize
getIntegerProperty
if
tabSize
return
return
tabSize
getIndentSize
int
int
indentSize
getIntegerProperty
if
indentSize
return
return
indentSize
getProperty
Object
name
Object
synchronized
propertyLock
PropValue
o
PropValue
get
name
if
o
return
value
if
name
String
return
if
mode
block
Object
retVal
getProperty
String
name
if
retVal
return
put
name
PropValue
retVal
return
retVal
block
String
value
getProperty
name
if
value
return
Object
retVal
try
retVal
Integer
value
catchClause
nf
retVal
value
put
name
PropValue
retVal
return
retVal
setProperty
name
String
value
Object
if
value
remove
name
block
PropValue
test
PropValue
get
name
if
test
put
name
PropValue
value
if
equals
value
block
block
value
value
defaultValue
unsetProperty
name
String
remove
name
getStringProperty
String
name
String
Object
obj
getProperty
name
if
obj
return
toString
return
setStringProperty
name
String
value
String
setProperty
name
value
getBooleanProperty
boolean
name
String
Object
obj
getProperty
name
if
obj
Boolean
return
Boolean
obj
if
equals
obj
equals
obj
equals
obj
return
return
setBooleanProperty
name
String
value
boolean
setProperty
name
value
TRUE
FALSE
getIntegerProperty
int
name
String
defaultValue
int
boolean
defaultValueFlag
Object
obj
PropValue
value
PropValue
get
name
if
value
block
obj
value
defaultValueFlag
defaultValue
block
obj
getProperty
name
defaultValueFlag
if
obj
return
defaultValue
if
obj
Number
return
Number
obj
block
try
int
returnValue
parseInt
toString
trim
put
name
PropValue
Integer
returnValue
defaultValueFlag
return
returnValue
catchClause
e
return
defaultValue
setIntegerProperty
name
String
value
int
setProperty
name
Integer
value
getRegexpProperty
RE
name
String
cflags
int
syntax
RESyntax
synchronized
propertyLock
boolean
defaultValueFlag
Object
obj
PropValue
value
PropValue
get
name
if
value
block
obj
value
defaultValueFlag
defaultValue
block
obj
getProperty
name
defaultValueFlag
if
obj
return
if
obj
RE
return
RE
obj
block
RE
re
RE
toString
cflags
syntax
put
name
PropValue
re
defaultValueFlag
return
re
getRuleSetAtOffset
ParserRuleSet
offset
int
int
line
getLineOfOffset
offset
offset
getLineStartOffset
line
if
offset
offset
DefaultTokenHandler
tokens
DefaultTokenHandler
markTokens
line
tokens
Token
token
getTokenAtOffset
getTokens
offset
return
rules
getKeywordMapAtOffset
KeywordMap
offset
int
return
getRuleSetAtOffset
getKeywords
offset
getContextSensitiveProperty
String
offset
int
name
String
ParserRuleSet
rules
getRuleSetAtOffset
offset
Object
value
Hashtable
rulesetProps
getProperties
if
rulesetProps
value
get
name
if
value
block
value
getMode
getProperty
name
getModeName
if
value
value
getProperty
name
if
value
return
return
valueOf
value
PropValue
PropValue
value
Object
defaultValue
boolean
if
value
throw
NullPointerException
value
value
defaultValue
defaultValue
Object
value
boolean
defaultValue
toString
String
return
toString
toggleWordWrap
view
View
String
wrap
getStringProperty
if
equals
wrap
if
equals
wrap
if
equals
wrap
getStatus
setMessageAndClear
getProperty
String
wrap
setProperty
wrap
propertiesChanged
toggleLineSeparator
view
View
String
status
String
lineSep
getStringProperty
if
equals
lineSep
block
status
lineSep
if
equals
lineSep
block
status
lineSep
if
equals
lineSep
block
status
lineSep
getStatus
setMessageAndClear
getProperty
String
getProperty
status
setProperty
lineSep
setDirty
propertiesChanged
getMode
Mode
return
mode
setMode
mode
String
setMode
getMode
mode
setMode
mode
Mode
if
mode
throw
NullPointerException
mode
mode
textMode
equals
getName
setTokenMarker
getTokenMarker
resetCachedProperties
propertiesChanged
setMode
String
userMode
getStringProperty
if
userMode
block
Mode
m
getMode
userMode
if
m
block
setMode
m
return
String
nogzName
substring
length
endsWith
Mode
modes
getModes
String
firstLine
getLineText
for
forControl
int
i
length
i
i
block
if
modes
i
accept
nogzName
firstLine
block
setMode
modes
i
return
Mode
defaultMode
getMode
getProperty
if
defaultMode
defaultMode
getMode
setMode
defaultMode
markTokens
lineIndex
int
tokenHandler
TokenHandler
Segment
seg
if
isEventDispatchThread
seg
seg
seg
Segment
if
lineIndex
lineIndex
getLineCount
throw
ArrayIndexOutOfBoundsException
lineIndex
int
firstInvalidLineContext
getFirstInvalidLineContext
int
start
if
textMode
firstInvalidLineContext
block
start
lineIndex
block
start
min
firstInvalidLineContext
lineIndex
if
TOKEN_MARKER_DEBUG
log
DEBUG
start
lineIndex
TokenMarker
LineContext
oldContext
TokenMarker
LineContext
context
for
forControl
int
i
start
i
lineIndex
i
block
getLineText
i
seg
oldContext
getLineContext
i
TokenMarker
LineContext
prevContext
i
textMode
getLineContext
i
context
markTokens
prevContext
i
lineIndex
tokenHandler
INSTANCE
seg
setLineContext
i
context
int
lineCount
getLineCount
if
lineCount
lineIndex
setFirstInvalidLineContext
if
oldContext
context
setFirstInvalidLineContext
lineIndex
if
firstInvalidLineContext
block
setFirstInvalidLineContext
max
firstInvalidLineContext
lineIndex
removeTrailingWhiteSpace
lines
int
try
beginCompoundEdit
for
forControl
int
i
i
length
i
block
int
pos
lineStart
lineEnd
tail
getLineText
lines
i
seg
if
count
continue
lineStart
offset
lineEnd
offset
count
for
forControl
pos
lineEnd
pos
lineStart
pos
block
if
isWhitespace
array
pos
break
tail
lineEnd
pos
if
tail
continue
remove
getLineEndOffset
lines
i
tail
tail
endCompoundEdit
shiftIndentLeft
lines
int
int
tabSize
getTabSize
int
indentSize
getIndentSize
boolean
noTabs
getBooleanProperty
try
beginCompoundEdit
for
forControl
int
i
i
length
i
block
int
lineStart
getLineStartOffset
lines
i
String
line
getLineText
lines
i
int
whiteSpace
getLeadingWhiteSpace
line
if
whiteSpace
continue
int
whiteSpaceWidth
max
getLeadingWhiteSpaceWidth
line
tabSize
indentSize
insert
lineStart
whiteSpace
createWhiteSpace
whiteSpaceWidth
noTabs
tabSize
remove
lineStart
whiteSpace
endCompoundEdit
shiftIndentRight
lines
int
try
beginCompoundEdit
int
tabSize
getTabSize
int
indentSize
getIndentSize
boolean
noTabs
getBooleanProperty
for
forControl
int
i
i
length
i
block
int
lineStart
getLineStartOffset
lines
i
String
line
getLineText
lines
i
int
whiteSpace
getLeadingWhiteSpace
line
int
whiteSpaceWidth
getLeadingWhiteSpaceWidth
line
tabSize
indentSize
insert
lineStart
whiteSpace
createWhiteSpace
whiteSpaceWidth
noTabs
tabSize
remove
lineStart
whiteSpace
endCompoundEdit
indentLines
start
int
end
int
try
beginCompoundEdit
for
forControl
int
i
start
i
end
i
indentLine
i
endCompoundEdit
indentLines
lines
int
try
beginCompoundEdit
for
forControl
int
i
i
length
i
indentLine
lines
i
endCompoundEdit
indentLine
boolean
lineIndex
int
canIncreaseIndent
boolean
canDecreaseIndent
boolean
return
indentLine
lineIndex
canDecreaseIndent
indentLine
boolean
lineIndex
int
canDecreaseIndent
boolean
int
whitespaceChars
int
int
currentIndent
getCurrentIndentForLine
lineIndex
whitespaceChars
int
idealIndent
getIdealIndentForLine
lineIndex
if
idealIndent
idealIndent
currentIndent
canDecreaseIndent
idealIndent
currentIndent
return
try
beginCompoundEdit
int
start
getLineStartOffset
lineIndex
remove
start
whitespaceChars
insert
start
createWhiteSpace
idealIndent
getBooleanProperty
getTabSize
endCompoundEdit
return
getCurrentIndentForLine
int
lineIndex
int
whitespaceChars
int
getLineText
lineIndex
seg
int
tabSize
getTabSize
int
currentIndent
for
forControl
int
i
i
count
i
block
char
c
array
offset
i
switch
c
case
currentIndent
if
whitespaceChars
whitespaceChars
break
case
currentIndent
tabSize
currentIndent
tabSize
if
whitespaceChars
whitespaceChars
break
case
break
return
currentIndent
getIdealIndentForLine
int
lineIndex
int
String
EXPLICIT_START
String
EXPLICIT_END
if
lineIndex
return
String
openBrackets
getStringProperty
if
openBrackets
openBrackets
String
closeBrackets
getStringProperty
if
closeBrackets
closeBrackets
RE
indentNextLineRE
try
indentNextLineRE
getRegexpProperty
REG_ICASE
RE_SYNTAX_JEDIT
catchClause
re
indentNextLineRE
log
ERROR
log
ERROR
re
RE
indentNextLinesRE
try
indentNextLinesRE
getRegexpProperty
REG_ICASE
RE_SYNTAX_JEDIT
catchClause
re
indentNextLinesRE
log
ERROR
log
ERROR
re
boolean
doubleBracketIndent
getBooleanProperty
boolean
lineUpClosingBracket
getBooleanProperty
int
tabSize
getTabSize
int
indentSize
getIndentSize
int
prevLineIndex
getPriorNonEmptyLine
lineIndex
if
prevLineIndex
return
String
prevLine
getLineText
prevLineIndex
boolean
prevLineStart
int
indent
int
prevLineBrackets
int
prevLineCloseBracketIndex
int
prevLineUnclosedParenIndex
int
prevLineParenWeight
Stack
openParens
Stack
for
forControl
int
i
i
length
i
block
char
c
charAt
i
switch
c
case
if
prevLineStart
indent
break
case
if
prevLineStart
block
indent
tabSize
indent
tabSize
break
case
prevLineStart
if
indexOf
c
block
if
regionMatches
i
EXPLICIT_END
i
block
prevLineBrackets
if
prevLineBrackets
block
if
lineUpClosingBracket
prevLineBrackets
prevLineCloseBracketIndex
i
if
indexOf
c
block
if
regionMatches
i
EXPLICIT_START
i
prevLineBrackets
if
c
block
push
Integer
i
prevLineParenWeight
if
c
block
if
size
pop
prevLineParenWeight
break
if
size
block
prevLineUnclosedParenIndex
Integer
pop
if
INDENT_DEBUG
block
log
DEBUG
log
DEBUG
indent
prevLineBrackets
prevLineCloseBracketIndex
String
line
getLineText
lineIndex
int
lineBrackets
int
closeBracketIndex
for
forControl
int
i
i
length
i
block
char
c
charAt
i
if
indexOf
c
block
if
regionMatches
i
EXPLICIT_END
i
block
closeBracketIndex
i
lineBrackets
if
indexOf
c
block
if
regionMatches
i
EXPLICIT_START
i
if
lineBrackets
lineBrackets
if
INDENT_DEBUG
block
log
DEBUG
log
DEBUG
lineBrackets
closeBracketIndex
if
getBooleanProperty
block
if
prevLineParenWeight
block
indent
prevLineUnclosedParenIndex
for
forControl
int
i
i
length
i
block
if
charAt
i
indent
tabSize
return
indent
if
prevLineParenWeight
block
int
openParenOffset
findMatchingBracket
prevLineIndex
lastIndexOf
if
openParenOffset
block
int
startLine
getLineOfOffset
openParenOffset
int
startLineParenWeight
getLineParenWeight
startLine
if
startLineParenWeight
indent
getCurrentIndentForLine
startLine
indent
getOpenParenIndent
startLine
lineIndex
if
prevLineBrackets
indent
indentSize
prevLineBrackets
if
lineUpClosingBracket
block
if
lineBrackets
block
int
openBracketIndex
findMatchingBracket
lineIndex
closeBracketIndex
if
openBracketIndex
block
int
openLineIndex
getLineOfOffset
openBracketIndex
String
openLine
getLineText
openLineIndex
log
DEBUG
openLine
getLineParenWeight
openLineIndex
if
getLineParenWeight
openLineIndex
block
openBracketIndex
findMatchingBracket
openLineIndex
indexOf
log
DEBUG
openBracketIndex
openLine
getLineText
getLineOfOffset
openBracketIndex
log
DEBUG
openLine
indent
getLeadingWhiteSpaceWidth
openLine
tabSize
log
DEBUG
indent
return
block
if
prevLineBrackets
block
int
offset
findMatchingBracket
prevLineIndex
prevLineCloseBracketIndex
if
offset
block
String
closeLine
getLineText
getLineOfOffset
offset
indent
getLeadingWhiteSpaceWidth
closeLine
tabSize
return
if
lineBrackets
block
if
lineBrackets
doubleBracketIndent
indentNextLinesRE
isMatch
prevLine
block
if
INDENT_DEBUG
block
log
DEBUG
indent
indentSize
if
indentNextLineRE
block
if
lineBrackets
doubleBracketIndent
isMatch
prevLine
indent
indentSize
if
prevLineBrackets
block
int
prevPrevLineIndex
prevPrevLineIndex
getPriorNonEmptyLine
prevLineIndex
while
prevPrevLineIndex
block
if
isMatch
getLineText
prevPrevLineIndex
indent
getCurrentIndentForLine
prevPrevLineIndex
break
if
INDENT_DEBUG
block
log
DEBUG
prevPrevLineIndex
prevPrevLineIndex
getPriorNonEmptyLine
prevPrevLineIndex
return
indent
getLineParenWeight
int
line
int
String
lineText
getLineText
line
int
parenWeight
for
forControl
int
i
i
length
i
block
char
c
charAt
i
switch
c
case
parenWeight
break
case
parenWeight
break
case
return
parenWeight
getOpenParenIndent
int
startLine
int
targetLine
int
Stack
openParens
Stack
String
lineText
for
forControl
int
lineIndex
startLine
lineIndex
targetLine
lineIndex
block
lineText
getLineText
lineIndex
for
forControl
int
i
i
length
i
block
char
c
charAt
i
switch
c
case
push
Integer
i
break
case
if
size
pop
break
case
int
indent
getCurrentIndentForLine
startLine
if
size
indent
Integer
pop
return
indent
getVirtualWidth
int
line
int
column
int
try
readLock
int
start
getLineStartOffset
line
getText
start
column
seg
return
getVirtualWidth
seg
getTabSize
readUnlock
getOffsetOfVirtualColumn
int
line
int
column
int
totalVirtualWidth
int
try
readLock
getLineText
line
seg
return
getOffsetOfVirtualColumn
seg
getTabSize
column
totalVirtualWidth
readUnlock
insertAtColumn
line
int
col
int
str
String
try
writeLock
int
total
int
int
offset
getOffsetOfVirtualColumn
line
col
total
if
offset
block
offset
getLineEndOffset
line
str
createWhiteSpace
col
total
str
offset
getLineStartOffset
line
insert
offset
str
writeUnlock
insertIndented
int
offset
int
text
String
try
beginCompoundEdit
int
firstLine
getLineOfOffset
offset
String
lineText
getLineText
firstLine
int
leadingIndent
getLeadingWhiteSpaceWidth
lineText
getTabSize
String
whiteSpace
createWhiteSpace
leadingIndent
getBooleanProperty
getTabSize
insert
offset
text
int
lastLine
getLineOfOffset
offset
length
for
forControl
int
i
firstLine
i
lastLine
i
block
insert
getLineStartOffset
i
whiteSpace
return
length
endCompoundEdit
putProperty
name
Object
value
Object
if
name
String
return
setProperty
String
name
value
putBooleanProperty
name
String
value
boolean
setBooleanProperty
name
value
TokenList
getFirstToken
Token
return
getTokens
DefaultTokenHandler
markTokens
TokenList
lineIndex
int
TokenList
list
TokenList
markTokens
lineIndex
list
return
list
getRootElements
Element
return
Element
getDefaultRootElement
getParagraphElement
Element
offset
int
return
LineElement
getLineOfOffset
offset
getDefaultRootElement
Element
return
RootElement
insertString
offset
int
str
String
attr
AttributeSet
insert
offset
str
getFile
File
return
file
getCurrentIdentForLine
int
lineIndex
int
whitespaceChars
int
return
getCurrentIndentForLine
lineIndex
whitespaceChars
isFoldStart
boolean
line
int
return
line
getLineCount
getFoldLevel
line
getFoldLevel
line
isFoldEnd
boolean
line
int
return
line
getLineCount
getFoldLevel
line
getFoldLevel
line
invalidateCachedFoldLevels
setFirstInvalidFoldLevel
fireFoldLevelChanged
getLineCount
getFoldLevel
int
line
int
if
line
line
getLineCount
throw
ArrayIndexOutOfBoundsException
line
if
foldHandler
DummyFoldHandler
return
int
firstInvalidFoldLevel
getFirstInvalidFoldLevel
if
firstInvalidFoldLevel
line
firstInvalidFoldLevel
block
return
getFoldLevel
line
block
if
FOLD_DEBUG
log
DEBUG
firstInvalidFoldLevel
line
int
newFoldLevel
boolean
changed
for
forControl
int
i
firstInvalidFoldLevel
i
line
i
block
newFoldLevel
getFoldLevel
i
seg
if
newFoldLevel
getFoldLevel
i
block
if
FOLD_DEBUG
log
DEBUG
i
changed
setFoldLevel
i
newFoldLevel
if
line
getLineCount
setFirstInvalidFoldLevel
setFirstInvalidFoldLevel
line
if
changed
block
if
FOLD_DEBUG
log
DEBUG
firstInvalidFoldLevel
line
fireFoldLevelChanged
firstInvalidFoldLevel
line
return
newFoldLevel
getFoldAtLine
int
line
int
int
start
end
if
isFoldStart
line
block
start
line
int
foldLevel
getFoldLevel
line
line
while
getFoldLevel
line
foldLevel
block
line
if
line
getLineCount
break
end
line
block
start
line
int
foldLevel
getFoldLevel
line
while
getFoldLevel
start
foldLevel
block
if
start
break
start
end
line
while
getFoldLevel
end
foldLevel
block
end
if
end
getLineCount
break
end
while
getLineLength
end
end
start
end
return
int
start
end
getFoldHandler
FoldHandler
return
foldHandler
setFoldHandler
foldHandler
FoldHandler
FoldHandler
oldFoldHandler
foldHandler
if
equals
oldFoldHandler
return
foldHandler
foldHandler
setFirstInvalidFoldLevel
fireFoldHandlerChanged
createPosition
Position
offset
int
try
readLock
if
offset
offset
getLength
throw
ArrayIndexOutOfBoundsException
offset
return
createPosition
offset
readUnlock
getMarkers
Vector
return
markers
getMarkerStatusPrompt
String
action
String
return
getProperty
action
String
getMarkerNameString
getMarkerNameString
String
StringBuffer
buf
StringBuffer
for
forControl
int
i
i
size
i
block
Marker
marker
Marker
elementAt
i
if
getShortcut
block
if
length
append
append
getShortcut
if
length
return
getProperty
return
toString
addOrRemoveMarker
shortcut
char
pos
int
int
line
getLineOfOffset
pos
if
getMarkerAtLine
line
removeMarker
line
addMarker
shortcut
pos
addMarker
shortcut
char
pos
int
Marker
markerN
Marker
shortcut
pos
boolean
added
if
getFlag
LOADING
block
if
getBooleanProperty
setDirty
createPosition
for
forControl
int
i
i
size
i
block
Marker
marker
Marker
elementAt
i
if
shortcut
getShortcut
shortcut
setShortcut
if
getPosition
pos
block
removeElementAt
i
i
for
forControl
int
i
i
size
i
block
Marker
marker
Marker
elementAt
i
if
getPosition
pos
block
insertElementAt
markerN
i
added
break
if
added
addElement
markerN
if
getFlag
LOADING
getFlag
TEMPORARY
block
send
BufferUpdate
MARKERS_CHANGED
getMarkerInRange
Marker
start
int
end
int
for
forControl
int
i
i
size
i
block
Marker
marker
Marker
elementAt
i
int
pos
getPosition
if
pos
start
pos
end
return
marker
return
getMarkerAtLine
Marker
line
int
for
forControl
int
i
i
size
i
block
Marker
marker
Marker
elementAt
i
if
getLineOfOffset
getPosition
line
return
marker
return
removeMarker
line
int
for
forControl
int
i
i
size
i
block
Marker
marker
Marker
elementAt
i
if
getLineOfOffset
getPosition
line
block
if
getBooleanProperty
setDirty
removePosition
removeElementAt
i
i
send
BufferUpdate
MARKERS_CHANGED
removeAllMarkers
if
getBooleanProperty
setDirty
for
forControl
int
i
i
size
i
Marker
elementAt
i
removeAllElements
if
getFlag
LOADING
block
send
BufferUpdate
MARKERS_CHANGED
getMarker
Marker
shortcut
char
Enumeration
e
elements
while
hasMoreElements
block
Marker
marker
Marker
nextElement
if
getShortcut
shortcut
return
marker
return
setWaitSocket
waitSocket
Socket
waitSocket
waitSocket
getNext
Buffer
return
next
getPrev
Buffer
return
prev
getIndex
int
int
count
Buffer
buffer
prev
for
forControl
block
if
buffer
break
count
buffer
prev
return
count
toString
String
return
name
directory
_getLineManager
LineManager
return
lineMgr
Buffer
prev
Buffer
next
Buffer
path
String
newFile
boolean
temp
boolean
props
Hashtable
lock
ReadWriteLock
propertyLock
Object
contentMgr
ContentManager
lineMgr
LineManager
positionMgr
PositionManager
integerArray
IntegerArray
undoMgr
UndoManager
bufferListeners
Vector
seg
Segment
markers
Vector
properties
HashMap
Enumeration
e
keys
while
hasMoreElements
block
Object
key
nextElement
Object
value
get
key
put
key
PropValue
value
if
getProperty
ENCODING
put
ENCODING
PropValue
getProperty
if
getProperty
LINESEP
put
LINESEP
PropValue
getProperty
setFlag
TEMPORARY
temp
setPath
path
setFlag
UNTITLED
newFile
setFlag
NEW_FILE
newFile
commitTemporary
setFlag
TEMPORARY
finishLoading
resetCachedProperties
Iterator
iter
values
iterator
while
hasNext
block
PropValue
value
PropValue
next
if
defaultValue
remove
close
setFlag
CLOSED
if
autosaveFile
delete
if
waitSocket
block
try
getOutputStream
write
getOutputStream
flush
getInputStream
close
getOutputStream
close
close
catchClause
io
setFlag
flag
int
value
boolean
if
value
flags
flag
flags
flag
getFlag
boolean
flag
int
int
mask
flag
return
flags
mask
mask
int
CLOSED
int
LOADING
int
IO
int
NEW_FILE
int
UNTITLED
int
AUTOSAVE_DIRTY
int
DIRTY
int
READ_ONLY
int
READ_ONLY_OVERRIDE
int
UNDO_IN_PROGRESS
int
TEMPORARY
int
TRANSACTION
int
flags
String
path
String
symlinkPath
String
name
String
directory
File
file
File
autosaveFile
long
modTime
Mode
mode
HashMap
properties
ReadWriteLock
lock
Object
propertyLock
ContentManager
contentMgr
LineManager
lineMgr
PositionManager
positionMgr
IntegerArray
integerArray
UndoManager
undoMgr
Vector
bufferListeners
Vector
markers
boolean
textMode
TokenMarker
tokenMarker
Segment
seg
FoldHandler
foldHandler
Socket
waitSocket
setPath
path
String
path
path
VFS
vfs
getVFSForPath
path
if
getCapabilities
WRITE_CAP
setFlag
READ_ONLY
name
getFileName
path
directory
getParentOfPath
path
if
vfs
FileVFS
block
file
File
path
symlinkPath
resolveSymlinks
path
if
autosaveFile
delete
autosaveFile
File
getParent
name
block
file
autosaveFile
symlinkPath
path
recoverAutosave
boolean
view
View
if
canRead
return
hideSplashScreen
Object
args
getPath
int
result
confirm
view
args
YES_NO_OPTION
WARNING_MESSAGE
if
result
YES_OPTION
block
getFileVFS
load
view
getPath
runInAWTThread
Runnable
run
message
view
args
return
return
checkFileForLoad
boolean
view
View
vfs
VFS
path
String
if
getCapabilities
LOW_LATENCY_CAP
block
Object
session
createVFSSession
path
view
if
session
return
try
VFS
DirectoryEntry
file
_getDirectoryEntry
session
path
view
if
file
block
setNewFile
return
if
canRead
block
error
view
path
setNewFile
return
setFlag
READ_ONLY
canWrite
if
type
FILE
block
error
view
path
setNewFile
return
catchClause
io
error
view
path
String
toString
return
try
_endVFSSession
session
view
catchClause
io
error
view
path
String
toString
return
return
checkFileForSave
boolean
view
View
vfs
VFS
path
String
if
getCapabilities
LOW_LATENCY_CAP
block
Object
session
createVFSSession
path
view
if
session
return
try
VFS
DirectoryEntry
file
_getDirectoryEntry
session
path
view
if
file
return
if
type
FILE
block
error
view
path
return
catchClause
io
error
view
path
String
toString
return
try
_endVFSSession
session
view
catchClause
io
error
view
path
String
toString
return
return
finishLoading
parseBufferLocalProperties
FoldHandler
oldFoldHandler
foldHandler
setMode
if
foldHandler
oldFoldHandler
block
setFirstInvalidFoldLevel
fireFoldHandlerChanged
for
forControl
int
i
i
size
i
block
Marker
marker
Marker
elementAt
i
removePosition
int
pos
getPosition
if
pos
getLength
setPosition
getLength
if
pos
setPosition
createPosition
finishSaving
view
View
oldPath
String
oldSymlinkPath
String
path
String
rename
boolean
error
boolean
if
error
equals
oldPath
block
Buffer
buffer
getBuffer
path
if
rename
block
if
buffer
getPath
equals
oldPath
block
setDirty
closeBuffer
view
buffer
setPath
path
block
if
buffer
getPath
equals
oldPath
block
load
view
if
rename
block
if
file
modTime
lastModified
if
error
block
try
writeLock
if
autosaveFile
delete
setFlag
AUTOSAVE_DIRTY
setFlag
READ_ONLY
setFlag
NEW_FILE
setFlag
UNTITLED
setFlag
DIRTY
bufferSaved
writeUnlock
parseBufferLocalProperties
if
getPath
equals
oldPath
block
updatePosition
oldSymlinkPath
setMode
block
String
newMode
getStringProperty
if
newMode
equals
getMode
getName
setMode
propertiesChanged
send
BufferUpdate
view
DIRTY_CHANGED
send
BufferUpdate
view
SAVED
parseBufferLocalProperties
int
lastLine
min
getLineCount
parseBufferLocalProperties
getText
getLineEndOffset
lastLine
int
firstLine
max
lastLine
getLineCount
if
firstLine
getLineCount
block
int
length
getLineEndOffset
getLineCount
getLineStartOffset
firstLine
parseBufferLocalProperties
getText
getLineStartOffset
firstLine
length
parseBufferLocalProperties
prop
String
StringBuffer
buf
StringBuffer
String
name
boolean
escape
for
forControl
int
i
i
length
i
block
char
c
charAt
i
switch
c
case
if
escape
block
escape
append
break
if
name
block
put
name
PropValue
toString
name
setLength
break
case
if
escape
block
escape
append
break
name
toString
setLength
break
case
if
escape
append
escape
escape
break
case
if
escape
block
append
escape
break
case
if
escape
block
append
escape
break
case
if
escape
block
append
escape
break
case
append
c
break
setTokenMarker
tokenMarker
TokenMarker
TokenMarker
oldTokenMarker
tokenMarker
tokenMarker
tokenMarker
if
oldTokenMarker
tokenMarker
oldTokenMarker
block
setFirstInvalidLineContext
getPriorNonEmptyLine
int
lineIndex
int
int
returnValue
for
forControl
int
i
lineIndex
i
i
block
getLineText
i
seg
if
count
returnValue
i
for
forControl
int
j
j
count
j
block
char
ch
array
offset
j
if
isWhitespace
ch
return
i
return
returnValue
contentInserted
offset
int
length
int
endOffsets
IntegerArray
try
setFlag
TRANSACTION
int
startLine
getLineOfOffset
offset
int
numLines
getSize
contentInserted
startLine
offset
numLines
length
endOffsets
contentInserted
offset
length
setDirty
if
getFlag
LOADING
block
fireContentInserted
startLine
offset
numLines
length
if
getFlag
UNDO_IN_PROGRESS
insideCompoundEdit
block
fireTransactionComplete
setFlag
TRANSACTION
getListener
BufferChangeListener
index
int
return
Listener
elementAt
index
fireFoldLevelChanged
start
int
end
int
for
forControl
int
i
i
size
i
block
try
getListener
foldLevelChanged
start
end
i
catchClause
t
log
ERROR
getListener
i
log
ERROR
t
fireContentInserted
startLine
int
offset
int
numLines
int
length
int
for
forControl
int
i
i
size
i
block
try
getListener
contentInserted
startLine
offset
numLines
length
i
catchClause
t
log
ERROR
getListener
i
log
ERROR
t
fireContentRemoved
startLine
int
offset
int
numLines
int
length
int
for
forControl
int
i
i
size
i
block
try
getListener
contentRemoved
startLine
offset
numLines
length
i
catchClause
t
log
ERROR
getListener
i
log
ERROR
t
firePreContentRemoved
startLine
int
offset
int
numLines
int
length
int
for
forControl
int
i
i
size
i
block
try
getListener
preContentRemoved
startLine
offset
numLines
length
i
catchClause
t
log
ERROR
getListener
i
log
ERROR
t
fireTransactionComplete
for
forControl
int
i
i
size
i
block
try
getListener
transactionComplete
i
catchClause
t
log
ERROR
getListener
i
log
ERROR
t
fireFoldHandlerChanged
for
forControl
int
i
i
size
i
block
try
getListener
foldHandlerChanged
i
catchClause
t
log
ERROR
getListener
i
log
ERROR
t
