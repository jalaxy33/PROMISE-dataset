KeyEventTranslator
addTranslation
key1
Key
key2
Key
put
key1
key2
translateKeyEvent
Key
evt
KeyEvent
int
modifiers
getModifiers
Key
returnValue
switch
getID
case
KEY_PRESSED
int
keyCode
getKeyCode
if
keyCode
VK_0
keyCode
VK_9
keyCode
VK_A
keyCode
VK_Z
block
if
ALTERNATIVE_DISPATCHER
return
block
returnValue
Key
modifiersToString
modifiers
toLowerCase
char
keyCode
block
if
keyCode
VK_TAB
block
consume
returnValue
Key
modifiersToString
modifiers
keyCode
if
keyCode
VK_SPACE
block
if
modifiers
SHIFT_MASK
returnValue
block
returnValue
Key
modifiersToString
modifiers
block
returnValue
Key
modifiersToString
modifiers
keyCode
break
case
KEY_TYPED
char
ch
getKeyChar
switch
ch
case
return
case
if
modifiers
SHIFT_MASK
return
int
ignoreMods
if
ALT_KEY_PRESSED_DISABLED
block
ignoreMods
SHIFT_MASK
ALT_GRAPH_MASK
ALT_MASK
block
ignoreMods
SHIFT_MASK
ALT_GRAPH_MASK
if
modifiers
ALT_GRAPH_MASK
getWhen
lastKeyTime
modifiers
ignoreMods
block
if
ALTERNATIVE_DISPATCHER
block
returnValue
Key
modifiersToString
modifiers
ch
return
block
if
ch
block
returnValue
Key
modifiersToString
modifiers
ch
returnValue
Key
ch
break
case
return
Key
trans
Key
get
returnValue
if
trans
return
returnValue
return
trans
parseKey
Key
keyStroke
String
if
keyStroke
return
int
index
indexOf
int
modifiers
if
index
block
for
forControl
int
i
i
index
i
block
switch
toUpperCase
charAt
i
case
modifiers
a
break
case
modifiers
c
break
case
modifiers
m
break
case
modifiers
s
break
String
key
substring
index
if
length
block
return
Key
modifiersToString
modifiers
charAt
if
length
block
log
ERROR
DefaultInputHandler
keyStroke
return
if
equals
block
return
Key
modifiersToString
modifiers
block
int
ch
try
ch
getField
concat
key
getInt
KeyEvent
catchClause
e
log
ERROR
DefaultInputHandler
keyStroke
return
return
Key
modifiersToString
modifiers
ch
setModifierMapping
c
int
a
int
m
int
s
int
int
duplicateMapping
c
a
c
m
c
s
a
m
a
s
m
s
if
duplicateMapping
CTRL_MASK
block
throw
IllegalArgumentException
if
duplicateMapping
ALT_MASK
block
throw
IllegalArgumentException
if
duplicateMapping
META_MASK
block
throw
IllegalArgumentException
if
duplicateMapping
SHIFT_MASK
block
throw
IllegalArgumentException
c
c
a
a
m
m
s
s
getSymbolicModifierName
char
mod
int
if
mod
c
return
if
mod
a
return
if
mod
m
return
if
mod
s
return
return
modifiersToString
String
mods
int
StringBuffer
buf
if
mods
CTRL_MASK
block
if
buf
buf
StringBuffer
append
getSymbolicModifierName
CTRL_MASK
if
mods
ALT_MASK
block
if
buf
buf
StringBuffer
append
getSymbolicModifierName
ALT_MASK
if
mods
META_MASK
block
if
buf
buf
StringBuffer
append
getSymbolicModifierName
META_MASK
if
mods
SHIFT_MASK
block
if
buf
buf
StringBuffer
append
getSymbolicModifierName
SHIFT_MASK
if
buf
return
return
toString
getModifierString
String
evt
InputEvent
StringBuffer
buf
StringBuffer
if
isControlDown
append
getSymbolicModifierName
CTRL_MASK
if
isAltDown
append
getSymbolicModifierName
ALT_MASK
if
isMetaDown
append
getSymbolicModifierName
META_MASK
if
isShiftDown
append
getSymbolicModifierName
SHIFT_MASK
return
length
toString
int
c
a
m
s
Map
transMap
HashMap
if
isMacOS
block
setModifierMapping
META_MASK
CTRL_MASK
ALT_MASK
SHIFT_MASK
block
setModifierMapping
CTRL_MASK
ALT_MASK
META_MASK
SHIFT_MASK
Key
String
modifiers
int
key
char
input
Key
modifiers
String
key
int
input
char
modifiers
modifiers
key
key
input
input
hashCode
int
return
key
input
equals
boolean
o
Object
if
o
Key
block
Key
k
Key
o
if
objectsEqual
modifiers
modifiers
key
key
input
input
block
return
return
toString
String
return
modifiers
modifiers
toString
key
toString
input
