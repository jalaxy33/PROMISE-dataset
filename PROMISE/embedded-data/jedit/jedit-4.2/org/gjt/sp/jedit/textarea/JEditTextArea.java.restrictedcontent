JEditTextArea
JEditTextArea
view
View
enableEvents
FOCUS_EVENT_MASK
KEY_EVENT_MASK
view
view
selection
Vector
chunkCache
ChunkCache
painter
TextAreaPainter
gutter
Gutter
view
listenerList
EventListenerList
caretEvent
MutableCaretEvent
blink
lineSegment
Segment
returnValue
Point
structureMatchers
LinkedList
add
StructureMatcher
BracketMatcher
setLayout
ScrollLayout
add
CENTER
painter
add
LEFT
gutter
verticalBox
Box
X_AXIS
add
vertical
JScrollBar
VERTICAL
setRequestFocusEnabled
add
RIGHT
verticalBox
add
BOTTOM
horizontal
JScrollBar
HORIZONTAL
setRequestFocusEnabled
setValues
if
getLookAndFeel
MetalLookAndFeel
block
setBorder
TextAreaBorder
putClientProperty
FALSE
putClientProperty
FALSE
addAdjustmentListener
AdjustHandler
addAdjustmentListener
AdjustHandler
mouseHandler
MouseHandler
addMouseListener
mouseHandler
addMouseMotionListener
mouseHandler
addFocusListener
FocusHandler
focusedComponent
popupEnabled
dispose
textAreaDisposed
getView
View
return
view
getPainter
TextAreaPainter
return
painter
getGutter
Gutter
return
gutter
getDisplayManager
DisplayManager
return
displayManager
isCaretBlinkEnabled
boolean
return
caretBlinks
setCaretBlinkEnabled
caretBlinks
boolean
caretBlinks
caretBlinks
if
caretBlinks
blink
if
buffer
invalidateLine
caretLine
getElectricScroll
int
return
electricScroll
setElectricScroll
electricScroll
int
electricScroll
electricScroll
isQuickCopyEnabled
boolean
return
quickCopy
setQuickCopyEnabled
quickCopy
boolean
quickCopy
quickCopy
getBuffer
Buffer
return
buffer
setBuffer
buffer
Buffer
if
buffer
buffer
return
try
bufferChanging
if
buffer
block
selectNone
caretLine
caret
caretScreenLine
match
buffer
buffer
setBuffer
buffer
propertiesChanged
if
displayManager
block
releaseDisplayManager
displayManager
displayManager
getDisplayManager
buffer
init
if
isLoaded
updateScrollBars
repaint
fireScrollEvent
bufferChanging
isEditable
boolean
return
isEditable
getDragAndDropCallback
Method
return
dndCallback
setDragAndDropCallback
meth
Method
dndCallback
meth
isDragInProgress
boolean
return
dndInProgress
setDragInProgress
dndInProgress
boolean
dndInProgress
dndInProgress
isDragEnabled
boolean
return
dndEnabled
setDragEnabled
dndEnabled
boolean
dndEnabled
dndEnabled
getFirstLine
int
return
scrollLine
skew
Exception
trace
setFirstLine
firstLine
int
if
SCROLL_DEBUG
block
log
DEBUG
getFirstLine
firstLine
int
max
getScrollLineCount
visibleLines
lastLinePartial
if
firstLine
max
firstLine
max
if
firstLine
firstLine
int
oldFirstLine
getFirstLine
if
firstLine
oldFirstLine
return
trace
Exception
if
firstLine
oldFirstLine
visibleLines
block
scrollDown
firstLine
oldFirstLine
invalidateAll
if
firstLine
oldFirstLine
visibleLines
block
scrollUp
oldFirstLine
firstLine
invalidateAll
if
firstLine
oldFirstLine
block
scrollDown
firstLine
oldFirstLine
scrollDown
firstLine
oldFirstLine
if
firstLine
oldFirstLine
block
scrollUp
oldFirstLine
firstLine
scrollUp
oldFirstLine
firstLine
_notifyScreenLineChanges
repaint
fireScrollEvent
getFirstPhysicalLine
int
return
physicalLine
setFirstPhysicalLine
physFirstLine
int
setFirstPhysicalLine
physFirstLine
setFirstPhysicalLine
physFirstLine
int
skew
int
if
SCROLL_DEBUG
block
log
DEBUG
physFirstLine
skew
int
amount
physFirstLine
physicalLine
int
oldFirstLine
getFirstLine
if
amount
block
skew
skew
if
skew
scrollUp
skew
if
skew
scrollDown
skew
block
return
if
amount
physDown
amount
skew
if
amount
physUp
amount
skew
int
firstLine
getFirstLine
if
firstLine
oldFirstLine
if
firstLine
oldFirstLine
visibleLines
firstLine
oldFirstLine
visibleLines
block
invalidateAll
if
firstLine
oldFirstLine
block
scrollDown
firstLine
oldFirstLine
if
firstLine
oldFirstLine
block
scrollUp
oldFirstLine
firstLine
_notifyScreenLineChanges
repaint
fireScrollEvent
getLastPhysicalLine
int
return
physLastLine
getVisibleLines
int
return
visibleLines
getHorizontalOffset
int
return
horizontalOffset
setHorizontalOffset
horizontalOffset
int
if
horizontalOffset
horizontalOffset
if
horizontalOffset
horizontalOffset
return
horizontalOffset
horizontalOffset
if
horizontalOffset
getValue
updateScrollBars
repaint
fireScrollEvent
scrollUpLine
setFirstLine
getFirstLine
scrollUpPage
setFirstLine
getFirstLine
getVisibleLines
lastLinePartial
scrollDownLine
setFirstLine
getFirstLine
scrollDownPage
setFirstLine
getFirstLine
getVisibleLines
lastLinePartial
scrollToCaret
doElectricScroll
boolean
scrollTo
caretLine
caret
getLineStartOffset
caretLine
doElectricScroll
scrollTo
offset
int
doElectricScroll
boolean
int
line
getLineOfOffset
offset
scrollTo
line
offset
getLineStartOffset
line
doElectricScroll
scrollTo
line
int
offset
int
doElectricScroll
boolean
if
SCROLL_TO_DEBUG
log
DEBUG
getLineCount
int
extraEndVirt
int
lineLength
getLineLength
line
if
offset
lineLength
block
extraEndVirt
charWidth
offset
lineLength
offset
lineLength
extraEndVirt
int
_electricScroll
doElectricScroll
visibleLines
electricScroll
electricScroll
if
visibleLines
block
if
SCROLL_TO_DEBUG
log
DEBUG
setFirstPhysicalLine
line
_electricScroll
return
int
screenLine
getScreenLineOfOffset
line
offset
int
visibleLines
getVisibleLines
if
screenLine
block
if
SCROLL_TO_DEBUG
log
DEBUG
ChunkCache
LineInfo
infos
getLineInfosForPhysicalLine
line
int
subregion
getSubregionOfOffset
offset
infos
int
prevLine
getPrevVisibleLine
getFirstPhysicalLine
int
nextLine
getNextVisibleLine
getLastPhysicalLine
if
line
getFirstPhysicalLine
block
if
SCROLL_TO_DEBUG
log
DEBUG
line
getFirstPhysicalLine
setFirstPhysicalLine
line
subregion
_electricScroll
if
line
prevLine
block
if
SCROLL_TO_DEBUG
log
DEBUG
line
prevLine
setFirstPhysicalLine
prevLine
subregion
_electricScroll
if
line
getLastPhysicalLine
block
if
SCROLL_TO_DEBUG
log
DEBUG
line
getLastPhysicalLine
setFirstPhysicalLine
line
subregion
_electricScroll
visibleLines
lastLinePartial
if
line
nextLine
block
if
SCROLL_TO_DEBUG
log
DEBUG
line
nextLine
setFirstPhysicalLine
nextLine
subregion
electricScroll
visibleLines
lastLinePartial
block
if
SCROLL_TO_DEBUG
block
log
DEBUG
log
DEBUG
getLastPhysicalLine
setFirstPhysicalLine
line
subregion
visibleLines
if
SCROLL_TO_DEBUG
block
log
DEBUG
getLastPhysicalLine
if
screenLine
_electricScroll
block
if
SCROLL_TO_DEBUG
log
DEBUG
setFirstLine
getFirstLine
_electricScroll
screenLine
if
screenLine
visibleLines
_electricScroll
lastLinePartial
block
if
SCROLL_TO_DEBUG
log
DEBUG
setFirstLine
getFirstLine
_electricScroll
visibleLines
screenLine
lastLinePartial
if
isLineVisible
line
return
Point
point
offsetToXY
line
offset
returnValue
if
point
block
log
ERROR
screenLine
visibleLines
line
getFirstPhysicalLine
getLastPhysicalLine
x
extraEndVirt
if
x
block
setHorizontalOffset
horizontalOffset
x
charWidth
if
x
getWidth
charWidth
block
setHorizontalOffset
horizontalOffset
getWidth
x
charWidth
addScrollListener
listener
ScrollListener
add
ScrollListener
listener
removeScrollListener
listener
ScrollListener
remove
ScrollListener
listener
getPhysicalLineOfScreenLine
int
screenLine
int
return
getLineInfo
physicalLine
screenLine
getScreenLineOfOffset
int
offset
int
int
line
getLineOfOffset
offset
offset
getLineStartOffset
line
return
getScreenLineOfOffset
line
offset
getScreenLineStartOffset
int
line
int
ChunkCache
LineInfo
lineInfo
getLineInfo
line
if
physicalLine
return
return
getLineStartOffset
physicalLine
offset
getScreenLineEndOffset
int
line
int
ChunkCache
LineInfo
lineInfo
getLineInfo
line
if
physicalLine
return
return
getLineStartOffset
physicalLine
offset
length
xyToOffset
int
x
int
y
int
return
xyToOffset
x
y
xyToOffset
int
x
int
y
int
round
boolean
FontMetrics
fm
getFontMetrics
int
height
getHeight
int
line
y
height
if
line
line
visibleLines
return
return
xToScreenLineOffset
line
x
round
xToScreenLineOffset
int
screenLine
int
x
int
round
boolean
ChunkCache
LineInfo
lineInfo
getLineInfo
screenLine
if
physicalLine
block
return
getLineEndOffset
getLastVisibleLine
block
int
offset
xToOffset
chunks
x
horizontalOffset
round
if
offset
offset
offset
length
offset
offset
length
return
getLineStartOffset
physicalLine
offset
offsetToXY
Point
offset
int
int
line
getLineOfOffset
offset
offset
getLineStartOffset
line
Point
retVal
Point
return
offsetToXY
line
offset
retVal
offsetToXY
Point
line
int
offset
int
retVal
Point
if
isLineVisible
line
return
int
screenLine
getScreenLineOfOffset
line
offset
if
screenLine
return
FontMetrics
fm
getFontMetrics
y
screenLine
getHeight
ChunkCache
LineInfo
info
getLineInfo
screenLine
x
int
horizontalOffset
offsetToX
chunks
offset
return
retVal
invalidateScreenLineRange
start
int
end
int
if
isLoaded
return
if
start
end
block
int
tmp
end
end
start
start
tmp
if
needFullRepaint
end
visibleLines
FontMetrics
fm
getFontMetrics
int
y
start
getHeight
int
height
end
start
getHeight
repaint
y
getWidth
height
repaint
y
getWidth
height
invalidateLine
line
int
if
isShowing
isLoaded
line
getFirstPhysicalLine
line
physLastLine
isLineVisible
line
return
int
startLine
int
endLine
for
forControl
int
i
i
visibleLines
i
block
ChunkCache
LineInfo
info
getLineInfo
i
if
physicalLine
line
physicalLine
startLine
block
startLine
i
if
physicalLine
line
lastSubregion
physicalLine
block
endLine
i
break
if
needFullRepaint
endLine
endLine
visibleLines
invalidateScreenLineRange
startLine
endLine
invalidateLineRange
start
int
end
int
if
isShowing
isLoaded
return
if
end
start
block
int
tmp
end
end
start
start
tmp
if
end
getFirstPhysicalLine
start
getLastPhysicalLine
return
int
startScreenLine
int
endScreenLine
for
forControl
int
i
i
visibleLines
i
block
ChunkCache
LineInfo
info
getLineInfo
i
if
physicalLine
start
physicalLine
startScreenLine
block
startScreenLine
i
if
physicalLine
end
lastSubregion
physicalLine
block
endScreenLine
i
break
if
startScreenLine
startScreenLine
if
needFullRepaint
endScreenLine
endScreenLine
visibleLines
invalidateScreenLineRange
startScreenLine
endScreenLine
invalidateSelectedLines
invalidateLine
caretLine
for
forControl
int
i
i
size
i
block
Selection
s
Selection
elementAt
i
invalidateLineRange
startLine
endLine
getBufferLength
int
return
getLength
getLineCount
int
return
getLineCount
getLineOfOffset
int
offset
int
return
getLineOfOffset
offset
getLineStartOffset
int
line
int
return
getLineStartOffset
line
getLineEndOffset
int
line
int
return
getLineEndOffset
line
getLineLength
int
line
int
return
getLineLength
line
getText
String
start
int
len
int
return
getText
start
len
getText
start
int
len
int
segment
Segment
getText
start
len
segment
getLineText
String
lineIndex
int
return
getLineText
lineIndex
getLineText
lineIndex
int
segment
Segment
getLineText
lineIndex
segment
getText
String
return
getText
getLength
setText
text
String
try
beginCompoundEdit
remove
getLength
insert
text
endCompoundEdit
selectAll
setSelection
Selection
Range
getLength
moveCaretPosition
getLength
selectLine
int
caretLine
getCaretLine
int
start
getLineStartOffset
caretLine
int
end
getLineEndOffset
caretLine
Selection
s
Selection
Range
start
end
if
multi
addToSelection
s
setSelection
s
moveCaretPosition
end
selectParagraph
int
caretLine
getCaretLine
if
getLineLength
caretLine
block
getToolkit
beep
return
int
start
caretLine
int
end
caretLine
while
start
block
if
getLineLength
start
break
start
while
end
getLineCount
block
if
getLineLength
end
break
end
int
selectionStart
getLineStartOffset
start
int
selectionEnd
getLineEndOffset
end
Selection
s
Selection
Range
selectionStart
selectionEnd
if
multi
addToSelection
s
setSelection
s
moveCaretPosition
selectionEnd
selectWord
int
line
getCaretLine
int
lineStart
getLineStartOffset
line
int
offset
getCaretPosition
lineStart
if
getLineLength
line
return
String
lineText
getLineText
line
String
noWordSep
getStringProperty
if
offset
getLineLength
line
offset
int
wordStart
findWordStart
lineText
offset
noWordSep
int
wordEnd
findWordEnd
lineText
offset
noWordSep
Selection
s
Selection
Range
lineStart
wordStart
lineStart
wordEnd
if
multi
addToSelection
s
setSelection
s
moveCaretPosition
lineStart
wordEnd
selectToMatchingBracket
Selection
position
int
quickCopy
boolean
int
positionLine
getLineOfOffset
position
int
lineOffset
position
getLineStartOffset
positionLine
if
getLineLength
positionLine
block
int
bracket
findMatchingBracket
buffer
positionLine
max
lineOffset
if
bracket
block
Selection
s
if
bracket
position
block
if
quickCopy
moveCaretPosition
position
s
Selection
Range
bracket
position
block
if
quickCopy
moveCaretPosition
bracket
s
Selection
Range
position
bracket
if
multi
quickCopy
selectNone
addToSelection
s
return
s
return
selectToMatchingBracket
selectToMatchingBracket
caret
selectBlock
String
openBrackets
String
closeBrackets
Selection
s
getSelectionAtOffset
caret
int
start
end
if
s
start
end
caret
block
start
start
end
end
String
text
getText
getLength
int
count
char
openBracket
char
closeBracket
if
start
block
getToolkit
beep
return
while
start
block
char
c
charAt
start
int
index
indexOf
c
if
index
block
if
count
block
openBracket
c
closeBracket
charAt
index
break
if
indexOf
c
count
count
if
openBracket
block
getToolkit
beep
return
block
do
end
getLength
block
char
c
charAt
end
if
c
closeBracket
block
if
count
block
end
break
if
c
openBracket
count
s
Selection
Range
start
end
if
multi
addToSelection
s
setSelection
s
moveCaretPosition
end
lineInStructureScope
boolean
line
int
if
match
return
if
startLine
caretLine
return
line
startLine
line
caretLine
return
line
endLine
line
caretLine
invertSelection
Selection
newSelection
Selection
size
int
lastOffset
for
forControl
int
i
i
size
i
block
Selection
s
Selection
elementAt
i
newSelection
i
Selection
Range
lastOffset
getStart
lastOffset
getEnd
newSelection
size
Selection
Range
lastOffset
getLength
setSelection
newSelection
getSelectionCount
int
return
size
getSelection
Selection
Selection
sel
Selection
size
copyInto
sel
return
sel
selectNone
setSelection
Selection
setSelection
selection
Selection
invalidateSelectedLines
selection
removeAllElements
if
selection
block
for
forControl
int
i
i
length
i
_addToSelection
selection
i
fireCaretEvent
setSelection
selection
Selection
invalidateSelectedLines
selection
removeAllElements
if
selection
_addToSelection
selection
fireCaretEvent
addToSelection
selection
Selection
if
selection
block
for
forControl
int
i
i
length
i
_addToSelection
selection
i
invalidateLine
caretLine
fireCaretEvent
addToSelection
selection
Selection
_addToSelection
selection
invalidateLine
caretLine
fireCaretEvent
getSelectionAtOffset
Selection
offset
int
if
selection
block
for
forControl
int
i
i
size
i
block
Selection
s
Selection
elementAt
i
if
offset
start
offset
end
return
s
return
removeFromSelection
sel
Selection
removeElement
sel
invalidateLineRange
startLine
endLine
invalidateLine
caretLine
fireCaretEvent
removeFromSelection
offset
int
Selection
sel
getSelectionAtOffset
offset
if
sel
return
removeElement
sel
invalidateLineRange
startLine
endLine
invalidateLine
caretLine
fireCaretEvent
resizeSelection
offset
int
end
int
extraEndVirt
int
rect
boolean
Selection
s
getSelectionAtOffset
offset
if
s
block
invalidateLineRange
startLine
endLine
removeElement
s
boolean
reversed
if
end
offset
block
int
tmp
offset
offset
end
end
tmp
reversed
Selection
newSel
if
rect
block
Selection
Rect
rectSel
Selection
Rect
offset
end
if
reversed
extraStartVirt
extraEndVirt
extraEndVirt
extraEndVirt
newSel
rectSel
newSel
Selection
Range
offset
end
_addToSelection
newSel
fireCaretEvent
extendSelection
offset
int
end
int
extendSelection
offset
end
extendSelection
offset
int
end
int
extraStartVirt
int
extraEndVirt
int
Selection
s
getSelectionAtOffset
offset
if
s
block
invalidateLineRange
startLine
endLine
removeElement
s
if
offset
start
block
offset
end
end
end
if
offset
end
block
offset
start
if
end
offset
block
int
tmp
end
end
offset
offset
tmp
if
rectangularSelectionMode
block
s
Selection
Rect
offset
end
Selection
Rect
s
extraStartVirt
Selection
Rect
s
extraEndVirt
s
Selection
Range
offset
end
_addToSelection
s
fireCaretEvent
if
rectangularSelectionMode
extraEndVirt
block
int
line
getLineOfOffset
end
scrollTo
line
getLineLength
line
extraEndVirt
getSelectedText
String
s
Selection
StringBuffer
buf
StringBuffer
getText
buffer
buf
return
toString
getSelectedText
String
separator
String
if
size
return
StringBuffer
buf
StringBuffer
for
forControl
int
i
i
size
i
block
if
i
append
separator
Selection
elementAt
i
return
toString
getSelectedText
String
return
getSelectedText
setSelectedText
s
Selection
selectedText
String
if
isEditable
block
throw
InternalError
try
beginCompoundEdit
moveCaretPosition
setText
buffer
selectedText
endCompoundEdit
setSelectedText
selectedText
String
setSelectedText
selectedText
setSelectedText
selectedText
String
moveCaret
boolean
if
isEditable
block
throw
InternalError
Selection
selection
getSelection
if
length
block
insert
caret
selectedText
block
try
int
newCaret
beginCompoundEdit
for
forControl
int
i
i
length
i
block
newCaret
selection
i
setText
buffer
selectedText
if
moveCaret
moveCaretPosition
newCaret
endCompoundEdit
selectNone
getSelectedLines
int
if
size
return
int
caretLine
Integer
line
Set
set
TreeSet
for
forControl
int
i
i
size
i
block
Selection
s
Selection
elementAt
i
int
endLine
end
getLineStartOffset
endLine
endLine
endLine
for
forControl
int
j
startLine
j
endLine
j
block
line
Integer
j
add
line
int
returnValue
int
size
int
i
Iterator
iter
iterator
while
hasNext
block
line
Integer
next
returnValue
i
intValue
return
returnValue
showSelectLineRangeDialog
SelectLineRange
view
addStructureMatcher
matcher
StructureMatcher
add
matcher
removeStructureMatcher
matcher
StructureMatcher
remove
matcher
getStructureMatch
StructureMatcher
Match
return
match
blinkCaret
if
caretBlinks
block
blink
blink
invalidateLine
caretLine
blink
centerCaret
int
offset
getScreenLineStartOffset
visibleLines
if
offset
getToolkit
beep
setCaretPosition
offset
setCaretPosition
newCaret
int
invalidateSelectedLines
removeAllElements
moveCaretPosition
newCaret
setCaretPosition
newCaret
int
doElectricScroll
boolean
invalidateSelectedLines
removeAllElements
moveCaretPosition
newCaret
doElectricScroll
moveCaretPosition
newCaret
int
moveCaretPosition
newCaret
moveCaretPosition
newCaret
int
doElectricScroll
boolean
moveCaretPosition
newCaret
doElectricScroll
ELECTRIC_SCROLL
NORMAL_SCROLL
int
NO_SCROLL
int
NORMAL_SCROLL
int
ELECTRIC_SCROLL
moveCaretPosition
newCaret
int
scrollMode
int
if
newCaret
newCaret
getLength
block
throw
IllegalArgumentException
newCaret
if
match
block
if
caretLine
startLine
invalidateLineRange
caretLine
endLine
invalidateLineRange
startLine
caretLine
match
if
caret
newCaret
block
if
scrollMode
NORMAL_SCROLL
finishCaretUpdate
if
scrollMode
ELECTRIC_SCROLL
finishCaretUpdate
block
int
newCaretLine
getLineOfOffset
newCaret
magicCaret
if
caretLine
newCaretLine
block
if
caretScreenLine
invalidateScreenLineRange
caretScreenLine
caretScreenLine
block
int
newCaretScreenLine
getScreenLineOfOffset
newCaretLine
newCaret
getLineStartOffset
newCaretLine
if
caretScreenLine
invalidateScreenLineRange
newCaretScreenLine
newCaretScreenLine
invalidateScreenLineRange
caretScreenLine
newCaretScreenLine
caretScreenLine
newCaretScreenLine
caret
newCaret
caretLine
newCaretLine
if
scrollMode
NORMAL_SCROLL
finishCaretUpdate
if
scrollMode
ELECTRIC_SCROLL
finishCaretUpdate
getCaretPosition
int
return
caret
getCaretLine
int
return
caretLine
getMagicCaretPosition
int
if
magicCaret
block
magicCaret
subregionOffsetToX
caretLine
caret
getLineStartOffset
caretLine
return
magicCaret
setMagicCaretPosition
magicCaret
int
magicCaret
magicCaret
addCaretListener
listener
CaretListener
add
CaretListener
listener
removeCaretListener
listener
CaretListener
remove
CaretListener
listener
goToNextBracket
select
boolean
int
newCaret
if
caret
getLength
block
String
text
getText
caret
getLength
caret
for
forControl
int
i
i
length
i
block
switch
charAt
i
case
newCaret
caret
i
break
if
newCaret
getToolkit
beep
block
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
goToNextCharacter
select
boolean
Selection
s
getSelectionAtOffset
caret
if
select
s
Selection
Range
block
if
multi
block
if
caret
end
block
moveCaretPosition
end
return
block
setCaretPosition
end
return
int
extraStartVirt
extraEndVirt
if
s
Selection
Rect
block
extraStartVirt
Selection
Rect
s
extraEndVirt
Selection
Rect
s
block
extraStartVirt
extraEndVirt
int
newCaret
caret
if
caret
getLength
block
if
select
rectangularSelectionMode
s
Selection
Rect
block
if
s
caret
start
extraStartVirt
extraEndVirt
block
getToolkit
beep
return
if
caret
getLineEndOffset
caretLine
block
if
select
rectangularSelectionMode
s
Selection
Rect
block
if
s
caret
start
extraStartVirt
extraEndVirt
block
int
line
getNextVisibleLine
caretLine
if
line
block
getToolkit
beep
return
newCaret
getLineStartOffset
line
newCaret
caret
if
select
extendSelection
caret
newCaret
extraStartVirt
extraEndVirt
if
multi
selectNone
moveCaretPosition
newCaret
goToNextLine
select
boolean
Selection
s
getSelectionAtOffset
caret
boolean
rectSelect
s
rectangularSelectionMode
s
Selection
Rect
int
magic
getMagicCaretPosition
int
newCaret
getBelowPosition
caretLine
caret
getLineStartOffset
caretLine
magic
rectSelect
select
if
newCaret
block
int
end
getLineEndOffset
caretLine
if
caret
end
block
getToolkit
beep
return
newCaret
end
if
select
block
RectParams
params
getRectParams
caret
newCaret
int
extraStartVirt
int
extraEndVirt
if
params
block
extraStartVirt
extraEndVirt
block
extraStartVirt
extraStartVirt
extraEndVirt
extraEndVirt
newCaret
newCaret
extendSelection
caret
newCaret
extraStartVirt
extraEndVirt
if
multi
selectNone
moveCaretPosition
newCaret
setMagicCaretPosition
magic
goToNextMarker
select
boolean
Vector
markers
getMarkers
if
size
block
getToolkit
beep
return
Marker
marker
for
forControl
int
i
i
size
i
block
Marker
_marker
Marker
get
i
if
getPosition
caret
block
marker
_marker
break
if
marker
marker
Marker
get
if
select
extendSelection
caret
getPosition
if
multi
selectNone
moveCaretPosition
getPosition
goToNextPage
select
boolean
scrollToCaret
int
magic
getMagicCaretPosition
if
caretLine
getFirstVisibleLine
block
caretLine
getNextVisibleLine
caretLine
int
newCaret
if
getFirstLine
getVisibleLines
getScrollLineCount
block
int
lastVisibleLine
getLastVisibleLine
newCaret
getLineEndOffset
lastVisibleLine
block
int
caretScreenLine
getScreenLineOfOffset
caret
scrollDownPage
newCaret
xToScreenLineOffset
caretScreenLine
magic
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
setMagicCaretPosition
magic
goToNextParagraph
select
boolean
int
lineNo
getCaretLine
int
newCaret
getBufferLength
boolean
foundBlank
for
forControl
int
i
lineNo
i
getLineCount
i
block
if
isLineVisible
i
continue
getLineText
i
lineSegment
for
forControl
int
j
j
count
j
block
switch
array
offset
j
case
break
case
if
foundBlank
block
newCaret
getLineStartOffset
i
break
continue
foundBlank
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
goToNextWord
select
boolean
goToNextWord
select
goToNextWord
select
boolean
eatWhitespace
boolean
int
lineStart
getLineStartOffset
caretLine
int
newCaret
caret
lineStart
String
lineText
getLineText
caretLine
if
newCaret
length
block
int
nextLine
getNextVisibleLine
caretLine
if
nextLine
block
getToolkit
beep
return
newCaret
getLineStartOffset
nextLine
block
String
noWordSep
getStringProperty
newCaret
findWordEnd
lineText
newCaret
noWordSep
eatWhitespace
newCaret
lineStart
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
goToPrevBracket
select
boolean
String
text
getText
caret
int
newCaret
for
forControl
int
i
getCaretPosition
i
i
block
switch
charAt
i
case
newCaret
i
break
if
newCaret
getToolkit
beep
block
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
goToPrevCharacter
select
boolean
Selection
s
getSelectionAtOffset
caret
if
select
s
Selection
Range
block
if
multi
block
if
caret
start
block
moveCaretPosition
start
return
block
setCaretPosition
start
return
int
extraStartVirt
int
extraEndVirt
int
newCaret
caret
if
select
caret
getLineEndOffset
caretLine
block
if
s
Selection
Rect
block
extraStartVirt
Selection
Rect
s
extraEndVirt
Selection
Rect
s
if
caret
start
block
if
extraStartVirt
newCaret
caret
extraStartVirt
block
if
extraEndVirt
newCaret
caret
extraEndVirt
newCaret
caret
if
caret
getLineStartOffset
caretLine
block
int
line
getPrevVisibleLine
caretLine
if
line
block
getToolkit
beep
return
newCaret
getLineEndOffset
line
newCaret
caret
if
select
extendSelection
caret
newCaret
extraStartVirt
extraEndVirt
if
multi
selectNone
moveCaretPosition
newCaret
goToPrevLine
select
boolean
Selection
s
getSelectionAtOffset
caret
boolean
rectSelect
s
rectangularSelectionMode
s
Selection
Rect
int
magic
getMagicCaretPosition
int
newCaret
getAbovePosition
caretLine
caret
getLineStartOffset
caretLine
magic
rectSelect
select
if
newCaret
block
int
start
getLineStartOffset
caretLine
if
caret
start
block
getToolkit
beep
return
newCaret
start
if
select
block
RectParams
params
getRectParams
caret
newCaret
int
extraStartVirt
int
extraEndVirt
if
params
block
extraStartVirt
extraEndVirt
block
extraStartVirt
extraStartVirt
extraEndVirt
extraEndVirt
newCaret
newCaret
extendSelection
caret
newCaret
extraStartVirt
extraEndVirt
if
multi
selectNone
moveCaretPosition
newCaret
setMagicCaretPosition
magic
goToPrevMarker
select
boolean
Vector
markers
getMarkers
if
size
block
getToolkit
beep
return
Marker
marker
for
forControl
int
i
size
i
i
block
Marker
_marker
Marker
elementAt
i
if
getPosition
caret
block
marker
_marker
break
if
marker
marker
Marker
get
size
if
select
extendSelection
caret
getPosition
if
multi
selectNone
moveCaretPosition
getPosition
goToPrevPage
select
boolean
scrollToCaret
int
magic
getMagicCaretPosition
if
caretLine
getFirstVisibleLine
block
caretLine
getNextVisibleLine
caretLine
int
newCaret
if
getFirstLine
block
int
firstVisibleLine
getFirstVisibleLine
newCaret
getLineStartOffset
firstVisibleLine
block
int
caretScreenLine
getScreenLineOfOffset
caret
scrollUpPage
newCaret
xToScreenLineOffset
caretScreenLine
magic
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
setMagicCaretPosition
magic
goToPrevParagraph
select
boolean
int
lineNo
caretLine
int
newCaret
boolean
foundBlank
for
forControl
int
i
lineNo
i
i
block
if
isLineVisible
i
continue
getLineText
i
lineSegment
for
forControl
int
j
j
count
j
block
switch
array
offset
j
case
break
case
if
foundBlank
block
newCaret
getLineEndOffset
i
break
continue
foundBlank
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
goToPrevWord
select
boolean
goToPrevWord
select
goToPrevWord
select
boolean
eatWhitespace
boolean
int
lineStart
getLineStartOffset
caretLine
int
newCaret
caret
lineStart
String
lineText
getLineText
caretLine
if
newCaret
block
if
lineStart
block
getToolkit
beep
return
block
int
prevLine
getPrevVisibleLine
caretLine
if
prevLine
block
getToolkit
beep
return
newCaret
getLineEndOffset
prevLine
block
String
noWordSep
getStringProperty
newCaret
findWordStart
lineText
newCaret
noWordSep
eatWhitespace
newCaret
lineStart
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
smartHome
select
boolean
Macros
Recorder
recorder
getMacroRecorder
switch
getInputHandler
getLastActionCount
case
if
recorder
record
select
goToStartOfWhiteSpace
select
break
case
if
recorder
record
select
goToStartOfLine
select
break
case
if
recorder
record
select
goToFirstVisibleLine
select
break
smartEnd
select
boolean
Macros
Recorder
recorder
getMacroRecorder
switch
getInputHandler
getLastActionCount
case
if
recorder
record
select
goToEndOfWhiteSpace
select
break
case
if
recorder
record
select
goToEndOfLine
select
break
case
if
recorder
record
select
goToLastVisibleLine
select
break
goToStartOfLine
select
boolean
Selection
s
getSelectionAtOffset
caret
int
line
select
s
caretLine
startLine
int
newCaret
getLineStartOffset
line
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
goToEndOfLine
select
boolean
Selection
s
getSelectionAtOffset
caret
int
line
select
s
caretLine
endLine
int
newCaret
getLineEndOffset
line
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
goToStartOfWhiteSpace
select
boolean
Selection
s
getSelectionAtOffset
caret
int
line
offset
if
select
s
block
line
caretLine
offset
caret
getLineStartOffset
line
block
line
startLine
offset
start
getLineStartOffset
line
int
firstIndent
getSubregionStartOffset
line
offset
if
firstIndent
getLineStartOffset
line
block
firstIndent
getLeadingWhiteSpace
getLineText
line
if
firstIndent
getLineLength
line
firstIndent
firstIndent
getLineStartOffset
line
if
select
extendSelection
caret
firstIndent
if
multi
selectNone
moveCaretPosition
firstIndent
goToEndOfWhiteSpace
select
boolean
Selection
s
getSelectionAtOffset
caret
int
line
offset
if
select
s
block
line
caretLine
offset
caret
getLineStartOffset
line
block
line
endLine
offset
end
getLineStartOffset
line
int
lastIndent
getSubregionEndOffset
line
offset
if
lastIndent
getLineEndOffset
line
block
lastIndent
getLineLength
line
getTrailingWhiteSpace
getLineText
line
if
lastIndent
lastIndent
getLineLength
line
lastIndent
getLineStartOffset
line
block
lastIndent
if
select
extendSelection
caret
lastIndent
if
multi
selectNone
moveCaretPosition
lastIndent
goToFirstVisibleLine
select
boolean
int
firstVisibleLine
getFirstLine
electricScroll
int
firstVisible
getScreenLineStartOffset
firstVisibleLine
if
firstVisible
block
firstVisible
getLineStartOffset
getFirstVisibleLine
if
select
extendSelection
caret
firstVisible
if
multi
selectNone
moveCaretPosition
firstVisible
goToLastVisibleLine
select
boolean
int
lastVisible
if
getFirstLine
visibleLines
getScrollLineCount
block
lastVisible
getLineEndOffset
getLastVisibleLine
block
lastVisible
visibleLines
electricScroll
if
lastLinePartial
lastVisible
if
lastVisible
lastVisible
lastVisible
getScreenLineEndOffset
lastVisible
if
lastVisible
block
lastVisible
getLineEndOffset
getLastVisibleLine
if
select
extendSelection
caret
lastVisible
if
multi
selectNone
moveCaretPosition
lastVisible
goToBufferStart
select
boolean
int
start
getLineStartOffset
getFirstVisibleLine
if
select
extendSelection
caret
start
if
multi
selectNone
moveCaretPosition
start
goToBufferEnd
select
boolean
int
end
getLineEndOffset
getLastVisibleLine
if
select
extendSelection
caret
end
if
multi
selectNone
moveCaretPosition
end
goToMatchingBracket
if
getLineLength
caretLine
block
int
dot
caret
getLineStartOffset
caretLine
int
bracket
findMatchingBracket
buffer
caretLine
max
dot
if
bracket
block
selectNone
moveCaretPosition
bracket
return
getToolkit
beep
showGoToLineDialog
String
line
input
view
if
line
return
try
int
lineNumber
parseInt
line
setCaretPosition
getLineStartOffset
lineNumber
catchClause
e
getToolkit
beep
userInput
ch
char
if
isEditable
block
getToolkit
beep
return
if
ch
getExpandOnInput
expandAbbrev
view
return
if
ch
block
if
size
block
Selection
sel
Selection
elementAt
if
sel
Selection
Rect
startLine
endLine
start
getLineStartOffset
startLine
end
getLineEndOffset
startLine
block
insertTab
shiftIndentRight
if
size
shiftIndentRight
insertTab
return
block
boolean
indent
String
indentOpenBrackets
String
getProperty
String
indentCloseBrackets
String
getProperty
if
indentCloseBrackets
indexOf
ch
indentOpenBrackets
indexOf
ch
block
indent
block
indent
String
str
valueOf
ch
Selection
selection
getSelection
if
length
block
for
forControl
int
i
i
length
i
block
Selection
s
selection
i
setSelectedText
s
str
return
if
ch
block
if
doWordWrap
return
doWordWrap
try
if
overwrite
indent
beginCompoundEdit
if
overwrite
block
int
caretLineEnd
getLineEndOffset
caretLine
if
caretLineEnd
caret
remove
caret
insert
caret
str
if
indent
indentLine
caretLine
if
overwrite
indent
endCompoundEdit
isOverwriteEnabled
boolean
return
overwrite
setOverwriteEnabled
overwrite
boolean
blink
restart
overwrite
overwrite
invalidateLine
caretLine
if
getStatus
getStatus
updateMiscStatus
toggleOverwriteEnabled
setOverwriteEnabled
overwrite
if
getStatus
block
getStatus
setMessageAndClear
getProperty
Integer
Integer
overwrite
backspace
delete
backspaceWord
backspaceWord
backspaceWord
eatWhitespace
boolean
if
isEditable
block
getToolkit
beep
return
if
size
block
setSelectedText
return
int
lineStart
getLineStartOffset
caretLine
int
_caret
caret
lineStart
String
lineText
getLineText
caretLine
if
_caret
block
if
lineStart
block
getToolkit
beep
return
_caret
block
String
noWordSep
getStringProperty
_caret
findWordStart
lineText
_caret
noWordSep
eatWhitespace
remove
_caret
lineStart
caret
_caret
lineStart
delete
delete
deleteToEndOfLine
if
isEditable
block
getToolkit
beep
return
remove
caret
getLineEndOffset
caretLine
caret
deleteLine
if
isEditable
block
getToolkit
beep
return
int
start
getLineStartOffset
caretLine
int
end
getLineEndOffset
caretLine
int
x
subregionOffsetToX
caretLine
caret
start
try
if
end
getLength
block
if
start
start
end
beginCompoundEdit
remove
start
end
start
endCompoundEdit
int
lastLine
getLastVisibleLine
if
caretLine
lastLine
block
int
offset
xToSubregionOffset
lastLine
x
setCaretPosition
getLineStartOffset
lastLine
offset
block
int
offset
xToSubregionOffset
caretLine
x
setCaretPosition
start
offset
deleteParagraph
if
isEditable
block
getToolkit
beep
return
int
start
end
getLength
for
forControl
int
i
caretLine
i
i
block
getLineText
i
lineSegment
for
forControl
int
j
j
count
j
block
switch
array
offset
j
case
break
case
continue
start
getLineStartOffset
i
break
for
forControl
int
i
caretLine
i
getLineCount
i
block
getLineText
i
lineSegment
for
forControl
int
j
j
count
j
block
switch
array
offset
j
case
break
case
continue
end
getLineEndOffset
i
break
remove
start
end
start
deleteToStartOfLine
if
isEditable
block
getToolkit
beep
return
remove
getLineStartOffset
caretLine
caret
getLineStartOffset
caretLine
deleteWord
deleteWord
deleteWord
eatWhitespace
boolean
if
isEditable
block
getToolkit
beep
return
if
size
block
setSelectedText
return
int
lineStart
getLineStartOffset
caretLine
int
_caret
caret
lineStart
String
lineText
getLineText
caretLine
if
_caret
length
block
if
lineStart
_caret
getLength
block
getToolkit
beep
return
_caret
block
String
noWordSep
getStringProperty
_caret
findWordEnd
lineText
_caret
noWordSep
eatWhitespace
remove
caret
_caret
lineStart
caret
isMultipleSelectionEnabled
boolean
return
multi
toggleMultipleSelectionEnabled
setMultipleSelectionEnabled
multi
if
getStatus
block
getStatus
setMessageAndClear
getProperty
Integer
Integer
multi
setMultipleSelectionEnabled
multi
boolean
multi
multi
if
getStatus
getStatus
updateMiscStatus
repaint
isRectangularSelectionEnabled
boolean
return
rectangularSelectionMode
toggleRectangularSelectionEnabled
setRectangularSelectionEnabled
rectangularSelectionMode
if
getStatus
block
getStatus
setMessageAndClear
getProperty
Integer
Integer
rectangularSelectionMode
setRectangularSelectionEnabled
rectangularSelectionMode
boolean
rectangularSelectionMode
rectangularSelectionMode
if
getStatus
getStatus
updateMiscStatus
repaint
goToMarker
shortcut
char
select
boolean
Marker
marker
getMarker
shortcut
if
marker
block
getToolkit
beep
return
int
pos
getPosition
if
select
extendSelection
caret
pos
if
multi
selectNone
moveCaretPosition
pos
addMarker
Selection
selection
getSelection
for
forControl
int
i
i
length
i
block
Selection
s
selection
i
if
startLine
endLine
block
if
startLine
caretLine
addMarker
start
if
endLine
caretLine
addMarker
end
addOrRemoveMarker
caret
swapMarkerAndCaret
shortcut
char
Marker
marker
getMarker
shortcut
if
marker
block
getToolkit
beep
return
int
caret
getCaretPosition
setCaretPosition
getPosition
addMarker
shortcut
caret
goToParentFold
int
line
int
level
getFoldLevel
caretLine
for
forControl
int
i
caretLine
i
i
block
if
getFoldLevel
i
level
block
line
i
break
if
line
block
getToolkit
beep
return
int
magic
getMagicCaretPosition
int
newCaret
getLineStartOffset
line
xToSubregionOffset
line
magic
if
multi
selectNone
moveCaretPosition
newCaret
setMagicCaretPosition
magic
goToNextFold
select
boolean
int
nextFold
for
forControl
int
i
caretLine
i
getLineCount
i
block
if
isFoldStart
i
isLineVisible
i
block
nextFold
i
break
if
nextFold
block
getToolkit
beep
return
int
magic
getMagicCaretPosition
int
newCaret
getLineStartOffset
nextFold
xToSubregionOffset
nextFold
magic
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
setMagicCaretPosition
magic
goToPrevFold
select
boolean
int
prevFold
for
forControl
int
i
caretLine
i
i
block
if
isFoldStart
i
isLineVisible
i
block
prevFold
i
break
if
prevFold
block
getToolkit
beep
return
int
magic
getMagicCaretPosition
int
newCaret
getLineStartOffset
prevFold
xToSubregionOffset
prevFold
magic
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
setMagicCaretPosition
magic
collapseFold
int
x
subregionOffsetToX
caretLine
caret
getLineStartOffset
caretLine
collapseFold
caretLine
if
isLineVisible
caretLine
return
int
line
getPrevVisibleLine
caretLine
if
multi
selectNone
moveCaretPosition
getLineStartOffset
line
xToSubregionOffset
line
x
expandFold
fully
boolean
int
x
subregionOffsetToX
caretLine
caret
getLineStartOffset
caretLine
int
line
expandFold
caretLine
fully
if
fully
line
block
if
multi
selectNone
moveCaretPosition
getLineStartOffset
line
xToSubregionOffset
line
x
selectFold
selectFold
caretLine
selectFold
line
int
int
lines
getFoldAtLine
line
int
newCaret
getLineEndOffset
lines
Selection
s
Selection
Range
getLineStartOffset
lines
newCaret
if
multi
addToSelection
s
setSelection
s
moveCaretPosition
newCaret
narrowToFold
int
lines
getFoldAtLine
caretLine
if
lines
lines
getLineCount
getToolkit
beep
narrow
lines
lines
narrowToSelection
if
size
block
getToolkit
beep
return
Selection
sel
Selection
elementAt
narrow
getStartLine
getEndLine
selectNone
addExplicitFold
if
getStringProperty
equals
block
error
view
return
String
lineComment
getContextSensitiveProperty
caret
String
commentStart
getContextSensitiveProperty
caret
String
commentEnd
getContextSensitiveProperty
caret
String
start
end
if
lineComment
block
start
lineComment
end
lineComment
if
commentStart
commentEnd
block
start
commentStart
commentEnd
end
commentStart
commentEnd
block
start
end
try
beginCompoundEdit
if
size
block
String
line
getLineText
caretLine
String
whitespace
substring
getLeadingWhiteSpace
line
int
loc
caret
length
start
start
whitespace
insert
caret
start
insert
caret
end
moveCaretPosition
loc
block
int
loc
for
forControl
int
i
i
size
i
block
Selection
s
Selection
elementAt
i
String
line
getLineText
startLine
String
whitespace
substring
getLeadingWhiteSpace
line
loc
start
length
insert
start
start
whitespace
if
end
getLineStartOffset
endLine
block
insert
end
end
block
insert
end
end
setCaretPosition
loc
endCompoundEdit
lineComment
String
comment
getContextSensitiveProperty
caret
if
isEditable
comment
length
block
getToolkit
beep
return
comment
comment
beginCompoundEdit
int
lines
getSelectedLines
try
for
forControl
int
i
i
length
i
block
String
text
getLineText
lines
i
insert
getLineStartOffset
lines
i
getLeadingWhiteSpace
text
comment
endCompoundEdit
selectNone
rangeComment
String
commentStart
getContextSensitiveProperty
caret
String
commentEnd
getContextSensitiveProperty
caret
if
isEditable
commentStart
commentEnd
length
length
block
getToolkit
beep
return
commentStart
commentStart
commentEnd
commentEnd
try
beginCompoundEdit
Selection
selection
getSelection
if
length
block
int
oldCaret
caret
insert
caret
commentStart
insert
caret
commentEnd
setCaretPosition
oldCaret
length
for
forControl
int
i
i
length
i
block
Selection
s
selection
i
if
s
Selection
Range
block
insert
start
commentStart
insert
end
commentEnd
if
s
Selection
Rect
block
Selection
Rect
rect
Selection
Rect
s
int
start
getStartColumn
buffer
int
end
getEndColumn
buffer
for
forControl
int
j
startLine
j
endLine
j
block
insertAtColumn
j
end
commentEnd
insertAtColumn
j
start
commentStart
selectNone
endCompoundEdit
formatParagraph
if
isEditable
block
getToolkit
beep
return
if
maxLineLen
block
error
view
return
Selection
selection
getSelection
if
length
block
beginCompoundEdit
for
forControl
int
i
i
length
i
block
Selection
s
selection
i
setSelectedText
s
format
getSelectedText
s
maxLineLen
getTabSize
endCompoundEdit
block
int
lineNo
getCaretLine
int
start
end
getLength
for
forControl
int
i
lineNo
i
i
block
getLineText
i
lineSegment
for
forControl
int
j
j
count
j
block
switch
array
offset
j
case
break
case
continue
start
getLineEndOffset
i
break
for
forControl
int
i
lineNo
i
getLineCount
i
block
getLineText
i
lineSegment
for
forControl
int
j
j
count
j
block
switch
array
offset
j
case
break
case
continue
end
getLineStartOffset
i
break
try
beginCompoundEdit
String
text
getText
start
end
start
remove
start
end
start
insert
start
format
text
maxLineLen
getTabSize
endCompoundEdit
spacesToTabs
Selection
selection
getSelection
if
isEditable
block
getToolkit
beep
return
beginCompoundEdit
if
length
block
setText
spacesToTabs
getText
getTabSize
block
for
forControl
int
i
i
length
i
block
Selection
s
selection
i
setSelectedText
s
spacesToTabs
getSelectedText
s
getTabSize
endCompoundEdit
tabsToSpaces
Selection
selection
getSelection
if
isEditable
block
getToolkit
beep
return
beginCompoundEdit
if
length
block
setText
tabsToSpaces
getText
getTabSize
block
for
forControl
int
i
i
length
i
block
Selection
s
selection
i
setSelectedText
s
tabsToSpaces
getSelectedText
s
getTabSize
endCompoundEdit
toUpperCase
Selection
selection
getSelection
if
isEditable
length
block
getToolkit
beep
return
beginCompoundEdit
for
forControl
int
i
i
length
i
block
Selection
s
selection
i
setSelectedText
s
getSelectedText
toUpperCase
s
endCompoundEdit
toLowerCase
Selection
selection
getSelection
if
isEditable
length
block
getToolkit
beep
return
beginCompoundEdit
for
forControl
int
i
i
length
i
block
Selection
s
selection
i
setSelectedText
s
getSelectedText
toLowerCase
s
endCompoundEdit
removeTrailingWhiteSpace
if
isEditable
getToolkit
beep
block
removeTrailingWhiteSpace
getSelectedLines
insertEnterAndIndent
if
isEditable
getToolkit
beep
block
try
beginCompoundEdit
setSelectedText
indentLine
caretLine
endCompoundEdit
insertTabAndIndent
if
isEditable
block
getToolkit
beep
return
if
size
block
String
text
getLineText
caretLine
int
start
getLineStartOffset
caretLine
int
whiteSpace
getLeadingWhiteSpace
text
if
caret
start
whiteSpace
indentLine
caretLine
return
userInput
indentSelectedLines
if
isEditable
getToolkit
beep
block
indentLines
getSelectedLines
selectNone
shiftIndentLeft
if
isEditable
getToolkit
beep
block
shiftIndentLeft
getSelectedLines
shiftIndentRight
if
isEditable
getToolkit
beep
shiftIndentRight
getSelectedLines
joinLines
int
end
getLineEndOffset
caretLine
if
isEditable
end
getLength
block
getToolkit
beep
return
try
beginCompoundEdit
remove
end
getLeadingWhiteSpace
getLineText
caretLine
insert
end
endCompoundEdit
setCaretPosition
end
showWordCountDialog
String
selection
getSelectedText
if
selection
block
doWordCount
view
selection
return
doWordCount
view
getText
getLength
isRightClickPopupEnabled
boolean
return
popupEnabled
setRightClickPopupEnabled
popupEnabled
boolean
popupEnabled
popupEnabled
getRightClickPopup
JPopupMenu
return
popup
setRightClickPopup
popup
JPopupMenu
popup
popup
handlePopupTrigger
evt
MouseEvent
if
isVisible
setVisible
block
int
x
getX
int
y
getY
int
dragStart
xyToOffset
x
y
isBlockCaretEnabled
isOverwriteEnabled
if
getSelectionCount
multi
moveCaretPosition
dragStart
showPopupMenu
popup
painter
x
y
addLeftOfScrollBar
comp
Component
add
comp
getComponentCount
removeLeftOfScrollBar
comp
Component
remove
comp
addNotify
addNotify
sharedInstance
registerComponent
painter
sharedInstance
registerComponent
gutter
recalculateVisibleLines
if
isLoaded
recalculateLastPhysicalLine
propertiesChanged
removeNotify
removeNotify
sharedInstance
unregisterComponent
painter
sharedInstance
unregisterComponent
gutter
if
focusedComponent
focusedComponent
getFocusTraversalKeysEnabled
boolean
return
getFocusCycleRoot
boolean
return
processKeyEvent
evt
KeyEvent
processKeyEvent
evt
TEXT_AREA
if
isConsumed
processKeyEvent
evt
addTopComponent
comp
Component
add
TOP
comp
removeTopComponent
comp
Component
remove
comp
propertiesChanged
if
buffer
return
int
_tabSize
getTabSize
char
foo
char
_tabSize
for
forControl
int
i
i
length
i
block
foo
i
tabSize
float
getStringWidth
String
foo
charWidth
int
round
getFont
getStringBounds
foo
getFontRenderContext
getWidth
boolean
invalidateCachedScreenLineCounts
String
wrap
getStringProperty
if
equals
wrap
block
wrap
wrap
hardWrap
equals
if
displayManager
bufferChanging
block
callReset
callReset
invalidateCachedScreenLineCounts
int
maxLineLen
getIntegerProperty
if
maxLineLen
maxLineLen
block
maxLineLen
maxLineLen
if
displayManager
bufferChanging
block
callReset
callReset
invalidateCachedScreenLineCounts
if
invalidateCachedScreenLineCounts
invalidateCachedScreenLineCounts
invalidateAll
if
displayManager
bufferChanging
block
updateWrapSettings
_notifyScreenLineChanges
repaint
repaint
getSelectionStart
int
if
size
return
caret
return
Selection
elementAt
getSelectionStart
int
line
int
if
size
return
caret
return
Selection
elementAt
getSelectionStartLine
int
if
size
return
caret
return
Selection
elementAt
setSelectionStart
selectionStart
int
select
selectionStart
getSelectionEnd
getSelectionEnd
int
if
size
return
caret
return
Selection
elementAt
getSelectionEnd
int
line
int
if
size
return
caret
return
Selection
elementAt
getSelectionEndLine
int
if
size
return
caret
return
Selection
elementAt
setSelectionEnd
selectionEnd
int
select
getSelectionStart
selectionEnd
getMarkPosition
int
Selection
s
getSelectionAtOffset
caret
if
s
return
caret
if
start
caret
return
end
if
end
caret
return
start
return
caret
getMarkLine
int
if
size
return
caretLine
Selection
s
Selection
elementAt
if
start
caret
return
endLine
if
end
caret
return
startLine
return
caretLine
select
start
int
end
int
select
start
end
select
start
int
end
int
doElectricScroll
boolean
selectNone
int
newStart
newEnd
if
start
end
block
newStart
start
newEnd
end
block
newStart
end
newEnd
start
setSelection
Selection
Range
newStart
newEnd
moveCaretPosition
end
doElectricScroll
isSelectionRectangular
boolean
Selection
s
getSelectionAtOffset
caret
if
s
return
return
s
Selection
Rect
Segment
lineSegment
MouseHandler
mouseHandler
ChunkCache
chunkCache
DisplayManager
displayManager
boolean
bufferChanging
int
maxHorizontalScrollWidth
String
wrap
boolean
hardWrap
float
tabSize
int
charWidth
int
maxLineLen
boolean
scrollBarsInitialized
Vector
selection
Point
returnValue
boolean
lastLinePartial
isCaretVisible
boolean
return
blink
hasFocus
isStructureHighlightVisible
boolean
return
match
hasFocus
isLineVisible
startLine
isLineVisible
endLine
updateMaxHorizontalScrollWidth
int
max
getMaxHorizontalScrollWidth
if
max
maxHorizontalScrollWidth
block
maxHorizontalScrollWidth
max
setValues
max
min
maxHorizontalScrollWidth
charWidth
getWidth
horizontalOffset
getWidth
maxHorizontalScrollWidth
charWidth
recalculateVisibleLines
if
painter
return
int
height
getHeight
int
lineHeight
getFontMetrics
getHeight
if
lineHeight
visibleLines
if
height
block
visibleLines
lastLinePartial
block
visibleLines
height
lineHeight
lastLinePartial
height
lineHeight
if
lastLinePartial
visibleLines
recalculateVisibleLines
if
displayManager
buffer
isLoaded
setFirstLine
getFirstLine
updateScrollBars
foldStructureChanged
invalidateAll
recalculateLastPhysicalLine
repaint
updateScrollBars
if
buffer
return
if
SCROLL_DEBUG
log
DEBUG
getScrollLineCount
if
vertical
visibleLines
block
if
SCROLL_DEBUG
log
DEBUG
int
lineCount
getScrollLineCount
int
firstLine
getFirstLine
int
visible
visibleLines
lastLinePartial
setValues
firstLine
visible
lineCount
setUnitIncrement
setBlockIncrement
visible
int
width
getWidth
if
horizontal
width
block
if
SCROLL_DEBUG
log
DEBUG
repaint
setValue
horizontalOffset
setUnitIncrement
getFontMetrics
charWidth
setBlockIncrement
width
_finishCaretUpdate
if
queuedCaretUpdate
return
try
blink
restart
if
isLineVisible
caretLine
block
if
caretLine
getFirstVisibleLine
caretLine
getLastVisibleLine
block
int
collapseFolds
getIntegerProperty
if
collapseFolds
block
expandFolds
collapseFolds
expandFold
caretLine
expandAllFolds
expandFold
caretLine
scrollToCaret
queuedScrollToElectric
updateBracketHighlightWithDelay
if
queuedFireCaretEvent
fireCaretEvent
queuedCaretUpdate
queuedScrollToElectric
queuedFireCaretEvent
getSelectionStartAndEnd
int
screenLine
int
physicalLine
int
s
Selection
int
start
getScreenLineStartOffset
screenLine
int
end
getScreenLineEndOffset
screenLine
if
end
start
start
end
return
int
selStartScreenLine
if
isLineVisible
startLine
selStartScreenLine
getScreenLineOfOffset
start
selStartScreenLine
int
selEndScreenLine
if
isLineVisible
endLine
selEndScreenLine
getScreenLineOfOffset
end
selEndScreenLine
int
lineStart
getLineStartOffset
physicalLine
int
x1
x2
if
s
Selection
Rect
block
start
lineStart
end
lineStart
Selection
Rect
rect
Selection
Rect
s
int
_start
getStartColumn
buffer
int
_end
getEndColumn
buffer
int
lineLen
getLineLength
physicalLine
int
total
int
int
rectStart
getOffsetOfVirtualColumn
physicalLine
_start
total
if
rectStart
block
x1
_start
total
charWidth
rectStart
lineLen
x1
int
rectEnd
getOffsetOfVirtualColumn
physicalLine
_end
total
if
rectEnd
block
x2
_end
total
charWidth
rectEnd
lineLen
x2
if
end
rectStart
start
rectEnd
return
x1
rectStart
start
x1
offsetToXY
x
physicalLine
rectStart
returnValue
x2
rectEnd
end
getWidth
x2
offsetToXY
x
physicalLine
rectEnd
returnValue
if
selStartScreenLine
selEndScreenLine
selStartScreenLine
block
x1
offsetToXY
x
physicalLine
start
lineStart
returnValue
x2
offsetToXY
x
physicalLine
end
lineStart
returnValue
if
screenLine
selStartScreenLine
block
x1
offsetToXY
x
physicalLine
start
lineStart
returnValue
x2
getWidth
if
screenLine
selEndScreenLine
block
x1
x2
offsetToXY
x
physicalLine
end
lineStart
returnValue
block
x1
x2
getWidth
if
x1
x1
if
x2
x2
if
x1
x2
x2
return
int
x1
x2
insideSelection
boolean
x
int
y
int
int
offset
xyToOffset
x
y
Selection
s
getSelectionAtOffset
offset
if
s
return
int
screenLine
getScreenLineOfOffset
offset
if
screenLine
return
int
selectionStartAndEnd
getSelectionStartAndEnd
screenLine
getLineOfOffset
offset
s
if
selectionStartAndEnd
return
return
x
selectionStartAndEnd
x
selectionStartAndEnd
String
CENTER
String
RIGHT
String
LEFT
String
BOTTOM
String
TOP
Timer
caretTimer
Timer
structureTimer
JEditTextArea
focusedComponent
View
view
Gutter
gutter
TextAreaPainter
painter
JPopupMenu
popup
boolean
popupEnabled
EventListenerList
listenerList
MutableCaretEvent
caretEvent
boolean
caretBlinks
boolean
blink
int
physLastLine
int
screenLastLine
int
visibleLines
int
electricScroll
int
horizontalOffset
boolean
quickCopy
Box
verticalBox
JScrollBar
vertical
JScrollBar
horizontal
Buffer
buffer
int
caret
int
caretLine
int
caretScreenLine
List
structureMatchers
StructureMatcher
Match
match
int
magicCaret
boolean
multi
boolean
overwrite
boolean
rectangularSelectionMode
boolean
dndEnabled
Method
dndCallback
boolean
dndInProgress
boolean
queuedCaretUpdate
boolean
queuedScrollToElectric
boolean
queuedFireCaretEvent
startDragAndDrop
evt
InputEvent
copy
boolean
try
invoke
Object
evt
Boolean
copy
catchClause
e
log
ERROR
e
_addToSelection
addMe
Selection
if
start
end
block
throw
IllegalArgumentException
start
end
if
start
end
block
if
addMe
Selection
Range
return
if
addMe
Selection
Rect
block
if
Selection
Rect
addMe
return
for
forControl
int
i
i
size
i
block
Selection
s
Selection
elementAt
i
if
overlaps
addMe
block
start
min
start
start
end
max
end
end
removeElement
s
i
startLine
getLineOfOffset
start
endLine
getLineOfOffset
end
boolean
added
for
forControl
int
i
i
size
i
block
Selection
s
Selection
elementAt
i
if
start
start
block
insertElementAt
addMe
i
added
break
if
added
addElement
addMe
invalidateLineRange
startLine
endLine
finishCaretUpdate
doElectricScroll
boolean
fireCaretEvent
boolean
queuedScrollToElectric
doElectricScroll
queuedFireCaretEvent
fireCaretEvent
if
queuedCaretUpdate
return
queuedCaretUpdate
if
isTransactionInProgress
_finishCaretUpdate
fireCaretEvent
Object
listeners
getListenerList
for
forControl
int
i
length
i
i
block
if
listeners
i
CaretListener
block
try
CaretListener
listeners
i
catchClause
t
log
ERROR
t
fireScrollEvent
vertical
boolean
Object
listeners
getListenerList
for
forControl
int
i
length
i
i
block
if
listeners
i
ScrollListener
block
try
if
vertical
ScrollListener
listeners
i
ScrollListener
listeners
i
catchClause
t
log
ERROR
t
insertTab
int
tabSize
getTabSize
if
getBooleanProperty
block
int
lineStart
getLineStartOffset
caretLine
String
line
getText
lineStart
caret
lineStart
int
pos
for
forControl
int
i
i
length
i
block
switch
charAt
pos
case
pos
break
case
if
pos
tabSize
pos
break
setSelectedText
createWhiteSpace
tabSize
pos
setSelectedText
doWordWrap
boolean
spaceInserted
boolean
if
hardWrap
maxLineLen
return
getLineText
caretLine
lineSegment
int
start
getLineStartOffset
caretLine
int
end
getLineEndOffset
caretLine
int
len
end
start
int
caretPos
caret
start
for
forControl
int
i
caretPos
i
len
i
block
char
ch
array
offset
i
if
ch
ch
return
int
tabSize
getTabSize
String
wordBreakChars
getStringProperty
int
lastInLine
int
logicalLength
int
lastWordOffset
boolean
lastWasSpace
for
forControl
int
i
i
caretPos
i
block
char
ch
array
offset
i
if
ch
block
logicalLength
tabSize
logicalLength
tabSize
if
lastWasSpace
logicalLength
maxLineLen
block
lastInLine
i
lastWordOffset
i
lastWasSpace
if
ch
block
logicalLength
if
lastWasSpace
logicalLength
maxLineLen
block
lastInLine
i
lastWordOffset
i
lastWasSpace
if
wordBreakChars
indexOf
ch
block
logicalLength
if
lastWasSpace
logicalLength
maxLineLen
block
lastInLine
i
lastWordOffset
i
lastWasSpace
block
lastInLine
i
logicalLength
lastWasSpace
boolean
returnValue
int
insertNewLineAt
if
spaceInserted
logicalLength
maxLineLen
lastInLine
caretPos
block
insertNewLineAt
caretPos
returnValue
if
logicalLength
maxLineLen
lastWordOffset
block
insertNewLineAt
lastWordOffset
returnValue
return
try
beginCompoundEdit
insert
start
insertNewLineAt
indentLine
caretLine
endCompoundEdit
return
returnValue
doWordCount
view
View
text
String
char
chars
toCharArray
int
characters
length
int
words
if
characters
words
words
int
lines
boolean
word
for
forControl
int
i
i
length
i
block
switch
chars
i
case
lines
case
if
word
block
words
word
break
case
word
break
if
word
words
Object
args
Integer
characters
Integer
words
Integer
lines
message
view
args
updateBracketHighlightWithDelay
stop
start
updateStructureHighlight
if
isStructureHighlightEnabled
isStructureHighlightEnabled
return
Iterator
iter
iterator
while
hasNext
block
StructureMatcher
matcher
StructureMatcher
next
match
getMatch
if
match
break
if
match
block
if
caretLine
startLine
invalidateLineRange
caretLine
endLine
invalidateLineRange
startLine
caretLine
if
isLineVisible
startLine
getScreenLineOfOffset
startLine
start
getLineStartOffset
startLine
block
showStructureStatusMessage
startLine
caretLine
showStructureStatusMessage
backward
boolean
String
text
getLineText
trim
startLine
if
backward
startLine
length
block
switch
charAt
case
text
getLineText
trim
startLine
text
break
text
replace
getStatus
setMessageAndClear
getProperty
Object
Integer
startLine
text
recalculateLastPhysicalLine
int
oldScreenLastLine
screenLastLine
for
forControl
int
i
visibleLines
i
i
block
ChunkCache
LineInfo
info
getLineInfo
i
if
physicalLine
block
physLastLine
physicalLine
screenLastLine
i
break
invalidateScreenLineRange
oldScreenLastLine
screenLastLine
RectParams
int
extraStartVirt
int
extraEndVirt
int
newCaret
RectParams
extraStartVirt
int
extraEndVirt
int
newCaret
int
extraStartVirt
extraStartVirt
extraEndVirt
extraEndVirt
newCaret
newCaret
getRectParams
RectParams
caret
int
newCaret
int
Selection
s
getSelectionAtOffset
caret
int
virtualWidth
if
s
Selection
Rect
block
if
caret
end
block
virtualWidth
getVirtualWidth
endLine
end
getLineStartOffset
endLine
Selection
Rect
s
block
virtualWidth
getVirtualWidth
startLine
start
getLineStartOffset
startLine
Selection
Rect
s
if
rectangularSelectionMode
block
virtualWidth
getVirtualWidth
caretLine
caret
getLineStartOffset
caretLine
return
int
newLine
getLineOfOffset
newCaret
int
totalVirtualWidth
int
int
newOffset
getOffsetOfVirtualColumn
newLine
virtualWidth
totalVirtualWidth
if
newOffset
block
int
extraVirt
virtualWidth
totalVirtualWidth
newCaret
getLineEndOffset
newLine
RectParams
returnValue
boolean
bias
if
s
bias
newCaret
caret
if
start
caret
bias
newCaret
end
if
end
caret
bias
newCaret
start
bias
if
bias
returnValue
RectParams
extraVirt
newCaret
returnValue
RectParams
extraVirt
newCaret
return
returnValue
block
return
RectParams
getLineStartOffset
newLine
newOffset
delete
forward
boolean
if
isEditable
block
getToolkit
beep
return
if
size
block
Selection
selections
getSelection
for
forControl
int
i
i
length
i
block
Selection
s
selections
i
if
s
Selection
Rect
block
Selection
Rect
r
Selection
Rect
s
int
startColumn
getStartColumn
buffer
if
startColumn
getEndColumn
buffer
block
if
forward
startColumn
getToolkit
beep
tallCaretDelete
r
forward
setSelectedText
s
setSelectedText
s
if
forward
block
if
caret
getLength
block
getToolkit
beep
return
remove
caret
block
if
caret
block
getToolkit
beep
return
remove
caret
tallCaretDelete
s
Selection
Rect
forward
boolean
try
beginCompoundEdit
int
width
int
int
startCol
getStartColumn
buffer
int
startLine
startLine
int
endLine
endLine
for
forControl
int
i
startLine
i
endLine
i
block
int
offset
getOffsetOfVirtualColumn
i
startCol
width
if
offset
block
if
width
startCol
offset
getLineLength
i
block
if
i
startLine
forward
shiftTallCaretLeft
s
continue
offset
getLineStartOffset
i
if
forward
block
if
offset
getLineEndOffset
i
remove
offset
remove
offset
endCompoundEdit
shiftTallCaretLeft
s
Selection
Rect
removeFromSelection
s
addToSelection
Selection
Rect
buffer
getStartLine
getStartColumn
buffer
getEndLine
getEndColumn
buffer
TextAreaBorder
paintBorder
c
Component
g
Graphics
x
int
y
int
width
int
height
int
translate
x
y
setColor
getControlDarkShadow
drawRect
width
height
setColor
getControlHighlight
drawLine
width
width
height
drawLine
height
width
height
setColor
getControl
drawLine
width
width
drawLine
height
height
translate
x
y
getBorderInsets
Insets
c
Component
return
Insets
AbstractBorder
ScrollLayout
addLayoutComponent
name
String
comp
Component
if
equals
CENTER
center
comp
if
equals
RIGHT
right
comp
if
equals
LEFT
left
comp
if
equals
BOTTOM
bottom
comp
if
equals
TOP
top
comp
removeLayoutComponent
comp
Component
if
center
comp
center
if
right
comp
right
if
left
comp
left
if
bottom
comp
bottom
if
top
comp
top
preferredLayoutSize
Dimension
parent
Container
Dimension
dim
Dimension
Border
border
getBorder
Insets
insets
if
border
insets
Insets
block
insets
getBorder
getBorderInsets
width
left
right
height
top
bottom
Dimension
leftPref
getPreferredSize
width
width
Dimension
centerPref
getPreferredSize
width
width
height
height
Dimension
rightPref
getPreferredSize
width
width
Dimension
bottomPref
getPreferredSize
height
height
if
top
block
Dimension
topPref
getPreferredSize
height
height
return
dim
minimumLayoutSize
Dimension
parent
Container
Dimension
dim
Dimension
Border
border
getBorder
Insets
insets
if
border
insets
Insets
block
insets
getBorder
getBorderInsets
width
left
right
height
top
bottom
Dimension
leftPref
getMinimumSize
width
width
Dimension
centerPref
getMinimumSize
width
width
height
height
Dimension
rightPref
getMinimumSize
width
width
Dimension
bottomPref
getMinimumSize
height
height
if
top
block
Dimension
topPref
getMinimumSize
height
height
return
dim
layoutContainer
parent
Container
Dimension
size
getSize
Border
border
getBorder
Insets
insets
if
border
insets
Insets
block
insets
getBorder
getBorderInsets
int
itop
top
int
ileft
left
int
ibottom
bottom
int
iright
right
int
rightWidth
getPreferredSize
width
int
leftWidth
getPreferredSize
width
int
topHeight
if
top
block
topHeight
getPreferredSize
height
block
topHeight
int
bottomHeight
getPreferredSize
height
int
centerWidth
max
width
leftWidth
rightWidth
ileft
iright
int
centerHeight
max
height
topHeight
bottomHeight
itop
ibottom
setBounds
ileft
itop
topHeight
leftWidth
centerHeight
setBounds
ileft
leftWidth
itop
topHeight
centerWidth
centerHeight
setBounds
ileft
leftWidth
centerWidth
itop
topHeight
rightWidth
centerHeight
setBounds
ileft
itop
topHeight
centerHeight
max
width
getWidth
ileft
iright
bottomHeight
if
top
block
setBounds
ileft
itop
leftWidth
centerWidth
rightWidth
topHeight
Component
center
Component
left
Component
right
Component
bottom
Component
top
LayoutManager
CaretBlinker
actionPerformed
evt
ActionEvent
if
focusedComponent
hasFocus
blinkCaret
ActionListener
MutableCaretEvent
MutableCaretEvent
getDot
int
return
getCaretPosition
getMark
int
return
getMarkPosition
CaretEvent
AdjustHandler
adjustmentValueChanged
evt
AdjustmentEvent
if
scrollBarsInitialized
return
if
getAdjustable
vertical
setFirstLine
getValue
setHorizontalOffset
getValue
AdjustmentListener
FocusHandler
focusGained
evt
FocusEvent
if
bufferChanging
return
if
match
block
if
caretLine
startLine
invalidateLineRange
caretLine
endLine
invalidateLineRange
startLine
caretLine
invalidateLine
caretLine
focusedComponent
focusLost
evt
FocusEvent
if
isShowing
return
if
match
block
if
caretLine
startLine
invalidateLineRange
caretLine
endLine
invalidateLineRange
startLine
caretLine
invalidateLine
caretLine
FocusListener
MouseHandler
int
dragStartLine
int
dragStartOffset
int
dragStart
int
clickCount
boolean
dragged
boolean
quickCopyDrag
boolean
clearStatus
boolean
control
boolean
maybeDragAndDrop
mousePressed
evt
MouseEvent
control
isMacOS
isMetaDown
isMacOS
isControlDown
getInputHandler
resetLastActionCount
quickCopyDrag
isQuickCopyEnabled
isMiddleButton
getModifiers
if
quickCopyDrag
block
requestFocus
focusedComponent
if
isLoaded
return
int
x
getX
int
y
getY
dragStart
xyToOffset
x
y
isBlockCaretEnabled
isOverwriteEnabled
dragStartLine
getLineOfOffset
dragStart
dragStartOffset
dragStart
getLineStartOffset
dragStartLine
if
isPopupTrigger
evt
popup
block
if
popupEnabled
handlePopupTrigger
evt
return
dragged
blink
invalidateLine
caretLine
clickCount
getClickCount
if
isDragEnabled
getDragAndDropCallback
insideSelection
x
y
clickCount
isShiftDown
block
maybeDragAndDrop
moveCaretPosition
dragStart
return
maybeDragAndDrop
switch
clickCount
case
doSingleClick
evt
break
case
doDoubleClick
break
case
doTripleClick
break
doSingleClick
evt
MouseEvent
int
x
getX
int
extraEndVirt
if
getLineInfo
lastSubregion
screenLastLine
block
float
dragStartLineWidth
offsetToXY
x
dragStartLine
getLineLength
dragStartLine
returnValue
if
x
dragStartLineWidth
block
extraEndVirt
int
x
dragStartLineWidth
charWidth
if
getPainter
isBlockCaretEnabled
isOverwriteEnabled
x
getHorizontalOffset
charWidth
charWidth
block
extraEndVirt
if
control
isRectangularSelectionEnabled
block
int
screenLine
getY
getPainter
getFontMetrics
getHeight
if
screenLine
screenLastLine
screenLine
screenLastLine
ChunkCache
LineInfo
info
getLineInfo
screenLine
if
lastSubregion
extraEndVirt
block
if
isEditable
block
getToolkit
beep
return
String
whitespace
createWhiteSpace
extraEndVirt
insert
dragStart
whitespace
dragStart
length
if
isShiftDown
block
resizeSelection
getMarkPosition
dragStart
extraEndVirt
isRectangularSelectionEnabled
control
if
quickCopyDrag
moveCaretPosition
dragStart
dragStartLine
getMarkLine
dragStart
getMarkPosition
dragStartOffset
dragStart
getLineStartOffset
dragStartLine
dragged
return
if
quickCopyDrag
moveCaretPosition
dragStart
if
multi
quickCopyDrag
selectNone
doDoubleClick
if
getLineLength
dragStartLine
return
String
lineText
getLineText
dragStartLine
String
noWordSep
getStringProperty
if
dragStartOffset
getLineLength
dragStartLine
dragStartOffset
boolean
joinNonWordChars
getBooleanProperty
int
wordStart
findWordStart
lineText
dragStartOffset
noWordSep
joinNonWordChars
int
wordEnd
findWordEnd
lineText
dragStartOffset
noWordSep
joinNonWordChars
int
lineStart
getLineStartOffset
dragStartLine
Selection
sel
Selection
Range
lineStart
wordStart
lineStart
wordEnd
if
isMultipleSelectionEnabled
addToSelection
sel
setSelection
sel
if
quickCopyDrag
quickCopyDrag
moveCaretPosition
lineStart
wordEnd
dragged
doTripleClick
int
newCaret
getLineEndOffset
dragStartLine
if
dragStartLine
getLineCount
newCaret
Selection
sel
Selection
Range
getLineStartOffset
dragStartLine
newCaret
if
isMultipleSelectionEnabled
addToSelection
sel
setSelection
sel
if
quickCopyDrag
quickCopyDrag
moveCaretPosition
newCaret
dragged
mouseDragged
evt
MouseEvent
if
maybeDragAndDrop
block
startDragAndDrop
evt
control
return
if
dndInProgress
return
if
isPopupTrigger
evt
popup
isVisible
return
if
isLoaded
return
if
getY
block
int
delta
min
getY
getFontMetrics
getHeight
setFirstLine
getFirstLine
delta
if
getY
getHeight
block
int
delta
max
getY
getHeight
getFontMetrics
getHeight
if
lastLinePartial
delta
setFirstLine
getFirstLine
delta
if
quickCopyDrag
block
getStatus
setMessage
getProperty
clearStatus
switch
clickCount
case
doSingleDrag
evt
break
case
doDoubleDrag
evt
break
case
doTripleDrag
evt
break
doSingleDrag
evt
MouseEvent
dragged
int
x
getX
int
y
getY
if
y
y
if
y
getHeight
y
getHeight
int
dot
xyToOffset
x
y
isBlockCaretEnabled
isOverwriteEnabled
quickCopyDrag
int
dotLine
getLineOfOffset
dot
int
extraEndVirt
if
getLineInfo
lastSubregion
screenLastLine
block
float
dotLineWidth
offsetToXY
x
dotLine
getLineLength
dotLine
returnValue
if
x
dotLineWidth
block
extraEndVirt
int
x
dotLineWidth
charWidth
if
getPainter
isBlockCaretEnabled
isOverwriteEnabled
x
getHorizontalOffset
charWidth
charWidth
extraEndVirt
resizeSelection
dragStart
dot
extraEndVirt
isRectangularSelectionEnabled
control
if
quickCopyDrag
block
scrollTo
dotLine
dot
getLineStartOffset
dotLine
block
if
dot
caret
moveCaretPosition
dot
if
isRectangularSelectionEnabled
extraEndVirt
block
scrollTo
dotLine
dot
getLineStartOffset
dotLine
extraEndVirt
doDoubleDrag
evt
MouseEvent
int
markLineStart
getLineStartOffset
dragStartLine
int
markLineLength
getLineLength
dragStartLine
int
mark
dragStartOffset
int
pos
xyToOffset
getX
max
min
getHeight
getY
isBlockCaretEnabled
isOverwriteEnabled
int
line
getLineOfOffset
pos
int
lineStart
getLineStartOffset
line
int
lineLength
getLineLength
line
int
offset
pos
lineStart
String
lineText
getLineText
line
String
markLineText
getLineText
dragStartLine
String
noWordSep
getStringProperty
boolean
joinNonWordChars
getBooleanProperty
if
markLineStart
dragStartOffset
lineStart
offset
block
if
offset
offset
lineLength
block
offset
findWordStart
lineText
offset
noWordSep
joinNonWordChars
if
markLineLength
block
mark
findWordEnd
markLineText
mark
noWordSep
joinNonWordChars
block
if
offset
lineLength
block
offset
findWordEnd
lineText
offset
noWordSep
joinNonWordChars
if
mark
mark
markLineLength
block
mark
findWordStart
markLineText
mark
noWordSep
joinNonWordChars
if
lineStart
offset
caret
return
resizeSelection
markLineStart
mark
lineStart
offset
moveCaretPosition
lineStart
offset
dragged
doTripleDrag
evt
MouseEvent
int
offset
xyToOffset
getX
max
min
getHeight
getY
int
mouseLine
getLineOfOffset
offset
int
mark
int
mouse
if
dragStartLine
mouseLine
block
mark
getLineEndOffset
dragStartLine
if
offset
getLineEndOffset
mouseLine
mouse
offset
mouse
getLineStartOffset
mouseLine
block
mark
getLineStartOffset
dragStartLine
if
offset
getLineStartOffset
mouseLine
mouse
offset
if
offset
getLineEndOffset
mouseLine
mouseLine
getBuffer
getLineCount
mouse
getLineEndOffset
mouseLine
mouse
getLineEndOffset
mouseLine
mouse
min
getBuffer
getLength
mouse
if
mouse
caret
return
resizeSelection
mark
mouse
moveCaretPosition
mouse
dragged
mouseReleased
evt
MouseEvent
Selection
sel
getSelectionAtOffset
dragStart
if
dragged
sel
block
setRegister
getSelectedText
sel
if
quickCopyDrag
block
removeFromSelection
sel
paste
focusedComponent
sel
Selection
Rect
requestFocus
if
dragged
isQuickCopyEnabled
isMiddleButton
getModifiers
block
requestFocus
focusedComponent
setCaretPosition
dragStart
if
isEditable
getToolkit
beep
paste
control
if
maybeDragAndDrop
isMultipleSelectionEnabled
block
selectNone
dragged
if
clearStatus
block
clearStatus
getStatus
setMessage
MouseInputAdapter
caretTimer
Timer
CaretBlinker
setInitialDelay
start
structureTimer
Timer
ActionListener
actionPerformed
evt
ActionEvent
if
focusedComponent
updateStructureHighlight
setInitialDelay
setRepeats
JComponent
