CBZip2InputStream
int
START_BLOCK_STATE
int
RAND_PART_A_STATE
int
RAND_PART_B_STATE
int
RAND_PART_C_STATE
int
NO_RAND_PART_A_STATE
int
NO_RAND_PART_B_STATE
int
NO_RAND_PART_C_STATE
CRC
m_crc
CRC
boolean
m_inUse
boolean
char
m_seqToUnseq
char
char
m_unseqToSeq
char
char
m_selector
char
MAX_SELECTORS
char
m_selectorMtf
char
MAX_SELECTORS
int
m_unzftab
int
int
m_limit
int
N_GROUPS
MAX_ALPHA_SIZE
int
m_base
int
N_GROUPS
MAX_ALPHA_SIZE
int
m_perm
int
N_GROUPS
MAX_ALPHA_SIZE
int
m_minLens
int
N_GROUPS
boolean
m_streamEnd
int
m_currentChar
int
m_currentState
START_BLOCK_STATE
int
m_rNToGo
int
m_rTPos
int
m_tPos
int
i2
int
count
int
chPrev
int
ch2
int
j2
char
z
boolean
m_blockRandomised
int
m_blockSize100k
int
m_bsBuff
int
m_bsLive
InputStream
m_input
int
m_computedBlockCRC
int
m_computedCombinedCRC
int
m_last
char
m_ll8
int
m_nInUse
int
m_origPtr
int
m_storedBlockCRC
int
m_storedCombinedCRC
int
m_tt
CBZip2InputStream
input
InputStream
bsSetStream
input
initialize
initBlock
setupBlock
badBlockHeader
cadvise
blockOverrun
cadvise
cadvise
println
compressedStreamEOF
cadvise
crcError
cadvise
read
int
if
m_streamEnd
block
return
block
int
retChar
m_currentChar
switch
m_currentState
case
break
case
break
case
setupRandPartB
break
case
setupRandPartC
break
case
break
case
setupNoRandPartB
break
case
setupNoRandPartC
break
case
break
return
retChar
setDecompressStructureSizes
newSize100k
int
if
newSize100k
newSize100k
m_blockSize100k
m_blockSize100k
block
m_blockSize100k
newSize100k
if
newSize100k
block
return
int
n
BASE_BLOCK_SIZE
newSize100k
m_ll8
char
n
m_tt
int
n
setupBlock
int
cftab
int
char
ch
cftab
for
forControl
int
i
i
i
block
cftab
i
m_unzftab
i
for
forControl
int
i
i
i
block
cftab
i
cftab
i
for
forControl
int
i
i
m_last
i
block
ch
m_ll8
i
m_tt
cftab
ch
i
cftab
ch
cftab
m_tPos
m_tt
m_origPtr
count
i2
ch2
if
m_blockRandomised
block
m_rNToGo
m_rTPos
setupRandPartA
block
setupNoRandPartA
setupNoRandPartA
if
i2
m_last
block
chPrev
ch2
ch2
m_ll8
m_tPos
m_tPos
m_tt
m_tPos
i2
m_currentChar
ch2
m_currentState
NO_RAND_PART_B_STATE
updateCRC
ch2
block
endBlock
initBlock
setupBlock
setupNoRandPartB
if
ch2
chPrev
block
m_currentState
NO_RAND_PART_A_STATE
count
setupNoRandPartA
block
count
if
count
block
z
m_ll8
m_tPos
m_tPos
m_tt
m_tPos
m_currentState
NO_RAND_PART_C_STATE
j2
setupNoRandPartC
block
m_currentState
NO_RAND_PART_A_STATE
setupNoRandPartA
setupNoRandPartC
if
j2
z
block
m_currentChar
ch2
updateCRC
ch2
j2
block
m_currentState
NO_RAND_PART_A_STATE
i2
count
setupNoRandPartA
setupRandPartA
if
i2
m_last
block
chPrev
ch2
ch2
m_ll8
m_tPos
m_tPos
m_tt
m_tPos
if
m_rNToGo
block
m_rNToGo
RAND_NUMS
m_rTPos
m_rTPos
if
m_rTPos
block
m_rTPos
m_rNToGo
ch2
m_rNToGo
i2
m_currentChar
ch2
m_currentState
RAND_PART_B_STATE
updateCRC
ch2
block
endBlock
initBlock
setupBlock
setupRandPartB
if
ch2
chPrev
block
m_currentState
RAND_PART_A_STATE
count
setupRandPartA
block
count
if
count
block
z
m_ll8
m_tPos
m_tPos
m_tt
m_tPos
if
m_rNToGo
block
m_rNToGo
RAND_NUMS
m_rTPos
m_rTPos
if
m_rTPos
block
m_rTPos
m_rNToGo
z
m_rNToGo
j2
m_currentState
RAND_PART_C_STATE
setupRandPartC
block
m_currentState
RAND_PART_A_STATE
setupRandPartA
setupRandPartC
if
j2
z
block
m_currentChar
ch2
updateCRC
ch2
j2
block
m_currentState
RAND_PART_A_STATE
i2
count
setupRandPartA
getAndMoveToFrontDecode
int
nextSym
int
limitLast
BASE_BLOCK_SIZE
m_blockSize100k
m_origPtr
readVariableSizedInt
recvDecodingTables
int
EOB
m_nInUse
int
groupNo
int
groupPos
for
forControl
int
i
i
i
block
m_unzftab
i
char
yy
char
for
forControl
int
i
i
i
block
yy
i
char
i
m_last
int
zt
int
zn
int
zvec
int
zj
groupNo
groupPos
G_SIZE
zt
m_selector
groupNo
zn
m_minLens
zt
zvec
bsR
zn
while
zvec
m_limit
zt
zn
block
zn
while
m_bsLive
block
int
zzi
char
thech
try
thech
char
read
catchClause
e
compressedStreamEOF
if
thech
block
compressedStreamEOF
zzi
thech
m_bsBuff
m_bsBuff
zzi
m_bsLive
zj
m_bsBuff
m_bsLive
m_bsLive
zvec
zvec
zj
nextSym
m_perm
zt
zvec
m_base
zt
zn
while
block
if
nextSym
EOB
block
break
if
nextSym
RUNA
nextSym
RUNB
block
char
ch
int
s
int
N
do
nextSym
RUNA
nextSym
RUNB
block
if
nextSym
RUNA
block
s
s
N
block
s
s
N
N
N
if
groupPos
block
groupNo
groupPos
G_SIZE
groupPos
zt
m_selector
groupNo
zn
m_minLens
zt
zvec
bsR
zn
while
zvec
m_limit
zt
zn
block
zn
while
m_bsLive
block
int
zzi
char
thech
try
thech
char
read
catchClause
e
compressedStreamEOF
if
thech
block
compressedStreamEOF
zzi
thech
m_bsBuff
m_bsBuff
zzi
m_bsLive
zj
m_bsBuff
m_bsLive
m_bsLive
zvec
zvec
zj
nextSym
m_perm
zt
zvec
m_base
zt
zn
s
ch
m_seqToUnseq
yy
m_unzftab
ch
s
while
s
block
m_last
m_ll8
m_last
ch
s
if
m_last
limitLast
block
blockOverrun
continue
block
char
tmp
m_last
if
m_last
limitLast
block
blockOverrun
tmp
yy
nextSym
m_unzftab
m_seqToUnseq
tmp
m_ll8
m_last
m_seqToUnseq
tmp
int
j
nextSym
for
forControl
j
j
block
yy
j
yy
j
yy
j
yy
j
yy
j
yy
j
yy
j
yy
j
for
forControl
j
j
block
yy
j
yy
j
yy
tmp
if
groupPos
block
groupNo
groupPos
G_SIZE
groupPos
zt
m_selector
groupNo
zn
m_minLens
zt
zvec
bsR
zn
while
zvec
m_limit
zt
zn
block
zn
while
m_bsLive
block
char
ch
try
ch
char
read
catchClause
e
compressedStreamEOF
m_bsBuff
m_bsBuff
ch
m_bsLive
zj
m_bsBuff
m_bsLive
m_bsLive
zvec
zvec
zj
nextSym
m_perm
zt
zvec
m_base
zt
zn
continue
bsFinishedWithStream
m_input
readVariableSizedInt
int
numBits
int
return
bsR
numBits
readUnsignedChar
char
return
char
bsR
readInt
int
int
u
u
u
bsR
u
u
bsR
u
u
bsR
u
u
bsR
return
u
bsR
int
n
int
while
m_bsLive
n
block
char
ch
try
ch
char
read
catchClause
ioe
compressedStreamEOF
if
ch
block
compressedStreamEOF
m_bsBuff
m_bsBuff
ch
m_bsLive
int
result
m_bsBuff
m_bsLive
n
n
m_bsLive
n
return
result
bsSetStream
input
InputStream
m_input
input
m_bsLive
m_bsBuff
complete
m_storedCombinedCRC
readInt
if
m_storedCombinedCRC
m_computedCombinedCRC
block
crcError
bsFinishedWithStream
m_streamEnd
endBlock
m_computedBlockCRC
getFinalCRC
if
m_storedBlockCRC
m_computedBlockCRC
block
crcError
m_computedCombinedCRC
m_computedCombinedCRC
m_computedCombinedCRC
m_computedCombinedCRC
m_computedBlockCRC
hbCreateDecodeTables
limit
int
base
int
perm
int
length
char
minLen
int
maxLen
int
alphaSize
int
int
pp
for
forControl
int
i
minLen
i
maxLen
i
block
for
forControl
int
j
j
alphaSize
j
block
if
length
j
i
block
perm
pp
j
pp
for
forControl
int
i
i
MAX_CODE_LEN
i
block
base
i
for
forControl
int
i
i
alphaSize
i
block
base
length
i
for
forControl
int
i
i
MAX_CODE_LEN
i
block
base
i
base
i
for
forControl
int
i
i
MAX_CODE_LEN
i
block
limit
i
int
vec
for
forControl
int
i
minLen
i
maxLen
i
block
vec
base
i
base
i
limit
i
vec
vec
for
forControl
int
i
minLen
i
maxLen
i
block
base
i
limit
i
base
i
initBlock
char
magic1
readUnsignedChar
char
magic2
readUnsignedChar
char
magic3
readUnsignedChar
char
magic4
readUnsignedChar
char
magic5
readUnsignedChar
char
magic6
readUnsignedChar
if
magic1
magic2
magic3
magic4
magic5
magic6
block
complete
return
if
magic1
magic2
magic3
magic4
magic5
magic6
block
badBlockHeader
m_streamEnd
return
m_storedBlockCRC
readInt
if
bsR
block
m_blockRandomised
block
m_blockRandomised
getAndMoveToFrontDecode
initialiseCRC
m_currentState
START_BLOCK_STATE
initialize
char
magic3
readUnsignedChar
char
magic4
readUnsignedChar
if
magic3
magic4
magic4
block
bsFinishedWithStream
m_streamEnd
return
setDecompressStructureSizes
magic4
m_computedCombinedCRC
makeMaps
m_nInUse
for
forControl
int
i
i
i
block
if
m_inUse
i
block
m_seqToUnseq
m_nInUse
char
i
m_unseqToSeq
i
char
m_nInUse
m_nInUse
recvDecodingTables
buildInUseTable
makeMaps
int
alphaSize
m_nInUse
int
groupCount
bsR
int
selectorCount
bsR
for
forControl
int
i
i
selectorCount
i
block
int
run
while
bsR
block
run
m_selectorMtf
i
char
run
char
pos
char
N_GROUPS
for
forControl
char
v
v
groupCount
v
block
pos
v
v
for
forControl
int
i
i
selectorCount
i
block
int
v
m_selectorMtf
i
char
tmp
pos
v
while
v
block
pos
v
pos
v
v
pos
tmp
m_selector
i
tmp
char
len
char
N_GROUPS
MAX_ALPHA_SIZE
for
forControl
int
i
i
groupCount
i
block
int
curr
bsR
for
forControl
int
j
j
alphaSize
j
block
while
bsR
block
if
bsR
block
curr
block
curr
len
i
j
char
curr
for
forControl
int
k
k
groupCount
k
block
int
minLen
int
maxLen
for
forControl
int
i
i
alphaSize
i
block
if
len
k
i
maxLen
block
maxLen
len
k
i
if
len
k
i
minLen
block
minLen
len
k
i
hbCreateDecodeTables
m_limit
k
m_base
k
m_perm
k
len
k
minLen
maxLen
alphaSize
m_minLens
k
minLen
buildInUseTable
boolean
inUse16
boolean
for
forControl
int
i
i
i
block
if
bsR
block
inUse16
i
block
inUse16
i
for
forControl
int
i
i
i
block
m_inUse
i
for
forControl
int
i
i
i
block
if
inUse16
i
block
for
forControl
int
j
j
j
block
if
bsR
block
m_inUse
i
j
InputStream
BZip2Constants
