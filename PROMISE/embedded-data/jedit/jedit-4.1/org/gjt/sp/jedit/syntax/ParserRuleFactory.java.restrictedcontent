ParserRuleFactory
createSpanRule
ParserRule
begin
String
end
String
id
byte
noLineBreak
boolean
atLineStart
boolean
excludeMatch
boolean
noWordBreak
boolean
int
ruleAction
SPAN
noLineBreak
NO_LINE_BREAK
atLineStart
AT_LINE_START
excludeMatch
EXCLUDE_MATCH
noWordBreak
NO_WORD_BREAK
String
strings
String
strings
begin
strings
end
int
ruleSeqLengths
getStringLengthArray
strings
char
ruleChars
getCharArray
strings
ruleSeqLengths
return
ParserRule
ruleChars
ruleSeqLengths
ruleAction
id
createDelegateSpanRule
ParserRule
begin
String
end
String
delegateSet
String
id
byte
noLineBreak
boolean
atLineStart
boolean
excludeMatch
boolean
noWordBreak
boolean
int
ruleAction
SPAN
DELEGATE
noLineBreak
NO_LINE_BREAK
atLineStart
AT_LINE_START
excludeMatch
EXCLUDE_MATCH
noWordBreak
NO_WORD_BREAK
String
strings
String
strings
begin
strings
end
strings
delegateSet
int
ruleSeqLengths
getStringLengthArray
strings
char
ruleChars
getCharArray
strings
ruleSeqLengths
return
ParserRule
ruleChars
ruleSeqLengths
ruleAction
id
createEOLSpanRule
ParserRule
seq
String
id
byte
atLineStart
boolean
excludeMatch
boolean
int
ruleAction
EOL_SPAN
atLineStart
AT_LINE_START
excludeMatch
EXCLUDE_MATCH
String
strings
String
strings
seq
int
ruleSeqLengths
int
char
ruleChars
if
seq
block
ruleSeqLengths
length
ruleChars
toCharArray
block
ruleChars
char
return
ParserRule
ruleChars
ruleSeqLengths
ruleAction
id
createMarkPreviousRule
ParserRule
seq
String
id
byte
atLineStart
boolean
excludeMatch
boolean
int
ruleAction
MARK_PREVIOUS
atLineStart
AT_LINE_START
excludeMatch
EXCLUDE_MATCH
String
strings
String
strings
seq
int
ruleSeqLengths
int
char
ruleChars
if
seq
block
ruleSeqLengths
length
ruleChars
toCharArray
block
ruleChars
char
return
ParserRule
ruleChars
ruleSeqLengths
ruleAction
id
createMarkFollowingRule
ParserRule
seq
String
id
byte
atLineStart
boolean
excludeMatch
boolean
int
ruleAction
MARK_FOLLOWING
atLineStart
AT_LINE_START
excludeMatch
EXCLUDE_MATCH
String
strings
String
strings
seq
int
ruleSeqLengths
int
char
ruleChars
if
seq
block
ruleSeqLengths
length
ruleChars
toCharArray
block
ruleChars
char
return
ParserRule
ruleChars
ruleSeqLengths
ruleAction
id
createSequenceRule
ParserRule
seq
String
id
byte
atLineStart
boolean
int
ruleAction
atLineStart
AT_LINE_START
String
strings
String
strings
seq
int
ruleSeqLengths
int
char
ruleChars
if
seq
block
ruleSeqLengths
length
ruleChars
toCharArray
block
ruleChars
char
return
ParserRule
ruleChars
ruleSeqLengths
ruleAction
id
createEscapeRule
ParserRule
seq
String
int
ruleAction
IS_ESCAPE
String
strings
String
strings
seq
int
ruleSeqLengths
int
char
ruleChars
if
seq
block
ruleSeqLengths
length
ruleChars
toCharArray
block
ruleChars
char
return
ParserRule
ruleChars
ruleSeqLengths
ruleAction
NULL
createWhitespaceRule
ParserRule
seq
String
int
ruleAction
WHITESPACE
String
strings
String
strings
seq
int
ruleSeqLengths
int
char
ruleChars
if
seq
block
ruleSeqLengths
length
ruleChars
toCharArray
block
ruleChars
char
return
ParserRule
ruleChars
ruleSeqLengths
ruleAction
NULL
getCharArray
char
strings
String
lengthArray
int
if
lengthArray
length
return
char
char
chars
int
charArrayLength
for
forControl
int
i
i
length
i
block
charArrayLength
lengthArray
i
chars
char
charArrayLength
int
copyOffset
for
forControl
int
i
i
length
i
block
if
strings
i
block
arraycopy
strings
i
toCharArray
chars
copyOffset
lengthArray
i
copyOffset
lengthArray
i
return
chars
getStringLengthArray
int
strings
String
int
stringLengthArray
if
strings
return
int
stringLengthArray
int
length
for
forControl
int
i
i
length
i
block
if
strings
i
block
stringLengthArray
i
strings
i
length
return
stringLengthArray
