JEditTextArea
JEditTextArea
view
View
enableEvents
FOCUS_EVENT_MASK
KEY_EVENT_MASK
view
view
selection
Vector
chunkCache
ChunkCache
painter
TextAreaPainter
gutter
Gutter
view
bufferHandler
BufferChangeHandler
listenerList
EventListenerList
caretEvent
MutableCaretEvent
bracketLine
bracketPosition
blink
lineSegment
Segment
returnValue
Point
runnables
ArrayList
setLayout
ScrollLayout
add
LEFT
gutter
add
CENTER
painter
add
RIGHT
vertical
JScrollBar
VERTICAL
add
BOTTOM
horizontal
JScrollBar
HORIZONTAL
setValues
if
getLookAndFeel
MetalLookAndFeel
block
setBorder
TextAreaBorder
putClientProperty
FALSE
putClientProperty
FALSE
addAdjustmentListener
AdjustHandler
addAdjustmentListener
AdjustHandler
mouseHandler
MouseHandler
addMouseListener
mouseHandler
addMouseMotionListener
mouseHandler
addFocusListener
FocusHandler
focusedComponent
getPainter
TextAreaPainter
return
painter
getGutter
Gutter
return
gutter
getFoldVisibilityManager
FoldVisibilityManager
return
foldVisibilityManager
isCaretBlinkEnabled
boolean
return
caretBlinks
setCaretBlinkEnabled
caretBlinks
boolean
caretBlinks
caretBlinks
if
caretBlinks
blink
if
buffer
invalidateLine
caretLine
getElectricScroll
int
return
electricScroll
setElectricScroll
electricScroll
int
electricScroll
electricScroll
isQuickCopyEnabled
boolean
return
quickCopy
setQuickCopyEnabled
quickCopy
boolean
quickCopy
quickCopy
getBuffer
Buffer
return
buffer
setBuffer
buffer
Buffer
if
buffer
buffer
return
try
bufferChanging
if
buffer
block
setFirstLine
selectNone
caretLine
caret
caretScreenLine
bracketLine
bracketPosition
buffer
_releaseFoldVisibilityManager
foldVisibilityManager
buffer
removeBufferChangeListener
bufferHandler
buffer
buffer
addBufferChangeListener
bufferHandler
bufferHandlerInstalled
foldVisibilityManager
_getFoldVisibilityManager
setFirstLine
physFirstLine
getFirstVisibleLine
propertiesChanged
recalculateLastPhysicalLine
bufferChanging
isEditable
boolean
return
isEditable
getRightClickPopup
JPopupMenu
return
popup
setRightClickPopup
popup
JPopupMenu
popup
popup
getFirstLine
int
return
firstLine
setFirstLine
firstLine
int
if
firstLine
firstLine
return
_setFirstLine
firstLine
synchroScrollVertical
firstLine
_setFirstLine
firstLine
int
firstLine
max
min
getVirtualLineCount
firstLine
firstLine
firstLine
physFirstLine
virtualToPhysical
firstLine
maxHorizontalScrollWidth
setFirstLine
firstLine
recalculateLastPhysicalLine
if
firstLine
getValue
updateScrollBars
repaint
repaint
fireScrollEvent
getVisibleLines
int
return
visibleLines
getFirstPhysicalLine
int
return
physFirstLine
getLastPhysicalLine
int
return
physLastLine
getHorizontalOffset
int
return
horizontalOffset
setHorizontalOffset
horizontalOffset
int
if
horizontalOffset
horizontalOffset
return
_setHorizontalOffset
horizontalOffset
synchroScrollHorizontal
horizontalOffset
_setHorizontalOffset
horizontalOffset
int
horizontalOffset
horizontalOffset
if
horizontalOffset
getValue
updateScrollBars
repaint
fireScrollEvent
updateScrollBars
if
vertical
visibleLines
block
int
lineCount
getVirtualLineCount
if
softWrap
lineCount
visibleLines
if
lineCount
firstLine
visibleLines
block
int
newFirstLine
max
lineCount
visibleLines
if
newFirstLine
firstLine
block
setFirstLine
newFirstLine
return
setValues
firstLine
visibleLines
lineCount
setUnitIncrement
setBlockIncrement
visibleLines
int
width
getWidth
if
horizontal
width
block
maxHorizontalScrollWidth
repaint
setUnitIncrement
getFontMetrics
charWidth
setBlockIncrement
width
scrollUpLine
if
firstLine
setFirstLine
firstLine
getToolkit
beep
scrollUpPage
if
firstLine
block
int
newFirstLine
firstLine
visibleLines
setFirstLine
newFirstLine
block
getToolkit
beep
scrollDownLine
int
numLines
getVirtualLineCount
if
softWrap
firstLine
numLines
firstLine
visibleLines
numLines
setFirstLine
firstLine
getToolkit
beep
scrollDownPage
int
numLines
getVirtualLineCount
if
firstLine
visibleLines
numLines
block
int
newFirstLine
firstLine
visibleLines
setFirstLine
newFirstLine
visibleLines
numLines
newFirstLine
numLines
visibleLines
block
getToolkit
beep
scrollToCaret
doElectricScroll
boolean
scrollTo
caretLine
caret
getLineStartOffset
caretLine
doElectricScroll
scrollTo
line
int
offset
int
doElectricScroll
boolean
int
_electricScroll
doElectricScroll
visibleLines
electricScroll
if
visibleLines
block
setFirstLine
physicalToVirtual
max
line
_electricScroll
return
int
screenLine
getScreenLineOfOffset
getLineStartOffset
line
offset
Point
point
if
screenLine
block
int
height
getFontMetrics
getHeight
Rectangle
rect
Rectangle
height
_electricScroll
getWidth
visibleLines
height
height
_electricScroll
point
offsetToXY
line
offset
returnValue
if
contains
point
return
point
if
line
physLastLine
block
int
count
getLineInfosForPhysicalLine
length
physLastLine
getLineInfosForPhysicalLine
length
physLastLine
_electricScroll
while
count
block
count
getLineInfosForPhysicalLine
length
physFirstLine
firstLine
physFirstLine
getNextVisibleLine
physFirstLine
if
screenLine
block
if
line
physLastLine
block
int
count
getLineInfosForPhysicalLine
length
physLastLine
_electricScroll
while
count
block
count
getLineInfosForPhysicalLine
length
physFirstLine
firstLine
physFirstLine
getNextVisibleLine
physFirstLine
int
virtualLine
physicalToVirtual
line
if
virtualLine
firstLine
block
firstLine
max
firstLine
_electricScroll
physFirstLine
virtualToPhysical
firstLine
block
if
softWrap
virtualLine
getVirtualLineCount
visibleLines
block
firstLine
getVirtualLineCount
visibleLines
physFirstLine
virtualToPhysical
firstLine
block
physFirstLine
line
int
count
for
forControl
block
if
isLineVisible
physFirstLine
block
int
incr
getLineInfosForPhysicalLine
length
physFirstLine
if
count
incr
visibleLines
break
count
incr
if
physFirstLine
break
block
physFirstLine
getPrevVisibleLine
physFirstLine
firstLine
physicalToVirtual
physFirstLine
if
screenLine
_electricScroll
firstLine
block
int
count
_electricScroll
screenLine
while
count
firstLine
block
count
getLineInfosForPhysicalLine
length
physFirstLine
firstLine
physFirstLine
getPrevVisibleLine
physFirstLine
if
screenLine
visibleLines
_electricScroll
block
int
count
_electricScroll
visibleLines
screenLine
while
count
firstLine
getVirtualLineCount
block
count
getLineInfosForPhysicalLine
length
physFirstLine
firstLine
physFirstLine
getNextVisibleLine
physFirstLine
setFirstLine
firstLine
recalculateLastPhysicalLine
if
point
block
point
offsetToXY
line
offset
returnValue
if
point
block
return
if
x
block
horizontalOffset
min
horizontalOffset
x
charWidth
if
x
getWidth
charWidth
block
horizontalOffset
horizontalOffset
getWidth
x
charWidth
updateScrollBars
repaint
repaint
synchroScrollVertical
firstLine
synchroScrollHorizontal
horizontalOffset
fireScrollEvent
fireScrollEvent
addScrollListener
listener
ScrollListener
add
ScrollListener
listener
removeScrollListener
listener
ScrollListener
remove
ScrollListener
listener
getPhysicalLineOfScreenLine
int
screenLine
int
return
getLineInfo
physicalLine
screenLine
getScreenLineOfOffset
int
offset
int
int
line
getLineOfOffset
offset
offset
getLineStartOffset
line
return
getScreenLineOfOffset
line
offset
getScreenLineStartOffset
int
line
int
updateChunksUpTo
line
ChunkCache
LineInfo
lineInfo
getLineInfo
line
if
physicalLine
return
return
getLineStartOffset
physicalLine
offset
getScreenLineEndOffset
int
line
int
updateChunksUpTo
line
ChunkCache
LineInfo
lineInfo
getLineInfo
line
if
physicalLine
return
return
getLineStartOffset
physicalLine
offset
length
xyToOffset
int
x
int
y
int
return
xyToOffset
x
y
xyToOffset
int
x
int
y
int
round
boolean
FontMetrics
fm
getFontMetrics
int
height
getHeight
int
line
y
height
if
line
line
visibleLines
return
updateChunksUpTo
line
ChunkCache
LineInfo
lineInfo
getLineInfo
line
if
chunksValid
println
if
physicalLine
block
return
getLineEndOffset
getLastVisibleLine
block
int
offset
xToOffset
chunks
x
horizontalOffset
round
if
offset
offset
offset
length
offset
offset
length
return
getLineStartOffset
physicalLine
offset
offsetToXY
Point
offset
int
int
line
getLineOfOffset
offset
offset
getLineStartOffset
line
Point
retVal
Point
return
offsetToXY
line
offset
retVal
offsetToXY
Point
line
int
offset
int
retVal
Point
int
screenLine
getScreenLineOfOffset
line
offset
if
screenLine
block
if
line
physFirstLine
return
if
line
physLastLine
return
block
throw
InternalError
line
offset
screenLine
physFirstLine
physLastLine
FontMetrics
fm
getFontMetrics
y
screenLine
getHeight
ChunkCache
LineInfo
info
getLineInfo
screenLine
if
chunksValid
println
x
int
horizontalOffset
offsetToX
chunks
offset
return
retVal
invalidateScreenLineRange
start
int
end
int
if
needFullRepaint
block
recalculateLastPhysicalLine
repaint
repaint
return
if
start
end
block
int
tmp
end
end
start
start
tmp
FontMetrics
fm
getFontMetrics
int
y
start
getHeight
int
height
end
start
getHeight
repaint
y
getWidth
height
repaint
y
getWidth
height
invalidateLine
line
int
if
line
physFirstLine
line
physLastLine
isLineVisible
line
return
int
startLine
int
endLine
for
forControl
int
i
i
visibleLines
i
block
updateChunksUpTo
i
ChunkCache
LineInfo
info
getLineInfo
i
if
physicalLine
line
physicalLine
startLine
block
startLine
i
if
physicalLine
line
lastSubregion
physicalLine
block
endLine
i
break
if
needFullRepaint
block
recalculateLastPhysicalLine
endLine
visibleLines
if
endLine
endLine
visibleLines
invalidateScreenLineRange
startLine
endLine
invalidateLineRange
start
int
end
int
if
end
start
block
int
tmp
end
end
start
start
tmp
if
end
physFirstLine
start
physLastLine
return
int
startScreenLine
int
endScreenLine
for
forControl
int
i
i
visibleLines
i
block
updateChunksUpTo
i
ChunkCache
LineInfo
info
getLineInfo
i
if
physicalLine
start
physicalLine
startScreenLine
block
startScreenLine
i
if
physicalLine
end
lastSubregion
physicalLine
block
endScreenLine
i
break
if
startScreenLine
startScreenLine
if
needFullRepaint
block
recalculateLastPhysicalLine
endScreenLine
visibleLines
if
endScreenLine
endScreenLine
visibleLines
invalidateScreenLineRange
startScreenLine
endScreenLine
invalidateSelectedLines
invalidateLine
caretLine
for
forControl
int
i
i
size
i
block
Selection
s
Selection
elementAt
i
invalidateLineRange
startLine
endLine
physicalToVirtual
int
line
int
return
physicalToVirtual
line
virtualToPhysical
int
line
int
return
virtualToPhysical
line
getBufferLength
int
return
getLength
getLineCount
int
return
getLineCount
getVirtualLineCount
int
return
getVirtualLineCount
getLineOfOffset
int
offset
int
return
getLineOfOffset
offset
getLineStartOffset
int
line
int
return
getLineStartOffset
line
getLineEndOffset
int
line
int
return
getLineEndOffset
line
getLineLength
int
line
int
return
getLineLength
line
getText
String
start
int
len
int
return
getText
start
len
getText
start
int
len
int
segment
Segment
getText
start
len
segment
getLineText
String
lineIndex
int
return
getLineText
lineIndex
getLineText
lineIndex
int
segment
Segment
getLineText
lineIndex
segment
getText
String
return
getText
getLength
setText
text
String
try
beginCompoundEdit
remove
getLength
insert
text
endCompoundEdit
selectAll
setSelection
Selection
Range
getLength
moveCaretPosition
getLength
selectLine
int
caretLine
getCaretLine
int
start
getLineStartOffset
caretLine
int
end
getLineEndOffset
caretLine
Selection
s
Selection
Range
start
end
if
multi
addToSelection
s
setSelection
s
moveCaretPosition
end
selectParagraph
int
caretLine
getCaretLine
if
getLineLength
caretLine
block
getToolkit
beep
return
int
start
caretLine
int
end
caretLine
while
start
block
if
getLineLength
start
break
start
while
end
getLineCount
block
if
getLineLength
end
break
end
int
selectionStart
getLineStartOffset
start
int
selectionEnd
getLineEndOffset
end
Selection
s
Selection
Range
selectionStart
selectionEnd
if
multi
addToSelection
s
setSelection
s
moveCaretPosition
selectionEnd
selectWord
int
line
getCaretLine
int
lineStart
getLineStartOffset
line
int
offset
getCaretPosition
lineStart
if
getLineLength
line
return
String
lineText
getLineText
line
String
noWordSep
getStringProperty
if
offset
getLineLength
line
offset
int
wordStart
findWordStart
lineText
offset
noWordSep
int
wordEnd
findWordEnd
lineText
offset
noWordSep
Selection
s
Selection
Range
lineStart
wordStart
lineStart
wordEnd
if
multi
addToSelection
s
setSelection
s
moveCaretPosition
lineStart
wordEnd
selectToMatchingBracket
int
offset
caret
getLineStartOffset
caretLine
if
getLineLength
caretLine
return
if
offset
getLineLength
caretLine
offset
int
bracket
findMatchingBracket
buffer
caretLine
offset
if
bracket
block
Selection
s
if
bracket
caret
s
Selection
Range
bracket
caret
block
moveCaretPosition
caret
s
Selection
Range
caret
bracket
addToSelection
s
return
selectBlock
String
openBrackets
String
closeBrackets
Selection
s
getSelectionAtOffset
caret
int
start
end
if
s
start
end
caret
block
start
start
end
end
String
text
getText
getLength
int
count
char
openBracket
char
closeBracket
if
start
block
getToolkit
beep
return
while
start
block
char
c
charAt
start
int
index
indexOf
c
if
index
block
if
count
block
openBracket
c
closeBracket
charAt
index
break
if
indexOf
c
count
count
if
openBracket
block
getToolkit
beep
return
block
do
end
getLength
block
char
c
charAt
end
if
c
closeBracket
block
if
count
block
end
break
if
c
openBracket
count
s
Selection
Range
start
end
if
multi
addToSelection
s
setSelection
s
moveCaretPosition
end
invertSelection
Selection
newSelection
Selection
size
int
lastOffset
for
forControl
int
i
i
size
i
block
Selection
s
Selection
elementAt
i
newSelection
i
Selection
Range
lastOffset
getStart
lastOffset
getEnd
newSelection
size
Selection
Range
lastOffset
getLength
setSelection
newSelection
getSelectionCount
int
return
size
getSelection
Selection
Selection
sel
Selection
size
copyInto
sel
return
sel
selectNone
setSelection
Selection
setSelection
selection
Selection
invalidateSelectedLines
selection
removeAllElements
if
selection
block
for
forControl
int
i
i
length
i
_addToSelection
selection
i
fireCaretEvent
setSelection
selection
Selection
invalidateSelectedLines
selection
removeAllElements
if
selection
_addToSelection
selection
fireCaretEvent
addToSelection
selection
Selection
if
selection
block
for
forControl
int
i
i
length
i
_addToSelection
selection
i
invalidateLine
caretLine
fireCaretEvent
addToSelection
selection
Selection
_addToSelection
selection
invalidateLine
caretLine
fireCaretEvent
getSelectionAtOffset
Selection
offset
int
if
selection
block
for
forControl
int
i
i
size
i
block
Selection
s
Selection
elementAt
i
if
offset
start
offset
end
return
s
return
removeFromSelection
sel
Selection
removeElement
sel
invalidateLineRange
startLine
endLine
invalidateLine
caretLine
fireCaretEvent
removeFromSelection
offset
int
Selection
sel
getSelectionAtOffset
offset
if
sel
return
removeElement
sel
invalidateLineRange
startLine
endLine
invalidateLine
caretLine
fireCaretEvent
resizeSelection
offset
int
end
int
rect
boolean
Selection
s
getSelectionAtOffset
offset
if
s
block
invalidateLineRange
startLine
endLine
removeElement
s
if
end
offset
block
int
tmp
offset
offset
end
end
tmp
Selection
newSel
if
rect
newSel
Selection
Rect
offset
end
newSel
Selection
Range
offset
end
_addToSelection
newSel
fireCaretEvent
extendSelection
offset
int
end
int
Selection
s
getSelectionAtOffset
offset
if
s
block
invalidateLineRange
startLine
endLine
removeElement
s
if
offset
start
block
offset
end
end
end
if
offset
end
block
offset
start
if
end
offset
block
int
tmp
end
end
offset
offset
tmp
_addToSelection
Selection
Range
offset
end
fireCaretEvent
getSelectedText
String
s
Selection
StringBuffer
buf
StringBuffer
getSelectedText
s
buf
return
toString
getSelectedText
String
separator
String
if
size
return
StringBuffer
buf
StringBuffer
for
forControl
int
i
i
size
i
block
if
i
append
separator
getSelectedText
Selection
elementAt
i
buf
return
toString
getSelectedText
String
return
getSelectedText
setSelectedText
s
Selection
selectedText
String
if
isEditable
block
throw
InternalError
try
beginCompoundEdit
if
s
Selection
Rect
block
int
start
start
getLineStartOffset
startLine
int
end
end
getLineStartOffset
endLine
if
end
start
block
int
tmp
end
end
start
start
tmp
int
lastNewline
int
currNewline
for
forControl
int
i
startLine
i
endLine
i
block
int
lineStart
getLineStartOffset
i
int
lineEnd
getLineEndOffset
i
int
rectStart
min
lineEnd
lineStart
start
remove
rectStart
min
lineEnd
rectStart
end
start
if
selectedText
continue
currNewline
indexOf
lastNewline
if
currNewline
currNewline
length
insert
rectStart
substring
lastNewline
currNewline
lastNewline
min
length
currNewline
if
selectedText
currNewline
length
block
int
offset
getLineEndOffset
endLine
insert
offset
insert
offset
substring
currNewline
block
remove
start
end
start
if
selectedText
length
block
insert
start
selectedText
endCompoundEdit
setSelectedText
selectedText
String
if
isEditable
block
throw
InternalError
Selection
selection
getSelection
if
length
block
insert
caret
selectedText
block
try
beginCompoundEdit
for
forControl
int
i
i
length
i
block
setSelectedText
selection
i
selectedText
endCompoundEdit
selectNone
getSelectedLines
int
if
size
return
int
caretLine
Integer
line
Hashtable
hash
Hashtable
for
forControl
int
i
i
size
i
block
Selection
s
Selection
elementAt
i
int
endLine
end
getLineStartOffset
endLine
endLine
endLine
for
forControl
int
j
startLine
j
endLine
j
block
line
Integer
j
put
line
line
int
returnValue
int
size
int
i
Enumeration
keys
keys
while
hasMoreElements
block
line
Integer
nextElement
returnValue
i
intValue
sort
returnValue
return
returnValue
showSelectLineRangeDialog
SelectLineRange
view
blinkCaret
if
caretBlinks
block
blink
blink
invalidateLine
caretLine
blink
centerCaret
int
offset
getScreenLineStartOffset
visibleLines
if
offset
getToolkit
beep
setCaretPosition
offset
setCaretPosition
newCaret
int
invalidateSelectedLines
removeAllElements
moveCaretPosition
newCaret
setCaretPosition
newCaret
int
doElectricScroll
boolean
invalidateSelectedLines
removeAllElements
moveCaretPosition
newCaret
doElectricScroll
moveCaretPosition
newCaret
int
moveCaretPosition
newCaret
moveCaretPosition
newCaret
int
doElectricScroll
boolean
if
newCaret
newCaret
getLength
block
throw
IllegalArgumentException
newCaret
blink
restart
if
caret
newCaret
block
if
focusedComponent
finishCaretUpdate
doElectricScroll
return
int
newCaretLine
getLineOfOffset
newCaret
magicCaret
if
isLineVisible
newCaretLine
block
if
isNarrowed
block
int
collapseFolds
getIntegerProperty
if
collapseFolds
expandFolds
collapseFolds
expandAllFolds
expandFold
newCaretLine
if
caretLine
newCaretLine
block
if
caretScreenLine
invalidateScreenLineRange
caretScreenLine
caretScreenLine
block
caretScreenLine
getScreenLineOfOffset
newCaretLine
newCaret
getLineStartOffset
newCaretLine
invalidateLineRange
caretLine
newCaretLine
caret
newCaret
caretLine
newCaretLine
if
focusedComponent
finishCaretUpdate
doElectricScroll
getCaretPosition
int
return
caret
getCaretLine
int
return
caretLine
getMagicCaretPosition
int
if
magicCaret
block
magicCaret
offsetToX
caretLine
caret
getLineStartOffset
caretLine
return
magicCaret
setMagicCaretPosition
magicCaret
int
magicCaret
magicCaret
addCaretListener
listener
CaretListener
add
CaretListener
listener
removeCaretListener
listener
CaretListener
remove
CaretListener
listener
getBracketPosition
int
return
bracketPosition
getBracketLine
int
return
bracketLine
goToNextBracket
select
boolean
String
text
getText
caret
getLength
caret
int
newCaret
for
forControl
int
i
i
length
i
block
switch
charAt
i
case
newCaret
caret
i
break
if
newCaret
getToolkit
beep
block
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
goToNextCharacter
select
boolean
if
select
size
block
Selection
s
getSelectionAtOffset
caret
if
s
block
if
multi
block
if
caret
end
block
moveCaretPosition
end
return
block
setCaretPosition
end
return
if
caret
getLength
getToolkit
beep
int
newCaret
if
caret
getLineEndOffset
caretLine
block
int
line
getNextVisibleLine
caretLine
if
line
block
getToolkit
beep
return
newCaret
getLineStartOffset
line
newCaret
caret
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
goToNextLine
select
boolean
ChunkCache
LineInfo
lineInfos
getLineInfosForPhysicalLine
caretLine
int
caretFromStartOfLine
caret
getLineStartOffset
caretLine
int
subregion
getSubregionOfOffset
caretFromStartOfLine
lineInfos
int
magic
magicCaret
if
magic
block
magic
subregionOffsetToX
lineInfos
subregion
caretFromStartOfLine
int
newCaret
if
subregion
length
block
newCaret
getLineStartOffset
caretLine
xToSubregionOffset
lineInfos
subregion
magic
block
int
nextLine
getNextVisibleLine
caretLine
if
nextLine
block
int
end
getLineEndOffset
caretLine
if
caret
end
block
getToolkit
beep
return
newCaret
end
block
lineInfos
getLineInfosForPhysicalLine
nextLine
newCaret
getLineStartOffset
nextLine
xToSubregionOffset
lineInfos
magic
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
magicCaret
magic
goToNextMarker
select
boolean
Vector
markers
getMarkers
if
size
block
getToolkit
beep
return
Marker
marker
for
forControl
int
i
i
size
i
block
Marker
_marker
Marker
get
i
if
getPosition
caret
block
marker
_marker
break
if
marker
marker
Marker
get
if
select
extendSelection
caret
getPosition
if
multi
selectNone
moveCaretPosition
getPosition
goToNextPage
select
boolean
int
lineCount
getVirtualLineCount
int
magic
getMagicCaretPosition
if
firstLine
visibleLines
lineCount
setFirstLine
lineCount
visibleLines
setFirstLine
firstLine
visibleLines
int
newLine
virtualToPhysical
min
lineCount
physicalToVirtual
caretLine
visibleLines
int
newCaret
getLineStartOffset
newLine
xToOffset
newLine
magic
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
setMagicCaretPosition
magic
goToNextParagraph
select
boolean
int
lineNo
getCaretLine
int
newCaret
getBufferLength
boolean
foundBlank
for
forControl
int
i
lineNo
i
getLineCount
i
block
if
isLineVisible
i
continue
getLineText
i
lineSegment
for
forControl
int
j
j
count
j
block
switch
array
offset
j
case
break
case
if
foundBlank
block
newCaret
getLineStartOffset
i
break
continue
foundBlank
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
goToNextWord
select
boolean
int
lineStart
getLineStartOffset
caretLine
int
newCaret
caret
lineStart
String
lineText
getLineText
caretLine
if
newCaret
length
block
int
nextLine
getNextVisibleLine
caretLine
if
nextLine
block
getToolkit
beep
return
newCaret
getLineStartOffset
nextLine
block
String
noWordSep
getStringProperty
newCaret
findWordEnd
lineText
newCaret
noWordSep
lineStart
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
goToPrevBracket
select
boolean
String
text
getText
caret
int
newCaret
for
forControl
int
i
getCaretPosition
i
i
block
switch
charAt
i
case
newCaret
i
break
if
newCaret
getToolkit
beep
block
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
goToPrevCharacter
select
boolean
if
select
size
block
Selection
s
getSelectionAtOffset
caret
if
s
block
if
multi
block
if
caret
start
block
moveCaretPosition
start
return
block
setCaretPosition
start
return
int
newCaret
if
caret
getLineStartOffset
caretLine
block
int
line
getPrevVisibleLine
caretLine
if
line
block
getToolkit
beep
return
newCaret
getLineEndOffset
line
newCaret
caret
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
goToPrevLine
select
boolean
ChunkCache
LineInfo
lineInfos
getLineInfosForPhysicalLine
caretLine
int
caretFromStartOfLine
caret
getLineStartOffset
caretLine
int
subregion
getSubregionOfOffset
caretFromStartOfLine
lineInfos
int
magic
magicCaret
if
magic
block
magic
subregionOffsetToX
lineInfos
subregion
caretFromStartOfLine
int
newCaret
if
subregion
block
newCaret
getLineStartOffset
caretLine
xToSubregionOffset
lineInfos
subregion
magic
block
int
prevLine
getPrevVisibleLine
caretLine
if
prevLine
block
int
start
getLineStartOffset
caretLine
if
caret
start
block
getToolkit
beep
return
newCaret
start
block
lineInfos
getLineInfosForPhysicalLine
prevLine
newCaret
getLineStartOffset
prevLine
xToSubregionOffset
lineInfos
length
magic
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
magicCaret
magic
goToPrevMarker
select
boolean
Vector
markers
getMarkers
if
size
block
getToolkit
beep
return
Marker
marker
for
forControl
int
i
size
i
i
block
Marker
_marker
Marker
elementAt
i
if
getPosition
caret
block
marker
_marker
break
if
marker
marker
Marker
get
size
if
select
extendSelection
caret
getPosition
if
multi
selectNone
moveCaretPosition
getPosition
goToPrevPage
select
boolean
if
firstLine
visibleLines
setFirstLine
setFirstLine
firstLine
visibleLines
int
magic
getMagicCaretPosition
int
newLine
virtualToPhysical
max
physicalToVirtual
caretLine
visibleLines
int
newCaret
getLineStartOffset
newLine
xToOffset
newLine
magic
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
setMagicCaretPosition
magic
goToPrevParagraph
select
boolean
int
lineNo
caretLine
int
newCaret
boolean
foundBlank
for
forControl
int
i
lineNo
i
i
block
if
isLineVisible
i
continue
getLineText
i
lineSegment
for
forControl
int
j
j
count
j
block
switch
array
offset
j
case
break
case
if
foundBlank
block
newCaret
getLineEndOffset
i
break
continue
foundBlank
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
goToPrevWord
select
boolean
int
lineStart
getLineStartOffset
caretLine
int
newCaret
caret
lineStart
String
lineText
getLineText
caretLine
if
newCaret
block
if
lineStart
block
getToolkit
beep
return
block
int
prevLine
getPrevVisibleLine
caretLine
if
prevLine
block
getToolkit
beep
return
newCaret
getLineEndOffset
prevLine
block
String
noWordSep
getStringProperty
newCaret
findWordStart
lineText
newCaret
noWordSep
lineStart
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
smartHome
select
boolean
if
getBooleanProperty
goToStartOfLine
select
block
switch
getInputHandler
getLastActionCount
case
goToStartOfWhiteSpace
select
break
case
goToStartOfLine
select
break
case
goToFirstVisibleLine
select
break
smartEnd
select
boolean
if
getBooleanProperty
goToEndOfLine
select
block
switch
getInputHandler
getLastActionCount
case
goToEndOfWhiteSpace
select
break
case
goToEndOfLine
select
break
case
goToLastVisibleLine
select
break
goToStartOfLine
select
boolean
Macros
Recorder
recorder
getMacroRecorder
if
recorder
record
select
Selection
s
getSelectionAtOffset
caret
int
line
select
s
caretLine
startLine
int
newCaret
getLineStartOffset
line
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
goToEndOfLine
select
boolean
Macros
Recorder
recorder
getMacroRecorder
if
recorder
record
select
Selection
s
getSelectionAtOffset
caret
int
line
select
s
caretLine
endLine
int
newCaret
getLineEndOffset
line
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
setMagicCaretPosition
MAX_VALUE
goToStartOfWhiteSpace
select
boolean
Macros
Recorder
recorder
getMacroRecorder
if
recorder
record
select
Selection
s
getSelectionAtOffset
caret
int
line
offset
if
select
s
block
line
caretLine
offset
caret
getLineStartOffset
line
block
line
startLine
offset
start
getLineStartOffset
line
int
firstIndent
ChunkCache
LineInfo
lineInfos
getLineInfosForPhysicalLine
line
int
subregion
getSubregionOfOffset
offset
lineInfos
if
subregion
block
firstIndent
getLeadingWhiteSpace
getLineText
line
if
firstIndent
getLineLength
line
firstIndent
firstIndent
getLineStartOffset
line
block
firstIndent
getLineStartOffset
line
lineInfos
subregion
offset
if
select
extendSelection
caret
firstIndent
if
multi
selectNone
moveCaretPosition
firstIndent
goToEndOfWhiteSpace
select
boolean
Macros
Recorder
recorder
getMacroRecorder
if
recorder
record
select
Selection
s
getSelectionAtOffset
caret
int
line
offset
if
select
s
block
line
caretLine
offset
caret
getLineStartOffset
line
block
line
endLine
offset
end
getLineStartOffset
line
int
lastIndent
ChunkCache
LineInfo
lineInfos
getLineInfosForPhysicalLine
line
int
subregion
getSubregionOfOffset
offset
lineInfos
if
subregion
length
block
lastIndent
getLineLength
line
getTrailingWhiteSpace
getLineText
line
if
lastIndent
lastIndent
getLineLength
line
lastIndent
getLineStartOffset
line
block
lastIndent
getLineStartOffset
line
lineInfos
subregion
offset
lineInfos
subregion
length
if
select
extendSelection
caret
lastIndent
if
multi
selectNone
moveCaretPosition
lastIndent
goToFirstVisibleLine
select
boolean
Macros
Recorder
recorder
getMacroRecorder
if
recorder
record
select
int
firstVisibleLine
firstLine
electricScroll
int
firstVisible
getScreenLineStartOffset
firstVisibleLine
if
firstVisible
block
firstVisible
getLineStartOffset
getFirstVisibleLine
if
select
extendSelection
caret
firstVisible
if
multi
selectNone
moveCaretPosition
firstVisible
goToLastVisibleLine
select
boolean
Macros
Recorder
recorder
getMacroRecorder
if
recorder
record
select
int
lastVisible
if
firstLine
visibleLines
getVirtualLineCount
block
lastVisible
getLineEndOffset
getLastVisibleLine
block
lastVisible
getScreenLineEndOffset
visibleLines
electricScroll
if
lastVisible
block
lastVisible
getLineEndOffset
getLastVisibleLine
if
select
extendSelection
caret
lastVisible
if
multi
selectNone
moveCaretPosition
lastVisible
goToBufferStart
select
boolean
int
start
getLineStartOffset
getFirstVisibleLine
if
select
extendSelection
caret
start
if
multi
selectNone
moveCaretPosition
start
goToBufferEnd
select
boolean
int
end
getLineEndOffset
getLastVisibleLine
if
select
extendSelection
caret
end
if
multi
selectNone
moveCaretPosition
end
goToMatchingBracket
if
getLineLength
caretLine
block
int
dot
caret
getLineStartOffset
caretLine
int
bracket
findMatchingBracket
buffer
caretLine
max
dot
if
bracket
block
selectNone
moveCaretPosition
bracket
return
getToolkit
beep
showGoToLineDialog
String
line
input
view
if
line
return
try
int
lineNumber
parseInt
line
setCaretPosition
getLineStartOffset
lineNumber
catchClause
e
getToolkit
beep
userInput
ch
char
if
isEditable
block
getToolkit
beep
return
if
ch
getExpandOnInput
expandAbbrev
view
return
if
ch
block
if
size
block
Selection
sel
Selection
elementAt
if
startLine
endLine
start
getLineStartOffset
startLine
end
getLineEndOffset
startLine
block
insertTab
shiftIndentRight
if
size
shiftIndentRight
if
getBooleanProperty
block
String
text
getLineText
caretLine
int
start
getLineStartOffset
caretLine
int
whiteSpace
getLeadingWhiteSpace
text
if
caret
start
whiteSpace
indentLine
caretLine
return
insertTab
insertTab
return
if
ch
block
try
beginCompoundEdit
setSelectedText
if
getBooleanProperty
indentLine
caretLine
endCompoundEdit
return
block
String
str
valueOf
ch
if
size
block
setSelectedText
str
return
if
ch
block
if
doWordWrap
return
doWordWrap
try
if
overwrite
block
beginCompoundEdit
int
caretLineEnd
getLineEndOffset
caretLine
if
caretLineEnd
caret
remove
caret
insert
caret
str
if
overwrite
endCompoundEdit
String
indentOpenBrackets
String
getProperty
String
indentCloseBrackets
String
getProperty
if
indentCloseBrackets
indexOf
ch
indentOpenBrackets
indexOf
ch
block
indentLine
caretLine
isOverwriteEnabled
boolean
return
overwrite
setOverwriteEnabled
overwrite
boolean
blink
restart
overwrite
overwrite
invalidateLine
caretLine
if
getStatus
getStatus
updateMiscStatus
toggleOverwriteEnabled
setOverwriteEnabled
overwrite
backspace
if
isEditable
block
getToolkit
beep
return
if
size
setSelectedText
block
if
caret
block
getToolkit
beep
return
remove
caret
backspaceWord
if
isEditable
block
getToolkit
beep
return
if
size
block
setSelectedText
return
int
lineStart
getLineStartOffset
caretLine
int
_caret
caret
lineStart
String
lineText
getLineText
caretLine
if
_caret
block
if
lineStart
block
getToolkit
beep
return
_caret
block
String
noWordSep
getStringProperty
_caret
findWordStart
lineText
_caret
noWordSep
remove
_caret
lineStart
caret
_caret
lineStart
delete
if
isEditable
block
getToolkit
beep
return
if
size
setSelectedText
block
if
caret
getLength
block
getToolkit
beep
return
remove
caret
deleteToEndOfLine
if
isEditable
block
getToolkit
beep
return
remove
caret
getLineEndOffset
caretLine
caret
deleteLine
if
isEditable
block
getToolkit
beep
return
int
start
getLineStartOffset
caretLine
int
end
getLineEndOffset
caretLine
if
end
getLength
block
if
start
start
end
int
x
offsetToX
caretLine
caret
start
remove
start
end
start
int
lastLine
getLineCount
if
caretLine
lastLine
block
setCaretPosition
getLineStartOffset
lastLine
xToOffset
caretLine
x
block
setCaretPosition
start
xToOffset
caretLine
x
deleteParagraph
if
isEditable
block
getToolkit
beep
return
int
start
end
getLength
for
forControl
int
i
caretLine
i
i
block
getLineText
i
lineSegment
for
forControl
int
j
j
count
j
block
switch
array
offset
j
case
break
case
continue
start
getLineStartOffset
i
break
for
forControl
int
i
caretLine
i
getLineCount
i
block
getLineText
i
lineSegment
for
forControl
int
j
j
count
j
block
switch
array
offset
j
case
break
case
continue
end
getLineEndOffset
i
break
remove
start
end
start
deleteToStartOfLine
if
isEditable
block
getToolkit
beep
return
remove
getLineStartOffset
caretLine
caret
getLineStartOffset
caretLine
deleteWord
if
isEditable
block
getToolkit
beep
return
if
size
block
setSelectedText
return
int
lineStart
getLineStartOffset
caretLine
int
_caret
caret
lineStart
String
lineText
getLineText
caretLine
if
_caret
length
block
if
lineStart
_caret
getLength
block
getToolkit
beep
return
_caret
block
String
noWordSep
getStringProperty
_caret
findWordEnd
lineText
_caret
noWordSep
remove
caret
_caret
lineStart
caret
isMultipleSelectionEnabled
boolean
return
multi
toggleMultipleSelectionEnabled
multi
multi
if
getStatus
getStatus
updateMiscStatus
setMultipleSelectionEnabled
multi
boolean
multi
multi
send
MultiSelectStatusChanged
goToMarker
shortcut
char
select
boolean
Marker
marker
getMarker
shortcut
if
marker
block
getToolkit
beep
return
int
pos
getPosition
if
select
extendSelection
caret
pos
if
multi
selectNone
moveCaretPosition
pos
addMarker
Selection
selection
getSelection
for
forControl
int
i
i
length
i
block
Selection
s
selection
i
if
startLine
endLine
block
if
startLine
caretLine
addMarker
start
if
endLine
caretLine
addMarker
end
addOrRemoveMarker
caret
swapMarkerAndCaret
shortcut
char
Marker
marker
getMarker
shortcut
if
marker
block
getToolkit
beep
return
int
caret
getCaretPosition
setCaretPosition
getPosition
addMarker
shortcut
caret
goToParentFold
int
line
int
level
getFoldLevel
caretLine
for
forControl
int
i
caretLine
i
i
block
if
getFoldLevel
i
level
block
line
i
break
if
line
block
getToolkit
beep
return
int
magic
getMagicCaretPosition
int
newCaret
getLineStartOffset
line
xToOffset
line
magic
if
multi
selectNone
moveCaretPosition
newCaret
setMagicCaretPosition
magic
goToNextFold
select
boolean
int
line
caretLine
int
nextFold
for
forControl
int
i
caretLine
i
getLineCount
i
block
if
isFoldStart
i
isLineVisible
i
block
nextFold
i
break
if
nextFold
block
getToolkit
beep
return
int
magic
getMagicCaretPosition
int
newCaret
getLineStartOffset
nextFold
xToOffset
nextFold
magic
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
setMagicCaretPosition
magic
goToPrevFold
select
boolean
int
line
caretLine
int
prevFold
for
forControl
int
i
caretLine
i
i
block
if
isFoldStart
i
isLineVisible
i
block
prevFold
i
break
if
prevFold
block
getToolkit
beep
return
int
magic
getMagicCaretPosition
int
newCaret
getLineStartOffset
prevFold
xToOffset
prevFold
magic
if
select
extendSelection
caret
newCaret
if
multi
selectNone
moveCaretPosition
newCaret
setMagicCaretPosition
magic
collapseFold
int
x
offsetToX
caretLine
caret
getLineStartOffset
caretLine
collapseFold
caretLine
if
isLineVisible
caretLine
return
int
line
getPrevVisibleLine
caretLine
if
multi
selectNone
moveCaretPosition
getLineStartOffset
line
xToOffset
line
x
expandFold
fully
boolean
int
x
offsetToX
caretLine
caret
getLineStartOffset
caretLine
int
line
expandFold
caretLine
fully
if
line
block
if
multi
selectNone
moveCaretPosition
getLineStartOffset
line
xToOffset
line
x
selectFold
selectFold
caretLine
selectFold
line
int
int
lines
getFoldAtLine
line
int
newCaret
getLineEndOffset
lines
Selection
s
Selection
Range
getLineStartOffset
lines
newCaret
if
multi
addToSelection
s
setSelection
s
moveCaretPosition
newCaret
narrowToFold
int
lines
getFoldAtLine
caretLine
if
lines
lines
getLineCount
getToolkit
beep
narrow
lines
lines
narrowToSelection
if
size
block
getToolkit
beep
return
Selection
sel
Selection
elementAt
narrow
getStartLine
getEndLine
selectNone
addExplicitFold
if
getStringProperty
equals
block
error
view
return
String
lineComment
getContextSensitiveProperty
caret
String
commentStart
getContextSensitiveProperty
caret
String
commentEnd
getContextSensitiveProperty
caret
String
start
end
if
lineComment
block
start
lineComment
end
lineComment
if
commentStart
commentEnd
block
start
commentStart
commentEnd
end
commentStart
commentEnd
block
start
end
try
beginCompoundEdit
if
size
block
String
line
getLineText
caretLine
String
whitespace
substring
getLeadingWhiteSpace
line
int
loc
caret
length
start
start
whitespace
insert
caret
start
insert
caret
end
moveCaretPosition
loc
block
int
loc
for
forControl
int
i
i
size
i
block
Selection
s
Selection
elementAt
i
String
line
getLineText
startLine
String
whitespace
substring
getLeadingWhiteSpace
line
loc
start
length
insert
start
start
whitespace
insert
end
end
setCaretPosition
loc
endCompoundEdit
lineComment
String
comment
getContextSensitiveProperty
caret
if
isEditable
comment
length
block
getToolkit
beep
return
comment
comment
beginCompoundEdit
int
lines
getSelectedLines
try
for
forControl
int
i
i
length
i
block
String
text
getLineText
lines
i
insert
getLineStartOffset
lines
i
getLeadingWhiteSpace
text
comment
endCompoundEdit
selectNone
rangeComment
String
commentStart
getContextSensitiveProperty
caret
String
commentEnd
getContextSensitiveProperty
caret
if
isEditable
commentStart
commentEnd
length
length
block
getToolkit
beep
return
commentStart
commentStart
commentEnd
commentEnd
try
beginCompoundEdit
Selection
selection
getSelection
if
length
block
int
oldCaret
caret
insert
caret
commentStart
insert
caret
commentEnd
setCaretPosition
oldCaret
length
for
forControl
int
i
i
length
i
block
Selection
s
selection
i
if
s
Selection
Range
block
insert
start
commentStart
insert
end
commentEnd
if
s
Selection
Rect
block
for
forControl
int
j
startLine
j
endLine
j
block
insert
getStart
buffer
j
commentStart
int
end
getEnd
buffer
j
j
endLine
length
insert
end
commentEnd
selectNone
endCompoundEdit
formatParagraph
if
isEditable
block
getToolkit
beep
return
if
maxLineLen
block
getToolkit
beep
return
Selection
selection
getSelection
if
length
block
beginCompoundEdit
for
forControl
int
i
i
length
i
block
Selection
s
selection
i
setSelectedText
s
format
getSelectedText
s
maxLineLen
endCompoundEdit
block
int
lineNo
getCaretLine
int
start
end
getLength
for
forControl
int
i
lineNo
i
i
block
getLineText
i
lineSegment
for
forControl
int
j
j
count
j
block
switch
array
offset
j
case
break
case
continue
start
getLineStartOffset
i
break
for
forControl
int
i
lineNo
i
getLineCount
i
block
getLineText
i
lineSegment
for
forControl
int
j
j
count
j
block
switch
array
offset
j
case
break
case
continue
end
getLineEndOffset
i
break
try
beginCompoundEdit
String
text
getText
start
end
start
remove
start
end
start
insert
start
format
text
maxLineLen
endCompoundEdit
spacesToTabs
Selection
selection
getSelection
if
isEditable
block
getToolkit
beep
return
beginCompoundEdit
if
length
block
setText
spacesToTabs
getText
getTabSize
block
for
forControl
int
i
i
length
i
block
Selection
s
selection
i
setSelectedText
s
spacesToTabs
getSelectedText
s
getTabSize
endCompoundEdit
tabsToSpaces
Selection
selection
getSelection
if
isEditable
block
getToolkit
beep
return
beginCompoundEdit
if
length
block
setText
tabsToSpaces
getText
getTabSize
block
for
forControl
int
i
i
length
i
block
Selection
s
selection
i
setSelectedText
s
tabsToSpaces
getSelectedText
s
getTabSize
endCompoundEdit
toUpperCase
Selection
selection
getSelection
if
isEditable
length
block
getToolkit
beep
return
beginCompoundEdit
for
forControl
int
i
i
length
i
block
Selection
s
selection
i
setSelectedText
s
getSelectedText
toUpperCase
s
endCompoundEdit
toLowerCase
Selection
selection
getSelection
if
isEditable
length
block
getToolkit
beep
return
beginCompoundEdit
for
forControl
int
i
i
length
i
block
Selection
s
selection
i
setSelectedText
s
getSelectedText
toLowerCase
s
endCompoundEdit
removeTrailingWhiteSpace
if
isEditable
getToolkit
beep
block
removeTrailingWhiteSpace
getSelectedLines
indentSelectedLines
if
isEditable
getToolkit
beep
block
indentLines
getSelectedLines
selectNone
shiftIndentLeft
if
isEditable
getToolkit
beep
block
shiftIndentLeft
getSelectedLines
shiftIndentRight
if
isEditable
getToolkit
beep
shiftIndentRight
getSelectedLines
joinLines
int
start
getLineStartOffset
caretLine
int
end
getLineEndOffset
caretLine
if
end
getLength
block
getToolkit
beep
return
remove
end
getLeadingWhiteSpace
getLineText
caretLine
setCaretPosition
end
showWordCountDialog
String
selection
getSelectedText
if
selection
block
doWordCount
view
selection
return
doWordCount
view
getText
getLength
addNotify
addNotify
sharedInstance
registerComponent
painter
sharedInstance
registerComponent
gutter
if
bufferHandlerInstalled
block
bufferHandlerInstalled
addBufferChangeListener
bufferHandler
recalculateVisibleLines
recalculateLastPhysicalLine
removeNotify
removeNotify
sharedInstance
unregisterComponent
painter
sharedInstance
unregisterComponent
gutter
if
focusedComponent
focusedComponent
if
bufferHandlerInstalled
block
removeBufferChangeListener
bufferHandler
bufferHandlerInstalled
hasFocus
boolean
Component
c
while
c
Window
block
if
c
return
c
getParent
Component
focusOwner
Window
c
boolean
hasFocus
focusOwner
if
hasFocus
focusedComponent
focusedComponent
return
hasFocus
grabFocus
grabFocus
hasFocus
getFocusTraversalKeysEnabled
boolean
return
processKeyEvent
evt
KeyEvent
evt
processKeyEvent
evt
if
evt
return
if
isClosed
return
InputHandler
inputHandler
getInputHandler
KeyListener
keyEventInterceptor
getKeyEventInterceptor
switch
getID
case
KEY_TYPED
if
keyEventInterceptor
keyTyped
evt
keyTyped
evt
break
case
KEY_PRESSED
if
keyEventInterceptor
keyPressed
evt
keyPressed
evt
break
case
KEY_RELEASED
if
keyEventInterceptor
keyReleased
evt
keyReleased
evt
break
if
isConsumed
processKeyEvent
evt
propertiesChanged
if
buffer
return
int
_tabSize
getTabSize
char
foo
char
_tabSize
for
forControl
int
i
i
length
i
block
foo
i
tabSize
float
getFont
getStringBounds
foo
_tabSize
getFontRenderContext
getWidth
charWidth
int
round
getFont
getStringBounds
foo
getFontRenderContext
getWidth
String
wrap
getStringProperty
softWrap
equals
hardWrap
equals
maxLineLen
getIntegerProperty
if
maxLineLen
block
if
softWrap
block
wrapToWidth
wrapMargin
getWidth
charWidth
block
wrapToWidth
wrapMargin
block
foo
char
maxLineLen
for
forControl
int
i
i
length
i
block
foo
i
wrapToWidth
wrapMargin
int
getFont
getStringBounds
foo
maxLineLen
getFontRenderContext
getWidth
maxHorizontalScrollWidth
updateScrollBars
invalidateAll
repaint
repaint
setOrigin
boolean
firstLine
int
horizontalOffset
int
setFirstLine
firstLine
setHorizontalOffset
horizontalOffset
return
lineToY
int
line
int
FontMetrics
fm
getFontMetrics
return
line
firstLine
getHeight
getLeading
getDescent
yToLine
int
y
int
FontMetrics
fm
getFontMetrics
int
height
getHeight
return
max
min
getVirtualLineCount
y
height
firstLine
offsetToX
int
line
int
offset
int
ChunkCache
Chunk
chunks
getLineInfoBackwardsCompatibility
chunks
line
return
int
horizontalOffset
offsetToX
chunks
offset
xToOffset
int
line
int
x
int
x
horizontalOffset
ChunkCache
Chunk
chunks
getLineInfoBackwardsCompatibility
chunks
line
int
offset
xToOffset
chunks
x
if
offset
offset
getLineLength
line
return
offset
xToOffset
int
line
int
x
int
round
boolean
x
horizontalOffset
ChunkCache
Chunk
chunks
getLineInfoBackwardsCompatibility
chunks
line
int
offset
xToOffset
chunks
x
round
if
offset
offset
getLineLength
line
return
offset
getSelectionStart
int
if
size
return
caret
return
Selection
elementAt
getSelectionStart
int
line
int
if
size
return
caret
return
Selection
elementAt
getSelectionStartLine
int
if
size
return
caret
return
Selection
elementAt
setSelectionStart
selectionStart
int
select
selectionStart
getSelectionEnd
getSelectionEnd
int
if
size
return
caret
return
Selection
elementAt
getSelectionEnd
int
line
int
if
size
return
caret
return
Selection
elementAt
getSelectionEndLine
int
if
size
return
caret
return
Selection
elementAt
setSelectionEnd
selectionEnd
int
select
getSelectionStart
selectionEnd
getMarkPosition
int
Selection
s
getSelectionAtOffset
caret
if
s
return
caret
if
start
caret
return
end
if
end
caret
return
start
return
caret
getMarkLine
int
if
size
return
caretLine
Selection
s
Selection
elementAt
if
start
caret
return
endLine
if
end
caret
return
startLine
return
caretLine
select
start
int
end
int
select
start
end
select
start
int
end
int
doElectricScroll
boolean
selectNone
int
newStart
newEnd
if
start
end
block
newStart
start
newEnd
end
block
newStart
end
newEnd
start
setSelection
Selection
Range
newStart
newEnd
moveCaretPosition
end
doElectricScroll
isSelectionRectangular
boolean
Selection
s
getSelectionAtOffset
caret
if
s
return
return
s
Selection
Rect
Segment
lineSegment
MouseHandler
mouseHandler
ChunkCache
chunkCache
int
maxHorizontalScrollWidth
boolean
softWrap
boolean
hardWrap
float
tabSize
int
wrapMargin
boolean
wrapToWidth
int
charWidth
boolean
scrollBarsInitialized
Vector
selection
Point
returnValue
isCaretVisible
boolean
return
blink
hasFocus
isBracketHighlightVisible
boolean
return
bracketLine
hasFocus
isLineVisible
bracketLine
isLineVisible
caretLine
updateMaxHorizontalScrollWidth
int
max
getMaxHorizontalScrollWidth
if
max
maxHorizontalScrollWidth
block
maxHorizontalScrollWidth
max
setValues
max
min
maxHorizontalScrollWidth
charWidth
getWidth
horizontalOffset
getWidth
maxHorizontalScrollWidth
charWidth
recalculateVisibleLines
if
painter
return
int
height
getHeight
int
lineHeight
getFontMetrics
getHeight
visibleLines
height
lineHeight
recalculateVisibleLines
propertiesChanged
foldStructureChanged
invalidateAll
while
isLineVisible
physFirstLine
physFirstLine
physFirstLine
setFirstLine
physicalToVirtual
physFirstLine
updateScrollBars
recalculateLastPhysicalLine
repaint
repaint
getSubregionOfOffset
int
offset
int
lineInfos
ChunkCache
LineInfo
for
forControl
int
i
i
length
i
block
ChunkCache
LineInfo
info
lineInfos
i
if
offset
offset
offset
offset
length
return
i
return
xToSubregionOffset
int
info
ChunkCache
LineInfo
x
float
round
boolean
int
offset
xToOffset
chunks
x
horizontalOffset
round
if
offset
offset
offset
length
offset
offset
length
return
offset
subregionOffsetToX
int
info
ChunkCache
LineInfo
offset
int
return
int
horizontalOffset
offsetToX
chunks
offset
String
CENTER
String
RIGHT
String
LEFT
String
BOTTOM
Timer
caretTimer
JEditTextArea
focusedComponent
View
view
Gutter
gutter
TextAreaPainter
painter
JPopupMenu
popup
EventListenerList
listenerList
MutableCaretEvent
caretEvent
boolean
caretBlinks
boolean
blink
int
firstLine
int
physFirstLine
int
physLastLine
int
screenLastLine
int
visibleLines
int
electricScroll
int
horizontalOffset
boolean
quickCopy
JScrollBar
vertical
JScrollBar
horizontal
boolean
bufferChanging
Buffer
buffer
FoldVisibilityManager
foldVisibilityManager
BufferChangeHandler
bufferHandler
boolean
bufferHandlerInstalled
int
caret
int
caretLine
int
caretScreenLine
int
bracketPosition
int
bracketLine
int
magicCaret
boolean
multi
boolean
overwrite
int
maxLineLen
boolean
queuedRecalcLastPhys
boolean
queuedScrollTo
boolean
queuedScrollToElectric
boolean
queuedFireCaretEvent
ArrayList
runnables
_addToSelection
addMe
Selection
if
start
start
if
end
getLength
end
getLength
if
start
end
block
throw
IllegalArgumentException
start
end
if
start
end
return
for
forControl
int
i
i
size
i
block
Selection
s
Selection
elementAt
i
if
_selectionsOverlap
s
addMe
block
start
min
start
start
end
max
end
end
removeElement
s
i
startLine
getLineOfOffset
start
endLine
getLineOfOffset
end
boolean
added
for
forControl
int
i
i
size
i
block
Selection
s
Selection
elementAt
i
if
start
start
block
insertElementAt
addMe
i
added
break
if
added
addElement
addMe
invalidateLineRange
startLine
endLine
_selectionsOverlap
boolean
s1
Selection
s2
Selection
if
start
start
start
end
end
start
end
end
return
return
getSelectedText
s
Selection
buf
StringBuffer
if
s
Selection
Rect
block
int
start
start
getLineStartOffset
startLine
int
end
end
getLineStartOffset
endLine
if
end
start
block
int
tmp
end
end
start
start
tmp
for
forControl
int
i
startLine
i
endLine
i
block
int
lineStart
getLineStartOffset
i
int
lineEnd
getLineEndOffset
i
int
lineLen
lineEnd
lineStart
lineStart
min
lineStart
start
lineEnd
lineLen
min
end
start
lineEnd
lineStart
getText
lineStart
lineLen
lineSegment
append
array
offset
count
if
i
endLine
append
block
getText
start
end
start
lineSegment
append
array
offset
count
finishCaretUpdate
doElectricScroll
boolean
fireCaretEvent
boolean
queuedScrollToElectric
doElectricScroll
queuedFireCaretEvent
fireCaretEvent
Runnable
r
Runnable
run
scrollToCaret
queuedScrollToElectric
updateBracketHighlight
if
queuedFireCaretEvent
fireCaretEvent
queuedScrollTo
queuedScrollToElectric
queuedFireCaretEvent
if
isTransactionInProgress
block
if
queuedScrollTo
block
queuedScrollTo
add
r
run
fireCaretEvent
Object
listeners
getListenerList
for
forControl
int
i
length
i
i
block
if
listeners
i
CaretListener
block
CaretListener
listeners
i
fireScrollEvent
vertical
boolean
Object
listeners
getListenerList
for
forControl
int
i
length
i
i
block
if
listeners
i
ScrollListener
block
if
vertical
ScrollListener
listeners
i
ScrollListener
listeners
i
insertTab
int
tabSize
getTabSize
if
getBooleanProperty
block
int
lineStart
getLineStartOffset
caretLine
String
line
getText
lineStart
caret
lineStart
int
pos
for
forControl
int
i
i
length
i
block
switch
charAt
pos
case
pos
break
case
if
pos
tabSize
pos
break
setSelectedText
createWhiteSpace
tabSize
pos
setSelectedText
doWordWrap
boolean
spaceInserted
boolean
if
hardWrap
maxLineLen
return
getLineText
caretLine
lineSegment
int
start
getLineStartOffset
caretLine
int
end
getLineEndOffset
caretLine
int
len
end
start
int
caretPos
caret
start
for
forControl
int
i
caretPos
i
len
i
block
char
ch
array
offset
i
if
ch
ch
return
boolean
returnValue
int
tabSize
getTabSize
String
wordBreakChars
getStringProperty
int
logicalLength
int
lastWordOffset
boolean
lastWasSpace
boolean
initialWhiteSpace
int
initialWhiteSpaceLength
for
forControl
int
i
i
caretPos
i
block
char
ch
array
offset
i
if
ch
block
if
initialWhiteSpace
initialWhiteSpaceLength
i
logicalLength
tabSize
logicalLength
tabSize
if
lastWasSpace
logicalLength
maxLineLen
block
lastWordOffset
i
lastWasSpace
if
ch
block
if
initialWhiteSpace
initialWhiteSpaceLength
i
logicalLength
if
lastWasSpace
logicalLength
maxLineLen
block
lastWordOffset
i
lastWasSpace
if
wordBreakChars
indexOf
ch
block
initialWhiteSpace
logicalLength
if
lastWasSpace
logicalLength
maxLineLen
block
lastWordOffset
i
lastWasSpace
block
initialWhiteSpace
logicalLength
lastWasSpace
int
insertNewLineAt
if
spaceInserted
logicalLength
maxLineLen
i
caretPos
block
insertNewLineAt
caretPos
returnValue
if
logicalLength
maxLineLen
lastWordOffset
insertNewLineAt
lastWordOffset
continue
try
beginCompoundEdit
insert
start
insertNewLineAt
indentLine
caretLine
endCompoundEdit
return
returnValue
return
doWordCount
view
View
text
String
char
chars
toCharArray
int
characters
length
int
words
if
characters
words
words
int
lines
boolean
word
for
forControl
int
i
i
length
i
block
switch
chars
i
case
lines
case
if
word
block
words
word
break
case
word
break
Object
args
Integer
characters
Integer
words
Integer
lines
message
view
args
updateBracketHighlight
if
isBracketHighlightEnabled
return
if
bracketLine
invalidateLineRange
bracketLine
caretLine
int
offset
caret
getLineStartOffset
caretLine
if
offset
block
int
bracketOffset
findMatchingBracket
buffer
caretLine
offset
getLineCount
if
bracketOffset
block
bracketLine
getLineOfOffset
bracketOffset
bracketPosition
bracketOffset
getLineStartOffset
bracketLine
invalidateLineRange
bracketLine
caretLine
if
bracketLine
physFirstLine
bracketLine
physLastLine
block
showBracketStatusMessage
bracketLine
caretLine
return
bracketLine
bracketPosition
showBracketStatusMessage
backward
boolean
String
text
getLineText
trim
bracketLine
if
backward
bracketLine
length
block
switch
charAt
case
text
getLineText
trim
bracketLine
text
break
text
replace
getStatus
setMessageAndClear
getProperty
String
text
recalculateLastPhysicalLine
if
softWrap
block
updateChunksUpTo
visibleLines
for
forControl
int
i
visibleLines
i
i
block
ChunkCache
LineInfo
info
getLineInfo
i
if
physicalLine
block
physLastLine
physicalLine
screenLastLine
i
break
block
int
virtLastLine
min
getVirtualLineCount
firstLine
visibleLines
screenLastLine
virtLastLine
firstLine
physLastLine
virtualToPhysical
virtLastLine
TextAreaBorder
Insets
insets
Insets
paintBorder
c
Component
g
Graphics
x
int
y
int
width
int
height
int
translate
x
y
setColor
getControlDarkShadow
drawRect
width
height
setColor
getControlHighlight
drawLine
width
width
height
drawLine
height
width
height
setColor
getControl
drawLine
width
width
drawLine
height
height
translate
x
y
getBorderInsets
Insets
c
Component
return
Insets
AbstractBorder
ScrollLayout
addLayoutComponent
name
String
comp
Component
if
equals
CENTER
center
comp
if
equals
RIGHT
right
comp
if
equals
LEFT
left
comp
if
equals
BOTTOM
bottom
comp
removeLayoutComponent
comp
Component
if
center
comp
center
if
right
comp
right
if
left
comp
left
if
bottom
comp
bottom
preferredLayoutSize
Dimension
parent
Container
Dimension
dim
Dimension
Border
border
getBorder
Insets
insets
if
border
insets
Insets
block
insets
getBorder
getBorderInsets
width
left
right
height
top
bottom
Dimension
leftPref
getPreferredSize
width
width
Dimension
centerPref
getPreferredSize
width
width
height
height
Dimension
rightPref
getPreferredSize
width
width
Dimension
bottomPref
getPreferredSize
height
height
return
dim
minimumLayoutSize
Dimension
parent
Container
Dimension
dim
Dimension
Border
border
getBorder
Insets
insets
if
border
insets
Insets
block
insets
getBorder
getBorderInsets
width
left
right
height
top
bottom
Dimension
leftPref
getMinimumSize
width
width
Dimension
centerPref
getMinimumSize
width
width
height
height
Dimension
rightPref
getMinimumSize
width
width
Dimension
bottomPref
getMinimumSize
height
height
return
dim
layoutContainer
parent
Container
Dimension
size
getSize
Border
border
getBorder
Insets
insets
if
border
insets
Insets
block
insets
getBorder
getBorderInsets
int
itop
top
int
ileft
left
int
ibottom
bottom
int
iright
right
int
rightWidth
getPreferredSize
width
int
leftWidth
getPreferredSize
width
int
bottomHeight
getPreferredSize
height
int
centerWidth
max
width
leftWidth
rightWidth
ileft
iright
int
centerHeight
max
height
bottomHeight
itop
ibottom
setBounds
ileft
itop
leftWidth
centerHeight
setBounds
ileft
leftWidth
itop
centerWidth
centerHeight
setBounds
ileft
leftWidth
centerWidth
itop
rightWidth
centerHeight
setBounds
ileft
itop
centerHeight
max
width
rightWidth
ileft
iright
bottomHeight
Component
center
Component
left
Component
right
Component
bottom
LayoutManager
CaretBlinker
actionPerformed
evt
ActionEvent
if
focusedComponent
hasFocus
blinkCaret
ActionListener
MutableCaretEvent
MutableCaretEvent
getDot
int
return
getCaretPosition
getMark
int
return
getMarkPosition
CaretEvent
AdjustHandler
adjustmentValueChanged
evt
AdjustmentEvent
if
scrollBarsInitialized
return
if
getAdjustable
vertical
setFirstLine
getValue
setHorizontalOffset
getValue
AdjustmentListener
ComponentHandler
componentResized
evt
ComponentEvent
ComponentAdapter
BufferChangeHandler
foldLevelChanged
buffer
Buffer
start
int
end
int
if
bufferChanging
end
isLoaded
block
invalidateLineRange
start
end
contentInserted
buffer
Buffer
startLine
int
start
int
numLines
int
length
int
invalidateChunksFromPhys
startLine
if
numLines
softWrap
getLastVisibleLine
numLines
physLastLine
block
int
oldScreenLastLine
screenLastLine
recalculateLastPhysicalLine
invalidateScreenLineRange
oldScreenLastLine
screenLastLine
if
isLoaded
return
repaintAndScroll
startLine
numLines
for
forControl
int
i
i
size
i
block
Selection
s
Selection
elementAt
i
boolean
changed
if
s
Selection
Rect
start
start
s
Selection
Range
start
start
block
start
length
startLine
getLineOfOffset
start
changed
if
end
start
block
end
length
endLine
getLineOfOffset
end
changed
if
changed
invalidateLineRange
startLine
endLine
if
caret
start
moveCaretPosition
caret
length
block
moveCaretPosition
caret
contentRemoved
buffer
Buffer
startLine
int
start
int
numLines
int
length
int
if
isLoaded
return
invalidateChunksFromPhys
startLine
repaintAndScroll
startLine
numLines
if
numLines
softWrap
getLastVisibleLine
numLines
physLastLine
block
Runnable
r
Runnable
run
queuedRecalcLastPhys
int
oldScreenLastLine
screenLastLine
recalculateLastPhysicalLine
invalidateScreenLineRange
oldScreenLastLine
screenLastLine
if
isTransactionInProgress
block
if
queuedRecalcLastPhys
block
queuedRecalcLastPhys
add
r
run
int
end
start
length
for
forControl
int
i
i
size
i
block
Selection
s
Selection
elementAt
i
boolean
changed
if
start
start
start
end
block
start
start
changed
if
start
end
block
start
length
changed
if
end
start
end
end
block
end
start
changed
if
end
end
block
end
length
changed
if
start
end
block
removeElement
s
invalidateLineRange
startLine
endLine
i
if
changed
block
startLine
getLineOfOffset
start
endLine
getLineOfOffset
end
invalidateLineRange
startLine
endLine
if
caret
start
caret
end
moveCaretPosition
start
if
caret
end
moveCaretPosition
caret
length
block
moveCaretPosition
caret
transactionComplete
buffer
Buffer
for
forControl
int
i
i
size
i
block
Runnable
get
i
clear
repaintAndScroll
startLine
int
numLines
int
if
numLines
invalidateLine
startLine
if
startLine
firstLine
block
setFirstLine
firstLine
numLines
block
updateScrollBars
invalidateScreenLineRange
getScreenLineOfOffset
startLine
screenLastLine
BufferChangeListener
FocusHandler
focusGained
evt
FocusEvent
if
bufferChanging
return
if
bracketLine
invalidateLineRange
bracketLine
caretLine
invalidateLine
caretLine
updateGutterBorders
focusLost
evt
FocusEvent
if
isShowing
return
if
bracketLine
invalidateLineRange
bracketLine
caretLine
invalidateLine
caretLine
FocusListener
MouseHandler
int
dragStartLine
int
dragStartOffset
int
dragStart
int
clickCount
boolean
dragged
boolean
quickCopyDrag
boolean
clearStatus
mousePressed
evt
MouseEvent
getInputHandler
resetLastActionCount
grabFocus
if
isPopupTrigger
evt
popup
block
if
isVisible
setVisible
block
showPopupMenu
popup
painter
getX
getY
return
quickCopyDrag
isQuickCopyEnabled
getModifiers
BUTTON2_MASK
blink
invalidateLine
caretLine
int
x
getX
int
y
getY
dragStart
xyToOffset
x
y
isBlockCaretEnabled
dragStartLine
getLineOfOffset
dragStart
dragStartOffset
dragStart
getLineStartOffset
dragStartLine
dragged
clickCount
getClickCount
switch
clickCount
case
doSingleClick
evt
break
case
doDoubleClick
evt
break
case
doTripleClick
evt
break
mouseReleased
evt
MouseEvent
if
getSelectionCount
setRegister
getSelectedText
if
dragged
block
if
quickCopyDrag
block
String
text
getSelectedText
selectNone
setSelectedText
text
if
isQuickCopyEnabled
getModifiers
BUTTON2_MASK
block
moveCaretPosition
dragStart
if
isEditable
getToolkit
beep
paste
dragged
if
clearStatus
block
clearStatus
getStatus
setMessage
doSingleClick
evt
MouseEvent
boolean
control
isMacOS
isMetaDown
isMacOS
isControlDown
if
isShiftDown
block
resizeSelection
getMarkPosition
dragStart
control
moveCaretPosition
dragStart
dragStartLine
getMarkLine
dragStart
getMarkPosition
dragStartOffset
dragStart
getLineStartOffset
dragStartLine
if
control
block
if
multi
selectNone
moveCaretPosition
xyToOffset
getX
getY
selectToMatchingBracket
block
if
multi
selectNone
if
quickCopyDrag
moveCaretPosition
dragStart
doDoubleClick
evt
MouseEvent
if
getLineLength
dragStartLine
return
String
lineText
getLineText
dragStartLine
String
noWordSep
getStringProperty
if
dragStartOffset
getLineLength
dragStartLine
dragStartOffset
int
wordStart
findWordStart
lineText
dragStartOffset
noWordSep
int
wordEnd
findWordEnd
lineText
dragStartOffset
noWordSep
int
lineStart
getLineStartOffset
dragStartLine
addToSelection
Selection
Range
lineStart
wordStart
lineStart
wordEnd
if
quickCopyDrag
quickCopyDrag
moveCaretPosition
lineStart
wordEnd
dragged
doTripleClick
evt
MouseEvent
int
newCaret
getLineEndOffset
dragStartLine
addToSelection
Selection
Range
getLineStartOffset
dragStartLine
newCaret
if
quickCopyDrag
quickCopyDrag
moveCaretPosition
newCaret
mouseDragged
evt
MouseEvent
if
isPopupTrigger
evt
popup
isVisible
return
if
getY
block
setFirstLine
getFirstLine
if
getY
getHeight
block
setFirstLine
getFirstLine
boolean
rect
isMacOS
isMetaDown
isMacOS
isControlDown
if
quickCopyDrag
block
getStatus
setMessage
getProperty
clearStatus
if
isControlDown
block
getStatus
setMessage
getProperty
clearStatus
switch
clickCount
case
doSingleDrag
evt
rect
break
case
doDoubleDrag
evt
rect
break
case
doTripleDrag
evt
rect
break
doSingleDrag
evt
MouseEvent
rect
boolean
int
dot
xyToOffset
getX
max
min
getHeight
getY
isBlockCaretEnabled
dragged
resizeSelection
dragStart
dot
rect
if
quickCopyDrag
block
int
line
getLineOfOffset
dot
scrollTo
line
dot
getLineStartOffset
line
block
if
dot
caret
return
moveCaretPosition
dot
doDoubleDrag
evt
MouseEvent
rect
boolean
int
markLineStart
getLineStartOffset
dragStartLine
int
markLineLength
getLineLength
dragStartLine
int
mark
dragStartOffset
int
pos
xyToOffset
getX
max
min
getHeight
getY
isBlockCaretEnabled
int
line
getLineOfOffset
pos
int
lineStart
getLineStartOffset
line
int
lineLength
getLineLength
line
int
offset
pos
lineStart
String
lineText
getLineText
line
String
markLineText
getLineText
dragStartLine
String
noWordSep
getStringProperty
if
markLineStart
dragStartOffset
lineStart
offset
block
if
offset
offset
lineLength
block
offset
findWordStart
lineText
offset
noWordSep
if
markLineLength
block
mark
findWordEnd
markLineText
mark
noWordSep
block
if
offset
lineLength
block
offset
findWordEnd
lineText
offset
noWordSep
if
mark
mark
markLineLength
block
mark
findWordStart
markLineText
mark
noWordSep
if
lineStart
offset
caret
return
resizeSelection
markLineStart
mark
lineStart
offset
rect
if
quickCopyDrag
moveCaretPosition
lineStart
offset
doTripleDrag
evt
MouseEvent
rect
boolean
int
offset
xyToOffset
getX
max
min
getHeight
getY
int
mouseLine
getLineOfOffset
offset
int
mark
int
mouse
if
dragStartLine
mouseLine
block
mark
getLineEndOffset
dragStartLine
if
offset
getLineEndOffset
mouseLine
mouse
offset
mouse
getLineStartOffset
mouseLine
block
mark
getLineStartOffset
dragStartLine
if
offset
getLineStartOffset
mouseLine
mouse
offset
if
offset
getLineEndOffset
mouseLine
mouseLine
getBuffer
getLineCount
mouse
getLineEndOffset
mouseLine
mouse
getLineEndOffset
mouseLine
mouse
min
getBuffer
getLength
mouse
if
mouse
caret
return
dragged
resizeSelection
mark
mouse
rect
moveCaretPosition
mouse
MouseInputAdapter
caretTimer
Timer
CaretBlinker
setInitialDelay
start
JComponent
