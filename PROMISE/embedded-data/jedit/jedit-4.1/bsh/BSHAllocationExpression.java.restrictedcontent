BSHAllocationExpression
BSHAllocationExpression
id
int
id
eval
Object
callstack
CallStack
interpreter
Interpreter
SimpleNode
type
SimpleNode
jjtGetChild
SimpleNode
args
SimpleNode
jjtGetChild
if
type
BSHAmbiguousName
block
BSHAmbiguousName
name
BSHAmbiguousName
type
if
args
BSHArguments
return
objectAllocation
name
BSHArguments
args
callstack
interpreter
return
objectArrayAllocation
name
BSHArrayDimensions
args
callstack
interpreter
return
primitiveArrayAllocation
BSHPrimitiveType
type
BSHArrayDimensions
args
callstack
interpreter
objectAllocation
Object
nameNode
BSHAmbiguousName
argumentsNode
BSHArguments
callstack
CallStack
interpreter
Interpreter
NameSpace
namespace
top
Class
type
toClass
namespace
Object
args
getArguments
callstack
interpreter
if
args
throw
EvalError
boolean
hasBody
jjtGetNumChildren
if
hasBody
block
BSHBlock
body
BSHBlock
jjtGetChild
return
constructWithBody
type
args
body
callstack
interpreter
return
constructObject
type
args
constructObject
Object
type
Class
args
Object
try
return
constructObject
type
args
catchClause
e
throw
EvalError
getMessage
catchClause
e
debug
getTargetException
throw
TargetError
getTargetException
constructWithBody
Object
type
Class
args
Object
body
BSHBlock
callstack
CallStack
interpreter
Interpreter
if
isInterface
throw
EvalError
type
NameSpace
namespace
top
NameSpace
local
NameSpace
namespace
push
local
eval
callstack
interpreter
pop
return
getThis
getInterface
type
interpreter
objectArrayAllocation
Object
nameNode
BSHAmbiguousName
dimensionsNode
BSHArrayDimensions
callstack
CallStack
interpreter
Interpreter
NameSpace
namespace
top
Class
type
toClass
namespace
if
type
throw
EvalError
getName
namespace
Object
result
eval
type
callstack
interpreter
if
result
VOID
return
result
return
arrayNewInstance
type
dimensionsNode
primitiveArrayAllocation
Object
typeNode
BSHPrimitiveType
dimensionsNode
BSHArrayDimensions
callstack
CallStack
interpreter
Interpreter
Class
type
getType
Object
result
eval
type
callstack
interpreter
if
result
VOID
return
result
return
arrayNewInstance
type
dimensionsNode
arrayNewInstance
Object
type
Class
dimensionsNode
BSHArrayDimensions
try
return
newInstance
type
dimensions
catchClause
e1
throw
TargetError
e1
catchClause
e
throw
EvalError
getMessage
SimpleNode
