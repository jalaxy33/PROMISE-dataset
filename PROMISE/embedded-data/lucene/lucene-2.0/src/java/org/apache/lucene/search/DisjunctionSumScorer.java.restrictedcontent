DisjunctionSumScorer
int
nrScorers
List
subScorers
int
minimumNrMatchers
ScorerQueue
scorerQueue
int
currentDoc
int
nrMatchers
float
currentScore
NaN
DisjunctionSumScorer
subScorers
List
minimumNrMatchers
int
nrScorers
size
if
minimumNrMatchers
block
throw
IllegalArgumentException
if
nrScorers
block
throw
IllegalArgumentException
minimumNrMatchers
minimumNrMatchers
subScorers
subScorers
DisjunctionSumScorer
subScorers
List
subScorers
initScorerQueue
Iterator
si
iterator
scorerQueue
ScorerQueue
nrScorers
while
hasNext
block
Scorer
se
Scorer
next
if
next
block
insert
se
ScorerQueue
ScorerQueue
size
int
initialize
size
lessThan
boolean
o1
Object
o2
Object
return
Scorer
o1
Scorer
o2
PriorityQueue
next
boolean
if
scorerQueue
block
initScorerQueue
if
size
minimumNrMatchers
block
return
block
return
advanceAfterCurrent
advanceAfterCurrent
boolean
do
block
Scorer
top
Scorer
top
currentDoc
doc
currentScore
score
nrMatchers
do
block
if
next
block
adjustTop
block
pop
if
size
minimumNrMatchers
nrMatchers
block
return
if
size
block
break
top
Scorer
top
if
doc
currentDoc
block
break
block
currentScore
score
nrMatchers
if
nrMatchers
minimumNrMatchers
block
return
if
size
minimumNrMatchers
block
return
score
float
return
currentScore
doc
int
return
currentDoc
nrMatchers
int
return
nrMatchers
skipTo
boolean
target
int
if
scorerQueue
block
initScorerQueue
if
size
minimumNrMatchers
block
return
if
target
currentDoc
block
return
do
block
Scorer
top
Scorer
top
if
doc
target
block
return
advanceAfterCurrent
if
skipTo
target
block
adjustTop
block
pop
if
size
minimumNrMatchers
block
return
explain
Explanation
doc
int
Explanation
res
Explanation
setDescription
minimumNrMatchers
Iterator
ssi
iterator
while
hasNext
block
addDetail
Scorer
next
return
res
Scorer
