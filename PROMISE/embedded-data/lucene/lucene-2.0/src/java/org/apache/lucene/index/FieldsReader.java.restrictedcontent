FieldsReader
FieldInfos
fieldInfos
IndexInput
fieldsStream
IndexInput
indexStream
int
size
FieldsReader
d
Directory
segment
String
fn
FieldInfos
fieldInfos
fn
fieldsStream
openInput
segment
indexStream
openInput
segment
size
int
length
close
close
close
size
int
return
size
doc
Document
n
int
seek
n
long
position
readLong
seek
position
Document
doc
Document
int
numFields
readVInt
for
forControl
int
i
i
numFields
i
block
int
fieldNumber
readVInt
FieldInfo
fi
fieldInfo
fieldNumber
byte
bits
readByte
boolean
compressed
bits
FIELD_IS_COMPRESSED
boolean
tokenize
bits
FIELD_IS_TOKENIZED
if
bits
FIELD_IS_BINARY
block
byte
b
byte
readVInt
readBytes
b
length
if
compressed
add
Field
name
uncompress
b
COMPRESS
add
Field
name
b
YES
block
Field
Index
index
Field
Store
store
YES
if
isIndexed
tokenize
index
TOKENIZED
if
isIndexed
tokenize
index
UN_TOKENIZED
index
NO
Field
TermVector
termVector
if
storeTermVector
block
if
storeOffsetWithTermVector
block
if
storePositionWithTermVector
block
termVector
WITH_POSITIONS_OFFSETS
block
termVector
WITH_OFFSETS
if
storePositionWithTermVector
block
termVector
WITH_POSITIONS
block
termVector
YES
block
termVector
NO
if
compressed
block
store
COMPRESS
byte
b
byte
readVInt
readBytes
b
length
Field
f
Field
name
String
uncompress
b
store
index
termVector
setOmitNorms
omitNorms
add
f
block
Field
f
Field
name
readString
store
index
termVector
setOmitNorms
omitNorms
add
f
return
doc
uncompress
byte
input
byte
Inflater
decompressor
Inflater
setInput
input
ByteArrayOutputStream
bos
ByteArrayOutputStream
length
byte
buf
byte
while
finished
block
try
int
count
inflate
buf
write
buf
count
catchClause
e
IOException
newException
IOException
toString
initCause
e
throw
newException
end
return
toByteArray
