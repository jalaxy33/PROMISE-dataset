IndexWriter
long
WRITE_LOCK_TIMEOUT
long
writeLockTimeout
WRITE_LOCK_TIMEOUT
String
WRITE_LOCK_NAME
int
DEFAULT_MERGE_FACTOR
int
DEFAULT_MAX_BUFFERED_DOCS
int
DEFAULT_MAX_BUFFERED_DELETE_TERMS
int
DEFAULT_MAX_MERGE_DOCS
MAX_VALUE
int
DEFAULT_MAX_FIELD_LENGTH
int
DEFAULT_TERM_INDEX_INTERVAL
int
MERGE_READ_BUFFER_SIZE
Directory
directory
Analyzer
analyzer
Similarity
similarity
getDefault
boolean
commitPending
SegmentInfos
rollbackSegmentInfos
SegmentInfos
localRollbackSegmentInfos
boolean
localAutoCommit
boolean
autoCommit
SegmentInfos
segmentInfos
SegmentInfos
SegmentInfos
ramSegmentInfos
SegmentInfos
RAMDirectory
ramDirectory
RAMDirectory
IndexFileDeleter
deleter
Lock
writeLock
int
termIndexInterval
DEFAULT_TERM_INDEX_INTERVAL
int
maxBufferedDeleteTerms
DEFAULT_MAX_BUFFERED_DELETE_TERMS
HashMap
bufferedDeleteTerms
HashMap
int
numBufferedDeleteTerms
boolean
useCompoundFile
boolean
closeDir
boolean
closed
ensureOpen
if
closed
block
throw
AlreadyClosedException
getUseCompoundFile
boolean
ensureOpen
return
useCompoundFile
setUseCompoundFile
value
boolean
ensureOpen
useCompoundFile
value
setSimilarity
similarity
Similarity
ensureOpen
similarity
similarity
getSimilarity
Similarity
ensureOpen
return
similarity
setTermIndexInterval
interval
int
ensureOpen
termIndexInterval
interval
getTermIndexInterval
int
ensureOpen
return
termIndexInterval
IndexWriter
path
String
a
Analyzer
create
boolean
init
getDirectory
path
a
create
IndexWriter
path
File
a
Analyzer
create
boolean
init
getDirectory
path
a
create
IndexWriter
d
Directory
a
Analyzer
create
boolean
init
d
a
create
IndexWriter
path
String
a
Analyzer
init
getDirectory
path
a
IndexWriter
path
File
a
Analyzer
init
getDirectory
path
a
IndexWriter
d
Directory
a
Analyzer
init
d
a
IndexWriter
d
Directory
autoCommit
boolean
a
Analyzer
init
d
a
autoCommit
IndexWriter
d
Directory
autoCommit
boolean
a
Analyzer
create
boolean
init
d
a
create
autoCommit
IndexWriter
d
Directory
autoCommit
boolean
a
Analyzer
deletionPolicy
IndexDeletionPolicy
init
d
a
deletionPolicy
autoCommit
IndexWriter
d
Directory
autoCommit
boolean
a
Analyzer
create
boolean
deletionPolicy
IndexDeletionPolicy
init
d
a
create
deletionPolicy
autoCommit
init
d
Directory
a
Analyzer
closeDir
boolean
deletionPolicy
IndexDeletionPolicy
autoCommit
boolean
if
indexExists
d
block
init
d
a
closeDir
deletionPolicy
autoCommit
block
init
d
a
closeDir
deletionPolicy
autoCommit
init
d
Directory
a
Analyzer
create
boolean
closeDir
boolean
deletionPolicy
IndexDeletionPolicy
autoCommit
boolean
closeDir
closeDir
directory
d
analyzer
a
infoStream
defaultInfoStream
if
create
block
clearLock
WRITE_LOCK_NAME
Lock
writeLock
makeLock
WRITE_LOCK_NAME
if
obtain
writeLockTimeout
throw
LockObtainFailedException
writeLock
writeLock
writeLock
try
if
create
block
try
read
directory
clear
catchClause
e
write
directory
block
read
directory
autoCommit
autoCommit
if
autoCommit
block
rollbackSegmentInfos
SegmentInfos
clone
deleter
IndexFileDeleter
directory
deletionPolicy
KeepOnlyLastCommitDeletionPolicy
deletionPolicy
segmentInfos
infoStream
catchClause
e
writeLock
release
writeLock
throw
e
setMaxMergeDocs
maxMergeDocs
int
ensureOpen
maxMergeDocs
maxMergeDocs
getMaxMergeDocs
int
ensureOpen
return
maxMergeDocs
setMaxFieldLength
maxFieldLength
int
ensureOpen
maxFieldLength
maxFieldLength
getMaxFieldLength
int
ensureOpen
return
maxFieldLength
setMaxBufferedDocs
maxBufferedDocs
int
ensureOpen
if
maxBufferedDocs
throw
IllegalArgumentException
minMergeDocs
maxBufferedDocs
getMaxBufferedDocs
int
ensureOpen
return
minMergeDocs
setMaxBufferedDeleteTerms
maxBufferedDeleteTerms
int
ensureOpen
if
maxBufferedDeleteTerms
throw
IllegalArgumentException
maxBufferedDeleteTerms
maxBufferedDeleteTerms
getMaxBufferedDeleteTerms
int
ensureOpen
return
maxBufferedDeleteTerms
setMergeFactor
mergeFactor
int
ensureOpen
if
mergeFactor
throw
IllegalArgumentException
mergeFactor
mergeFactor
getMergeFactor
int
ensureOpen
return
mergeFactor
setDefaultInfoStream
infoStream
PrintStream
defaultInfoStream
infoStream
getDefaultInfoStream
PrintStream
return
defaultInfoStream
setInfoStream
infoStream
PrintStream
ensureOpen
infoStream
infoStream
setInfoStream
infoStream
getInfoStream
PrintStream
ensureOpen
return
infoStream
setWriteLockTimeout
writeLockTimeout
long
ensureOpen
writeLockTimeout
writeLockTimeout
getWriteLockTimeout
long
ensureOpen
return
writeLockTimeout
setDefaultWriteLockTimeout
writeLockTimeout
long
WRITE_LOCK_TIMEOUT
writeLockTimeout
getDefaultWriteLockTimeout
long
return
WRITE_LOCK_TIMEOUT
close
if
closed
block
flushRamSegments
if
commitPending
block
write
directory
checkpoint
segmentInfos
commitPending
rollbackSegmentInfos
close
if
writeLock
block
release
writeLock
closed
if
closeDir
close
finalize
try
if
writeLock
block
release
writeLock
finalize
getDirectory
Directory
ensureOpen
return
directory
getAnalyzer
Analyzer
ensureOpen
return
analyzer
docCount
int
ensureOpen
int
count
size
for
forControl
int
i
i
size
i
block
SegmentInfo
si
info
i
count
docCount
return
count
int
maxFieldLength
DEFAULT_MAX_FIELD_LENGTH
addDocument
doc
Document
addDocument
doc
analyzer
addDocument
doc
Document
analyzer
Analyzer
ensureOpen
SegmentInfo
newSegmentInfo
buildSingleDocSegment
doc
analyzer
synchronized
addElement
newSegmentInfo
maybeFlushRamSegments
buildSingleDocSegment
SegmentInfo
doc
Document
analyzer
Analyzer
DocumentWriter
dw
DocumentWriter
ramDirectory
analyzer
setInfoStream
infoStream
String
segmentName
newRamSegmentName
addDocument
segmentName
doc
SegmentInfo
si
SegmentInfo
segmentName
ramDirectory
setNumFields
getNumFields
return
si
deleteDocuments
term
Term
ensureOpen
bufferDeleteTerm
term
maybeFlushRamSegments
deleteDocuments
terms
Term
ensureOpen
for
forControl
int
i
i
length
i
block
bufferDeleteTerm
terms
i
maybeFlushRamSegments
updateDocument
term
Term
doc
Document
ensureOpen
updateDocument
term
doc
getAnalyzer
updateDocument
term
Term
doc
Document
analyzer
Analyzer
ensureOpen
SegmentInfo
newSegmentInfo
buildSingleDocSegment
doc
analyzer
synchronized
bufferDeleteTerm
term
addElement
newSegmentInfo
maybeFlushRamSegments
newRamSegmentName
String
return
toString
counter
MAX_RADIX
getSegmentCount
int
return
size
getRamSegmentCount
int
return
size
getDocCount
int
i
int
if
i
i
size
block
return
info
docCount
i
block
return
newSegmentName
String
return
toString
counter
MAX_RADIX
int
mergeFactor
DEFAULT_MERGE_FACTOR
int
minMergeDocs
DEFAULT_MAX_BUFFERED_DOCS
int
maxMergeDocs
DEFAULT_MAX_MERGE_DOCS
PrintStream
infoStream
PrintStream
defaultInfoStream
optimize
ensureOpen
flushRamSegments
while
size
size
hasDeletions
info
hasSeparateNorms
info
info
dir
directory
useCompoundFile
usesCompoundFile
info
block
int
minSegment
size
mergeFactor
mergeSegments
segmentInfos
minSegment
minSegment
size
startTransaction
localRollbackSegmentInfos
SegmentInfos
clone
localAutoCommit
autoCommit
if
localAutoCommit
block
flushRamSegments
autoCommit
incRef
segmentInfos
rollbackTransaction
autoCommit
localAutoCommit
clear
addAll
localRollbackSegmentInfos
localRollbackSegmentInfos
checkpoint
segmentInfos
if
autoCommit
decRef
segmentInfos
refresh
commitTransaction
autoCommit
localAutoCommit
boolean
success
try
checkpoint
success
if
success
block
rollbackTransaction
if
autoCommit
decRef
localRollbackSegmentInfos
localRollbackSegmentInfos
checkpoint
segmentInfos
autoCommit
abort
ensureOpen
if
autoCommit
block
clear
addAll
rollbackSegmentInfos
checkpoint
segmentInfos
refresh
ramSegmentInfos
SegmentInfos
clear
numBufferedDeleteTerms
commitPending
close
block
throw
IllegalStateException
checkpoint
if
autoCommit
block
write
directory
block
commitPending
addIndexes
dirs
Directory
ensureOpen
optimize
int
start
size
boolean
success
startTransaction
try
for
forControl
int
i
i
length
i
block
SegmentInfos
sis
SegmentInfos
read
dirs
i
for
forControl
int
j
j
size
j
block
addElement
info
j
while
size
start
mergeFactor
block
for
forControl
int
base
start
base
size
base
block
int
end
min
size
base
mergeFactor
if
end
base
block
mergeSegments
segmentInfos
base
end
success
if
success
block
commitTransaction
block
rollbackTransaction
optimize
addIndexesNoOptimize
dirs
Directory
ensureOpen
flushRamSegments
int
startUpperBound
minMergeDocs
boolean
success
startTransaction
try
for
forControl
int
i
i
length
i
block
if
directory
dirs
i
block
throw
IllegalArgumentException
SegmentInfos
sis
SegmentInfos
read
dirs
i
for
forControl
int
j
j
size
j
block
SegmentInfo
info
info
j
addElement
info
while
startUpperBound
docCount
block
startUpperBound
mergeFactor
if
startUpperBound
maxMergeDocs
block
throw
IllegalArgumentException
maybeMergeSegments
startUpperBound
int
segmentCount
size
int
numTailSegments
while
numTailSegments
segmentCount
startUpperBound
info
docCount
segmentCount
numTailSegments
block
numTailSegments
if
numTailSegments
block
success
return
if
checkNonDecreasingLevels
segmentCount
numTailSegments
block
int
numSegmentsToCopy
while
numSegmentsToCopy
segmentCount
directory
info
dir
segmentCount
numSegmentsToCopy
block
numSegmentsToCopy
if
numSegmentsToCopy
block
success
return
for
forControl
int
i
segmentCount
numSegmentsToCopy
i
segmentCount
i
block
mergeSegments
segmentInfos
i
i
if
checkNonDecreasingLevels
segmentCount
numSegmentsToCopy
block
success
return
mergeSegments
segmentInfos
segmentCount
numTailSegments
segmentCount
if
info
docCount
size
startUpperBound
block
maybeMergeSegments
startUpperBound
mergeFactor
success
if
success
block
commitTransaction
block
rollbackTransaction
addIndexes
readers
IndexReader
ensureOpen
optimize
String
mergedName
newSegmentName
SegmentMerger
merger
SegmentMerger
mergedName
SegmentInfo
info
IndexReader
sReader
try
if
size
block
sReader
get
info
add
sReader
for
forControl
int
i
i
length
i
add
readers
i
boolean
success
startTransaction
try
int
docCount
merge
if
sReader
block
close
sReader
setSize
info
SegmentInfo
mergedName
docCount
directory
addElement
info
success
if
success
block
rollbackTransaction
block
commitTransaction
if
sReader
block
close
if
useCompoundFile
block
boolean
success
startTransaction
try
createCompoundFile
mergedName
setUseCompoundFile
if
success
block
rollbackTransaction
block
commitTransaction
doAfterFlush
maybeFlushRamSegments
if
size
minMergeDocs
numBufferedDeleteTerms
maxBufferedDeleteTerms
block
flushRamSegments
flushRamSegments
flushRamSegments
flushRamSegments
triggerMerge
boolean
if
size
size
block
mergeSegments
ramSegmentInfos
size
if
triggerMerge
maybeMergeSegments
minMergeDocs
flush
ensureOpen
flushRamSegments
ramSizeInBytes
long
ensureOpen
return
sizeInBytes
numRamDocs
int
ensureOpen
return
size
maybeMergeSegments
startUpperBound
int
long
lowerBound
long
upperBound
startUpperBound
while
upperBound
maxMergeDocs
block
int
minSegment
size
int
maxSegment
while
minSegment
block
SegmentInfo
si
info
minSegment
if
maxSegment
docCount
lowerBound
docCount
upperBound
block
maxSegment
minSegment
if
docCount
upperBound
block
break
minSegment
maxSegment
int
numSegments
maxSegment
minSegment
if
numSegments
mergeFactor
block
break
block
boolean
exceedsUpperLimit
while
numSegments
mergeFactor
block
int
docCount
mergeSegments
segmentInfos
minSegment
minSegment
mergeFactor
numSegments
mergeFactor
if
docCount
upperBound
block
minSegment
exceedsUpperLimit
block
numSegments
if
exceedsUpperLimit
block
break
lowerBound
upperBound
upperBound
mergeFactor
mergeSegments
int
sourceSegments
SegmentInfos
minSegment
int
end
int
boolean
doMerge
end
String
mergedName
newSegmentName
SegmentMerger
merger
List
ramSegmentsToDelete
ArrayList
SegmentInfo
newSegment
int
mergedDocCount
boolean
anyDeletes
size
try
if
doMerge
block
if
infoStream
print
merger
SegmentMerger
mergedName
for
forControl
int
i
minSegment
i
end
i
block
SegmentInfo
si
info
i
if
infoStream
print
name
docCount
IndexReader
reader
get
si
MERGE_READ_BUFFER_SIZE
add
reader
if
directory
ramDirectory
block
add
si
SegmentInfos
rollback
boolean
success
try
if
doMerge
block
mergedDocCount
merge
if
infoStream
block
println
mergedName
mergedDocCount
newSegment
SegmentInfo
mergedName
mergedDocCount
directory
if
sourceSegments
ramSegmentInfos
anyDeletes
block
rollback
SegmentInfos
clone
if
doMerge
block
if
sourceSegments
ramSegmentInfos
block
addElement
newSegment
block
for
forControl
int
i
end
i
minSegment
i
remove
i
set
minSegment
newSegment
if
sourceSegments
ramSegmentInfos
block
maybeApplyDeletes
doMerge
doAfterFlush
checkpoint
success
if
success
block
if
sourceSegments
ramSegmentInfos
block
removeAllElements
block
if
sourceSegments
ramSegmentInfos
anyDeletes
block
if
newSegment
size
info
size
newSegment
block
remove
size
if
rollback
block
clear
addAll
rollback
refresh
if
doMerge
closeReaders
deleteDirect
ramDirectory
ramSegmentsToDelete
checkpoint
segmentInfos
autoCommit
if
useCompoundFile
doMerge
block
boolean
success
try
createCompoundFile
mergedName
setUseCompoundFile
checkpoint
success
if
success
block
setUseCompoundFile
refresh
checkpoint
segmentInfos
autoCommit
return
mergedDocCount
maybeApplyDeletes
doMerge
boolean
if
size
block
if
infoStream
println
numBufferedDeleteTerms
size
if
doMerge
block
IndexReader
reader
try
reader
get
info
size
applyDeletesSelectively
bufferedDeleteTerms
reader
if
reader
block
try
doCommit
doClose
int
infosEnd
size
if
doMerge
block
infosEnd
for
forControl
int
i
i
infosEnd
i
block
IndexReader
reader
try
reader
get
info
i
applyDeletes
bufferedDeleteTerms
reader
if
reader
block
try
doCommit
doClose
clear
numBufferedDeleteTerms
checkNonDecreasingLevels
boolean
start
int
int
lowerBound
int
upperBound
minMergeDocs
for
forControl
int
i
size
i
start
i
block
int
docCount
info
docCount
i
if
docCount
lowerBound
block
return
while
docCount
upperBound
block
lowerBound
upperBound
upperBound
mergeFactor
return
getBufferedDeleteTermsSize
int
return
size
getNumBufferedDeleteTerms
int
return
numBufferedDeleteTerms
Num
int
num
Num
num
int
num
num
getNum
int
return
num
setNum
num
int
num
num
bufferDeleteTerm
term
Term
Num
num
Num
get
term
if
num
block
put
term
Num
size
block
setNum
size
numBufferedDeleteTerms
applyDeletesSelectively
deleteTerms
HashMap
reader
IndexReader
Iterator
iter
entrySet
iterator
while
hasNext
block
Entry
entry
Entry
next
Term
term
Term
getKey
TermDocs
docs
termDocs
term
if
docs
block
int
num
Num
getValue
try
while
next
block
int
doc
doc
if
doc
num
block
break
deleteDocument
doc
close
applyDeletes
deleteTerms
HashMap
reader
IndexReader
Iterator
iter
entrySet
iterator
while
hasNext
block
Entry
entry
Entry
next
deleteDocuments
Term
getKey
