SegmentReader
String
segment
SegmentInfo
si
FieldInfos
fieldInfos
FieldsReader
fieldsReader
TermInfosReader
tis
TermVectorsReader
termVectorsReaderOrig
ThreadLocal
termVectorsLocal
ThreadLocal
BitVector
deletedDocs
boolean
deletedDocsDirty
boolean
normsDirty
boolean
undeleteAll
boolean
rollbackDeletedDocsDirty
boolean
rollbackNormsDirty
boolean
rollbackUndeleteAll
IndexInput
freqStream
IndexInput
proxStream
IndexInput
singleNormStream
CompoundFileReader
cfsReader
Norm
Norm
in
IndexInput
number
int
normSeek
long
in
in
number
number
normSeek
normSeek
IndexInput
in
byte
bytes
boolean
dirty
int
number
long
normSeek
boolean
rollbackDirty
reWrite
si
SegmentInfo
advanceNormGen
number
IndexOutput
out
directory
createOutput
getNormFileName
number
try
writeBytes
bytes
maxDoc
close
dirty
close
if
in
in
singleNormStream
block
close
in
Hashtable
norms
Hashtable
Class
IMPL
try
String
name
getProperty
getName
SegmentReader
IMPL
forName
name
catchClause
e
throw
RuntimeException
e
e
catchClause
se
try
IMPL
forName
getName
SegmentReader
catchClause
e
throw
RuntimeException
e
e
SegmentReader
get
SegmentReader
si
SegmentInfo
return
get
dir
si
BUFFER_SIZE
get
SegmentReader
si
SegmentInfo
readBufferSize
int
return
get
dir
si
readBufferSize
get
SegmentReader
sis
SegmentInfos
si
SegmentInfo
closeDir
boolean
return
get
dir
si
sis
closeDir
BUFFER_SIZE
get
SegmentReader
dir
Directory
si
SegmentInfo
sis
SegmentInfos
closeDir
boolean
ownDir
boolean
readBufferSize
int
SegmentReader
instance
try
instance
SegmentReader
newInstance
catchClause
e
throw
RuntimeException
e
e
init
dir
sis
closeDir
ownDir
initialize
si
readBufferSize
return
instance
initialize
si
SegmentInfo
readBufferSize
int
segment
name
si
si
boolean
success
try
Directory
cfsDir
directory
if
getUseCompoundFile
block
cfsReader
CompoundFileReader
directory
segment
readBufferSize
cfsDir
cfsReader
fieldInfos
FieldInfos
cfsDir
segment
fieldsReader
FieldsReader
cfsDir
segment
fieldInfos
readBufferSize
if
size
docCount
block
throw
CorruptIndexException
name
size
docCount
tis
TermInfosReader
cfsDir
segment
fieldInfos
readBufferSize
if
hasDeletions
si
block
deletedDocs
BitVector
directory
getDelFileName
if
count
maxDoc
block
throw
CorruptIndexException
count
maxDoc
name
freqStream
openInput
segment
readBufferSize
proxStream
openInput
segment
readBufferSize
openNorms
cfsDir
readBufferSize
if
hasVectors
block
termVectorsReaderOrig
TermVectorsReader
cfsDir
segment
fieldInfos
readBufferSize
success
if
success
block
doClose
doCommit
if
deletedDocsDirty
block
advanceDelGen
write
directory
getDelFileName
if
undeleteAll
hasDeletions
block
clearDelGen
if
normsDirty
block
setNumFields
size
Enumeration
values
elements
while
hasMoreElements
block
Norm
norm
Norm
nextElement
if
dirty
block
reWrite
si
deletedDocsDirty
normsDirty
undeleteAll
doClose
if
fieldsReader
block
close
if
tis
block
close
if
freqStream
close
if
proxStream
close
closeNorms
if
termVectorsReaderOrig
close
if
cfsReader
close
hasDeletions
boolean
si
SegmentInfo
return
hasDeletions
hasDeletions
boolean
return
deletedDocs
usesCompoundFile
boolean
si
SegmentInfo
return
getUseCompoundFile
hasSeparateNorms
boolean
si
SegmentInfo
return
hasSeparateNorms
doDelete
docNum
int
if
deletedDocs
deletedDocs
BitVector
maxDoc
deletedDocsDirty
undeleteAll
set
docNum
doUndeleteAll
deletedDocs
deletedDocsDirty
undeleteAll
files
Vector
return
Vector
files
terms
TermEnum
ensureOpen
return
terms
terms
TermEnum
t
Term
ensureOpen
return
terms
t
document
Document
n
int
fieldSelector
FieldSelector
ensureOpen
if
isDeleted
n
throw
IllegalArgumentException
return
doc
n
fieldSelector
isDeleted
boolean
n
int
return
deletedDocs
get
n
termDocs
TermDocs
ensureOpen
return
SegmentTermDocs
termPositions
TermPositions
ensureOpen
return
SegmentTermPositions
docFreq
int
t
Term
ensureOpen
TermInfo
ti
get
t
if
ti
return
docFreq
return
numDocs
int
int
n
maxDoc
if
deletedDocs
n
count
return
n
maxDoc
int
return
docCount
getFieldNames
Collection
fieldOption
IndexReader
FieldOption
ensureOpen
Set
fieldSet
HashSet
for
forControl
int
i
i
size
i
block
FieldInfo
fi
fieldInfo
i
if
fieldOption
ALL
block
add
name
if
isIndexed
fieldOption
UNINDEXED
block
add
name
if
storePayloads
fieldOption
STORES_PAYLOADS
block
add
name
if
isIndexed
fieldOption
INDEXED
block
add
name
if
isIndexed
storeTermVector
fieldOption
INDEXED_NO_TERMVECTOR
block
add
name
if
storeTermVector
storePositionWithTermVector
storeOffsetWithTermVector
fieldOption
TERMVECTOR
block
add
name
if
isIndexed
storeTermVector
fieldOption
INDEXED_WITH_TERMVECTOR
block
add
name
if
storePositionWithTermVector
storeOffsetWithTermVector
fieldOption
TERMVECTOR_WITH_POSITION
block
add
name
if
storeOffsetWithTermVector
storePositionWithTermVector
fieldOption
TERMVECTOR_WITH_OFFSET
block
add
name
if
storeOffsetWithTermVector
storePositionWithTermVector
fieldOption
TERMVECTOR_WITH_POSITION_OFFSET
block
add
name
return
fieldSet
hasNorms
boolean
field
String
ensureOpen
return
containsKey
field
createFakeNorms
byte
size
int
byte
ones
byte
size
fill
ones
encodeNorm
return
ones
byte
ones
fakeNorms
byte
if
ones
ones
createFakeNorms
maxDoc
return
ones
getNorms
byte
field
String
Norm
norm
Norm
get
field
if
norm
return
if
bytes
block
byte
bytes
byte
maxDoc
norms
field
bytes
bytes
bytes
close
return
bytes
norms
byte
field
String
ensureOpen
byte
bytes
getNorms
field
if
bytes
bytes
fakeNorms
return
bytes
doSetNorm
doc
int
field
String
value
byte
Norm
norm
Norm
get
field
if
norm
return
dirty
normsDirty
norms
doc
field
value
norms
field
String
bytes
byte
offset
int
ensureOpen
Norm
norm
Norm
get
field
if
norm
block
arraycopy
fakeNorms
bytes
offset
maxDoc
return
if
bytes
block
arraycopy
bytes
bytes
offset
maxDoc
return
seek
normSeek
readBytes
bytes
offset
maxDoc
openNorms
cfsDir
Directory
readBufferSize
int
long
nextNormSeek
length
int
maxDoc
maxDoc
for
forControl
int
i
i
size
i
block
FieldInfo
fi
fieldInfo
i
if
isIndexed
omitNorms
block
Directory
d
directory
String
fileName
getNormFileName
number
if
hasSeparateNorms
number
block
d
cfsDir
boolean
singleNormFile
endsWith
NORMS_EXTENSION
IndexInput
normInput
long
normSeek
if
singleNormFile
block
normSeek
nextNormSeek
if
singleNormStream
block
singleNormStream
openInput
fileName
readBufferSize
normInput
singleNormStream
block
normSeek
normInput
openInput
fileName
put
name
Norm
normInput
number
normSeek
nextNormSeek
maxDoc
closeNorms
synchronized
norms
Enumeration
enumerator
elements
while
hasMoreElements
block
Norm
norm
Norm
nextElement
close
if
singleNormStream
block
close
singleNormStream
getTermVectorsReader
TermVectorsReader
TermVectorsReader
tvReader
TermVectorsReader
get
if
tvReader
block
tvReader
TermVectorsReader
clone
set
tvReader
return
tvReader
getTermFreqVector
TermFreqVector
docNumber
int
field
String
ensureOpen
FieldInfo
fi
fieldInfo
field
if
fi
storeTermVector
termVectorsReaderOrig
return
TermVectorsReader
termVectorsReader
getTermVectorsReader
if
termVectorsReader
return
return
get
docNumber
field
getTermFreqVectors
TermFreqVector
docNumber
int
ensureOpen
if
termVectorsReaderOrig
return
TermVectorsReader
termVectorsReader
getTermVectorsReader
if
termVectorsReader
return
return
get
docNumber
fieldInfos
FieldInfos
return
fieldInfos
getSegmentName
String
return
segment
setSegmentInfo
info
SegmentInfo
si
info
startCommit
startCommit
rollbackDeletedDocsDirty
deletedDocsDirty
rollbackNormsDirty
normsDirty
rollbackUndeleteAll
undeleteAll
Enumeration
values
elements
while
hasMoreElements
block
Norm
norm
Norm
nextElement
rollbackDirty
dirty
rollbackCommit
rollbackCommit
deletedDocsDirty
rollbackDeletedDocsDirty
normsDirty
rollbackNormsDirty
undeleteAll
rollbackUndeleteAll
Enumeration
values
elements
while
hasMoreElements
block
Norm
norm
Norm
nextElement
dirty
rollbackDirty
IndexReader
