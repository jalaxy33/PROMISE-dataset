FieldsReader
FieldInfos
fieldInfos
IndexInput
cloneableFieldsStream
IndexInput
fieldsStream
IndexInput
indexStream
int
size
boolean
closed
ThreadLocal
fieldsStreamTL
ThreadLocal
FieldsReader
d
Directory
segment
String
fn
FieldInfos
d
segment
fn
BUFFER_SIZE
FieldsReader
d
Directory
segment
String
fn
FieldInfos
readBufferSize
int
fieldInfos
fn
cloneableFieldsStream
openInput
segment
readBufferSize
fieldsStream
IndexInput
clone
indexStream
openInput
segment
readBufferSize
size
int
length
ensureOpen
if
closed
block
throw
AlreadyClosedException
close
if
closed
block
close
close
close
IndexInput
localFieldsStream
IndexInput
get
if
localFieldsStream
block
close
set
closed
size
int
return
size
doc
Document
n
int
fieldSelector
FieldSelector
seek
n
long
position
readLong
seek
position
Document
doc
Document
int
numFields
readVInt
for
forControl
int
i
i
numFields
i
block
int
fieldNumber
readVInt
FieldInfo
fi
fieldInfo
fieldNumber
FieldSelectorResult
acceptField
fieldSelector
LOAD
accept
name
byte
bits
readByte
boolean
compressed
bits
FIELD_IS_COMPRESSED
boolean
tokenize
bits
FIELD_IS_TOKENIZED
boolean
binary
bits
FIELD_IS_BINARY
if
equals
LOAD
block
addField
doc
fi
binary
compressed
tokenize
if
equals
LOAD_FOR_MERGE
block
addFieldForMerge
doc
fi
binary
compressed
tokenize
if
equals
LOAD_AND_BREAK
block
addField
doc
fi
binary
compressed
tokenize
break
if
equals
LAZY_LOAD
block
addFieldLazy
doc
fi
binary
compressed
tokenize
if
equals
SIZE
block
skipField
binary
compressed
addFieldSize
doc
fi
binary
compressed
if
equals
SIZE_AND_BREAK
block
addFieldSize
doc
fi
binary
compressed
break
block
skipField
binary
compressed
return
doc
skipField
binary
boolean
compressed
boolean
skipField
binary
compressed
readVInt
skipField
binary
boolean
compressed
boolean
toRead
int
if
binary
compressed
block
long
pointer
getFilePointer
seek
pointer
toRead
block
skipChars
toRead
addFieldLazy
doc
Document
fi
FieldInfo
binary
boolean
compressed
boolean
tokenize
boolean
if
binary
block
int
toRead
readVInt
long
pointer
getFilePointer
if
compressed
block
add
LazyField
name
COMPRESS
toRead
pointer
block
add
LazyField
name
YES
toRead
pointer
seek
pointer
toRead
block
Field
Store
store
YES
Field
Index
index
getIndexType
fi
tokenize
Field
TermVector
termVector
getTermVectorType
fi
Fieldable
f
if
compressed
block
store
COMPRESS
int
toRead
readVInt
long
pointer
getFilePointer
f
LazyField
name
store
toRead
pointer
seek
pointer
toRead
setOmitNorms
omitNorms
block
int
length
readVInt
long
pointer
getFilePointer
skipChars
length
f
LazyField
name
store
index
termVector
length
pointer
setOmitNorms
omitNorms
add
f
addFieldForMerge
doc
Document
fi
FieldInfo
binary
boolean
compressed
boolean
tokenize
boolean
Object
data
if
binary
compressed
block
int
toRead
readVInt
byte
b
byte
toRead
readBytes
b
length
data
b
block
data
readString
add
FieldForMerge
data
fi
binary
compressed
tokenize
addField
doc
Document
fi
FieldInfo
binary
boolean
compressed
boolean
tokenize
boolean
if
binary
block
int
toRead
readVInt
byte
b
byte
toRead
readBytes
b
length
if
compressed
add
Field
name
uncompress
b
COMPRESS
add
Field
name
b
YES
block
Field
Store
store
YES
Field
Index
index
getIndexType
fi
tokenize
Field
TermVector
termVector
getTermVectorType
fi
Fieldable
f
if
compressed
block
store
COMPRESS
int
toRead
readVInt
byte
b
byte
toRead
readBytes
b
length
f
Field
name
String
uncompress
b
store
index
termVector
setOmitNorms
omitNorms
block
f
Field
name
readString
store
index
termVector
setOmitNorms
omitNorms
add
f
addFieldSize
int
doc
Document
fi
FieldInfo
binary
boolean
compressed
boolean
int
size
readVInt
bytesize
binary
compressed
size
size
byte
sizebytes
byte
sizebytes
byte
bytesize
sizebytes
byte
bytesize
sizebytes
byte
bytesize
sizebytes
byte
bytesize
add
Field
name
sizebytes
YES
return
size
getTermVectorType
Field
TermVector
fi
FieldInfo
Field
TermVector
termVector
if
storeTermVector
block
if
storeOffsetWithTermVector
block
if
storePositionWithTermVector
block
termVector
WITH_POSITIONS_OFFSETS
block
termVector
WITH_OFFSETS
if
storePositionWithTermVector
block
termVector
WITH_POSITIONS
block
termVector
YES
block
termVector
NO
return
termVector
getIndexType
Field
Index
fi
FieldInfo
tokenize
boolean
Field
Index
index
if
isIndexed
tokenize
index
TOKENIZED
if
isIndexed
tokenize
index
UN_TOKENIZED
index
NO
return
index
LazyField
int
toRead
long
pointer
LazyField
name
String
store
Field
Store
toRead
int
pointer
long
name
store
NO
NO
toRead
toRead
pointer
pointer
lazy
LazyField
name
String
store
Field
Store
index
Field
Index
termVector
Field
TermVector
toRead
int
pointer
long
name
store
index
termVector
toRead
toRead
pointer
pointer
lazy
getFieldStream
IndexInput
IndexInput
localFieldsStream
IndexInput
get
if
localFieldsStream
block
localFieldsStream
IndexInput
clone
set
localFieldsStream
return
localFieldsStream
binaryValue
byte
ensureOpen
if
fieldsData
block
byte
b
byte
toRead
IndexInput
localFieldsStream
getFieldStream
try
seek
pointer
readBytes
b
length
if
isCompressed
block
fieldsData
uncompress
b
block
fieldsData
b
catchClause
e
throw
FieldReaderException
e
return
fieldsData
byte
byte
fieldsData
readerValue
Reader
ensureOpen
return
fieldsData
Reader
Reader
fieldsData
tokenStreamValue
TokenStream
ensureOpen
return
fieldsData
TokenStream
TokenStream
fieldsData
stringValue
String
ensureOpen
if
fieldsData
block
IndexInput
localFieldsStream
getFieldStream
try
seek
pointer
if
isCompressed
block
byte
b
byte
toRead
readBytes
b
length
fieldsData
String
uncompress
b
block
char
chars
char
toRead
readChars
chars
toRead
fieldsData
String
chars
catchClause
e
throw
FieldReaderException
e
return
fieldsData
String
String
fieldsData
getPointer
long
ensureOpen
return
pointer
setPointer
pointer
long
ensureOpen
pointer
pointer
getToRead
int
ensureOpen
return
toRead
setToRead
toRead
int
ensureOpen
toRead
toRead
AbstractField
Fieldable
uncompress
byte
input
byte
Inflater
decompressor
Inflater
setInput
input
ByteArrayOutputStream
bos
ByteArrayOutputStream
length
byte
buf
byte
while
finished
block
try
int
count
inflate
buf
write
buf
count
catchClause
e
CorruptIndexException
newException
CorruptIndexException
toString
initCause
e
throw
newException
end
return
toByteArray
FieldForMerge
stringValue
String
return
String
fieldsData
readerValue
Reader
return
binaryValue
byte
return
byte
fieldsData
tokenStreamValue
TokenStream
return
FieldForMerge
value
Object
fi
FieldInfo
binary
boolean
compressed
boolean
tokenize
boolean
isStored
fieldsData
value
isCompressed
compressed
isBinary
binary
isTokenized
tokenize
name
intern
isIndexed
isIndexed
omitNorms
omitNorms
storeOffsetWithTermVector
storeOffsetWithTermVector
storePositionWithTermVector
storePositionWithTermVector
storeTermVector
storeTermVector
AbstractField
