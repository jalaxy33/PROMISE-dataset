PropertyInjector
String
SETTER_PREFIX
Class
targetClass
Object
target
Map
String
Method
requieredProperties
HashMap
String
Method
Map
String
Method
optionalProperties
HashMap
String
Method
setTargetObject
o
Object
if
o
throw
IllegalArgumentException
target
o
targetClass
getClass
try
registerProperties
targetClass
catchClause
e
throw
InjectionException
getMessage
e
if
requieredProperties
isEmpty
optionalProperties
isEmpty
throw
InjectionException
getClass
getName
getRequiredSize
int
return
requieredProperties
size
getOptionalSize
int
return
optionalProperties
size
registerProperties
clazz
Class
if
clazz
return
Method
methodes
getMethods
for
forControl
int
i
i
length
i
block
if
methodes
i
getName
startsWith
SETTER_PREFIX
block
String
methodName
methodes
i
getName
String
fieldName
getFieldName
methodName
if
methodes
i
getAnnotation
Requiered
requieredProperties
put
fieldName
methodes
i
optionalProperties
put
fieldName
methodes
i
registerProperties
getSuperclass
getFieldName
String
setterMethodName
String
String
retVal
substring
String
firstLetter
substring
retVal
replaceFirst
firstLetter
toLowerCase
return
retVal
injectProperties
bean
ComponentConfiguration
if
bean
throw
IllegalArgumentException
if
target
throw
IllegalStateException
Set
Entry
String
Method
requiered
requieredProperties
entrySet
for
Entry
String
Method
entry
requiered
block
if
contains
getKey
throw
InjectionException
getKey
targetClass
getName
populate
bean
entry
Set
Entry
String
Method
optinal
optionalProperties
entrySet
for
Entry
String
Method
entry
optinal
block
if
contains
getKey
populate
bean
entry
populate
bean
ComponentConfiguration
entry
Entry
String
Method
String
value
get
getKey
Method
m
getValue
Class
parameterTypes
getParameterTypes
if
length
throw
InjectionException
getName
Object
parameter
try
parameter
createObject
value
parameterTypes
catchClause
e
throw
InjectionException
getName
targetClass
getName
e
Object
parameters
parameter
try
invoke
target
parameters
catchClause
e
throw
InjectionException
getClass
getName
getMessage
e
createObject
Object
s
String
clazz
Class
try
if
clazz
Class
return
forName
s
if
isPrimitive
clazz
getPrimitiveWrapper
clazz
boolean
defaultConst
boolean
stringConst
Constructor
constructors
getConstructors
if
length
defaultConst
for
forControl
int
i
i
length
i
block
if
constructors
i
getParameterTypes
length
block
defaultConst
continue
if
constructors
i
getParameterTypes
length
constructors
i
getParameterTypes
equals
String
stringConst
if
stringConst
block
Constructor
constructor
getConstructor
Class
String
return
newInstance
Object
s
if
defaultConst
return
forName
newInstance
s
throw
InjectionException
getName
catchClause
e
throw
InjectionException
e
clear
target
targetClass
optionalProperties
clear
requieredProperties
clear
