RecoverController
Log
LOG
getLog
RecoverController
File
recoverDirectory
String
FILE_SUFFIX
File
currentRecoverFile
RecoverWriter
writer
Writer
fileWriter
BufferedReader
fileReader
RecoverReader
reader
Lock
lock
ReentrantLock
boolean
recover
boolean
keepRecoverFiles
RecoverController
recoverDirectory
File
recover
boolean
keepRecoverFiles
boolean
if
recoverDirectory
throw
IllegalArgumentException
if
exists
mkdirs
if
isDirectory
throw
IllegalStateException
recoverDirectory
recover
recover
keepRecoverFiles
keepRecoverFiles
recoverDirectory
recoverDirectory
storageModified
wrapper
StorageEntryWrapper
if
recover
block
warn
return
lock
lock
try
writer
writeEntry
wrapper
fileWriter
catchClause
e
error
e
throw
RecoverException
e
lock
unlock
recoverEntries
modifier
StorageModifier
if
recover
block
warn
return
lock
lock
try
reader
RecoverReader
File
files
recoverDirectory
listFiles
for
forControl
int
i
i
length
i
block
if
files
i
isDirectory
block
try
info
files
i
fileReader
BufferedReader
FileReader
files
i
List
StorageEntryWrapper
entryList
reader
recoverEntries
fileReader
if
size
continue
storeEntries
entryList
modifier
fileReader
close
if
keepRecoverFiles
block
info
files
i
files
i
delete
catchClause
e
error
files
i
getName
getMessage
e
catchClause
e
error
files
i
getName
e
lock
unlock
storeEntries
entries
List
StorageEntryWrapper
modifier
StorageModifier
for
StorageEntryWrapper
wrapper
entries
block
if
getOperation
DELETE
deleteEntry
wrapper
if
getOperation
INSERT
insertEntry
wrapper
if
getOperation
UPDATE
updateEntry
wrapper
forceWrite
initialize
if
recover
return
String
filename
currentTimeMillis
FILE_SUFFIX
currentRecoverFile
File
recoverDirectory
filename
writer
RecoverWriter
fileWriter
BufferedWriter
FileWriter
currentRecoverFile
destroy
if
fileWriter
block
lock
lock
try
fileWriter
flush
fileWriter
close
if
keepRecoverFiles
currentRecoverFile
currentRecoverFile
delete
catchClause
e
throw
RecoverException
e
lock
unlock
isRecovering
boolean
return
recover
