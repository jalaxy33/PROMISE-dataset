MultiSegmentReader
SegmentReader
subReaders
int
starts
Map
normsCache
HashMap
int
maxDoc
int
numDocs
boolean
hasDeletions
MultiSegmentReader
directory
Directory
sis
SegmentInfos
closeDirectory
boolean
readOnly
boolean
directory
sis
closeDirectory
readOnly
SegmentReader
readers
SegmentReader
size
for
forControl
int
i
size
i
i
block
try
readers
i
get
readOnly
info
i
catchClause
e
for
forControl
i
i
size
i
block
try
readers
i
close
catchClause
ignore
throw
e
initialize
readers
MultiSegmentReader
directory
Directory
infos
SegmentInfos
closeDirectory
boolean
oldReaders
SegmentReader
oldStarts
int
oldNormsCache
Map
readOnly
boolean
directory
infos
closeDirectory
readOnly
Map
segmentReaders
HashMap
if
oldReaders
block
for
forControl
int
i
i
length
i
block
put
oldReaders
i
getSegmentName
Integer
i
SegmentReader
newReaders
SegmentReader
size
boolean
readerShared
boolean
size
for
forControl
int
i
size
i
i
block
Integer
oldReaderIndex
Integer
get
info
name
i
if
oldReaderIndex
block
newReaders
i
block
newReaders
i
oldReaders
intValue
boolean
success
try
SegmentReader
newReader
if
newReaders
i
info
getUseCompoundFile
i
newReaders
i
getSegmentInfo
getUseCompoundFile
block
newReader
get
readOnly
info
i
block
newReader
SegmentReader
newReaders
i
reopenSegment
info
i
if
newReader
newReaders
i
block
readerShared
i
incRef
block
readerShared
i
newReaders
i
newReader
success
if
success
block
for
forControl
i
i
size
i
block
if
newReaders
i
block
try
if
readerShared
i
block
newReaders
i
close
block
newReaders
i
decRef
catchClause
ignore
initialize
newReaders
if
oldNormsCache
block
Iterator
it
entrySet
iterator
while
hasNext
block
Map
Entry
entry
Map
Entry
next
String
field
String
getKey
if
hasNorms
field
block
continue
byte
oldBytes
byte
getValue
byte
bytes
byte
maxDoc
for
forControl
int
i
i
length
i
block
Integer
oldReaderIndex
Integer
get
subReaders
i
getSegmentName
if
oldReaderIndex
oldReaders
intValue
subReaders
i
oldReaders
intValue
norms
get
field
subReaders
i
norms
get
field
block
arraycopy
oldBytes
oldStarts
intValue
bytes
starts
i
starts
i
starts
i
block
subReaders
i
norms
field
bytes
starts
i
put
field
bytes
initialize
subReaders
SegmentReader
subReaders
subReaders
starts
int
length
for
forControl
int
i
i
length
i
block
starts
i
maxDoc
maxDoc
subReaders
i
maxDoc
if
subReaders
i
hasDeletions
hasDeletions
starts
length
maxDoc
doReopen
DirectoryIndexReader
infos
SegmentInfos
if
size
block
return
get
readOnly
infos
info
if
readOnly
block
return
ReadOnlyMultiSegmentReader
directory
infos
closeDirectory
subReaders
starts
normsCache
block
return
MultiSegmentReader
directory
infos
closeDirectory
subReaders
starts
normsCache
getTermFreqVectors
TermFreqVector
n
int
ensureOpen
int
i
readerIndex
n
return
subReaders
i
getTermFreqVectors
n
starts
i
getTermFreqVector
TermFreqVector
n
int
field
String
ensureOpen
int
i
readerIndex
n
return
subReaders
i
getTermFreqVector
n
starts
i
field
getTermFreqVector
docNumber
int
field
String
mapper
TermVectorMapper
ensureOpen
int
i
readerIndex
docNumber
subReaders
i
getTermFreqVector
docNumber
starts
i
field
mapper
getTermFreqVector
docNumber
int
mapper
TermVectorMapper
ensureOpen
int
i
readerIndex
docNumber
subReaders
i
getTermFreqVector
docNumber
starts
i
mapper
isOptimized
boolean
return
numDocs
int
if
numDocs
block
int
n
for
forControl
int
i
i
length
i
n
subReaders
i
numDocs
numDocs
n
return
numDocs
maxDoc
int
return
maxDoc
document
Document
n
int
fieldSelector
FieldSelector
ensureOpen
int
i
readerIndex
n
return
subReaders
i
document
n
starts
i
fieldSelector
isDeleted
boolean
n
int
int
i
readerIndex
n
return
subReaders
i
isDeleted
n
starts
i
hasDeletions
boolean
return
hasDeletions
doDelete
n
int
numDocs
int
i
readerIndex
n
subReaders
i
deleteDocument
n
starts
i
hasDeletions
doUndeleteAll
for
forControl
int
i
i
length
i
subReaders
i
undeleteAll
hasDeletions
numDocs
readerIndex
int
n
int
return
readerIndex
n
starts
subReaders
length
readerIndex
int
n
int
starts
int
numSubReaders
int
int
lo
int
hi
numSubReaders
while
hi
lo
block
int
mid
lo
hi
int
midValue
starts
mid
if
n
midValue
hi
mid
if
n
midValue
lo
mid
block
while
mid
numSubReaders
starts
mid
midValue
block
mid
return
mid
return
hi
hasNorms
boolean
field
String
ensureOpen
for
forControl
int
i
i
length
i
block
if
subReaders
i
hasNorms
field
return
return
byte
ones
fakeNorms
byte
if
ones
ones
createFakeNorms
maxDoc
return
ones
norms
byte
field
String
ensureOpen
byte
bytes
byte
get
field
if
bytes
return
bytes
if
hasNorms
field
return
fakeNorms
bytes
byte
maxDoc
for
forControl
int
i
i
length
i
subReaders
i
norms
field
bytes
starts
i
put
field
bytes
return
bytes
norms
field
String
result
byte
offset
int
ensureOpen
byte
bytes
byte
get
field
if
bytes
hasNorms
field
bytes
fakeNorms
if
bytes
arraycopy
bytes
result
offset
maxDoc
for
forControl
int
i
i
length
i
subReaders
i
norms
field
result
offset
starts
i
doSetNorm
n
int
field
String
value
byte
synchronized
normsCache
remove
field
int
i
readerIndex
n
subReaders
i
setNorm
n
starts
i
field
value
terms
TermEnum
ensureOpen
return
MultiTermEnum
subReaders
starts
terms
TermEnum
term
Term
ensureOpen
return
MultiTermEnum
subReaders
starts
term
docFreq
int
t
Term
ensureOpen
int
total
for
forControl
int
i
i
length
i
total
subReaders
i
docFreq
t
return
total
termDocs
TermDocs
ensureOpen
return
MultiTermDocs
subReaders
starts
termPositions
TermPositions
ensureOpen
return
MultiTermPositions
subReaders
starts
commitChanges
for
forControl
int
i
i
length
i
subReaders
i
commit
startCommit
startCommit
for
forControl
int
i
i
length
i
block
subReaders
i
startCommit
rollbackCommit
rollbackCommit
for
forControl
int
i
i
length
i
block
subReaders
i
rollbackCommit
doClose
for
forControl
int
i
i
length
i
subReaders
i
decRef
doClose
getFieldNames
Collection
fieldNames
IndexReader
FieldOption
ensureOpen
return
getFieldNames
fieldNames
subReaders
getFieldNames
Collection
fieldNames
IndexReader
FieldOption
subReaders
IndexReader
Set
fieldSet
HashSet
for
forControl
int
i
i
length
i
block
IndexReader
reader
subReaders
i
Collection
names
getFieldNames
fieldNames
addAll
names
return
fieldSet
getSubReaders
SegmentReader
return
subReaders
setTermInfosIndexDivisor
indexDivisor
int
for
forControl
int
i
i
length
i
subReaders
i
setTermInfosIndexDivisor
indexDivisor
getTermInfosIndexDivisor
int
if
length
return
subReaders
getTermInfosIndexDivisor
throw
IllegalStateException
MultiTermEnum
SegmentMergeQueue
queue
Term
term
int
docFreq
MultiTermEnum
readers
IndexReader
starts
int
t
Term
queue
SegmentMergeQueue
length
for
forControl
int
i
i
length
i
block
IndexReader
reader
readers
i
TermEnum
termEnum
if
t
block
termEnum
terms
t
termEnum
terms
SegmentMergeInfo
smi
SegmentMergeInfo
starts
i
termEnum
reader
if
t
next
term
put
smi
close
if
t
size
block
next
next
boolean
SegmentMergeInfo
top
SegmentMergeInfo
top
if
top
block
term
return
term
term
docFreq
while
top
compareTo
term
block
pop
docFreq
docFreq
if
next
put
top
close
top
SegmentMergeInfo
top
return
term
Term
return
term
docFreq
int
return
docFreq
close
close
TermEnum
MultiTermDocs
IndexReader
readers
int
starts
Term
term
int
base
int
pointer
TermDocs
readerTermDocs
TermDocs
current
MultiTermDocs
r
IndexReader
s
int
readers
r
starts
s
readerTermDocs
TermDocs
length
doc
int
return
base
doc
freq
int
return
freq
seek
term
Term
term
term
base
pointer
current
seek
termEnum
TermEnum
seek
term
next
boolean
for
forControl
block
if
current
next
block
return
if
pointer
length
block
base
starts
pointer
current
termDocs
pointer
block
return
read
int
docs
int
freqs
int
while
block
while
current
block
if
pointer
length
block
base
starts
pointer
current
termDocs
pointer
block
return
int
end
read
docs
freqs
if
end
block
current
block
int
b
base
for
forControl
int
i
i
end
i
docs
i
b
return
end
skipTo
boolean
target
int
for
forControl
block
if
current
skipTo
target
base
block
return
if
pointer
length
block
base
starts
pointer
current
termDocs
pointer
return
termDocs
TermDocs
i
int
if
term
return
TermDocs
result
readerTermDocs
i
if
result
result
readerTermDocs
i
termDocs
readers
i
seek
term
return
result
termDocs
TermDocs
reader
IndexReader
return
termDocs
close
for
forControl
int
i
i
length
i
block
if
readerTermDocs
i
readerTermDocs
i
close
TermDocs
MultiTermPositions
MultiTermPositions
r
IndexReader
s
int
r
s
termDocs
TermDocs
reader
IndexReader
return
TermDocs
termPositions
nextPosition
int
return
TermPositions
current
getPayloadLength
int
return
TermPositions
current
getPayload
byte
data
byte
offset
int
return
TermPositions
current
isPayloadAvailable
boolean
return
TermPositions
current
MultiTermDocs
TermPositions
DirectoryIndexReader
