OpenBitSet
long
bits
int
wlen
OpenBitSet
numBits
long
bits
long
bits2words
numBits
wlen
length
OpenBitSet
OpenBitSet
bits
long
numWords
int
bits
bits
wlen
numWords
iterator
DocIdSetIterator
return
OpenBitSetIterator
bits
wlen
capacity
long
return
length
size
long
return
capacity
isEmpty
boolean
return
cardinality
getBits
long
return
bits
setBits
bits
long
bits
bits
getNumWords
int
return
wlen
setNumWords
nWords
int
wlen
nWords
get
boolean
index
int
int
i
index
if
i
length
return
int
bit
index
long
bitmask
bit
return
bits
i
bitmask
fastGet
boolean
index
int
int
i
index
int
bit
index
long
bitmask
bit
return
bits
i
bitmask
get
boolean
index
long
int
i
int
index
if
i
length
return
int
bit
int
index
long
bitmask
bit
return
bits
i
bitmask
fastGet
boolean
index
long
int
i
int
index
int
bit
int
index
long
bitmask
bit
return
bits
i
bitmask
getBit
int
index
int
int
i
index
int
bit
index
return
int
bits
i
bit
set
index
long
int
wordNum
expandingWordNum
index
int
bit
int
index
long
bitmask
bit
bits
wordNum
bitmask
fastSet
index
int
int
wordNum
index
int
bit
index
long
bitmask
bit
bits
wordNum
bitmask
fastSet
index
long
int
wordNum
int
index
int
bit
int
index
long
bitmask
bit
bits
wordNum
bitmask
set
startIndex
long
endIndex
long
if
endIndex
startIndex
return
int
startWord
int
startIndex
int
endWord
expandingWordNum
endIndex
long
startmask
startIndex
long
endmask
endIndex
if
startWord
endWord
block
bits
startWord
startmask
endmask
return
bits
startWord
startmask
fill
bits
startWord
endWord
bits
endWord
endmask
expandingWordNum
int
index
long
int
wordNum
int
index
if
wordNum
wlen
block
ensureCapacity
index
wlen
wordNum
return
wordNum
fastClear
index
int
int
wordNum
index
int
bit
index
long
bitmask
bit
bits
wordNum
bitmask
fastClear
index
long
int
wordNum
int
index
int
bit
int
index
long
bitmask
bit
bits
wordNum
bitmask
clear
index
long
int
wordNum
int
index
if
wordNum
wlen
return
int
bit
int
index
long
bitmask
bit
bits
wordNum
bitmask
clear
startIndex
long
endIndex
long
if
endIndex
startIndex
return
int
startWord
int
startIndex
if
startWord
wlen
return
int
endWord
int
endIndex
long
startmask
startIndex
long
endmask
endIndex
startmask
startmask
endmask
endmask
if
startWord
endWord
block
bits
startWord
startmask
endmask
return
bits
startWord
startmask
int
middle
min
wlen
endWord
fill
bits
startWord
middle
if
endWord
wlen
block
bits
endWord
endmask
getAndSet
boolean
index
int
int
wordNum
index
int
bit
index
long
bitmask
bit
boolean
val
bits
wordNum
bitmask
bits
wordNum
bitmask
return
val
getAndSet
boolean
index
long
int
wordNum
int
index
int
bit
int
index
long
bitmask
bit
boolean
val
bits
wordNum
bitmask
bits
wordNum
bitmask
return
val
fastFlip
index
int
int
wordNum
index
int
bit
index
long
bitmask
bit
bits
wordNum
bitmask
fastFlip
index
long
int
wordNum
int
index
int
bit
int
index
long
bitmask
bit
bits
wordNum
bitmask
flip
index
long
int
wordNum
expandingWordNum
index
int
bit
int
index
long
bitmask
bit
bits
wordNum
bitmask
flipAndGet
boolean
index
int
int
wordNum
index
int
bit
index
long
bitmask
bit
bits
wordNum
bitmask
return
bits
wordNum
bitmask
flipAndGet
boolean
index
long
int
wordNum
int
index
int
bit
int
index
long
bitmask
bit
bits
wordNum
bitmask
return
bits
wordNum
bitmask
flip
startIndex
long
endIndex
long
if
endIndex
startIndex
return
int
oldlen
wlen
int
startWord
int
startIndex
int
endWord
expandingWordNum
endIndex
long
startmask
startIndex
long
endmask
endIndex
if
startWord
endWord
block
bits
startWord
startmask
endmask
return
bits
startWord
startmask
for
forControl
int
i
startWord
i
endWord
i
block
bits
i
bits
i
bits
endWord
endmask
cardinality
long
return
pop_array
bits
wlen
intersectionCount
long
a
OpenBitSet
b
OpenBitSet
return
pop_intersect
bits
bits
min
wlen
wlen
unionCount
long
a
OpenBitSet
b
OpenBitSet
long
tot
pop_union
bits
bits
min
wlen
wlen
if
wlen
wlen
block
tot
pop_array
bits
wlen
wlen
wlen
if
wlen
wlen
block
tot
pop_array
bits
wlen
wlen
wlen
return
tot
andNotCount
long
a
OpenBitSet
b
OpenBitSet
long
tot
pop_andnot
bits
bits
min
wlen
wlen
if
wlen
wlen
block
tot
pop_array
bits
wlen
wlen
wlen
return
tot
xorCount
long
a
OpenBitSet
b
OpenBitSet
long
tot
pop_xor
bits
bits
min
wlen
wlen
if
wlen
wlen
block
tot
pop_array
bits
wlen
wlen
wlen
if
wlen
wlen
block
tot
pop_array
bits
wlen
wlen
wlen
return
tot
nextSetBit
int
index
int
int
i
index
if
i
wlen
return
int
subIndex
index
long
word
bits
i
subIndex
if
word
block
return
i
subIndex
ntz
word
while
i
wlen
block
word
bits
i
if
word
return
i
ntz
word
return
nextSetBit
long
index
long
int
i
int
index
if
i
wlen
return
int
subIndex
int
index
long
word
bits
i
subIndex
if
word
block
return
long
i
subIndex
ntz
word
while
i
wlen
block
word
bits
i
if
word
return
long
i
ntz
word
return
clone
Object
try
OpenBitSet
obs
OpenBitSet
clone
bits
long
clone
return
obs
catchClause
e
throw
RuntimeException
e
intersect
other
OpenBitSet
int
newLen
min
wlen
wlen
long
thisArr
bits
long
otherArr
bits
int
pos
newLen
while
pos
block
thisArr
pos
otherArr
pos
if
wlen
newLen
block
fill
bits
newLen
wlen
wlen
newLen
union
other
OpenBitSet
int
newLen
max
wlen
wlen
ensureCapacityWords
newLen
long
thisArr
bits
long
otherArr
bits
int
pos
min
wlen
wlen
while
pos
block
thisArr
pos
otherArr
pos
if
wlen
newLen
block
arraycopy
otherArr
wlen
thisArr
wlen
newLen
wlen
wlen
newLen
remove
other
OpenBitSet
int
idx
min
wlen
wlen
long
thisArr
bits
long
otherArr
bits
while
idx
block
thisArr
idx
otherArr
idx
xor
other
OpenBitSet
int
newLen
max
wlen
wlen
ensureCapacityWords
newLen
long
thisArr
bits
long
otherArr
bits
int
pos
min
wlen
wlen
while
pos
block
thisArr
pos
otherArr
pos
if
wlen
newLen
block
arraycopy
otherArr
wlen
thisArr
wlen
newLen
wlen
wlen
newLen
and
other
OpenBitSet
intersect
other
or
other
OpenBitSet
union
other
andNot
other
OpenBitSet
remove
other
intersects
boolean
other
OpenBitSet
int
pos
min
wlen
wlen
long
thisArr
bits
long
otherArr
bits
while
pos
block
if
thisArr
pos
otherArr
pos
return
return
ensureCapacityWords
numWords
int
if
length
numWords
block
long
newBits
long
numWords
arraycopy
bits
newBits
wlen
bits
newBits
ensureCapacity
numBits
long
ensureCapacityWords
bits2words
numBits
trimTrailingZeros
int
idx
wlen
while
idx
bits
idx
idx
wlen
idx
bits2words
int
numBits
long
return
int
numBits
equals
boolean
o
Object
if
o
return
if
o
OpenBitSet
return
OpenBitSet
a
OpenBitSet
b
OpenBitSet
o
if
wlen
wlen
block
a
b
b
block
a
for
forControl
int
i
wlen
i
wlen
i
block
if
bits
i
return
for
forControl
int
i
wlen
i
i
block
if
bits
i
bits
i
return
return
hashCode
int
long
h
for
forControl
int
i
length
i
block
h
bits
i
h
h
h
return
int
h
h
DocIdSet
Cloneable
Serializable
