DocFieldProcessorPerThread
float
docBoost
int
fieldGen
DocFieldProcessor
docFieldProcessor
FieldInfos
fieldInfos
DocFieldConsumerPerThread
consumer
DocFieldProcessorPerField
fields
DocFieldProcessorPerField
int
fieldCount
DocFieldProcessorPerField
fieldHash
DocFieldProcessorPerField
int
hashMask
int
totalFieldCount
DocumentsWriter
DocState
docState
DocFieldProcessorPerThread
threadState
DocumentsWriterThreadState
docFieldProcessor
DocFieldProcessor
docState
docState
docFieldProcessor
docFieldProcessor
fieldInfos
fieldInfos
consumer
addThread
abort
for
forControl
int
i
i
length
i
block
DocFieldProcessorPerField
field
fieldHash
i
while
field
block
DocFieldProcessorPerField
next
next
abort
field
next
abort
fields
Collection
Collection
fields
HashSet
for
forControl
int
i
i
length
i
block
DocFieldProcessorPerField
field
fieldHash
i
while
field
block
add
consumer
field
next
assert
size
totalFieldCount
return
fields
trimFields
state
DocumentsWriter
FlushState
for
forControl
int
i
i
length
i
block
DocFieldProcessorPerField
perField
fieldHash
i
DocFieldProcessorPerField
lastPerField
while
perField
block
if
lastGen
block
if
lastPerField
fieldHash
i
next
next
next
if
infoStream
println
name
totalFieldCount
block
lastGen
lastPerField
perField
perField
next
rehash
int
newHashSize
int
length
assert
newHashSize
length
DocFieldProcessorPerField
newHashArray
DocFieldProcessorPerField
newHashSize
int
newHashMask
newHashSize
for
forControl
int
j
j
length
j
block
DocFieldProcessorPerField
fp0
fieldHash
j
while
fp0
block
int
hashPos2
hashCode
newHashMask
DocFieldProcessorPerField
nextFP0
next
next
newHashArray
hashPos2
newHashArray
hashPos2
fp0
fp0
nextFP0
fieldHash
newHashArray
hashMask
newHashMask
processDocument
DocumentsWriter
DocWriter
startDocument
Document
doc
doc
assert
testPoint
fieldCount
int
thisFieldGen
fieldGen
List
docFields
getFields
int
numDocFields
size
for
forControl
int
i
i
numDocFields
i
block
Fieldable
field
Fieldable
get
i
String
fieldName
name
int
hashPos
hashCode
hashMask
DocFieldProcessorPerField
fp
fieldHash
hashPos
while
fp
equals
fieldName
fp
next
if
fp
block
FieldInfo
fi
add
fieldName
isIndexed
isTermVectorStored
isStorePositionWithTermVector
isStoreOffsetWithTermVector
getOmitNorms
getOmitTf
fp
DocFieldProcessorPerField
fi
next
fieldHash
hashPos
fieldHash
hashPos
fp
totalFieldCount
if
totalFieldCount
length
rehash
update
isIndexed
isTermVectorStored
isStorePositionWithTermVector
isStoreOffsetWithTermVector
getOmitNorms
getOmitTf
if
thisFieldGen
lastGen
block
fieldCount
if
fieldCount
length
block
int
newSize
length
DocFieldProcessorPerField
newArray
DocFieldProcessorPerField
newSize
arraycopy
fields
newArray
fieldCount
fields
newArray
fields
fieldCount
fp
lastGen
thisFieldGen
if
fieldCount
length
block
Fieldable
newArray
Fieldable
length
arraycopy
fields
newArray
fieldCount
fields
newArray
fields
fieldCount
field
quickSort
fields
fieldCount
for
forControl
int
i
i
fieldCount
i
fields
i
consumer
processFields
fields
i
fields
fields
i
fieldCount
if
maxTermPrefix
infoStream
println
MAX_TERM_LENGTH
maxTermPrefix
return
finishDocument
quickSort
array
DocFieldProcessorPerField
lo
int
hi
int
if
lo
hi
return
if
hi
lo
block
if
array
lo
fieldInfo
name
compareTo
array
hi
fieldInfo
name
block
DocFieldProcessorPerField
tmp
array
lo
array
lo
array
hi
array
hi
tmp
return
int
mid
lo
hi
if
array
lo
fieldInfo
name
compareTo
array
mid
fieldInfo
name
block
DocFieldProcessorPerField
tmp
array
lo
array
lo
array
mid
array
mid
tmp
if
array
mid
fieldInfo
name
compareTo
array
hi
fieldInfo
name
block
DocFieldProcessorPerField
tmp
array
mid
array
mid
array
hi
array
hi
tmp
if
array
lo
fieldInfo
name
compareTo
array
mid
fieldInfo
name
block
DocFieldProcessorPerField
tmp2
array
lo
array
lo
array
mid
array
mid
tmp2
int
left
lo
int
right
hi
if
left
right
return
DocFieldProcessorPerField
partition
array
mid
for
forControl
block
while
array
right
fieldInfo
name
compareTo
name
right
while
left
right
array
left
fieldInfo
name
compareTo
name
left
if
left
right
block
DocFieldProcessorPerField
tmp
array
left
array
left
array
right
array
right
tmp
right
block
break
quickSort
array
lo
left
quickSort
array
left
hi
DocConsumerPerThread
