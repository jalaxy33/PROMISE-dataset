TermsHashPerField
TermsHashConsumerPerField
consumer
TermsHashPerField
nextPerField
TermsHashPerThread
perThread
DocumentsWriter
DocState
docState
DocInverter
FieldInvertState
fieldState
CharBlockPool
charPool
IntBlockPool
intPool
ByteBlockPool
bytePool
int
streamCount
int
numPostingInt
FieldInfo
fieldInfo
boolean
postingsCompacted
int
numPostings
int
postingsHashSize
int
postingsHashHalfSize
postingsHashSize
int
postingsHashMask
postingsHashSize
RawPostingList
postingsHash
RawPostingList
postingsHashSize
RawPostingList
p
TermsHashPerField
docInverterPerField
DocInverterPerField
perThread
TermsHashPerThread
nextPerThread
TermsHashPerThread
fieldInfo
FieldInfo
perThread
perThread
intPool
intPool
charPool
charPool
bytePool
bytePool
docState
docState
fieldState
fieldState
consumer
addField
fieldInfo
streamCount
getStreamCount
numPostingInt
streamCount
fieldInfo
fieldInfo
if
nextPerThread
nextPerField
TermsHashPerField
addField
docInverterPerField
fieldInfo
nextPerField
shrinkHash
targetSize
int
assert
postingsCompacted
numPostings
int
newSize
length
while
newSize
newSize
targetSize
block
newSize
if
newSize
length
block
postingsHash
RawPostingList
newSize
postingsHashSize
newSize
postingsHashHalfSize
newSize
postingsHashMask
newSize
reset
if
postingsCompacted
compactPostings
assert
numPostings
length
if
numPostings
block
recyclePostings
postingsHash
numPostings
fill
postingsHash
numPostings
numPostings
postingsCompacted
if
nextPerField
reset
abort
reset
if
nextPerField
abort
initReader
reader
ByteSliceReader
p
RawPostingList
stream
int
assert
stream
streamCount
int
ints
buffers
intStart
INT_BLOCK_SHIFT
int
upto
intStart
INT_BLOCK_MASK
init
bytePool
byteStart
stream
FIRST_LEVEL_SIZE
ints
upto
stream
compactPostings
int
upto
for
forControl
int
i
i
postingsHashSize
i
block
if
postingsHash
i
block
if
upto
i
block
postingsHash
upto
postingsHash
i
postingsHash
i
upto
assert
upto
numPostings
postingsCompacted
sortPostings
RawPostingList
compactPostings
quickSort
postingsHash
numPostings
return
postingsHash
quickSort
postings
RawPostingList
lo
int
hi
int
if
lo
hi
return
if
hi
lo
block
if
comparePostings
postings
lo
postings
hi
block
RawPostingList
tmp
postings
lo
postings
lo
postings
hi
postings
hi
tmp
return
int
mid
lo
hi
if
comparePostings
postings
lo
postings
mid
block
RawPostingList
tmp
postings
lo
postings
lo
postings
mid
postings
mid
tmp
if
comparePostings
postings
mid
postings
hi
block
RawPostingList
tmp
postings
mid
postings
mid
postings
hi
postings
hi
tmp
if
comparePostings
postings
lo
postings
mid
block
RawPostingList
tmp2
postings
lo
postings
lo
postings
mid
postings
mid
tmp2
int
left
lo
int
right
hi
if
left
right
return
RawPostingList
partition
postings
mid
for
forControl
block
while
comparePostings
postings
right
partition
right
while
left
right
comparePostings
postings
left
partition
left
if
left
right
block
RawPostingList
tmp
postings
left
postings
left
postings
right
postings
right
tmp
right
block
break
quickSort
postings
lo
left
quickSort
postings
left
hi
comparePostings
int
p1
RawPostingList
p2
RawPostingList
if
p1
p2
return
char
text1
buffers
textStart
CHAR_BLOCK_SHIFT
int
pos1
textStart
CHAR_BLOCK_MASK
char
text2
buffers
textStart
CHAR_BLOCK_SHIFT
int
pos2
textStart
CHAR_BLOCK_MASK
assert
text1
text2
pos1
pos2
while
block
char
c1
text1
pos1
char
c2
text2
pos2
if
c1
c2
block
if
c2
return
if
c1
return
return
c1
c2
assert
c1
postingEquals
boolean
tokenText
char
tokenTextLen
int
char
text
buffers
textStart
CHAR_BLOCK_SHIFT
assert
text
int
pos
textStart
CHAR_BLOCK_MASK
int
tokenPos
for
forControl
tokenPos
tokenTextLen
pos
tokenPos
if
tokenText
tokenPos
text
pos
return
return
text
pos
boolean
doCall
boolean
doNextCall
start
boolean
fields
Fieldable
count
int
doCall
start
fields
count
if
nextPerField
doNextCall
start
fields
count
return
doCall
doNextCall
add
token
Token
textStart
int
int
code
textStart
int
hashPos
code
postingsHashMask
assert
postingsCompacted
p
postingsHash
hashPos
if
p
textStart
textStart
block
int
inc
code
code
do
p
textStart
textStart
block
code
inc
hashPos
code
postingsHashMask
p
postingsHash
hashPos
if
p
block
if
freePostingsCount
morePostings
p
freePostings
freePostingsCount
assert
p
textStart
textStart
assert
postingsHash
hashPos
postingsHash
hashPos
p
numPostings
if
numPostings
postingsHashHalfSize
rehashPostings
postingsHashSize
if
numPostingInt
intUpto
INT_BLOCK_SIZE
nextBuffer
if
BYTE_BLOCK_SIZE
byteUpto
numPostingInt
FIRST_LEVEL_SIZE
nextBuffer
intUptos
buffer
intUptoStart
intUpto
intUpto
streamCount
intStart
intUptoStart
intOffset
for
forControl
int
i
i
streamCount
i
block
int
upto
newSlice
FIRST_LEVEL_SIZE
intUptos
intUptoStart
i
upto
byteOffset
byteStart
intUptos
intUptoStart
newTerm
token
p
block
intUptos
buffers
intStart
INT_BLOCK_SHIFT
intUptoStart
intStart
INT_BLOCK_MASK
addTerm
token
p
add
token
Token
assert
postingsCompacted
char
tokenText
termBuffer
int
tokenTextLen
termLength
int
downto
tokenTextLen
int
code
while
downto
block
char
ch
tokenText
downto
if
ch
UNI_SUR_LOW_START
ch
UNI_SUR_LOW_END
block
if
downto
block
ch
tokenText
downto
UNI_REPLACEMENT_CHAR
block
char
ch2
tokenText
downto
if
ch2
UNI_SUR_HIGH_START
ch2
UNI_SUR_HIGH_END
block
code
code
ch
ch2
downto
continue
block
ch
tokenText
downto
UNI_REPLACEMENT_CHAR
if
ch
UNI_SUR_HIGH_START
ch
UNI_SUR_HIGH_END
ch
tokenText
downto
UNI_REPLACEMENT_CHAR
code
code
ch
int
hashPos
code
postingsHashMask
p
postingsHash
hashPos
if
p
postingEquals
tokenText
tokenTextLen
block
int
inc
code
code
do
p
postingEquals
tokenText
tokenTextLen
block
code
inc
hashPos
code
postingsHashMask
p
postingsHash
hashPos
if
p
block
int
textLen1
tokenTextLen
if
textLen1
charUpto
CHAR_BLOCK_SIZE
block
if
textLen1
CHAR_BLOCK_SIZE
block
if
maxTermPrefix
maxTermPrefix
String
tokenText
skippingLongTerm
token
return
nextBuffer
if
freePostingsCount
morePostings
p
freePostings
freePostingsCount
assert
p
char
text
buffer
int
textUpto
charUpto
textStart
textUpto
charOffset
charUpto
textLen1
arraycopy
tokenText
text
textUpto
tokenTextLen
text
textUpto
tokenTextLen
assert
postingsHash
hashPos
postingsHash
hashPos
p
numPostings
if
numPostings
postingsHashHalfSize
rehashPostings
postingsHashSize
if
numPostingInt
intUpto
INT_BLOCK_SIZE
nextBuffer
if
BYTE_BLOCK_SIZE
byteUpto
numPostingInt
FIRST_LEVEL_SIZE
nextBuffer
intUptos
buffer
intUptoStart
intUpto
intUpto
streamCount
intStart
intUptoStart
intOffset
for
forControl
int
i
i
streamCount
i
block
int
upto
newSlice
FIRST_LEVEL_SIZE
intUptos
intUptoStart
i
upto
byteOffset
byteStart
intUptos
intUptoStart
newTerm
token
p
block
intUptos
buffers
intStart
INT_BLOCK_SHIFT
intUptoStart
intStart
INT_BLOCK_MASK
addTerm
token
p
if
doNextCall
add
token
textStart
int
intUptos
int
intUptoStart
writeByte
stream
int
b
byte
int
upto
intUptos
intUptoStart
stream
byte
bytes
buffers
upto
BYTE_BLOCK_SHIFT
assert
bytes
int
offset
upto
BYTE_BLOCK_MASK
if
bytes
offset
block
offset
allocSlice
bytes
offset
bytes
buffer
intUptos
intUptoStart
stream
offset
byteOffset
bytes
offset
b
intUptos
writeBytes
stream
int
b
byte
offset
int
len
int
int
end
offset
len
for
forControl
int
i
offset
i
end
i
writeByte
stream
b
i
writeVInt
stream
int
i
int
assert
stream
streamCount
while
i
block
writeByte
stream
byte
i
i
writeByte
stream
byte
i
finish
finish
if
nextPerField
finish
rehashPostings
newSize
int
int
newMask
newSize
RawPostingList
newHash
RawPostingList
newSize
for
forControl
int
i
i
postingsHashSize
i
block
RawPostingList
p0
postingsHash
i
if
p0
block
int
code
if
primary
block
int
start
textStart
CHAR_BLOCK_MASK
char
text
buffers
textStart
CHAR_BLOCK_SHIFT
int
pos
start
while
text
pos
pos
code
while
pos
start
code
code
text
pos
code
textStart
int
hashPos
code
newMask
assert
hashPos
if
newHash
hashPos
block
int
inc
code
code
do
newHash
hashPos
block
code
inc
hashPos
code
newMask
newHash
hashPos
p0
postingsHashMask
newMask
postingsHash
newHash
postingsHashSize
newSize
postingsHashHalfSize
newSize
InvertedDocConsumerPerField
