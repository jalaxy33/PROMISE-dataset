TermInfosReader
Directory
directory
String
segment
FieldInfos
fieldInfos
CloseableThreadLocal
threadResources
CloseableThreadLocal
SegmentTermEnum
origEnum
long
size
Term
indexTerms
TermInfo
indexInfos
long
indexPointers
SegmentTermEnum
indexEnum
int
indexDivisor
int
totalIndexInterval
int
DEFAULT_CACHE_SIZE
ThreadResources
SegmentTermEnum
termEnum
Cache
termInfoCache
TermInfosReader
dir
Directory
seg
String
fis
FieldInfos
dir
seg
fis
BUFFER_SIZE
TermInfosReader
dir
Directory
seg
String
fis
FieldInfos
readBufferSize
int
boolean
success
try
directory
dir
segment
seg
fieldInfos
fis
origEnum
SegmentTermEnum
openInput
segment
TERMS_EXTENSION
readBufferSize
fieldInfos
size
size
totalIndexInterval
indexInterval
indexEnum
SegmentTermEnum
openInput
segment
TERMS_INDEX_EXTENSION
readBufferSize
fieldInfos
success
if
success
block
close
getSkipInterval
int
return
skipInterval
getMaxSkipLevels
int
return
maxSkipLevels
setIndexDivisor
indexDivisor
int
if
indexDivisor
throw
IllegalArgumentException
indexDivisor
if
indexTerms
throw
IllegalStateException
indexDivisor
indexDivisor
totalIndexInterval
indexInterval
indexDivisor
getIndexDivisor
int
return
indexDivisor
close
if
origEnum
close
if
indexEnum
close
close
size
long
return
size
getThreadResources
ThreadResources
ThreadResources
resources
ThreadResources
get
if
resources
block
resources
ThreadResources
termEnum
terms
termInfoCache
SimpleLRUCache
DEFAULT_CACHE_SIZE
set
resources
return
resources
ensureIndexIsRead
if
indexTerms
return
try
int
indexSize
int
size
indexDivisor
indexTerms
Term
indexSize
indexInfos
TermInfo
indexSize
indexPointers
long
indexSize
for
forControl
int
i
next
i
block
indexTerms
i
term
indexInfos
i
termInfo
indexPointers
i
indexPointer
for
forControl
int
j
j
indexDivisor
j
if
next
break
close
indexEnum
getIndexOffset
int
term
Term
int
lo
int
hi
length
while
hi
lo
block
int
mid
lo
hi
int
delta
compareTo
indexTerms
mid
if
delta
hi
mid
if
delta
lo
mid
return
mid
return
hi
seekEnum
enumerator
SegmentTermEnum
indexOffset
int
seek
indexPointers
indexOffset
indexOffset
totalIndexInterval
indexTerms
indexOffset
indexInfos
indexOffset
get
TermInfo
term
Term
return
get
term
get
TermInfo
term
Term
useCache
boolean
if
size
return
ensureIndexIsRead
TermInfo
ti
ThreadResources
resources
getThreadResources
Cache
cache
if
useCache
block
cache
termInfoCache
ti
TermInfo
get
term
if
ti
block
return
ti
SegmentTermEnum
enumerator
termEnum
if
term
prev
compareTo
prev
compareTo
term
block
int
enumOffset
int
position
totalIndexInterval
if
length
enumOffset
compareTo
indexTerms
enumOffset
block
int
numScans
scanTo
term
if
term
compareTo
term
block
ti
termInfo
if
cache
numScans
block
put
term
ti
block
ti
return
ti
seekEnum
enumerator
getIndexOffset
term
scanTo
term
if
term
compareTo
term
block
ti
termInfo
if
cache
block
put
term
ti
block
ti
return
ti
get
Term
position
int
if
size
return
SegmentTermEnum
enumerator
getThreadResources
termEnum
if
enumerator
term
position
position
position
position
totalIndexInterval
return
scanEnum
enumerator
position
seekEnum
enumerator
position
totalIndexInterval
return
scanEnum
enumerator
position
scanEnum
Term
enumerator
SegmentTermEnum
position
int
while
position
position
if
next
return
return
term
getPosition
long
term
Term
if
size
return
ensureIndexIsRead
int
indexOffset
getIndexOffset
term
SegmentTermEnum
enumerator
getThreadResources
termEnum
seekEnum
enumerator
indexOffset
while
compareTo
term
next
block
if
compareTo
term
return
position
return
terms
SegmentTermEnum
return
SegmentTermEnum
clone
terms
SegmentTermEnum
term
Term
get
term
return
SegmentTermEnum
getThreadResources
termEnum
clone
