CheckIndex
PrintStream
out
PrintStream
infoStream
Directory
dir
Status
boolean
clean
boolean
missingSegments
boolean
cantOpenSegments
boolean
missingSegmentVersion
String
segmentsFileName
int
numSegments
String
segmentFormat
List
segmentsChecked
ArrayList
boolean
toolOutOfDate
List
segmentInfos
ArrayList
Directory
dir
SegmentInfos
newSegments
int
totLoseDocCount
int
numBadSegments
boolean
partial
SegmentInfoStatus
String
name
int
docCount
boolean
compound
int
numFiles
double
sizeMB
int
docStoreOffset
String
docStoreSegment
boolean
docStoreCompoundFile
boolean
hasDeletions
String
deletionsFileName
int
numDeleted
boolean
openReaderPassed
int
numFields
boolean
hasProx
CheckIndex
dir
Directory
dir
dir
infoStream
out
setInfoStream
out
PrintStream
infoStream
out
msg
msg
String
if
infoStream
println
msg
MySegmentTermDocs
int
delCount
MySegmentTermDocs
p
SegmentReader
p
seek
term
Term
seek
term
delCount
skippingDoc
delCount
SegmentTermDocs
check
boolean
dir
Directory
doFix
boolean
return
check
dir
doFix
check
boolean
dir
Directory
doFix
boolean
onlySegments
List
CheckIndex
checker
CheckIndex
dir
Status
status
checkIndex
onlySegments
if
doFix
clean
fixIndex
status
return
clean
checkIndex
Status
return
checkIndex
checkIndex
Status
onlySegments
List
NumberFormat
nf
getInstance
SegmentInfos
sis
SegmentInfos
Status
result
Status
dir
dir
try
read
dir
catchClause
t
msg
missingSegments
if
infoStream
printStackTrace
infoStream
return
result
int
numSegments
size
String
segmentsFileName
getCurrentSegmentFileName
IndexInput
input
try
input
openInput
segmentsFileName
catchClause
t
msg
if
infoStream
printStackTrace
infoStream
cantOpenSegments
return
result
int
format
try
format
readInt
catchClause
t
msg
if
infoStream
printStackTrace
infoStream
missingSegmentVersion
return
result
if
input
close
String
sFormat
boolean
skip
if
format
FORMAT
sFormat
if
format
FORMAT_LOCKLESS
sFormat
if
format
FORMAT_SINGLE_NORM_FILE
sFormat
if
format
FORMAT_SHARED_DOC_STORE
sFormat
block
if
format
FORMAT_CHECKSUM
sFormat
if
format
FORMAT_DEL_COUNT
sFormat
if
format
FORMAT_HAS_PROX
sFormat
if
format
CURRENT_FORMAT
block
sFormat
format
skip
block
sFormat
format
msg
segmentsFileName
numSegments
sFormat
segmentsFileName
segmentsFileName
numSegments
numSegments
segmentFormat
sFormat
if
onlySegments
block
partial
if
infoStream
print
Iterator
it
iterator
while
hasNext
block
if
infoStream
print
next
addAll
onlySegments
msg
if
skip
block
msg
toolOutOfDate
return
result
newSegments
SegmentInfos
clone
clear
for
forControl
int
i
i
numSegments
i
block
SegmentInfo
info
info
i
if
onlySegments
contains
name
continue
Status
SegmentInfoStatus
segInfoStat
Status
SegmentInfoStatus
add
segInfoStat
msg
i
numSegments
name
docCount
name
name
docCount
docCount
int
toLoseDocCount
docCount
SegmentReader
reader
try
msg
getUseCompoundFile
compound
getUseCompoundFile
msg
getHasProx
hasProx
getHasProx
msg
files
size
numFiles
files
size
msg
format
sizeInBytes
sizeMB
sizeInBytes
int
docStoreOffset
getDocStoreOffset
if
docStoreOffset
block
msg
docStoreOffset
docStoreOffset
docStoreOffset
msg
getDocStoreSegment
docStoreSegment
getDocStoreSegment
msg
getDocStoreIsCompoundFile
docStoreCompoundFile
getDocStoreIsCompoundFile
String
delFileName
getDelFileName
if
delFileName
block
msg
hasDeletions
block
msg
delFileName
hasDeletions
deletionsFileName
delFileName
if
infoStream
print
reader
get
info
int
numDocs
numDocs
toLoseDocCount
numDocs
if
hasDeletions
block
if
docCount
numDocs
getDelCount
block
throw
RuntimeException
getDelCount
docCount
numDocs
numDeleted
docCount
numDocs
msg
segInfoStat
numDeleted
block
if
getDelCount
block
throw
RuntimeException
getDelCount
docCount
numDocs
msg
if
infoStream
print
Collection
fieldNames
getFieldNames
ALL
Iterator
it
iterator
while
hasNext
block
String
fieldName
String
next
byte
b
norms
fieldName
if
length
docCount
throw
RuntimeException
fieldName
length
docCount
msg
size
numFields
size
if
infoStream
print
TermEnum
termEnum
terms
TermPositions
termPositions
termPositions
MySegmentTermDocs
myTermDocs
MySegmentTermDocs
reader
long
termCount
long
totFreq
long
totPos
while
next
block
termCount
Term
term
term
int
docFreq
docFreq
seek
term
int
lastDoc
int
freq0
totFreq
docFreq
while
next
block
freq0
int
doc
doc
int
freq
freq
if
doc
lastDoc
throw
RuntimeException
term
doc
lastDoc
lastDoc
doc
if
freq
throw
RuntimeException
term
doc
freq
int
lastPos
totPos
freq
for
forControl
int
j
j
freq
j
block
int
pos
nextPosition
if
pos
throw
RuntimeException
term
doc
pos
if
pos
lastPos
throw
RuntimeException
term
doc
pos
lastPos
int
delCount
if
hasDeletions
block
seek
term
while
next
block
delCount
delCount
delCount
if
freq0
delCount
docFreq
throw
RuntimeException
term
docFreq
freq0
delCount
msg
termCount
totFreq
totPos
if
infoStream
print
int
docCount
long
totFields
for
forControl
int
j
j
docCount
j
if
isDeleted
j
block
docCount
Document
doc
document
j
totFields
getFields
size
if
docCount
numDocs
throw
RuntimeException
docCount
docCount
msg
totFields
format
float
totFields
docCount
if
infoStream
print
int
totVectors
for
forControl
int
j
j
docCount
j
if
isDeleted
j
block
TermFreqVector
tfv
getTermFreqVectors
j
if
tfv
totVectors
length
msg
totVectors
format
float
totVectors
docCount
msg
catchClause
t
msg
String
comment
comment
msg
comment
if
infoStream
printStackTrace
infoStream
msg
totLoseDocCount
toLoseDocCount
numBadSegments
continue
if
reader
close
add
clone
if
numBadSegments
block
clean
msg
msg
numBadSegments
totLoseDocCount
return
result
fixIndex
result
Status
if
partial
throw
IllegalArgumentException
commit
dir
boolean
assertsOn
testAsserts
boolean
assertsOn
return
assertsOn
boolean
assert
testAsserts
return
assertsOn
main
args
String
boolean
doFix
List
onlySegments
ArrayList
String
indexPath
int
i
while
i
length
block
if
args
i
equals
block
doFix
i
if
args
i
equals
block
if
i
length
block
println
exit
add
args
i
i
block
if
indexPath
block
println
args
i
exit
indexPath
args
i
i
if
indexPath
block
println
println
exit
if
assertsOn
println
if
size
onlySegments
if
doFix
block
println
exit
println
indexPath
Directory
dir
try
dir
getDirectory
indexPath
catchClause
t
println
indexPath
printStackTrace
out
exit
CheckIndex
checker
CheckIndex
dir
setInfoStream
out
Status
result
checkIndex
onlySegments
if
clean
block
if
doFix
block
println
totLoseDocCount
block
println
totLoseDocCount
println
totLoseDocCount
for
forControl
int
s
s
s
block
try
sleep
catchClause
ie
currentThread
interrupt
s
continue
println
s
println
fixIndex
result
println
println
getCurrentSegmentFileName
println
int
exitCode
if
result
clean
exitCode
exitCode
exit
exitCode
