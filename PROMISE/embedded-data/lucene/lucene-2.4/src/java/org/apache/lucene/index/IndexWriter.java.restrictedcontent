IndexWriter
long
WRITE_LOCK_TIMEOUT
long
writeLockTimeout
WRITE_LOCK_TIMEOUT
String
WRITE_LOCK_NAME
int
DEFAULT_MERGE_FACTOR
DEFAULT_MERGE_FACTOR
int
DISABLE_AUTO_FLUSH
int
DEFAULT_MAX_BUFFERED_DOCS
DISABLE_AUTO_FLUSH
double
DEFAULT_RAM_BUFFER_SIZE_MB
int
DEFAULT_MAX_BUFFERED_DELETE_TERMS
DISABLE_AUTO_FLUSH
int
DEFAULT_MAX_MERGE_DOCS
DEFAULT_MAX_MERGE_DOCS
int
DEFAULT_MAX_FIELD_LENGTH
int
DEFAULT_TERM_INDEX_INTERVAL
int
MAX_TERM_LENGTH
MAX_TERM_LENGTH
double
DEFAULT_MAX_SYNC_PAUSE_SECONDS
if
WINDOWS
DEFAULT_MAX_SYNC_PAUSE_SECONDS
DEFAULT_MAX_SYNC_PAUSE_SECONDS
int
MERGE_READ_BUFFER_SIZE
Object
MESSAGE_ID_LOCK
Object
int
MESSAGE_ID
int
messageID
boolean
hitOOM
Directory
directory
Analyzer
analyzer
Similarity
similarity
getDefault
long
changeCount
long
lastCommitChangeCount
SegmentInfos
rollbackSegmentInfos
HashMap
rollbackSegments
SegmentInfos
pendingCommit
long
pendingCommitChangeCount
SegmentInfos
localRollbackSegmentInfos
boolean
localAutoCommit
int
localFlushedDocCount
boolean
autoCommit
SegmentInfos
segmentInfos
SegmentInfos
DocumentsWriter
docWriter
IndexFileDeleter
deleter
Set
segmentsToOptimize
HashSet
Lock
writeLock
int
termIndexInterval
DEFAULT_TERM_INDEX_INTERVAL
boolean
closeDir
boolean
closed
boolean
closing
HashSet
mergingSegments
HashSet
MergePolicy
mergePolicy
LogByteSizeMergePolicy
MergeScheduler
mergeScheduler
ConcurrentMergeScheduler
LinkedList
pendingMerges
LinkedList
Set
runningMerges
HashSet
List
mergeExceptions
ArrayList
long
mergeGen
boolean
stopMerges
int
flushCount
int
flushDeletesCount
double
maxSyncPauseSeconds
DEFAULT_MAX_SYNC_PAUSE_SECONDS
int
readCount
Thread
writeThread
acquireWrite
while
writeThread
readCount
doWait
ensureOpen
writeThread
currentThread
releaseWrite
assert
currentThread
writeThread
writeThread
notifyAll
acquireRead
Thread
current
currentThread
while
writeThread
writeThread
current
doWait
readCount
releaseRead
readCount
assert
readCount
if
readCount
notifyAll
ensureOpen
includePendingClose
boolean
if
closed
includePendingClose
closing
block
throw
AlreadyClosedException
ensureOpen
ensureOpen
message
message
String
if
infoStream
println
messageID
currentThread
getName
message
setMessageID
infoStream
PrintStream
if
infoStream
messageID
block
synchronized
MESSAGE_ID_LOCK
messageID
MESSAGE_ID
infoStream
infoStream
getLogMergePolicy
LogMergePolicy
if
mergePolicy
LogMergePolicy
return
LogMergePolicy
mergePolicy
throw
IllegalArgumentException
getUseCompoundFile
boolean
return
getLogMergePolicy
getUseCompoundFile
setUseCompoundFile
value
boolean
getLogMergePolicy
setUseCompoundFile
value
getLogMergePolicy
setUseCompoundDocStore
value
setSimilarity
similarity
Similarity
ensureOpen
similarity
similarity
setSimilarity
similarity
getSimilarity
Similarity
ensureOpen
return
similarity
setTermIndexInterval
interval
int
ensureOpen
termIndexInterval
interval
getTermIndexInterval
int
ensureOpen
return
termIndexInterval
IndexWriter
path
String
a
Analyzer
create
boolean
mfl
MaxFieldLength
init
getDirectory
path
a
create
getLimit
IndexWriter
path
String
a
Analyzer
create
boolean
init
getDirectory
path
a
create
DEFAULT_MAX_FIELD_LENGTH
IndexWriter
path
File
a
Analyzer
create
boolean
mfl
MaxFieldLength
init
getDirectory
path
a
create
getLimit
IndexWriter
path
File
a
Analyzer
create
boolean
init
getDirectory
path
a
create
DEFAULT_MAX_FIELD_LENGTH
IndexWriter
d
Directory
a
Analyzer
create
boolean
mfl
MaxFieldLength
init
d
a
create
getLimit
IndexWriter
d
Directory
a
Analyzer
create
boolean
init
d
a
create
DEFAULT_MAX_FIELD_LENGTH
IndexWriter
path
String
a
Analyzer
mfl
MaxFieldLength
init
getDirectory
path
a
getLimit
IndexWriter
path
String
a
Analyzer
init
getDirectory
path
a
DEFAULT_MAX_FIELD_LENGTH
IndexWriter
path
File
a
Analyzer
mfl
MaxFieldLength
init
getDirectory
path
a
getLimit
IndexWriter
path
File
a
Analyzer
init
getDirectory
path
a
DEFAULT_MAX_FIELD_LENGTH
IndexWriter
d
Directory
a
Analyzer
mfl
MaxFieldLength
init
d
a
getLimit
IndexWriter
d
Directory
a
Analyzer
init
d
a
DEFAULT_MAX_FIELD_LENGTH
IndexWriter
d
Directory
autoCommit
boolean
a
Analyzer
init
d
a
autoCommit
DEFAULT_MAX_FIELD_LENGTH
IndexWriter
d
Directory
autoCommit
boolean
a
Analyzer
create
boolean
init
d
a
create
autoCommit
DEFAULT_MAX_FIELD_LENGTH
IndexWriter
d
Directory
a
Analyzer
deletionPolicy
IndexDeletionPolicy
mfl
MaxFieldLength
init
d
a
deletionPolicy
getLimit
IndexWriter
d
Directory
autoCommit
boolean
a
Analyzer
deletionPolicy
IndexDeletionPolicy
init
d
a
deletionPolicy
autoCommit
DEFAULT_MAX_FIELD_LENGTH
IndexWriter
d
Directory
a
Analyzer
create
boolean
deletionPolicy
IndexDeletionPolicy
mfl
MaxFieldLength
init
d
a
create
deletionPolicy
getLimit
IndexWriter
d
Directory
autoCommit
boolean
a
Analyzer
create
boolean
deletionPolicy
IndexDeletionPolicy
init
d
a
create
deletionPolicy
autoCommit
DEFAULT_MAX_FIELD_LENGTH
init
d
Directory
a
Analyzer
closeDir
boolean
deletionPolicy
IndexDeletionPolicy
autoCommit
boolean
maxFieldLength
int
if
indexExists
d
block
init
d
a
closeDir
deletionPolicy
autoCommit
maxFieldLength
block
init
d
a
closeDir
deletionPolicy
autoCommit
maxFieldLength
init
d
Directory
a
Analyzer
create
boolean
closeDir
boolean
deletionPolicy
IndexDeletionPolicy
autoCommit
boolean
maxFieldLength
int
closeDir
closeDir
directory
d
analyzer
a
setMessageID
defaultInfoStream
maxFieldLength
maxFieldLength
if
create
block
clearLock
WRITE_LOCK_NAME
Lock
writeLock
makeLock
WRITE_LOCK_NAME
if
obtain
writeLockTimeout
throw
LockObtainFailedException
writeLock
writeLock
writeLock
try
if
create
block
try
read
directory
clear
catchClause
e
commit
directory
block
read
directory
for
forControl
int
i
i
size
i
block
SegmentInfo
info
info
i
List
files
files
for
forControl
int
j
j
size
j
add
get
j
autoCommit
autoCommit
setRollbackSegmentInfos
segmentInfos
docWriter
DocumentsWriter
directory
setInfoStream
infoStream
setMaxFieldLength
maxFieldLength
deleter
IndexFileDeleter
directory
deletionPolicy
KeepOnlyLastCommitDeletionPolicy
deletionPolicy
segmentInfos
infoStream
docWriter
pushMaxBufferedDocs
if
infoStream
block
message
create
messageState
catchClause
e
writeLock
release
writeLock
throw
e
setRollbackSegmentInfos
infos
SegmentInfos
rollbackSegmentInfos
SegmentInfos
clone
assert
hasExternalSegments
rollbackSegmentInfos
rollbackSegments
HashMap
int
size
size
for
forControl
int
i
i
size
i
put
info
i
Integer
i
setMergePolicy
mp
MergePolicy
ensureOpen
if
mp
throw
NullPointerException
if
mergePolicy
mp
close
mergePolicy
mp
pushMaxBufferedDocs
if
infoStream
message
mp
getMergePolicy
MergePolicy
ensureOpen
return
mergePolicy
setMergeScheduler
mergeScheduler
MergeScheduler
ensureOpen
if
mergeScheduler
throw
NullPointerException
if
mergeScheduler
mergeScheduler
block
finishMerges
mergeScheduler
close
mergeScheduler
mergeScheduler
if
infoStream
message
mergeScheduler
getMergeScheduler
MergeScheduler
ensureOpen
return
mergeScheduler
setMaxMergeDocs
maxMergeDocs
int
getLogMergePolicy
setMaxMergeDocs
maxMergeDocs
getMaxMergeDocs
int
return
getLogMergePolicy
getMaxMergeDocs
setMaxFieldLength
maxFieldLength
int
ensureOpen
maxFieldLength
maxFieldLength
setMaxFieldLength
maxFieldLength
if
infoStream
message
maxFieldLength
getMaxFieldLength
int
ensureOpen
return
maxFieldLength
setMaxBufferedDocs
maxBufferedDocs
int
ensureOpen
if
maxBufferedDocs
DISABLE_AUTO_FLUSH
maxBufferedDocs
throw
IllegalArgumentException
if
maxBufferedDocs
DISABLE_AUTO_FLUSH
getRAMBufferSizeMB
DISABLE_AUTO_FLUSH
throw
IllegalArgumentException
setMaxBufferedDocs
maxBufferedDocs
pushMaxBufferedDocs
if
infoStream
message
maxBufferedDocs
pushMaxBufferedDocs
if
getMaxBufferedDocs
DISABLE_AUTO_FLUSH
block
MergePolicy
mp
mergePolicy
if
mp
LogDocMergePolicy
block
LogDocMergePolicy
lmp
LogDocMergePolicy
mp
int
maxBufferedDocs
getMaxBufferedDocs
if
getMinMergeDocs
maxBufferedDocs
block
if
infoStream
message
maxBufferedDocs
setMinMergeDocs
maxBufferedDocs
getMaxBufferedDocs
int
ensureOpen
return
getMaxBufferedDocs
setRAMBufferSizeMB
mb
double
if
mb
DISABLE_AUTO_FLUSH
mb
throw
IllegalArgumentException
if
mb
DISABLE_AUTO_FLUSH
getMaxBufferedDocs
DISABLE_AUTO_FLUSH
throw
IllegalArgumentException
setRAMBufferSizeMB
mb
if
infoStream
message
mb
getRAMBufferSizeMB
double
return
getRAMBufferSizeMB
setMaxBufferedDeleteTerms
maxBufferedDeleteTerms
int
ensureOpen
if
maxBufferedDeleteTerms
DISABLE_AUTO_FLUSH
maxBufferedDeleteTerms
throw
IllegalArgumentException
setMaxBufferedDeleteTerms
maxBufferedDeleteTerms
if
infoStream
message
maxBufferedDeleteTerms
getMaxBufferedDeleteTerms
int
ensureOpen
return
getMaxBufferedDeleteTerms
setMergeFactor
mergeFactor
int
getLogMergePolicy
setMergeFactor
mergeFactor
getMergeFactor
int
return
getLogMergePolicy
getMergeFactor
getMaxSyncPauseSeconds
double
return
maxSyncPauseSeconds
setMaxSyncPauseSeconds
seconds
double
maxSyncPauseSeconds
seconds
setDefaultInfoStream
infoStream
PrintStream
defaultInfoStream
infoStream
getDefaultInfoStream
PrintStream
return
defaultInfoStream
setInfoStream
infoStream
PrintStream
ensureOpen
setMessageID
infoStream
setInfoStream
infoStream
setInfoStream
infoStream
if
infoStream
messageState
messageState
message
directory
autoCommit
mergePolicy
mergeScheduler
getRAMBufferSizeMB
getMaxBufferedDocs
getMaxBufferedDeleteTerms
maxFieldLength
segString
getInfoStream
PrintStream
ensureOpen
return
infoStream
setWriteLockTimeout
writeLockTimeout
long
ensureOpen
writeLockTimeout
writeLockTimeout
getWriteLockTimeout
long
ensureOpen
return
writeLockTimeout
setDefaultWriteLockTimeout
writeLockTimeout
long
WRITE_LOCK_TIMEOUT
writeLockTimeout
getDefaultWriteLockTimeout
long
return
WRITE_LOCK_TIMEOUT
close
close
close
waitForMerges
boolean
if
hitOOM
block
rollback
return
if
shouldClose
closeInternal
waitForMerges
shouldClose
boolean
while
block
if
closed
block
if
closing
block
closing
return
block
doWait
return
closeInternal
waitForMerges
boolean
pauseAllThreads
try
if
infoStream
message
close
flush
waitForMerges
if
waitForMerges
merge
close
finishMerges
waitForMerges
close
if
infoStream
message
commit
if
infoStream
message
segString
synchronized
docWriter
close
if
closeDir
close
if
writeLock
block
release
writeLock
synchronized
closed
catchClause
oom
hitOOM
throw
oom
synchronized
closing
notifyAll
if
closed
block
if
docWriter
resumeAllThreads
if
infoStream
message
flushDocStores
boolean
boolean
useCompoundDocStore
String
docStoreSegment
boolean
success
try
docStoreSegment
closeDocStore
success
if
success
block
if
infoStream
message
useCompoundDocStore
useCompoundDocStore
segmentInfos
if
useCompoundDocStore
docStoreSegment
closedFiles
size
block
success
int
numSegments
size
String
compoundFileName
docStoreSegment
COMPOUND_FILE_STORE_EXTENSION
try
CompoundFileWriter
cfsWriter
CompoundFileWriter
directory
compoundFileName
Iterator
it
closedFiles
iterator
while
hasNext
addFile
String
next
close
success
if
success
block
if
infoStream
message
docStoreSegment
deleteFile
compoundFileName
for
forControl
int
i
i
numSegments
i
block
SegmentInfo
si
info
i
if
getDocStoreOffset
getDocStoreSegment
equals
docStoreSegment
setDocStoreIsCompoundFile
checkpoint
deleteNewFiles
closedFiles
return
useCompoundDocStore
finalize
try
if
writeLock
block
release
writeLock
finalize
getDirectory
Directory
ensureOpen
return
directory
getAnalyzer
Analyzer
ensureOpen
return
analyzer
docCount
int
ensureOpen
return
maxDoc
maxDoc
int
int
count
if
docWriter
count
getNumDocsInRAM
count
for
forControl
int
i
i
size
i
count
info
docCount
i
return
count
numDocs
int
int
count
if
docWriter
count
getNumDocsInRAM
count
for
forControl
int
i
i
size
i
block
SegmentInfo
info
info
i
count
docCount
getDelCount
return
count
hasDeletions
boolean
ensureOpen
if
hasDeletes
return
for
forControl
int
i
i
size
i
if
info
hasDeletions
i
return
return
int
maxFieldLength
addDocument
doc
Document
addDocument
doc
analyzer
addDocument
doc
Document
analyzer
Analyzer
ensureOpen
boolean
doFlush
boolean
success
try
try
doFlush
addDocument
doc
analyzer
success
if
success
block
if
infoStream
message
synchronized
if
docWriter
block
Collection
files
abortedFiles
if
files
deleteNewFiles
files
if
doFlush
flush
catchClause
oom
hitOOM
throw
oom
deleteDocuments
term
Term
ensureOpen
try
boolean
doFlush
bufferDeleteTerm
term
if
doFlush
flush
catchClause
oom
hitOOM
throw
oom
deleteDocuments
terms
Term
ensureOpen
try
boolean
doFlush
bufferDeleteTerms
terms
if
doFlush
flush
catchClause
oom
hitOOM
throw
oom
deleteDocuments
query
Query
ensureOpen
boolean
doFlush
bufferDeleteQuery
query
if
doFlush
flush
deleteDocuments
queries
Query
ensureOpen
boolean
doFlush
bufferDeleteQueries
queries
if
doFlush
flush
updateDocument
term
Term
doc
Document
ensureOpen
updateDocument
term
doc
getAnalyzer
updateDocument
term
Term
doc
Document
analyzer
Analyzer
ensureOpen
try
boolean
doFlush
boolean
success
try
doFlush
updateDocument
term
doc
analyzer
success
if
success
block
if
infoStream
message
synchronized
Collection
files
abortedFiles
if
files
deleteNewFiles
files
if
doFlush
flush
catchClause
oom
hitOOM
throw
oom
getSegmentCount
int
return
size
getNumBufferedDocuments
int
return
getNumDocsInRAM
getDocCount
int
i
int
if
i
i
size
block
return
info
docCount
i
block
return
getFlushCount
int
return
flushCount
getFlushDeletesCount
int
return
flushDeletesCount
newSegmentName
String
synchronized
segmentInfos
changeCount
return
toString
counter
MAX_RADIX
PrintStream
infoStream
PrintStream
defaultInfoStream
optimize
optimize
optimize
maxNumSegments
int
optimize
maxNumSegments
optimize
doWait
boolean
optimize
doWait
optimize
maxNumSegments
int
doWait
boolean
ensureOpen
if
maxNumSegments
throw
IllegalArgumentException
maxNumSegments
if
infoStream
message
segString
flush
synchronized
resetMergeExceptions
segmentsToOptimize
HashSet
int
numSegments
size
for
forControl
int
i
i
numSegments
i
add
info
i
Iterator
it
iterator
while
hasNext
block
MergePolicy
OneMerge
merge
MergePolicy
OneMerge
next
optimize
maxNumSegmentsOptimize
maxNumSegments
it
iterator
while
hasNext
block
MergePolicy
OneMerge
merge
MergePolicy
OneMerge
next
optimize
maxNumSegmentsOptimize
maxNumSegments
maybeMerge
maxNumSegments
if
doWait
block
synchronized
while
block
if
size
block
int
size
size
for
forControl
int
i
i
size
i
block
MergePolicy
OneMerge
merge
MergePolicy
OneMerge
get
if
optimize
block
IOException
err
IOException
segString
directory
Throwable
t
getException
if
t
initCause
t
throw
err
if
optimizeMergesPending
doWait
break
ensureOpen
optimizeMergesPending
boolean
Iterator
it
iterator
while
hasNext
if
MergePolicy
OneMerge
next
return
it
iterator
while
hasNext
if
MergePolicy
OneMerge
next
return
return
expungeDeletes
doWait
boolean
ensureOpen
if
infoStream
message
segString
MergePolicy
MergeSpecification
spec
synchronized
spec
findMergesToExpungeDeletes
segmentInfos
if
spec
block
int
numMerges
size
for
forControl
int
i
i
numMerges
i
registerMerge
MergePolicy
OneMerge
get
i
merge
if
spec
doWait
block
int
numMerges
size
synchronized
boolean
running
while
running
block
running
for
forControl
int
i
i
numMerges
i
block
MergePolicy
OneMerge
merge
MergePolicy
OneMerge
get
i
if
contains
merge
contains
merge
running
Throwable
t
getException
if
t
block
IOException
ioe
IOException
segString
directory
initCause
t
throw
ioe
if
running
doWait
expungeDeletes
expungeDeletes
maybeMerge
maybeMerge
maybeMerge
optimize
boolean
maybeMerge
optimize
maybeMerge
maxNumSegmentsOptimize
int
optimize
boolean
updatePendingMerges
maxNumSegmentsOptimize
optimize
merge
updatePendingMerges
maxNumSegmentsOptimize
int
optimize
boolean
assert
optimize
maxNumSegmentsOptimize
if
stopMerges
return
MergePolicy
MergeSpecification
spec
if
optimize
block
spec
findMergesForOptimize
segmentInfos
maxNumSegmentsOptimize
segmentsToOptimize
if
spec
block
int
numMerges
size
for
forControl
int
i
i
numMerges
i
block
MergePolicy
OneMerge
merge
MergePolicy
OneMerge
get
i
optimize
maxNumSegmentsOptimize
maxNumSegmentsOptimize
spec
findMerges
segmentInfos
if
spec
block
int
numMerges
size
for
forControl
int
i
i
numMerges
i
registerMerge
MergePolicy
OneMerge
get
i
getNextMerge
MergePolicy
OneMerge
if
size
return
block
MergePolicy
OneMerge
merge
MergePolicy
OneMerge
removeFirst
add
merge
return
merge
getNextExternalMerge
MergePolicy
OneMerge
if
size
return
block
Iterator
it
iterator
while
hasNext
block
MergePolicy
OneMerge
merge
MergePolicy
OneMerge
next
if
isExternal
block
remove
add
merge
return
merge
return
startTransaction
haveWriteLock
boolean
boolean
success
try
if
infoStream
message
assert
getNumBufferedDeleteTerms
getNumBufferedDeleteTerms
assert
getNumDocsInRAM
getNumDocsInRAM
ensureOpen
synchronized
while
stopMerges
doWait
success
if
success
haveWriteLock
releaseWrite
if
haveWriteLock
acquireWrite
success
try
localRollbackSegmentInfos
SegmentInfos
clone
assert
hasExternalSegments
segmentInfos
localAutoCommit
autoCommit
localFlushedDocCount
getFlushedDocCount
if
localAutoCommit
block
if
infoStream
message
flush
autoCommit
incRef
segmentInfos
success
if
success
finishAddIndexes
rollbackTransaction
if
infoStream
message
autoCommit
localAutoCommit
setFlushedDocCount
localFlushedDocCount
finishMerges
clear
addAll
localRollbackSegmentInfos
localRollbackSegmentInfos
finishAddIndexes
checkpoint
segmentInfos
if
autoCommit
decRef
segmentInfos
refresh
notifyAll
assert
hasExternalSegments
commitTransaction
if
infoStream
message
autoCommit
localAutoCommit
checkpoint
if
autoCommit
block
boolean
success
try
commit
success
if
success
block
if
infoStream
message
rollbackTransaction
decRef
localRollbackSegmentInfos
localRollbackSegmentInfos
assert
hasExternalSegments
finishAddIndexes
abort
rollback
rollback
ensureOpen
if
autoCommit
throw
IllegalStateException
if
shouldClose
rollbackInternal
rollbackInternal
boolean
success
pauseAllThreads
try
finishMerges
close
close
synchronized
if
pendingCommit
block
rollbackCommit
directory
decRef
pendingCommit
pendingCommit
notifyAll
clear
addAll
rollbackSegmentInfos
assert
hasExternalSegments
abort
assert
testPoint
checkpoint
segmentInfos
refresh
lastCommitChangeCount
changeCount
success
catchClause
oom
hitOOM
throw
oom
synchronized
if
success
block
resumeAllThreads
closing
notifyAll
if
infoStream
message
closeInternal
finishMerges
waitForMerges
boolean
if
waitForMerges
block
stopMerges
Iterator
it
iterator
while
hasNext
block
MergePolicy
OneMerge
merge
MergePolicy
OneMerge
next
if
infoStream
message
segString
directory
abort
mergeFinish
merge
clear
it
iterator
while
hasNext
block
MergePolicy
OneMerge
merge
MergePolicy
OneMerge
next
if
infoStream
message
segString
directory
abort
acquireRead
releaseRead
while
size
block
if
infoStream
message
size
doWait
stopMerges
notifyAll
assert
size
if
infoStream
message
block
acquireRead
releaseRead
while
size
size
doWait
assert
size
checkpoint
changeCount
checkpoint
segmentInfos
finishAddIndexes
releaseWrite
blockAddIndexes
includePendingClose
boolean
acquireRead
boolean
success
try
ensureOpen
includePendingClose
success
if
success
releaseRead
resumeAddIndexes
releaseRead
addIndexes
dirs
Directory
ensureOpen
noDupDirs
dirs
pauseAllThreads
try
if
infoStream
message
flush
boolean
success
startTransaction
try
int
docCount
synchronized
ensureOpen
for
forControl
int
i
i
length
i
block
SegmentInfos
sis
SegmentInfos
read
dirs
i
for
forControl
int
j
j
size
j
block
SegmentInfo
info
info
j
docCount
docCount
assert
contains
info
add
info
updateFlushedDocCount
docCount
optimize
success
if
success
block
commitTransaction
block
rollbackTransaction
catchClause
oom
hitOOM
throw
oom
resumeAllThreads
resetMergeExceptions
mergeExceptions
ArrayList
mergeGen
noDupDirs
dirs
Directory
HashSet
dups
HashSet
for
forControl
int
i
i
length
i
block
if
contains
dirs
i
throw
IllegalArgumentException
dirs
i
if
dirs
i
directory
throw
IllegalArgumentException
add
dirs
i
addIndexesNoOptimize
dirs
Directory
ensureOpen
noDupDirs
dirs
pauseAllThreads
try
if
infoStream
message
flush
boolean
success
startTransaction
try
int
docCount
synchronized
ensureOpen
for
forControl
int
i
i
length
i
block
if
directory
dirs
i
block
throw
IllegalArgumentException
SegmentInfos
sis
SegmentInfos
read
dirs
i
for
forControl
int
j
j
size
j
block
SegmentInfo
info
info
j
assert
contains
info
dir
name
docCount
docCount
add
info
updateFlushedDocCount
docCount
maybeMerge
ensureOpen
resolveExternalSegments
ensureOpen
success
if
success
block
commitTransaction
block
rollbackTransaction
catchClause
oom
hitOOM
throw
oom
resumeAllThreads
hasExternalSegments
boolean
return
hasExternalSegments
segmentInfos
hasExternalSegments
boolean
infos
SegmentInfos
int
numSegments
size
for
forControl
int
i
i
numSegments
i
if
info
dir
i
directory
return
return
resolveExternalSegments
boolean
any
boolean
done
while
done
block
SegmentInfo
info
MergePolicy
OneMerge
merge
synchronized
if
stopMerges
throw
MergePolicy
MergeAbortedException
int
numSegments
size
done
for
forControl
int
i
i
numSegments
i
block
info
info
i
if
dir
directory
block
done
MergePolicy
OneMerge
newMerge
MergePolicy
OneMerge
range
i
i
getUseCompoundFile
if
registerMerge
newMerge
block
merge
newMerge
remove
merge
add
merge
break
if
done
merge
merge
getNextExternalMerge
if
done
merge
doWait
if
merge
block
any
merge
merge
if
any
merge
addIndexes
readers
IndexReader
ensureOpen
pauseAllThreads
acquireWrite
try
boolean
success
SegmentInfo
info
String
mergedName
SegmentMerger
merger
try
flush
optimize
success
if
success
releaseWrite
startTransaction
try
mergedName
newSegmentName
merger
SegmentMerger
mergedName
IndexReader
sReader
synchronized
if
size
block
sReader
get
info
try
if
sReader
add
sReader
for
forControl
int
i
i
length
i
add
readers
i
int
docCount
merge
if
sReader
block
close
sReader
synchronized
clear
info
SegmentInfo
mergedName
docCount
directory
hasProx
add
info
updateFlushedDocCount
docCount
success
if
sReader
block
close
if
success
block
if
infoStream
message
rollbackTransaction
block
commitTransaction
if
mergePolicy
LogMergePolicy
getUseCompoundFile
block
List
files
synchronized
if
contains
info
block
files
files
incRef
files
if
files
block
success
startTransaction
try
createCompoundFile
mergedName
synchronized
setUseCompoundFile
success
decRef
files
if
success
block
if
infoStream
message
rollbackTransaction
block
commitTransaction
catchClause
oom
hitOOM
throw
oom
resumeAllThreads
doAfterFlush
flush
flush
prepareCommit
ensureOpen
prepareCommit
prepareCommit
internal
boolean
if
hitOOM
throw
IllegalStateException
if
autoCommit
internal
throw
IllegalStateException
if
autoCommit
pendingCommit
throw
IllegalStateException
message
flush
startCommit
commit
sizeInBytes
long
startCommit
sizeInBytes
finishCommit
boolean
committing
waitForCommit
while
committing
doWait
committing
doneCommit
committing
notifyAll
commit
ensureOpen
waitForCommit
try
message
if
autoCommit
pendingCommit
block
message
prepareCommit
message
finishCommit
doneCommit
finishCommit
if
pendingCommit
block
try
message
finishCommit
directory
lastCommitChangeCount
pendingCommitChangeCount
updateGeneration
pendingCommit
setRollbackSegmentInfos
pendingCommit
checkpoint
pendingCommit
decRef
pendingCommit
pendingCommit
notifyAll
message
message
flush
triggerMerge
boolean
flushDocStores
boolean
flushDeletes
boolean
ensureOpen
if
doFlush
flushDocStores
flushDeletes
triggerMerge
maybeMerge
doFlush
boolean
flushDocStores
boolean
flushDeletes
boolean
ensureOpen
assert
testPoint
flushCount
flushDeletes
deletesFull
flushDeletes
autoCommit
if
pauseAllThreads
block
resumeAllThreads
return
try
SegmentInfo
newSegment
int
numDocs
getNumDocsInRAM
boolean
flushDocs
numDocs
flushDocStores
autoCommit
String
docStoreSegment
getDocStoreSegment
if
docStoreSegment
flushDocStores
int
docStoreOffset
getDocStoreOffset
assert
autoCommit
docStoreOffset
boolean
docStoreIsCompoundFile
if
infoStream
block
message
getSegment
getDocStoreSegment
docStoreOffset
flushDocs
flushDeletes
flushDocStores
numDocs
getNumBufferedDeleteTerms
message
segString
if
flushDocStores
flushDocs
getSegment
equals
getDocStoreSegment
block
if
infoStream
message
docStoreSegment
docStoreIsCompoundFile
flushDocStores
flushDocStores
String
segment
getSegment
assert
segment
flushDocs
if
flushDocs
block
boolean
success
int
flushedDocCount
try
flushedDocCount
flush
flushDocStores
success
if
success
block
if
infoStream
message
segment
refresh
segment
if
docStoreOffset
flushDocStores
block
assert
docStoreSegment
assert
equals
segment
docStoreOffset
docStoreIsCompoundFile
docStoreSegment
newSegment
SegmentInfo
segment
flushedDocCount
directory
docStoreOffset
docStoreSegment
docStoreIsCompoundFile
hasProx
pushDeletes
if
flushDocs
add
newSegment
if
flushDeletes
block
flushDeletesCount
applyDeletes
doAfterFlush
if
flushDocs
checkpoint
if
flushDocs
useCompoundFile
segmentInfos
newSegment
block
boolean
success
try
createCompoundFile
segment
success
if
success
block
if
infoStream
message
segment
deleteFile
segment
COMPOUND_FILE_EXTENSION
setUseCompoundFile
checkpoint
return
flushDocs
catchClause
oom
hitOOM
throw
oom
clearFlushPending
resumeAllThreads
ramSizeInBytes
long
ensureOpen
return
getRAMUsed
numRamDocs
int
ensureOpen
return
getNumDocsInRAM
ensureContiguousMerge
int
merge
MergePolicy
OneMerge
int
first
indexOf
info
if
first
throw
MergePolicy
MergeException
info
name
directory
int
numSegments
size
int
numSegmentsToMerge
size
for
forControl
int
i
i
numSegmentsToMerge
i
block
SegmentInfo
info
info
i
if
first
i
numSegments
info
equals
info
first
i
block
if
indexOf
info
throw
MergePolicy
MergeException
name
directory
throw
MergePolicy
MergeException
segString
directory
segString
directory
return
first
commitMergedDeletes
merge
MergePolicy
OneMerge
assert
testPoint
SegmentInfos
sourceSegmentsClone
segmentsClone
SegmentInfos
sourceSegments
segments
if
infoStream
message
segString
directory
BitVector
deletes
int
docUpto
int
delCount
int
numSegmentsToMerge
size
for
forControl
int
i
i
numSegmentsToMerge
i
block
SegmentInfo
previousInfo
info
i
SegmentInfo
currentInfo
info
i
assert
docCount
docCount
int
docCount
docCount
if
hasDeletions
block
assert
hasDeletions
BitVector
previousDeletes
BitVector
dir
getDelFileName
if
getDelFileName
equals
getDelFileName
block
if
deletes
deletes
BitVector
docCount
BitVector
currentDeletes
BitVector
dir
getDelFileName
for
forControl
int
j
j
docCount
j
block
if
get
j
assert
get
j
block
if
get
j
block
set
docUpto
delCount
docUpto
docUpto
docCount
count
if
hasDeletions
block
if
deletes
deletes
BitVector
docCount
BitVector
currentDeletes
BitVector
directory
getDelFileName
for
forControl
int
j
j
docCount
j
block
if
get
j
block
set
docUpto
delCount
docUpto
docUpto
docCount
if
deletes
block
advanceDelGen
message
getDelFileName
write
directory
getDelFileName
setDelCount
delCount
assert
delCount
count
commitMerge
boolean
merge
MergePolicy
OneMerge
merger
SegmentMerger
mergedDocCount
int
assert
testPoint
if
hitOOM
return
if
infoStream
message
segString
directory
segString
assert
registerDone
if
isAborted
block
if
infoStream
message
segString
directory
refresh
name
return
int
start
ensureContiguousMerge
merge
commitMergedDeletes
merge
remapDeletes
segmentInfos
getDocMaps
getDelCounts
merge
mergedDocCount
String
mergeDocStoreSegment
getDocStoreSegment
if
mergeDocStoreSegment
getDocStoreIsCompoundFile
block
int
size
size
for
forControl
int
i
i
size
i
block
SegmentInfo
info
info
i
String
docStoreSegment
getDocStoreSegment
if
docStoreSegment
equals
mergeDocStoreSegment
getDocStoreIsCompoundFile
block
setDocStoreIsCompoundFile
break
setHasProx
hasProx
subList
clear
start
start
size
assert
contains
info
add
start
info
checkpoint
decrefMergeSegments
merge
if
optimize
add
info
return
decrefMergeSegments
merge
MergePolicy
OneMerge
SegmentInfos
sourceSegmentsClone
segmentsClone
int
numSegmentsToMerge
size
assert
increfDone
increfDone
for
forControl
int
i
i
numSegmentsToMerge
i
block
SegmentInfo
previousInfo
info
i
if
dir
directory
decRef
files
handleMergeException
t
Throwable
merge
MergePolicy
OneMerge
setException
t
addMergeException
merge
if
t
MergePolicy
MergeAbortedException
block
if
isExternal
throw
MergePolicy
MergeAbortedException
t
if
t
IOException
throw
IOException
t
if
t
RuntimeException
throw
RuntimeException
t
if
t
Error
throw
Error
t
throw
RuntimeException
t
merge
merge
MergePolicy
OneMerge
boolean
success
try
try
try
mergeInit
merge
if
infoStream
message
segString
directory
merge
segString
mergeMiddle
merge
success
catchClause
t
handleMergeException
t
merge
synchronized
try
mergeFinish
merge
if
success
block
if
infoStream
message
if
info
contains
info
refresh
name
if
success
isAborted
closed
closing
updatePendingMerges
maxNumSegmentsOptimize
optimize
remove
merge
catchClause
oom
hitOOM
throw
oom
registerMerge
boolean
merge
MergePolicy
OneMerge
if
registerDone
return
if
stopMerges
block
abort
throw
MergePolicy
MergeAbortedException
segString
directory
int
count
size
boolean
isExternal
for
forControl
int
i
i
count
i
block
SegmentInfo
info
info
i
if
contains
info
return
if
indexOf
info
return
if
dir
directory
isExternal
ensureContiguousMerge
merge
add
merge
if
infoStream
message
segString
directory
size
mergeGen
mergeGen
isExternal
isExternal
for
forControl
int
i
i
count
i
add
info
i
registerDone
return
mergeInit
merge
MergePolicy
OneMerge
boolean
success
try
_mergeInit
merge
success
if
success
block
mergeFinish
merge
remove
merge
_mergeInit
merge
MergePolicy
OneMerge
assert
testPoint
assert
registerDone
assert
optimize
maxNumSegmentsOptimize
if
info
return
if
isAborted
return
boolean
changed
applyDeletes
assert
changed
autoCommit
SegmentInfos
sourceSegments
segments
int
end
size
Directory
lastDir
directory
String
lastDocStoreSegment
int
next
boolean
mergeDocStores
boolean
doFlushDocStore
String
currentDocStoreSegment
getDocStoreSegment
for
forControl
int
i
i
end
i
block
SegmentInfo
si
info
i
if
hasDeletions
mergeDocStores
if
getDocStoreOffset
mergeDocStores
String
docStoreSegment
getDocStoreSegment
if
docStoreSegment
mergeDocStores
if
lastDocStoreSegment
lastDocStoreSegment
docStoreSegment
if
equals
docStoreSegment
mergeDocStores
if
next
next
getDocStoreOffset
docCount
if
next
getDocStoreOffset
mergeDocStores
next
getDocStoreOffset
docCount
if
lastDir
dir
mergeDocStores
if
getDocStoreOffset
currentDocStoreSegment
getDocStoreSegment
equals
currentDocStoreSegment
block
doFlushDocStore
int
docStoreOffset
String
docStoreSegment
boolean
docStoreIsCompoundFile
if
mergeDocStores
block
docStoreOffset
docStoreSegment
docStoreIsCompoundFile
block
SegmentInfo
si
info
docStoreOffset
getDocStoreOffset
docStoreSegment
getDocStoreSegment
docStoreIsCompoundFile
getDocStoreIsCompoundFile
if
mergeDocStores
doFlushDocStore
block
if
infoStream
message
doFlush
segmentsClone
SegmentInfos
clone
for
forControl
int
i
i
end
i
block
SegmentInfo
si
info
i
if
dir
directory
incRef
files
increfDone
mergeDocStores
mergeDocStores
info
SegmentInfo
newSegmentName
directory
docStoreOffset
docStoreSegment
docStoreIsCompoundFile
add
info
doCommitBeforeMergeCFS
boolean
merge
MergePolicy
OneMerge
long
freeableBytes
int
size
size
for
forControl
int
i
i
size
i
block
SegmentInfo
info
info
i
Integer
loc
Integer
get
info
if
loc
block
SegmentInfo
oldInfo
info
intValue
if
getUseCompoundFile
getUseCompoundFile
freeableBytes
sizeInBytes
long
totalBytes
int
numSegments
size
for
forControl
int
i
i
numSegments
i
totalBytes
info
sizeInBytes
i
if
freeableBytes
totalBytes
return
return
mergeFinish
merge
MergePolicy
OneMerge
notifyAll
if
increfDone
decrefMergeSegments
merge
assert
registerDone
SegmentInfos
sourceSegments
segments
int
end
size
for
forControl
int
i
i
end
i
remove
info
i
remove
info
registerDone
mergeMiddle
int
merge
MergePolicy
OneMerge
checkAborted
directory
String
mergedName
name
SegmentMerger
merger
int
mergedDocCount
SegmentInfos
sourceSegments
segments
SegmentInfos
sourceSegmentsClone
segmentsClone
int
numSegments
size
if
infoStream
message
segString
directory
merger
SegmentMerger
mergedName
merge
boolean
success
try
int
totDocCount
for
forControl
int
i
i
numSegments
i
block
SegmentInfo
si
info
i
IndexReader
reader
get
si
MERGE_READ_BUFFER_SIZE
mergeDocStores
add
reader
totDocCount
numDocs
if
infoStream
block
message
totDocCount
checkAborted
directory
mergedDocCount
docCount
merge
mergeDocStores
assert
mergedDocCount
totDocCount
success
if
merger
block
closeReaders
if
commitMerge
merge
merger
mergedDocCount
return
if
useCompoundFile
block
if
autoCommit
doCommitBeforeMergeCFS
merge
block
long
size
synchronized
size
sizeInBytes
commit
size
success
String
compoundFileName
mergedName
COMPOUND_FILE_EXTENSION
try
createCompoundFile
compoundFileName
success
catchClause
ioe
synchronized
if
isAborted
block
success
handleMergeException
ioe
merge
catchClause
t
handleMergeException
t
merge
if
success
block
if
infoStream
message
synchronized
deleteFile
compoundFileName
if
isAborted
block
if
infoStream
message
deleteFile
compoundFileName
return
synchronized
if
indexOf
info
isAborted
block
deleteFile
compoundFileName
block
setUseCompoundFile
checkpoint
if
autoCommit
block
long
size
synchronized
size
sizeInBytes
commit
size
return
mergedDocCount
addMergeException
merge
MergePolicy
OneMerge
assert
getException
if
contains
merge
mergeGen
mergeGen
add
merge
applyDeletes
boolean
assert
testPoint
SegmentInfos
rollback
SegmentInfos
clone
boolean
success
boolean
changed
try
changed
applyDeletes
segmentInfos
success
if
success
block
if
infoStream
message
int
size
size
for
forControl
int
i
i
size
i
block
String
newDelFileName
info
getDelFileName
i
String
delFileName
info
getDelFileName
i
if
newDelFileName
equals
delFileName
deleteFile
newDelFileName
clear
addAll
rollback
if
changed
checkpoint
return
changed
getBufferedDeleteTermsSize
int
return
getBufferedDeleteTerms
size
getNumBufferedDeleteTerms
int
return
getNumBufferedDeleteTerms
newestSegment
SegmentInfo
return
info
size
segString
String
return
segString
segmentInfos
segString
String
infos
SegmentInfos
StringBuffer
buffer
StringBuffer
int
count
size
for
forControl
int
i
i
count
i
block
if
i
block
append
SegmentInfo
info
info
i
append
segString
directory
if
dir
directory
append
return
toString
HashSet
synced
HashSet
HashSet
syncing
HashSet
startSync
boolean
fileName
String
pending
Collection
synchronized
synced
if
contains
fileName
block
if
contains
fileName
block
add
fileName
return
block
add
fileName
return
return
finishSync
fileName
String
success
boolean
synchronized
synced
assert
contains
fileName
remove
fileName
if
success
add
fileName
notifyAll
waitForAllSynced
boolean
syncing
Collection
synchronized
synced
Iterator
it
iterator
while
hasNext
block
String
fileName
String
next
while
contains
fileName
block
if
contains
fileName
return
try
wait
catchClause
ie
continue
return
syncPause
sizeInBytes
long
if
mergeScheduler
ConcurrentMergeScheduler
maxSyncPauseSeconds
block
long
pauseTime
long
sizeInBytes
long
maxPauseTime
long
maxSyncPauseSeconds
if
pauseTime
maxPauseTime
pauseTime
maxPauseTime
int
sleepCount
int
pauseTime
for
forControl
int
i
i
sleepCount
i
block
synchronized
if
stopMerges
closing
break
try
sleep
catchClause
ie
currentThread
interrupt
doWait
try
wait
catchClause
ie
currentThread
interrupt
startCommit
sizeInBytes
long
assert
testPoint
if
hitOOM
return
try
if
infoStream
message
sizeInBytes
if
sizeInBytes
syncPause
sizeInBytes
SegmentInfos
toSync
long
myChangeCount
synchronized
if
sizeInBytes
stopMerges
return
blockAddIndexes
assert
hasExternalSegments
try
assert
lastCommitChangeCount
changeCount
if
changeCount
lastCommitChangeCount
block
if
infoStream
message
return
if
infoStream
message
segString
segmentInfos
changeCount
toSync
SegmentInfos
clone
incRef
toSync
myChangeCount
changeCount
resumeAddIndexes
assert
testPoint
boolean
setPending
try
while
block
Collection
pending
ArrayList
for
forControl
int
i
i
size
i
block
SegmentInfo
info
info
i
List
files
files
for
forControl
int
j
j
size
j
block
String
fileName
String
get
j
if
startSync
fileName
pending
block
boolean
success
try
assert
fileExists
fileName
fileName
directory
message
fileName
sync
fileName
success
finishSync
fileName
success
if
waitForAllSynced
pending
break
assert
testPoint
synchronized
if
myChangeCount
lastCommitChangeCount
pendingCommit
myChangeCount
pendingCommitChangeCount
block
while
pendingCommit
block
message
doWait
if
getGeneration
getGeneration
updateGeneration
segmentInfos
boolean
success
try
try
prepareCommit
directory
updateGeneration
toSync
assert
pendingCommit
setPending
pendingCommit
toSync
pendingCommitChangeCount
myChangeCount
success
if
success
message
message
message
assert
testPoint
synchronized
if
setPending
decRef
toSync
catchClause
oom
hitOOM
throw
oom
assert
testPoint
isLocked
boolean
directory
Directory
return
makeLock
isLocked
WRITE_LOCK_NAME
isLocked
boolean
directory
String
Directory
dir
getDirectory
directory
try
return
isLocked
dir
close
unlock
directory
Directory
makeLock
release
WRITE_LOCK_NAME
MaxFieldLength
int
limit
String
name
MaxFieldLength
name
String
limit
int
name
name
limit
limit
MaxFieldLength
limit
int
limit
getLimit
int
return
limit
toString
String
return
name
limit
MaxFieldLength
UNLIMITED
MaxFieldLength
MAX_VALUE
MaxFieldLength
LIMITED
MaxFieldLength
DEFAULT_MAX_FIELD_LENGTH
testPoint
boolean
name
String
return
