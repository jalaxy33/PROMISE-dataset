ByteBlockPool
Allocator
recycleByteBlocks
blocks
byte
start
int
end
int
getByteBlock
byte
trackAllocations
boolean
byte
buffers
byte
int
bufferUpto
int
byteUpto
BYTE_BLOCK_SIZE
byte
buffer
int
byteOffset
BYTE_BLOCK_SIZE
boolean
trackAllocations
Allocator
allocator
ByteBlockPool
allocator
Allocator
trackAllocations
boolean
allocator
allocator
trackAllocations
trackAllocations
reset
if
bufferUpto
block
for
forControl
int
i
i
bufferUpto
i
fill
buffers
i
byte
fill
buffers
bufferUpto
byteUpto
byte
if
bufferUpto
recycleByteBlocks
buffers
bufferUpto
bufferUpto
byteUpto
byteOffset
buffer
buffers
nextBuffer
if
bufferUpto
length
block
byte
newBuffers
byte
int
length
arraycopy
buffers
newBuffers
length
buffers
newBuffers
buffer
buffers
bufferUpto
getByteBlock
trackAllocations
bufferUpto
byteUpto
byteOffset
BYTE_BLOCK_SIZE
newSlice
int
size
int
if
byteUpto
BYTE_BLOCK_SIZE
size
nextBuffer
int
upto
byteUpto
byteUpto
size
buffer
byteUpto
return
upto
int
nextLevelArray
int
levelSizeArray
int
FIRST_LEVEL_SIZE
levelSizeArray
allocSlice
int
slice
byte
upto
int
int
level
slice
upto
int
newLevel
nextLevelArray
level
int
newSize
levelSizeArray
newLevel
if
byteUpto
BYTE_BLOCK_SIZE
newSize
nextBuffer
int
newUpto
byteUpto
int
offset
newUpto
byteOffset
byteUpto
newSize
buffer
newUpto
slice
upto
buffer
newUpto
slice
upto
buffer
newUpto
slice
upto
slice
upto
byte
offset
slice
upto
byte
offset
slice
upto
byte
offset
slice
upto
byte
offset
buffer
byteUpto
byte
newLevel
return
newUpto
