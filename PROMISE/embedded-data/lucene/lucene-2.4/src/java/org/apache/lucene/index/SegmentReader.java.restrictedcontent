SegmentReader
String
segment
SegmentInfo
si
int
readBufferSize
FieldInfos
fieldInfos
FieldsReader
fieldsReader
TermInfosReader
tis
TermVectorsReader
termVectorsReaderOrig
CloseableThreadLocal
termVectorsLocal
CloseableThreadLocal
BitVector
deletedDocs
boolean
deletedDocsDirty
boolean
normsDirty
boolean
undeleteAll
int
pendingDeleteCount
boolean
rollbackDeletedDocsDirty
boolean
rollbackNormsDirty
boolean
rollbackUndeleteAll
int
rollbackPendingDeleteCount
boolean
readOnly
IndexInput
freqStream
IndexInput
proxStream
IndexInput
singleNormStream
CompoundFileReader
cfsReader
CompoundFileReader
storeCFSReader
SegmentReader
referencedSegmentReader
Norm
int
refCount
boolean
useSingleNormStream
incRef
assert
refCount
refCount
decRef
assert
refCount
if
refCount
block
close
refCount
Norm
in
IndexInput
useSingleNormStream
boolean
number
int
normSeek
long
refCount
in
in
number
number
normSeek
normSeek
useSingleNormStream
useSingleNormStream
IndexInput
in
byte
bytes
boolean
dirty
int
number
long
normSeek
boolean
rollbackDirty
reWrite
si
SegmentInfo
advanceNormGen
number
IndexOutput
out
directory
createOutput
getNormFileName
number
try
writeBytes
bytes
maxDoc
close
dirty
close
if
in
useSingleNormStream
block
close
in
incRef
incRef
Iterator
it
values
iterator
while
hasNext
block
Norm
norm
Norm
next
incRef
incRefReaderNotNorms
incRef
decRef
decRef
Iterator
it
values
iterator
while
hasNext
block
Norm
norm
Norm
next
decRef
decRefReaderNotNorms
decRef
Map
norms
HashMap
Class
IMPL
try
String
name
getProperty
getName
SegmentReader
IMPL
forName
name
catchClause
e
throw
RuntimeException
e
e
catchClause
se
try
IMPL
forName
getName
SegmentReader
catchClause
e
throw
RuntimeException
e
e
Class
READONLY_IMPL
try
String
name
getProperty
getName
ReadOnlySegmentReader
READONLY_IMPL
forName
name
catchClause
e
throw
RuntimeException
e
e
catchClause
se
try
READONLY_IMPL
forName
getName
ReadOnlySegmentReader
catchClause
e
throw
RuntimeException
e
e
get
SegmentReader
si
SegmentInfo
return
get
READ_ONLY_DEFAULT
dir
si
BUFFER_SIZE
get
SegmentReader
readOnly
boolean
si
SegmentInfo
return
get
readOnly
dir
si
BUFFER_SIZE
get
SegmentReader
si
SegmentInfo
doOpenStores
boolean
return
get
READ_ONLY_DEFAULT
dir
si
BUFFER_SIZE
doOpenStores
get
SegmentReader
si
SegmentInfo
readBufferSize
int
return
get
READ_ONLY_DEFAULT
dir
si
readBufferSize
get
SegmentReader
si
SegmentInfo
readBufferSize
int
doOpenStores
boolean
return
get
READ_ONLY_DEFAULT
dir
si
readBufferSize
doOpenStores
get
SegmentReader
readOnly
boolean
si
SegmentInfo
readBufferSize
int
doOpenStores
boolean
return
get
readOnly
dir
si
readBufferSize
doOpenStores
get
SegmentReader
readOnly
boolean
sis
SegmentInfos
si
SegmentInfo
closeDir
boolean
return
get
readOnly
dir
si
sis
closeDir
BUFFER_SIZE
get
SegmentReader
dir
Directory
si
SegmentInfo
sis
SegmentInfos
closeDir
boolean
ownDir
boolean
readBufferSize
int
return
get
READ_ONLY_DEFAULT
dir
si
sis
closeDir
ownDir
readBufferSize
get
SegmentReader
readOnly
boolean
dir
Directory
si
SegmentInfo
sis
SegmentInfos
closeDir
boolean
ownDir
boolean
readBufferSize
int
doOpenStores
boolean
SegmentReader
instance
try
if
readOnly
instance
SegmentReader
newInstance
instance
SegmentReader
newInstance
catchClause
e
throw
RuntimeException
e
e
init
dir
sis
closeDir
readOnly
initialize
si
readBufferSize
doOpenStores
return
instance
initialize
si
SegmentInfo
readBufferSize
int
doOpenStores
boolean
segment
name
si
si
readBufferSize
readBufferSize
boolean
success
try
Directory
cfsDir
directory
if
getUseCompoundFile
block
cfsReader
CompoundFileReader
directory
segment
COMPOUND_FILE_EXTENSION
readBufferSize
cfsDir
cfsReader
Directory
storeDir
if
doOpenStores
block
if
getDocStoreOffset
block
if
getDocStoreIsCompoundFile
block
storeCFSReader
CompoundFileReader
directory
getDocStoreSegment
COMPOUND_FILE_STORE_EXTENSION
readBufferSize
storeDir
storeCFSReader
block
storeDir
directory
block
storeDir
cfsDir
storeDir
fieldInfos
FieldInfos
cfsDir
segment
boolean
anyProx
int
numFields
size
for
forControl
int
i
anyProx
i
numFields
i
if
fieldInfo
omitTf
i
anyProx
String
fieldsSegment
if
getDocStoreOffset
fieldsSegment
getDocStoreSegment
fieldsSegment
segment
if
doOpenStores
block
fieldsReader
FieldsReader
storeDir
fieldsSegment
fieldInfos
readBufferSize
getDocStoreOffset
docCount
if
getDocStoreOffset
size
docCount
block
throw
CorruptIndexException
name
size
docCount
tis
TermInfosReader
cfsDir
segment
fieldInfos
readBufferSize
loadDeletedDocs
freqStream
openInput
segment
readBufferSize
if
anyProx
proxStream
openInput
segment
readBufferSize
openNorms
cfsDir
readBufferSize
if
doOpenStores
hasVectors
block
String
vectorsSegment
if
getDocStoreOffset
vectorsSegment
getDocStoreSegment
vectorsSegment
segment
termVectorsReaderOrig
TermVectorsReader
storeDir
vectorsSegment
fieldInfos
readBufferSize
getDocStoreOffset
docCount
success
if
success
block
doClose
loadDeletedDocs
if
hasDeletions
si
block
deletedDocs
BitVector
directory
getDelFileName
assert
getDelCount
count
getDelCount
count
assert
getDelCount
maxDoc
count
maxDoc
name
assert
getDelCount
doReopen
DirectoryIndexReader
infos
SegmentInfos
DirectoryIndexReader
newReader
if
size
block
SegmentInfo
si
info
if
equals
name
getUseCompoundFile
si
getUseCompoundFile
block
newReader
reopenSegment
si
block
newReader
get
readOnly
infos
info
block
if
readOnly
return
ReadOnlyMultiSegmentReader
directory
infos
closeDirectory
SegmentReader
return
MultiSegmentReader
directory
infos
closeDirectory
SegmentReader
return
newReader
reopenSegment
SegmentReader
si
SegmentInfo
boolean
deletionsUpToDate
si
hasDeletions
hasDeletions
hasDeletions
si
getDelFileName
equals
getDelFileName
boolean
normsUpToDate
boolean
fieldNormsChanged
boolean
size
if
normsUpToDate
block
for
forControl
int
i
i
size
i
block
if
si
getNormFileName
i
equals
getNormFileName
i
block
normsUpToDate
fieldNormsChanged
i
if
normsUpToDate
deletionsUpToDate
block
return
SegmentReader
clone
if
readOnly
clone
ReadOnlySegmentReader
clone
SegmentReader
boolean
success
try
readOnly
readOnly
directory
directory
si
si
segment
segment
readBufferSize
readBufferSize
cfsReader
cfsReader
storeCFSReader
storeCFSReader
fieldInfos
fieldInfos
tis
tis
freqStream
freqStream
proxStream
proxStream
termVectorsReaderOrig
termVectorsReaderOrig
String
fieldsSegment
Directory
storeDir
directory
if
getDocStoreOffset
block
fieldsSegment
getDocStoreSegment
if
storeCFSReader
block
storeDir
storeCFSReader
block
fieldsSegment
segment
if
cfsReader
block
storeDir
cfsReader
if
fieldsReader
block
fieldsReader
FieldsReader
storeDir
fieldsSegment
fieldInfos
readBufferSize
getDocStoreOffset
docCount
if
deletionsUpToDate
block
deletedDocs
loadDeletedDocs
block
deletedDocs
deletedDocs
norms
HashMap
if
normsUpToDate
block
for
forControl
int
i
i
length
i
block
if
fieldNormsChanged
i
block
String
curField
fieldInfo
name
i
Norm
norm
Norm
norms
get
curField
incRef
put
curField
norm
openNorms
getUseCompoundFile
cfsReader
directory
readBufferSize
block
Iterator
it
keySet
iterator
while
hasNext
block
String
field
String
next
Norm
norm
Norm
get
field
incRef
put
field
norm
if
singleNormStream
block
for
forControl
int
i
i
size
i
block
FieldInfo
fi
fieldInfo
i
if
isIndexed
omitNorms
block
Directory
d
getUseCompoundFile
cfsReader
directory
String
fileName
getNormFileName
number
if
hasSeparateNorms
number
block
continue
if
endsWith
NORMS_EXTENSION
block
singleNormStream
openInput
fileName
readBufferSize
break
success
if
referencedSegmentReader
block
referencedSegmentReader
referencedSegmentReader
incRefReaderNotNorms
block
referencedSegmentReader
incRefReaderNotNorms
if
success
block
decRef
return
clone
commitChanges
if
deletedDocsDirty
block
advanceDelGen
write
directory
getDelFileName
setDelCount
getDelCount
pendingDeleteCount
if
undeleteAll
hasDeletions
block
clearDelGen
setDelCount
if
normsDirty
block
setNumFields
size
Iterator
it
values
iterator
while
hasNext
block
Norm
norm
Norm
next
if
dirty
block
reWrite
si
deletedDocsDirty
normsDirty
undeleteAll
getFieldsReader
FieldsReader
return
fieldsReader
doClose
boolean
hasReferencedReader
referencedSegmentReader
close
if
hasReferencedReader
block
decRefReaderNotNorms
referencedSegmentReader
deletedDocs
if
singleNormStream
block
close
singleNormStream
if
fieldsReader
block
close
if
hasReferencedReader
block
if
tis
block
close
if
freqStream
close
if
proxStream
close
if
termVectorsReaderOrig
close
if
cfsReader
close
if
storeCFSReader
close
doClose
hasDeletions
boolean
si
SegmentInfo
return
hasDeletions
hasDeletions
boolean
return
deletedDocs
usesCompoundFile
boolean
si
SegmentInfo
return
getUseCompoundFile
hasSeparateNorms
boolean
si
SegmentInfo
return
hasSeparateNorms
doDelete
docNum
int
if
deletedDocs
deletedDocs
BitVector
maxDoc
deletedDocsDirty
undeleteAll
if
getAndSet
docNum
pendingDeleteCount
doUndeleteAll
deletedDocs
deletedDocsDirty
undeleteAll
files
List
return
ArrayList
files
terms
TermEnum
ensureOpen
return
terms
terms
TermEnum
t
Term
ensureOpen
return
terms
t
getFieldInfos
FieldInfos
return
fieldInfos
document
Document
n
int
fieldSelector
FieldSelector
ensureOpen
if
isDeleted
n
throw
IllegalArgumentException
return
doc
n
fieldSelector
isDeleted
boolean
n
int
return
deletedDocs
get
n
termDocs
TermDocs
ensureOpen
return
SegmentTermDocs
termPositions
TermPositions
ensureOpen
return
SegmentTermPositions
docFreq
int
t
Term
ensureOpen
TermInfo
ti
get
t
if
ti
return
docFreq
return
numDocs
int
int
n
maxDoc
if
deletedDocs
n
count
return
n
maxDoc
int
return
docCount
setTermInfosIndexDivisor
indexDivisor
int
setIndexDivisor
indexDivisor
getTermInfosIndexDivisor
int
return
getIndexDivisor
getFieldNames
Collection
fieldOption
IndexReader
FieldOption
ensureOpen
Set
fieldSet
HashSet
for
forControl
int
i
i
size
i
block
FieldInfo
fi
fieldInfo
i
if
fieldOption
ALL
block
add
name
if
isIndexed
fieldOption
UNINDEXED
block
add
name
if
omitTf
fieldOption
OMIT_TF
block
add
name
if
storePayloads
fieldOption
STORES_PAYLOADS
block
add
name
if
isIndexed
fieldOption
INDEXED
block
add
name
if
isIndexed
storeTermVector
fieldOption
INDEXED_NO_TERMVECTOR
block
add
name
if
storeTermVector
storePositionWithTermVector
storeOffsetWithTermVector
fieldOption
TERMVECTOR
block
add
name
if
isIndexed
storeTermVector
fieldOption
INDEXED_WITH_TERMVECTOR
block
add
name
if
storePositionWithTermVector
storeOffsetWithTermVector
fieldOption
TERMVECTOR_WITH_POSITION
block
add
name
if
storeOffsetWithTermVector
storePositionWithTermVector
fieldOption
TERMVECTOR_WITH_OFFSET
block
add
name
if
storeOffsetWithTermVector
storePositionWithTermVector
fieldOption
TERMVECTOR_WITH_POSITION_OFFSET
block
add
name
return
fieldSet
hasNorms
boolean
field
String
ensureOpen
return
containsKey
field
createFakeNorms
byte
size
int
byte
ones
byte
size
fill
ones
encodeNorm
return
ones
byte
ones
fakeNorms
byte
if
ones
ones
createFakeNorms
maxDoc
return
ones
getNorms
byte
field
String
Norm
norm
Norm
get
field
if
norm
return
synchronized
norm
if
bytes
block
byte
bytes
byte
maxDoc
norms
field
bytes
bytes
bytes
close
return
bytes
norms
byte
field
String
ensureOpen
byte
bytes
getNorms
field
if
bytes
bytes
fakeNorms
return
bytes
doSetNorm
doc
int
field
String
value
byte
Norm
norm
Norm
get
field
if
norm
return
dirty
normsDirty
norms
doc
field
value
norms
field
String
bytes
byte
offset
int
ensureOpen
Norm
norm
Norm
get
field
if
norm
block
arraycopy
fakeNorms
bytes
offset
maxDoc
return
synchronized
norm
if
bytes
block
arraycopy
bytes
bytes
offset
maxDoc
return
IndexInput
normStream
if
useSingleNormStream
block
normStream
singleNormStream
block
normStream
in
seek
normSeek
readBytes
bytes
offset
maxDoc
openNorms
cfsDir
Directory
readBufferSize
int
long
nextNormSeek
length
int
maxDoc
maxDoc
for
forControl
int
i
i
size
i
block
FieldInfo
fi
fieldInfo
i
if
containsKey
name
block
continue
if
isIndexed
omitNorms
block
Directory
d
directory
String
fileName
getNormFileName
number
if
hasSeparateNorms
number
block
d
cfsDir
boolean
singleNormFile
endsWith
NORMS_EXTENSION
IndexInput
normInput
long
normSeek
if
singleNormFile
block
normSeek
nextNormSeek
if
singleNormStream
block
singleNormStream
openInput
fileName
readBufferSize
normInput
singleNormStream
block
normSeek
normInput
openInput
fileName
put
name
Norm
normInput
singleNormFile
number
normSeek
nextNormSeek
maxDoc
normsClosed
boolean
if
singleNormStream
block
return
Iterator
it
values
iterator
while
hasNext
block
Norm
norm
Norm
next
if
refCount
block
return
return
normsClosed
boolean
field
String
Norm
norm
Norm
get
field
return
refCount
getTermVectorsReader
TermVectorsReader
assert
termVectorsReaderOrig
TermVectorsReader
tvReader
TermVectorsReader
get
if
tvReader
block
try
tvReader
TermVectorsReader
clone
catchClause
cnse
return
set
tvReader
return
tvReader
getTermFreqVector
TermFreqVector
docNumber
int
field
String
ensureOpen
FieldInfo
fi
fieldInfo
field
if
fi
storeTermVector
termVectorsReaderOrig
return
TermVectorsReader
termVectorsReader
getTermVectorsReader
if
termVectorsReader
return
return
get
docNumber
field
getTermFreqVector
docNumber
int
field
String
mapper
TermVectorMapper
ensureOpen
FieldInfo
fi
fieldInfo
field
if
fi
storeTermVector
termVectorsReaderOrig
return
TermVectorsReader
termVectorsReader
getTermVectorsReader
if
termVectorsReader
block
return
get
docNumber
field
mapper
getTermFreqVector
docNumber
int
mapper
TermVectorMapper
ensureOpen
if
termVectorsReaderOrig
return
TermVectorsReader
termVectorsReader
getTermVectorsReader
if
termVectorsReader
return
get
docNumber
mapper
getTermFreqVectors
TermFreqVector
docNumber
int
ensureOpen
if
termVectorsReaderOrig
return
TermVectorsReader
termVectorsReader
getTermVectorsReader
if
termVectorsReader
return
return
get
docNumber
fieldInfos
FieldInfos
return
fieldInfos
getSegmentName
String
return
segment
getSegmentInfo
SegmentInfo
return
si
setSegmentInfo
info
SegmentInfo
si
info
startCommit
startCommit
rollbackDeletedDocsDirty
deletedDocsDirty
rollbackNormsDirty
normsDirty
rollbackUndeleteAll
undeleteAll
rollbackPendingDeleteCount
pendingDeleteCount
Iterator
it
values
iterator
while
hasNext
block
Norm
norm
Norm
next
rollbackDirty
dirty
rollbackCommit
rollbackCommit
deletedDocsDirty
rollbackDeletedDocsDirty
normsDirty
rollbackNormsDirty
undeleteAll
rollbackUndeleteAll
pendingDeleteCount
rollbackPendingDeleteCount
Iterator
it
values
iterator
while
hasNext
block
Norm
norm
Norm
next
dirty
rollbackDirty
DirectoryIndexReader
