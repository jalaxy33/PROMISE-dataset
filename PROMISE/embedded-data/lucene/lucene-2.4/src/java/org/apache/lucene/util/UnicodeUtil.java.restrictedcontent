UnicodeUtil
int
UNI_SUR_HIGH_START
int
UNI_SUR_HIGH_END
int
UNI_SUR_LOW_START
int
UNI_SUR_LOW_END
int
UNI_REPLACEMENT_CHAR
long
UNI_MAX_BMP
int
HALF_BASE
long
HALF_SHIFT
long
HALF_MASK
UTF8Result
byte
result
byte
int
length
setLength
newLength
int
if
length
newLength
block
byte
newArray
byte
int
newLength
arraycopy
result
newArray
length
result
newArray
length
newLength
UTF16Result
char
result
char
int
offsets
int
int
length
setLength
newLength
int
if
length
newLength
block
char
newArray
char
int
newLength
arraycopy
result
newArray
length
result
newArray
length
newLength
copyText
other
UTF16Result
setLength
length
arraycopy
result
result
length
UTF16toUTF8
source
char
offset
int
result
UTF8Result
int
upto
int
i
offset
byte
out
result
while
block
int
code
int
source
i
if
upto
length
block
byte
newOut
byte
length
assert
length
upto
arraycopy
out
newOut
upto
result
out
newOut
if
code
out
upto
byte
code
if
code
block
out
upto
byte
code
out
upto
byte
code
if
code
code
block
if
code
break
out
upto
byte
code
out
upto
byte
code
out
upto
byte
code
block
if
code
source
i
block
int
utf32
int
source
i
if
utf32
utf32
block
utf32
code
utf32
i
out
upto
byte
utf32
out
upto
byte
utf32
out
upto
byte
utf32
out
upto
byte
utf32
continue
out
upto
byte
out
upto
byte
out
upto
byte
length
upto
UTF16toUTF8
source
char
offset
int
length
int
result
UTF8Result
int
upto
int
i
offset
int
end
offset
length
byte
out
result
while
i
end
block
int
code
int
source
i
if
upto
length
block
byte
newOut
byte
length
assert
length
upto
arraycopy
out
newOut
upto
result
out
newOut
if
code
out
upto
byte
code
if
code
block
out
upto
byte
code
out
upto
byte
code
if
code
code
block
out
upto
byte
code
out
upto
byte
code
out
upto
byte
code
block
if
code
i
end
source
i
block
int
utf32
int
source
i
if
utf32
utf32
block
utf32
code
utf32
i
out
upto
byte
utf32
out
upto
byte
utf32
out
upto
byte
utf32
out
upto
byte
utf32
continue
out
upto
byte
out
upto
byte
out
upto
byte
length
upto
UTF16toUTF8
s
String
offset
int
length
int
result
UTF8Result
int
end
offset
length
byte
out
result
int
upto
for
forControl
int
i
offset
i
end
i
block
int
code
int
charAt
i
if
upto
length
block
byte
newOut
byte
length
assert
length
upto
arraycopy
out
newOut
upto
result
out
newOut
if
code
out
upto
byte
code
if
code
block
out
upto
byte
code
out
upto
byte
code
if
code
code
block
out
upto
byte
code
out
upto
byte
code
out
upto
byte
code
block
if
code
i
end
block
int
utf32
int
charAt
i
if
utf32
utf32
block
utf32
code
utf32
i
out
upto
byte
utf32
out
upto
byte
utf32
out
upto
byte
utf32
out
upto
byte
utf32
continue
out
upto
byte
out
upto
byte
out
upto
byte
length
upto
UTF8toUTF16
utf8
byte
offset
int
length
int
result
UTF16Result
int
end
offset
length
char
out
result
if
length
end
block
int
newOffsets
int
end
arraycopy
offsets
newOffsets
length
offsets
newOffsets
int
offsets
offsets
int
upto
offset
while
offsets
upto
upto
int
outUpto
offsets
upto
if
outUpto
length
length
block
char
newOut
char
outUpto
length
arraycopy
out
newOut
outUpto
result
out
newOut
while
upto
end
block
int
b
utf8
upto
int
ch
offsets
upto
outUpto
if
b
block
assert
b
ch
b
if
b
block
ch
b
utf8
upto
offsets
upto
if
b
block
ch
b
utf8
upto
utf8
upto
offsets
upto
offsets
upto
block
assert
b
ch
b
utf8
upto
utf8
upto
utf8
upto
offsets
upto
offsets
upto
offsets
upto
if
ch
UNI_MAX_BMP
block
out
outUpto
char
ch
block
int
chHalf
ch
HALF_BASE
out
outUpto
char
chHalf
HALF_SHIFT
UNI_SUR_HIGH_START
out
outUpto
char
chHalf
HALF_MASK
UNI_SUR_LOW_START
offsets
upto
outUpto
length
outUpto
