DocumentsWriter
IndexWriter
writer
Directory
directory
String
segment
String
docStoreSegment
int
docStoreOffset
int
nextDocID
int
numDocsInRAM
int
numDocsInStore
int
MAX_THREAD_STATE
DocumentsWriterThreadState
threadStates
DocumentsWriterThreadState
HashMap
threadBindings
HashMap
int
pauseThreads
boolean
flushPending
boolean
bufferIsFull
boolean
aborting
DocFieldProcessor
docFieldProcessor
PrintStream
infoStream
int
maxFieldLength
DEFAULT_MAX_FIELD_LENGTH
Similarity
similarity
List
newFiles
DocState
DocumentsWriter
docWriter
Analyzer
analyzer
int
maxFieldLength
PrintStream
infoStream
Similarity
similarity
int
docID
Document
doc
String
maxTermPrefix
testPoint
boolean
name
String
return
testPoint
name
FlushState
DocumentsWriter
docWriter
Directory
directory
String
segmentName
String
docStoreSegmentName
int
numDocsInRAM
int
numDocsInStore
Collection
flushedFiles
segmentFileName
String
ext
String
return
segmentName
ext
DocWriter
DocWriter
next
int
docID
finish
abort
sizeInBytes
long
setNext
next
DocWriter
next
next
DocConsumer
consumer
BufferedDeletes
deletesInRAM
BufferedDeletes
BufferedDeletes
deletesFlushed
BufferedDeletes
int
maxBufferedDeleteTerms
DEFAULT_MAX_BUFFERED_DELETE_TERMS
long
ramBufferSize
long
DEFAULT_RAM_BUFFER_SIZE_MB
long
waitQueuePauseBytes
long
ramBufferSize
long
waitQueueResumeBytes
long
ramBufferSize
long
freeTrigger
long
DEFAULT_RAM_BUFFER_SIZE_MB
long
freeLevel
long
DEFAULT_RAM_BUFFER_SIZE_MB
int
maxBufferedDocs
DEFAULT_MAX_BUFFERED_DOCS
int
flushedDocCount
updateFlushedDocCount
n
int
flushedDocCount
n
getFlushedDocCount
int
return
flushedDocCount
setFlushedDocCount
n
int
flushedDocCount
n
boolean
closed
DocumentsWriter
directory
Directory
writer
IndexWriter
directory
directory
writer
writer
similarity
getSimilarity
flushedDocCount
maxDoc
TermsHashConsumer
termVectorsWriter
TermVectorsTermsWriter
TermsHashConsumer
freqProxWriter
FreqProxTermsWriter
InvertedDocConsumer
termsHash
TermsHash
freqProxWriter
TermsHash
termVectorsWriter
NormsWriter
normsWriter
NormsWriter
DocInverter
docInverter
DocInverter
termsHash
normsWriter
StoredFieldsWriter
fieldsWriter
StoredFieldsWriter
DocFieldConsumers
docFieldConsumers
DocFieldConsumers
docInverter
fieldsWriter
consumer
docFieldProcessor
DocFieldProcessor
docFieldConsumers
hasProx
boolean
return
hasProx
setInfoStream
infoStream
PrintStream
infoStream
infoStream
for
forControl
int
i
i
length
i
threadStates
i
docState
infoStream
infoStream
setMaxFieldLength
maxFieldLength
int
maxFieldLength
maxFieldLength
for
forControl
int
i
i
length
i
threadStates
i
docState
maxFieldLength
maxFieldLength
setSimilarity
similarity
Similarity
similarity
similarity
for
forControl
int
i
i
length
i
threadStates
i
docState
similarity
similarity
setRAMBufferSizeMB
mb
double
if
mb
DISABLE_AUTO_FLUSH
block
ramBufferSize
DISABLE_AUTO_FLUSH
waitQueuePauseBytes
waitQueueResumeBytes
block
ramBufferSize
long
mb
waitQueuePauseBytes
long
ramBufferSize
waitQueueResumeBytes
long
ramBufferSize
freeTrigger
long
ramBufferSize
freeLevel
long
ramBufferSize
getRAMBufferSizeMB
double
if
ramBufferSize
DISABLE_AUTO_FLUSH
block
return
ramBufferSize
block
return
ramBufferSize
setMaxBufferedDocs
count
int
maxBufferedDocs
count
getMaxBufferedDocs
int
return
maxBufferedDocs
getSegment
String
return
segment
getNumDocsInRAM
int
return
numDocsInRAM
getDocStoreSegment
String
return
docStoreSegment
getDocStoreOffset
int
return
docStoreOffset
closeDocStore
String
assert
allThreadsIdle
if
infoStream
message
size
docStoreSegment
numDocsInStore
boolean
success
try
initFlushState
clear
closeDocStore
flushState
assert
size
String
s
docStoreSegment
docStoreSegment
docStoreOffset
numDocsInStore
success
return
s
if
success
block
abort
Collection
abortedFiles
FlushState
flushState
abortedFiles
Collection
return
abortedFiles
message
message
String
message
message
List
openFiles
ArrayList
List
closedFiles
ArrayList
openFiles
List
return
List
ArrayList
openFiles
closedFiles
List
return
List
ArrayList
closedFiles
addOpenFile
name
String
assert
contains
name
add
name
removeOpenFile
name
String
assert
contains
name
remove
name
add
name
setAborting
aborting
abort
try
message
abort
pauseAllThreads
try
assert
numWaiting
waitingBytes
try
abortedFiles
openFiles
catchClause
t
abortedFiles
clear
clear
for
forControl
int
i
i
length
i
try
threadStates
i
consumer
abort
catchClause
t
try
abort
catchClause
t
docStoreSegment
numDocsInStore
docStoreOffset
doAfterFlush
resumeAllThreads
aborting
notifyAll
doAfterFlush
assert
allThreadsIdle
clear
reset
segment
numDocsInRAM
nextDocID
bufferIsFull
flushPending
for
forControl
int
i
i
length
i
threadStates
i
doAfterFlush
numBytesUsed
pauseAllThreads
boolean
pauseThreads
while
allThreadsIdle
block
try
wait
catchClause
e
currentThread
interrupt
return
aborting
resumeAllThreads
pauseThreads
assert
pauseThreads
if
pauseThreads
notifyAll
allThreadsIdle
boolean
for
forControl
int
i
i
length
i
if
threadStates
i
isIdle
return
return
initFlushState
onlyDocStore
boolean
initSegmentName
onlyDocStore
if
flushState
block
flushState
FlushState
directory
directory
docWriter
docStoreSegmentName
docStoreSegment
segmentName
segment
numDocsInRAM
numDocsInRAM
numDocsInStore
numDocsInStore
flushedFiles
HashSet
flush
int
closeDocStore
boolean
assert
allThreadsIdle
assert
numDocsInRAM
assert
nextDocID
numDocsInRAM
assert
numWaiting
assert
waitingBytes
initFlushState
docStoreOffset
numDocsInStore
if
infoStream
message
segmentName
numDocsInRAM
boolean
success
try
if
closeDocStore
block
assert
docStoreSegmentName
assert
equals
segmentName
closeDocStore
numDocsInStore
Collection
threads
HashSet
for
forControl
int
i
i
length
i
add
threadStates
i
consumer
flush
threads
flushState
if
infoStream
block
long
newSegmentSize
segmentSize
segmentName
String
message
numBytesUsed
newSegmentSize
format
numDocsInRAM
newSegmentSize
format
newSegmentSize
numBytesUsed
message
message
flushedDocCount
numDocsInRAM
doAfterFlush
success
if
success
block
abort
assert
waitingBytes
return
numDocsInRAM
createCompoundFile
segment
String
CompoundFileWriter
cfsWriter
CompoundFileWriter
directory
segment
COMPOUND_FILE_EXTENSION
Iterator
it
iterator
while
hasNext
addFile
String
next
close
setFlushPending
boolean
if
flushPending
return
block
flushPending
return
clearFlushPending
flushPending
pushDeletes
update
deletesInRAM
close
closed
notifyAll
initSegmentName
onlyDocStore
boolean
if
segment
onlyDocStore
docStoreSegment
block
segment
newSegmentName
assert
numDocsInRAM
if
docStoreSegment
block
docStoreSegment
segment
assert
numDocsInStore
getThreadState
DocumentsWriterThreadState
doc
Document
delTerm
Term
DocumentsWriterThreadState
state
DocumentsWriterThreadState
get
currentThread
if
state
block
DocumentsWriterThreadState
minThreadState
for
forControl
int
i
i
length
i
block
DocumentsWriterThreadState
ts
threadStates
i
if
minThreadState
numThreads
numThreads
minThreadState
ts
if
minThreadState
numThreads
length
MAX_THREAD_STATE
block
state
minThreadState
numThreads
block
DocumentsWriterThreadState
newArray
DocumentsWriterThreadState
length
if
length
arraycopy
threadStates
newArray
length
state
newArray
length
DocumentsWriterThreadState
threadStates
newArray
put
currentThread
state
waitReady
state
initSegmentName
isIdle
boolean
success
try
docID
nextDocID
assert
testPoint
if
delTerm
block
addDeleteTerm
delTerm
docID
doFlushAfter
timeToFlushDeletes
assert
testPoint
nextDocID
numDocsInRAM
if
flushPending
maxBufferedDocs
DISABLE_AUTO_FLUSH
numDocsInRAM
maxBufferedDocs
block
flushPending
doFlushAfter
success
if
success
block
isIdle
notifyAll
if
doFlushAfter
block
doFlushAfter
flushPending
return
state
addDocument
boolean
doc
Document
analyzer
Analyzer
return
updateDocument
doc
analyzer
updateDocument
boolean
t
Term
doc
Document
analyzer
Analyzer
return
updateDocument
doc
analyzer
t
updateDocument
boolean
doc
Document
analyzer
Analyzer
delTerm
Term
DocumentsWriterThreadState
state
getThreadState
doc
delTerm
DocState
docState
docState
doc
doc
analyzer
analyzer
boolean
success
try
DocWriter
perDoc
processDocument
finishDocument
state
perDoc
success
if
success
block
synchronized
if
aborting
block
isIdle
notifyAll
abort
block
docID
docID
boolean
success2
try
add
skipDocWriter
success2
if
success2
block
isIdle
notifyAll
abort
return
isIdle
notifyAll
if
doFlushAfter
block
doFlushAfter
flushPending
notifyAll
addDeleteDocID
docID
return
doFlushAfter
timeToFlushDeletes
getNumBufferedDeleteTerms
int
return
numTerms
getBufferedDeleteTerms
HashMap
return
terms
remapDeletes
infos
SegmentInfos
docMaps
int
delCounts
int
merge
MergePolicy
OneMerge
mergeDocCount
int
if
docMaps
return
MergeDocIDRemapper
mapper
MergeDocIDRemapper
infos
docMaps
delCounts
merge
mergeDocCount
remap
mapper
infos
docMaps
delCounts
merge
mergeDocCount
remap
mapper
infos
docMaps
delCounts
merge
mergeDocCount
flushedDocCount
docShift
waitReady
state
DocumentsWriterThreadState
while
closed
state
isIdle
pauseThreads
flushPending
aborting
block
try
wait
catchClause
e
currentThread
interrupt
if
closed
throw
AlreadyClosedException
bufferDeleteTerms
boolean
terms
Term
waitReady
for
forControl
int
i
i
length
i
addDeleteTerm
terms
i
numDocsInRAM
return
timeToFlushDeletes
bufferDeleteTerm
boolean
term
Term
waitReady
addDeleteTerm
term
numDocsInRAM
return
timeToFlushDeletes
bufferDeleteQueries
boolean
queries
Query
waitReady
for
forControl
int
i
i
length
i
addDeleteQuery
queries
i
numDocsInRAM
return
timeToFlushDeletes
bufferDeleteQuery
boolean
query
Query
waitReady
addDeleteQuery
query
numDocsInRAM
return
timeToFlushDeletes
deletesFull
boolean
return
maxBufferedDeleteTerms
DISABLE_AUTO_FLUSH
numTerms
size
size
maxBufferedDeleteTerms
timeToFlushDeletes
boolean
return
bufferIsFull
deletesFull
setFlushPending
setMaxBufferedDeleteTerms
maxBufferedDeleteTerms
int
maxBufferedDeleteTerms
maxBufferedDeleteTerms
getMaxBufferedDeleteTerms
int
return
maxBufferedDeleteTerms
hasDeletes
boolean
return
any
applyDeletes
boolean
infos
SegmentInfos
if
hasDeletes
return
if
infoStream
message
numTerms
size
size
size
int
infosEnd
size
int
docStart
boolean
any
for
forControl
int
i
i
infosEnd
i
block
IndexReader
reader
get
info
i
boolean
success
try
any
applyDeletes
reader
docStart
docStart
maxDoc
success
if
reader
block
try
if
success
doCommit
doClose
clear
return
any
applyDeletes
boolean
reader
IndexReader
docIDStart
int
int
docEnd
docIDStart
maxDoc
boolean
any
Iterator
iter
entrySet
iterator
while
hasNext
block
Entry
entry
Entry
next
Term
term
Term
getKey
TermDocs
docs
termDocs
term
if
docs
block
int
limit
BufferedDeletes
Num
getValue
try
while
next
block
int
docID
doc
if
docIDStart
docID
limit
break
deleteDocument
docID
any
close
iter
iterator
while
hasNext
block
int
docID
Integer
next
if
docID
docIDStart
docID
docEnd
block
deleteDocument
docID
docIDStart
any
IndexSearcher
searcher
IndexSearcher
reader
iter
entrySet
iterator
while
hasNext
block
Entry
entry
Entry
next
Query
query
Query
getKey
int
limit
Integer
getValue
Weight
weight
weight
searcher
Scorer
scorer
scorer
reader
while
next
block
int
docID
doc
if
docIDStart
docID
limit
break
deleteDocument
docID
any
close
return
any
addDeleteTerm
term
Term
docCount
int
BufferedDeletes
Num
num
BufferedDeletes
Num
get
term
int
docIDUpto
flushedDocCount
docCount
if
num
put
term
BufferedDeletes
Num
docIDUpto
setNum
docIDUpto
numTerms
addDeleteDocID
docID
int
add
Integer
flushedDocCount
docID
addDeleteQuery
query
Query
docID
int
put
query
Integer
flushedDocCount
docID
doBalanceRAM
boolean
return
ramBufferSize
DISABLE_AUTO_FLUSH
bufferIsFull
numBytesUsed
ramBufferSize
numBytesAlloc
freeTrigger
finishDocument
perThread
DocumentsWriterThreadState
docWriter
DocWriter
if
doBalanceRAM
balanceRAM
synchronized
assert
docWriter
docID
docID
if
aborting
block
if
docWriter
try
abort
catchClause
t
isIdle
notifyAll
return
boolean
doPause
if
docWriter
doPause
add
docWriter
block
docID
docID
doPause
add
skipDocWriter
if
doPause
waitForWaitQueue
if
bufferIsFull
flushPending
block
flushPending
doFlushAfter
isIdle
notifyAll
waitForWaitQueue
do
doResume
block
try
wait
catchClause
e
currentThread
interrupt
SkipDocWriter
finish
abort
sizeInBytes
long
return
DocWriter
SkipDocWriter
skipDocWriter
SkipDocWriter
getRAMUsed
long
return
numBytesUsed
long
numBytesAlloc
long
numBytesUsed
NumberFormat
nf
getInstance
segmentSize
long
segmentName
String
assert
infoStream
long
size
fileLength
segmentName
fileLength
segmentName
fileLength
segmentName
fileLength
segmentName
String
normFileName
segmentName
if
fileExists
normFileName
size
fileLength
normFileName
return
size
int
OBJECT_HEADER_BYTES
int
POINTER_NUM_BYTE
int
INT_NUM_BYTE
int
CHAR_NUM_BYTE
int
BYTE_BLOCK_SHIFT
int
BYTE_BLOCK_SIZE
int
BYTE_BLOCK_SHIFT
int
BYTE_BLOCK_MASK
BYTE_BLOCK_SIZE
int
BYTE_BLOCK_NOT_MASK
BYTE_BLOCK_MASK
ByteBlockAllocator
ArrayList
freeByteBlocks
ArrayList
getByteBlock
byte
trackAllocations
boolean
synchronized
int
size
size
byte
b
if
size
block
numBytesAlloc
BYTE_BLOCK_SIZE
b
byte
BYTE_BLOCK_SIZE
b
byte
remove
size
if
trackAllocations
numBytesUsed
BYTE_BLOCK_SIZE
assert
numBytesUsed
numBytesAlloc
return
b
recycleByteBlocks
blocks
byte
start
int
end
int
synchronized
for
forControl
int
i
start
i
end
i
add
blocks
i
ByteBlockPool
Allocator
int
INT_BLOCK_SHIFT
int
INT_BLOCK_SIZE
int
INT_BLOCK_SHIFT
int
INT_BLOCK_MASK
INT_BLOCK_SIZE
ArrayList
freeIntBlocks
ArrayList
getIntBlock
int
trackAllocations
boolean
int
size
size
int
b
if
size
block
numBytesAlloc
INT_BLOCK_SIZE
INT_NUM_BYTE
b
int
INT_BLOCK_SIZE
b
int
remove
size
if
trackAllocations
numBytesUsed
INT_BLOCK_SIZE
INT_NUM_BYTE
assert
numBytesUsed
numBytesAlloc
return
b
bytesAllocated
numBytes
long
numBytesAlloc
numBytes
assert
numBytesUsed
numBytesAlloc
bytesUsed
numBytes
long
numBytesUsed
numBytes
assert
numBytesUsed
numBytesAlloc
recycleIntBlocks
blocks
int
start
int
end
int
for
forControl
int
i
start
i
end
i
add
blocks
i
ByteBlockAllocator
byteBlockAllocator
ByteBlockAllocator
int
CHAR_BLOCK_SHIFT
int
CHAR_BLOCK_SIZE
int
CHAR_BLOCK_SHIFT
int
CHAR_BLOCK_MASK
CHAR_BLOCK_SIZE
int
MAX_TERM_LENGTH
CHAR_BLOCK_SIZE
ArrayList
freeCharBlocks
ArrayList
getCharBlock
char
int
size
size
char
c
if
size
block
numBytesAlloc
CHAR_BLOCK_SIZE
CHAR_NUM_BYTE
c
char
CHAR_BLOCK_SIZE
c
char
remove
size
numBytesUsed
CHAR_BLOCK_SIZE
CHAR_NUM_BYTE
assert
numBytesUsed
numBytesAlloc
return
c
recycleCharBlocks
blocks
char
numBlocks
int
for
forControl
int
i
i
numBlocks
i
add
blocks
i
toMB
String
v
long
return
format
v
balanceRAM
long
flushTrigger
long
ramBufferSize
if
numBytesAlloc
freeTrigger
block
if
infoStream
message
toMB
numBytesUsed
toMB
flushTrigger
toMB
numBytesAlloc
toMB
freeTrigger
toMB
size
BYTE_BLOCK_SIZE
toMB
size
CHAR_BLOCK_SIZE
CHAR_NUM_BYTE
long
startBytesAlloc
numBytesAlloc
int
iter
boolean
any
while
numBytesAlloc
freeLevel
block
synchronized
if
size
size
size
any
block
bufferIsFull
numBytesUsed
flushTrigger
if
infoStream
block
if
numBytesUsed
flushTrigger
message
message
assert
numBytesUsed
numBytesAlloc
break
if
iter
size
block
remove
size
numBytesAlloc
BYTE_BLOCK_SIZE
if
iter
size
block
remove
size
numBytesAlloc
CHAR_BLOCK_SIZE
CHAR_NUM_BYTE
if
iter
size
block
remove
size
numBytesAlloc
INT_BLOCK_SIZE
INT_NUM_BYTE
if
iter
any
any
freeRAM
iter
if
infoStream
message
format
startBytesAlloc
numBytesAlloc
format
numBytesUsed
format
numBytesAlloc
block
synchronized
if
numBytesUsed
flushTrigger
block
if
infoStream
message
format
numBytesUsed
format
numBytesAlloc
format
flushTrigger
bufferIsFull
WaitQueue
waitQueue
WaitQueue
WaitQueue
DocWriter
waiting
int
nextWriteDocID
int
nextWriteLoc
int
numWaiting
long
waitingBytes
WaitQueue
waiting
DocWriter
reset
assert
numWaiting
assert
waitingBytes
nextWriteDocID
doResume
boolean
return
waitingBytes
waitQueueResumeBytes
doPause
boolean
return
waitingBytes
waitQueuePauseBytes
abort
int
count
for
forControl
int
i
i
length
i
block
DocWriter
doc
waiting
i
if
doc
block
abort
waiting
i
count
waitingBytes
assert
count
numWaiting
numWaiting
writeDocument
doc
DocWriter
assert
doc
skipDocWriter
nextWriteDocID
docID
boolean
success
try
finish
nextWriteDocID
numDocsInStore
nextWriteLoc
assert
nextWriteLoc
length
if
nextWriteLoc
length
nextWriteLoc
success
if
success
setAborting
add
boolean
doc
DocWriter
assert
docID
nextWriteDocID
if
docID
nextWriteDocID
block
writeDocument
doc
while
block
doc
waiting
nextWriteLoc
if
doc
block
numWaiting
waiting
nextWriteLoc
waitingBytes
sizeInBytes
writeDocument
doc
break
block
int
gap
docID
nextWriteDocID
if
gap
length
block
DocWriter
newArray
DocWriter
getNextSize
gap
assert
nextWriteLoc
arraycopy
waiting
nextWriteLoc
newArray
length
nextWriteLoc
arraycopy
waiting
newArray
length
nextWriteLoc
nextWriteLoc
nextWriteLoc
waiting
newArray
gap
docID
nextWriteDocID
int
loc
nextWriteLoc
gap
if
loc
length
loc
length
assert
loc
length
assert
waiting
loc
waiting
loc
doc
numWaiting
waitingBytes
sizeInBytes
return
doPause
