DisjunctionSumScorer
int
nrScorers
List
subScorers
int
minimumNrMatchers
ScorerDocQueue
scorerDocQueue
int
queueSize
int
currentDoc
int
nrMatchers
float
currentScore
NaN
DisjunctionSumScorer
subScorers
List
minimumNrMatchers
int
nrScorers
size
if
minimumNrMatchers
block
throw
IllegalArgumentException
if
nrScorers
block
throw
IllegalArgumentException
minimumNrMatchers
minimumNrMatchers
subScorers
subScorers
DisjunctionSumScorer
subScorers
List
subScorers
initScorerDocQueue
Iterator
si
iterator
scorerDocQueue
ScorerDocQueue
nrScorers
queueSize
while
hasNext
block
Scorer
se
Scorer
next
if
next
block
if
insert
se
block
queueSize
score
hc
HitCollector
while
next
block
collect
currentDoc
currentScore
score
boolean
hc
HitCollector
max
int
while
currentDoc
max
block
collect
currentDoc
currentScore
if
next
block
return
return
next
boolean
if
scorerDocQueue
block
initScorerDocQueue
return
size
minimumNrMatchers
advanceAfterCurrent
advanceAfterCurrent
boolean
do
block
currentDoc
topDoc
currentScore
topScore
nrMatchers
do
block
if
topNextAndAdjustElsePop
block
if
queueSize
block
break
if
topDoc
currentDoc
block
break
currentScore
topScore
nrMatchers
if
nrMatchers
minimumNrMatchers
block
return
if
queueSize
minimumNrMatchers
block
return
score
float
return
currentScore
doc
int
return
currentDoc
nrMatchers
int
return
nrMatchers
skipTo
boolean
target
int
if
scorerDocQueue
block
initScorerDocQueue
if
queueSize
minimumNrMatchers
block
return
if
target
currentDoc
block
return
do
block
if
topDoc
target
block
return
advanceAfterCurrent
if
topSkipToAndAdjustElsePop
target
block
if
queueSize
minimumNrMatchers
block
return
explain
Explanation
doc
int
Explanation
res
Explanation
Iterator
ssi
iterator
float
sumScore
int
nrMatches
while
hasNext
block
Explanation
es
Scorer
next
if
getValue
block
sumScore
getValue
nrMatches
addDetail
es
if
nrMatchers
minimumNrMatchers
block
setValue
sumScore
setDescription
minimumNrMatchers
size
block
setValue
setDescription
nrMatches
minimumNrMatchers
size
return
res
Scorer
