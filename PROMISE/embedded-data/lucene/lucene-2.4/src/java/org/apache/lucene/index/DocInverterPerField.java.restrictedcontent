DocInverterPerField
DocInverterPerThread
perThread
FieldInfo
fieldInfo
InvertedDocConsumerPerField
consumer
InvertedDocEndConsumerPerField
endConsumer
DocumentsWriter
DocState
docState
DocInverter
FieldInvertState
fieldState
DocInverterPerField
perThread
DocInverterPerThread
fieldInfo
FieldInfo
perThread
perThread
fieldInfo
fieldInfo
docState
docState
fieldState
fieldState
consumer
addField
fieldInfo
endConsumer
addField
fieldInfo
abort
abort
abort
processFields
fields
Fieldable
count
int
reset
getBoost
int
maxFieldLength
maxFieldLength
boolean
doInvert
start
fields
count
for
forControl
int
i
i
count
i
block
Fieldable
field
fields
i
if
isIndexed
doInvert
block
if
length
position
getPositionIncrementGap
name
if
isTokenized
block
String
stringValue
stringValue
int
valueLength
length
Token
token
reinit
stringValue
offset
offset
valueLength
boolean
success
try
add
token
success
if
success
setAborting
offset
valueLength
length
position
block
TokenStream
stream
TokenStream
streamValue
tokenStreamValue
if
streamValue
stream
streamValue
block
Reader
reader
Reader
readerValue
readerValue
if
readerValue
reader
readerValue
block
String
stringValue
stringValue
if
stringValue
throw
IllegalArgumentException
init
stringValue
reader
stringReader
stream
reusableTokenStream
name
reader
reset
try
int
offsetEnd
offset
Token
localToken
localToken
for
forControl
block
Token
token
next
localToken
if
token
break
position
getPositionIncrement
boolean
success
try
add
token
success
if
success
setAborting
position
offsetEnd
offset
endOffset
if
length
maxFieldLength
block
if
infoStream
println
maxFieldLength
name
break
offset
offsetEnd
close
boost
getBoost
finish
finish
DocFieldConsumerPerField
