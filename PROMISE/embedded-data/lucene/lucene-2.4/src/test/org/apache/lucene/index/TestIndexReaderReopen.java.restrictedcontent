TestIndexReaderReopen
File
indexDir
testReopen
Directory
dir1
RAMDirectory
createIndex
dir1
performDefaultTests
TestReopen
modifyIndex
i
int
modifyIndex
i
dir1
openReader
IndexReader
return
open
dir1
Directory
dir2
RAMDirectory
createIndex
dir2
performDefaultTests
TestReopen
modifyIndex
i
int
modifyIndex
i
dir2
openReader
IndexReader
return
open
dir2
testParallelReaderReopen
Directory
dir1
RAMDirectory
createIndex
dir1
Directory
dir2
RAMDirectory
createIndex
dir2
performDefaultTests
TestReopen
modifyIndex
i
int
modifyIndex
i
dir1
modifyIndex
i
dir2
openReader
IndexReader
ParallelReader
pr
ParallelReader
add
open
dir1
add
open
dir2
return
pr
Directory
dir3
RAMDirectory
createIndex
dir3
Directory
dir4
RAMDirectory
createIndex
dir4
performTestsWithExceptionInReopen
TestReopen
modifyIndex
i
int
modifyIndex
i
dir3
modifyIndex
i
dir4
openReader
IndexReader
ParallelReader
pr
ParallelReader
add
open
dir3
add
open
dir4
add
FilterIndexReader
open
dir3
return
pr
testCommitReopenFS
Directory
dir
getDirectory
indexDir
doTestReopenWithCommit
dir
testCommitRecreateFS
Directory
dir
getDirectory
indexDir
doTestReopenWithCommit
dir
testCommitReopenRAM
Directory
dir
RAMDirectory
doTestReopenWithCommit
dir
testCommitRecreateRAM
Directory
dir
RAMDirectory
doTestReopenWithCommit
dir
doTestReopenWithCommit
dir
Directory
withReopen
boolean
IndexWriter
iwriter
IndexWriter
dir
KeywordAnalyzer
LIMITED
setMergeScheduler
SerialMergeScheduler
IndexReader
reader
open
dir
try
int
M
for
forControl
int
i
i
i
block
for
forControl
int
j
j
M
j
block
Document
doc
Document
add
Field
i
j
YES
NOT_ANALYZED
addDocument
doc
if
i
block
int
k
i
int
n
j
k
M
Document
prevItereationDoc
document
n
assertNotNull
prevItereationDoc
String
id
get
assertEquals
k
j
id
commit
if
withReopen
block
IndexReader
r2
reopen
if
reader
r2
block
close
reader
r2
block
close
reader
open
dir
close
close
testMultiReaderReopen
Directory
dir1
RAMDirectory
createIndex
dir1
Directory
dir2
RAMDirectory
createIndex
dir2
performDefaultTests
TestReopen
modifyIndex
i
int
modifyIndex
i
dir1
modifyIndex
i
dir2
openReader
IndexReader
return
MultiReader
IndexReader
open
dir1
open
dir2
Directory
dir3
RAMDirectory
createIndex
dir3
Directory
dir4
RAMDirectory
createIndex
dir4
performTestsWithExceptionInReopen
TestReopen
modifyIndex
i
int
modifyIndex
i
dir3
modifyIndex
i
dir4
openReader
IndexReader
return
MultiReader
IndexReader
open
dir3
open
dir4
FilterIndexReader
open
dir3
testMixedReaders
Directory
dir1
RAMDirectory
createIndex
dir1
Directory
dir2
RAMDirectory
createIndex
dir2
Directory
dir3
RAMDirectory
createIndex
dir3
Directory
dir4
RAMDirectory
createIndex
dir4
Directory
dir5
RAMDirectory
createIndex
dir5
performDefaultTests
TestReopen
modifyIndex
i
int
if
i
modifyIndex
i
dir1
modifyIndex
i
dir4
modifyIndex
i
dir5
openReader
IndexReader
ParallelReader
pr
ParallelReader
add
open
dir1
add
open
dir2
MultiReader
mr
MultiReader
IndexReader
open
dir3
open
dir4
return
MultiReader
IndexReader
pr
mr
open
dir5
performDefaultTests
test
TestReopen
IndexReader
index1
openReader
IndexReader
index2
openReader
assertIndexEquals
index1
index2
ReaderCouple
couple
refreshReader
index2
assertTrue
refreshedReader
index2
couple
refreshReader
index2
test
index1
newReader
IndexReader
index2_refreshed
refreshedReader
close
assertIndexEquals
index1
index2_refreshed
close
close
assertReaderClosed
index2
assertReaderClosed
index2_refreshed
index2
openReader
for
forControl
int
i
i
i
block
close
couple
refreshReader
index2
test
i
close
index2
refreshedReader
index1
newReader
assertIndexEquals
index1
index2
close
close
assertReaderClosed
index1
assertReaderClosed
index2
testReferenceCounting
for
forControl
int
mode
mode
mode
block
Directory
dir1
RAMDirectory
createIndex
dir1
IndexReader
reader0
open
dir1
assertRefCountEquals
reader0
assertTrue
reader0
MultiSegmentReader
SegmentReader
subReaders0
MultiSegmentReader
reader0
for
forControl
int
i
i
length
i
block
assertRefCountEquals
subReaders0
i
IndexReader
modifier
open
dir1
deleteDocument
close
IndexReader
reader1
refreshReader
refreshedReader
reader0
assertTrue
reader1
MultiSegmentReader
SegmentReader
subReaders1
MultiSegmentReader
reader1
assertEquals
length
length
for
forControl
int
i
i
length
i
block
assertRefCountEquals
subReaders0
i
if
subReaders0
i
subReaders1
i
block
assertRefCountEquals
subReaders1
i
modifier
open
dir1
deleteDocument
close
IndexReader
reader2
refreshReader
refreshedReader
reader1
assertTrue
reader2
MultiSegmentReader
SegmentReader
subReaders2
MultiSegmentReader
reader2
assertEquals
length
length
for
forControl
int
i
i
length
i
block
if
subReaders2
i
subReaders1
i
block
if
subReaders1
i
subReaders0
i
block
assertRefCountEquals
subReaders2
i
block
assertRefCountEquals
subReaders2
i
block
assertRefCountEquals
subReaders2
i
if
subReaders0
i
subReaders1
i
block
assertRefCountEquals
subReaders2
i
assertRefCountEquals
subReaders0
i
block
assertRefCountEquals
subReaders0
i
assertRefCountEquals
subReaders1
i
IndexReader
reader3
refreshReader
refreshedReader
reader0
assertTrue
reader3
MultiSegmentReader
SegmentReader
subReaders3
MultiSegmentReader
reader3
assertEquals
length
length
switch
mode
case
close
close
close
close
break
case
close
close
close
close
break
case
close
close
close
close
break
case
close
close
close
close
break
assertReaderClosed
reader0
assertReaderClosed
reader1
assertReaderClosed
reader2
assertReaderClosed
reader3
testReferenceCountingMultiReader
for
forControl
int
mode
mode
mode
block
Directory
dir1
RAMDirectory
createIndex
dir1
Directory
dir2
RAMDirectory
createIndex
dir2
IndexReader
reader1
open
dir1
assertRefCountEquals
reader1
IndexReader
multiReader1
MultiReader
IndexReader
reader1
open
dir2
mode
modifyIndex
dir2
assertRefCountEquals
mode
reader1
IndexReader
multiReader2
reopen
assertRefCountEquals
mode
reader1
modifyIndex
dir1
IndexReader
reader2
reopen
assertRefCountEquals
mode
reader1
modifyIndex
dir1
IndexReader
reader3
reopen
assertRefCountEquals
mode
reader1
assertRefCountEquals
reader2
close
assertRefCountEquals
mode
reader1
close
assertRefCountEquals
mode
reader1
close
assertRefCountEquals
reader1
close
assertRefCountEquals
reader1
close
assertRefCountEquals
reader1
close
assertRefCountEquals
reader1
assertReaderOpen
reader1
close
assertRefCountEquals
reader1
assertReaderClosed
reader1
close
assertRefCountEquals
reader1
close
assertRefCountEquals
reader1
assertReaderClosed
reader1
testReferenceCountingParallelReader
for
forControl
int
mode
mode
mode
block
Directory
dir1
RAMDirectory
createIndex
dir1
Directory
dir2
RAMDirectory
createIndex
dir2
IndexReader
reader1
open
dir1
assertRefCountEquals
reader1
ParallelReader
parallelReader1
ParallelReader
mode
add
reader1
add
open
dir2
modifyIndex
dir2
assertRefCountEquals
mode
reader1
IndexReader
parallelReader2
reopen
assertRefCountEquals
mode
reader1
modifyIndex
dir1
modifyIndex
dir2
IndexReader
reader2
reopen
assertRefCountEquals
mode
reader1
modifyIndex
dir1
IndexReader
reader3
reopen
assertRefCountEquals
mode
reader1
assertRefCountEquals
reader2
close
assertRefCountEquals
mode
reader1
close
assertRefCountEquals
mode
reader1
close
assertRefCountEquals
reader1
close
assertRefCountEquals
reader1
close
assertRefCountEquals
reader1
close
assertRefCountEquals
reader1
assertReaderOpen
reader1
close
assertRefCountEquals
reader1
assertReaderClosed
reader1
close
assertRefCountEquals
reader1
close
assertRefCountEquals
reader1
assertReaderClosed
reader1
testNormsRefCounting
Directory
dir1
RAMDirectory
createIndex
dir1
SegmentReader
reader1
SegmentReader
open
dir1
IndexReader
modifier
open
dir1
deleteDocument
close
SegmentReader
reader2
SegmentReader
reopen
modifier
open
dir1
setNorm
setNorm
close
SegmentReader
reader3
SegmentReader
reopen
modifier
open
dir1
deleteDocument
close
SegmentReader
reader4
SegmentReader
reopen
modifier
open
dir1
deleteDocument
close
SegmentReader
reader5
SegmentReader
reopen
assertRefCountEquals
reader1
assertFalse
normsClosed
close
assertRefCountEquals
reader1
assertFalse
normsClosed
close
assertRefCountEquals
reader1
assertTrue
normsClosed
assertTrue
normsClosed
assertFalse
normsClosed
assertFalse
normsClosed
close
assertRefCountEquals
reader1
assertFalse
normsClosed
close
assertRefCountEquals
reader1
assertFalse
normsClosed
close
assertRefCountEquals
reader1
assertTrue
normsClosed
assertTrue
normsClosed
performTestsWithExceptionInReopen
test
TestReopen
IndexReader
index1
openReader
IndexReader
index2
openReader
assertIndexEquals
index1
index2
try
ReaderCouple
couple
refreshReader
index1
test
fail
catchClause
e
assertIndexEquals
index1
index2
testThreadSafety
Directory
dir
RAMDirectory
int
n
IndexWriter
writer
IndexWriter
dir
StandardAnalyzer
LIMITED
for
forControl
int
i
i
n
i
block
addDocument
createDocument
i
optimize
close
TestReopen
test
TestReopen
modifyIndex
i
int
if
i
block
IndexReader
modifier
open
dir
setNorm
i
close
if
i
block
IndexReader
modifier
open
dir
deleteDocument
i
close
block
IndexWriter
modifier
IndexWriter
dir
StandardAnalyzer
LIMITED
addDocument
createDocument
n
i
close
openReader
IndexReader
return
open
dir
List
readers
synchronizedList
ArrayList
IndexReader
firstReader
open
dir
IndexReader
reader
firstReader
Random
rnd
Random
ReaderThread
threads
ReaderThread
n
Set
readersToClose
synchronizedSet
HashSet
for
forControl
int
i
i
n
i
block
if
i
block
IndexReader
refreshed
reopen
if
refreshed
reader
block
add
reader
reader
refreshed
IndexReader
r
reader
int
index
i
ReaderThreadTask
task
if
i
i
i
i
block
task
ReaderThreadTask
run
while
stopped
block
if
index
block
ReaderCouple
c
refreshReader
r
test
index
add
newReader
add
refreshedReader
add
c
break
block
IndexReader
refreshed
reopen
IndexSearcher
searcher
IndexSearcher
refreshed
ScoreDoc
hits
search
scoreDocs
TermQuery
Term
nextInt
maxDoc
if
length
block
doc
hits
doc
if
refreshed
r
block
close
add
refreshed
try
synchronized
wait
catchClause
e
block
task
ReaderThreadTask
run
while
stopped
block
int
numReaders
size
if
numReaders
block
ReaderCouple
c
ReaderCouple
get
nextInt
numReaders
assertIndexEquals
newReader
refreshedReader
try
synchronized
wait
catchClause
e
threads
i
ReaderThread
task
threads
i
start
synchronized
try
wait
catchClause
e
for
forControl
int
i
i
n
i
block
if
threads
i
block
threads
i
stopThread
for
forControl
int
i
i
n
i
block
if
threads
i
block
try
threads
i
join
if
threads
i
error
block
String
msg
threads
i
getName
threads
i
error
getMessage
fail
msg
catchClause
e
Iterator
it
iterator
while
hasNext
block
IndexReader
next
close
close
it
iterator
while
hasNext
block
assertReaderClosed
IndexReader
next
assertReaderClosed
reader
assertReaderClosed
firstReader
ReaderCouple
ReaderCouple
r1
IndexReader
r2
IndexReader
newReader
r1
refreshedReader
r2
IndexReader
newReader
IndexReader
refreshedReader
ReaderThreadTask
boolean
stopped
stop
stopped
run
ReaderThread
ReaderThreadTask
task
Throwable
error
ReaderThread
task
ReaderThreadTask
task
task
stopThread
task
stop
run
try
task
run
catchClause
r
printStackTrace
out
error
r
Thread
Object
createReaderMutex
Object
refreshReader
ReaderCouple
reader
IndexReader
hasChanges
boolean
return
refreshReader
reader
hasChanges
refreshReader
ReaderCouple
reader
IndexReader
test
TestReopen
modify
int
hasChanges
boolean
synchronized
createReaderMutex
IndexReader
r
if
test
block
modifyIndex
modify
r
openReader
IndexReader
refreshed
reopen
if
hasChanges
block
if
refreshed
reader
block
fail
block
if
refreshed
reader
block
fail
return
ReaderCouple
r
refreshed
createIndex
dir
Directory
multiSegment
boolean
IndexWriter
w
IndexWriter
dir
WhitespaceAnalyzer
LIMITED
setMergePolicy
LogDocMergePolicy
for
forControl
int
i
i
i
block
addDocument
createDocument
i
if
multiSegment
i
block
flush
if
multiSegment
block
optimize
close
IndexReader
r
open
dir
if
multiSegment
block
assertTrue
r
MultiSegmentReader
block
assertTrue
r
SegmentReader
close
createDocument
Document
n
int
numFields
int
StringBuffer
sb
StringBuffer
Document
doc
Document
append
append
n
add
Field
toString
YES
ANALYZED
append
append
n
for
forControl
int
i
i
numFields
i
block
add
Field
i
toString
YES
ANALYZED
return
doc
modifyIndex
i
int
dir
Directory
switch
i
case
block
IndexWriter
w
IndexWriter
dir
WhitespaceAnalyzer
LIMITED
deleteDocuments
Term
deleteDocuments
Term
close
break
case
block
IndexReader
reader
open
dir
setNorm
setNorm
setNorm
close
break
case
block
IndexWriter
w
IndexWriter
dir
WhitespaceAnalyzer
LIMITED
optimize
close
break
case
block
IndexWriter
w
IndexWriter
dir
WhitespaceAnalyzer
LIMITED
addDocument
createDocument
optimize
addDocument
createDocument
addDocument
createDocument
close
break
case
block
IndexReader
reader
open
dir
setNorm
setNorm
close
break
assertReaderClosed
reader
IndexReader
checkSubReaders
boolean
checkNormsClosed
boolean
assertEquals
getRefCount
if
checkNormsClosed
reader
SegmentReader
block
assertTrue
SegmentReader
reader
if
checkSubReaders
block
if
reader
MultiSegmentReader
block
SegmentReader
subReaders
MultiSegmentReader
reader
for
forControl
int
i
i
length
i
block
assertReaderClosed
subReaders
i
checkSubReaders
checkNormsClosed
if
reader
MultiReader
block
IndexReader
subReaders
MultiReader
reader
for
forControl
int
i
i
length
i
block
assertReaderClosed
subReaders
i
checkSubReaders
checkNormsClosed
if
reader
ParallelReader
block
IndexReader
subReaders
ParallelReader
reader
for
forControl
int
i
i
length
i
block
assertReaderClosed
subReaders
i
checkSubReaders
checkNormsClosed
assertReaderOpen
reader
IndexReader
ensureOpen
if
reader
MultiSegmentReader
block
SegmentReader
subReaders
MultiSegmentReader
reader
for
forControl
int
i
i
length
i
block
assertReaderOpen
subReaders
i
assertRefCountEquals
refCount
int
reader
IndexReader
assertEquals
refCount
getRefCount
TestReopen
openReader
IndexReader
modifyIndex
i
int
setUp
setUp
String
tempDir
getProperty
if
tempDir
throw
IOException
indexDir
File
tempDir
LuceneTestCase
