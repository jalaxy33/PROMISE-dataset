TestStressIndexing2
int
maxFields
int
bigFieldSize
boolean
sameFieldOrder
boolean
autoCommit
int
mergeFactor
int
maxBufferedDocs
int
seed
Random
r
Random
MockIndexWriter
MockIndexWriter
dir
Directory
autoCommit
boolean
a
Analyzer
create
boolean
dir
autoCommit
a
create
testPoint
boolean
name
String
if
nextInt
yield
return
IndexWriter
testRandom
Directory
dir1
MockRAMDirectory
Directory
dir2
MockRAMDirectory
Map
docs
indexRandom
dir1
indexSerial
docs
dir2
verifyEquals
dir1
dir2
testMultiConfig
for
forControl
int
i
i
i
block
sameFieldOrder
nextBoolean
autoCommit
nextBoolean
mergeFactor
nextInt
maxBufferedDocs
nextInt
seed
int
nThreads
nextInt
int
iter
nextInt
int
range
nextInt
Directory
dir1
MockRAMDirectory
Directory
dir2
MockRAMDirectory
Map
docs
indexRandom
nThreads
iter
range
dir1
indexSerial
docs
dir2
verifyEquals
dir1
dir2
Term
idTerm
Term
IndexingThread
threads
Comparator
fieldNameComparator
Comparator
compare
int
o1
Object
o2
Object
return
Fieldable
o1
indexRandom
Map
nThreads
int
iterations
int
range
int
dir
Directory
Map
docs
HashMap
for
forControl
int
iter
iter
iter
block
IndexWriter
w
MockIndexWriter
dir
autoCommit
WhitespaceAnalyzer
setUseCompoundFile
setMergeFactor
mergeFactor
setRAMBufferSizeMB
setMaxBufferedDocs
maxBufferedDocs
threads
IndexingThread
nThreads
for
forControl
int
i
i
length
i
block
IndexingThread
th
IndexingThread
w
w
base
i
range
range
iterations
iterations
threads
i
th
for
forControl
int
i
i
length
i
block
threads
i
start
for
forControl
int
i
i
length
i
block
threads
i
join
close
for
forControl
int
i
i
length
i
block
IndexingThread
th
threads
i
synchronized
th
putAll
docs
checkIndex
dir
return
docs
indexSerial
docs
Map
dir
Directory
IndexWriter
w
IndexWriter
dir
WhitespaceAnalyzer
UNLIMITED
Iterator
iter
values
iterator
while
hasNext
block
Document
d
Document
next
ArrayList
fields
ArrayList
addAll
getFields
sort
fields
fieldNameComparator
Document
d1
Document
setBoost
getBoost
for
forControl
int
i
i
size
i
block
add
Fieldable
get
i
addDocument
d1
close
verifyEquals
dir1
Directory
dir2
Directory
idField
String
IndexReader
r1
open
dir1
IndexReader
r2
open
dir2
verifyEquals
r1
r2
idField
close
close
verifyEquals
r1
IndexReader
r2
IndexReader
idField
String
assertEquals
numDocs
numDocs
boolean
hasDeletes
maxDoc
maxDoc
numDocs
maxDoc
int
r2r1
int
maxDoc
TermDocs
termDocs1
termDocs
TermDocs
termDocs2
termDocs
idField
intern
TermEnum
termEnum
terms
Term
idField
do
next
block
Term
term
term
if
term
field
idField
break
seek
termEnum
if
next
block
seek
termEnum
assertFalse
next
continue
int
id1
doc
assertFalse
next
seek
termEnum
assertTrue
next
int
id2
doc
assertFalse
next
r2r1
id2
id1
verifyEquals
document
id1
document
id2
try
verifyEquals
getTermFreqVectors
id1
getTermFreqVectors
id2
catchClause
e
println
term
id1
id2
TermFreqVector
tv1
getTermFreqVectors
id1
println
tv1
if
tv1
for
forControl
int
i
i
length
i
println
i
tv1
i
TermFreqVector
tv2
getTermFreqVectors
id2
println
tv2
if
tv2
for
forControl
int
i
i
length
i
println
i
tv2
i
throw
e
close
TermEnum
termEnum1
terms
Term
TermEnum
termEnum2
terms
Term
long
info1
long
numDocs
long
info2
long
numDocs
for
forControl
block
Term
term1
term2
int
len1
for
forControl
block
len1
term1
term
if
term1
break
seek
termEnum1
while
next
block
int
d1
doc
int
f1
freq
info1
len1
long
d1
f1
len1
if
len1
break
if
next
break
int
len2
for
forControl
block
len2
term2
term
if
term2
break
seek
termEnum2
while
next
block
int
d2
doc
int
f2
freq
info2
len2
long
r2r1
d2
f2
len2
if
len2
break
if
next
break
if
hasDeletes
assertEquals
docFreq
docFreq
assertEquals
len1
len2
if
len1
break
assertEquals
term1
term2
sort
info2
len2
for
forControl
int
i
i
len1
i
block
assertEquals
info1
i
info2
i
next
next
verifyEquals
d1
Document
d2
Document
List
ff1
getFields
List
ff2
getFields
sort
ff1
fieldNameComparator
sort
ff2
fieldNameComparator
if
size
size
block
println
ff1
println
ff2
assertEquals
size
size
for
forControl
int
i
i
size
i
block
Fieldable
f1
Fieldable
get
i
Fieldable
f2
Fieldable
get
i
if
isBinary
block
assert
isBinary
block
String
s1
stringValue
String
s2
stringValue
if
equals
s2
block
println
ff1
println
ff2
assertEquals
s1
s2
verifyEquals
d1
TermFreqVector
d2
TermFreqVector
if
d1
block
assertTrue
d2
return
assertTrue
d2
assertEquals
length
length
for
forControl
int
i
i
length
i
block
TermFreqVector
v1
d1
i
TermFreqVector
v2
d2
i
if
v1
v2
println
v1
v2
i
length
assertEquals
size
size
int
numTerms
size
String
terms1
getTerms
String
terms2
getTerms
int
freq1
getTermFrequencies
int
freq2
getTermFrequencies
for
forControl
int
j
j
numTerms
j
block
if
terms1
j
equals
terms2
j
assertEquals
terms1
j
terms2
j
assertEquals
freq1
j
freq2
j
if
v1
TermPositionVector
block
assertTrue
v2
TermPositionVector
TermPositionVector
tpv1
TermPositionVector
v1
TermPositionVector
tpv2
TermPositionVector
v2
for
forControl
int
j
j
numTerms
j
block
int
pos1
getTermPositions
j
int
pos2
getTermPositions
j
assertEquals
length
length
TermVectorOffsetInfo
offsets1
getOffsets
j
TermVectorOffsetInfo
offsets2
getOffsets
j
if
offsets1
assertTrue
offsets2
assertTrue
offsets2
for
forControl
int
k
k
length
k
block
assertEquals
pos1
k
pos2
k
if
offsets1
block
assertEquals
offsets1
k
getStartOffset
offsets2
k
getStartOffset
assertEquals
offsets1
k
getEndOffset
offsets2
k
getEndOffset
IndexingThread
IndexWriter
w
int
base
int
range
int
iterations
Map
docs
HashMap
Random
r
nextInt
int
lim
int
return
nextInt
lim
nextInt
int
start
int
end
int
return
start
nextInt
end
start
char
buffer
char
addUTF8Token
int
start
int
int
end
start
nextInt
if
length
end
block
char
newBuffer
char
int
end
arraycopy
buffer
newBuffer
length
buffer
newBuffer
for
forControl
int
i
start
i
end
i
block
int
t
nextInt
if
t
i
end
block
buffer
i
char
nextInt
buffer
i
char
nextInt
if
t
buffer
i
char
nextInt
if
t
buffer
i
char
nextInt
if
t
buffer
i
char
nextInt
if
t
buffer
i
char
nextInt
if
t
block
if
nextBoolean
buffer
i
char
nextInt
buffer
i
char
nextInt
buffer
end
return
end
getString
String
nTokens
int
nTokens
nTokens
nTokens
nextInt
if
nextBoolean
return
getUTF8String
nTokens
char
arr
char
nTokens
for
forControl
int
i
i
nTokens
i
block
arr
i
char
nextInt
arr
i
return
String
arr
getUTF8String
String
nTokens
int
int
upto
fill
buffer
char
for
forControl
int
i
i
nTokens
i
upto
addUTF8Token
upto
return
String
buffer
upto
getIdString
String
return
toString
base
nextInt
range
indexDoc
Document
d
Document
ArrayList
fields
ArrayList
String
idString
getIdString
Field
idField
Field
field
idString
YES
NOT_ANALYZED_NO_NORMS
add
idField
int
nFields
nextInt
maxFields
for
forControl
int
i
i
nFields
i
block
Field
TermVector
tvVal
NO
switch
nextInt
case
tvVal
NO
break
case
tvVal
YES
break
case
tvVal
WITH_POSITIONS
break
case
tvVal
WITH_POSITIONS_OFFSETS
break
switch
nextInt
case
add
Field
nextInt
getString
YES
NOT_ANALYZED_NO_NORMS
tvVal
break
case
add
Field
nextInt
getString
NO
ANALYZED
tvVal
break
case
add
Field
nextInt
getString
YES
NO
NO
break
case
add
Field
nextInt
getString
bigFieldSize
YES
ANALYZED
tvVal
break
if
sameFieldOrder
block
sort
fields
fieldNameComparator
block
swap
fields
nextInt
size
for
forControl
int
i
i
size
i
block
add
Fieldable
get
i
updateDocument
createTerm
idString
d
put
idString
d
deleteDoc
String
idString
getIdString
deleteDocuments
createTerm
idString
remove
idString
deleteByQuery
String
idString
getIdString
deleteDocuments
TermQuery
createTerm
idString
remove
idString
run
try
r
Random
base
range
seed
for
forControl
int
i
i
iterations
i
block
int
what
nextInt
if
what
block
deleteDoc
if
what
block
deleteByQuery
block
indexDoc
catchClause
e
printStackTrace
fail
toString
synchronized
size
Thread
LuceneTestCase
