TestIndexWriterExceptions
boolean
DEBUG
IndexerThread
IndexWriter
writer
Random
r
java
util
Random
Throwable
failure
IndexerThread
i
int
writer
IndexWriter
setName
i
writer
writer
run
Document
doc
Document
add
Field
YES
ANALYZED
add
Field
NO
ANALYZED
WITH_POSITIONS_OFFSETS
add
Field
YES
NOT_ANALYZED
add
Field
YES
NO
add
Field
NO
ANALYZED
add
Field
NO
NOT_ANALYZED
add
Field
NO
NOT_ANALYZED
WITH_POSITIONS_OFFSETS
Field
idField
Field
YES
NOT_ANALYZED
add
idField
long
stopTime
currentTimeMillis
while
currentTimeMillis
stopTime
block
set
String
id
nextInt
setValue
id
Term
idTerm
Term
id
try
updateDocument
idTerm
doc
catchClause
re
if
DEBUG
block
println
printStackTrace
out
try
checkIndex
getDirectory
catchClause
ioe
println
currentThread
getName
printStackTrace
out
failure
ioe
break
catchClause
t
println
currentThread
getName
printStackTrace
out
failure
t
break
set
try
updateDocument
idTerm
doc
catchClause
t
println
currentThread
getName
printStackTrace
out
failure
t
break
Thread
ThreadLocal
doFail
ThreadLocal
MockIndexWriter
Random
r
java
util
Random
MockIndexWriter
dir
Directory
a
Analyzer
create
boolean
mfl
MaxFieldLength
dir
a
create
mfl
testPoint
boolean
name
String
if
get
equals
nextInt
block
if
DEBUG
block
println
currentThread
getName
name
throw
RuntimeException
currentThread
getName
name
return
IndexWriter
testRandomExceptions
MockRAMDirectory
dir
MockRAMDirectory
MockIndexWriter
writer
MockIndexWriter
dir
WhitespaceAnalyzer
LIMITED
ConcurrentMergeScheduler
getMergeScheduler
setRAMBufferSizeMB
if
DEBUG
setInfoStream
out
IndexerThread
thread
IndexerThread
writer
run
if
failure
block
printStackTrace
out
fail
getName
commit
try
close
catchClause
t
println
printStackTrace
out
rollback
IndexReader
r2
open
dir
int
count
docFreq
Term
int
count2
docFreq
Term
assertEquals
count
count2
close
checkIndex
dir
testRandomExceptionsThreads
MockRAMDirectory
dir
MockRAMDirectory
MockIndexWriter
writer
MockIndexWriter
dir
WhitespaceAnalyzer
LIMITED
ConcurrentMergeScheduler
getMergeScheduler
setRAMBufferSizeMB
if
DEBUG
setInfoStream
out
int
NUM_THREADS
IndexerThread
threads
IndexerThread
NUM_THREADS
for
forControl
int
i
i
NUM_THREADS
i
block
threads
i
IndexerThread
i
writer
threads
i
start
for
forControl
int
i
i
NUM_THREADS
i
threads
i
join
for
forControl
int
i
i
NUM_THREADS
i
if
threads
i
failure
fail
threads
i
getName
commit
try
close
catchClause
t
println
printStackTrace
out
rollback
IndexReader
r2
open
dir
int
count
docFreq
Term
int
count2
docFreq
Term
assertEquals
count
count2
close
checkIndex
dir
LuceneTestCase
