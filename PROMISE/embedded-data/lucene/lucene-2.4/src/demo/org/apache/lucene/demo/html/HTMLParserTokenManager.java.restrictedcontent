HTMLParserTokenManager
java
io
PrintStream
debugStream
out
setDebugStream
ds
java
io
PrintStream
debugStream
ds
jjStopStringLiteralDfa_0
int
pos
int
active0
long
switch
pos
case
if
active0
return
return
case
if
active0
block
if
jjmatchedPos
block
jjmatchedKind
jjmatchedPos
return
if
active0
return
return
case
if
active0
block
jjmatchedKind
jjmatchedPos
return
return
case
if
active0
block
jjmatchedKind
jjmatchedPos
return
return
case
if
active0
block
jjmatchedKind
jjmatchedPos
return
return
case
if
active0
block
jjmatchedKind
jjmatchedPos
return
return
case
return
jjStartNfa_0
int
pos
int
active0
long
return
jjMoveNfa_0
jjStopStringLiteralDfa_0
pos
active0
pos
jjStopAtPos
int
pos
int
kind
int
jjmatchedKind
kind
jjmatchedPos
pos
return
pos
jjStartNfaWithStates_0
int
pos
int
kind
int
state
int
jjmatchedKind
kind
jjmatchedPos
pos
try
curChar
readChar
catchClause
e
return
pos
return
jjMoveNfa_0
state
pos
jjMoveStringLiteralDfa0_0
int
switch
curChar
case
return
jjMoveStringLiteralDfa1_0
case
return
jjMoveNfa_0
jjMoveStringLiteralDfa1_0
int
active0
long
try
curChar
readChar
catchClause
e
jjStopStringLiteralDfa_0
active0
return
switch
curChar
case
if
active0
block
jjmatchedKind
jjmatchedPos
return
jjMoveStringLiteralDfa2_0
active0
case
return
jjMoveStringLiteralDfa2_0
active0
case
break
return
jjStartNfa_0
active0
jjMoveStringLiteralDfa2_0
int
old0
long
active0
long
if
active0
old0
return
jjStartNfa_0
old0
try
curChar
readChar
catchClause
e
jjStopStringLiteralDfa_0
active0
return
switch
curChar
case
return
jjMoveStringLiteralDfa3_0
active0
case
return
jjMoveStringLiteralDfa3_0
active0
case
break
return
jjStartNfa_0
active0
jjMoveStringLiteralDfa3_0
int
old0
long
active0
long
if
active0
old0
return
jjStartNfa_0
old0
try
curChar
readChar
catchClause
e
jjStopStringLiteralDfa_0
active0
return
switch
curChar
case
if
active0
return
jjStopAtPos
break
case
return
jjMoveStringLiteralDfa4_0
active0
case
break
return
jjStartNfa_0
active0
jjMoveStringLiteralDfa4_0
int
old0
long
active0
long
if
active0
old0
return
jjStartNfa_0
old0
try
curChar
readChar
catchClause
e
jjStopStringLiteralDfa_0
active0
return
switch
curChar
case
return
jjMoveStringLiteralDfa5_0
active0
case
break
return
jjStartNfa_0
active0
jjMoveStringLiteralDfa5_0
int
old0
long
active0
long
if
active0
old0
return
jjStartNfa_0
old0
try
curChar
readChar
catchClause
e
jjStopStringLiteralDfa_0
active0
return
switch
curChar
case
return
jjMoveStringLiteralDfa6_0
active0
case
break
return
jjStartNfa_0
active0
jjMoveStringLiteralDfa6_0
int
old0
long
active0
long
if
active0
old0
return
jjStartNfa_0
old0
try
curChar
readChar
catchClause
e
jjStopStringLiteralDfa_0
active0
return
switch
curChar
case
if
active0
return
jjStartNfaWithStates_0
break
case
break
return
jjStartNfa_0
active0
jjCheckNAdd
state
int
if
jjrounds
state
jjround
block
jjstateSet
jjnewStateCnt
state
jjrounds
state
jjround
jjAddStates
start
int
end
int
do
start
end
block
jjstateSet
jjnewStateCnt
jjnextStates
start
jjCheckNAddTwoStates
state1
int
state2
int
jjCheckNAdd
state1
jjCheckNAdd
state2
jjCheckNAddStates
start
int
end
int
do
start
end
block
jjCheckNAdd
jjnextStates
start
jjCheckNAddStates
start
int
jjCheckNAdd
jjnextStates
start
jjCheckNAdd
jjnextStates
start
long
jjbitVec0
jjMoveNfa_0
int
startState
int
curPos
int
int
nextStates
int
startsAt
jjnewStateCnt
int
i
jjstateSet
startState
int
j
kind
for
forControl
block
if
jjround
ReInitRounds
if
curChar
block
long
l
curChar
do
i
startsAt
block
switch
jjstateSet
i
case
if
curChar
jjstateSet
jjnewStateCnt
if
curChar
jjCheckNAdd
break
case
if
l
jjCheckNAddTwoStates
if
l
block
if
kind
kind
jjCheckNAdd
if
curChar
jjCheckNAddStates
if
curChar
jjAddStates
if
curChar
jjstateSet
jjnewStateCnt
if
l
block
if
kind
kind
jjCheckNAddStates
break
case
if
curChar
jjstateSet
jjnewStateCnt
break
case
if
l
jjCheckNAdd
break
case
if
l
jjstateSet
jjnewStateCnt
break
case
if
l
break
if
kind
kind
jjCheckNAddStates
break
case
if
l
break
if
kind
kind
jjCheckNAddStates
break
case
if
l
break
if
kind
kind
jjCheckNAddStates
break
case
if
l
jjCheckNAddTwoStates
break
case
if
curChar
break
if
kind
kind
jjCheckNAddStates
break
case
if
l
jjstateSet
jjnewStateCnt
break
case
if
l
break
kind
jjCheckNAdd
break
case
if
curChar
kind
kind
break
case
if
curChar
jjCheckNAdd
break
case
if
l
break
if
kind
kind
jjCheckNAddTwoStates
break
case
if
curChar
jjstateSet
jjnewStateCnt
break
case
if
l
break
if
kind
kind
jjCheckNAddTwoStates
break
case
if
curChar
jjCheckNAddStates
break
case
if
l
break
if
kind
kind
jjCheckNAdd
break
case
if
l
break
if
kind
kind
jjCheckNAdd
break
case
if
curChar
jjstateSet
jjnewStateCnt
break
case
if
l
break
if
kind
kind
jjCheckNAdd
break
case
if
l
break
if
kind
kind
jjCheckNAdd
break
case
break
if
curChar
block
long
l
curChar
do
i
startsAt
block
switch
jjstateSet
i
case
if
l
break
if
kind
kind
jjstateSet
jjnewStateCnt
break
case
if
l
break
if
kind
kind
jjCheckNAddStates
break
case
if
l
break
if
kind
kind
jjCheckNAddStates
break
case
if
l
break
if
kind
kind
jjCheckNAddTwoStates
break
case
if
l
jjCheckNAdd
break
case
if
l
break
if
kind
kind
jjCheckNAddTwoStates
break
case
if
kind
kind
jjCheckNAdd
break
case
if
l
break
if
kind
kind
jjstateSet
jjnewStateCnt
break
case
if
kind
kind
jjCheckNAdd
break
case
break
block
int
i2
curChar
long
l2
curChar
do
i
startsAt
block
switch
jjstateSet
i
case
if
jjbitVec0
i2
l2
break
if
kind
kind
jjCheckNAdd
break
case
if
jjbitVec0
i2
l2
break
if
kind
kind
jjCheckNAdd
break
case
break
if
kind
block
jjmatchedKind
kind
jjmatchedPos
curPos
kind
curPos
if
i
jjnewStateCnt
startsAt
jjnewStateCnt
startsAt
return
curPos
try
curChar
readChar
catchClause
e
return
curPos
jjMoveStringLiteralDfa0_5
int
return
jjMoveNfa_5
jjMoveNfa_5
int
startState
int
curPos
int
int
nextStates
int
startsAt
jjnewStateCnt
int
i
jjstateSet
startState
int
j
kind
for
forControl
block
if
jjround
ReInitRounds
if
curChar
block
long
l
curChar
do
i
startsAt
block
switch
jjstateSet
i
case
if
l
block
if
kind
kind
jjCheckNAdd
if
curChar
block
if
kind
kind
break
case
if
l
break
kind
jjCheckNAdd
break
case
break
if
curChar
block
long
l
curChar
do
i
startsAt
block
switch
jjstateSet
i
case
kind
jjCheckNAdd
break
case
break
block
int
i2
curChar
long
l2
curChar
do
i
startsAt
block
switch
jjstateSet
i
case
if
jjbitVec0
i2
l2
break
if
kind
kind
jjCheckNAdd
break
case
break
if
kind
block
jjmatchedKind
kind
jjmatchedPos
curPos
kind
curPos
if
i
jjnewStateCnt
startsAt
jjnewStateCnt
startsAt
return
curPos
try
curChar
readChar
catchClause
e
return
curPos
jjStopStringLiteralDfa_7
int
pos
int
active0
long
switch
pos
case
return
jjStartNfa_7
int
pos
int
active0
long
return
jjMoveNfa_7
jjStopStringLiteralDfa_7
pos
active0
pos
jjStartNfaWithStates_7
int
pos
int
kind
int
state
int
jjmatchedKind
kind
jjmatchedPos
pos
try
curChar
readChar
catchClause
e
return
pos
return
jjMoveNfa_7
state
pos
jjMoveStringLiteralDfa0_7
int
switch
curChar
case
return
jjStopAtPos
case
return
jjMoveNfa_7
jjMoveNfa_7
int
startState
int
curPos
int
int
nextStates
int
startsAt
jjnewStateCnt
int
i
jjstateSet
startState
int
j
kind
for
forControl
block
if
jjround
ReInitRounds
if
curChar
block
long
l
curChar
do
i
startsAt
block
switch
jjstateSet
i
case
if
l
break
kind
jjstateSet
jjnewStateCnt
break
case
break
if
curChar
block
long
l
curChar
do
i
startsAt
block
switch
jjstateSet
i
case
kind
jjstateSet
jjnewStateCnt
break
case
break
block
int
i2
curChar
long
l2
curChar
do
i
startsAt
block
switch
jjstateSet
i
case
if
jjbitVec0
i2
l2
break
if
kind
kind
jjstateSet
jjnewStateCnt
break
case
break
if
kind
block
jjmatchedKind
kind
jjmatchedPos
curPos
kind
curPos
if
i
jjnewStateCnt
startsAt
jjnewStateCnt
startsAt
return
curPos
try
curChar
readChar
catchClause
e
return
curPos
jjMoveStringLiteralDfa0_4
int
return
jjMoveNfa_4
jjMoveNfa_4
int
startState
int
curPos
int
int
nextStates
int
startsAt
jjnewStateCnt
int
i
jjstateSet
startState
int
j
kind
for
forControl
block
if
jjround
ReInitRounds
if
curChar
block
long
l
curChar
do
i
startsAt
block
switch
jjstateSet
i
case
if
l
block
if
kind
kind
jjCheckNAdd
if
curChar
block
if
kind
kind
break
case
if
l
break
kind
jjCheckNAdd
break
case
break
if
curChar
block
long
l
curChar
do
i
startsAt
block
switch
jjstateSet
i
case
kind
jjCheckNAdd
break
case
break
block
int
i2
curChar
long
l2
curChar
do
i
startsAt
block
switch
jjstateSet
i
case
if
jjbitVec0
i2
l2
break
if
kind
kind
jjCheckNAdd
break
case
break
if
kind
block
jjmatchedKind
kind
jjmatchedPos
curPos
kind
curPos
if
i
jjnewStateCnt
startsAt
jjnewStateCnt
startsAt
return
curPos
try
curChar
readChar
catchClause
e
return
curPos
jjStopStringLiteralDfa_3
int
pos
int
active0
long
switch
pos
case
return
jjStartNfa_3
int
pos
int
active0
long
return
jjMoveNfa_3
jjStopStringLiteralDfa_3
pos
active0
pos
jjStartNfaWithStates_3
int
pos
int
kind
int
state
int
jjmatchedKind
kind
jjmatchedPos
pos
try
curChar
readChar
catchClause
e
return
pos
return
jjMoveNfa_3
state
pos
jjMoveStringLiteralDfa0_3
int
switch
curChar
case
return
jjStopAtPos
case
return
jjStopAtPos
case
return
jjMoveNfa_3
jjMoveNfa_3
int
startState
int
curPos
int
int
nextStates
int
startsAt
jjnewStateCnt
int
i
jjstateSet
startState
int
j
kind
for
forControl
block
if
jjround
ReInitRounds
if
curChar
block
long
l
curChar
do
i
startsAt
block
switch
jjstateSet
i
case
if
l
block
if
kind
kind
jjCheckNAdd
if
l
block
if
kind
kind
jjCheckNAdd
break
case
if
l
break
if
kind
kind
jjCheckNAdd
break
case
if
l
break
kind
jjCheckNAdd
break
case
break
if
curChar
block
long
l
curChar
do
i
startsAt
block
switch
jjstateSet
i
case
if
kind
kind
jjCheckNAdd
break
case
break
block
int
i2
curChar
long
l2
curChar
do
i
startsAt
block
switch
jjstateSet
i
case
if
jjbitVec0
i2
l2
break
if
kind
kind
jjCheckNAdd
break
case
break
if
kind
block
jjmatchedKind
kind
jjmatchedPos
curPos
kind
curPos
if
i
jjnewStateCnt
startsAt
jjnewStateCnt
startsAt
return
curPos
try
curChar
readChar
catchClause
e
return
curPos
jjStopStringLiteralDfa_6
int
pos
int
active0
long
switch
pos
case
if
active0
block
jjmatchedKind
return
return
case
if
active0
block
if
jjmatchedPos
block
jjmatchedKind
jjmatchedPos
return
return
case
return
jjStartNfa_6
int
pos
int
active0
long
return
jjMoveNfa_6
jjStopStringLiteralDfa_6
pos
active0
pos
jjStartNfaWithStates_6
int
pos
int
kind
int
state
int
jjmatchedKind
kind
jjmatchedPos
pos
try
curChar
readChar
catchClause
e
return
pos
return
jjMoveNfa_6
state
pos
jjMoveStringLiteralDfa0_6
int
switch
curChar
case
return
jjMoveStringLiteralDfa1_6
case
return
jjMoveNfa_6
jjMoveStringLiteralDfa1_6
int
active0
long
try
curChar
readChar
catchClause
e
jjStopStringLiteralDfa_6
active0
return
switch
curChar
case
return
jjMoveStringLiteralDfa2_6
active0
case
break
return
jjStartNfa_6
active0
jjMoveStringLiteralDfa2_6
int
old0
long
active0
long
if
active0
old0
return
jjStartNfa_6
old0
try
curChar
readChar
catchClause
e
jjStopStringLiteralDfa_6
active0
return
switch
curChar
case
if
active0
return
jjStopAtPos
break
case
break
return
jjStartNfa_6
active0
jjMoveNfa_6
int
startState
int
curPos
int
int
nextStates
int
startsAt
jjnewStateCnt
int
i
jjstateSet
startState
int
j
kind
for
forControl
block
if
jjround
ReInitRounds
if
curChar
block
long
l
curChar
do
i
startsAt
block
switch
jjstateSet
i
case
if
l
block
if
kind
kind
jjCheckNAdd
if
curChar
block
if
kind
kind
break
case
if
l
break
kind
jjCheckNAdd
break
case
break
if
curChar
block
long
l
curChar
do
i
startsAt
block
switch
jjstateSet
i
case
kind
jjCheckNAdd
break
case
break
block
int
i2
curChar
long
l2
curChar
do
i
startsAt
block
switch
jjstateSet
i
case
if
jjbitVec0
i2
l2
break
if
kind
kind
jjCheckNAdd
break
case
break
if
kind
block
jjmatchedKind
kind
jjmatchedPos
curPos
kind
curPos
if
i
jjnewStateCnt
startsAt
jjnewStateCnt
startsAt
return
curPos
try
curChar
readChar
catchClause
e
return
curPos
jjMoveStringLiteralDfa0_1
int
return
jjMoveNfa_1
jjMoveNfa_1
int
startState
int
curPos
int
int
nextStates
int
startsAt
jjnewStateCnt
int
i
jjstateSet
startState
int
j
kind
for
forControl
block
if
jjround
ReInitRounds
if
curChar
block
long
l
curChar
do
i
startsAt
block
switch
jjstateSet
i
case
if
l
block
if
kind
kind
jjCheckNAdd
if
l
block
if
kind
kind
if
curChar
jjstateSet
jjnewStateCnt
break
case
if
l
break
if
kind
kind
jjCheckNAdd
break
case
if
l
jjAddStates
break
case
if
curChar
kind
kind
break
case
if
curChar
jjstateSet
jjnewStateCnt
break
case
if
curChar
jjstateSet
jjnewStateCnt
break
case
break
if
curChar
block
long
l
curChar
do
i
startsAt
block
switch
jjstateSet
i
case
if
kind
kind
jjCheckNAdd
break
case
if
curChar
jjCheckNAddTwoStates
break
case
jjCheckNAddTwoStates
break
case
if
curChar
jjstateSet
jjnewStateCnt
break
case
if
curChar
jjstateSet
jjnewStateCnt
break
case
if
curChar
jjstateSet
jjnewStateCnt
break
case
if
curChar
jjstateSet
jjnewStateCnt
break
case
if
curChar
jjstateSet
jjnewStateCnt
break
case
break
block
int
i2
curChar
long
l2
curChar
do
i
startsAt
block
switch
jjstateSet
i
case
if
jjbitVec0
i2
l2
break
if
kind
kind
jjCheckNAdd
break
case
if
jjbitVec0
i2
l2
jjAddStates
break
case
break
if
kind
block
jjmatchedKind
kind
jjmatchedPos
curPos
kind
curPos
if
i
jjnewStateCnt
startsAt
jjnewStateCnt
startsAt
return
curPos
try
curChar
readChar
catchClause
e
return
curPos
jjStopStringLiteralDfa_2
int
pos
int
active0
long
switch
pos
case
return
jjStartNfa_2
int
pos
int
active0
long
return
jjMoveNfa_2
jjStopStringLiteralDfa_2
pos
active0
pos
jjStartNfaWithStates_2
int
pos
int
kind
int
state
int
jjmatchedKind
kind
jjmatchedPos
pos
try
curChar
readChar
catchClause
e
return
pos
return
jjMoveNfa_2
state
pos
jjMoveStringLiteralDfa0_2
int
switch
curChar
case
return
jjStopAtPos
case
return
jjStopAtPos
case
return
jjStartNfaWithStates_2
case
return
jjMoveNfa_2
jjMoveNfa_2
int
startState
int
curPos
int
int
nextStates
int
startsAt
jjnewStateCnt
int
i
jjstateSet
startState
int
j
kind
for
forControl
block
if
jjround
ReInitRounds
if
curChar
block
long
l
curChar
do
i
startsAt
block
switch
jjstateSet
i
case
if
l
block
if
kind
kind
jjCheckNAdd
if
l
block
if
kind
kind
jjCheckNAdd
if
curChar
jjstateSet
jjnewStateCnt
if
curChar
block
if
kind
kind
break
case
if
l
break
if
kind
kind
jjCheckNAdd
break
case
if
curChar
kind
kind
break
case
if
curChar
jjstateSet
jjnewStateCnt
break
case
if
l
break
kind
jjCheckNAdd
break
case
break
if
curChar
block
long
l
curChar
do
i
startsAt
block
switch
jjstateSet
i
case
if
kind
kind
jjCheckNAdd
break
case
break
block
int
i2
curChar
long
l2
curChar
do
i
startsAt
block
switch
jjstateSet
i
case
if
jjbitVec0
i2
l2
break
if
kind
kind
jjCheckNAdd
break
case
break
if
kind
block
jjmatchedKind
kind
jjmatchedPos
curPos
kind
curPos
if
i
jjnewStateCnt
startsAt
jjnewStateCnt
startsAt
return
curPos
try
curChar
readChar
catchClause
e
return
curPos
int
jjnextStates
String
jjstrLiteralImages
String
lexStateNames
int
jjnewLexState
long
jjtoToken
long
jjtoSkip
SimpleCharStream
input_stream
int
jjrounds
int
int
jjstateSet
int
char
curChar
HTMLParserTokenManager
stream
SimpleCharStream
if
staticFlag
throw
Error
input_stream
stream
HTMLParserTokenManager
stream
SimpleCharStream
lexState
int
stream
SwitchTo
lexState
ReInit
stream
SimpleCharStream
jjmatchedPos
jjnewStateCnt
curLexState
defaultLexState
input_stream
stream
ReInitRounds
ReInitRounds
int
i
jjround
for
forControl
i
i
jjrounds
i
ReInit
stream
SimpleCharStream
lexState
int
ReInit
stream
SwitchTo
lexState
SwitchTo
lexState
int
if
lexState
lexState
throw
TokenMgrError
lexState
INVALID_LEXICAL_STATE
curLexState
lexState
jjFillToken
Token
Token
t
newToken
jjmatchedKind
kind
jjmatchedKind
String
im
jjstrLiteralImages
jjmatchedKind
image
im
GetImage
im
beginLine
getBeginLine
beginColumn
getBeginColumn
endLine
getEndLine
endColumn
getEndColumn
return
t
int
curLexState
int
defaultLexState
int
jjnewStateCnt
int
jjround
int
jjmatchedPos
int
jjmatchedKind
getNextToken
Token
int
kind
Token
specialToken
Token
matchedToken
int
curPos
for
forControl
block
try
curChar
BeginToken
catchClause
e
jjmatchedKind
matchedToken
jjFillToken
return
matchedToken
switch
curLexState
case
jjmatchedKind
jjmatchedPos
curPos
jjMoveStringLiteralDfa0_0
if
jjmatchedPos
jjmatchedKind
block
jjmatchedKind
break
case
jjmatchedKind
jjmatchedPos
curPos
jjMoveStringLiteralDfa0_1
break
case
jjmatchedKind
jjmatchedPos
curPos
jjMoveStringLiteralDfa0_2
break
case
jjmatchedKind
jjmatchedPos
curPos
jjMoveStringLiteralDfa0_3
break
case
jjmatchedKind
jjmatchedPos
curPos
jjMoveStringLiteralDfa0_4
break
case
jjmatchedKind
jjmatchedPos
curPos
jjMoveStringLiteralDfa0_5
break
case
jjmatchedKind
jjmatchedPos
curPos
jjMoveStringLiteralDfa0_6
break
case
jjmatchedKind
jjmatchedPos
curPos
jjMoveStringLiteralDfa0_7
break
if
jjmatchedKind
block
if
jjmatchedPos
curPos
backup
curPos
jjmatchedPos
if
jjtoToken
jjmatchedKind
jjmatchedKind
block
matchedToken
jjFillToken
if
jjnewLexState
jjmatchedKind
curLexState
jjnewLexState
jjmatchedKind
return
matchedToken
block
if
jjnewLexState
jjmatchedKind
curLexState
jjnewLexState
jjmatchedKind
continue
int
error_line
getEndLine
int
error_column
getEndColumn
String
error_after
boolean
EOFSeen
try
readChar
backup
catchClause
e1
EOFSeen
error_after
curPos
GetImage
if
curChar
curChar
block
error_line
error_column
error_column
if
EOFSeen
block
backup
error_after
curPos
GetImage
throw
TokenMgrError
EOFSeen
curLexState
error_line
error_column
error_after
curChar
LEXICAL_ERROR
HTMLParserConstants
