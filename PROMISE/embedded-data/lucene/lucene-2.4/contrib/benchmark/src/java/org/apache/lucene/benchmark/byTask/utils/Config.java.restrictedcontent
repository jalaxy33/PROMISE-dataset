Config
String
NEW_LINE
getProperty
int
roundNumber
Properties
props
HashMap
valByRound
HashMap
HashMap
colForValByRound
HashMap
String
algorithmText
Config
algReader
Reader
ArrayList
lines
ArrayList
BufferedReader
r
BufferedReader
algReader
int
lastConfigLine
for
forControl
String
line
readLine
line
line
readLine
block
add
line
if
indexOf
block
lastConfigLine
size
close
StringBuffer
sb
StringBuffer
for
forControl
int
i
i
lastConfigLine
i
block
append
get
i
append
NEW_LINE
props
Properties
load
ByteArrayInputStream
toString
getBytes
if
get
block
setProperty
getProperty
if
valueOf
booleanValue
getProperty
block
printProps
sb
StringBuffer
for
forControl
int
i
lastConfigLine
i
size
i
block
append
get
i
append
NEW_LINE
algorithmText
toString
Config
props
Properties
props
props
if
valueOf
booleanValue
getProperty
block
printProps
printProps
println
List
propKeys
ArrayList
keySet
sort
propKeys
for
forControl
Iterator
it
iterator
hasNext
block
String
propName
String
next
println
propName
getProperty
propName
println
get
String
name
String
dflt
String
return
getProperty
name
dflt
set
name
String
value
String
if
get
name
block
throw
Exception
setProperty
name
value
get
int
name
String
dflt
int
int
vals
int
get
name
if
vals
block
return
vals
roundNumber
length
String
sval
getProperty
name
dflt
if
indexOf
block
return
parseInt
sval
int
k
indexOf
String
colName
substring
k
sval
substring
k
put
name
colName
vals
propToIntArray
sval
put
name
vals
return
vals
roundNumber
length
get
double
name
String
dflt
double
double
vals
double
get
name
if
vals
block
return
vals
roundNumber
length
String
sval
getProperty
name
dflt
if
indexOf
block
return
parseDouble
sval
int
k
indexOf
String
colName
substring
k
sval
substring
k
put
name
colName
vals
propToDoubleArray
sval
put
name
vals
return
vals
roundNumber
length
get
boolean
name
String
dflt
boolean
boolean
vals
boolean
get
name
if
vals
block
return
vals
roundNumber
length
String
sval
getProperty
name
dflt
if
indexOf
block
return
valueOf
booleanValue
sval
int
k
indexOf
String
colName
substring
k
sval
substring
k
put
name
colName
vals
propToBooleanArray
sval
put
name
vals
return
vals
roundNumber
length
newRound
int
roundNumber
StringBuffer
sb
append
roundNumber
append
append
roundNumber
StringBuffer
if
size
block
append
for
forControl
Iterator
iter
keySet
iterator
hasNext
block
String
name
String
next
Object
a
get
name
if
a
int
block
int
ai
int
a
int
n1
roundNumber
length
int
n2
roundNumber
length
append
append
name
append
append
ai
n1
append
append
ai
n2
if
a
double
block
double
ad
double
a
int
n1
roundNumber
length
int
n2
roundNumber
length
append
append
name
append
append
ad
n1
append
append
ad
n2
block
boolean
ab
boolean
a
int
n1
roundNumber
length
int
n2
roundNumber
length
append
append
name
append
append
ab
n1
append
append
ab
n2
println
println
toString
println
return
roundNumber
propToIntArray
int
s
String
if
indexOf
block
return
int
parseInt
s
ArrayList
a
ArrayList
StringTokenizer
st
StringTokenizer
s
while
hasMoreTokens
block
String
t
nextToken
add
Integer
t
int
res
int
size
for
forControl
int
i
i
size
i
block
res
i
Integer
get
i
return
res
propToDoubleArray
double
s
String
if
indexOf
block
return
double
parseDouble
s
ArrayList
a
ArrayList
StringTokenizer
st
StringTokenizer
s
while
hasMoreTokens
block
String
t
nextToken
add
Double
t
double
res
double
size
for
forControl
int
i
i
size
i
block
res
i
Double
get
i
return
res
propToBooleanArray
boolean
s
String
if
indexOf
block
return
boolean
valueOf
booleanValue
s
ArrayList
a
ArrayList
StringTokenizer
st
StringTokenizer
s
while
hasMoreTokens
block
String
t
nextToken
add
Boolean
t
boolean
res
boolean
size
for
forControl
int
i
i
size
i
block
res
i
Boolean
get
i
return
res
getColsNamesForValsByRound
String
if
size
block
return
StringBuffer
sb
StringBuffer
for
forControl
Iterator
it
keySet
iterator
hasNext
block
String
name
String
next
String
colName
String
get
name
append
append
colName
return
toString
getColsValuesForValsByRound
String
roundNum
int
if
size
block
return
StringBuffer
sb
StringBuffer
for
forControl
Iterator
it
keySet
iterator
hasNext
block
String
name
String
next
String
colName
String
get
name
String
template
colName
if
roundNum
block
append
formatPaddLeft
template
block
Object
a
get
name
if
a
int
block
int
ai
int
a
int
n
roundNum
length
append
format
ai
n
template
if
a
double
block
double
ad
double
a
int
n
roundNum
length
append
format
ad
n
template
block
boolean
ab
boolean
a
int
n
roundNum
length
append
formatPaddLeft
ab
n
template
return
toString
getRoundNumber
int
return
roundNumber
getAlgorithmText
String
return
algorithmText
