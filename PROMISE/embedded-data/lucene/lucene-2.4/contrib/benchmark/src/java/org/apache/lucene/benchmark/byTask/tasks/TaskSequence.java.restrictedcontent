TaskSequence
int
REPEAT_EXHAUST
ArrayList
tasks
int
repetitions
boolean
parallel
TaskSequence
parent
boolean
letChildReport
int
rate
boolean
perMin
String
seqName
boolean
exhausted
boolean
resetExhausted
PerfTask
tasksArray
boolean
anyExhaustibleTasks
boolean
collapsable
TaskSequence
runData
PerfRunData
name
String
parent
TaskSequence
parallel
boolean
runData
collapsable
name
name
name
name
parallel
setName
name
setSequenceName
parent
parent
parallel
parallel
tasks
ArrayList
initTasksArray
if
tasksArray
block
int
numTasks
size
tasksArray
PerfTask
numTasks
for
forControl
int
k
k
numTasks
k
block
tasksArray
k
PerfTask
get
k
anyExhaustibleTasks
tasksArray
k
ResetInputsTask
anyExhaustibleTasks
tasksArray
k
TaskSequence
isParallel
boolean
return
parallel
getRepetitions
int
return
repetitions
setRepetitions
repetitions
int
repetitions
repetitions
if
repetitions
REPEAT_EXHAUST
block
if
isParallel
block
throw
Exception
if
getRunData
getConfig
get
block
throw
Exception
setSequenceName
getParent
TaskSequence
return
parent
doLogic
int
exhausted
resetExhausted
return
parallel
doParallelTasks
doSerialTasks
doSerialTasks
int
if
rate
block
return
doSerialTasksWithRate
initTasksArray
int
count
for
forControl
int
k
repetitions
REPEAT_EXHAUST
exhausted
k
repetitions
k
block
for
forControl
int
l
l
length
l
try
PerfTask
task
tasksArray
l
count
runAndMaybeStats
letChildReport
if
anyExhaustibleTasks
updateExhausted
task
catchClause
e
exhausted
return
count
doSerialTasksWithRate
int
initTasksArray
long
delayStep
perMin
rate
long
nextStartTime
currentTimeMillis
int
count
for
forControl
int
k
repetitions
REPEAT_EXHAUST
exhausted
k
repetitions
k
block
for
forControl
int
l
l
length
l
block
PerfTask
task
tasksArray
l
long
waitMore
nextStartTime
currentTimeMillis
if
waitMore
block
sleep
waitMore
nextStartTime
delayStep
try
count
runAndMaybeStats
letChildReport
if
anyExhaustibleTasks
updateExhausted
task
catchClause
e
exhausted
return
count
updateExhausted
task
PerfTask
if
task
ResetInputsTask
block
exhausted
resetExhausted
if
task
TaskSequence
block
TaskSequence
t
TaskSequence
task
if
resetExhausted
block
exhausted
resetExhausted
resetExhausted
block
exhausted
exhausted
doParallelTasks
int
initTasksArray
int
count
Thread
t
Thread
repetitions
size
int
indx
for
forControl
int
k
k
repetitions
k
block
for
forControl
int
i
i
length
i
block
PerfTask
task
PerfTask
tasksArray
i
clone
t
indx
Thread
run
try
int
n
runAndMaybeStats
letChildReport
if
anyExhaustibleTasks
updateExhausted
task
synchronized
count
count
n
catchClause
e
exhausted
catchClause
e
throw
RuntimeException
e
startThreads
t
for
forControl
int
i
i
length
i
block
t
i
join
return
count
startThreads
t
Thread
if
rate
block
startlThreadsWithRate
t
return
for
forControl
int
i
i
length
i
block
t
i
start
startlThreadsWithRate
t
Thread
long
delayStep
perMin
rate
long
nextStartTime
currentTimeMillis
for
forControl
int
i
i
length
i
block
long
waitMore
nextStartTime
currentTimeMillis
if
waitMore
block
sleep
waitMore
nextStartTime
delayStep
t
i
start
addTask
task
PerfTask
add
task
setDepth
getDepth
toString
String
String
padd
getPadding
StringBuffer
sb
StringBuffer
toString
append
parallel
append
NEW_LINE
for
forControl
Iterator
it
iterator
hasNext
block
PerfTask
task
PerfTask
next
append
toString
append
NEW_LINE
append
padd
append
letChildReport
parallel
if
repetitions
block
append
repetitions
if
repetitions
REPEAT_EXHAUST
block
append
if
rate
block
append
rate
perMin
return
toString
setNoChildReport
letChildReport
for
forControl
Iterator
it
iterator
hasNext
block
PerfTask
task
PerfTask
next
if
task
TaskSequence
block
TaskSequence
task
getRate
int
return
perMin
rate
rate
setRate
rate
int
perMin
boolean
rate
rate
perMin
perMin
setSequenceName
setSequenceName
seqName
getName
if
repetitions
REPEAT_EXHAUST
block
seqName
if
repetitions
block
seqName
repetitions
if
rate
block
seqName
rate
perMin
if
parallel
toLowerCase
indexOf
block
seqName
getName
String
return
seqName
getTasks
ArrayList
return
tasks
clone
Object
TaskSequence
res
TaskSequence
clone
tasks
ArrayList
for
forControl
int
i
i
size
i
block
add
PerfTask
get
i
return
res
isCollapsable
boolean
return
collapsable
PerfTask
