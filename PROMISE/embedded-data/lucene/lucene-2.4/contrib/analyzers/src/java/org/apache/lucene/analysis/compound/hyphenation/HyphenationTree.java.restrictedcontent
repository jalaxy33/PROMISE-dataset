HyphenationTree
long
serialVersionUID
ByteVector
vspace
HashMap
stoplist
TernaryTree
classmap
TernaryTree
ivalues
HyphenationTree
stoplist
HashMap
classmap
TernaryTree
vspace
ByteVector
alloc
packValues
int
values
String
int
i
n
length
int
m
n
n
n
int
offset
alloc
m
byte
va
getArray
for
forControl
i
i
n
i
block
int
j
i
byte
v
byte
charAt
i
if
i
block
va
j
offset
byte
va
j
offset
v
block
va
j
offset
byte
v
va
m
offset
return
offset
unpackValues
String
k
int
StringBuffer
buf
StringBuffer
byte
v
get
k
while
v
block
char
c
char
v
append
c
c
char
v
if
c
block
break
c
char
c
append
c
v
get
k
return
toString
loadPatterns
f
File
try
InputSource
src
InputSource
toURL
toExternalForm
loadPatterns
src
catchClause
e
throw
HyphenationException
f
getMessage
loadPatterns
source
InputSource
PatternParser
pp
PatternParser
ivalues
TernaryTree
parse
source
trimToSize
trimToSize
trimToSize
ivalues
findPattern
String
pat
String
int
k
find
pat
if
k
block
return
unpackValues
k
return
hstrcmp
int
s
char
si
int
t
char
ti
int
for
forControl
s
si
t
ti
si
ti
block
if
s
si
block
return
if
t
ti
block
return
return
s
si
t
ti
getValues
byte
k
int
StringBuffer
buf
StringBuffer
byte
v
get
k
while
v
block
char
c
char
v
append
c
c
char
v
if
c
block
break
c
char
c
append
c
v
get
k
byte
res
byte
length
for
forControl
int
i
i
length
i
block
res
i
byte
charAt
i
return
res
searchPatterns
word
char
index
int
il
byte
byte
values
int
i
index
char
p
q
char
sp
word
i
p
root
while
p
p
length
block
if
sc
p
block
if
hstrcmp
word
i
getArray
lo
p
block
values
getValues
eq
p
int
j
index
for
forControl
int
k
k
length
k
block
if
j
length
values
k
il
j
block
il
j
values
k
j
return
int
d
sp
sc
p
if
d
block
if
sp
block
break
sp
word
i
p
eq
p
q
p
while
q
q
length
block
if
sc
q
block
break
if
sc
q
block
values
getValues
eq
q
int
j
index
for
forControl
int
k
k
length
k
block
if
j
length
values
k
il
j
block
il
j
values
k
j
break
block
q
lo
q
block
p
d
lo
p
hi
p
hyphenate
Hyphenation
word
String
remainCharCount
int
pushCharCount
int
char
w
toCharArray
return
hyphenate
w
length
remainCharCount
pushCharCount
hyphenate
Hyphenation
w
char
offset
int
len
int
remainCharCount
int
pushCharCount
int
int
i
char
word
char
len
char
c
char
int
iIgnoreAtBeginning
int
iLength
len
boolean
bEndOfLetters
for
forControl
i
i
len
i
block
c
w
offset
i
int
nc
find
c
if
nc
block
if
i
iIgnoreAtBeginning
block
iIgnoreAtBeginning
block
bEndOfLetters
iLength
block
if
bEndOfLetters
block
word
i
iIgnoreAtBeginning
char
nc
block
return
len
iLength
if
len
remainCharCount
pushCharCount
block
return
int
result
int
len
int
k
String
sw
String
word
len
if
containsKey
sw
block
ArrayList
hw
ArrayList
get
sw
int
j
for
forControl
i
i
size
i
block
Object
o
get
i
if
o
String
block
j
String
o
if
j
remainCharCount
j
len
pushCharCount
block
result
k
j
iIgnoreAtBeginning
block
word
word
len
word
len
byte
il
byte
len
for
forControl
i
i
len
i
block
searchPatterns
word
i
il
for
forControl
i
i
len
i
block
if
il
i
i
remainCharCount
i
len
pushCharCount
block
result
k
i
iIgnoreAtBeginning
if
k
block
int
res
int
k
arraycopy
result
res
k
res
res
k
len
return
Hyphenation
res
block
return
addClass
chargroup
String
if
length
block
char
equivChar
charAt
char
key
char
key
for
forControl
int
i
i
length
i
block
key
charAt
i
insert
key
equivChar
addException
word
String
hyphenatedword
ArrayList
put
word
hyphenatedword
addPattern
pattern
String
ivalue
String
int
k
find
ivalue
if
k
block
k
packValues
ivalue
insert
ivalue
char
k
insert
pattern
char
k
printStats
println
toString
length
printStats
TernaryTree
PatternConsumer
Serializable
