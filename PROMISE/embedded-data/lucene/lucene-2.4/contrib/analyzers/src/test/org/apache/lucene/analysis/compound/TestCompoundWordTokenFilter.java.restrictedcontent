TestCompoundWordTokenFilter
String
locations
byte
patternsFileContent
setUp
setUp
getHyphenationPatternFileContents
testHyphenationCompoundWordsDE
String
dict
Reader
reader
getHyphenationReader
if
reader
block
return
HyphenationTree
hyphenator
getHyphenationTree
reader
HyphenationCompoundWordTokenFilter
tf
HyphenationCompoundWordTokenFilter
WhitespaceTokenizer
StringReader
hyphenator
dict
DEFAULT_MIN_WORD_SIZE
DEFAULT_MIN_SUBWORD_SIZE
DEFAULT_MAX_SUBWORD_SIZE
assertFiltersTo
tf
String
int
int
int
testHyphenationCompoundWordsDELongestMatch
String
dict
Reader
reader
getHyphenationReader
if
reader
block
return
HyphenationTree
hyphenator
getHyphenationTree
reader
HyphenationCompoundWordTokenFilter
tf
HyphenationCompoundWordTokenFilter
WhitespaceTokenizer
StringReader
hyphenator
dict
DEFAULT_MIN_WORD_SIZE
DEFAULT_MIN_SUBWORD_SIZE
assertFiltersTo
tf
String
int
int
int
testDumbCompoundWordsSE
String
dict
DictionaryCompoundWordTokenFilter
tf
DictionaryCompoundWordTokenFilter
WhitespaceTokenizer
StringReader
dict
assertFiltersTo
tf
String
int
int
int
testDumbCompoundWordsSELongestMatch
String
dict
DictionaryCompoundWordTokenFilter
tf
DictionaryCompoundWordTokenFilter
WhitespaceTokenizer
StringReader
dict
DEFAULT_MIN_WORD_SIZE
DEFAULT_MIN_SUBWORD_SIZE
DEFAULT_MAX_SUBWORD_SIZE
assertFiltersTo
tf
String
int
int
int
assertFiltersTo
tf
TokenFilter
s
String
startOffset
int
endOffset
int
posIncr
int
Token
reusableToken
Token
for
forControl
int
i
i
length
i
block
Token
nextToken
next
reusableToken
assertNotNull
nextToken
assertEquals
s
i
term
assertEquals
startOffset
i
startOffset
assertEquals
endOffset
i
endOffset
assertEquals
posIncr
i
getPositionIncrement
assertNull
next
reusableToken
getHyphenationPatternFileContents
try
List
urls
LinkedList
asList
locations
shuffle
urls
URL
url
URL
String
get
InputStream
in
openStream
byte
buffer
byte
ByteArrayOutputStream
out
ByteArrayOutputStream
int
count
while
count
read
buffer
block
write
buffer
count
close
close
patternsFileContent
toByteArray
catchClause
e
getHyphenationReader
Reader
filename
String
if
patternsFileContent
block
return
ZipInputStream
zipstream
ZipInputStream
ByteArrayInputStream
patternsFileContent
ZipEntry
entry
while
entry
getNextEntry
block
if
getName
equals
filename
block
byte
buffer
byte
ByteArrayOutputStream
outstream
ByteArrayOutputStream
int
count
while
count
read
buffer
block
write
buffer
count
close
close
return
StringReader
String
toByteArray
return
TestCase
