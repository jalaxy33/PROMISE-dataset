AnalyzerUtil
AnalyzerUtil
getLoggingAnalyzer
Analyzer
child
Analyzer
log
PrintStream
logName
String
if
child
throw
IllegalArgumentException
if
log
throw
IllegalArgumentException
return
Analyzer
tokenStream
TokenStream
fieldName
String
reader
Reader
return
TokenFilter
tokenStream
fieldName
reader
int
position
next
Token
reusableToken
Token
assert
reusableToken
Token
nextToken
next
reusableToken
println
toString
nextToken
return
nextToken
toString
String
token
Token
if
token
return
logName
fieldName
position
getPositionIncrement
return
logName
position
fieldName
term
startOffset
endOffset
type
getMaxTokenAnalyzer
Analyzer
child
Analyzer
maxTokens
int
if
child
throw
IllegalArgumentException
if
maxTokens
throw
IllegalArgumentException
if
maxTokens
MAX_VALUE
return
child
return
Analyzer
tokenStream
TokenStream
fieldName
String
reader
Reader
return
TokenFilter
tokenStream
fieldName
reader
int
todo
maxTokens
next
Token
reusableToken
Token
assert
reusableToken
return
todo
next
reusableToken
getPorterStemmerAnalyzer
Analyzer
child
Analyzer
if
child
throw
IllegalArgumentException
return
Analyzer
tokenStream
TokenStream
fieldName
String
reader
Reader
return
PorterStemFilter
tokenStream
fieldName
reader
getSynonymAnalyzer
Analyzer
child
Analyzer
synonyms
SynonymMap
maxSynonyms
int
if
child
throw
IllegalArgumentException
if
synonyms
throw
IllegalArgumentException
if
maxSynonyms
throw
IllegalArgumentException
if
maxSynonyms
return
child
return
Analyzer
tokenStream
TokenStream
fieldName
String
reader
Reader
return
SynonymTokenFilter
tokenStream
fieldName
reader
synonyms
maxSynonyms
getTokenCachingAnalyzer
Analyzer
child
Analyzer
if
child
throw
IllegalArgumentException
return
Analyzer
HashMap
cache
HashMap
tokenStream
TokenStream
fieldName
String
reader
Reader
ArrayList
tokens
ArrayList
get
fieldName
if
tokens
block
ArrayList
tokens2
ArrayList
TokenStream
tokenStream
TokenFilter
tokenStream
fieldName
reader
next
Token
reusableToken
Token
assert
reusableToken
Token
nextToken
next
reusableToken
if
nextToken
add
clone
return
nextToken
put
fieldName
tokens2
return
tokenStream
block
return
TokenStream
Iterator
iter
iterator
next
Token
token
Token
assert
token
if
hasNext
return
return
Token
next
getMostFrequentTerms
String
analyzer
Analyzer
text
String
limit
int
if
analyzer
throw
IllegalArgumentException
if
text
throw
IllegalArgumentException
if
limit
limit
MAX_VALUE
HashMap
map
HashMap
TokenStream
stream
tokenStream
StringReader
text
try
Token
reusableToken
Token
for
forControl
Token
nextToken
next
reusableToken
nextToken
nextToken
next
reusableToken
block
MutableInteger
freq
MutableInteger
get
term
if
freq
block
freq
MutableInteger
put
term
freq
block
setValue
intValue
catchClause
e
throw
RuntimeException
e
try
close
catchClause
e2
throw
RuntimeException
e2
Map
Entry
entries
Map
Entry
size
entrySet
toArray
entries
sort
entries
Comparator
compare
int
o1
Object
o2
Object
Map
Entry
e1
Map
Entry
o1
Map
Entry
e2
Map
Entry
o2
int
f1
MutableInteger
getValue
int
f2
MutableInteger
getValue
if
f2
f1
return
f2
f1
String
s1
String
getKey
String
s2
String
getKey
return
compareTo
s2
int
size
min
limit
length
String
pairs
String
size
for
forControl
int
i
i
size
i
block
pairs
i
entries
i
getValue
entries
i
getKey
return
pairs
MutableInteger
int
value
MutableInteger
value
int
value
value
intValue
int
return
value
setValue
value
int
value
value
toString
String
return
valueOf
value
Pattern
PARAGRAPHS
compile
getParagraphs
String
text
String
limit
int
return
tokenize
PARAGRAPHS
text
limit
tokenize
String
pattern
Pattern
text
String
limit
int
String
tokens
split
text
limit
for
forControl
int
i
length
i
tokens
i
tokens
i
trim
return
tokens
Pattern
SENTENCES
compile
getSentences
String
text
String
limit
int
int
len
length
if
len
return
String
text
if
limit
limit
MAX_VALUE
String
tokens
String
min
limit
len
int
size
int
i
while
i
len
size
limit
block
int
start
i
while
i
len
isSentenceSeparator
charAt
i
i
if
size
length
block
String
tmp
String
length
arraycopy
tokens
tmp
size
tokens
tmp
tokens
size
substring
trim
start
i
while
i
len
isSentenceSeparator
charAt
i
i
if
size
length
return
tokens
String
results
String
size
arraycopy
tokens
results
size
return
results
isSentenceSeparator
boolean
c
char
switch
c
case
return
case
return
case
return
case
return
case
return
case
return
