FrenchStemmer
Among
a_0
Among
Among
Among
Among
a_1
Among
Among
Among
Among
Among
a_2
Among
Among
Among
Among
Among
Among
Among
a_3
Among
Among
Among
Among
a_4
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
a_5
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
a_6
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
Among
a_7
Among
Among
Among
Among
Among
Among
Among
Among
a_8
Among
Among
Among
Among
Among
char
g_v
char
g_keep_with_s
int
I_p2
int
I_p1
int
I_pV
copy_from
other
FrenchStemmer
I_p2
I_p2
I_p1
I_p1
I_pV
I_pV
copy_from
other
r_prelude
boolean
int
v_1
int
v_2
int
v_3
int
v_4
while
block
v_1
cursor
do
block
while
block
v_2
cursor
do
block
do
block
v_3
cursor
do
block
if
in_grouping
g_v
block
break
bra
cursor
do
block
v_4
cursor
do
block
if
eq_s
block
break
ket
cursor
if
in_grouping
g_v
block
break
slice_from
break
cursor
v_4
do
block
if
eq_s
block
break
ket
cursor
if
in_grouping
g_v
block
break
slice_from
break
cursor
v_4
if
eq_s
block
break
ket
cursor
slice_from
break
cursor
v_3
do
block
bra
cursor
if
eq_s
block
break
ket
cursor
if
in_grouping
g_v
block
break
slice_from
break
cursor
v_3
if
eq_s
block
break
bra
cursor
if
eq_s
block
break
ket
cursor
slice_from
cursor
v_2
break
cursor
v_2
if
cursor
limit
block
break
cursor
continue
cursor
v_1
break
return
r_mark_regions
boolean
int
v_1
int
v_2
int
v_4
I_pV
limit
I_p1
limit
I_p2
limit
v_1
cursor
do
block
do
block
v_2
cursor
do
block
if
in_grouping
g_v
block
break
if
in_grouping
g_v
block
break
if
cursor
limit
block
break
cursor
break
cursor
v_2
do
block
if
find_among
a_0
block
break
break
cursor
v_2
if
cursor
limit
block
break
cursor
while
block
do
block
if
in_grouping
g_v
block
break
break
if
cursor
limit
block
break
cursor
I_pV
cursor
cursor
v_1
v_4
cursor
do
block
while
block
do
block
if
in_grouping
g_v
block
break
break
if
cursor
limit
block
break
cursor
while
block
do
block
if
out_grouping
g_v
block
break
break
if
cursor
limit
block
break
cursor
I_p1
cursor
while
block
do
block
if
in_grouping
g_v
block
break
break
if
cursor
limit
block
break
cursor
while
block
do
block
if
out_grouping
g_v
block
break
break
if
cursor
limit
block
break
cursor
I_p2
cursor
cursor
v_4
return
r_postlude
boolean
int
among_var
int
v_1
while
block
v_1
cursor
do
block
bra
cursor
among_var
find_among
a_1
if
among_var
block
break
ket
cursor
switch
among_var
case
break
case
slice_from
break
case
slice_from
break
case
slice_from
break
case
if
cursor
limit
block
break
cursor
break
continue
cursor
v_1
break
return
r_RV
boolean
if
I_pV
cursor
block
return
return
r_R1
boolean
if
I_p1
cursor
block
return
return
r_R2
boolean
if
I_p2
cursor
block
return
return
r_standard_suffix
boolean
int
among_var
int
v_1
int
v_2
int
v_3
int
v_4
int
v_5
int
v_6
int
v_7
int
v_8
int
v_9
int
v_10
int
v_11
ket
cursor
among_var
find_among_b
a_4
if
among_var
block
return
bra
cursor
switch
among_var
case
return
case
if
r_R2
block
return
slice_del
break
case
if
r_R2
block
return
slice_del
v_1
limit
cursor
do
block
ket
cursor
if
eq_s_b
block
cursor
limit
v_1
break
bra
cursor
do
block
v_2
limit
cursor
do
block
if
r_R2
block
break
slice_del
break
cursor
limit
v_2
slice_from
break
case
if
r_R2
block
return
slice_from
break
case
if
r_R2
block
return
slice_from
break
case
if
r_R2
block
return
slice_from
break
case
if
r_RV
block
return
slice_del
v_3
limit
cursor
do
block
ket
cursor
among_var
find_among_b
a_2
if
among_var
block
cursor
limit
v_3
break
bra
cursor
switch
among_var
case
cursor
limit
v_3
break
case
if
r_R2
block
cursor
limit
v_3
break
slice_del
ket
cursor
if
eq_s_b
block
cursor
limit
v_3
break
bra
cursor
if
r_R2
block
cursor
limit
v_3
break
slice_del
break
case
do
block
v_4
limit
cursor
do
block
if
r_R2
block
break
slice_del
break
cursor
limit
v_4
if
r_R1
block
cursor
limit
v_3
break
slice_from
break
case
if
r_R2
block
cursor
limit
v_3
break
slice_del
break
case
if
r_RV
block
cursor
limit
v_3
break
slice_from
break
break
case
if
r_R2
block
return
slice_del
v_5
limit
cursor
do
block
ket
cursor
among_var
find_among_b
a_3
if
among_var
block
cursor
limit
v_5
break
bra
cursor
switch
among_var
case
cursor
limit
v_5
break
case
do
block
v_6
limit
cursor
do
block
if
r_R2
block
break
slice_del
break
cursor
limit
v_6
slice_from
break
case
do
block
v_7
limit
cursor
do
block
if
r_R2
block
break
slice_del
break
cursor
limit
v_7
slice_from
break
case
if
r_R2
block
cursor
limit
v_5
break
slice_del
break
break
case
if
r_R2
block
return
slice_del
v_8
limit
cursor
do
block
ket
cursor
if
eq_s_b
block
cursor
limit
v_8
break
bra
cursor
if
r_R2
block
cursor
limit
v_8
break
slice_del
ket
cursor
if
eq_s_b
block
cursor
limit
v_8
break
bra
cursor
do
block
v_9
limit
cursor
do
block
if
r_R2
block
break
slice_del
break
cursor
limit
v_9
slice_from
break
case
slice_from
break
case
if
r_R1
block
return
slice_from
break
case
do
block
v_10
limit
cursor
do
block
if
r_R2
block
break
slice_del
break
cursor
limit
v_10
if
r_R1
block
return
slice_from
break
case
if
r_R1
block
return
if
out_grouping_b
g_v
block
return
slice_del
break
case
if
r_RV
block
return
slice_from
return
case
if
r_RV
block
return
slice_from
return
case
v_11
limit
cursor
if
in_grouping_b
g_v
block
return
if
r_RV
block
return
cursor
limit
v_11
slice_del
return
return
r_i_verb_suffix
boolean
int
among_var
int
v_1
int
v_2
v_1
limit
cursor
if
cursor
I_pV
block
return
cursor
I_pV
v_2
limit_backward
limit_backward
cursor
cursor
limit
v_1
ket
cursor
among_var
find_among_b
a_5
if
among_var
block
limit_backward
v_2
return
bra
cursor
switch
among_var
case
limit_backward
v_2
return
case
if
out_grouping_b
g_v
block
limit_backward
v_2
return
slice_del
break
limit_backward
v_2
return
r_verb_suffix
boolean
int
among_var
int
v_1
int
v_2
int
v_3
v_1
limit
cursor
if
cursor
I_pV
block
return
cursor
I_pV
v_2
limit_backward
limit_backward
cursor
cursor
limit
v_1
ket
cursor
among_var
find_among_b
a_6
if
among_var
block
limit_backward
v_2
return
bra
cursor
switch
among_var
case
limit_backward
v_2
return
case
if
r_R2
block
limit_backward
v_2
return
slice_del
break
case
slice_del
break
case
slice_del
v_3
limit
cursor
do
block
ket
cursor
if
eq_s_b
block
cursor
limit
v_3
break
bra
cursor
slice_del
break
limit_backward
v_2
return
r_residual_suffix
boolean
int
among_var
int
v_1
int
v_2
int
v_3
int
v_4
int
v_5
v_1
limit
cursor
do
block
ket
cursor
if
eq_s_b
block
cursor
limit
v_1
break
bra
cursor
v_2
limit
cursor
if
out_grouping_b
g_keep_with_s
block
cursor
limit
v_1
break
cursor
limit
v_2
slice_del
v_3
limit
cursor
if
cursor
I_pV
block
return
cursor
I_pV
v_4
limit_backward
limit_backward
cursor
cursor
limit
v_3
ket
cursor
among_var
find_among_b
a_7
if
among_var
block
limit_backward
v_4
return
bra
cursor
switch
among_var
case
limit_backward
v_4
return
case
if
r_R2
block
limit_backward
v_4
return
do
block
v_5
limit
cursor
do
block
if
eq_s_b
block
break
break
cursor
limit
v_5
if
eq_s_b
block
limit_backward
v_4
return
slice_del
break
case
slice_from
break
case
slice_del
break
case
if
eq_s_b
block
limit_backward
v_4
return
slice_del
break
limit_backward
v_4
return
r_un_double
boolean
int
v_1
v_1
limit
cursor
if
find_among_b
a_8
block
return
cursor
limit
v_1
ket
cursor
if
cursor
limit_backward
block
return
cursor
bra
cursor
slice_del
return
r_un_accent
boolean
int
v_3
block
int
v_1
while
block
do
block
if
out_grouping_b
g_v
block
break
v_1
continue
break
if
v_1
block
return
ket
cursor
do
block
v_3
limit
cursor
do
block
if
eq_s_b
block
break
break
cursor
limit
v_3
if
eq_s_b
block
return
bra
cursor
slice_from
return
stem
boolean
int
v_1
int
v_2
int
v_3
int
v_4
int
v_5
int
v_6
int
v_7
int
v_8
int
v_9
int
v_10
int
v_11
v_1
cursor
do
block
if
r_prelude
block
break
cursor
v_1
v_2
cursor
do
block
if
r_mark_regions
block
break
cursor
v_2
limit_backward
cursor
cursor
limit
v_3
limit
cursor
do
block
do
block
v_4
limit
cursor
do
block
v_5
limit
cursor
do
block
v_6
limit
cursor
do
block
if
r_standard_suffix
block
break
break
cursor
limit
v_6
do
block
if
r_i_verb_suffix
block
break
break
cursor
limit
v_6
if
r_verb_suffix
block
break
cursor
limit
v_5
v_7
limit
cursor
do
block
ket
cursor
do
block
v_8
limit
cursor
do
block
if
eq_s_b
block
break
bra
cursor
slice_from
break
cursor
limit
v_8
if
eq_s_b
block
cursor
limit
v_7
break
bra
cursor
slice_from
break
cursor
limit
v_4
if
r_residual_suffix
block
break
cursor
limit
v_3
v_9
limit
cursor
do
block
if
r_un_double
block
break
cursor
limit
v_9
v_10
limit
cursor
do
block
if
r_un_accent
block
break
cursor
limit
v_10
cursor
limit_backward
v_11
cursor
do
block
if
r_postlude
block
break
cursor
v_11
return
SnowballProgram
