Mode
QName
_name
Stylesheet
_stylesheet
String
_methodName
Vector
_templates
Vector
_childNodeGroup
TestSeq
_childNodeTestSeq
Vector
_attribNodeGroup
TestSeq
_attribNodeTestSeq
Vector
_idxGroup
TestSeq
_idxTestSeq
Vector
_patternGroups
TestSeq
_testSeq
Hashtable
_neededTemplates
Hashtable
Hashtable
_namedTemplates
Hashtable
Hashtable
_templateIHs
Hashtable
Hashtable
_templateILs
Hashtable
LocationPathPattern
_rootPattern
Hashtable
_importLevels
Hashtable
_keys
int
_currentIndex
Mode
name
QName
stylesheet
Stylesheet
suffix
String
_name
name
_stylesheet
stylesheet
_methodName
APPLY_TEMPLATES
suffix
_templates
Vector
_patternGroups
Vector
functionName
String
return
_methodName
functionName
String
min
int
max
int
if
_importLevels
block
_importLevels
Hashtable
put
Integer
max
Integer
min
return
_methodName
max
getClassName
String
return
getClassName
getStylesheet
Stylesheet
return
_stylesheet
addTemplate
template
Template
addElement
template
quicksort
Vector
templates
Vector
p
int
r
int
if
p
r
block
int
q
partition
templates
p
r
quicksort
templates
p
q
quicksort
templates
q
r
return
templates
partition
int
templates
Vector
p
int
r
int
Template
x
Template
elementAt
p
int
i
p
int
j
r
while
block
while
compareTo
Template
elementAt
j
while
compareTo
Template
elementAt
i
if
i
j
block
set
j
set
i
elementAt
j
block
return
j
processPatterns
keys
Hashtable
_keys
keys
_templates
quicksort
_templates
size
Enumeration
templates
elements
while
hasMoreElements
block
Template
template
Template
nextElement
if
isNamed
disabled
block
put
template
Pattern
pattern
getPattern
if
pattern
block
flattenAlternative
pattern
template
keys
prepareTestSequences
flattenAlternative
pattern
Pattern
template
Template
keys
Hashtable
if
pattern
IdKeyPattern
block
IdKeyPattern
idkey
IdKeyPattern
pattern
setTemplate
template
if
_idxGroup
_idxGroup
Vector
add
pattern
if
pattern
AlternativePattern
block
AlternativePattern
alt
AlternativePattern
pattern
flattenAlternative
getLeft
template
keys
flattenAlternative
getRight
template
keys
if
pattern
LocationPathPattern
block
LocationPathPattern
lpp
LocationPathPattern
pattern
setTemplate
template
addPatternToGroup
lpp
addPatternToGroup
lpp
LocationPathPattern
if
lpp
IdKeyPattern
block
addPattern
lpp
block
StepPattern
kernel
getKernelPattern
if
kernel
block
addPattern
getNodeType
lpp
if
_rootPattern
noSmallerThan
_rootPattern
block
_rootPattern
lpp
addPattern
kernelType
int
pattern
LocationPathPattern
int
oldLength
length
if
kernelType
oldLength
block
Vector
newGroups
Vector
kernelType
arraycopy
_patternGroups
newGroups
oldLength
_patternGroups
newGroups
Vector
patterns
if
kernelType
NO_TYPE
block
if
getAxis
ATTRIBUTE
block
patterns
_attribNodeGroup
_attribNodeGroup
Vector
_attribNodeGroup
block
patterns
_childNodeGroup
_childNodeGroup
Vector
_childNodeGroup
block
patterns
_patternGroups
kernelType
_patternGroups
kernelType
Vector
_patternGroups
kernelType
if
size
block
addElement
pattern
block
boolean
inserted
for
forControl
int
i
i
size
i
block
LocationPathPattern
lppToCompare
LocationPathPattern
elementAt
i
if
noSmallerThan
lppToCompare
block
inserted
insertElementAt
pattern
i
break
if
inserted
block
addElement
pattern
completeTestSequences
nodeType
int
patterns
Vector
if
patterns
block
if
_patternGroups
nodeType
block
_patternGroups
nodeType
patterns
block
int
m
size
for
forControl
int
j
j
m
j
block
addPattern
nodeType
LocationPathPattern
elementAt
j
prepareTestSequences
Vector
starGroup
_patternGroups
ELEMENT_NODE
Vector
atStarGroup
_patternGroups
ATTRIBUTE_NODE
completeTestSequences
TEXT_NODE
_childNodeGroup
completeTestSequences
ELEMENT_NODE
_childNodeGroup
completeTestSequences
PROCESSING_INSTRUCTION_NODE
_childNodeGroup
completeTestSequences
COMMENT_NODE
_childNodeGroup
completeTestSequences
ATTRIBUTE_NODE
_attribNodeGroup
Vector
names
getXSLTC
getNamesIndex
if
starGroup
atStarGroup
_childNodeGroup
_attribNodeGroup
block
int
n
length
for
forControl
int
i
NTYPES
i
n
i
block
if
_patternGroups
i
continue
String
name
String
elementAt
i
NTYPES
if
isAttributeName
name
block
completeTestSequences
i
atStarGroup
completeTestSequences
i
_attribNodeGroup
block
completeTestSequences
i
starGroup
completeTestSequences
i
_childNodeGroup
_testSeq
TestSeq
NTYPES
size
int
n
length
for
forControl
int
i
i
n
i
block
Vector
patterns
_patternGroups
i
if
patterns
block
TestSeq
testSeq
TestSeq
patterns
i
reduce
_testSeq
i
testSeq
findTemplates
_neededTemplates
if
_childNodeGroup
size
block
_childNodeTestSeq
TestSeq
_childNodeGroup
reduce
findTemplates
_neededTemplates
if
_idxGroup
size
block
_idxTestSeq
TestSeq
_idxGroup
reduce
findTemplates
_neededTemplates
if
_rootPattern
block
put
getTemplate
compileNamedTemplate
template
Template
classGen
ClassGenerator
ConstantPoolGen
cpg
getConstantPool
InstructionList
il
InstructionList
String
methodName
escape
getName
toString
int
numParams
if
isSimpleNamedTemplate
block
Vector
parameters
getParameters
numParams
size
org
apache
bcel
generic
Type
types
org
apache
bcel
generic
Type
numParams
String
names
String
numParams
types
getJCRefType
DOM_INTF_SIG
types
getJCRefType
NODE_ITERATOR_SIG
types
getJCRefType
TRANSLET_OUTPUT_SIG
types
INT
names
DOCUMENT_PNAME
names
ITERATOR_PNAME
names
TRANSLET_OUTPUT_PNAME
names
NODE_PNAME
for
forControl
int
i
i
numParams
i
block
types
i
getJCRefType
OBJECT_SIG
names
i
valueOf
i
NamedMethodGenerator
methodGen
NamedMethodGenerator
ACC_PUBLIC
VOID
types
names
methodName
getClassName
il
cpg
append
compile
classGen
methodGen
append
RETURN
stripAttributes
setMaxLocals
setMaxStack
removeNOPs
addMethod
getMethod
compileTemplates
classGen
ClassGenerator
methodGen
MethodGenerator
next
InstructionHandle
Enumeration
templates
keys
while
hasMoreElements
block
Template
template
Template
nextElement
compileNamedTemplate
template
classGen
templates
keys
while
hasMoreElements
block
Template
template
Template
nextElement
if
hasContents
block
InstructionList
til
compile
classGen
methodGen
append
GOTO_W
next
put
template
til
put
template
getStart
block
put
template
next
appendTemplateCode
body
InstructionList
Enumeration
templates
keys
while
hasMoreElements
block
Object
iList
get
nextElement
if
iList
block
append
InstructionList
iList
appendTestSequences
body
InstructionList
int
n
length
for
forControl
int
i
i
n
i
block
TestSeq
testSeq
_testSeq
i
if
testSeq
block
InstructionList
il
getInstructionList
if
il
append
il
compileGetChildren
classGen
ClassGenerator
methodGen
MethodGenerator
node
int
ConstantPoolGen
cpg
getConstantPool
InstructionList
il
getInstructionList
int
git
addInterfaceMethodref
DOM_INTF
GET_CHILDREN
GET_CHILDREN_SIG
append
loadDOM
append
ILOAD
node
append
INVOKEINTERFACE
git
compileDefaultRecursion
InstructionList
classGen
ClassGenerator
methodGen
MethodGenerator
next
InstructionHandle
ConstantPoolGen
cpg
getConstantPool
InstructionList
il
InstructionList
String
applyTemplatesSig
getApplyTemplatesSig
int
git
addInterfaceMethodref
DOM_INTF
GET_CHILDREN
GET_CHILDREN_SIG
int
applyTemplates
addMethodref
getClassName
functionName
applyTemplatesSig
append
loadTranslet
append
loadDOM
append
loadDOM
append
ILOAD
_currentIndex
append
INVOKEINTERFACE
git
append
loadHandler
append
INVOKEVIRTUAL
applyTemplates
append
GOTO_W
next
return
il
compileDefaultText
InstructionList
classGen
ClassGenerator
methodGen
MethodGenerator
next
InstructionHandle
ConstantPoolGen
cpg
getConstantPool
InstructionList
il
InstructionList
int
chars
addInterfaceMethodref
DOM_INTF
CHARACTERS
CHARACTERS_SIG
append
loadDOM
append
ILOAD
_currentIndex
append
loadHandler
append
INVOKEINTERFACE
chars
append
GOTO_W
next
return
il
compileNamespaces
InstructionList
classGen
ClassGenerator
methodGen
MethodGenerator
isNamespace
boolean
isAttribute
boolean
attrFlag
boolean
defaultTarget
InstructionHandle
XSLTC
xsltc
getParser
getXSLTC
ConstantPoolGen
cpg
getConstantPool
Vector
namespaces
getNamespaceIndex
Vector
names
getNamesIndex
int
namespaceCount
size
int
namesCount
size
InstructionList
il
InstructionList
int
types
int
namespaceCount
InstructionHandle
targets
InstructionHandle
length
if
namespaceCount
block
boolean
compiled
for
forControl
int
i
i
namespaceCount
i
block
targets
i
defaultTarget
types
i
i
for
forControl
int
i
NTYPES
i
NTYPES
namesCount
i
block
if
isNamespace
isAttribute
i
attrFlag
block
String
name
String
elementAt
i
NTYPES
String
namespace
substring
lastIndexOf
int
type
registerNamespace
namespace
if
i
length
_testSeq
i
block
targets
type
_testSeq
compile
classGen
methodGen
defaultTarget
compiled
if
compiled
return
int
getNS
addInterfaceMethodref
DOM_INTF
append
loadDOM
append
ILOAD
_currentIndex
append
INVOKEINTERFACE
getNS
append
SWITCH
types
targets
defaultTarget
return
il
block
return
compileApplyTemplates
classGen
ClassGenerator
XSLTC
xsltc
getParser
getXSLTC
ConstantPoolGen
cpg
getConstantPool
Vector
names
getNamesIndex
org
apache
bcel
generic
Type
argTypes
org
apache
bcel
generic
Type
argTypes
getJCRefType
DOM_INTF_SIG
argTypes
getJCRefType
NODE_ITERATOR_SIG
argTypes
getJCRefType
TRANSLET_OUTPUT_SIG
String
argNames
String
argNames
DOCUMENT_PNAME
argNames
ITERATOR_PNAME
argNames
TRANSLET_OUTPUT_PNAME
InstructionList
mainIL
InstructionList
MethodGenerator
methodGen
MethodGenerator
ACC_PUBLIC
ACC_FINAL
VOID
argTypes
argNames
functionName
getClassName
mainIL
getConstantPool
addException
LocalVariableGen
current
current
addLocalVariable2
INT
getEnd
_currentIndex
getIndex
InstructionList
body
InstructionList
append
NOP
InstructionList
ilLoop
InstructionList
append
loadIterator
append
nextNode
append
DUP
append
ISTORE
_currentIndex
BranchHandle
ifeq
append
IFLT
BranchHandle
loop
append
GOTO_W
setTarget
append
RETURN
InstructionHandle
ihLoop
getStart
InstructionList
ilRecurse
compileDefaultRecursion
classGen
methodGen
ihLoop
InstructionHandle
ihRecurse
getStart
InstructionList
ilText
compileDefaultText
classGen
methodGen
ihLoop
InstructionHandle
ihText
getStart
int
types
int
NTYPES
size
for
forControl
int
i
i
length
i
block
types
i
i
boolean
isAttribute
boolean
length
boolean
isNamespace
boolean
length
for
forControl
int
i
i
size
i
block
String
name
String
elementAt
i
isAttribute
i
NTYPES
isAttributeName
name
isNamespace
i
NTYPES
isNamespaceName
name
compileTemplates
classGen
methodGen
ihLoop
TestSeq
elemTest
_testSeq
ELEMENT_NODE
InstructionHandle
ihElem
ihRecurse
if
elemTest
ihElem
compile
classGen
methodGen
ihRecurse
TestSeq
attrTest
_testSeq
ATTRIBUTE_NODE
InstructionHandle
ihAttr
ihText
if
attrTest
ihAttr
compile
classGen
methodGen
ihAttr
InstructionList
ilKey
if
_idxTestSeq
block
setTarget
compile
classGen
methodGen
getStart
ilKey
getInstructionList
block
setTarget
getStart
if
_childNodeTestSeq
block
double
nodePrio
getPriority
int
nodePos
getPosition
double
elemPrio
MAX_VALUE
int
elemPos
MIN_VALUE
if
elemTest
block
elemPrio
getPriority
elemPos
getPosition
if
elemPrio
NaN
elemPrio
nodePrio
elemPrio
nodePrio
elemPos
nodePos
block
ihElem
compile
classGen
methodGen
ihLoop
TestSeq
textTest
_testSeq
TEXT_NODE
double
textPrio
MAX_VALUE
int
textPos
MIN_VALUE
if
textTest
block
textPrio
getPriority
textPos
getPosition
if
textPrio
NaN
textPrio
nodePrio
textPrio
nodePrio
textPos
nodePos
block
ihText
compile
classGen
methodGen
ihLoop
_testSeq
TEXT_NODE
_childNodeTestSeq
InstructionHandle
elemNamespaceHandle
ihElem
InstructionList
nsElem
compileNamespaces
classGen
methodGen
isNamespace
isAttribute
ihElem
if
nsElem
elemNamespaceHandle
getStart
InstructionHandle
attrNamespaceHandle
ihAttr
InstructionList
nsAttr
compileNamespaces
classGen
methodGen
isNamespace
isAttribute
ihAttr
if
nsAttr
attrNamespaceHandle
getStart
InstructionHandle
targets
InstructionHandle
length
for
forControl
int
i
NTYPES
i
length
i
block
TestSeq
testSeq
_testSeq
i
if
isNamespace
i
block
if
isAttribute
i
targets
i
attrNamespaceHandle
targets
i
elemNamespaceHandle
if
testSeq
block
if
isAttribute
i
targets
i
compile
classGen
methodGen
attrNamespaceHandle
targets
i
compile
classGen
methodGen
elemNamespaceHandle
block
targets
i
ihLoop
targets
ROOT_NODE
_rootPattern
getTemplateInstructionHandle
getTemplate
ihRecurse
targets
DOCUMENT_NODE
_rootPattern
getTemplateInstructionHandle
getTemplate
ihRecurse
targets
TEXT_NODE
_testSeq
TEXT_NODE
_testSeq
TEXT_NODE
compile
classGen
methodGen
ihText
ihText
targets
NAMESPACE_NODE
ihLoop
targets
ELEMENT_NODE
elemNamespaceHandle
targets
ATTRIBUTE_NODE
attrNamespaceHandle
InstructionHandle
ihPI
ihLoop
if
_childNodeTestSeq
ihPI
ihElem
if
_testSeq
PROCESSING_INSTRUCTION_NODE
targets
PROCESSING_INSTRUCTION_NODE
_testSeq
PROCESSING_INSTRUCTION_NODE
compile
classGen
methodGen
ihPI
targets
PROCESSING_INSTRUCTION_NODE
ihPI
InstructionHandle
ihComment
ihLoop
if
_childNodeTestSeq
ihComment
ihElem
targets
COMMENT_NODE
_testSeq
COMMENT_NODE
_testSeq
COMMENT_NODE
compile
classGen
methodGen
ihComment
ihComment
targets
CDATA_SECTION_NODE
ihLoop
targets
DOCUMENT_FRAGMENT_NODE
ihLoop
targets
DOCUMENT_TYPE_NODE
ihLoop
targets
ENTITY_NODE
ihLoop
targets
ENTITY_REFERENCE_NODE
ihLoop
targets
NOTATION_NODE
ihLoop
for
forControl
int
i
NTYPES
i
length
i
block
TestSeq
testSeq
_testSeq
i
if
testSeq
isNamespace
block
if
isAttribute
i
targets
i
attrNamespaceHandle
targets
i
elemNamespaceHandle
block
if
isAttribute
i
targets
i
compile
classGen
methodGen
attrNamespaceHandle
targets
i
compile
classGen
methodGen
elemNamespaceHandle
if
ilKey
insert
ilKey
int
getType
addInterfaceMethodref
DOM_INTF
append
loadDOM
append
ILOAD
_currentIndex
append
INVOKEINTERFACE
getType
InstructionHandle
disp
append
SWITCH
types
targets
ihLoop
appendTestSequences
body
appendTemplateCode
body
if
nsElem
append
nsElem
if
nsAttr
append
nsAttr
append
ilRecurse
append
ilText
append
GOTO_W
ihLoop
append
body
append
ilLoop
peepHoleOptimization
methodGen
stripAttributes
setMaxLocals
setMaxStack
removeNOPs
addMethod
getMethod
if
_importLevels
block
Enumeration
levels
keys
while
hasMoreElements
block
Integer
max
Integer
nextElement
Integer
min
Integer
get
max
compileApplyImports
classGen
intValue
intValue
compileTemplateCalls
classGen
ClassGenerator
methodGen
MethodGenerator
next
InstructionHandle
min
int
max
int
Enumeration
templates
keys
while
hasMoreElements
block
Template
template
Template
nextElement
int
prec
getImportPrecedence
if
prec
min
prec
max
block
if
hasContents
block
InstructionList
til
compile
classGen
methodGen
append
GOTO_W
next
put
template
til
put
template
getStart
block
put
template
next
compileApplyImports
classGen
ClassGenerator
min
int
max
int
XSLTC
xsltc
getParser
getXSLTC
ConstantPoolGen
cpg
getConstantPool
Vector
names
getNamesIndex
_namedTemplates
Hashtable
_neededTemplates
Hashtable
_templateIHs
Hashtable
_templateILs
Hashtable
_patternGroups
Vector
_rootPattern
Vector
oldTemplates
_templates
_templates
Vector
Enumeration
templates
elements
while
hasMoreElements
block
Template
template
Template
nextElement
int
prec
getImportPrecedence
if
prec
min
prec
max
addTemplate
template
processPatterns
_keys
org
apache
bcel
generic
Type
argTypes
org
apache
bcel
generic
Type
argTypes
getJCRefType
DOM_INTF_SIG
argTypes
getJCRefType
NODE_ITERATOR_SIG
argTypes
getJCRefType
TRANSLET_OUTPUT_SIG
argTypes
INT
String
argNames
String
argNames
DOCUMENT_PNAME
argNames
ITERATOR_PNAME
argNames
TRANSLET_OUTPUT_PNAME
argNames
NODE_PNAME
InstructionList
mainIL
InstructionList
MethodGenerator
methodGen
MethodGenerator
ACC_PUBLIC
ACC_FINAL
VOID
argTypes
argNames
functionName
max
getClassName
mainIL
getConstantPool
addException
LocalVariableGen
current
current
addLocalVariable2
INT
getEnd
_currentIndex
getIndex
append
ILOAD
getLocalIndex
NODE_PNAME
append
ISTORE
_currentIndex
InstructionList
body
InstructionList
append
NOP
InstructionList
ilLoop
InstructionList
append
RETURN
InstructionHandle
ihLoop
getStart
InstructionList
ilRecurse
compileDefaultRecursion
classGen
methodGen
ihLoop
InstructionHandle
ihRecurse
getStart
InstructionList
ilText
compileDefaultText
classGen
methodGen
ihLoop
InstructionHandle
ihText
getStart
int
types
int
NTYPES
size
for
forControl
int
i
i
length
i
block
types
i
i
boolean
isAttribute
boolean
length
boolean
isNamespace
boolean
length
for
forControl
int
i
i
size
i
block
String
name
String
elementAt
i
isAttribute
i
NTYPES
isAttributeName
name
isNamespace
i
NTYPES
isNamespaceName
name
compileTemplateCalls
classGen
methodGen
ihLoop
min
max
TestSeq
elemTest
_testSeq
ELEMENT_NODE
InstructionHandle
ihElem
ihRecurse
if
elemTest
block
ihElem
compile
classGen
methodGen
ihLoop
TestSeq
attrTest
_testSeq
ATTRIBUTE_NODE
InstructionHandle
ihAttr
ihLoop
if
attrTest
block
ihAttr
compile
classGen
methodGen
ihAttr
InstructionList
ilKey
if
_idxTestSeq
block
ilKey
getInstructionList
if
_childNodeTestSeq
block
double
nodePrio
getPriority
int
nodePos
getPosition
double
elemPrio
MAX_VALUE
int
elemPos
MIN_VALUE
if
elemTest
block
elemPrio
getPriority
elemPos
getPosition
if
elemPrio
NaN
elemPrio
nodePrio
elemPrio
nodePrio
elemPos
nodePos
block
ihElem
compile
classGen
methodGen
ihLoop
TestSeq
textTest
_testSeq
TEXT_NODE
double
textPrio
MAX_VALUE
int
textPos
MIN_VALUE
if
textTest
block
textPrio
getPriority
textPos
getPosition
if
textPrio
NaN
textPrio
nodePrio
textPrio
nodePrio
textPos
nodePos
block
ihText
compile
classGen
methodGen
ihLoop
_testSeq
TEXT_NODE
_childNodeTestSeq
InstructionHandle
elemNamespaceHandle
ihElem
InstructionList
nsElem
compileNamespaces
classGen
methodGen
isNamespace
isAttribute
ihElem
if
nsElem
elemNamespaceHandle
getStart
InstructionList
nsAttr
compileNamespaces
classGen
methodGen
isNamespace
isAttribute
ihAttr
InstructionHandle
attrNamespaceHandle
ihAttr
if
nsAttr
attrNamespaceHandle
getStart
InstructionHandle
targets
InstructionHandle
length
for
forControl
int
i
NTYPES
i
length
i
block
TestSeq
testSeq
_testSeq
i
if
isNamespace
i
block
if
isAttribute
i
targets
i
attrNamespaceHandle
targets
i
elemNamespaceHandle
if
testSeq
block
if
isAttribute
i
targets
i
compile
classGen
methodGen
attrNamespaceHandle
targets
i
compile
classGen
methodGen
elemNamespaceHandle
block
targets
i
ihLoop
targets
ROOT_NODE
_rootPattern
getTemplateInstructionHandle
getTemplate
ihRecurse
targets
DOCUMENT_NODE
_rootPattern
getTemplateInstructionHandle
getTemplate
ihRecurse
targets
TEXT_NODE
_testSeq
TEXT_NODE
_testSeq
TEXT_NODE
compile
classGen
methodGen
ihText
ihText
targets
NAMESPACE_NODE
ihLoop
targets
ELEMENT_NODE
elemNamespaceHandle
targets
ATTRIBUTE_NODE
attrNamespaceHandle
InstructionHandle
ihPI
ihLoop
if
_childNodeTestSeq
ihPI
ihElem
if
_testSeq
PROCESSING_INSTRUCTION_NODE
block
targets
PROCESSING_INSTRUCTION_NODE
_testSeq
PROCESSING_INSTRUCTION_NODE
compile
classGen
methodGen
ihPI
block
targets
PROCESSING_INSTRUCTION_NODE
ihPI
InstructionHandle
ihComment
ihLoop
if
_childNodeTestSeq
ihComment
ihElem
targets
COMMENT_NODE
_testSeq
COMMENT_NODE
_testSeq
COMMENT_NODE
compile
classGen
methodGen
ihComment
ihComment
targets
CDATA_SECTION_NODE
ihLoop
targets
DOCUMENT_FRAGMENT_NODE
ihLoop
targets
DOCUMENT_TYPE_NODE
ihLoop
targets
ENTITY_NODE
ihLoop
targets
ENTITY_REFERENCE_NODE
ihLoop
targets
NOTATION_NODE
ihLoop
for
forControl
int
i
NTYPES
i
length
i
block
TestSeq
testSeq
_testSeq
i
if
testSeq
isNamespace
block
if
isAttribute
i
targets
i
attrNamespaceHandle
targets
i
elemNamespaceHandle
block
if
isAttribute
i
targets
i
compile
classGen
methodGen
attrNamespaceHandle
targets
i
compile
classGen
methodGen
elemNamespaceHandle
if
ilKey
insert
ilKey
int
getType
addInterfaceMethodref
DOM_INTF
append
loadDOM
append
ILOAD
_currentIndex
append
INVOKEINTERFACE
getType
InstructionHandle
disp
append
SWITCH
types
targets
ihLoop
appendTestSequences
body
appendTemplateCode
body
if
nsElem
append
nsElem
if
nsAttr
append
nsAttr
append
ilRecurse
append
ilText
append
body
append
ilLoop
peepHoleOptimization
methodGen
stripAttributes
setMaxLocals
setMaxStack
removeNOPs
addMethod
getMethod
_templates
oldTemplates
peepHoleOptimization
methodGen
MethodGenerator
InstructionList
il
getInstructionList
InstructionFinder
find
InstructionFinder
il
InstructionHandle
ih
String
pattern
pattern
for
forControl
Iterator
iter
search
pattern
hasNext
block
InstructionHandle
match
InstructionHandle
next
try
if
match
hasTargeters
match
hasTargeters
block
delete
match
match
catchClause
e
pattern
for
forControl
Iterator
iter
search
pattern
hasNext
block
InstructionHandle
match
InstructionHandle
next
try
org
apache
bcel
generic
ILOAD
iload1
org
apache
bcel
generic
ILOAD
match
getInstruction
org
apache
bcel
generic
ILOAD
iload2
org
apache
bcel
generic
ILOAD
match
getInstruction
org
apache
bcel
generic
ISTORE
istore
org
apache
bcel
generic
ISTORE
match
getInstruction
if
match
hasTargeters
match
hasTargeters
match
hasTargeters
getIndex
getIndex
getIndex
getIndex
block
delete
match
match
catchClause
e
pattern
for
forControl
Iterator
iter
search
pattern
hasNext
block
InstructionHandle
match
InstructionHandle
next
try
if
match
hasTargeters
match
hasTargeters
match
hasTargeters
block
Instruction
load_m
match
getInstruction
insert
match
load_m
delete
match
match
catchClause
e
pattern
for
forControl
Iterator
iter
search
pattern
hasNext
block
InstructionHandle
match
InstructionHandle
next
try
if
match
hasTargeters
block
org
apache
bcel
generic
ALOAD
aload1
org
apache
bcel
generic
ALOAD
match
getInstruction
org
apache
bcel
generic
ALOAD
aload2
org
apache
bcel
generic
ALOAD
match
getInstruction
if
getIndex
getIndex
block
insert
match
DUP
delete
match
catchClause
e
getTemplateInstructionHandle
InstructionHandle
template
Template
return
InstructionHandle
get
template
isAttributeName
boolean
qname
String
int
col
lastIndexOf
return
charAt
col
isNamespaceName
boolean
qname
String
int
col
lastIndexOf
return
col
charAt
length
Constants
