ElemNumber
long
serialVersionUID
CharArrayWrapper
m_alphaCountTable
MyPrefixResolver
DTM
dtm
int
handle
boolean
handleNullPrefix
MyPrefixResolver
xpathExpressionContext
Node
dtm
DTM
handle
int
handleNullPrefix
boolean
dtm
dtm
handle
handle
handleNullPrefix
handleNullPrefix
getNamespaceForPrefix
String
prefix
String
return
getNamespaceURI
handle
getNamespaceForPrefix
String
prefix
String
context
Node
return
getNamespaceForPrefix
prefix
getBaseIdentifier
String
return
getBaseIdentifier
handlesNullPrefixes
boolean
return
handleNullPrefix
PrefixResolver
XPath
m_countMatchPattern
setCount
v
XPath
m_countMatchPattern
v
getCount
XPath
return
m_countMatchPattern
XPath
m_fromMatchPattern
setFrom
v
XPath
m_fromMatchPattern
v
getFrom
XPath
return
m_fromMatchPattern
int
m_level
NUMBERLEVEL_SINGLE
setLevel
v
int
m_level
v
getLevel
int
return
m_level
XPath
m_valueExpr
setValue
v
XPath
m_valueExpr
v
getValue
XPath
return
m_valueExpr
AVT
m_format_avt
setFormat
v
AVT
m_format_avt
v
getFormat
AVT
return
m_format_avt
AVT
m_lang_avt
setLang
v
AVT
m_lang_avt
v
getLang
AVT
return
m_lang_avt
AVT
m_lettervalue_avt
setLetterValue
v
AVT
m_lettervalue_avt
v
getLetterValue
AVT
return
m_lettervalue_avt
AVT
m_groupingSeparator_avt
setGroupingSeparator
v
AVT
m_groupingSeparator_avt
v
getGroupingSeparator
AVT
return
m_groupingSeparator_avt
AVT
m_groupingSize_avt
setGroupingSize
v
AVT
m_groupingSize_avt
v
getGroupingSize
AVT
return
m_groupingSize_avt
DecimalToRoman
m_romanConvertTable
DecimalToRoman
DecimalToRoman
DecimalToRoman
DecimalToRoman
DecimalToRoman
DecimalToRoman
DecimalToRoman
compose
sroot
StylesheetRoot
compose
sroot
StylesheetRoot
ComposeState
cstate
getComposeState
java
util
Vector
vnames
getVariableNames
if
m_countMatchPattern
fixupVariables
vnames
getGlobalsSize
if
m_format_avt
fixupVariables
vnames
getGlobalsSize
if
m_fromMatchPattern
fixupVariables
vnames
getGlobalsSize
if
m_groupingSeparator_avt
fixupVariables
vnames
getGlobalsSize
if
m_groupingSize_avt
fixupVariables
vnames
getGlobalsSize
if
m_lang_avt
fixupVariables
vnames
getGlobalsSize
if
m_lettervalue_avt
fixupVariables
vnames
getGlobalsSize
if
m_valueExpr
fixupVariables
vnames
getGlobalsSize
getXSLToken
int
return
ELEMNAME_NUMBER
getNodeName
String
return
ELEMNAME_NUMBER_STRING
execute
transformer
TransformerImpl
if
getDebug
getTraceManager
fireTraceEvent
int
sourceNode
getXPathContext
getCurrentNode
String
countString
getCountString
transformer
sourceNode
try
getResultTreeHandler
characters
toCharArray
length
catchClause
se
throw
TransformerException
se
if
getDebug
getTraceManager
fireTraceEndEvent
appendChild
ElemTemplateElement
newChild
ElemTemplateElement
error
ER_CANNOT_ADD
Object
getNodeName
getNodeName
return
findAncestor
int
xctxt
XPathContext
fromMatchPattern
XPath
countMatchPattern
XPath
context
int
namespaceContext
ElemNumber
DTM
dtm
getDTM
context
while
NULL
context
block
if
fromMatchPattern
block
if
getMatchScore
xctxt
context
MATCH_SCORE_NONE
block
break
if
countMatchPattern
block
if
getMatchScore
xctxt
context
MATCH_SCORE_NONE
block
break
context
getParent
context
return
context
findPrecedingOrAncestorOrSelf
int
xctxt
XPathContext
fromMatchPattern
XPath
countMatchPattern
XPath
context
int
namespaceContext
ElemNumber
DTM
dtm
getDTM
context
while
NULL
context
block
if
fromMatchPattern
block
if
getMatchScore
xctxt
context
MATCH_SCORE_NONE
block
context
NULL
break
if
countMatchPattern
block
if
getMatchScore
xctxt
context
MATCH_SCORE_NONE
block
break
int
prevSibling
getPreviousSibling
context
if
NULL
prevSibling
block
context
getParent
context
block
context
getLastChild
prevSibling
if
context
NULL
context
prevSibling
return
context
getCountMatchPattern
XPath
support
XPathContext
contextNode
int
XPath
countMatchPattern
m_countMatchPattern
DTM
dtm
getDTM
contextNode
if
countMatchPattern
block
switch
getNodeType
contextNode
case
ELEMENT_NODE
MyPrefixResolver
resolver
if
getNamespaceURI
contextNode
block
resolver
MyPrefixResolver
getNode
contextNode
dtm
contextNode
block
resolver
MyPrefixResolver
getNode
contextNode
dtm
contextNode
countMatchPattern
XPath
getNodeName
contextNode
resolver
MATCH
getErrorListener
break
case
ATTRIBUTE_NODE
countMatchPattern
XPath
getNodeName
contextNode
MATCH
getErrorListener
break
case
CDATA_SECTION_NODE
TEXT_NODE
countMatchPattern
XPath
MATCH
getErrorListener
break
case
COMMENT_NODE
countMatchPattern
XPath
MATCH
getErrorListener
break
case
DOCUMENT_NODE
countMatchPattern
XPath
MATCH
getErrorListener
break
case
PROCESSING_INSTRUCTION_NODE
countMatchPattern
XPath
getNodeName
contextNode
MATCH
getErrorListener
break
case
countMatchPattern
return
countMatchPattern
getCountString
String
transformer
TransformerImpl
sourceNode
int
long
list
XPathContext
xctxt
getXPathContext
CountersTable
ctable
getCountersTable
if
m_valueExpr
block
XObject
countObj
execute
xctxt
sourceNode
double
d_count
floor
num
if
isNaN
d_count
return
if
d_count
isInfinite
d_count
return
if
isInfinite
d_count
return
if
d_count
return
block
long
count
long
d_count
list
long
list
count
block
if
NUMBERLEVEL_ANY
m_level
block
list
long
list
countNode
xctxt
sourceNode
block
NodeVector
ancestors
getMatchingAncestors
xctxt
sourceNode
NUMBERLEVEL_SINGLE
m_level
int
lastIndex
size
if
lastIndex
block
list
long
lastIndex
for
forControl
int
i
lastIndex
i
i
block
int
target
elementAt
i
list
lastIndex
i
countNode
xctxt
target
return
list
formatNumberList
transformer
list
sourceNode
getPreviousNode
int
xctxt
XPathContext
pos
int
XPath
countMatchPattern
getCountMatchPattern
xctxt
pos
DTM
dtm
getDTM
pos
if
NUMBERLEVEL_ANY
m_level
block
XPath
fromMatchPattern
m_fromMatchPattern
while
NULL
pos
block
int
next
getPreviousSibling
pos
if
NULL
next
block
next
getParent
pos
if
NULL
next
fromMatchPattern
getMatchScore
xctxt
next
MATCH_SCORE_NONE
getNodeType
next
DOCUMENT_NODE
block
pos
NULL
break
block
int
child
next
while
NULL
child
block
child
getLastChild
next
if
NULL
child
next
child
pos
next
if
NULL
pos
countMatchPattern
getMatchScore
xctxt
pos
MATCH_SCORE_NONE
block
break
block
while
NULL
pos
block
pos
getPreviousSibling
pos
if
NULL
pos
countMatchPattern
getMatchScore
xctxt
pos
MATCH_SCORE_NONE
block
break
return
pos
getTargetNode
int
xctxt
XPathContext
sourceNode
int
int
target
NULL
XPath
countMatchPattern
getCountMatchPattern
xctxt
sourceNode
if
NUMBERLEVEL_ANY
m_level
block
target
findPrecedingOrAncestorOrSelf
xctxt
m_fromMatchPattern
countMatchPattern
sourceNode
block
target
findAncestor
xctxt
m_fromMatchPattern
countMatchPattern
sourceNode
return
target
getMatchingAncestors
NodeVector
xctxt
XPathContext
node
int
stopAtFirstFound
boolean
NodeSetDTM
ancestors
NodeSetDTM
getDTMManager
XPath
countMatchPattern
getCountMatchPattern
xctxt
node
DTM
dtm
getDTM
node
while
NULL
node
block
if
m_fromMatchPattern
getMatchScore
xctxt
node
MATCH_SCORE_NONE
block
if
stopAtFirstFound
break
if
countMatchPattern
println
if
getMatchScore
xctxt
node
MATCH_SCORE_NONE
block
addElement
node
if
stopAtFirstFound
break
node
getParent
node
return
ancestors
getLocale
Locale
transformer
TransformerImpl
contextNode
int
Locale
locale
if
m_lang_avt
block
XPathContext
xctxt
getXPathContext
String
langValue
evaluate
xctxt
contextNode
if
langValue
block
locale
Locale
toUpperCase
if
locale
block
getMsgMgr
warn
getDTM
getNode
contextNode
contextNode
WG_LOCALE_NOT_FOUND
Object
langValue
locale
getDefault
block
locale
getDefault
return
locale
getNumberFormatter
DecimalFormat
transformer
TransformerImpl
contextNode
int
Locale
locale
Locale
getLocale
clone
transformer
contextNode
DecimalFormat
formatter
String
digitGroupSepValue
m_groupingSeparator_avt
evaluate
getXPathContext
contextNode
if
digitGroupSepValue
isSimple
length
block
getMsgMgr
warn
WG_ILLEGAL_ATTRIBUTE_VALUE
Object
ATTRNAME_NAME
getName
String
nDigitsPerGroupValue
m_groupingSize_avt
evaluate
getXPathContext
contextNode
if
digitGroupSepValue
nDigitsPerGroupValue
length
block
try
formatter
DecimalFormat
getNumberInstance
locale
setGroupingSize
valueOf
intValue
nDigitsPerGroupValue
DecimalFormatSymbols
symbols
getDecimalFormatSymbols
setGroupingSeparator
charAt
setDecimalFormatSymbols
symbols
setGroupingUsed
catchClause
ex
setGroupingUsed
return
formatter
formatNumberList
String
transformer
TransformerImpl
list
long
contextNode
int
String
numStr
FastStringBuffer
formattedNumber
get
try
int
nNumbers
length
numberWidth
char
numberType
String
formatToken
lastSepString
formatTokenString
String
lastSep
boolean
isFirstToken
String
formatValue
m_format_avt
evaluate
getXPathContext
contextNode
if
formatValue
formatValue
NumberFormatStringTokenizer
formatTokenizer
NumberFormatStringTokenizer
formatValue
for
forControl
int
i
i
nNumbers
i
block
if
hasMoreTokens
block
formatToken
nextToken
if
isLetterOrDigit
charAt
length
block
numberWidth
length
numberType
charAt
numberWidth
if
isLetterOrDigitAhead
block
formatTokenString
formatToken
while
nextIsSep
block
formatToken
nextToken
formatTokenString
formatToken
if
isFirstToken
lastSep
formatTokenString
formatToken
nextToken
numberWidth
length
numberType
charAt
numberWidth
block
lastSepString
formatToken
while
hasMoreTokens
block
formatToken
nextToken
lastSepString
formatToken
if
formatTokenString
isFirstToken
block
append
formatTokenString
if
lastSep
isFirstToken
append
lastSep
getFormattedNumber
transformer
contextNode
numberType
numberWidth
list
i
formattedNumber
isFirstToken
while
isLetterOrDigitAhead
block
nextToken
if
lastSepString
append
lastSepString
while
hasMoreTokens
block
formatToken
nextToken
append
formatToken
numStr
toString
free
formattedNumber
return
numStr
getFormattedNumber
transformer
TransformerImpl
contextNode
int
numberType
char
numberWidth
int
listElement
long
formattedNumber
FastStringBuffer
String
letterVal
m_lettervalue_avt
evaluate
getXPathContext
contextNode
CharArrayWrapper
alphaCountTable
XResourceBundle
thisBundle
switch
numberType
case
if
m_alphaCountTable
block
thisBundle
XResourceBundle
loadResourceBundle
LANG_BUNDLE_NAME
getLocale
transformer
contextNode
m_alphaCountTable
CharArrayWrapper
getObject
LANG_ALPHABET
int2alphaCount
listElement
m_alphaCountTable
formattedNumber
break
case
if
m_alphaCountTable
block
thisBundle
XResourceBundle
loadResourceBundle
LANG_BUNDLE_NAME
getLocale
transformer
contextNode
m_alphaCountTable
CharArrayWrapper
getObject
LANG_ALPHABET
FastStringBuffer
stringBuf
get
try
int2alphaCount
listElement
m_alphaCountTable
stringBuf
append
toString
toLowerCase
getLocale
transformer
contextNode
free
stringBuf
break
case
append
long2roman
listElement
break
case
append
long2roman
toLowerCase
getLocale
transformer
contextNode
listElement
break
case
block
thisBundle
XResourceBundle
loadResourceBundle
LANG_BUNDLE_NAME
Locale
if
letterVal
equals
ATTRVAL_TRADITIONAL
append
tradAlphaCount
listElement
thisBundle
append
int2singlealphaCount
listElement
CharArrayWrapper
getObject
LANG_ALPHABET
break
case
block
thisBundle
XResourceBundle
loadResourceBundle
LANG_BUNDLE_NAME
Locale
if
letterVal
equals
ATTRVAL_TRADITIONAL
append
tradAlphaCount
listElement
thisBundle
append
int2singlealphaCount
listElement
CharArrayWrapper
getObject
LANG_ALPHABET
break
case
block
thisBundle
XResourceBundle
loadResourceBundle
LANG_BUNDLE_NAME
Locale
if
letterVal
equals
ATTRVAL_TRADITIONAL
append
tradAlphaCount
listElement
thisBundle
append
int2singlealphaCount
listElement
CharArrayWrapper
getObject
LANG_ALPHABET
break
case
block
thisBundle
XResourceBundle
loadResourceBundle
LANG_BUNDLE_NAME
Locale
if
letterVal
equals
ATTRVAL_TRADITIONAL
append
tradAlphaCount
listElement
thisBundle
append
int2singlealphaCount
listElement
CharArrayWrapper
getObject
LANG_ALPHABET
break
case
block
thisBundle
XResourceBundle
loadResourceBundle
LANG_BUNDLE_NAME
Locale
if
letterVal
equals
ATTRVAL_TRADITIONAL
block
append
tradAlphaCount
listElement
thisBundle
int2alphaCount
listElement
CharArrayWrapper
getObject
LANG_ALPHABET
formattedNumber
break
case
block
thisBundle
XResourceBundle
loadResourceBundle
LANG_BUNDLE_NAME
Locale
if
letterVal
equals
ATTRVAL_TRADITIONAL
append
tradAlphaCount
listElement
thisBundle
int2alphaCount
listElement
CharArrayWrapper
getObject
LANG_ALPHABET
formattedNumber
break
case
block
thisBundle
XResourceBundle
loadResourceBundle
LANG_BUNDLE_NAME
Locale
if
letterVal
equals
ATTRVAL_TRADITIONAL
append
tradAlphaCount
listElement
thisBundle
int2alphaCount
listElement
CharArrayWrapper
getObject
LANG_ALPHABET
formattedNumber
break
case
block
thisBundle
XResourceBundle
loadResourceBundle
LANG_BUNDLE_NAME
Locale
if
letterVal
equals
ATTRVAL_TRADITIONAL
append
tradAlphaCount
listElement
thisBundle
int2alphaCount
listElement
CharArrayWrapper
getObject
LANG_ALPHABET
formattedNumber
break
case
block
thisBundle
XResourceBundle
loadResourceBundle
LANG_BUNDLE_NAME
Locale
if
letterVal
equals
ATTRVAL_TRADITIONAL
append
tradAlphaCount
listElement
thisBundle
int2alphaCount
listElement
CharArrayWrapper
getObject
LANG_ALPHABET
formattedNumber
break
case
block
thisBundle
XResourceBundle
loadResourceBundle
LANG_BUNDLE_NAME
Locale
if
letterVal
equals
ATTRVAL_TRADITIONAL
append
tradAlphaCount
listElement
thisBundle
int2alphaCount
listElement
CharArrayWrapper
getObject
LANG_ALPHABET
formattedNumber
break
case
block
thisBundle
XResourceBundle
loadResourceBundle
LANG_BUNDLE_NAME
Locale
if
letterVal
equals
ATTRVAL_TRADITIONAL
append
tradAlphaCount
listElement
thisBundle
int2alphaCount
listElement
CharArrayWrapper
getObject
LANG_ALPHABET
formattedNumber
break
case
DecimalFormat
formatter
getNumberFormatter
transformer
contextNode
String
padString
formatter
valueOf
format
String
numString
formatter
valueOf
listElement
format
listElement
int
nPadding
numberWidth
length
for
forControl
int
k
k
nPadding
k
block
append
padString
append
numString
getZeroString
String
return
int2singlealphaCount
String
val
long
table
CharArrayWrapper
int
radix
getLength
if
val
radix
block
return
getZeroString
return
toString
Character
getChar
int
val
int2alphaCount
val
long
aTable
CharArrayWrapper
stringBuf
FastStringBuffer
int
radix
getLength
char
table
char
radix
int
i
for
forControl
i
i
radix
i
block
table
i
getChar
i
table
getChar
i
char
buf
char
int
charPos
charPos
length
int
lookupIndex
long
correction
do
val
block
correction
lookupIndex
correction
lookupIndex
radix
radix
lookupIndex
int
val
correction
radix
val
val
radix
if
lookupIndex
val
break
buf
charPos
table
lookupIndex
append
buf
charPos
length
charPos
tradAlphaCount
String
val
long
thisBundle
XResourceBundle
if
val
MAX_VALUE
block
error
ER_NUMBER_TOO_BIG
return
ERROR_STRING
char
table
int
lookupIndex
char
buf
char
int
charPos
charPos
IntArrayWrapper
groups
IntArrayWrapper
getObject
LANG_NUMBERGROUPS
StringArrayWrapper
tables
StringArrayWrapper
getObject
LANG_NUM_TABLES
String
numbering
getString
LANG_NUMBERING
if
equals
LANG_MULT_ADD
block
String
mult_order
getString
MULT_ORDER
LongArrayWrapper
multiplier
LongArrayWrapper
getObject
LANG_MULTIPLIER
CharArrayWrapper
zeroChar
CharArrayWrapper
getObject
int
i
while
i
getLength
val
getLong
i
block
i
do
i
getLength
block
if
i
getLength
break
if
val
getLong
i
block
if
getLength
block
i
block
if
buf
charPos
getChar
buf
charPos
getChar
i
if
val
getLong
i
block
long
mult
val
getLong
i
val
val
getLong
i
int
k
while
k
getLength
block
lookupIndex
if
mult
getInt
k
k
block
CharArrayWrapper
THEletters
CharArrayWrapper
getObject
getString
k
table
char
getLength
int
j
for
forControl
j
j
getLength
j
block
table
j
getChar
j
table
getChar
j
lookupIndex
int
mult
getInt
k
if
lookupIndex
mult
break
char
multiplierChar
CharArrayWrapper
getObject
LANG_MULTIPLIER_CHAR
if
lookupIndex
length
block
if
equals
MULT_PRECEDES
block
buf
charPos
multiplierChar
buf
charPos
table
lookupIndex
block
if
lookupIndex
i
getLength
block
buf
charPos
table
lookupIndex
buf
charPos
multiplierChar
break
return
ERROR_STRING
i
int
count
String
tableName
while
count
getLength
block
if
val
getInt
count
count
block
CharArrayWrapper
theletters
CharArrayWrapper
getObject
getString
count
table
char
getLength
int
j
for
forControl
j
j
getLength
j
block
table
j
getChar
j
table
getChar
j
lookupIndex
int
val
getInt
count
val
val
getInt
count
if
lookupIndex
val
break
if
lookupIndex
length
block
buf
charPos
table
lookupIndex
return
ERROR_STRING
count
return
String
buf
charPos
long2roman
String
val
long
prefixesAreOK
boolean
if
val
block
return
getZeroString
String
roman
int
place
if
val
block
do
val
block
while
val
m_romanConvertTable
place
m_postValue
block
roman
m_romanConvertTable
place
m_postLetter
val
m_romanConvertTable
place
m_postValue
if
prefixesAreOK
block
if
val
m_romanConvertTable
place
m_preValue
block
roman
m_romanConvertTable
place
m_preLetter
val
m_romanConvertTable
place
m_preValue
place
block
roman
ERROR_STRING
return
roman
callChildVisitors
visitor
XSLTVisitor
callAttrs
boolean
if
callAttrs
block
if
m_countMatchPattern
getExpression
callVisitors
m_countMatchPattern
visitor
if
m_fromMatchPattern
getExpression
callVisitors
m_fromMatchPattern
visitor
if
m_valueExpr
getExpression
callVisitors
m_valueExpr
visitor
if
m_format_avt
callVisitors
visitor
if
m_groupingSeparator_avt
callVisitors
visitor
if
m_groupingSize_avt
callVisitors
visitor
if
m_lang_avt
callVisitors
visitor
if
m_lettervalue_avt
callVisitors
visitor
callChildVisitors
visitor
callAttrs
NumberFormatStringTokenizer
int
currentPosition
int
maxPosition
String
str
NumberFormatStringTokenizer
str
String
str
str
maxPosition
length
reset
currentPosition
nextToken
String
if
currentPosition
maxPosition
block
throw
NoSuchElementException
int
start
currentPosition
while
currentPosition
maxPosition
isLetterOrDigit
charAt
currentPosition
block
currentPosition
if
start
currentPosition
isLetterOrDigit
charAt
currentPosition
block
currentPosition
return
substring
start
currentPosition
isLetterOrDigitAhead
boolean
int
pos
currentPosition
while
pos
maxPosition
block
if
isLetterOrDigit
charAt
pos
return
pos
return
nextIsSep
boolean
if
isLetterOrDigit
charAt
currentPosition
return
return
hasMoreTokens
boolean
return
currentPosition
maxPosition
countTokens
int
int
count
int
currpos
currentPosition
while
currpos
maxPosition
block
int
start
currpos
while
currpos
maxPosition
isLetterOrDigit
charAt
currpos
block
currpos
if
start
currpos
isLetterOrDigit
charAt
currpos
block
currpos
count
return
count
ElemTemplateElement
