CallFunction
String
className
String
methodName
int
nArgs
Class
clazz
invokeMethod
String
_className
String
_methodName
String
_arguments
Object
className
_className
methodName
_methodName
int
size
length
Object
arguments
Object
size
Object
object
_arguments
clazz
try
clazz
findProviderClass
className
findClassLoader
if
clazz
block
throw
RuntimeException
catchClause
e
throw
RuntimeException
for
forControl
int
i
j
i
size
i
j
block
arguments
i
_arguments
j
nArgs
size
if
methodName
block
Method
method
if
method
findMethods
arguments
block
throw
RuntimeException
try
Object
obj
invoke
object
arguments
return
toString
catchClause
e
throw
RuntimeException
catchClause
e
throw
RuntimeException
catchClause
e
throw
RuntimeException
block
Constructor
constructor
if
constructor
findConstructor
arguments
block
throw
RuntimeException
try
Object
obs
newInstance
arguments
return
toString
catchClause
e
throw
RuntimeException
catchClause
e
throw
RuntimeException
catchClause
e
throw
RuntimeException
catchClause
e
throw
RuntimeException
findConstructor
Constructor
arguments
Object
Vector
constructors
Constructor
c_constructors
getConstructors
for
forControl
int
i
i
length
i
block
int
mods
c_constructors
i
getModifiers
if
isPublic
mods
c_constructors
i
getParameterTypes
length
nArgs
block
if
constructors
block
constructors
Vector
addElement
c_constructors
i
if
constructors
block
throw
RuntimeException
className
methodName
int
nConstructors
size
boolean
accept
for
forControl
int
j
i
i
nConstructors
i
block
Constructor
constructor
Constructor
elementAt
i
Class
paramTypes
getParameterTypes
for
forControl
j
j
nArgs
j
block
Class
argumentClass
arguments
j
getClass
if
argumentClass
paramTypes
j
block
accept
if
isAssignableFrom
paramTypes
j
block
accept
block
accept
break
if
accept
return
constructor
return
findMethods
Method
arguments
Object
Vector
methods
Method
m_methods
getMethods
for
forControl
int
i
i
length
i
block
int
mods
m_methods
i
getModifiers
if
isPublic
mods
m_methods
i
getName
equals
methodName
m_methods
i
getParameterTypes
length
nArgs
block
if
methods
block
methods
Vector
addElement
m_methods
i
if
methods
block
throw
RuntimeException
className
methodName
int
nMethods
size
boolean
accept
for
forControl
int
j
i
i
nMethods
i
block
Method
method
Method
elementAt
i
Class
paramTypes
getParameterTypes
for
forControl
j
j
nArgs
j
block
Class
argumentClass
arguments
j
getClass
if
argumentClass
paramTypes
j
block
accept
if
isAssignableFrom
paramTypes
j
block
accept
if
paramTypes
j
isPrimitive
block
arguments
j
isPrimitive
paramTypes
j
arguments
j
accept
block
accept
break
if
accept
return
method
return
isPrimitive
Object
paramType
Class
argument
Object
if
getClass
Integer
return
typeCast
paramType
Integer
argument
if
getClass
Float
return
typeCast
paramType
Float
argument
if
getClass
Double
return
typeCast
paramType
Double
argument
if
getClass
Long
return
typeCast
paramType
Long
argument
if
getClass
Boolean
return
Boolean
argument
if
getClass
Byte
return
Byte
argument
return
typeCast
Object
paramType
Class
object
Double
if
paramType
TYPE
return
Long
longValue
if
paramType
TYPE
return
Integer
intValue
if
paramType
TYPE
return
Float
floatValue
if
paramType
TYPE
return
Short
shortValue
if
paramType
TYPE
return
Byte
byteValue
return
object
typeCast
Object
paramType
Class
object
Long
if
paramType
TYPE
return
Integer
intValue
if
paramType
TYPE
return
Float
floatValue
if
paramType
TYPE
return
Short
shortValue
if
paramType
TYPE
return
Byte
byteValue
return
object
typeCast
Object
paramType
Class
object
Integer
if
paramType
TYPE
return
Double
doubleValue
if
paramType
TYPE
return
Float
floatValue
if
paramType
TYPE
return
Short
shortValue
if
paramType
TYPE
return
Byte
byteValue
return
object
typeCast
Object
paramType
Class
object
Float
if
paramType
TYPE
return
Double
doubleValue
if
paramType
TYPE
return
Float
intValue
if
paramType
TYPE
return
Short
shortValue
if
paramType
TYPE
return
Byte
byteValue
return
object
