XslElement
String
_prefix
boolean
_ignore
boolean
_isLiteralName
AttributeValueTemplate
_name
AttributeValueTemplate
_namespace
display
indent
int
indent
indent
println
_name
displayContents
indent
IndentIncrement
declaresDefaultNS
boolean
return
isLiteral
boolean
str
String
int
length
length
for
forControl
int
i
i
length
i
block
if
charAt
i
charAt
i
block
return
return
isLegalName
boolean
str
String
if
indexOf
block
return
int
colon
indexOf
if
colon
colon
length
block
return
char
first
charAt
if
isLetter
first
first
block
return
return
parseContents
parser
Parser
SymbolTable
stable
getSymbolTable
String
name
getAttribute
if
name
EMPTYSTRING
block
ErrorMsg
msg
ErrorMsg
ILLEGAL_ELEM_NAME_ERR
name
reportError
WARNING
msg
parseChildren
parser
_ignore
return
String
namespace
getAttribute
_isLiteralName
isLiteral
name
if
_isLiteralName
block
if
isLegalName
name
block
ErrorMsg
msg
ErrorMsg
ILLEGAL_ELEM_NAME_ERR
name
reportError
WARNING
msg
parseChildren
parser
_ignore
return
QName
qname
getQNameSafe
name
String
prefix
getPrefix
String
local
getLocalPart
if
prefix
block
prefix
EMPTYSTRING
if
hasAttribute
block
namespace
lookupNamespace
prefix
if
namespace
block
ErrorMsg
err
ErrorMsg
NAMESPACE_UNDEF_ERR
prefix
reportError
WARNING
err
parseChildren
parser
_ignore
return
_prefix
prefix
_namespace
AttributeValueTemplate
namespace
parser
block
if
prefix
EMPTYSTRING
block
if
isLiteral
namespace
block
prefix
lookupPrefix
namespace
if
prefix
block
prefix
generateNamespacePrefix
StringBuffer
newName
StringBuffer
prefix
if
prefix
EMPTYSTRING
block
append
name
append
toString
local
_prefix
prefix
_namespace
AttributeValueTemplate
namespace
parser
block
_namespace
namespace
EMPTYSTRING
AttributeValueTemplate
namespace
parser
_name
AttributeValueTemplate
name
parser
String
useSets
getAttribute
if
length
block
setFirstElement
UseAttributeSets
useSets
parser
parseChildren
parser
typeCheck
Type
stable
SymbolTable
if
_ignore
block
typeCheck
stable
if
_namespace
block
typeCheck
stable
typeCheckContents
stable
return
Void
translateLiteral
classGen
ClassGenerator
methodGen
MethodGenerator
ConstantPoolGen
cpg
getConstantPool
InstructionList
il
getInstructionList
if
_ignore
block
append
loadHandler
translate
classGen
methodGen
append
DUP2
append
startElement
if
_namespace
block
append
loadHandler
append
PUSH
cpg
_prefix
translate
classGen
methodGen
append
namespace
translateContents
classGen
methodGen
if
_ignore
block
append
endElement
translate
classGen
ClassGenerator
methodGen
MethodGenerator
LocalVariableGen
local
ConstantPoolGen
cpg
getConstantPool
InstructionList
il
getInstructionList
if
_isLiteralName
block
translateLiteral
classGen
methodGen
return
if
_ignore
block
append
loadHandler
translate
classGen
methodGen
append
DUP
int
getPrefix
addMethodref
BASIS_LIBRARY_CLASS
STRING_SIG
STRING_SIG
append
INVOKESTATIC
getPrefix
append
DUP
local
addLocalVariable
STRING
getEnd
append
ASTORE
getIndex
BranchHandle
ifNotNull
append
IFNONNULL
if
_namespace
block
int
generatePrefix
addMethodref
BASIS_LIBRARY_CLASS
STRING_SIG
append
INVOKESTATIC
generatePrefix
append
DUP
append
ASTORE
getIndex
int
makeQName
addMethodref
BASIS_LIBRARY_CLASS
STRING_SIG
STRING_SIG
STRING_SIG
append
INVOKESTATIC
makeQName
setTarget
append
DUP2
append
startElement
if
_namespace
block
append
loadHandler
append
ALOAD
getIndex
translate
classGen
methodGen
append
namespace
block
append
ALOAD
getIndex
BranchHandle
ifNull
append
IFNULL
append
loadHandler
append
ALOAD
getIndex
append
loadDOM
append
loadCurrentNode
append
ALOAD
getIndex
int
lookupNamespace
addInterfaceMethodref
DOM_INTF
STRING_SIG
STRING_SIG
append
INVOKEINTERFACE
lookupNamespace
append
namespace
setTarget
append
NOP
translateContents
classGen
methodGen
if
_ignore
block
append
endElement
translateContents
classGen
ClassGenerator
methodGen
MethodGenerator
int
n
elementCount
for
forControl
int
i
i
n
i
block
SyntaxTreeNode
item
SyntaxTreeNode
getContents
elementAt
i
if
_ignore
item
XslAttribute
continue
translate
classGen
methodGen
Instruction
