Predicate
Expression
_exp
boolean
_nthPositionFilter
boolean
_nthDescendant
boolean
_canOptimize
int
_ptype
String
_className
ArrayList
_closureVars
Closure
_parentClosure
Predicate
exp
Expression
_exp
exp
setParser
parser
Parser
setParser
parser
setParser
parser
isNthDescendant
boolean
return
_nthDescendant
isNthPositionFilter
boolean
return
_nthPositionFilter
dontOptimize
_canOptimize
inInnerClass
boolean
return
_className
getParentClosure
Closure
if
_parentClosure
block
SyntaxTreeNode
node
getParent
do
node
block
if
node
Closure
block
_parentClosure
Closure
node
break
if
node
TopLevelElement
block
break
node
getParent
return
_parentClosure
getInnerClassName
String
return
_className
addVariable
variableRef
VariableRefBase
if
_closureVars
block
_closureVars
ArrayList
if
contains
variableRef
block
add
variableRef
Closure
parentClosure
getParentClosure
if
parentClosure
block
addVariable
variableRef
getPosType
int
if
_ptype
block
SyntaxTreeNode
parent
getParent
if
parent
StepPattern
block
_ptype
StepPattern
parent
if
parent
AbsoluteLocationPath
block
AbsoluteLocationPath
path
AbsoluteLocationPath
parent
Expression
exp
getPath
if
exp
Step
block
_ptype
Step
exp
if
parent
VariableRefBase
block
VariableRefBase
ref
VariableRefBase
parent
VariableBase
var
getVariable
Expression
exp
getExpression
if
exp
Step
block
_ptype
Step
exp
if
parent
Step
block
_ptype
Step
parent
return
_ptype
parentIsPattern
boolean
return
getParent
Pattern
getExpr
Expression
return
_exp
toString
String
if
isNthPositionFilter
return
_exp
getPosType
return
_exp
typeCheck
Type
stable
SymbolTable
Type
texp
typeCheck
stable
if
texp
ReferenceType
block
_exp
CastExpr
_exp
texp
Real
if
texp
ResultTreeType
block
_exp
CastExpr
_exp
Boolean
_exp
CastExpr
_exp
Real
texp
typeCheck
stable
if
texp
NumberType
block
if
texp
IntType
block
_exp
CastExpr
_exp
Int
SyntaxTreeNode
parent
getParent
if
_exp
LastCall
parent
Pattern
parent
FilterExpr
block
QName
position
getParser
getQNameIgnoreDefaultNs
PositionCall
positionCall
PositionCall
position
setParser
getParser
setParent
_exp
EqualityExpr
EQ
positionCall
_exp
if
typeCheck
stable
Boolean
block
_exp
CastExpr
_exp
Boolean
if
parent
Pattern
block
_nthPositionFilter
if
parent
FilterExpr
block
FilterExpr
filter
FilterExpr
parent
Expression
fexp
getExpr
if
fexp
KeyCall
_canOptimize
if
fexp
VariableRefBase
_canOptimize
if
fexp
ParentLocationPath
_canOptimize
if
fexp
UnionPathExpr
_canOptimize
if
hasPositionCall
hasLastCall
_canOptimize
if
getParent
FilterParentPath
_canOptimize
if
_canOptimize
_nthPositionFilter
return
_type
Boolean
block
if
parent
parent
Step
block
parent
getParent
if
parent
parent
AbsoluteLocationPath
block
_nthDescendant
return
_type
NodeSet
_nthPositionFilter
return
_type
NodeSet
if
texp
BooleanType
block
if
hasPositionCall
_nthPositionFilter
block
_exp
CastExpr
_exp
Boolean
_nthPositionFilter
return
_type
Boolean
compileFilter
classGen
ClassGenerator
methodGen
MethodGenerator
TestGenerator
testGen
LocalVariableGen
local
FilterGenerator
filterGen
_className
getXSLTC
getHelperClassName
filterGen
FilterGenerator
_className
toString
ACC_PUBLIC
ACC_SUPER
String
CURRENT_NODE_LIST_FILTER
getStylesheet
ConstantPoolGen
cpg
getConstantPool
int
length
_closureVars
size
for
forControl
int
i
i
length
i
block
VariableBase
var
VariableRefBase
get
i
addField
Field
ACC_PUBLIC
addUtf8
getVariable
addUtf8
getType
toSignature
getConstantPool
InstructionList
il
InstructionList
testGen
TestGenerator
ACC_PUBLIC
ACC_FINAL
BOOLEAN
org
apache
bcel
generic
Type
INT
INT
INT
INT
getJCRefType
TRANSLET_SIG
getJCRefType
NODE_ITERATOR_SIG
String
_className
il
cpg
local
addLocalVariable
getJCRefType
DOM_INTF_SIG
String
className
getClassName
append
loadTranslet
append
CHECKCAST
addClass
className
append
GETFIELD
addFieldref
className
DOM_FIELD
DOM_INTF_SIG
append
ASTORE
getIndex
setDomIndex
getIndex
translate
filterGen
testGen
append
IRETURN
stripAttributes
setMaxLocals
setMaxStack
removeNOPs
addEmptyConstructor
ACC_PUBLIC
addMethod
getMethod
getXSLTC
dumpClass
getJavaClass
isBooleanTest
boolean
return
_exp
BooleanExpr
isNodeValueTest
boolean
if
_canOptimize
return
return
getStep
getCompareValue
Expression
_value
Step
_step
getCompareValue
Expression
if
_value
return
_value
if
_exp
return
if
_exp
EqualityExpr
block
EqualityExpr
exp
EqualityExpr
_exp
Expression
left
getLeft
Expression
right
getRight
Type
tleft
getType
Type
tright
getType
if
left
CastExpr
left
CastExpr
left
if
right
CastExpr
right
CastExpr
right
try
if
tleft
String
left
Step
_value
getLeft
if
left
VariableRefBase
_value
CastExpr
left
String
if
_value
return
_value
catchClause
e
try
if
tright
String
right
Step
_value
getRight
if
right
VariableRefBase
_value
CastExpr
right
String
if
_value
return
_value
catchClause
e
return
getStep
Step
if
_step
return
_step
if
_exp
return
if
_exp
EqualityExpr
block
EqualityExpr
exp
EqualityExpr
_exp
Expression
left
getLeft
Expression
right
getRight
if
left
CastExpr
left
CastExpr
left
if
left
Step
_step
Step
left
if
right
CastExpr
right
CastExpr
right
if
right
Step
_step
Step
right
return
_step
translate
classGen
ClassGenerator
methodGen
MethodGenerator
ConstantPoolGen
cpg
getConstantPool
InstructionList
il
getInstructionList
if
_nthPositionFilter
_nthDescendant
block
translate
classGen
methodGen
if
isNodeValueTest
getParent
Step
block
translate
classGen
methodGen
append
CHECKCAST
addClass
STRING_CLASS
append
PUSH
cpg
EqualityExpr
_exp
block
translateFilter
classGen
methodGen
translateFilter
classGen
ClassGenerator
methodGen
MethodGenerator
ConstantPoolGen
cpg
getConstantPool
InstructionList
il
getInstructionList
compileFilter
classGen
methodGen
append
NEW
addClass
_className
append
DUP
append
INVOKESPECIAL
addMethodref
_className
int
length
_closureVars
size
for
forControl
int
i
i
length
i
block
VariableRefBase
varRef
VariableRefBase
get
i
VariableBase
var
getVariable
Type
varType
getType
append
DUP
Closure
variableClosure
_parentClosure
while
variableClosure
block
if
inInnerClass
break
variableClosure
getParentClosure
if
variableClosure
block
append
ALOAD_0
append
GETFIELD
addFieldref
getInnerClassName
getVariable
toSignature
block
append
loadInstruction
append
PUTFIELD
addFieldref
_className
getVariable
toSignature
Expression
Closure
