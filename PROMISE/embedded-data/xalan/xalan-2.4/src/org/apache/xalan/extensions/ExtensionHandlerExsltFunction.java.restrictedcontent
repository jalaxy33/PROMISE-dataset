ExtensionHandlerExsltFunction
String
m_namespace
StylesheetRoot
m_stylesheet
QName
RESULTQNAME
QName
S_EXSLT_FUNCTIONS_URL
EXSLT_ELEMNAME_FUNCRESULT_STRING
ExtensionHandlerExsltFunction
ns
String
stylesheet
StylesheetRoot
ns
m_namespace
ns
m_stylesheet
stylesheet
processElement
localPart
String
element
ElemTemplateElement
transformer
TransformerImpl
stylesheetTree
Stylesheet
methodKey
Object
getFunction
ElemExsltFunction
funcName
String
QName
qname
QName
m_namespace
funcName
ElemTemplate
templ
getTemplateComposed
qname
if
templ
templ
ElemExsltFunction
return
ElemExsltFunction
templ
return
isFunctionAvailable
boolean
funcName
String
return
getFunction
funcName
isElementAvailable
boolean
elemName
String
if
QName
m_namespace
elemName
block
return
block
ElemTemplateElement
elem
getFirstChildElem
while
elem
elem
m_stylesheet
block
if
elem
ElemExsltFuncResult
ancestorIsFunction
elem
return
ElemTemplateElement
nextElem
getFirstChildElem
if
nextElem
nextElem
getNextSiblingElem
if
nextElem
nextElem
getParentElem
elem
nextElem
return
ancestorIsFunction
boolean
child
ElemTemplateElement
while
getParentElem
getParentElem
StylesheetRoot
block
if
getParentElem
ElemExsltFunction
return
child
getParentElem
return
callFunction
Object
funcName
String
args
Vector
methodKey
Object
exprContext
ExpressionContext
XObject
methodArgs
methodArgs
XObject
size
try
for
forControl
int
i
i
length
i
block
methodArgs
i
create
elementAt
i
ElemExsltFunction
elemFunc
getFunction
funcName
XPathContext
context
getXPathContext
TransformerImpl
transformer
TransformerImpl
getOwnerObject
execute
transformer
methodArgs
VariableStack
varStack
getVarStack
XObject
val
XString
int
resultIndex
getResultIndex
if
isLocalSet
resultIndex
val
getLocalVariable
context
resultIndex
return
val
catchClause
e
throw
TransformerException
e
ExtensionHandler
