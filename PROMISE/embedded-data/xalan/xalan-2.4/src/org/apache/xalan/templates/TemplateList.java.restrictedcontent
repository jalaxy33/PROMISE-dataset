TemplateList
TemplateList
setTemplate
template
ElemTemplate
if
getName
block
ElemTemplate
existingTemplate
ElemTemplate
get
getName
if
existingTemplate
block
put
getName
template
block
int
existingPrecedence
getStylesheetComposed
getImportCountComposed
int
newPrecedence
getStylesheetComposed
getImportCountComposed
if
newPrecedence
existingPrecedence
block
put
getName
template
if
newPrecedence
existingPrecedence
error
ER_DUPLICATE_NAMED_TEMPLATE
Object
getName
XPath
matchXPath
getMatch
if
matchXPath
block
Expression
matchExpr
getExpression
if
matchExpr
StepPattern
block
insertPatternInTable
StepPattern
matchExpr
template
if
matchExpr
UnionPattern
block
UnionPattern
upat
UnionPattern
matchExpr
StepPattern
pats
getPatterns
int
n
length
for
forControl
int
i
i
n
i
block
insertPatternInTable
pats
i
template
block
boolean
DEBUG
dumpAssociationTables
Enumeration
associations
elements
while
hasMoreElements
block
TemplateSubPatternAssociation
head
TemplateSubPatternAssociation
nextElement
while
head
block
print
getTargetString
getPattern
head
getNext
println
TemplateSubPatternAssociation
head
m_wildCardPatterns
print
while
head
block
print
getTargetString
getPattern
head
getNext
println
compose
sroot
StylesheetRoot
if
DEBUG
block
println
dumpAssociationTables
if
m_wildCardPatterns
block
Enumeration
associations
elements
while
hasMoreElements
block
TemplateSubPatternAssociation
head
TemplateSubPatternAssociation
nextElement
TemplateSubPatternAssociation
wild
m_wildCardPatterns
while
wild
block
try
head
insertAssociationIntoList
head
TemplateSubPatternAssociation
clone
catchClause
cnse
wild
getNext
if
DEBUG
block
println
dumpAssociationTables
insertAssociationIntoList
TemplateSubPatternAssociation
head
TemplateSubPatternAssociation
item
TemplateSubPatternAssociation
isWildCardInsert
boolean
double
priority
getPriorityOrScore
item
double
workPriority
int
importLevel
getImportLevel
int
docOrder
getDocOrderPos
TemplateSubPatternAssociation
insertPoint
head
TemplateSubPatternAssociation
next
boolean
insertBefore
while
block
next
getNext
if
next
break
block
workPriority
getPriorityOrScore
next
if
importLevel
getImportLevel
break
if
importLevel
getImportLevel
insertPoint
next
if
priority
workPriority
break
if
priority
workPriority
insertPoint
next
if
docOrder
getDocOrderPos
break
insertPoint
next
if
next
insertPoint
head
block
workPriority
getPriorityOrScore
insertPoint
if
importLevel
getImportLevel
insertBefore
if
importLevel
getImportLevel
insertBefore
if
priority
workPriority
insertBefore
if
priority
workPriority
insertBefore
if
docOrder
getDocOrderPos
insertBefore
insertBefore
insertBefore
if
isWildCardInsert
block
if
insertBefore
block
setNext
insertPoint
String
key
getTargetString
setTargetString
key
putHead
key
item
return
item
block
setNext
next
setNext
item
return
head
block
if
insertBefore
block
setNext
insertPoint
if
isWild
isWild
m_wildCardPatterns
item
putHead
getTargetString
item
return
item
block
setNext
next
setNext
item
return
head
insertPatternInTable
pattern
StepPattern
template
ElemTemplate
String
target
getTargetString
if
target
block
String
pstring
getMatch
getPatternString
TemplateSubPatternAssociation
association
TemplateSubPatternAssociation
template
pattern
pstring
boolean
isWildCard
isWild
TemplateSubPatternAssociation
head
isWildCard
m_wildCardPatterns
getHead
target
if
head
block
if
isWildCard
m_wildCardPatterns
association
putHead
target
association
block
insertAssociationIntoList
head
association
getPriorityOrScore
double
matchPat
TemplateSubPatternAssociation
double
priority
getTemplate
getPriority
if
priority
MATCH_SCORE_NONE
block
Expression
ex
getStepPattern
if
ex
NodeTest
block
return
NodeTest
ex
return
priority
getTemplate
ElemTemplate
qname
QName
return
ElemTemplate
get
qname
getHead
TemplateSubPatternAssociation
xctxt
XPathContext
targetNode
int
dtm
DTM
short
targetNodeType
getNodeType
targetNode
TemplateSubPatternAssociation
head
switch
targetNodeType
case
ELEMENT_NODE
ATTRIBUTE_NODE
head
TemplateSubPatternAssociation
get
getLocalName
targetNode
break
case
TEXT_NODE
CDATA_SECTION_NODE
head
m_textPatterns
break
case
ENTITY_REFERENCE_NODE
ENTITY_NODE
head
TemplateSubPatternAssociation
get
getNodeName
targetNode
break
case
PROCESSING_INSTRUCTION_NODE
head
TemplateSubPatternAssociation
get
getLocalName
targetNode
break
case
COMMENT_NODE
head
m_commentPatterns
break
case
DOCUMENT_NODE
DOCUMENT_FRAGMENT_NODE
head
m_docPatterns
break
case
NOTATION_NODE
head
TemplateSubPatternAssociation
get
getNodeName
targetNode
return
head
m_wildCardPatterns
head
getTemplateFast
ElemTemplate
xctxt
XPathContext
targetNode
int
expTypeID
int
mode
QName
maxImportLevel
int
quietConflictWarnings
boolean
dtm
DTM
TemplateSubPatternAssociation
head
switch
getNodeType
targetNode
case
ELEMENT_NODE
ATTRIBUTE_NODE
head
TemplateSubPatternAssociation
get
getLocalNameFromExpandedNameID
expTypeID
break
case
TEXT_NODE
CDATA_SECTION_NODE
head
m_textPatterns
break
case
ENTITY_REFERENCE_NODE
ENTITY_NODE
head
TemplateSubPatternAssociation
get
getNodeName
targetNode
break
case
PROCESSING_INSTRUCTION_NODE
head
TemplateSubPatternAssociation
get
getLocalName
targetNode
break
case
COMMENT_NODE
head
m_commentPatterns
break
case
DOCUMENT_NODE
DOCUMENT_FRAGMENT_NODE
head
m_docPatterns
break
case
NOTATION_NODE
head
TemplateSubPatternAssociation
get
getNodeName
targetNode
if
head
block
head
m_wildCardPatterns
if
head
return
pushNamespaceContextNull
try
do
head
getNext
block
if
maxImportLevel
getImportLevel
maxImportLevel
block
continue
ElemTemplate
template
getTemplate
setNamespaceContext
template
if
execute
xctxt
targetNode
dtm
expTypeID
SCORE_NONE
matchMode
mode
block
if
quietConflictWarnings
checkConflicts
head
xctxt
targetNode
mode
return
template
popNamespaceContext
return
getTemplate
ElemTemplate
xctxt
XPathContext
targetNode
int
mode
QName
quietConflictWarnings
boolean
dtm
DTM
TemplateSubPatternAssociation
head
getHead
xctxt
targetNode
dtm
if
head
block
pushNamespaceContextNull
pushCurrentNodeAndExpression
targetNode
targetNode
try
do
head
getNext
block
ElemTemplate
template
getTemplate
setNamespaceContext
template
if
execute
xctxt
targetNode
SCORE_NONE
matchMode
mode
block
if
quietConflictWarnings
checkConflicts
head
xctxt
targetNode
mode
return
template
popCurrentNodeAndExpression
popNamespaceContext
return
getTemplate
ElemTemplate
xctxt
XPathContext
targetNode
int
mode
QName
maxImportLevel
int
endImportLevel
int
quietConflictWarnings
boolean
dtm
DTM
TemplateSubPatternAssociation
head
getHead
xctxt
targetNode
dtm
if
head
block
pushNamespaceContextNull
pushCurrentNodeAndExpression
targetNode
targetNode
try
do
head
getNext
block
if
maxImportLevel
getImportLevel
maxImportLevel
block
continue
if
getImportLevel
maxImportLevel
endImportLevel
return
ElemTemplate
template
getTemplate
setNamespaceContext
template
if
execute
xctxt
targetNode
SCORE_NONE
matchMode
mode
block
if
quietConflictWarnings
checkConflicts
head
xctxt
targetNode
mode
return
template
popCurrentNodeAndExpression
popNamespaceContext
return
getWalker
TemplateWalker
return
TemplateWalker
checkConflicts
head
TemplateSubPatternAssociation
xctxt
XPathContext
targetNode
int
mode
QName
addObjectIfNotFound
obj
Object
v
Vector
int
n
size
boolean
addIt
for
forControl
int
i
i
n
i
block
if
elementAt
i
obj
block
addIt
break
if
addIt
block
addElement
obj
Hashtable
m_namedTemplates
Hashtable
Hashtable
m_patternTable
Hashtable
TemplateSubPatternAssociation
m_wildCardPatterns
TemplateSubPatternAssociation
m_textPatterns
TemplateSubPatternAssociation
m_docPatterns
TemplateSubPatternAssociation
m_commentPatterns
getNamedTemplates
Hashtable
return
m_namedTemplates
setNamedTemplates
v
Hashtable
m_namedTemplates
v
getHead
TemplateSubPatternAssociation
key
String
return
TemplateSubPatternAssociation
get
key
putHead
key
String
assoc
TemplateSubPatternAssociation
if
equals
PSEUDONAME_TEXT
m_textPatterns
assoc
if
equals
PSEUDONAME_ROOT
m_docPatterns
assoc
if
equals
PSEUDONAME_COMMENT
m_commentPatterns
assoc
put
key
assoc
TemplateWalker
Enumeration
hashIterator
boolean
inPatterns
TemplateSubPatternAssociation
curPattern
Hashtable
m_compilerCache
Hashtable
TemplateWalker
hashIterator
elements
inPatterns
curPattern
next
ElemTemplate
ElemTemplate
retValue
ElemTemplate
ct
while
block
if
inPatterns
block
if
curPattern
curPattern
getNext
if
curPattern
retValue
getTemplate
block
if
hasMoreElements
block
curPattern
TemplateSubPatternAssociation
nextElement
retValue
getTemplate
block
inPatterns
hashIterator
elements
if
inPatterns
block
if
hasMoreElements
retValue
ElemTemplate
nextElement
return
ct
ElemTemplate
get
Integer
getUid
if
ct
block
put
Integer
getUid
retValue
return
retValue
java
io
Serializable
