TextOutput
int
UNKNOWN
int
XML
int
HTML
int
TEXT
int
QNAME
int
_outputType
UNKNOWN
String
_encoding
String
_mediaType
String
_doctypeSystem
String
_doctypePublic
boolean
_escapeChars
boolean
_startTagOpen
boolean
_headTagOpen
boolean
_cdataTagOpen
boolean
_is8859Encoded
Hashtable
_cdata
char
AMP
toCharArray
char
LT
toCharArray
char
GT
toCharArray
char
CRLF
toCharArray
char
QUOTE
toCharArray
char
NBSP
toCharArray
char
BEGCDATA
toCharArray
char
ENDCDATA
toCharArray
char
CNTCDATA
toCharArray
char
BEGCOMM
toCharArray
char
ENDCOMM
toCharArray
int
AMP_length
length
int
LT_length
length
int
GT_length
length
int
CRLF_length
length
int
QUOTE_length
length
int
NBSP_length
length
int
BEGCOMM_length
length
int
ENDCOMM_length
length
String
HREF_STR
String
CITE_STR
String
SRC_STR
String
CHAR_ESC_START
String
CDATA_ESC_START
String
CDATA_ESC_END
AttributesImpl
_attributes
AttributesImpl
String
_elementName
Hashtable
_namespaces
Stack
_nodeStack
Stack
_prefixStack
Stack
_qnameStack
Stack
_cdataStack
int
_depth
ContentHandler
_saxHandler
LexicalHandler
_lexHandler
TextOutput
handler
ContentHandler
_saxHandler
handler
init
TextOutput
handler
ContentHandler
encoding
String
_saxHandler
handler
init
_encoding
encoding
_is8859Encoded
equalsIgnoreCase
TextOutput
sax
ContentHandler
lex
LexicalHandler
encoding
String
_saxHandler
sax
_lexHandler
lex
init
_encoding
encoding
_is8859Encoded
equalsIgnoreCase
init
_outputType
UNKNOWN
_encoding
_mediaType
_escapeChars
_startTagOpen
_cdataTagOpen
_qnameStack
Stack
_cdataStack
Stack
push
Integer
initNamespaces
close
if
_saxHandler
_saxHandler
DefaultSAXOutputHandler
block
DefaultSAXOutputHandler
_saxHandler
setTypeInternal
type
int
if
type
XML
block
_escapeChars
if
type
HTML
block
setIndent
_escapeChars
setType
type
emitHeader
if
_outputType
HTML
block
AttributeList
attrs
AttributeList
add
add
_mediaType
_encoding
startElement
EMPTYSTRING
EMPTYSTRING
attrs
endElement
EMPTYSTRING
EMPTYSTRING
closeStartTag
try
_startTagOpen
startElement
getNamespaceURI
_elementName
getLocalName
_elementName
_elementName
_attributes
if
_headTagOpen
block
emitHeader
_headTagOpen
catchClause
e
throw
TransletException
e
setEscaping
boolean
escape
boolean
if
_outputType
UNKNOWN
setTypeInternal
XML
boolean
oldSetting
_escapeChars
_escapeChars
escape
if
_outputType
TEXT
_escapeChars
return
oldSetting
startDocument
try
startDocument
if
_outputType
XML
_escapeChars
catchClause
e
throw
TransletException
e
endDocument
try
if
_outputType
UNKNOWN
setTypeInternal
XML
if
_startTagOpen
closeStartTag
if
_cdataTagOpen
closeCDATA
endDocument
catchClause
e
throw
TransletException
e
characters
str
String
try
characters
toCharArray
length
catchClause
e
throw
TransletException
e
characters
ch
char
characters
ch
length
startCDATA
ch
char
off
int
len
int
int
limit
off
len
int
offset
off
characters
BEGCDATA
length
for
forControl
int
i
offset
i
limit
i
block
if
ch
i
ch
i
ch
i
block
characters
ch
offset
i
offset
characters
CNTCDATA
length
offset
i
i
i
if
offset
limit
characters
ch
offset
limit
offset
_cdataTagOpen
closeCDATA
characters
ENDCDATA
length
_cdataTagOpen
startCDATA
endCDATA
characters
ch
char
off
int
len
int
try
switch
_outputType
case
setTypeInternal
XML
case
if
_startTagOpen
closeStartTag
Integer
I
Integer
peek
if
intValue
_depth
_cdataTagOpen
block
startCDATA
ch
off
len
if
_escapeChars
block
if
_cdataTagOpen
block
escapeCDATA
ch
off
len
block
escapeCharacters
ch
off
len
block
characters
ch
off
len
return
case
if
_startTagOpen
closeStartTag
if
_escapeChars
block
if
isEmpty
block
String
qname
String
peek
qname
toLowerCase
if
equals
equals
block
characters
ch
off
len
return
escapeCharacters
ch
off
len
block
characters
ch
off
len
return
case
characters
ch
off
len
return
catchClause
e
throw
TransletException
e
startElement
elementName
String
try
switch
_outputType
case
if
toLowerCase
equals
setTypeInternal
HTML
setTypeInternal
XML
startElement
elementName
return
case
if
_startTagOpen
closeStartTag
if
_cdataTagOpen
closeCDATA
if
_lexHandler
block
if
_doctypeSystem
startDTD
elementName
_doctypePublic
_doctypeSystem
_lexHandler
_depth
_elementName
elementName
clear
_startTagOpen
push
elementName
if
_cdata
get
elementName
push
Integer
_depth
return
case
if
_startTagOpen
closeStartTag
if
_lexHandler
block
if
_doctypeSystem
_doctypePublic
startDTD
elementName
_doctypePublic
_doctypeSystem
_lexHandler
_depth
_elementName
elementName
clear
_startTagOpen
push
elementName
if
toLowerCase
equals
_headTagOpen
return
case
return
catchClause
e
throw
TransletException
e
escapeCharacters
ch
char
off
int
len
int
int
limit
off
len
int
offset
off
if
limit
length
limit
length
for
forControl
int
i
off
i
limit
i
block
char
current
ch
i
switch
current
case
characters
ch
offset
i
offset
characters
AMP
AMP_length
offset
i
break
case
characters
ch
offset
i
offset
characters
LT
LT_length
offset
i
break
case
characters
ch
offset
i
offset
characters
GT
GT_length
offset
i
break
case
characters
ch
offset
i
offset
characters
NBSP
NBSP_length
offset
i
break
case
if
current
current
_is8859Encoded
current
block
StringBuffer
buf
StringBuffer
CHAR_ESC_START
append
toString
int
ch
i
append
String
esc
toString
char
chars
toCharArray
int
strlen
length
characters
ch
offset
i
offset
characters
chars
strlen
offset
i
if
offset
limit
characters
ch
offset
limit
offset
escapeCDATA
ch
char
off
int
len
int
int
limit
off
len
int
offset
off
if
limit
length
limit
length
for
forControl
int
i
off
i
limit
i
block
if
ch
i
block
StringBuffer
buf
StringBuffer
CDATA_ESC_START
append
toString
int
ch
i
append
CDATA_ESC_END
String
esc
toString
char
chars
toCharArray
int
strlen
length
characters
ch
offset
i
offset
characters
chars
strlen
offset
i
if
offset
limit
characters
ch
offset
limit
offset
escapeString
String
value
String
int
i
char
ch
toCharArray
int
limit
length
int
offset
StringBuffer
buf
StringBuffer
for
forControl
i
i
limit
i
block
switch
ch
i
case
append
ch
offset
i
offset
append
AMP
offset
i
break
case
append
ch
offset
i
offset
append
QUOTE
offset
i
break
case
append
ch
offset
i
offset
append
LT
offset
i
break
case
append
ch
offset
i
offset
append
GT
offset
i
break
case
append
ch
offset
i
offset
append
CRLF
offset
i
break
if
offset
limit
block
append
ch
offset
limit
offset
return
toString
makeHHString
String
i
int
String
s
toHexString
toUpperCase
i
if
length
block
s
s
return
s
escapeAttr
String
base
String
int
len
length
String
str
int
pos
char
ch
toCharArray
StringBuffer
buf
StringBuffer
for
forControl
int
i
i
length
i
block
if
ch
i
block
append
append
makeHHString
ch
i
if
ch
i
block
int
high
ch
i
int
low
ch
i
append
append
makeHHString
high
append
append
makeHHString
low
block
switch
ch
i
case
append
append
toHexString
int
ch
i
break
case
append
break
case
append
ch
i
break
base
toString
while
pos
indexOf
block
if
pos
block
String
after
substring
base
str
after
if
pos
len
block
String
before
substring
pos
base
before
str
block
String
before
substring
pos
String
after
substring
pos
base
before
str
after
return
base
quickAndDirtyUrlEncode
String
base
String
String
pst20
int
len
length
int
pos
while
pos
indexOf
block
if
pos
block
String
after
substring
base
pst20
after
if
pos
len
block
String
before
substring
pos
base
before
pst20
block
String
before
substring
pos
String
after
substring
pos
base
before
pst20
after
return
base
getNamespaceURI
String
qname
String
isElement
boolean
String
uri
EMPTYSTRING
int
col
lastIndexOf
String
prefix
col
substring
col
EMPTYSTRING
if
prefix
EMPTYSTRING
isElement
block
uri
lookupNamespace
prefix
if
uri
equals
XMLNS_PREFIX
block
runTimeError
NAMESPACE_PREFIX_ERR
substring
col
return
uri
getLocalName
String
qname
String
int
col
lastIndexOf
return
col
substring
col
patchQName
String
qname
String
int
lastColon
lastIndexOf
if
lastColon
block
int
firstColon
indexOf
if
firstColon
lastColon
block
return
substring
firstColon
substring
lastColon
return
qname
attribute
name
String
value
String
if
_outputType
TEXT
return
String
patchedName
patchQName
name
String
localName
getLocalName
patchedName
String
uri
getNamespaceURI
patchedName
int
index
localName
getIndex
name
getIndex
uri
localName
switch
_outputType
case
if
_startTagOpen
block
runTimeError
STRAY_ATTRIBUTE_ERR
patchedName
if
startsWith
XMLNS_PREFIX
block
namespace
length
substring
EMPTYSTRING
value
block
if
index
block
setAttribute
index
uri
localName
patchedName
escapeString
value
block
addAttribute
uri
localName
patchedName
escapeString
value
break
case
if
_startTagOpen
block
runTimeError
STRAY_ATTRIBUTE_ERR
name
String
tmp
toLowerCase
if
equals
HREF_STR
equals
SRC_STR
equals
CITE_STR
block
if
index
block
setAttribute
index
EMPTYSTRING
EMPTYSTRING
name
quickAndDirtyUrlEncode
escapeAttr
value
block
addAttribute
EMPTYSTRING
EMPTYSTRING
name
quickAndDirtyUrlEncode
escapeAttr
value
block
if
index
block
setAttribute
index
EMPTYSTRING
EMPTYSTRING
name
escapeNonURLAttr
value
block
addAttribute
EMPTYSTRING
EMPTYSTRING
name
escapeNonURLAttr
value
break
escapeNonURLAttr
String
base
String
int
len
length
char
ch
toCharArray
StringBuffer
buf
StringBuffer
for
forControl
int
i
i
length
i
block
if
ch
i
block
append
CHAR_ESC_START
append
toString
int
ch
i
append
block
append
ch
i
base
toString
return
base
endElement
elementName
String
try
switch
_outputType
case
return
case
if
_startTagOpen
closeStartTag
if
_cdataTagOpen
closeCDATA
String
qname
String
pop
endElement
getNamespaceURI
qname
getLocalName
qname
qname
popNamespaces
if
Integer
peek
_depth
pop
_depth
return
case
if
_startTagOpen
closeStartTag
endElement
EMPTYSTRING
EMPTYSTRING
String
pop
popNamespaces
_depth
return
catchClause
e
throw
TransletException
e
comment
comment
String
try
if
_startTagOpen
closeStartTag
if
_cdataTagOpen
closeCDATA
if
_outputType
UNKNOWN
setTypeInternal
XML
characters
BEGCOMM
BEGCOMM_length
characters
comment
characters
ENDCOMM
ENDCOMM_length
catchClause
e
throw
TransletException
e
processingInstruction
target
String
data
String
try
if
_startTagOpen
closeStartTag
if
_cdataTagOpen
closeCDATA
if
_lexHandler
_outputType
HTML
block
if
_doctypeSystem
_doctypePublic
startDTD
_doctypePublic
_doctypeSystem
_lexHandler
processingInstruction
target
data
catchClause
e
throw
TransletException
e
initNamespaces
_namespaces
Hashtable
_nodeStack
Stack
_prefixStack
Stack
Stack
stack
put
EMPTYSTRING
stack
Stack
push
EMPTYSTRING
push
EMPTYSTRING
put
XML_PREFIX
stack
Stack
push
push
XML_PREFIX
push
Integer
_depth
pushNamespace
prefix
String
uri
String
if
equals
XML_PREFIX
return
Stack
stack
if
stack
Stack
get
prefix
block
stack
Stack
put
prefix
stack
if
empty
equals
peek
return
push
uri
push
prefix
push
Integer
_depth
startPrefixMapping
prefix
escapeString
uri
popNamespace
prefix
String
if
equals
XML_PREFIX
return
Stack
stack
if
stack
Stack
get
prefix
block
pop
endPrefixMapping
prefix
popNamespaces
try
while
block
if
isEmpty
return
Integer
i
Integer
peek
if
intValue
_depth
return
pop
popNamespace
String
pop
catchClause
e
throw
TransletException
e
lookupNamespace
String
prefix
String
Stack
stack
Stack
get
prefix
return
stack
isEmpty
String
peek
namespace
prefix
String
uri
String
try
if
_startTagOpen
pushNamespace
prefix
uri
block
if
prefix
EMPTYSTRING
uri
EMPTYSTRING
return
runTimeError
STRAY_NAMESPACE_ERR
prefix
uri
catchClause
e
throw
TransletException
e
setType
type
int
try
_outputType
type
if
_outputType
HTML
_outputType
XML
_escapeChars
if
_encoding
_encoding
if
_saxHandler
DefaultSAXOutputHandler
DefaultSAXOutputHandler
_saxHandler
catchClause
e
setIndent
indent
boolean
if
_saxHandler
DefaultSAXOutputHandler
block
DefaultSAXOutputHandler
_saxHandler
omitHeader
value
boolean
if
_saxHandler
DefaultSAXOutputHandler
block
DefaultSAXOutputHandler
_saxHandler
setVersion
version
String
if
_saxHandler
DefaultSAXOutputHandler
block
DefaultSAXOutputHandler
_saxHandler
setStandalone
standalone
String
if
_saxHandler
DefaultSAXOutputHandler
block
DefaultSAXOutputHandler
_saxHandler
setDoctype
system
String
pub
String
_doctypeSystem
system
_doctypePublic
pub
setMediaType
mediaType
String
_mediaType
mediaType
setCdataElements
elements
Hashtable
_cdata
elements
TransletOutputHandler
Constants
