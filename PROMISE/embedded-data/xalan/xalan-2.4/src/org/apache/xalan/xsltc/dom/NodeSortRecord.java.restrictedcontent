NodeSortRecord
int
COMPARE_STRING
int
COMPARE_NUMERIC
int
COMPARE_ASCENDING
int
COMPARE_DESCENDING
Collator
_collator
getInstance
int
_levels
int
_compareType
int
_sortOrder
AbstractTranslet
_translet
DOM
_dom
int
_node
int
_last
int
_scanned
Object
_values
NodeSortRecord
node
int
_node
node
NodeSortRecord
initialize
node
int
last
int
dom
DOM
translet
AbstractTranslet
order
int
type
int
_dom
dom
_node
node
_last
last
_translet
translet
_scanned
_levels
length
_sortOrder
order
_compareType
type
_values
Object
_levels
getNode
int
return
_node
compareDocOrder
int
other
NodeSortRecord
return
_node
_node
stringValue
CollationKey
level
int
if
_scanned
level
block
String
str
extractValueFromDOM
_dom
_node
level
_translet
_last
CollationKey
key
getCollationKey
str
_values
_scanned
key
return
key
return
CollationKey
_values
level
numericValue
Double
level
int
if
_scanned
level
block
String
str
extractValueFromDOM
_dom
_node
level
_translet
_last
Double
num
try
num
Double
str
catchClause
e
num
Double
NEGATIVE_INFINITY
_values
_scanned
num
return
num
return
Double
_values
level
compareTo
int
other
NodeSortRecord
int
cmp
level
for
forControl
level
level
_levels
level
block
if
_compareType
level
COMPARE_NUMERIC
block
Double
our
numericValue
level
Double
their
numericValue
level
cmp
compareTo
their
block
CollationKey
our
stringValue
level
CollationKey
their
stringValue
level
cmp
compareTo
their
if
cmp
block
return
_sortOrder
level
COMPARE_DESCENDING
cmp
cmp
return
_node
_node
getCollator
Collator
return
_collator
extractValueFromDOM
String
dom
DOM
current
int
level
int
translet
AbstractTranslet
last
int
