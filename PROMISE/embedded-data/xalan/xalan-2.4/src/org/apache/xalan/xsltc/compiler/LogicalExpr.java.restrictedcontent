LogicalExpr
int
OR
int
AND
int
_op
Expression
_left
Expression
_right
String
Ops
LogicalExpr
op
int
left
Expression
right
Expression
_op
op
_left
left
_right
right
hasPositionCall
boolean
return
hasPositionCall
hasPositionCall
evaluateAtCompileTime
Object
Object
leftb
evaluateAtCompileTime
Object
rightb
evaluateAtCompileTime
if
leftb
rightb
block
return
if
_op
AND
block
return
leftb
TRUE
rightb
TRUE
TRUE
FALSE
block
return
leftb
TRUE
rightb
TRUE
TRUE
FALSE
getOp
int
return
_op
setParser
parser
Parser
setParser
parser
setParser
parser
setParser
parser
toString
String
return
Ops
_op
_left
_right
typeCheck
Type
stable
SymbolTable
Type
tleft
typeCheck
stable
Type
tright
typeCheck
stable
MethodType
wantType
MethodType
Void
tleft
tright
MethodType
haveType
lookupPrimop
stable
Ops
_op
wantType
if
haveType
block
Type
arg1
Type
argsType
elementAt
if
identicalTo
tleft
_left
CastExpr
_left
arg1
Type
arg2
Type
argsType
elementAt
if
identicalTo
tright
_right
CastExpr
_right
arg1
return
_type
resultType
throw
TypeCheckError
translate
classGen
ClassGenerator
methodGen
MethodGenerator
translateDesynthesized
classGen
methodGen
synthesize
classGen
methodGen
translateDesynthesized
classGen
ClassGenerator
methodGen
MethodGenerator
InstructionList
il
getInstructionList
SyntaxTreeNode
parent
getParent
if
_op
AND
block
translateDesynthesized
classGen
methodGen
InstructionHandle
middle
append
NOP
translateDesynthesized
classGen
methodGen
InstructionHandle
after
append
NOP
append
append
_falseList
if
_left
LogicalExpr
LogicalExpr
_left
OR
block
backPatchTrueList
middle
if
_left
NotCall
block
backPatchTrueList
middle
block
append
_trueList
if
_right
LogicalExpr
LogicalExpr
_right
OR
block
backPatchTrueList
after
if
_right
NotCall
block
backPatchTrueList
after
block
append
_trueList
block
translateDesynthesized
classGen
methodGen
InstructionHandle
ih
append
GOTO
translateDesynthesized
classGen
methodGen
backPatch
ih
backPatch
getNext
append
_falseList
add
append
_trueList
ih
Expression
