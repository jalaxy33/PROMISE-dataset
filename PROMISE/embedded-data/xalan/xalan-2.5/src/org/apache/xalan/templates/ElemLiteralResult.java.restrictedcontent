ElemLiteralResult
boolean
isLiteralResultAsStylesheet
setIsLiteralResultAsStylesheet
b
boolean
isLiteralResultAsStylesheet
b
getIsLiteralResultAsStylesheet
boolean
return
isLiteralResultAsStylesheet
compose
sroot
StylesheetRoot
compose
sroot
StylesheetRoot
ComposeState
cstate
getComposeState
java
util
Vector
vnames
getVariableNames
if
m_avts
block
int
nAttrs
size
for
forControl
int
i
nAttrs
i
i
block
AVT
avt
AVT
elementAt
i
fixupVariables
vnames
getGlobalsSize
Vector
m_avts
Vector
m_xslAttr
addLiteralResultAttribute
avt
AVT
if
m_avts
m_avts
Vector
addElement
avt
addLiteralResultAttribute
att
String
if
m_xslAttr
m_xslAttr
Vector
addElement
att
setXmlSpace
avt
AVT
addLiteralResultAttribute
avt
String
val
getSimpleString
if
equals
block
setXmlSpace
ATTRVAL_STRIP
if
equals
block
setXmlSpace
ATTRVAL_PRESERVE
getLiteralResultAttribute
AVT
name
String
if
m_avts
block
int
nAttrs
size
for
forControl
int
i
nAttrs
i
i
block
AVT
avt
AVT
elementAt
i
if
getRawName
equals
name
block
return
avt
return
containsExcludeResultPrefix
boolean
prefix
String
uri
String
if
uri
m_excludeResultPrefixes
m_ExtensionElementURIs
return
containsExcludeResultPrefix
prefix
uri
if
length
prefix
ATTRVAL_DEFAULT_PREFIX
if
m_excludeResultPrefixes
for
forControl
int
i
i
size
i
block
if
equals
getNamespaceForPrefix
elementAt
i
return
if
m_ExtensionElementURIs
contains
uri
return
return
containsExcludeResultPrefix
prefix
uri
resolvePrefixTables
resolvePrefixTables
StylesheetRoot
stylesheet
getStylesheetRoot
if
m_namespace
length
block
NamespaceAlias
nsa
getNamespaceAliasComposed
m_namespace
if
nsa
block
m_namespace
getResultNamespace
String
resultPrefix
getStylesheetPrefix
if
resultPrefix
length
m_rawName
resultPrefix
m_localName
m_rawName
m_localName
if
m_avts
block
int
n
size
for
forControl
int
i
i
n
i
block
AVT
avt
AVT
elementAt
i
String
ns
getURI
if
ns
length
block
NamespaceAlias
nsa
getNamespaceAliasComposed
m_namespace
if
nsa
block
String
namespace
getResultNamespace
String
resultPrefix
getStylesheetPrefix
String
rawName
getName
if
resultPrefix
length
rawName
resultPrefix
rawName
setURI
namespace
setRawName
rawName
needToCheckExclude
boolean
if
m_excludeResultPrefixes
m_prefixTable
m_ExtensionElementURIs
return
block
if
m_prefixTable
m_prefixTable
Vector
return
String
m_namespace
setNamespace
ns
String
if
ns
ns
m_namespace
ns
getNamespace
String
return
m_namespace
String
m_localName
setLocalName
localName
String
m_localName
localName
getLocalName
String
return
m_localName
String
m_rawName
setRawName
rawName
String
m_rawName
rawName
getRawName
String
return
m_rawName
getPrefix
String
int
len
length
length
return
len
substring
len
StringVector
m_ExtensionElementURIs
setExtensionElementPrefixes
v
StringVector
m_ExtensionElementURIs
v
getExtensionElementPrefix
String
i
int
if
m_ExtensionElementURIs
throw
ArrayIndexOutOfBoundsException
return
elementAt
i
getExtensionElementPrefixCount
int
return
m_ExtensionElementURIs
size
containsExtensionElementURI
boolean
uri
String
if
m_ExtensionElementURIs
return
return
contains
uri
getXSLToken
int
return
ELEMNAME_LITERALRESULT
getNodeName
String
return
m_rawName
String
m_version
setVersion
v
String
m_version
v
getVersion
String
return
m_version
StringVector
m_excludeResultPrefixes
setExcludeResultPrefixes
v
StringVector
m_excludeResultPrefixes
v
excludeResultNSDecl
boolean
prefix
String
uri
String
if
m_excludeResultPrefixes
block
return
containsExcludeResultPrefix
prefix
uri
return
execute
transformer
TransformerImpl
try
SerializationHandler
rhandler
getSerializationHandler
startPrefixMapping
getPrefix
getNamespace
executeNSDecls
transformer
startElement
getNamespace
getLocalName
getRawName
try
execute
transformer
if
m_avts
block
int
nAttrs
size
for
forControl
int
i
nAttrs
i
i
block
AVT
avt
AVT
elementAt
i
XPathContext
xctxt
getXPathContext
int
sourceNode
getCurrentNode
String
stringedValue
evaluate
xctxt
sourceNode
if
stringedValue
block
addAttribute
getURI
getName
getRawName
stringedValue
executeChildTemplates
endElement
getNamespace
getLocalName
getRawName
unexecuteNSDecls
transformer
endPrefixMapping
getPrefix
catchClause
se
throw
TransformerException
se
enumerateLiteralResultAttributes
Enumeration
return
m_avts
elements
accept
boolean
visitor
XSLTVisitor
return
visitLiteralResultElement
callChildVisitors
visitor
XSLTVisitor
callAttrs
boolean
if
callAttrs
m_avts
block
int
nAttrs
size
for
forControl
int
i
nAttrs
i
i
block
AVT
avt
AVT
elementAt
i
callVisitors
visitor
callChildVisitors
visitor
callAttrs
ElemUse
