RelationalExpr
int
_op
Expression
_left
_right
RelationalExpr
op
int
left
Expression
right
Expression
_op
op
_left
left
_right
right
setParser
parser
Parser
setParser
parser
setParser
parser
setParser
parser
hasPositionCall
boolean
if
hasPositionCall
return
if
hasPositionCall
return
return
hasReferenceArgs
boolean
return
getType
ReferenceType
getType
ReferenceType
hasNodeArgs
boolean
return
getType
NodeType
getType
NodeType
hasNodeSetArgs
boolean
return
getType
NodeSetType
getType
NodeSetType
typeCheck
Type
stable
SymbolTable
Type
tleft
typeCheck
stable
Type
tright
typeCheck
stable
if
tleft
ResultTreeType
tright
ResultTreeType
block
_right
CastExpr
_right
Real
_left
CastExpr
_left
Real
return
_type
Boolean
if
hasReferenceArgs
block
Type
type
Type
typeL
Type
typeR
if
tleft
ReferenceType
block
if
_left
VariableRefBase
block
VariableRefBase
ref
VariableRefBase
_left
VariableBase
var
getVariable
typeL
getType
if
tright
ReferenceType
block
if
_right
VariableRefBase
block
VariableRefBase
ref
VariableRefBase
_right
VariableBase
var
getVariable
typeR
getType
if
typeL
type
typeR
if
typeR
type
typeL
block
type
Real
if
type
type
Real
_right
CastExpr
_right
type
_left
CastExpr
_left
type
return
_type
Boolean
if
hasNodeSetArgs
block
if
tright
NodeSetType
block
Expression
temp
_right
_right
_left
_left
temp
_op
_op
GT
LT
_op
LT
GT
_op
GE
LE
GE
tright
getType
if
tright
NodeType
block
_right
CastExpr
_right
NodeSet
if
tright
IntType
block
_right
CastExpr
_right
Real
if
tright
ResultTreeType
block
_right
CastExpr
_right
String
return
_type
Boolean
if
hasNodeArgs
block
if
tleft
BooleanType
block
_right
CastExpr
_right
Boolean
tright
Boolean
if
tright
BooleanType
block
_left
CastExpr
_left
Boolean
tleft
Boolean
MethodType
ptype
lookupPrimop
stable
names
_op
MethodType
Void
tleft
tright
if
ptype
block
Type
arg1
Type
argsType
elementAt
if
identicalTo
tleft
block
_left
CastExpr
_left
arg1
Type
arg2
Type
argsType
elementAt
if
identicalTo
tright
block
_right
CastExpr
_right
arg1
return
_type
resultType
throw
TypeCheckError
translate
classGen
ClassGenerator
methodGen
MethodGenerator
if
hasNodeSetArgs
hasReferenceArgs
block
ConstantPoolGen
cpg
getConstantPool
InstructionList
il
getInstructionList
translate
classGen
methodGen
startResetIterator
classGen
methodGen
translate
classGen
methodGen
startResetIterator
classGen
methodGen
append
PUSH
cpg
_op
append
loadDOM
int
index
addMethodref
BASIS_LIBRARY_CLASS
getType
toSignature
getType
toSignature
DOM_INTF_SIG
append
INVOKESTATIC
index
block
translateDesynthesized
classGen
methodGen
synthesize
classGen
methodGen
translateDesynthesized
classGen
ClassGenerator
methodGen
MethodGenerator
if
hasNodeSetArgs
hasReferenceArgs
block
translate
classGen
methodGen
desynthesize
classGen
methodGen
block
BranchInstruction
bi
InstructionList
il
getInstructionList
translate
classGen
methodGen
translate
classGen
methodGen
boolean
tozero
Type
tleft
getType
if
tleft
RealType
block
append
CMP
_op
LT
_op
LE
tleft
Int
tozero
switch
_op
case
bi
GE
tozero
break
case
bi
LE
tozero
break
case
bi
GT
tozero
break
case
bi
LT
tozero
break
case
ErrorMsg
msg
ErrorMsg
ILLEGAL_RELAT_OP_ERR
getParser
reportError
FATAL
msg
add
append
bi
toString
String
return
names
_op
_left
_right
Expression
Operators
