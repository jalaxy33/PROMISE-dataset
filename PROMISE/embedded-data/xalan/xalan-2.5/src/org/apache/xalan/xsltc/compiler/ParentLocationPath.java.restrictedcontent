ParentLocationPath
Expression
_step
RelativeLocationPath
_path
Type
stype
boolean
_orderNodes
boolean
_axisMismatch
ParentLocationPath
path
RelativeLocationPath
step
Expression
_path
path
_step
step
setParent
setParent
if
_step
Step
block
_axisMismatch
checkAxisMismatch
setAxis
axis
int
setAxis
axis
getAxis
int
return
getAxis
getPath
RelativeLocationPath
return
_path
getStep
Expression
return
_step
setParser
parser
Parser
setParser
parser
setParser
parser
setParser
parser
toString
String
return
_path
_step
typeCheck
Type
stable
SymbolTable
stype
typeCheck
stable
typeCheck
stable
if
_axisMismatch
enableNodeOrdering
return
_type
NodeSet
enableNodeOrdering
SyntaxTreeNode
parent
getParent
if
parent
ParentLocationPath
ParentLocationPath
parent
block
_orderNodes
checkAxisMismatch
boolean
int
left
getAxis
int
right
Step
_step
if
left
ANCESTOR
left
ANCESTORORSELF
right
CHILD
right
DESCENDANT
right
DESCENDANTORSELF
right
PARENT
right
PRECEDING
right
PRECEDINGSIBLING
return
if
left
CHILD
right
ANCESTOR
right
ANCESTORORSELF
right
PARENT
right
PRECEDING
return
if
left
DESCENDANT
left
DESCENDANTORSELF
return
if
left
FOLLOWING
left
FOLLOWINGSIBLING
right
FOLLOWING
right
PARENT
right
PRECEDING
right
PRECEDINGSIBLING
return
if
left
PRECEDING
left
PRECEDINGSIBLING
right
DESCENDANT
right
DESCENDANTORSELF
right
FOLLOWING
right
FOLLOWINGSIBLING
right
PARENT
right
PRECEDING
right
PRECEDINGSIBLING
return
if
right
FOLLOWING
left
CHILD
block
if
_path
Step
block
int
type
Step
_path
if
type
ATTRIBUTE_NODE
return
return
translate
classGen
ClassGenerator
methodGen
MethodGenerator
ConstantPoolGen
cpg
getConstantPool
InstructionList
il
getInstructionList
int
initSI
addMethodref
STEP_ITERATOR_CLASS
NODE_ITERATOR_SIG
NODE_ITERATOR_SIG
append
NEW
addClass
STEP_ITERATOR_CLASS
append
DUP
translate
classGen
methodGen
translate
classGen
methodGen
append
INVOKESPECIAL
initSI
Expression
stp
_step
if
stp
ParentLocationPath
stp
ParentLocationPath
stp
if
_path
Step
stp
Step
block
int
path
Step
_path
int
step
Step
stp
if
path
DESCENDANTORSELF
step
CHILD
path
PRECEDING
step
PARENT
block
int
incl
addMethodref
NODE_ITERATOR_BASE
NODE_ITERATOR_SIG
append
INVOKEVIRTUAL
incl
if
_orderNodes
block
int
order
addInterfaceMethodref
DOM_INTF
ORDER_ITERATOR
ORDER_ITERATOR_SIG
append
loadDOM
append
SWAP
append
loadContextNode
append
INVOKEINTERFACE
order
RelativeLocationPath
