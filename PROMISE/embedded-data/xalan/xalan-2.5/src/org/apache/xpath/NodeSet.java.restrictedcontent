NodeSet
NodeSet
m_blocksize
m_mapSize
NodeSet
blocksize
int
m_blocksize
blocksize
m_mapSize
NodeSet
nodelist
NodeList
addNodes
nodelist
NodeSet
nodelist
NodeSet
addNodes
NodeIterator
nodelist
NodeSet
ni
NodeIterator
addNodes
ni
NodeSet
node
Node
addNode
node
getRoot
Node
return
cloneWithReset
NodeIterator
NodeSet
clone
NodeSet
clone
reset
return
clone
reset
m_next
getWhatToShow
int
return
SHOW_ALL
SHOW_ENTITY_REFERENCE
getFilter
NodeFilter
return
getExpandEntityReferences
boolean
return
nextNode
Node
if
m_next
size
block
Node
next
elementAt
m_next
m_next
return
next
return
previousNode
Node
if
m_cacheNodes
throw
RuntimeException
createXPATHMessage
ER_NODESET_CANNOT_ITERATE
if
m_next
block
m_next
return
elementAt
m_next
return
detach
isFresh
boolean
return
m_next
runTo
index
int
if
m_cacheNodes
throw
RuntimeException
createXPATHMessage
ER_NODESET_CANNOT_INDEX
if
index
m_next
m_firstFree
m_next
index
m_next
m_firstFree
item
Node
index
int
runTo
index
return
Node
elementAt
index
getLength
int
runTo
return
size
addNode
n
Node
if
m_mutable
throw
RuntimeException
createXPATHMessage
ER_NODESET_NOT_MUTABLE
addElement
n
insertNode
n
Node
pos
int
if
m_mutable
throw
RuntimeException
createXPATHMessage
ER_NODESET_NOT_MUTABLE
insertElementAt
n
pos
removeNode
n
Node
if
m_mutable
throw
RuntimeException
createXPATHMessage
ER_NODESET_NOT_MUTABLE
removeElement
n
addNodes
nodelist
NodeList
if
m_mutable
throw
RuntimeException
createXPATHMessage
ER_NODESET_NOT_MUTABLE
if
nodelist
block
int
nChildren
getLength
for
forControl
int
i
i
nChildren
i
block
Node
obj
item
i
if
obj
block
addElement
obj
addNodes
ns
NodeSet
if
m_mutable
throw
RuntimeException
createXPATHMessage
ER_NODESET_NOT_MUTABLE
addNodes
NodeIterator
ns
addNodes
iterator
NodeIterator
if
m_mutable
throw
RuntimeException
createXPATHMessage
ER_NODESET_NOT_MUTABLE
if
iterator
block
Node
obj
while
obj
nextNode
block
addElement
obj
addNodesInDocOrder
nodelist
NodeList
support
XPathContext
if
m_mutable
throw
RuntimeException
createXPATHMessage
ER_NODESET_NOT_MUTABLE
int
nChildren
getLength
for
forControl
int
i
i
nChildren
i
block
Node
node
item
i
if
node
block
addNodeInDocOrder
node
support
addNodesInDocOrder
iterator
NodeIterator
support
XPathContext
if
m_mutable
throw
RuntimeException
createXPATHMessage
ER_NODESET_NOT_MUTABLE
Node
node
while
node
nextNode
block
addNodeInDocOrder
node
support
addNodesInDocOrder
boolean
start
int
end
int
testIndex
int
nodelist
NodeList
support
XPathContext
if
m_mutable
throw
RuntimeException
createXPATHMessage
ER_NODESET_NOT_MUTABLE
boolean
foundit
int
i
Node
node
item
testIndex
for
forControl
i
end
i
start
i
block
Node
child
Node
elementAt
i
if
child
node
block
i
break
if
isNodeAfter
node
child
block
insertElementAt
node
i
testIndex
if
testIndex
block
boolean
foundPrev
addNodesInDocOrder
i
testIndex
nodelist
support
if
foundPrev
block
addNodesInDocOrder
i
size
testIndex
nodelist
support
break
if
i
block
insertElementAt
node
return
foundit
addNodeInDocOrder
int
node
Node
test
boolean
support
XPathContext
if
m_mutable
throw
RuntimeException
createXPATHMessage
ER_NODESET_NOT_MUTABLE
int
insertIndex
if
test
block
int
size
size
i
for
forControl
i
size
i
i
block
Node
child
Node
elementAt
i
if
child
node
block
i
break
if
isNodeAfter
node
child
block
break
if
i
block
insertIndex
i
insertElementAt
node
insertIndex
block
insertIndex
size
boolean
foundit
for
forControl
int
i
i
insertIndex
i
block
if
item
i
equals
node
block
foundit
break
if
foundit
addElement
node
return
insertIndex
addNodeInDocOrder
int
node
Node
support
XPathContext
if
m_mutable
throw
RuntimeException
createXPATHMessage
ER_NODESET_NOT_MUTABLE
return
addNodeInDocOrder
node
support
int
m_next
getCurrentPos
int
return
m_next
setCurrentPos
i
int
if
m_cacheNodes
throw
RuntimeException
createXPATHMessage
ER_NODESET_CANNOT_INDEX
m_next
i
getCurrentNode
Node
if
m_cacheNodes
throw
RuntimeException
createXPATHMessage
ER_NODESET_CANNOT_INDEX
int
saved
m_next
Node
n
m_next
m_firstFree
elementAt
m_next
m_next
saved
return
n
boolean
m_mutable
boolean
m_cacheNodes
getShouldCacheNodes
boolean
return
m_cacheNodes
setShouldCacheNodes
b
boolean
if
isFresh
throw
RuntimeException
createXPATHMessage
ER_CANNOT_CALL_SETSHOULDCACHENODE
m_cacheNodes
b
m_mutable
int
m_last
getLast
int
return
m_last
setLast
last
int
m_last
last
int
m_blocksize
Node
m_map
int
m_firstFree
int
m_mapSize
clone
Object
NodeSet
clone
NodeSet
clone
if
m_map
m_map
m_map
block
m_map
Node
m_map
length
arraycopy
m_map
m_map
m_map
length
return
clone
size
int
return
m_firstFree
addElement
value
Node
if
m_mutable
throw
RuntimeException
createXPATHMessage
ER_NODESET_NOT_MUTABLE
if
m_firstFree
m_mapSize
block
if
m_map
block
m_map
Node
m_blocksize
m_mapSize
m_blocksize
block
m_mapSize
m_blocksize
Node
newMap
Node
m_mapSize
arraycopy
m_map
newMap
m_firstFree
m_map
newMap
m_map
m_firstFree
value
m_firstFree
push
value
Node
int
ff
m_firstFree
if
ff
m_mapSize
block
if
m_map
block
m_map
Node
m_blocksize
m_mapSize
m_blocksize
block
m_mapSize
m_blocksize
Node
newMap
Node
m_mapSize
arraycopy
m_map
newMap
ff
m_map
newMap
m_map
ff
value
ff
m_firstFree
ff
pop
Node
m_firstFree
Node
n
m_map
m_firstFree
m_map
m_firstFree
return
n
popAndTop
Node
m_firstFree
m_map
m_firstFree
return
m_firstFree
m_map
m_firstFree
popQuick
m_firstFree
m_map
m_firstFree
peepOrNull
Node
return
m_map
m_firstFree
m_map
m_firstFree
pushPair
v1
Node
v2
Node
if
m_map
block
m_map
Node
m_blocksize
m_mapSize
m_blocksize
block
if
m_firstFree
m_mapSize
block
m_mapSize
m_blocksize
Node
newMap
Node
m_mapSize
arraycopy
m_map
newMap
m_firstFree
m_map
newMap
m_map
m_firstFree
v1
m_map
m_firstFree
v2
m_firstFree
popPair
m_firstFree
m_map
m_firstFree
m_map
m_firstFree
setTail
n
Node
m_map
m_firstFree
n
setTailSub1
n
Node
m_map
m_firstFree
n
peepTail
Node
return
m_map
m_firstFree
peepTailSub1
Node
return
m_map
m_firstFree
insertElementAt
value
Node
at
int
if
m_mutable
throw
RuntimeException
createXPATHMessage
ER_NODESET_NOT_MUTABLE
if
m_map
block
m_map
Node
m_blocksize
m_mapSize
m_blocksize
if
m_firstFree
m_mapSize
block
m_mapSize
m_blocksize
Node
newMap
Node
m_mapSize
arraycopy
m_map
newMap
m_firstFree
m_map
newMap
if
at
m_firstFree
block
arraycopy
m_map
at
m_map
at
m_firstFree
at
m_map
at
value
m_firstFree
appendNodes
nodes
NodeSet
int
nNodes
size
if
m_map
block
m_mapSize
nNodes
m_blocksize
m_map
Node
m_mapSize
if
m_firstFree
nNodes
m_mapSize
block
m_mapSize
nNodes
m_blocksize
Node
newMap
Node
m_mapSize
arraycopy
m_map
newMap
m_firstFree
nNodes
m_map
newMap
arraycopy
m_map
m_map
m_firstFree
nNodes
m_firstFree
nNodes
removeAllElements
if
m_map
return
for
forControl
int
i
i
m_firstFree
i
block
m_map
i
m_firstFree
removeElement
boolean
s
Node
if
m_mutable
throw
RuntimeException
createXPATHMessage
ER_NODESET_NOT_MUTABLE
if
m_map
return
for
forControl
int
i
i
m_firstFree
i
block
Node
node
m_map
i
if
node
equals
s
block
if
i
m_firstFree
arraycopy
m_map
i
m_map
i
m_firstFree
i
m_map
i
m_firstFree
return
return
removeElementAt
i
int
if
m_map
return
if
i
m_firstFree
arraycopy
m_map
i
m_map
i
m_firstFree
i
m_map
i
setElementAt
node
Node
index
int
if
m_mutable
throw
RuntimeException
createXPATHMessage
ER_NODESET_NOT_MUTABLE
if
m_map
block
m_map
Node
m_blocksize
m_mapSize
m_blocksize
m_map
index
node
elementAt
Node
i
int
if
m_map
return
return
m_map
i
contains
boolean
s
Node
runTo
if
m_map
return
for
forControl
int
i
i
m_firstFree
i
block
Node
node
m_map
i
if
node
equals
s
return
return
indexOf
int
elem
Node
index
int
runTo
if
m_map
return
for
forControl
int
i
index
i
m_firstFree
i
block
Node
node
m_map
i
if
node
equals
elem
return
i
return
indexOf
int
elem
Node
runTo
if
m_map
return
for
forControl
int
i
i
m_firstFree
i
block
Node
node
m_map
i
if
node
equals
elem
return
i
return
NodeList
NodeIterator
Cloneable
ContextNodeList
