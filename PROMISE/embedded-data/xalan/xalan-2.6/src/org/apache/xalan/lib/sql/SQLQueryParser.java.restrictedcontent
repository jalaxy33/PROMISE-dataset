SQLQueryParser
boolean
m_InlineVariables
boolean
m_IsCallable
String
m_OrigQuery
StringBuffer
m_ParsedQuery
Vector
m_Parameters
boolean
m_hasOutput
boolean
m_HasParameters
int
NO_OVERRIDE
int
NO_INLINE_PARSER
int
INLINE_PARSER
SQLQueryParser
init
SQLQueryParser
query
String
m_OrigQuery
query
init
parse
SQLQueryParser
xconn
XConnection
query
String
override
int
SQLQueryParser
parser
SQLQueryParser
query
parse
xconn
override
return
parser
parse
xconn
XConnection
override
int
m_InlineVariables
equals
getFeature
if
override
NO_INLINE_PARSER
m_InlineVariables
if
override
INLINE_PARSER
m_InlineVariables
if
m_InlineVariables
inlineParser
hasParameters
boolean
return
m_HasParameters
isCallable
boolean
return
m_IsCallable
getParameters
Vector
return
m_Parameters
setParameters
p
Vector
m_HasParameters
m_Parameters
p
getSQLQuery
String
if
m_InlineVariables
return
toString
return
m_OrigQuery
populateStatement
stmt
PreparedStatement
ctx
ExpressionContext
for
forControl
int
indx
indx
size
indx
block
QueryParameter
parm
QueryParameter
elementAt
indx
try
if
m_InlineVariables
block
XObject
value
XObject
getVariableOrParam
QName
getName
if
value
block
setObject
indx
object
getType
block
setNull
indx
getType
block
String
value
getValue
if
value
block
setObject
indx
value
getType
block
setNull
indx
getType
catchClause
tx
registerOutputParameters
cstmt
CallableStatement
if
m_IsCallable
m_hasOutput
block
for
forControl
int
indx
indx
size
indx
block
QueryParameter
parm
QueryParameter
elementAt
indx
if
isOutput
block
registerOutParameter
indx
getType
inlineParser
QueryParameter
curParm
int
state
StringBuffer
tok
StringBuffer
boolean
firstword
if
m_Parameters
m_Parameters
Vector
if
m_ParsedQuery
m_ParsedQuery
StringBuffer
for
forControl
int
idx
idx
length
idx
block
char
ch
charAt
idx
switch
state
case
if
ch
state
if
ch
state
if
firstword
isLetterOrDigit
ch
ch
block
append
ch
state
append
ch
break
case
if
ch
state
if
ch
state
append
ch
break
case
state
append
ch
break
case
if
isLetterOrDigit
ch
ch
ch
append
ch
block
if
toString
equalsIgnoreCase
block
m_IsCallable
if
curParm
block
setIsOutput
firstword
tok
StringBuffer
if
ch
state
if
ch
state
state
append
ch
break
case
if
ch
state
break
case
if
isWhitespace
ch
ch
block
append
toUpperCase
ch
if
length
block
m_HasParameters
curParm
QueryParameter
setTypeName
toString
addElement
curParm
tok
StringBuffer
if
ch
state
state
break
case
if
ch
state
break
case
if
isWhitespace
ch
ch
append
ch
if
length
block
setName
toString
tok
StringBuffer
if
ch
block
state
state
break
case
if
isWhitespace
ch
ch
block
append
ch
if
length
block
setLength
if
toString
equalsIgnoreCase
block
setIsOutput
m_hasOutput
tok
StringBuffer
if
ch
block
state
break
if
m_IsCallable
block
insert
append
