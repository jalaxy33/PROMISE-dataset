NodeSorter
XPathContext
m_execContext
Vector
m_keys
NodeSorter
p
XPathContext
m_execContext
p
sort
v
DTMIterator
keys
Vector
support
XPathContext
m_keys
keys
int
n
getLength
Vector
nodes
Vector
for
forControl
int
i
i
n
i
block
NodeCompareElem
elem
NodeCompareElem
item
i
addElement
elem
Vector
scratchVector
Vector
mergesort
nodes
scratchVector
n
support
for
forControl
int
i
i
n
i
block
setItem
NodeCompareElem
elementAt
i
i
setCurrentPos
compare
int
n1
NodeCompareElem
n2
NodeCompareElem
kIndex
int
support
XPathContext
int
result
NodeSortKey
k
NodeSortKey
elementAt
kIndex
if
m_treatAsNumbers
block
double
n1Num
n2Num
if
kIndex
block
n1Num
Double
m_key1Value
n2Num
Double
m_key1Value
if
kIndex
block
n1Num
Double
m_key2Value
n2Num
Double
m_key2Value
block
XObject
r1
execute
m_execContext
m_node
m_namespaceContext
XObject
r2
execute
m_execContext
m_node
m_namespaceContext
n1Num
num
n2Num
num
if
n1Num
n2Num
kIndex
size
block
result
compare
n1
n2
kIndex
support
block
double
diff
if
isNaN
n1Num
block
if
isNaN
n2Num
diff
diff
if
isNaN
n2Num
diff
diff
n1Num
n2Num
result
int
diff
m_descending
diff
m_descending
block
CollationKey
n1String
n2String
if
kIndex
block
n1String
CollationKey
m_key1Value
n2String
CollationKey
m_key1Value
if
kIndex
block
n1String
CollationKey
m_key2Value
n2String
CollationKey
m_key2Value
block
XObject
r1
execute
m_execContext
m_node
m_namespaceContext
XObject
r2
execute
m_execContext
m_node
m_namespaceContext
n1String
getCollationKey
str
n2String
getCollationKey
str
result
compareTo
n2String
if
m_caseOrderUpper
block
String
tempN1
getSourceString
toLowerCase
String
tempN2
getSourceString
toLowerCase
if
equals
tempN2
block
result
result
result
if
m_descending
block
result
result
if
result
block
if
kIndex
size
block
result
compare
n1
n2
kIndex
support
if
result
block
DTM
dtm
getDTM
m_node
result
isNodeAfter
m_node
m_node
return
result
mergesort
a
Vector
b
Vector
l
int
r
int
support
XPathContext
if
r
l
block
int
m
r
l
mergesort
a
b
l
m
support
mergesort
a
b
m
r
support
int
i
j
k
for
forControl
i
m
i
l
i
block
if
i
size
insertElementAt
elementAt
i
i
setElementAt
elementAt
i
i
i
l
for
forControl
j
m
j
r
j
block
if
r
m
j
size
insertElementAt
elementAt
j
r
m
j
setElementAt
elementAt
j
r
m
j
j
r
int
compVal
for
forControl
k
l
k
r
k
block
if
i
j
compVal
compVal
compare
NodeCompareElem
elementAt
i
NodeCompareElem
elementAt
j
support
if
compVal
block
setElementAt
elementAt
i
k
i
if
compVal
block
setElementAt
elementAt
j
k
j
NodeCompareElem
int
m_node
int
maxkey
Object
m_key1Value
Object
m_key2Value
NodeCompareElem
node
int
m_node
node
if
isEmpty
block
NodeSortKey
k1
NodeSortKey
elementAt
XObject
r
execute
m_execContext
node
m_namespaceContext
double
d
if
m_treatAsNumbers
block
d
num
m_key1Value
Double
d
block
m_key1Value
getCollationKey
str
if
getType
CLASS_NODESET
block
DTMIterator
ni
XNodeSet
r
int
current
getCurrentNode
if
NULL
current
current
nextNode
if
size
block
NodeSortKey
k2
NodeSortKey
elementAt
XObject
r2
execute
m_execContext
node
m_namespaceContext
if
m_treatAsNumbers
block
d
num
m_key2Value
Double
d
block
m_key2Value
getCollationKey
str
