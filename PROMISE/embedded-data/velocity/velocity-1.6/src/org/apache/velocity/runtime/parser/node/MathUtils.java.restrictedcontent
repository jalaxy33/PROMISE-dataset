MathUtils
BigDecimal
DECIMAL_ZERO
BigDecimal
ZERO
int
BASE_LONG
int
BASE_FLOAT
int
BASE_DOUBLE
int
BASE_BIGINTEGER
int
BASE_BIGDECIMAL
Map
ints
HashMap
put
Byte
valueOf
MAX_VALUE
put
Short
valueOf
MAX_VALUE
put
Integer
valueOf
MAX_VALUE
put
Long
valueOf
MAX_VALUE
put
BigInteger
valueOf
List
typesBySize
ArrayList
add
Byte
add
Short
add
Integer
add
Long
add
Float
add
Double
toBigDecimal
BigDecimal
n
Number
if
n
BigDecimal
block
return
BigDecimal
n
if
n
BigInteger
block
return
BigDecimal
BigInteger
n
return
BigDecimal
doubleValue
toBigInteger
BigInteger
n
Number
if
n
BigInteger
block
return
BigInteger
n
return
valueOf
longValue
isZero
boolean
n
Number
if
isInteger
n
block
if
n
BigInteger
block
return
BigInteger
n
return
doubleValue
if
n
Float
block
return
floatValue
if
n
Double
block
return
doubleValue
return
toBigDecimal
compareTo
DECIMAL_ZERO
n
isInteger
boolean
n
Number
return
containsKey
getClass
wrapPrimitive
Number
value
long
type
Class
if
type
Byte
block
if
value
MAX_VALUE
value
MIN_VALUE
block
type
Short
block
return
Byte
byte
value
if
type
Short
block
if
value
MAX_VALUE
value
MIN_VALUE
block
type
Integer
block
return
Short
short
value
if
type
Integer
block
if
value
MAX_VALUE
value
MIN_VALUE
block
type
Long
block
return
Integer
int
value
if
type
Long
block
return
Long
value
return
valueOf
value
wrapPrimitive
Number
value
long
op1
Number
op2
Number
if
indexOf
getClass
indexOf
getClass
block
return
wrapPrimitive
value
getClass
return
wrapPrimitive
value
getClass
findCalculationBase
int
op1
Number
op2
Number
boolean
op1Int
isInteger
op1
boolean
op2Int
isInteger
op2
if
op1
BigDecimal
op2
BigDecimal
op1Int
op2Int
op1
BigInteger
op2
BigInteger
block
return
BASE_BIGDECIMAL
if
op1Int
op2Int
block
if
op1
BigInteger
op2
BigInteger
block
return
BASE_BIGINTEGER
return
BASE_LONG
if
op1
Double
op2
Double
block
return
BASE_DOUBLE
return
BASE_FLOAT
add
Number
op1
Number
op2
Number
int
calcBase
findCalculationBase
op1
op2
switch
calcBase
case
return
toBigInteger
add
toBigInteger
op2
op1
case
long
l1
longValue
long
l2
longValue
long
result
l1
l2
if
result
l1
result
l2
block
return
toBigInteger
add
toBigInteger
op2
op1
return
wrapPrimitive
result
op1
op2
case
return
Float
floatValue
floatValue
case
return
Double
doubleValue
doubleValue
case
return
toBigDecimal
add
toBigDecimal
op2
op1
subtract
Number
op1
Number
op2
Number
int
calcBase
findCalculationBase
op1
op2
switch
calcBase
case
return
toBigInteger
subtract
toBigInteger
op2
op1
case
long
l1
longValue
long
l2
longValue
long
result
l1
l2
if
result
l1
result
l2
block
return
toBigInteger
subtract
toBigInteger
op2
op1
return
wrapPrimitive
result
op1
op2
case
return
Float
floatValue
floatValue
case
return
Double
doubleValue
doubleValue
case
return
toBigDecimal
subtract
toBigDecimal
op2
op1
multiply
Number
op1
Number
op2
Number
int
calcBase
findCalculationBase
op1
op2
switch
calcBase
case
return
toBigInteger
multiply
toBigInteger
op2
op1
case
long
l1
longValue
long
l2
longValue
long
result
l1
l2
if
l2
result
l2
l1
block
return
toBigInteger
multiply
toBigInteger
op2
op1
return
wrapPrimitive
result
op1
op2
case
return
Float
floatValue
floatValue
case
return
Double
doubleValue
doubleValue
case
return
toBigDecimal
multiply
toBigDecimal
op2
op1
divide
Number
op1
Number
op2
Number
int
calcBase
findCalculationBase
op1
op2
switch
calcBase
case
BigInteger
b1
toBigInteger
op1
BigInteger
b2
toBigInteger
op2
return
divide
b2
case
long
l1
longValue
long
l2
longValue
return
wrapPrimitive
l1
l2
op1
op2
case
return
Float
floatValue
floatValue
case
return
Double
doubleValue
doubleValue
case
return
toBigDecimal
divide
toBigDecimal
op2
ROUND_HALF_DOWN
op1
modulo
Number
op1
Number
op2
Number
int
calcBase
findCalculationBase
op1
op2
switch
calcBase
case
return
toBigInteger
mod
toBigInteger
op2
op1
case
return
wrapPrimitive
longValue
longValue
op1
op2
case
return
Float
floatValue
floatValue
case
return
Double
doubleValue
doubleValue
case
throw
ArithmeticException
compare
int
op1
Number
op2
Number
int
calcBase
findCalculationBase
op1
op2
switch
calcBase
case
return
toBigInteger
compareTo
toBigInteger
op2
op1
case
long
l1
longValue
long
l2
longValue
if
l1
l2
block
return
if
l1
l2
block
return
return
case
float
f1
floatValue
float
f2
floatValue
if
f1
f2
block
return
if
f1
f2
block
return
return
case
double
d1
doubleValue
double
d2
doubleValue
if
d1
d2
block
return
if
d1
d2
block
return
return
case
return
toBigDecimal
compareTo
toBigDecimal
op2
op1
