RuntimeMacro
String
macroName
String
sourceTemplate
String
literal
Node
node
boolean
strictRef
RuntimeMacro
macroName
String
sourceTemplate
String
if
macroName
sourceTemplate
block
throw
IllegalArgumentException
macroName
macroName
sourceTemplate
sourceTemplate
getName
String
return
macroName
getType
int
return
LINE
init
rs
RuntimeServices
context
InternalContextAdapter
node
Node
init
rs
context
node
rsvc
rs
node
node
Token
t
getLastToken
if
charAt
block
strictRef
getBoolean
RUNTIME_REFERENCES_STRICT
getLiteral
String
if
literal
block
StrBuilder
buffer
StrBuilder
Token
t
getFirstToken
while
t
t
getLastToken
block
append
image
t
next
if
t
block
append
image
literal
toString
return
literal
render
boolean
context
InternalContextAdapter
writer
Writer
node
Node
VelocimacroProxy
vmProxy
String
renderingTemplate
getCurrentTemplateName
Object
o
getVelocimacro
macroName
sourceTemplate
renderingTemplate
if
o
block
vmProxy
VelocimacroProxy
o
if
vmProxy
block
List
macroLibraries
getMacroLibraries
if
macroLibraries
block
for
forControl
int
i
size
i
i
block
o
getVelocimacro
macroName
String
get
i
renderingTemplate
if
o
block
vmProxy
VelocimacroProxy
o
break
if
vmProxy
block
try
init
rsvc
context
node
catchClause
die
Info
info
Info
sourceTemplate
getLine
getColumn
throw
ParseErrorException
getMessage
formatFileString
info
info
try
return
render
context
writer
node
catchClause
e
getLog
error
macroName
formatFileString
sourceTemplate
getLine
getColumn
throw
e
catchClause
e
getLog
error
macroName
formatFileString
sourceTemplate
getLine
getColumn
throw
e
if
strictRef
block
Info
info
Info
sourceTemplate
getLine
getColumn
throw
ParseErrorException
macroName
formatFileString
info
info
write
getLiteral
return
Directive
