Macro
boolean
debugMode
getName
String
return
getType
int
return
BLOCK
render
boolean
context
InternalContextAdapter
writer
Writer
node
Node
return
init
rs
RuntimeServices
context
InternalContextAdapter
node
Node
init
rs
context
node
processAndRegister
rs
RuntimeServices
t
Token
node
Node
sourceTemplate
String
int
numArgs
jjtGetNumChildren
if
numArgs
block
getLog
error
numArgs
throw
MacroParseException
sourceTemplate
t
int
firstType
jjtGetChild
getType
if
firstType
JJTWORD
block
throw
MacroParseException
jjtNodeName
firstType
sourceTemplate
t
String
argArray
getArgArray
node
rs
addVelocimacro
argArray
jjtGetChild
numArgs
argArray
sourceTemplate
getArgArray
String
node
Node
rsvc
RuntimeServices
int
numArgs
jjtGetNumChildren
numArgs
String
argArray
String
numArgs
int
i
while
i
numArgs
block
argArray
i
jjtGetChild
getFirstToken
image
i
if
i
block
if
argArray
i
startsWith
block
argArray
i
argArray
i
substring
argArray
i
length
i
if
debugMode
block
StringBuffer
msg
StringBuffer
append
append
numArgs
macroToString
msg
argArray
getLog
debug
msg
return
argArray
macroToString
StringBuffer
buf
StringBuffer
argArray
String
StringBuffer
ret
buf
StringBuffer
buf
append
append
argArray
append
for
forControl
int
i
i
length
i
block
append
append
argArray
i
append
return
ret
Directive
