MethodMap
int
MORE_SPECIFIC
int
LESS_SPECIFIC
int
INCOMPARABLE
Map
methodByNameMap
Hashtable
add
method
Method
String
methodName
getName
List
l
get
methodName
if
l
block
l
ArrayList
put
methodName
l
add
method
return
get
List
key
String
return
List
get
key
find
Method
methodName
String
args
Object
List
methodList
get
methodName
if
methodList
block
return
int
l
length
Class
classes
Class
l
for
forControl
int
i
i
l
i
block
Object
arg
args
i
classes
i
arg
getClass
return
getMostSpecific
methodList
classes
AmbiguousException
Exception
getMostSpecific
Method
methods
List
classes
Class
LinkedList
applicables
getApplicables
methods
classes
if
isEmpty
block
return
if
size
block
return
Method
getFirst
LinkedList
maximals
LinkedList
for
forControl
Iterator
applicable
iterator
hasNext
block
Method
app
Method
next
Class
appArgs
getParameterTypes
boolean
lessSpecific
for
forControl
Iterator
maximal
iterator
lessSpecific
hasNext
block
Method
max
Method
next
switch
moreSpecific
appArgs
getParameterTypes
case
block
remove
break
case
block
lessSpecific
break
if
lessSpecific
block
addLast
app
if
size
block
throw
AmbiguousException
return
Method
getFirst
moreSpecific
int
c1
Class
c2
Class
boolean
c1MoreSpecific
boolean
c2MoreSpecific
for
forControl
int
i
i
length
i
block
if
c1
i
c2
i
block
c1MoreSpecific
c1MoreSpecific
isStrictMethodInvocationConvertible
c2
i
c1
i
c2MoreSpecific
c2MoreSpecific
isStrictMethodInvocationConvertible
c1
i
c2
i
if
c1MoreSpecific
block
if
c2MoreSpecific
block
return
INCOMPARABLE
return
MORE_SPECIFIC
if
c2MoreSpecific
block
return
LESS_SPECIFIC
return
INCOMPARABLE
getApplicables
LinkedList
methods
List
classes
Class
LinkedList
list
LinkedList
for
forControl
Iterator
imethod
iterator
hasNext
block
Method
method
Method
next
if
isApplicable
method
classes
block
add
method
return
list
isApplicable
boolean
method
Method
classes
Class
Class
methodArgs
getParameterTypes
if
length
length
block
return
for
forControl
int
i
i
length
i
block
if
isMethodInvocationConvertible
methodArgs
i
classes
i
block
return
return
isMethodInvocationConvertible
boolean
formal
Class
actual
Class
if
actual
isPrimitive
block
return
if
actual
isAssignableFrom
actual
block
return
if
isPrimitive
block
if
formal
TYPE
actual
Boolean
return
if
formal
TYPE
actual
Character
return
if
formal
TYPE
actual
Byte
return
if
formal
TYPE
actual
Short
actual
Byte
return
if
formal
TYPE
actual
Integer
actual
Short
actual
Byte
return
if
formal
TYPE
actual
Long
actual
Integer
actual
Short
actual
Byte
return
if
formal
TYPE
actual
Float
actual
Long
actual
Integer
actual
Short
actual
Byte
return
if
formal
TYPE
actual
Double
actual
Float
actual
Long
actual
Integer
actual
Short
actual
Byte
return
return
isStrictMethodInvocationConvertible
boolean
formal
Class
actual
Class
if
actual
isPrimitive
block
return
if
isAssignableFrom
actual
block
return
if
isPrimitive
block
if
formal
TYPE
actual
TYPE
return
if
formal
TYPE
actual
TYPE
actual
TYPE
return
if
formal
TYPE
actual
TYPE
actual
TYPE
actual
TYPE
return
if
formal
TYPE
actual
TYPE
actual
TYPE
actual
TYPE
actual
TYPE
return
if
formal
TYPE
actual
TYPE
actual
TYPE
actual
TYPE
actual
TYPE
actual
TYPE
return
return
