Macro
boolean
debugMode
getName
String
return
getType
int
return
BLOCK
render
boolean
context
InternalContextAdapter
writer
Writer
node
Node
return
init
rs
RuntimeServices
context
InternalContextAdapter
node
Node
init
rs
context
node
return
processAndRegister
rs
RuntimeServices
node
Node
sourceTemplate
String
int
numArgs
jjtGetNumChildren
if
numArgs
block
error
numArgs
throw
MacroParseException
int
firstType
jjtGetChild
getType
if
firstType
JJTWORD
block
Token
t
jjtGetChild
getFirstToken
throw
MacroParseException
jjtNodeName
firstType
String
argArray
getArgArray
node
List
macroArray
getASTAsStringArray
jjtGetChild
numArgs
StringBuffer
temp
StringBuffer
for
forControl
int
i
i
size
i
block
append
get
i
String
macroBody
toString
boolean
bRet
addVelocimacro
argArray
macroBody
argArray
sourceTemplate
return
getArgArray
String
node
Node
int
numArgs
jjtGetNumChildren
numArgs
String
argArray
String
numArgs
int
i
while
i
numArgs
block
argArray
i
jjtGetChild
getFirstToken
image
i
if
i
block
if
argArray
i
startsWith
block
argArray
i
argArray
i
substring
argArray
i
length
i
if
debugMode
block
println
numArgs
print
argArray
for
forControl
i
i
numArgs
i
block
print
argArray
i
println
return
argArray
getASTAsStringArray
List
rootNode
Node
Token
t
getFirstToken
Token
tLast
getLastToken
ArrayList
list
ArrayList
t
getFirstToken
while
t
tLast
block
add
tokenLiteral
t
t
next
add
tokenLiteral
t
return
list
Directive
