ASTMethod
String
methodName
int
paramCount
Info
uberInfo
ASTMethod
id
int
id
ASTMethod
p
Parser
id
int
p
id
jjtAccept
Object
visitor
ParserVisitor
data
Object
return
visit
data
init
Object
context
InternalContextAdapter
data
Object
init
context
data
uberInfo
Info
getCurrentTemplateName
getLine
getColumn
methodName
getFirstToken
image
paramCount
jjtGetNumChildren
return
data
execute
Object
o
Object
context
InternalContextAdapter
VelMethod
method
Object
params
Object
paramCount
try
Class
paramClasses
paramCount
Class
paramCount
EMPTY_CLASS_ARRAY
for
forControl
int
j
j
paramCount
j
block
params
j
jjtGetChild
value
context
j
if
params
j
block
paramClasses
j
params
j
getClass
MethodCacheKey
mck
MethodCacheKey
methodName
paramClasses
IntrospectionCacheData
icd
icacheGet
mck
if
icd
o
contextData
getClass
block
method
VelMethod
thingy
block
method
getUberspect
getMethod
o
methodName
params
Info
getCurrentTemplateName
getLine
getColumn
if
method
o
block
icd
IntrospectionCacheData
contextData
getClass
thingy
method
icachePut
mck
icd
if
method
block
return
catchClause
mie
throw
mie
catchClause
e
throw
e
catchClause
e
error
e
return
try
Object
obj
invoke
o
params
if
obj
block
if
getReturnType
TYPE
block
return
return
obj
catchClause
ite
Throwable
t
getTargetException
if
t
Exception
block
try
return
methodException
rsvc
context
getClass
methodName
Exception
t
catchClause
e
throw
MethodInvocationException
methodName
getClass
toString
e
methodName
getCurrentTemplateName
getLine
getColumn
block
throw
MethodInvocationException
methodName
getClass
getTargetException
toString
getTargetException
methodName
getCurrentTemplateName
getLine
getColumn
catchClause
e
throw
e
catchClause
e
error
methodName
getClass
e
return
MethodCacheKey
String
methodName
Class
params
MethodCacheKey
methodName
String
params
Class
methodName
methodName
methodName
EMPTY
params
params
params
EMPTY_CLASS_ARRAY
equals
boolean
o
Object
if
o
MethodCacheKey
block
MethodCacheKey
other
MethodCacheKey
o
if
length
length
equals
methodName
block
for
forControl
int
i
i
length
i
block
if
params
i
block
if
params
i
params
i
block
return
if
params
i
equals
params
i
block
return
return
return
hashCode
int
int
result
for
forControl
int
i
i
length
i
block
Class
param
params
i
if
param
block
result
result
hashCode
result
result
hashCode
return
result
getMethodName
String
return
methodName
SimpleNode
