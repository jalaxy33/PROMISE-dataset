package
org
.
gjt
.
sp
.
jedit
.
gui
;
import
javax
.
swing
.
*
;
import
java
.
awt
.
event
.
*
;
import
java
.
util
.
Vector
;
import
org
.
gjt
.
sp
.
jedit
.
msg
.
MacrosChanged
;
import
org
.
gjt
.
sp
.
jedit
.
*
;
public
class
MacrosMenu
extends
EnhancedMenu
implements
EBComponent
{
public
MacrosMenu
(
)
{
super
(
"macros"
)
;
updateMacrosMenu
(
)
;
}
public
void
addNotify
(
)
{
super
.
addNotify
(
)
;
EditBus
.
addToBus
(
this
)
;
}
public
void
removeNotify
(
)
{
super
.
removeNotify
(
)
;
EditBus
.
removeFromBus
(
this
)
;
}
public
void
handleMessage
(
EBMessage
msg
)
{
if
(
msg
instanceof
MacrosChanged
)
updateMacrosMenu
(
)
;
}
private
void
updateMacrosMenu
(
)
{
for
(
int
i
=
getMenuComponentCount
(
)
-
1
;
i
>=
0
;
i
--
)
{
if
(
getMenuComponent
(
i
)
instanceof
JSeparator
)
break
;
else
remove
(
i
)
;
}
int
count
=
getMenuComponentCount
(
)
;
Vector
macroVector
=
Macros
.
getMacroHierarchy
(
)
;
createMacrosMenu
(
this
,
macroVector
,
0
)
;
if
(
count
==
getMenuComponentCount
(
)
)
add
(
GUIUtilities
.
loadMenuItem
(
"no-macros"
)
)
;
}
private
void
createMacrosMenu
(
JMenu
menu
,
Vector
vector
,
int
start
)
{
for
(
int
i
=
start
;
i
<
vector
.
size
(
)
;
i
++
)
{
Object
obj
=
vector
.
elementAt
(
i
)
;
if
(
obj
instanceof
Macros
.
Macro
)
{
Macros
.
Macro
macro
=
(
Macros
.
Macro
)
obj
;
menu
.
add
(
new
EnhancedMenuItem
(
macro
.
getLabel
(
)
,
macro
)
)
;
}
else
if
(
obj
instanceof
Vector
)
{
Vector
subvector
=
(
Vector
)
obj
;
String
name
=
(
String
)
subvector
.
elementAt
(
0
)
;
JMenu
submenu
=
new
JMenu
(
name
)
;
createMacrosMenu
(
submenu
,
subvector
,
1
)
;
if
(
submenu
.
getMenuComponentCount
(
)
==
0
)
{
submenu
.
add
(
GUIUtilities
.
loadMenuItem
(
"no-macros"
)
)
;
}
menu
.
add
(
submenu
)
;
}
}
}
}
