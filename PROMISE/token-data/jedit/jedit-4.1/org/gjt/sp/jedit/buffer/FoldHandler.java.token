package
org
.
gjt
.
sp
.
jedit
.
buffer
;
import
java
.
util
.
*
;
import
javax
.
swing
.
text
.
Segment
;
import
org
.
gjt
.
sp
.
jedit
.
Buffer
;
import
org
.
gjt
.
sp
.
util
.
Log
;
public
abstract
class
FoldHandler
{
public
String
getName
(
)
{
return
name
;
}
public
abstract
int
getFoldLevel
(
Buffer
buffer
,
int
lineIndex
,
Segment
seg
)
;
public
static
void
registerFoldHandler
(
FoldHandler
handler
)
{
if
(
getFoldHandler
(
handler
.
getName
(
)
)
!=
null
)
{
Log
.
log
(
Log
.
ERROR
,
FoldHandler
.
class
,
"Cannot register more than one fold handler with the same name"
)
;
return
;
}
foldHandlers
.
add
(
handler
)
;
}
public
static
FoldHandler
[
]
getFoldHandlers
(
)
{
FoldHandler
[
]
handlers
=
new
FoldHandler
[
foldHandlers
.
size
(
)
]
;
return
(
FoldHandler
[
]
)
foldHandlers
.
toArray
(
handlers
)
;
}
public
static
FoldHandler
getFoldHandler
(
String
name
)
{
FoldHandler
handler
;
Iterator
i
=
foldHandlers
.
iterator
(
)
;
while
(
i
.
hasNext
(
)
)
{
handler
=
(
FoldHandler
)
i
.
next
(
)
;
if
(
name
.
equals
(
handler
.
getName
(
)
)
)
return
handler
;
}
return
null
;
}
public
static
String
[
]
getFoldModes
(
)
{
FoldHandler
[
]
handlers
=
getFoldHandlers
(
)
;
String
[
]
foldModes
=
new
String
[
handlers
.
length
]
;
for
(
int
i
=
0
;
i
<
foldModes
.
length
;
i
++
)
{
foldModes
[
i
]
=
handlers
[
i
]
.
getName
(
)
;
}
return
foldModes
;
}
protected
FoldHandler
(
String
name
)
{
this
.
name
=
name
;
}
private
String
name
;
private
static
ArrayList
foldHandlers
;
static
{
foldHandlers
=
new
ArrayList
(
)
;
registerFoldHandler
(
new
DummyFoldHandler
(
)
)
;
registerFoldHandler
(
new
IndentFoldHandler
(
)
)
;
registerFoldHandler
(
new
ExplicitFoldHandler
(
)
)
;
}
}
