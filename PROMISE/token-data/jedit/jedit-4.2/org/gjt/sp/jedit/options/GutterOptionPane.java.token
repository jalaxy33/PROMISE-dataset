package
org
.
gjt
.
sp
.
jedit
.
options
;
import
javax
.
swing
.
*
;
import
java
.
awt
.
*
;
import
org
.
gjt
.
sp
.
jedit
.
gui
.
*
;
import
org
.
gjt
.
sp
.
jedit
.
*
;
public
class
GutterOptionPane
extends
AbstractOptionPane
{
public
GutterOptionPane
(
)
{
super
(
"gutter"
)
;
}
public
void
_init
(
)
{
lineNumbersEnabled
=
new
JCheckBox
(
jEdit
.
getProperty
(
"options.gutter.lineNumbers"
)
)
;
lineNumbersEnabled
.
setSelected
(
jEdit
.
getBooleanProperty
(
"view.gutter.lineNumbers"
)
)
;
addComponent
(
lineNumbersEnabled
)
;
gutterFont
=
new
FontSelector
(
jEdit
.
getFontProperty
(
"view.gutter.font"
,
new
Font
(
"Monospaced"
,
Font
.
PLAIN
,
10
)
)
)
;
addComponent
(
jEdit
.
getProperty
(
"options.gutter.font"
)
,
gutterFont
)
;
addComponent
(
jEdit
.
getProperty
(
"options.gutter.foreground"
)
,
gutterForeground
=
new
ColorWellButton
(
jEdit
.
getColorProperty
(
"view.gutter.fgColor"
)
)
,
GridBagConstraints
.
VERTICAL
)
;
addComponent
(
jEdit
.
getProperty
(
"options.gutter.background"
)
,
gutterBackground
=
new
ColorWellButton
(
jEdit
.
getColorProperty
(
"view.gutter.bgColor"
)
)
,
GridBagConstraints
.
VERTICAL
)
;
gutterCurrentLineHighlightEnabled
=
new
JCheckBox
(
jEdit
.
getProperty
(
"options.gutter.currentLineHighlight"
)
)
;
gutterCurrentLineHighlightEnabled
.
setSelected
(
jEdit
.
getBooleanProperty
(
"view.gutter.highlightCurrentLine"
)
)
;
addComponent
(
gutterCurrentLineHighlightEnabled
,
gutterCurrentLineHighlight
=
new
ColorWellButton
(
jEdit
.
getColorProperty
(
"view.gutter.currentLineColor"
)
)
,
GridBagConstraints
.
VERTICAL
)
;
gutterHighlightInterval
=
new
JTextField
(
jEdit
.
getProperty
(
"view.gutter.highlightInterval"
)
,
3
)
;
Box
gutterHighlightBox
=
new
Box
(
BoxLayout
.
X_AXIS
)
;
gutterHighlightBox
.
add
(
new
JLabel
(
jEdit
.
getProperty
(
"options.gutter.interval-1"
)
)
)
;
gutterHighlightBox
.
add
(
Box
.
createHorizontalStrut
(
3
)
)
;
gutterHighlightBox
.
add
(
gutterHighlightInterval
)
;
gutterHighlightBox
.
add
(
Box
.
createHorizontalStrut
(
3
)
)
;
gutterHighlightBox
.
add
(
new
JLabel
(
jEdit
.
getProperty
(
"options.gutter.interval-2"
)
)
)
;
gutterHighlightBox
.
add
(
Box
.
createHorizontalStrut
(
12
)
)
;
addComponent
(
gutterHighlightBox
,
gutterHighlightColor
=
new
ColorWellButton
(
jEdit
.
getColorProperty
(
"view.gutter.highlightColor"
)
)
,
GridBagConstraints
.
VERTICAL
)
;
gutterStructureHighlightEnabled
=
new
JCheckBox
(
jEdit
.
getProperty
(
"options.gutter.structureHighlight"
)
)
;
gutterStructureHighlightEnabled
.
setSelected
(
jEdit
.
getBooleanProperty
(
"view.gutter.structureHighlight"
)
)
;
addComponent
(
gutterStructureHighlightEnabled
,
gutterStructureHighlight
=
new
ColorWellButton
(
jEdit
.
getColorProperty
(
"view.gutter.structureHighlightColor"
)
)
,
GridBagConstraints
.
VERTICAL
)
;
gutterMarkerHighlightEnabled
=
new
JCheckBox
(
jEdit
.
getProperty
(
"options.gutter.markerHighlight"
)
)
;
gutterMarkerHighlightEnabled
.
setSelected
(
jEdit
.
getBooleanProperty
(
"view.gutter.markerHighlight"
)
)
;
addComponent
(
gutterMarkerHighlightEnabled
,
gutterMarkerHighlight
=
new
ColorWellButton
(
jEdit
.
getColorProperty
(
"view.gutter.markerColor"
)
)
,
GridBagConstraints
.
VERTICAL
)
;
addComponent
(
jEdit
.
getProperty
(
"options.gutter.foldColor"
)
,
gutterFoldMarkers
=
new
ColorWellButton
(
jEdit
.
getColorProperty
(
"view.gutter.foldColor"
)
)
,
GridBagConstraints
.
VERTICAL
)
;
addComponent
(
jEdit
.
getProperty
(
"options.gutter.focusBorderColor"
)
,
gutterFocusBorder
=
new
ColorWellButton
(
jEdit
.
getColorProperty
(
"view.gutter.focusBorderColor"
)
)
,
GridBagConstraints
.
VERTICAL
)
;
addComponent
(
jEdit
.
getProperty
(
"options.gutter.noFocusBorderColor"
)
,
gutterNoFocusBorder
=
new
ColorWellButton
(
jEdit
.
getColorProperty
(
"view.gutter.noFocusBorderColor"
)
)
,
GridBagConstraints
.
VERTICAL
)
;
}
public
void
_save
(
)
{
jEdit
.
setBooleanProperty
(
"view.gutter.lineNumbers"
,
lineNumbersEnabled
.
isSelected
(
)
)
;
jEdit
.
setFontProperty
(
"view.gutter.font"
,
gutterFont
.
getFont
(
)
)
;
jEdit
.
setColorProperty
(
"view.gutter.fgColor"
,
gutterForeground
.
getSelectedColor
(
)
)
;
jEdit
.
setColorProperty
(
"view.gutter.bgColor"
,
gutterBackground
.
getSelectedColor
(
)
)
;
jEdit
.
setBooleanProperty
(
"view.gutter.highlightCurrentLine"
,
gutterCurrentLineHighlightEnabled
.
isSelected
(
)
)
;
jEdit
.
setColorProperty
(
"view.gutter.currentLineColor"
,
gutterCurrentLineHighlight
.
getSelectedColor
(
)
)
;
jEdit
.
setProperty
(
"view.gutter.highlightInterval"
,
gutterHighlightInterval
.
getText
(
)
)
;
jEdit
.
setColorProperty
(
"view.gutter.highlightColor"
,
gutterHighlightColor
.
getSelectedColor
(
)
)
;
jEdit
.
setBooleanProperty
(
"view.gutter.structureHighlight"
,
gutterStructureHighlightEnabled
.
isSelected
(
)
)
;
jEdit
.
setColorProperty
(
"view.gutter.structureHighlightColor"
,
gutterStructureHighlight
.
getSelectedColor
(
)
)
;
jEdit
.
setBooleanProperty
(
"view.gutter.markerHighlight"
,
gutterMarkerHighlightEnabled
.
isSelected
(
)
)
;
jEdit
.
setColorProperty
(
"view.gutter.markerColor"
,
gutterMarkerHighlight
.
getSelectedColor
(
)
)
;
jEdit
.
setColorProperty
(
"view.gutter.foldColor"
,
gutterFoldMarkers
.
getSelectedColor
(
)
)
;
jEdit
.
setColorProperty
(
"view.gutter.focusBorderColor"
,
gutterFocusBorder
.
getSelectedColor
(
)
)
;
jEdit
.
setColorProperty
(
"view.gutter.noFocusBorderColor"
,
gutterNoFocusBorder
.
getSelectedColor
(
)
)
;
}
private
FontSelector
gutterFont
;
private
ColorWellButton
gutterForeground
;
private
ColorWellButton
gutterBackground
;
private
JTextField
gutterHighlightInterval
;
private
ColorWellButton
gutterHighlightColor
;
private
JCheckBox
lineNumbersEnabled
;
private
JCheckBox
gutterCurrentLineHighlightEnabled
;
private
ColorWellButton
gutterCurrentLineHighlight
;
private
JCheckBox
gutterStructureHighlightEnabled
;
private
ColorWellButton
gutterStructureHighlight
;
private
JCheckBox
gutterMarkerHighlightEnabled
;
private
ColorWellButton
gutterMarkerHighlight
;
private
ColorWellButton
gutterFoldMarkers
;
private
ColorWellButton
gutterFocusBorder
;
private
ColorWellButton
gutterNoFocusBorder
;
}
