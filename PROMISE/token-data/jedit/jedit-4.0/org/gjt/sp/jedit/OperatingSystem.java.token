package
org
.
gjt
.
sp
.
jedit
;
import
java
.
io
.
File
;
import
org
.
gjt
.
sp
.
util
.
Log
;
public
class
OperatingSystem
{
public
static
final
boolean
isDOSDerived
(
)
{
return
isWindows
(
)
||
isOS2
(
)
;
}
public
static
final
boolean
isWindows
(
)
{
return
os
==
WINDOWS_9x
||
os
==
WINDOWS_NT
;
}
public
static
final
boolean
isWindows9x
(
)
{
return
os
==
WINDOWS_9x
;
}
public
static
final
boolean
isWindowsNT
(
)
{
return
os
==
WINDOWS_NT
;
}
public
static
final
boolean
isOS2
(
)
{
return
os
==
OS2
;
}
public
static
final
boolean
isUnix
(
)
{
return
os
==
UNIX
||
os
==
MAC_OS_X
;
}
public
static
final
boolean
isMacOS
(
)
{
return
os
==
MAC_OS_X
;
}
public
static
final
boolean
hasJava14
(
)
{
return
java14
;
}
private
static
final
int
UNIX
=
0x31337
;
private
static
final
int
WINDOWS_9x
=
0x640
;
private
static
final
int
WINDOWS_NT
=
0x666
;
private
static
final
int
OS2
=
0xDEAD
;
private
static
final
int
MAC_OS_X
=
0xABC
;
private
static
final
int
UNKNOWN
=
0xBAD
;
private
static
int
os
;
private
static
boolean
java14
;
static
{
String
osName
=
System
.
getProperty
(
"os.name"
)
;
if
(
osName
.
indexOf
(
"Windows 9"
)
!=
-
1
||
osName
.
indexOf
(
"Windows ME"
)
!=
-
1
)
{
os
=
WINDOWS_9x
;
}
else
if
(
osName
.
indexOf
(
"Windows"
)
!=
-
1
)
{
os
=
WINDOWS_NT
;
}
else
if
(
osName
.
indexOf
(
"OS/2"
)
!=
-
1
)
{
os
=
OS2
;
}
else
if
(
File
.
separatorChar
==
'/'
&&
new
File
(
"/dev"
)
.
isDirectory
(
)
)
{
if
(
osName
.
indexOf
(
"Mac OS X"
)
!=
-
1
)
os
=
MAC_OS_X
;
else
os
=
UNIX
;
}
else
{
os
=
UNKNOWN
;
Log
.
log
(
Log
.
WARNING
,
OperatingSystem
.
class
,
"Unknown operating system: "
+
osName
)
;
}
if
(
System
.
getProperty
(
"java.version"
)
.
compareTo
(
"1.4"
)
>=
0
)
java14
=
true
;
}
}
