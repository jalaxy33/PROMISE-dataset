package
org
.
gjt
.
sp
.
jedit
.
gui
;
import
java
.
awt
.
BorderLayout
;
import
java
.
awt
.
Component
;
import
java
.
awt
.
event
.
ActionEvent
;
import
java
.
awt
.
event
.
ActionListener
;
import
javax
.
swing
.
*
;
import
javax
.
swing
.
event
.
DocumentEvent
;
import
javax
.
swing
.
event
.
DocumentListener
;
import
org
.
gjt
.
sp
.
jedit
.
*
;
import
org
.
gjt
.
sp
.
util
.
Log
;
public
class
LogViewer
extends
JPanel
{
public
LogViewer
(
)
{
super
(
new
BorderLayout
(
)
)
;
Box
captionBox
=
Box
.
createHorizontalBox
(
)
;
String
settingsDirectory
=
jEdit
.
getSettingsDirectory
(
)
;
if
(
settingsDirectory
!=
null
)
{
String
[
]
args
=
{
MiscUtilities
.
constructPath
(
settingsDirectory
,
"activity.log"
)
}
;
JLabel
label
=
new
JLabel
(
jEdit
.
getProperty
(
"log-viewer.caption"
,
args
)
)
;
captionBox
.
add
(
label
)
;
}
captionBox
.
add
(
Box
.
createHorizontalGlue
(
)
)
;
tailIsOn
=
jEdit
.
getBooleanProperty
(
"log-viewer.tail"
,
false
)
;
tail
=
new
JCheckBox
(
jEdit
.
getProperty
(
"log-viewer.tail.label"
)
,
tailIsOn
)
;
tail
.
addActionListener
(
new
ActionHandler
(
)
)
;
captionBox
.
add
(
tail
)
;
textArea
=
new
JTextArea
(
24
,
80
)
;
textArea
.
setDocument
(
Log
.
getLogDocument
(
)
)
;
textArea
.
getDocument
(
)
.
addDocumentListener
(
new
DocumentHandler
(
)
)
;
add
(
BorderLayout
.
NORTH
,
captionBox
)
;
add
(
BorderLayout
.
CENTER
,
new
JScrollPane
(
textArea
)
)
;
}
private
JTextArea
textArea
;
private
JCheckBox
tail
;
private
boolean
tailIsOn
;
class
ActionHandler
implements
ActionListener
{
public
void
actionPerformed
(
ActionEvent
e
)
{
tailIsOn
=
!
tailIsOn
;
jEdit
.
setBooleanProperty
(
"log-viewer.tail"
,
tailIsOn
)
;
if
(
tailIsOn
)
textArea
.
setCaretPosition
(
textArea
.
getDocument
(
)
.
getLength
(
)
)
;
}
}
class
DocumentHandler
implements
DocumentListener
{
public
void
insertUpdate
(
DocumentEvent
e
)
{
if
(
tailIsOn
)
textArea
.
setCaretPosition
(
textArea
.
getDocument
(
)
.
getLength
(
)
)
;
}
public
void
changedUpdate
(
DocumentEvent
e
)
{
}
public
void
removeUpdate
(
DocumentEvent
e
)
{
}
}
}
