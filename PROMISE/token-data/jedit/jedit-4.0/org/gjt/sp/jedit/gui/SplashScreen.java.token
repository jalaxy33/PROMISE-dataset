package
org
.
gjt
.
sp
.
jedit
.
gui
;
import
java
.
awt
.
*
;
import
java
.
net
.
URL
;
import
org
.
gjt
.
sp
.
jedit
.
jEdit
;
import
org
.
gjt
.
sp
.
util
.
Log
;
public
class
SplashScreen
extends
Canvas
{
public
SplashScreen
(
)
{
setCursor
(
Cursor
.
getPredefinedCursor
(
Cursor
.
WAIT_CURSOR
)
)
;
image
=
getToolkit
(
)
.
getImage
(
getClass
(
)
.
getResource
(
"/org/gjt/sp/jedit/icons/splash.gif"
)
)
;
MediaTracker
tracker
=
new
MediaTracker
(
this
)
;
tracker
.
addImage
(
image
,
0
)
;
try
{
tracker
.
waitForAll
(
)
;
}
catch
(
Exception
e
)
{
Log
.
log
(
Log
.
ERROR
,
this
,
e
)
;
}
win
=
new
Window
(
new
Frame
(
)
)
;
Dimension
screen
=
getToolkit
(
)
.
getScreenSize
(
)
;
Dimension
size
=
new
Dimension
(
image
.
getWidth
(
this
)
+
2
,
image
.
getHeight
(
this
)
+
2
)
;
win
.
setSize
(
size
)
;
win
.
setLayout
(
new
BorderLayout
(
)
)
;
win
.
add
(
BorderLayout
.
CENTER
,
this
)
;
win
.
setLocation
(
(
screen
.
width
-
size
.
width
)
/
2
,
(
screen
.
height
-
size
.
height
)
/
2
)
;
win
.
validate
(
)
;
win
.
show
(
)
;
}
public
void
dispose
(
)
{
win
.
dispose
(
)
;
}
public
synchronized
void
advance
(
)
{
progress
++
;
repaint
(
)
;
try
{
wait
(
)
;
}
catch
(
InterruptedException
ie
)
{
Log
.
log
(
Log
.
ERROR
,
this
,
ie
)
;
}
}
public
void
update
(
Graphics
g
)
{
paint
(
g
)
;
}
public
synchronized
void
paint
(
Graphics
g
)
{
Dimension
size
=
getSize
(
)
;
if
(
offscreenImg
==
null
)
{
offscreenImg
=
createImage
(
size
.
width
,
size
.
height
)
;
offscreenGfx
=
offscreenImg
.
getGraphics
(
)
;
}
offscreenGfx
.
setColor
(
Color
.
black
)
;
offscreenGfx
.
drawRect
(
0
,
0
,
size
.
width
-
1
,
size
.
height
-
1
)
;
offscreenGfx
.
drawImage
(
image
,
1
,
1
,
this
)
;
offscreenGfx
.
setColor
(
new
Color
(
206
,
206
,
229
)
)
;
offscreenGfx
.
fillRect
(
9
,
199
,
(
384
*
progress
)
/
7
,
14
)
;
g
.
drawImage
(
offscreenImg
,
0
,
0
,
this
)
;
notify
(
)
;
}
private
Window
win
;
private
Image
image
;
private
Image
offscreenImg
;
private
Graphics
offscreenGfx
;
private
int
progress
;
}
