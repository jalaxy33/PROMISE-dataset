package
org
.
gjt
.
sp
.
jedit
.
gui
;
import
javax
.
swing
.
border
.
*
;
import
javax
.
swing
.
*
;
import
java
.
awt
.
*
;
import
java
.
net
.
URL
;
import
java
.
util
.
Random
;
import
org
.
gjt
.
sp
.
jedit
.
jEdit
;
import
org
.
gjt
.
sp
.
util
.
Log
;
public
class
SplashScreen
extends
JWindow
{
public
SplashScreen
(
)
{
setCursor
(
Cursor
.
getPredefinedCursor
(
Cursor
.
WAIT_CURSOR
)
)
;
JPanel
splash
=
new
JPanel
(
new
BorderLayout
(
12
,
12
)
)
;
splash
.
setBorder
(
new
CompoundBorder
(
new
MatteBorder
(
1
,
1
,
1
,
1
,
Color
.
black
)
,
new
EmptyBorder
(
12
,
12
,
12
,
12
)
)
)
;
splash
.
setBackground
(
Color
.
white
)
;
URL
url
=
getClass
(
)
.
getResource
(
"/org/gjt/sp/jedit/jedit_logo.gif"
)
;
if
(
url
!=
null
)
{
JLabel
label
=
new
JLabel
(
new
ImageIcon
(
url
)
)
;
splash
.
add
(
label
,
BorderLayout
.
CENTER
)
;
}
progress
=
new
JProgressBar
(
0
,
6
)
;
progress
.
setStringPainted
(
true
)
;
progress
.
setString
(
"jEdit version: "
+
jEdit
.
getVersion
(
)
)
;
splash
.
add
(
BorderLayout
.
SOUTH
,
progress
)
;
setContentPane
(
splash
)
;
Dimension
screen
=
getToolkit
(
)
.
getScreenSize
(
)
;
pack
(
)
;
setLocation
(
(
screen
.
width
-
getSize
(
)
.
width
)
/
2
,
(
screen
.
height
-
getSize
(
)
.
height
)
/
2
)
;
show
(
)
;
}
public
void
advance
(
)
{
try
{
SwingUtilities
.
invokeAndWait
(
new
Runnable
(
)
{
public
void
run
(
)
{
progress
.
setValue
(
progress
.
getValue
(
)
+
1
)
;
}
}
)
;
Thread
.
yield
(
)
;
}
catch
(
Exception
e
)
{
Log
.
log
(
Log
.
ERROR
,
this
,
e
)
;
}
}
private
JProgressBar
progress
;
}
