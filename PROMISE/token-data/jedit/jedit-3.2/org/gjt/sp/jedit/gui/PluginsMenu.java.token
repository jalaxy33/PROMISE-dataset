package
org
.
gjt
.
sp
.
jedit
.
gui
;
import
javax
.
swing
.
*
;
import
java
.
awt
.
event
.
*
;
import
java
.
util
.
Vector
;
import
org
.
gjt
.
sp
.
jedit
.
*
;
import
org
.
gjt
.
sp
.
util
.
Log
;
public
class
PluginsMenu
extends
EnhancedMenu
{
public
PluginsMenu
(
)
{
super
(
"plugins"
)
;
Vector
pluginMenuItems
=
new
Vector
(
)
;
EditPlugin
[
]
pluginArray
=
jEdit
.
getPlugins
(
)
;
for
(
int
i
=
0
;
i
<
pluginArray
.
length
;
i
++
)
{
try
{
EditPlugin
plugin
=
pluginArray
[
i
]
;
int
count
=
pluginMenuItems
.
size
(
)
;
plugin
.
createMenuItems
(
null
,
pluginMenuItems
,
pluginMenuItems
)
;
if
(
count
!=
pluginMenuItems
.
size
(
)
)
{
Log
.
log
(
Log
.
WARNING
,
this
,
plugin
.
getClassName
(
)
+
" is using the obsolete"
+
" createMenuItems() API."
)
;
}
plugin
.
createMenuItems
(
pluginMenuItems
)
;
}
catch
(
Throwable
t
)
{
Log
.
log
(
Log
.
ERROR
,
this
,
"Error creating menu items"
+
" for plugin"
)
;
Log
.
log
(
Log
.
ERROR
,
this
,
t
)
;
}
}
if
(
pluginMenuItems
.
isEmpty
(
)
)
{
add
(
GUIUtilities
.
loadMenuItem
(
"no-plugins"
)
)
;
return
;
}
MiscUtilities
.
quicksort
(
pluginMenuItems
,
new
MiscUtilities
.
MenuItemCompare
(
)
)
;
JMenu
menu
=
this
;
for
(
int
i
=
0
;
i
<
pluginMenuItems
.
size
(
)
;
i
++
)
{
if
(
menu
.
getItemCount
(
)
>=
20
)
{
menu
.
addSeparator
(
)
;
JMenu
newMenu
=
new
JMenu
(
jEdit
.
getProperty
(
"common.more"
)
)
;
menu
.
add
(
newMenu
)
;
menu
=
newMenu
;
}
menu
.
add
(
(
JMenuItem
)
pluginMenuItems
.
elementAt
(
i
)
)
;
}
}
}
