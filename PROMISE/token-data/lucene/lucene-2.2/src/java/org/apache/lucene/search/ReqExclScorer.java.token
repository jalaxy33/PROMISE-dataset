package
org
.
apache
.
lucene
.
search
;
import
java
.
io
.
IOException
;
public
class
ReqExclScorer
extends
Scorer
{
private
Scorer
reqScorer
,
exclScorer
;
public
ReqExclScorer
(
Scorer
reqScorer
,
Scorer
exclScorer
)
{
super
(
null
)
;
this
.
reqScorer
=
reqScorer
;
this
.
exclScorer
=
exclScorer
;
}
private
boolean
firstTime
=
true
;
public
boolean
next
(
)
throws
IOException
{
if
(
firstTime
)
{
if
(
!
exclScorer
.
next
(
)
)
{
exclScorer
=
null
;
}
firstTime
=
false
;
}
if
(
reqScorer
==
null
)
{
return
false
;
}
if
(
!
reqScorer
.
next
(
)
)
{
reqScorer
=
null
;
return
false
;
}
if
(
exclScorer
==
null
)
{
return
true
;
}
return
toNonExcluded
(
)
;
}
private
boolean
toNonExcluded
(
)
throws
IOException
{
int
exclDoc
=
exclScorer
.
doc
(
)
;
do
{
int
reqDoc
=
reqScorer
.
doc
(
)
;
if
(
reqDoc
<
exclDoc
)
{
return
true
;
}
else
if
(
reqDoc
>
exclDoc
)
{
if
(
!
exclScorer
.
skipTo
(
reqDoc
)
)
{
exclScorer
=
null
;
return
true
;
}
exclDoc
=
exclScorer
.
doc
(
)
;
if
(
exclDoc
>
reqDoc
)
{
return
true
;
}
}
}
while
(
reqScorer
.
next
(
)
)
;
reqScorer
=
null
;
return
false
;
}
public
int
doc
(
)
{
return
reqScorer
.
doc
(
)
;
}
public
float
score
(
)
throws
IOException
{
return
reqScorer
.
score
(
)
;
}
public
boolean
skipTo
(
int
target
)
throws
IOException
{
if
(
firstTime
)
{
firstTime
=
false
;
if
(
!
exclScorer
.
skipTo
(
target
)
)
{
exclScorer
=
null
;
}
}
if
(
reqScorer
==
null
)
{
return
false
;
}
if
(
exclScorer
==
null
)
{
return
reqScorer
.
skipTo
(
target
)
;
}
if
(
!
reqScorer
.
skipTo
(
target
)
)
{
reqScorer
=
null
;
return
false
;
}
return
toNonExcluded
(
)
;
}
public
Explanation
explain
(
int
doc
)
throws
IOException
{
Explanation
res
=
new
Explanation
(
)
;
if
(
exclScorer
.
skipTo
(
doc
)
&&
(
exclScorer
.
doc
(
)
==
doc
)
)
{
res
.
setDescription
(
"excluded"
)
;
}
else
{
res
.
setDescription
(
"not excluded"
)
;
res
.
addDetail
(
reqScorer
.
explain
(
doc
)
)
;
}
return
res
;
}
}
