package
org
.
apache
.
lucene
.
search
;
import
org
.
apache
.
lucene
.
index
.
IndexReader
;
import
java
.
util
.
BitSet
;
import
java
.
util
.
WeakHashMap
;
import
java
.
util
.
Map
;
import
java
.
io
.
IOException
;
public
class
CachingWrapperFilter
extends
Filter
{
protected
Filter
filter
;
protected
transient
Map
cache
;
public
CachingWrapperFilter
(
Filter
filter
)
{
this
.
filter
=
filter
;
}
public
BitSet
bits
(
IndexReader
reader
)
throws
IOException
{
if
(
cache
==
null
)
{
cache
=
new
WeakHashMap
(
)
;
}
synchronized
(
cache
)
{
BitSet
cached
=
(
BitSet
)
cache
.
get
(
reader
)
;
if
(
cached
!=
null
)
{
return
cached
;
}
}
final
BitSet
bits
=
filter
.
bits
(
reader
)
;
synchronized
(
cache
)
{
cache
.
put
(
reader
,
bits
)
;
}
return
bits
;
}
public
String
toString
(
)
{
return
"CachingWrapperFilter("
+
filter
+
")"
;
}
public
boolean
equals
(
Object
o
)
{
if
(
!
(
o
instanceof
CachingWrapperFilter
)
)
return
false
;
return
this
.
filter
.
equals
(
(
(
CachingWrapperFilter
)
o
)
.
filter
)
;
}
public
int
hashCode
(
)
{
return
filter
.
hashCode
(
)
^
0x1117BF25
;
}
}
