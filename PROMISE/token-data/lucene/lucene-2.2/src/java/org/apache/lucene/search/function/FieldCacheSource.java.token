package
org
.
apache
.
lucene
.
search
.
function
;
import
java
.
io
.
IOException
;
import
org
.
apache
.
lucene
.
index
.
IndexReader
;
import
org
.
apache
.
lucene
.
search
.
FieldCache
;
public
abstract
class
FieldCacheSource
extends
ValueSource
{
private
String
field
;
private
FieldCache
cache
=
FieldCache
.
DEFAULT
;
public
FieldCacheSource
(
String
field
)
{
this
.
field
=
field
;
}
public
final
DocValues
getValues
(
IndexReader
reader
)
throws
IOException
{
return
getCachedFieldValues
(
cache
,
field
,
reader
)
;
}
public
String
description
(
)
{
return
field
;
}
public
abstract
DocValues
getCachedFieldValues
(
FieldCache
cache
,
String
field
,
IndexReader
reader
)
throws
IOException
;
public
final
boolean
equals
(
Object
o
)
{
if
(
!
(
o
instanceof
FieldCacheSource
)
)
{
return
false
;
}
FieldCacheSource
other
=
(
FieldCacheSource
)
o
;
return
this
.
cache
==
other
.
cache
&&
this
.
field
.
equals
(
other
.
field
)
&&
cachedFieldSourceEquals
(
other
)
;
}
public
final
int
hashCode
(
)
{
return
cache
.
hashCode
(
)
+
field
.
hashCode
(
)
+
cachedFieldSourceHashCode
(
)
;
}
public
abstract
boolean
cachedFieldSourceEquals
(
FieldCacheSource
other
)
;
public
abstract
int
cachedFieldSourceHashCode
(
)
;
}
