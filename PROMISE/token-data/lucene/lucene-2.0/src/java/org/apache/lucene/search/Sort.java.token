package
org
.
apache
.
lucene
.
search
;
import
java
.
io
.
Serializable
;
public
class
Sort
implements
Serializable
{
public
static
final
Sort
RELEVANCE
=
new
Sort
(
)
;
public
static
final
Sort
INDEXORDER
=
new
Sort
(
SortField
.
FIELD_DOC
)
;
SortField
[
]
fields
;
public
Sort
(
)
{
this
(
new
SortField
[
]
{
SortField
.
FIELD_SCORE
,
SortField
.
FIELD_DOC
}
)
;
}
public
Sort
(
String
field
)
{
setSort
(
field
,
false
)
;
}
public
Sort
(
String
field
,
boolean
reverse
)
{
setSort
(
field
,
reverse
)
;
}
public
Sort
(
String
[
]
fields
)
{
setSort
(
fields
)
;
}
public
Sort
(
SortField
field
)
{
setSort
(
field
)
;
}
public
Sort
(
SortField
[
]
fields
)
{
setSort
(
fields
)
;
}
public
final
void
setSort
(
String
field
)
{
setSort
(
field
,
false
)
;
}
public
void
setSort
(
String
field
,
boolean
reverse
)
{
SortField
[
]
nfields
=
new
SortField
[
]
{
new
SortField
(
field
,
SortField
.
AUTO
,
reverse
)
,
SortField
.
FIELD_DOC
}
;
fields
=
nfields
;
}
public
void
setSort
(
String
[
]
fieldnames
)
{
final
int
n
=
fieldnames
.
length
;
SortField
[
]
nfields
=
new
SortField
[
n
]
;
for
(
int
i
=
0
;
i
<
n
;
++
i
)
{
nfields
[
i
]
=
new
SortField
(
fieldnames
[
i
]
,
SortField
.
AUTO
)
;
}
fields
=
nfields
;
}
public
void
setSort
(
SortField
field
)
{
this
.
fields
=
new
SortField
[
]
{
field
}
;
}
public
void
setSort
(
SortField
[
]
fields
)
{
this
.
fields
=
fields
;
}
public
SortField
[
]
getSort
(
)
{
return
fields
;
}
public
String
toString
(
)
{
StringBuffer
buffer
=
new
StringBuffer
(
)
;
for
(
int
i
=
0
;
i
<
fields
.
length
;
i
++
)
{
buffer
.
append
(
fields
[
i
]
.
toString
(
)
)
;
if
(
(
i
+
1
)
<
fields
.
length
)
buffer
.
append
(
','
)
;
}
return
buffer
.
toString
(
)
;
}
}
