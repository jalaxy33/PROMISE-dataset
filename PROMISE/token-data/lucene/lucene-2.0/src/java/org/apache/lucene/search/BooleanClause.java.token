package
org
.
apache
.
lucene
.
search
;
import
org
.
apache
.
lucene
.
util
.
Parameter
;
public
class
BooleanClause
implements
java
.
io
.
Serializable
{
public
static
final
class
Occur
extends
Parameter
implements
java
.
io
.
Serializable
{
private
Occur
(
String
name
)
{
super
(
name
)
;
}
public
String
toString
(
)
{
if
(
this
==
MUST
)
return
"+"
;
if
(
this
==
MUST_NOT
)
return
"-"
;
return
""
;
}
public
static
final
Occur
MUST
=
new
Occur
(
"MUST"
)
;
public
static
final
Occur
SHOULD
=
new
Occur
(
"SHOULD"
)
;
public
static
final
Occur
MUST_NOT
=
new
Occur
(
"MUST_NOT"
)
;
}
private
Query
query
;
private
Occur
occur
=
Occur
.
SHOULD
;
public
BooleanClause
(
Query
query
,
Occur
occur
)
{
this
.
query
=
query
;
this
.
occur
=
occur
;
}
public
Occur
getOccur
(
)
{
return
occur
;
}
public
void
setOccur
(
Occur
occur
)
{
this
.
occur
=
occur
;
}
public
Query
getQuery
(
)
{
return
query
;
}
public
void
setQuery
(
Query
query
)
{
this
.
query
=
query
;
}
public
boolean
isProhibited
(
)
{
return
Occur
.
MUST_NOT
.
equals
(
occur
)
;
}
public
boolean
isRequired
(
)
{
return
Occur
.
MUST
.
equals
(
occur
)
;
}
public
boolean
equals
(
Object
o
)
{
if
(
!
(
o
instanceof
BooleanClause
)
)
return
false
;
BooleanClause
other
=
(
BooleanClause
)
o
;
return
this
.
query
.
equals
(
other
.
query
)
&&
this
.
occur
.
equals
(
other
.
occur
)
;
}
public
int
hashCode
(
)
{
return
query
.
hashCode
(
)
^
(
Occur
.
MUST
.
equals
(
occur
)
?
1
:
0
)
^
(
Occur
.
MUST_NOT
.
equals
(
occur
)
?
2
:
0
)
;
}
public
String
toString
(
)
{
return
occur
.
toString
(
)
+
query
.
toString
(
)
;
}
}
