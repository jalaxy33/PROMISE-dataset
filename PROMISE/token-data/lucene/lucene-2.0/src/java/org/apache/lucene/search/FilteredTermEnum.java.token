package
org
.
apache
.
lucene
.
search
;
import
java
.
io
.
IOException
;
import
org
.
apache
.
lucene
.
index
.
Term
;
import
org
.
apache
.
lucene
.
index
.
TermEnum
;
public
abstract
class
FilteredTermEnum
extends
TermEnum
{
private
Term
currentTerm
=
null
;
private
TermEnum
actualEnum
=
null
;
public
FilteredTermEnum
(
)
{
}
protected
abstract
boolean
termCompare
(
Term
term
)
;
public
abstract
float
difference
(
)
;
protected
abstract
boolean
endEnum
(
)
;
protected
void
setEnum
(
TermEnum
actualEnum
)
throws
IOException
{
this
.
actualEnum
=
actualEnum
;
Term
term
=
actualEnum
.
term
(
)
;
if
(
term
!=
null
&&
termCompare
(
term
)
)
currentTerm
=
term
;
else
next
(
)
;
}
public
int
docFreq
(
)
{
if
(
actualEnum
==
null
)
return
-
1
;
return
actualEnum
.
docFreq
(
)
;
}
public
boolean
next
(
)
throws
IOException
{
if
(
actualEnum
==
null
)
return
false
;
currentTerm
=
null
;
while
(
currentTerm
==
null
)
{
if
(
endEnum
(
)
)
return
false
;
if
(
actualEnum
.
next
(
)
)
{
Term
term
=
actualEnum
.
term
(
)
;
if
(
termCompare
(
term
)
)
{
currentTerm
=
term
;
return
true
;
}
}
else
return
false
;
}
currentTerm
=
null
;
return
false
;
}
public
Term
term
(
)
{
return
currentTerm
;
}
public
void
close
(
)
throws
IOException
{
actualEnum
.
close
(
)
;
currentTerm
=
null
;
actualEnum
=
null
;
}
}
