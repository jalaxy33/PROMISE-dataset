package
org
.
apache
.
lucene
.
util
;
import
java
.
io
.
IOException
;
import
org
.
apache
.
lucene
.
store
.
Directory
;
import
org
.
apache
.
lucene
.
store
.
IndexInput
;
import
org
.
apache
.
lucene
.
store
.
IndexOutput
;
public
final
class
BitVector
{
private
byte
[
]
bits
;
private
int
size
;
private
int
count
=
-
1
;
public
BitVector
(
int
n
)
{
size
=
n
;
bits
=
new
byte
[
(
size
>
>
3
)
+
1
]
;
}
public
final
void
set
(
int
bit
)
{
bits
[
bit
>
>
3
]
|=
1
<<
(
bit
&
7
)
;
count
=
-
1
;
}
public
final
void
clear
(
int
bit
)
{
bits
[
bit
>
>
3
]
&=
~
(
1
<<
(
bit
&
7
)
)
;
count
=
-
1
;
}
public
final
boolean
get
(
int
bit
)
{
return
(
bits
[
bit
>
>
3
]
&
(
1
<<
(
bit
&
7
)
)
)
!=
0
;
}
public
final
int
size
(
)
{
return
size
;
}
public
final
int
count
(
)
{
if
(
count
==
-
1
)
{
int
c
=
0
;
int
end
=
bits
.
length
;
for
(
int
i
=
0
;
i
<
end
;
i
++
)
c
+=
BYTE_COUNTS
[
bits
[
i
]
&
0xFF
]
;
count
=
c
;
}
return
count
;
}
private
static
final
byte
[
]
BYTE_COUNTS
=
{
0
,
1
,
1
,
2
,
1
,
2
,
2
,
3
,
1
,
2
,
2
,
3
,
2
,
3
,
3
,
4
,
1
,
2
,
2
,
3
,
2
,
3
,
3
,
4
,
2
,
3
,
3
,
4
,
3
,
4
,
4
,
5
,
1
,
2
,
2
,
3
,
2
,
3
,
3
,
4
,
2
,
3
,
3
,
4
,
3
,
4
,
4
,
5
,
2
,
3
,
3
,
4
,
3
,
4
,
4
,
5
,
3
,
4
,
4
,
5
,
4
,
5
,
5
,
6
,
1
,
2
,
2
,
3
,
2
,
3
,
3
,
4
,
2
,
3
,
3
,
4
,
3
,
4
,
4
,
5
,
2
,
3
,
3
,
4
,
3
,
4
,
4
,
5
,
3
,
4
,
4
,
5
,
4
,
5
,
5
,
6
,
2
,
3
,
3
,
4
,
3
,
4
,
4
,
5
,
3
,
4
,
4
,
5
,
4
,
5
,
5
,
6
,
3
,
4
,
4
,
5
,
4
,
5
,
5
,
6
,
4
,
5
,
5
,
6
,
5
,
6
,
6
,
7
,
1
,
2
,
2
,
3
,
2
,
3
,
3
,
4
,
2
,
3
,
3
,
4
,
3
,
4
,
4
,
5
,
2
,
3
,
3
,
4
,
3
,
4
,
4
,
5
,
3
,
4
,
4
,
5
,
4
,
5
,
5
,
6
,
2
,
3
,
3
,
4
,
3
,
4
,
4
,
5
,
3
,
4
,
4
,
5
,
4
,
5
,
5
,
6
,
3
,
4
,
4
,
5
,
4
,
5
,
5
,
6
,
4
,
5
,
5
,
6
,
5
,
6
,
6
,
7
,
2
,
3
,
3
,
4
,
3
,
4
,
4
,
5
,
3
,
4
,
4
,
5
,
4
,
5
,
5
,
6
,
3
,
4
,
4
,
5
,
4
,
5
,
5
,
6
,
4
,
5
,
5
,
6
,
5
,
6
,
6
,
7
,
3
,
4
,
4
,
5
,
4
,
5
,
5
,
6
,
4
,
5
,
5
,
6
,
5
,
6
,
6
,
7
,
4
,
5
,
5
,
6
,
5
,
6
,
6
,
7
,
5
,
6
,
6
,
7
,
6
,
7
,
7
,
8
}
;
public
final
void
write
(
Directory
d
,
String
name
)
throws
IOException
{
IndexOutput
output
=
d
.
createOutput
(
name
)
;
try
{
output
.
writeInt
(
size
(
)
)
;
output
.
writeInt
(
count
(
)
)
;
output
.
writeBytes
(
bits
,
bits
.
length
)
;
}
finally
{
output
.
close
(
)
;
}
}
public
BitVector
(
Directory
d
,
String
name
)
throws
IOException
{
IndexInput
input
=
d
.
openInput
(
name
)
;
try
{
size
=
input
.
readInt
(
)
;
count
=
input
.
readInt
(
)
;
bits
=
new
byte
[
(
size
>
>
3
)
+
1
]
;
input
.
readBytes
(
bits
,
0
,
bits
.
length
)
;
}
finally
{
input
.
close
(
)
;
}
}
}
