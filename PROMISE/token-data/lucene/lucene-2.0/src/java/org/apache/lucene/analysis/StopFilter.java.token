package
org
.
apache
.
lucene
.
analysis
;
import
java
.
io
.
IOException
;
import
java
.
util
.
HashSet
;
import
java
.
util
.
Set
;
public
final
class
StopFilter
extends
TokenFilter
{
private
final
Set
stopWords
;
private
final
boolean
ignoreCase
;
public
StopFilter
(
TokenStream
input
,
String
[
]
stopWords
)
{
this
(
input
,
stopWords
,
false
)
;
}
public
StopFilter
(
TokenStream
in
,
String
[
]
stopWords
,
boolean
ignoreCase
)
{
super
(
in
)
;
this
.
ignoreCase
=
ignoreCase
;
this
.
stopWords
=
makeStopSet
(
stopWords
,
ignoreCase
)
;
}
public
StopFilter
(
TokenStream
input
,
Set
stopWords
,
boolean
ignoreCase
)
{
super
(
input
)
;
this
.
ignoreCase
=
ignoreCase
;
this
.
stopWords
=
stopWords
;
}
public
StopFilter
(
TokenStream
in
,
Set
stopWords
)
{
this
(
in
,
stopWords
,
false
)
;
}
public
static
final
Set
makeStopSet
(
String
[
]
stopWords
)
{
return
makeStopSet
(
stopWords
,
false
)
;
}
public
static
final
Set
makeStopSet
(
String
[
]
stopWords
,
boolean
ignoreCase
)
{
HashSet
stopTable
=
new
HashSet
(
stopWords
.
length
)
;
for
(
int
i
=
0
;
i
<
stopWords
.
length
;
i
++
)
stopTable
.
add
(
ignoreCase
?
stopWords
[
i
]
.
toLowerCase
(
)
:
stopWords
[
i
]
)
;
return
stopTable
;
}
public
final
Token
next
(
)
throws
IOException
{
for
(
Token
token
=
input
.
next
(
)
;
token
!=
null
;
token
=
input
.
next
(
)
)
{
String
termText
=
ignoreCase
?
token
.
termText
.
toLowerCase
(
)
:
token
.
termText
;
if
(
!
stopWords
.
contains
(
termText
)
)
return
token
;
}
return
null
;
}
}
