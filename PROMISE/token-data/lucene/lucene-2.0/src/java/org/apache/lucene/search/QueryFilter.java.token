package
org
.
apache
.
lucene
.
search
;
import
java
.
io
.
IOException
;
import
java
.
util
.
WeakHashMap
;
import
java
.
util
.
BitSet
;
import
org
.
apache
.
lucene
.
index
.
IndexReader
;
public
class
QueryFilter
extends
Filter
{
private
Query
query
;
private
transient
WeakHashMap
cache
=
null
;
public
QueryFilter
(
Query
query
)
{
this
.
query
=
query
;
}
public
BitSet
bits
(
IndexReader
reader
)
throws
IOException
{
if
(
cache
==
null
)
{
cache
=
new
WeakHashMap
(
)
;
}
synchronized
(
cache
)
{
BitSet
cached
=
(
BitSet
)
cache
.
get
(
reader
)
;
if
(
cached
!=
null
)
{
return
cached
;
}
}
final
BitSet
bits
=
new
BitSet
(
reader
.
maxDoc
(
)
)
;
new
IndexSearcher
(
reader
)
.
search
(
query
,
new
HitCollector
(
)
{
public
final
void
collect
(
int
doc
,
float
score
)
{
bits
.
set
(
doc
)
;
}
}
)
;
synchronized
(
cache
)
{
cache
.
put
(
reader
,
bits
)
;
}
return
bits
;
}
public
String
toString
(
)
{
return
"QueryFilter("
+
query
+
")"
;
}
public
boolean
equals
(
Object
o
)
{
if
(
!
(
o
instanceof
QueryFilter
)
)
return
false
;
return
this
.
query
.
equals
(
(
(
QueryFilter
)
o
)
.
query
)
;
}
public
int
hashCode
(
)
{
return
query
.
hashCode
(
)
^
0x923F64B9
;
}
}
