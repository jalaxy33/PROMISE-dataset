package
org
.
apache
.
lucene
.
index
;
public
final
class
Term
implements
Comparable
,
java
.
io
.
Serializable
{
String
field
;
String
text
;
public
Term
(
String
fld
,
String
txt
)
{
this
(
fld
,
txt
,
true
)
;
}
public
Term
(
String
fld
)
{
this
(
fld
,
""
,
true
)
;
}
Term
(
String
fld
,
String
txt
,
boolean
intern
)
{
field
=
intern
?
fld
.
intern
(
)
:
fld
;
text
=
txt
;
}
public
final
String
field
(
)
{
return
field
;
}
public
final
String
text
(
)
{
return
text
;
}
public
Term
createTerm
(
String
text
)
{
return
new
Term
(
field
,
text
,
false
)
;
}
public
final
boolean
equals
(
Object
o
)
{
if
(
o
==
this
)
return
true
;
if
(
o
==
null
)
return
false
;
if
(
!
(
o
instanceof
Term
)
)
return
false
;
Term
other
=
(
Term
)
o
;
return
field
==
other
.
field
&&
text
.
equals
(
other
.
text
)
;
}
public
final
int
hashCode
(
)
{
return
field
.
hashCode
(
)
+
text
.
hashCode
(
)
;
}
public
int
compareTo
(
Object
other
)
{
return
compareTo
(
(
Term
)
other
)
;
}
public
final
int
compareTo
(
Term
other
)
{
if
(
field
==
other
.
field
)
return
text
.
compareTo
(
other
.
text
)
;
else
return
field
.
compareTo
(
other
.
field
)
;
}
final
void
set
(
String
fld
,
String
txt
)
{
field
=
fld
;
text
=
txt
;
}
public
final
String
toString
(
)
{
return
field
+
":"
+
text
;
}
private
void
readObject
(
java
.
io
.
ObjectInputStream
in
)
throws
java
.
io
.
IOException
,
ClassNotFoundException
{
in
.
defaultReadObject
(
)
;
field
=
field
.
intern
(
)
;
}
}
