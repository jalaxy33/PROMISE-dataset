package
org
.
apache
.
lucene
.
index
;
import
java
.
util
.
ArrayList
;
import
java
.
util
.
HashMap
;
import
java
.
util
.
List
;
import
java
.
util
.
Map
;
public
class
PositionBasedTermVectorMapper
extends
TermVectorMapper
{
private
Map
fieldToTerms
;
private
String
currentField
;
private
Map
currentPositions
;
private
boolean
storeOffsets
;
public
PositionBasedTermVectorMapper
(
)
{
super
(
false
,
false
)
;
}
public
PositionBasedTermVectorMapper
(
boolean
ignoringOffsets
)
{
super
(
false
,
ignoringOffsets
)
;
}
public
boolean
isIgnoringPositions
(
)
{
return
false
;
}
public
void
map
(
String
term
,
int
frequency
,
TermVectorOffsetInfo
[
]
offsets
,
int
[
]
positions
)
{
for
(
int
i
=
0
;
i
<
positions
.
length
;
i
++
)
{
Integer
posVal
=
new
Integer
(
positions
[
i
]
)
;
TVPositionInfo
pos
=
(
TVPositionInfo
)
currentPositions
.
get
(
posVal
)
;
if
(
pos
==
null
)
{
pos
=
new
TVPositionInfo
(
positions
[
i
]
,
storeOffsets
)
;
currentPositions
.
put
(
posVal
,
pos
)
;
}
pos
.
addTerm
(
term
,
offsets
!=
null
?
offsets
[
i
]
:
null
)
;
}
}
public
void
setExpectations
(
String
field
,
int
numTerms
,
boolean
storeOffsets
,
boolean
storePositions
)
{
if
(
storePositions
==
false
)
{
throw
new
RuntimeException
(
"You must store positions in order to use this Mapper"
)
;
}
if
(
storeOffsets
==
true
)
{
}
fieldToTerms
=
new
HashMap
(
numTerms
)
;
this
.
storeOffsets
=
storeOffsets
;
currentField
=
field
;
currentPositions
=
new
HashMap
(
)
;
fieldToTerms
.
put
(
currentField
,
currentPositions
)
;
}
public
Map
getFieldToTerms
(
)
{
return
fieldToTerms
;
}
public
static
class
TVPositionInfo
{
private
int
position
;
private
List
terms
;
private
List
offsets
;
public
TVPositionInfo
(
int
position
,
boolean
storeOffsets
)
{
this
.
position
=
position
;
terms
=
new
ArrayList
(
)
;
if
(
storeOffsets
)
{
offsets
=
new
ArrayList
(
)
;
}
}
void
addTerm
(
String
term
,
TermVectorOffsetInfo
info
)
{
terms
.
add
(
term
)
;
if
(
offsets
!=
null
)
{
offsets
.
add
(
info
)
;
}
}
public
int
getPosition
(
)
{
return
position
;
}
public
List
getTerms
(
)
{
return
terms
;
}
public
List
getOffsets
(
)
{
return
offsets
;
}
}
}
