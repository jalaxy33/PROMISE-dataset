package
org
.
apache
.
lucene
.
analysis
;
import
java
.
io
.
BufferedReader
;
import
java
.
io
.
File
;
import
java
.
io
.
FileReader
;
import
java
.
io
.
IOException
;
import
java
.
io
.
Reader
;
import
java
.
util
.
HashMap
;
import
java
.
util
.
HashSet
;
public
class
WordlistLoader
{
public
static
HashSet
getWordSet
(
File
wordfile
)
throws
IOException
{
HashSet
result
=
new
HashSet
(
)
;
FileReader
reader
=
null
;
try
{
reader
=
new
FileReader
(
wordfile
)
;
result
=
getWordSet
(
reader
)
;
}
finally
{
if
(
reader
!=
null
)
reader
.
close
(
)
;
}
return
result
;
}
public
static
HashSet
getWordSet
(
Reader
reader
)
throws
IOException
{
HashSet
result
=
new
HashSet
(
)
;
BufferedReader
br
=
null
;
try
{
if
(
reader
instanceof
BufferedReader
)
{
br
=
(
BufferedReader
)
reader
;
}
else
{
br
=
new
BufferedReader
(
reader
)
;
}
String
word
=
null
;
while
(
(
word
=
br
.
readLine
(
)
)
!=
null
)
{
result
.
add
(
word
.
trim
(
)
)
;
}
}
finally
{
if
(
br
!=
null
)
br
.
close
(
)
;
}
return
result
;
}
public
static
HashMap
getStemDict
(
File
wordstemfile
)
throws
IOException
{
if
(
wordstemfile
==
null
)
throw
new
NullPointerException
(
"wordstemfile may not be null"
)
;
HashMap
result
=
new
HashMap
(
)
;
BufferedReader
br
=
null
;
FileReader
fr
=
null
;
try
{
fr
=
new
FileReader
(
wordstemfile
)
;
br
=
new
BufferedReader
(
fr
)
;
String
line
;
while
(
(
line
=
br
.
readLine
(
)
)
!=
null
)
{
String
[
]
wordstem
=
line
.
split
(
"\t"
,
2
)
;
result
.
put
(
wordstem
[
0
]
,
wordstem
[
1
]
)
;
}
}
finally
{
if
(
fr
!=
null
)
fr
.
close
(
)
;
if
(
br
!=
null
)
br
.
close
(
)
;
}
return
result
;
}
}
