package
org
.
apache
.
lucene
.
search
;
import
java
.
io
.
IOException
;
public
class
ReqOptSumScorer
extends
Scorer
{
private
Scorer
reqScorer
;
private
Scorer
optScorer
;
public
ReqOptSumScorer
(
Scorer
reqScorer
,
Scorer
optScorer
)
{
super
(
null
)
;
this
.
reqScorer
=
reqScorer
;
this
.
optScorer
=
optScorer
;
}
private
boolean
firstTimeOptScorer
=
true
;
public
boolean
next
(
)
throws
IOException
{
return
reqScorer
.
next
(
)
;
}
public
boolean
skipTo
(
int
target
)
throws
IOException
{
return
reqScorer
.
skipTo
(
target
)
;
}
public
int
doc
(
)
{
return
reqScorer
.
doc
(
)
;
}
public
float
score
(
)
throws
IOException
{
int
curDoc
=
reqScorer
.
doc
(
)
;
float
reqScore
=
reqScorer
.
score
(
)
;
if
(
firstTimeOptScorer
)
{
firstTimeOptScorer
=
false
;
if
(
!
optScorer
.
skipTo
(
curDoc
)
)
{
optScorer
=
null
;
return
reqScore
;
}
}
else
if
(
optScorer
==
null
)
{
return
reqScore
;
}
else
if
(
(
optScorer
.
doc
(
)
<
curDoc
)
&&
(
!
optScorer
.
skipTo
(
curDoc
)
)
)
{
optScorer
=
null
;
return
reqScore
;
}
return
(
optScorer
.
doc
(
)
==
curDoc
)
?
reqScore
+
optScorer
.
score
(
)
:
reqScore
;
}
public
Explanation
explain
(
int
doc
)
throws
IOException
{
Explanation
res
=
new
Explanation
(
)
;
res
.
setDescription
(
"required, optional"
)
;
res
.
addDetail
(
reqScorer
.
explain
(
doc
)
)
;
res
.
addDetail
(
optScorer
.
explain
(
doc
)
)
;
return
res
;
}
}
