package
org
.
apache
.
lucene
.
analysis
;
import
java
.
io
.
IOException
;
import
java
.
util
.
Arrays
;
import
java
.
util
.
Set
;
public
final
class
StopFilter
extends
TokenFilter
{
private
static
boolean
ENABLE_POSITION_INCREMENTS_DEFAULT
=
false
;
private
final
CharArraySet
stopWords
;
private
boolean
enablePositionIncrements
=
ENABLE_POSITION_INCREMENTS_DEFAULT
;
public
StopFilter
(
TokenStream
input
,
String
[
]
stopWords
)
{
this
(
input
,
stopWords
,
false
)
;
}
public
StopFilter
(
TokenStream
in
,
String
[
]
stopWords
,
boolean
ignoreCase
)
{
super
(
in
)
;
this
.
stopWords
=
(
CharArraySet
)
makeStopSet
(
stopWords
,
ignoreCase
)
;
}
public
StopFilter
(
TokenStream
input
,
Set
stopWords
,
boolean
ignoreCase
)
{
super
(
input
)
;
if
(
stopWords
instanceof
CharArraySet
)
{
this
.
stopWords
=
(
CharArraySet
)
stopWords
;
}
else
{
this
.
stopWords
=
new
CharArraySet
(
stopWords
.
size
(
)
,
ignoreCase
)
;
this
.
stopWords
.
addAll
(
stopWords
)
;
}
}
public
StopFilter
(
TokenStream
in
,
Set
stopWords
)
{
this
(
in
,
stopWords
,
false
)
;
}
public
static
final
Set
makeStopSet
(
String
[
]
stopWords
)
{
return
makeStopSet
(
stopWords
,
false
)
;
}
public
static
final
Set
makeStopSet
(
String
[
]
stopWords
,
boolean
ignoreCase
)
{
CharArraySet
stopSet
=
new
CharArraySet
(
stopWords
.
length
,
ignoreCase
)
;
stopSet
.
addAll
(
Arrays
.
asList
(
stopWords
)
)
;
return
stopSet
;
}
public
final
Token
next
(
final
Token
reusableToken
)
throws
IOException
{
assert
reusableToken
!=
null
;
int
skippedPositions
=
0
;
for
(
Token
nextToken
=
input
.
next
(
reusableToken
)
;
nextToken
!=
null
;
nextToken
=
input
.
next
(
reusableToken
)
)
{
if
(
!
stopWords
.
contains
(
nextToken
.
termBuffer
(
)
,
0
,
nextToken
.
termLength
(
)
)
)
{
if
(
enablePositionIncrements
)
{
nextToken
.
setPositionIncrement
(
nextToken
.
getPositionIncrement
(
)
+
skippedPositions
)
;
}
return
nextToken
;
}
skippedPositions
+=
nextToken
.
getPositionIncrement
(
)
;
}
return
null
;
}
public
static
boolean
getEnablePositionIncrementsDefault
(
)
{
return
ENABLE_POSITION_INCREMENTS_DEFAULT
;
}
public
static
void
setEnablePositionIncrementsDefault
(
boolean
defaultValue
)
{
ENABLE_POSITION_INCREMENTS_DEFAULT
=
defaultValue
;
}
public
boolean
getEnablePositionIncrements
(
)
{
return
enablePositionIncrements
;
}
public
void
setEnablePositionIncrements
(
boolean
enable
)
{
this
.
enablePositionIncrements
=
enable
;
}
}
