package
org
.
apache
.
lucene
.
index
;
import
java
.
io
.
File
;
import
java
.
io
.
FilenameFilter
;
import
java
.
util
.
HashSet
;
public
class
IndexFileNameFilter
implements
FilenameFilter
{
static
IndexFileNameFilter
singleton
=
new
IndexFileNameFilter
(
)
;
private
HashSet
extensions
;
private
HashSet
extensionsInCFS
;
public
IndexFileNameFilter
(
)
{
extensions
=
new
HashSet
(
)
;
for
(
int
i
=
0
;
i
<
IndexFileNames
.
INDEX_EXTENSIONS
.
length
;
i
++
)
{
extensions
.
add
(
IndexFileNames
.
INDEX_EXTENSIONS
[
i
]
)
;
}
extensionsInCFS
=
new
HashSet
(
)
;
for
(
int
i
=
0
;
i
<
IndexFileNames
.
INDEX_EXTENSIONS_IN_COMPOUND_FILE
.
length
;
i
++
)
{
extensionsInCFS
.
add
(
IndexFileNames
.
INDEX_EXTENSIONS_IN_COMPOUND_FILE
[
i
]
)
;
}
}
public
boolean
accept
(
File
dir
,
String
name
)
{
int
i
=
name
.
lastIndexOf
(
'.'
)
;
if
(
i
!=
-
1
)
{
String
extension
=
name
.
substring
(
1
+
i
)
;
if
(
extensions
.
contains
(
extension
)
)
{
return
true
;
}
else
if
(
extension
.
startsWith
(
"f"
)
&&
extension
.
matches
(
"f\\d+"
)
)
{
return
true
;
}
else
if
(
extension
.
startsWith
(
"s"
)
&&
extension
.
matches
(
"s\\d+"
)
)
{
return
true
;
}
}
else
{
if
(
name
.
equals
(
IndexFileNames
.
DELETABLE
)
)
return
true
;
else
if
(
name
.
startsWith
(
IndexFileNames
.
SEGMENTS
)
)
return
true
;
}
return
false
;
}
public
boolean
isCFSFile
(
String
name
)
{
int
i
=
name
.
lastIndexOf
(
'.'
)
;
if
(
i
!=
-
1
)
{
String
extension
=
name
.
substring
(
1
+
i
)
;
if
(
extensionsInCFS
.
contains
(
extension
)
)
{
return
true
;
}
if
(
extension
.
startsWith
(
"f"
)
&&
extension
.
matches
(
"f\\d+"
)
)
{
return
true
;
}
}
return
false
;
}
public
static
IndexFileNameFilter
getFilter
(
)
{
return
singleton
;
}
}
