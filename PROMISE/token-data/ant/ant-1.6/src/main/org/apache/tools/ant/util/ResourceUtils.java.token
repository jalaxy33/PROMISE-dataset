package
org
.
apache
.
tools
.
ant
.
util
;
import
org
.
apache
.
tools
.
ant
.
Project
;
import
org
.
apache
.
tools
.
ant
.
ProjectComponent
;
import
org
.
apache
.
tools
.
ant
.
taskdefs
.
condition
.
Os
;
import
org
.
apache
.
tools
.
ant
.
types
.
Resource
;
import
org
.
apache
.
tools
.
ant
.
types
.
ResourceFactory
;
import
java
.
io
.
File
;
import
java
.
util
.
Vector
;
public
class
ResourceUtils
{
public
static
Resource
[
]
selectOutOfDateSources
(
ProjectComponent
logTo
,
Resource
[
]
source
,
FileNameMapper
mapper
,
ResourceFactory
targets
)
{
long
now
=
(
new
java
.
util
.
Date
(
)
)
.
getTime
(
)
;
if
(
Os
.
isFamily
(
"windows"
)
)
{
now
+=
2000
;
}
Vector
vresult
=
new
Vector
(
)
;
for
(
int
counter
=
0
;
counter
<
source
.
length
;
counter
++
)
{
if
(
source
[
counter
]
.
getLastModified
(
)
>
now
)
{
logTo
.
log
(
"Warning: "
+
source
[
counter
]
.
getName
(
)
+
" modified in the future."
,
Project
.
MSG_WARN
)
;
}
String
[
]
targetnames
=
mapper
.
mapFileName
(
source
[
counter
]
.
getName
(
)
.
replace
(
'/'
,
File
.
separatorChar
)
)
;
if
(
targetnames
!=
null
)
{
boolean
added
=
false
;
StringBuffer
targetList
=
new
StringBuffer
(
)
;
for
(
int
ctarget
=
0
;
!
added
&&
ctarget
<
targetnames
.
length
;
ctarget
++
)
{
Resource
atarget
=
targets
.
getResource
(
targetnames
[
ctarget
]
.
replace
(
File
.
separatorChar
,
'/'
)
)
;
if
(
!
atarget
.
isExists
(
)
)
{
logTo
.
log
(
source
[
counter
]
.
getName
(
)
+
" added as "
+
atarget
.
getName
(
)
+
" doesn\'t exist."
,
Project
.
MSG_VERBOSE
)
;
vresult
.
addElement
(
source
[
counter
]
)
;
added
=
true
;
}
else
if
(
!
atarget
.
isDirectory
(
)
&&
atarget
.
getLastModified
(
)
<
source
[
counter
]
.
getLastModified
(
)
)
{
logTo
.
log
(
source
[
counter
]
.
getName
(
)
+
" added as "
+
atarget
.
getName
(
)
+
" is outdated."
,
Project
.
MSG_VERBOSE
)
;
vresult
.
addElement
(
source
[
counter
]
)
;
added
=
true
;
}
else
{
if
(
targetList
.
length
(
)
>
0
)
{
targetList
.
append
(
", "
)
;
}
targetList
.
append
(
atarget
.
getName
(
)
)
;
}
}
if
(
!
added
)
{
logTo
.
log
(
source
[
counter
]
.
getName
(
)
+
" omitted as "
+
targetList
.
toString
(
)
+
(
targetnames
.
length
==
1
?
" is"
:
" are "
)
+
" up to date."
,
Project
.
MSG_VERBOSE
)
;
}
}
else
{
logTo
.
log
(
source
[
counter
]
.
getName
(
)
+
" skipped - don\'t know how to handle it"
,
Project
.
MSG_VERBOSE
)
;
}
}
Resource
[
]
result
=
new
Resource
[
vresult
.
size
(
)
]
;
vresult
.
copyInto
(
result
)
;
return
result
;
}
}
