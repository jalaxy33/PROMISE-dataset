package
org
.
apache
.
tools
.
ant
.
taskdefs
.
condition
;
import
java
.
io
.
File
;
import
java
.
io
.
IOException
;
import
java
.
util
.
Enumeration
;
import
org
.
apache
.
tools
.
ant
.
BuildException
;
import
org
.
apache
.
tools
.
ant
.
Project
;
import
org
.
apache
.
tools
.
ant
.
types
.
DataType
;
import
org
.
apache
.
tools
.
zip
.
ZipEntry
;
import
org
.
apache
.
tools
.
zip
.
ZipFile
;
public
class
IsSigned
extends
DataType
implements
Condition
{
private
static
final
String
SIG_START
=
"META-INF/"
;
private
static
final
String
SIG_END
=
".SF"
;
private
static
final
int
SHORT_SIG_LIMIT
=
8
;
private
String
name
;
private
File
file
;
public
void
setFile
(
File
file
)
{
this
.
file
=
file
;
}
public
void
setName
(
String
name
)
{
this
.
name
=
name
;
}
public
static
boolean
isSigned
(
File
zipFile
,
String
name
)
throws
IOException
{
ZipFile
jarFile
=
null
;
try
{
jarFile
=
new
ZipFile
(
zipFile
)
;
if
(
null
==
name
)
{
Enumeration
entries
=
jarFile
.
getEntries
(
)
;
while
(
entries
.
hasMoreElements
(
)
)
{
String
eName
=
(
(
ZipEntry
)
entries
.
nextElement
(
)
)
.
getName
(
)
;
if
(
eName
.
startsWith
(
SIG_START
)
&&
eName
.
endsWith
(
SIG_END
)
)
{
return
true
;
}
}
return
false
;
}
boolean
shortSig
=
jarFile
.
getEntry
(
SIG_START
+
name
.
toUpperCase
(
)
+
SIG_END
)
!=
null
;
boolean
longSig
=
false
;
if
(
name
.
length
(
)
>
SHORT_SIG_LIMIT
)
{
longSig
=
jarFile
.
getEntry
(
SIG_START
+
name
.
substring
(
0
,
SHORT_SIG_LIMIT
)
.
toUpperCase
(
)
+
SIG_END
)
!=
null
;
}
return
shortSig
||
longSig
;
}
finally
{
ZipFile
.
closeQuietly
(
jarFile
)
;
}
}
public
boolean
eval
(
)
{
if
(
file
==
null
)
{
throw
new
BuildException
(
"The file attribute must be set."
)
;
}
if
(
file
!=
null
&&
!
file
.
exists
(
)
)
{
log
(
"The file \""
+
file
.
getAbsolutePath
(
)
+
"\" does not exist."
,
Project
.
MSG_VERBOSE
)
;
return
false
;
}
boolean
r
=
false
;
try
{
r
=
isSigned
(
file
,
name
)
;
}
catch
(
IOException
e
)
{
log
(
"Got IOException reading file \""
+
file
.
getAbsolutePath
(
)
+
"\""
+
e
,
Project
.
MSG_WARN
)
;
}
if
(
r
)
{
log
(
"File \""
+
file
.
getAbsolutePath
(
)
+
"\" is signed."
,
Project
.
MSG_VERBOSE
)
;
}
return
r
;
}
}
