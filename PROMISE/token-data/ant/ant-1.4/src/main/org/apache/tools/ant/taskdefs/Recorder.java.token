package
org
.
apache
.
tools
.
ant
.
taskdefs
;
import
org
.
apache
.
tools
.
ant
.
BuildException
;
import
org
.
apache
.
tools
.
ant
.
DirectoryScanner
;
import
org
.
apache
.
tools
.
ant
.
Project
;
import
org
.
apache
.
tools
.
ant
.
types
.
*
;
import
org
.
apache
.
tools
.
ant
.
util
.
*
;
import
org
.
apache
.
tools
.
ant
.
taskdefs
.
compilers
.
*
;
import
org
.
apache
.
tools
.
ant
.
Task
;
import
java
.
io
.
*
;
import
java
.
util
.
*
;
public
class
Recorder
extends
Task
{
private
String
filename
=
null
;
private
Boolean
append
=
null
;
private
Boolean
start
=
null
;
private
int
loglevel
=
-
1
;
private
static
Hashtable
recorderEntries
=
new
Hashtable
(
)
;
public
void
setName
(
String
fname
)
{
filename
=
fname
;
}
public
void
setAction
(
ActionChoices
action
)
{
if
(
action
.
getValue
(
)
.
equalsIgnoreCase
(
"start"
)
)
{
start
=
Boolean
.
TRUE
;
}
else
{
start
=
Boolean
.
FALSE
;
}
}
public
void
setAppend
(
boolean
append
)
{
this
.
append
=
new
Boolean
(
append
)
;
}
public
void
setLoglevel
(
VerbosityLevelChoices
level
)
{
String
lev
=
level
.
getValue
(
)
;
if
(
lev
.
equalsIgnoreCase
(
"error"
)
)
{
loglevel
=
Project
.
MSG_ERR
;
}
else
if
(
lev
.
equalsIgnoreCase
(
"warn"
)
)
{
loglevel
=
Project
.
MSG_WARN
;
}
else
if
(
lev
.
equalsIgnoreCase
(
"info"
)
)
{
loglevel
=
Project
.
MSG_INFO
;
}
else
if
(
lev
.
equalsIgnoreCase
(
"verbose"
)
)
{
loglevel
=
Project
.
MSG_VERBOSE
;
}
else
if
(
lev
.
equalsIgnoreCase
(
"debug"
)
)
{
loglevel
=
Project
.
MSG_DEBUG
;
}
}
public
void
execute
(
)
throws
BuildException
{
if
(
filename
==
null
)
throw
new
BuildException
(
"No filename specified"
)
;
getProject
(
)
.
log
(
"setting a recorder for name "
+
filename
,
Project
.
MSG_DEBUG
)
;
RecorderEntry
recorder
=
getRecorder
(
filename
,
getProject
(
)
)
;
recorder
.
setMessageOutputLevel
(
loglevel
)
;
recorder
.
setRecordState
(
start
)
;
}
public
static
class
ActionChoices
extends
EnumeratedAttribute
{
private
static
final
String
[
]
values
=
{
"start"
,
"stop"
}
;
public
String
[
]
getValues
(
)
{
return
values
;
}
}
public
static
class
VerbosityLevelChoices
extends
EnumeratedAttribute
{
private
static
final
String
[
]
values
=
{
"error"
,
"warn"
,
"info"
,
"verbose"
,
"debug"
}
;
public
String
[
]
getValues
(
)
{
return
values
;
}
}
protected
RecorderEntry
getRecorder
(
String
name
,
Project
proj
)
throws
BuildException
{
Object
o
=
recorderEntries
.
get
(
name
)
;
RecorderEntry
entry
;
if
(
o
==
null
)
{
try
{
entry
=
new
RecorderEntry
(
name
)
;
PrintStream
out
=
null
;
if
(
append
==
null
)
{
out
=
new
PrintStream
(
new
FileOutputStream
(
name
)
)
;
}
else
{
out
=
new
PrintStream
(
new
FileOutputStream
(
name
,
append
.
booleanValue
(
)
)
)
;
}
entry
.
setErrorPrintStream
(
out
)
;
entry
.
setOutputPrintStream
(
out
)
;
}
catch
(
IOException
ioe
)
{
throw
new
BuildException
(
"Problems creating a recorder entry"
,
ioe
)
;
}
proj
.
addBuildListener
(
entry
)
;
recorderEntries
.
put
(
name
,
entry
)
;
}
else
{
entry
=
(
RecorderEntry
)
o
;
}
return
entry
;
}
}
