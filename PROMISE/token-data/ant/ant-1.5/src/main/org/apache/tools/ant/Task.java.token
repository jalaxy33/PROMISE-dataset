package
org
.
apache
.
tools
.
ant
;
public
abstract
class
Task
extends
ProjectComponent
{
protected
Target
target
=
null
;
protected
String
description
=
null
;
protected
Location
location
=
Location
.
UNKNOWN_LOCATION
;
protected
String
taskName
=
null
;
protected
String
taskType
=
null
;
protected
RuntimeConfigurable
wrapper
;
private
boolean
invalid
=
false
;
public
Task
(
)
{
}
public
void
setOwningTarget
(
Target
target
)
{
this
.
target
=
target
;
}
public
Target
getOwningTarget
(
)
{
return
target
;
}
public
void
setTaskName
(
String
name
)
{
this
.
taskName
=
name
;
}
public
String
getTaskName
(
)
{
return
taskName
;
}
void
setTaskType
(
String
type
)
{
this
.
taskType
=
type
;
}
public
void
setDescription
(
String
desc
)
{
description
=
desc
;
}
public
String
getDescription
(
)
{
return
description
;
}
public
void
init
(
)
throws
BuildException
{
}
public
void
execute
(
)
throws
BuildException
{
}
public
Location
getLocation
(
)
{
return
location
;
}
public
void
setLocation
(
Location
location
)
{
this
.
location
=
location
;
}
public
RuntimeConfigurable
getRuntimeConfigurableWrapper
(
)
{
if
(
wrapper
==
null
)
{
wrapper
=
new
RuntimeConfigurable
(
this
,
getTaskName
(
)
)
;
}
return
wrapper
;
}
public
void
setRuntimeConfigurableWrapper
(
RuntimeConfigurable
wrapper
)
{
this
.
wrapper
=
wrapper
;
}
public
void
maybeConfigure
(
)
throws
BuildException
{
if
(
!
invalid
)
{
if
(
wrapper
!=
null
)
{
wrapper
.
maybeConfigure
(
project
)
;
}
}
else
{
getReplacement
(
)
;
}
}
protected
void
handleOutput
(
String
line
)
{
log
(
line
,
Project
.
MSG_INFO
)
;
}
protected
void
handleErrorOutput
(
String
line
)
{
log
(
line
,
Project
.
MSG_ERR
)
;
}
public
void
log
(
String
msg
)
{
log
(
msg
,
Project
.
MSG_INFO
)
;
}
public
void
log
(
String
msg
,
int
msgLevel
)
{
project
.
log
(
this
,
msg
,
msgLevel
)
;
}
public
final
void
perform
(
)
{
if
(
!
invalid
)
{
try
{
project
.
fireTaskStarted
(
this
)
;
maybeConfigure
(
)
;
execute
(
)
;
project
.
fireTaskFinished
(
this
,
null
)
;
}
catch
(
RuntimeException
exc
)
{
if
(
exc
instanceof
BuildException
)
{
BuildException
be
=
(
BuildException
)
exc
;
if
(
be
.
getLocation
(
)
==
Location
.
UNKNOWN_LOCATION
)
{
be
.
setLocation
(
getLocation
(
)
)
;
}
}
project
.
fireTaskFinished
(
this
,
exc
)
;
throw
exc
;
}
}
else
{
UnknownElement
ue
=
getReplacement
(
)
;
Task
task
=
ue
.
getTask
(
)
;
task
.
perform
(
)
;
}
}
final
void
markInvalid
(
)
{
invalid
=
true
;
}
protected
final
boolean
isInvalid
(
)
{
return
invalid
;
}
private
UnknownElement
replacement
;
private
UnknownElement
getReplacement
(
)
{
if
(
replacement
==
null
)
{
replacement
=
new
UnknownElement
(
taskType
)
;
replacement
.
setProject
(
project
)
;
replacement
.
setTaskType
(
taskType
)
;
replacement
.
setTaskName
(
taskName
)
;
replacement
.
setLocation
(
location
)
;
replacement
.
setOwningTarget
(
target
)
;
replacement
.
setRuntimeConfigurableWrapper
(
wrapper
)
;
wrapper
.
setProxy
(
replacement
)
;
target
.
replaceChild
(
this
,
replacement
)
;
replacement
.
maybeConfigure
(
)
;
}
return
replacement
;
}
}
