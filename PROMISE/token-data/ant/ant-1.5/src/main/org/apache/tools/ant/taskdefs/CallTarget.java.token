package
org
.
apache
.
tools
.
ant
.
taskdefs
;
import
org
.
apache
.
tools
.
ant
.
Task
;
import
org
.
apache
.
tools
.
ant
.
BuildException
;
public
class
CallTarget
extends
Task
{
private
Ant
callee
;
private
String
subTarget
;
private
boolean
inheritAll
=
true
;
private
boolean
inheritRefs
=
false
;
public
void
setInheritAll
(
boolean
inherit
)
{
inheritAll
=
inherit
;
}
public
void
setInheritRefs
(
boolean
inheritRefs
)
{
this
.
inheritRefs
=
inheritRefs
;
}
public
void
init
(
)
{
callee
=
(
Ant
)
getProject
(
)
.
createTask
(
"ant"
)
;
callee
.
setOwningTarget
(
getOwningTarget
(
)
)
;
callee
.
setTaskName
(
getTaskName
(
)
)
;
callee
.
setLocation
(
getLocation
(
)
)
;
callee
.
init
(
)
;
}
public
void
execute
(
)
throws
BuildException
{
if
(
callee
==
null
)
{
init
(
)
;
}
if
(
subTarget
==
null
)
{
throw
new
BuildException
(
"Attribute target is required."
,
location
)
;
}
callee
.
setAntfile
(
getProject
(
)
.
getProperty
(
"ant.file"
)
)
;
callee
.
setTarget
(
subTarget
)
;
callee
.
setInheritAll
(
inheritAll
)
;
callee
.
setInheritRefs
(
inheritRefs
)
;
callee
.
execute
(
)
;
}
public
Property
createParam
(
)
{
if
(
callee
==
null
)
{
init
(
)
;
}
return
callee
.
createProperty
(
)
;
}
public
void
addReference
(
Ant
.
Reference
r
)
{
if
(
callee
==
null
)
{
init
(
)
;
}
callee
.
addReference
(
r
)
;
}
public
void
setTarget
(
String
target
)
{
subTarget
=
target
;
}
protected
void
handleOutput
(
String
line
)
{
if
(
callee
!=
null
)
{
callee
.
handleOutput
(
line
)
;
}
else
{
super
.
handleOutput
(
line
)
;
}
}
protected
void
handleErrorOutput
(
String
line
)
{
if
(
callee
!=
null
)
{
callee
.
handleErrorOutput
(
line
)
;
}
else
{
super
.
handleErrorOutput
(
line
)
;
}
}
}
