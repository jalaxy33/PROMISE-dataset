package
org
.
apache
.
tools
.
ant
.
filters
;
import
java
.
io
.
IOException
;
import
java
.
io
.
Reader
;
import
org
.
apache
.
tools
.
ant
.
types
.
Parameter
;
public
final
class
HeadFilter
extends
BaseParamFilterReader
implements
ChainableReader
{
private
static
final
String
LINES_KEY
=
"lines"
;
private
long
linesRead
=
0
;
private
long
lines
=
10
;
public
HeadFilter
(
)
{
super
(
)
;
}
public
HeadFilter
(
final
Reader
in
)
{
super
(
in
)
;
}
public
final
int
read
(
)
throws
IOException
{
if
(
!
getInitialized
(
)
)
{
initialize
(
)
;
setInitialized
(
true
)
;
}
int
ch
=
-
1
;
if
(
linesRead
<
lines
)
{
ch
=
in
.
read
(
)
;
if
(
ch
==
'\n'
)
{
linesRead
++
;
}
}
return
ch
;
}
public
final
void
setLines
(
final
long
lines
)
{
this
.
lines
=
lines
;
}
private
final
long
getLines
(
)
{
return
lines
;
}
public
final
Reader
chain
(
final
Reader
rdr
)
{
HeadFilter
newFilter
=
new
HeadFilter
(
rdr
)
;
newFilter
.
setLines
(
getLines
(
)
)
;
newFilter
.
setInitialized
(
true
)
;
return
newFilter
;
}
private
final
void
initialize
(
)
{
Parameter
[
]
params
=
getParameters
(
)
;
if
(
params
!=
null
)
{
for
(
int
i
=
0
;
i
<
params
.
length
;
i
++
)
{
if
(
LINES_KEY
.
equals
(
params
[
i
]
.
getName
(
)
)
)
{
lines
=
new
Long
(
params
[
i
]
.
getValue
(
)
)
.
longValue
(
)
;
break
;
}
}
}
}
}
