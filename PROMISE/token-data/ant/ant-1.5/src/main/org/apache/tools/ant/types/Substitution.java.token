package
org
.
apache
.
tools
.
ant
.
types
;
import
java
.
util
.
Stack
;
import
org
.
apache
.
tools
.
ant
.
BuildException
;
import
org
.
apache
.
tools
.
ant
.
Project
;
public
class
Substitution
extends
DataType
{
public
static
final
String
DATA_TYPE_NAME
=
"substitition"
;
private
String
expression
;
public
Substitution
(
)
{
this
.
expression
=
null
;
}
public
void
setExpression
(
String
expression
)
{
this
.
expression
=
expression
;
}
public
String
getExpression
(
Project
p
)
{
if
(
isReference
(
)
)
{
return
getRef
(
p
)
.
getExpression
(
p
)
;
}
return
expression
;
}
public
Substitution
getRef
(
Project
p
)
{
if
(
!
checked
)
{
Stack
stk
=
new
Stack
(
)
;
stk
.
push
(
this
)
;
dieOnCircularReference
(
stk
,
p
)
;
}
Object
o
=
ref
.
getReferencedObject
(
p
)
;
if
(
!
(
o
instanceof
Substitution
)
)
{
String
msg
=
ref
.
getRefId
(
)
+
" doesn\'t denote a substitution"
;
throw
new
BuildException
(
msg
)
;
}
else
{
return
(
Substitution
)
o
;
}
}
}
