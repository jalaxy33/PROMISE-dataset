package
org
.
apache
.
poi
.
hssf
.
record
;
import
org
.
apache
.
poi
.
util
.
BitField
;
import
org
.
apache
.
poi
.
util
.
LittleEndian
;
import
org
.
apache
.
poi
.
util
.
StringUtil
;
import
org
.
apache
.
poi
.
util
.
HexDump
;
public
class
DatRecord
extends
Record
{
public
final
static
short
sid
=
0x1063
;
private
short
field_1_options
;
private
BitField
horizontalBorder
=
new
BitField
(
0x1
)
;
private
BitField
verticalBorder
=
new
BitField
(
0x2
)
;
private
BitField
border
=
new
BitField
(
0x4
)
;
private
BitField
showSeriesKey
=
new
BitField
(
0x8
)
;
public
DatRecord
(
)
{
}
public
DatRecord
(
short
id
,
short
size
,
byte
[
]
data
)
{
super
(
id
,
size
,
data
)
;
}
public
DatRecord
(
short
id
,
short
size
,
byte
[
]
data
,
int
offset
)
{
super
(
id
,
size
,
data
,
offset
)
;
}
protected
void
validateSid
(
short
id
)
{
if
(
id
!=
sid
)
{
throw
new
RecordFormatException
(
"Not a Dat record"
)
;
}
}
protected
void
fillFields
(
byte
[
]
data
,
short
size
,
int
offset
)
{
field_1_options
=
LittleEndian
.
getShort
(
data
,
0x0
+
offset
)
;
}
public
String
toString
(
)
{
StringBuffer
buffer
=
new
StringBuffer
(
)
;
buffer
.
append
(
"[Dat]\n"
)
;
buffer
.
append
(
"    .options              = "
)
.
append
(
"0x"
)
.
append
(
HexDump
.
toHex
(
(
short
)
getOptions
(
)
)
)
.
append
(
" ("
)
.
append
(
getOptions
(
)
)
.
append
(
" )\n"
)
;
buffer
.
append
(
"         .horizontalBorder         = "
)
.
append
(
isHorizontalBorder
(
)
)
.
append
(
'\n'
)
;
buffer
.
append
(
"         .verticalBorder           = "
)
.
append
(
isVerticalBorder
(
)
)
.
append
(
'\n'
)
;
buffer
.
append
(
"         .border                   = "
)
.
append
(
isBorder
(
)
)
.
append
(
'\n'
)
;
buffer
.
append
(
"         .showSeriesKey            = "
)
.
append
(
isShowSeriesKey
(
)
)
.
append
(
'\n'
)
;
buffer
.
append
(
"[/Dat]\n"
)
;
return
buffer
.
toString
(
)
;
}
public
int
serialize
(
int
offset
,
byte
[
]
data
)
{
LittleEndian
.
putShort
(
data
,
0
+
offset
,
sid
)
;
LittleEndian
.
putShort
(
data
,
2
+
offset
,
(
short
)
(
getRecordSize
(
)
-
4
)
)
;
LittleEndian
.
putShort
(
data
,
4
+
offset
,
field_1_options
)
;
return
getRecordSize
(
)
;
}
public
int
getRecordSize
(
)
{
return
4
+
2
;
}
public
short
getSid
(
)
{
return
this
.
sid
;
}
public
short
getOptions
(
)
{
return
field_1_options
;
}
public
void
setOptions
(
short
field_1_options
)
{
this
.
field_1_options
=
field_1_options
;
}
public
void
setHorizontalBorder
(
boolean
value
)
{
field_1_options
=
horizontalBorder
.
setShortBoolean
(
field_1_options
,
value
)
;
}
public
boolean
isHorizontalBorder
(
)
{
return
horizontalBorder
.
isSet
(
field_1_options
)
;
}
public
void
setVerticalBorder
(
boolean
value
)
{
field_1_options
=
verticalBorder
.
setShortBoolean
(
field_1_options
,
value
)
;
}
public
boolean
isVerticalBorder
(
)
{
return
verticalBorder
.
isSet
(
field_1_options
)
;
}
public
void
setBorder
(
boolean
value
)
{
field_1_options
=
border
.
setShortBoolean
(
field_1_options
,
value
)
;
}
public
boolean
isBorder
(
)
{
return
border
.
isSet
(
field_1_options
)
;
}
public
void
setShowSeriesKey
(
boolean
value
)
{
field_1_options
=
showSeriesKey
.
setShortBoolean
(
field_1_options
,
value
)
;
}
public
boolean
isShowSeriesKey
(
)
{
return
showSeriesKey
.
isSet
(
field_1_options
)
;
}
}
