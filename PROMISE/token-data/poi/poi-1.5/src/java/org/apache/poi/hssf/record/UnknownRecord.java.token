package
org
.
apache
.
poi
.
hssf
.
record
;
import
org
.
apache
.
poi
.
util
.
LittleEndian
;
public
class
UnknownRecord
extends
Record
{
private
short
sid
=
0
;
private
short
size
=
0
;
private
byte
[
]
thedata
=
null
;
int
offset
=
0
;
public
UnknownRecord
(
)
{
}
public
UnknownRecord
(
short
id
,
short
size
,
byte
[
]
data
)
{
sid
=
id
;
size
=
size
;
thedata
=
data
;
}
public
int
serialize
(
int
offset
,
byte
[
]
data
)
{
if
(
thedata
==
null
)
{
thedata
=
new
byte
[
0
]
;
}
LittleEndian
.
putShort
(
data
,
0
+
offset
,
sid
)
;
LittleEndian
.
putShort
(
data
,
2
+
offset
,
(
short
)
(
thedata
.
length
)
)
;
if
(
thedata
.
length
>
0
)
{
System
.
arraycopy
(
thedata
,
0
,
data
,
4
+
offset
,
thedata
.
length
)
;
}
return
getRecordSize
(
)
;
}
public
int
getRecordSize
(
)
{
int
retval
=
4
;
if
(
thedata
!=
null
)
{
retval
+=
thedata
.
length
;
}
return
retval
;
}
protected
void
fillFields
(
byte
[
]
data
,
short
sid
)
{
sid
=
sid
;
thedata
=
data
;
}
protected
void
validateSid
(
short
id
)
{
}
public
String
toString
(
)
{
StringBuffer
buffer
=
new
StringBuffer
(
)
;
buffer
.
append
(
"[UNKNOWN RECORD]\n"
)
;
buffer
.
append
(
"    .id        = "
)
.
append
(
Integer
.
toHexString
(
sid
)
)
.
append
(
"\n"
)
;
buffer
.
append
(
"[/UNKNWON RECORD]\n"
)
;
return
buffer
.
toString
(
)
;
}
public
short
getSid
(
)
{
return
this
.
sid
;
}
protected
void
fillFields
(
byte
[
]
data
,
short
size
,
int
offset
)
{
throw
new
RecordFormatException
(
"Unknown record cannot be constructed via offset -- we need a copy of the data"
)
;
}
}
