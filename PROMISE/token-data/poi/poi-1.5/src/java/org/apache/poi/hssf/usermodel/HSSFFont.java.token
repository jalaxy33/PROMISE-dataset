package
org
.
apache
.
poi
.
hssf
.
usermodel
;
import
org
.
apache
.
poi
.
hssf
.
record
.
FontRecord
;
public
class
HSSFFont
implements
HSSFColorConstants
{
public
final
static
String
FONT_ARIAL
=
"Arial"
;
public
final
static
short
BOLDWEIGHT_NORMAL
=
190
;
public
final
static
short
BOLDWEIGHT_BOLD
=
0x2bc
;
public
final
static
short
COLOR_NORMAL
=
0x7fff
;
public
final
static
short
COLOR_RED
=
0xa
;
public
final
static
short
SS_NONE
=
0
;
public
final
static
short
SS_SUPER
=
1
;
public
final
static
short
SS_SUB
=
2
;
public
final
static
byte
U_NONE
=
0
;
public
final
static
byte
U_SINGLE
=
1
;
public
final
static
byte
U_DOUBLE
=
2
;
public
final
static
byte
U_SINGLE_ACCOUNTING
=
0x21
;
public
final
static
byte
U_DOUBLE_ACCOUNTING
=
0x22
;
private
FontRecord
font
;
private
short
index
;
protected
HSSFFont
(
short
index
,
FontRecord
rec
)
{
font
=
rec
;
this
.
index
=
index
;
}
public
void
setFontName
(
String
name
)
{
font
.
setFontName
(
name
)
;
font
.
setFontNameLength
(
(
byte
)
name
.
length
(
)
)
;
}
public
String
getFontName
(
)
{
return
font
.
getFontName
(
)
;
}
public
short
getIndex
(
)
{
return
index
;
}
public
void
setFontHeight
(
short
height
)
{
font
.
setFontHeight
(
height
)
;
}
public
void
setFontHeightInPoints
(
short
height
)
{
font
.
setFontHeight
(
(
short
)
(
height
*
20
)
)
;
}
public
short
getFontHeight
(
)
{
return
font
.
getFontHeight
(
)
;
}
public
short
getFontHeightInPoints
(
)
{
return
(
short
)
(
font
.
getFontHeight
(
)
/
20
)
;
}
public
void
setItalic
(
boolean
italic
)
{
font
.
setItalic
(
italic
)
;
}
public
boolean
getItalic
(
)
{
return
font
.
isItalic
(
)
;
}
public
void
setStrikeout
(
boolean
strikeout
)
{
font
.
setStrikeout
(
strikeout
)
;
}
public
boolean
getStrikeout
(
)
{
return
font
.
isStruckout
(
)
;
}
public
void
setColor
(
short
color
)
{
font
.
setColorPaletteIndex
(
color
)
;
}
public
short
getColor
(
)
{
return
font
.
getColorPaletteIndex
(
)
;
}
public
void
setBoldweight
(
short
boldweight
)
{
font
.
setBoldWeight
(
boldweight
)
;
}
public
short
getBoldweight
(
)
{
return
font
.
getBoldWeight
(
)
;
}
public
void
setTypeOffset
(
short
offset
)
{
font
.
setSuperSubScript
(
offset
)
;
}
public
short
getTypeOffset
(
)
{
return
font
.
getSuperSubScript
(
)
;
}
public
void
setUnderline
(
byte
underline
)
{
font
.
setUnderline
(
underline
)
;
}
public
byte
getUnderline
(
)
{
return
font
.
getUnderline
(
)
;
}
}
