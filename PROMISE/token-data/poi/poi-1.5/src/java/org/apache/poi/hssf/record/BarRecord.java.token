package
org
.
apache
.
poi
.
hssf
.
record
;
import
org
.
apache
.
poi
.
util
.
BitField
;
import
org
.
apache
.
poi
.
util
.
LittleEndian
;
import
org
.
apache
.
poi
.
util
.
StringUtil
;
import
org
.
apache
.
poi
.
util
.
HexDump
;
public
class
BarRecord
extends
Record
{
public
final
static
short
sid
=
0x1017
;
private
short
field_1_barSpace
;
private
short
field_2_categorySpace
;
private
short
field_3_formatFlags
;
private
BitField
horizontal
=
new
BitField
(
0x1
)
;
private
BitField
stacked
=
new
BitField
(
0x2
)
;
private
BitField
displayAsPercentage
=
new
BitField
(
0x4
)
;
private
BitField
shadow
=
new
BitField
(
0x8
)
;
public
BarRecord
(
)
{
field_2_categorySpace
=
50
;
}
public
BarRecord
(
short
id
,
short
size
,
byte
[
]
data
)
{
super
(
id
,
size
,
data
)
;
}
public
BarRecord
(
short
id
,
short
size
,
byte
[
]
data
,
int
offset
)
{
super
(
id
,
size
,
data
,
offset
)
;
}
protected
void
validateSid
(
short
id
)
{
if
(
id
!=
sid
)
{
throw
new
RecordFormatException
(
"Not a Bar record"
)
;
}
}
protected
void
fillFields
(
byte
[
]
data
,
short
size
,
int
offset
)
{
field_1_barSpace
=
LittleEndian
.
getShort
(
data
,
0x0
+
offset
)
;
field_2_categorySpace
=
LittleEndian
.
getShort
(
data
,
0x2
+
offset
)
;
field_3_formatFlags
=
LittleEndian
.
getShort
(
data
,
0x4
+
offset
)
;
}
public
String
toString
(
)
{
StringBuffer
buffer
=
new
StringBuffer
(
)
;
buffer
.
append
(
"[Bar]\n"
)
;
buffer
.
append
(
"    .barSpace             = "
)
.
append
(
"0x"
)
.
append
(
HexDump
.
toHex
(
(
short
)
getBarSpace
(
)
)
)
.
append
(
" ("
)
.
append
(
getBarSpace
(
)
)
.
append
(
" )\n"
)
;
buffer
.
append
(
"    .categorySpace        = "
)
.
append
(
"0x"
)
.
append
(
HexDump
.
toHex
(
(
short
)
getCategorySpace
(
)
)
)
.
append
(
" ("
)
.
append
(
getCategorySpace
(
)
)
.
append
(
" )\n"
)
;
buffer
.
append
(
"    .formatFlags          = "
)
.
append
(
"0x"
)
.
append
(
HexDump
.
toHex
(
(
short
)
getFormatFlags
(
)
)
)
.
append
(
" ("
)
.
append
(
getFormatFlags
(
)
)
.
append
(
" )\n"
)
;
buffer
.
append
(
"         .horizontal               = "
)
.
append
(
isHorizontal
(
)
)
.
append
(
'\n'
)
;
buffer
.
append
(
"         .stacked                  = "
)
.
append
(
isStacked
(
)
)
.
append
(
'\n'
)
;
buffer
.
append
(
"         .displayAsPercentage      = "
)
.
append
(
isDisplayAsPercentage
(
)
)
.
append
(
'\n'
)
;
buffer
.
append
(
"         .shadow                   = "
)
.
append
(
isShadow
(
)
)
.
append
(
'\n'
)
;
buffer
.
append
(
"[/Bar]\n"
)
;
return
buffer
.
toString
(
)
;
}
public
int
serialize
(
int
offset
,
byte
[
]
data
)
{
LittleEndian
.
putShort
(
data
,
0
+
offset
,
sid
)
;
LittleEndian
.
putShort
(
data
,
2
+
offset
,
(
short
)
(
getRecordSize
(
)
-
4
)
)
;
LittleEndian
.
putShort
(
data
,
4
+
offset
,
field_1_barSpace
)
;
LittleEndian
.
putShort
(
data
,
6
+
offset
,
field_2_categorySpace
)
;
LittleEndian
.
putShort
(
data
,
8
+
offset
,
field_3_formatFlags
)
;
return
getRecordSize
(
)
;
}
public
int
getRecordSize
(
)
{
return
4
+
2
+
2
+
2
;
}
public
short
getSid
(
)
{
return
this
.
sid
;
}
public
short
getBarSpace
(
)
{
return
field_1_barSpace
;
}
public
void
setBarSpace
(
short
field_1_barSpace
)
{
this
.
field_1_barSpace
=
field_1_barSpace
;
}
public
short
getCategorySpace
(
)
{
return
field_2_categorySpace
;
}
public
void
setCategorySpace
(
short
field_2_categorySpace
)
{
this
.
field_2_categorySpace
=
field_2_categorySpace
;
}
public
short
getFormatFlags
(
)
{
return
field_3_formatFlags
;
}
public
void
setFormatFlags
(
short
field_3_formatFlags
)
{
this
.
field_3_formatFlags
=
field_3_formatFlags
;
}
public
void
setHorizontal
(
boolean
value
)
{
field_3_formatFlags
=
horizontal
.
setShortBoolean
(
field_3_formatFlags
,
value
)
;
}
public
boolean
isHorizontal
(
)
{
return
horizontal
.
isSet
(
field_3_formatFlags
)
;
}
public
void
setStacked
(
boolean
value
)
{
field_3_formatFlags
=
stacked
.
setShortBoolean
(
field_3_formatFlags
,
value
)
;
}
public
boolean
isStacked
(
)
{
return
stacked
.
isSet
(
field_3_formatFlags
)
;
}
public
void
setDisplayAsPercentage
(
boolean
value
)
{
field_3_formatFlags
=
displayAsPercentage
.
setShortBoolean
(
field_3_formatFlags
,
value
)
;
}
public
boolean
isDisplayAsPercentage
(
)
{
return
displayAsPercentage
.
isSet
(
field_3_formatFlags
)
;
}
public
void
setShadow
(
boolean
value
)
{
field_3_formatFlags
=
shadow
.
setShortBoolean
(
field_3_formatFlags
,
value
)
;
}
public
boolean
isShadow
(
)
{
return
shadow
.
isSet
(
field_3_formatFlags
)
;
}
}
