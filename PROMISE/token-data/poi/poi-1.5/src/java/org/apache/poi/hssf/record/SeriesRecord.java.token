package
org
.
apache
.
poi
.
hssf
.
record
;
import
org
.
apache
.
poi
.
util
.
BitField
;
import
org
.
apache
.
poi
.
util
.
LittleEndian
;
import
org
.
apache
.
poi
.
util
.
StringUtil
;
import
org
.
apache
.
poi
.
util
.
HexDump
;
public
class
SeriesRecord
extends
Record
{
public
final
static
short
sid
=
0x1003
;
private
short
field_1_categoryDataType
;
public
final
static
short
CATEGORY_DATA_TYPE_DATES
=
0
;
public
final
static
short
CATEGORY_DATA_TYPE_NUMERIC
=
1
;
public
final
static
short
CATEGORY_DATA_TYPE_SEQUENCE
=
2
;
public
final
static
short
CATEGORY_DATA_TYPE_TEXT
=
3
;
private
short
field_2_valuesDataType
;
public
final
static
short
VALUES_DATA_TYPE_DATES
=
0
;
public
final
static
short
VALUES_DATA_TYPE_NUMERIC
=
1
;
public
final
static
short
VALUES_DATA_TYPE_SEQUENCE
=
2
;
public
final
static
short
VALUES_DATA_TYPE_TEXT
=
3
;
private
short
field_3_numCategories
;
private
short
field_4_numValues
;
private
short
field_5_bubbleSeriesType
;
public
final
static
short
BUBBLE_SERIES_TYPE_DATES
=
0
;
public
final
static
short
BUBBLE_SERIES_TYPE_NUMERIC
=
1
;
public
final
static
short
BUBBLE_SERIES_TYPE_SEQUENCE
=
2
;
public
final
static
short
BUBBLE_SERIES_TYPE_TEXT
=
3
;
private
short
field_6_numBubbleValues
;
public
SeriesRecord
(
)
{
}
public
SeriesRecord
(
short
id
,
short
size
,
byte
[
]
data
)
{
super
(
id
,
size
,
data
)
;
}
public
SeriesRecord
(
short
id
,
short
size
,
byte
[
]
data
,
int
offset
)
{
super
(
id
,
size
,
data
,
offset
)
;
}
protected
void
validateSid
(
short
id
)
{
if
(
id
!=
sid
)
{
throw
new
RecordFormatException
(
"Not a Series record"
)
;
}
}
protected
void
fillFields
(
byte
[
]
data
,
short
size
,
int
offset
)
{
field_1_categoryDataType
=
LittleEndian
.
getShort
(
data
,
0x0
+
offset
)
;
field_2_valuesDataType
=
LittleEndian
.
getShort
(
data
,
0x2
+
offset
)
;
field_3_numCategories
=
LittleEndian
.
getShort
(
data
,
0x4
+
offset
)
;
field_4_numValues
=
LittleEndian
.
getShort
(
data
,
0x6
+
offset
)
;
field_5_bubbleSeriesType
=
LittleEndian
.
getShort
(
data
,
0x8
+
offset
)
;
field_6_numBubbleValues
=
LittleEndian
.
getShort
(
data
,
0xa
+
offset
)
;
}
public
String
toString
(
)
{
StringBuffer
buffer
=
new
StringBuffer
(
)
;
buffer
.
append
(
"[Series]\n"
)
;
buffer
.
append
(
"    .categoryDataType     = "
)
.
append
(
"0x"
)
.
append
(
HexDump
.
toHex
(
(
short
)
getCategoryDataType
(
)
)
)
.
append
(
" ("
)
.
append
(
getCategoryDataType
(
)
)
.
append
(
" )\n"
)
;
buffer
.
append
(
"    .valuesDataType       = "
)
.
append
(
"0x"
)
.
append
(
HexDump
.
toHex
(
(
short
)
getValuesDataType
(
)
)
)
.
append
(
" ("
)
.
append
(
getValuesDataType
(
)
)
.
append
(
" )\n"
)
;
buffer
.
append
(
"    .numCategories        = "
)
.
append
(
"0x"
)
.
append
(
HexDump
.
toHex
(
(
short
)
getNumCategories
(
)
)
)
.
append
(
" ("
)
.
append
(
getNumCategories
(
)
)
.
append
(
" )\n"
)
;
buffer
.
append
(
"    .numValues            = "
)
.
append
(
"0x"
)
.
append
(
HexDump
.
toHex
(
(
short
)
getNumValues
(
)
)
)
.
append
(
" ("
)
.
append
(
getNumValues
(
)
)
.
append
(
" )\n"
)
;
buffer
.
append
(
"    .bubbleSeriesType     = "
)
.
append
(
"0x"
)
.
append
(
HexDump
.
toHex
(
(
short
)
getBubbleSeriesType
(
)
)
)
.
append
(
" ("
)
.
append
(
getBubbleSeriesType
(
)
)
.
append
(
" )\n"
)
;
buffer
.
append
(
"    .numBubbleValues      = "
)
.
append
(
"0x"
)
.
append
(
HexDump
.
toHex
(
(
short
)
getNumBubbleValues
(
)
)
)
.
append
(
" ("
)
.
append
(
getNumBubbleValues
(
)
)
.
append
(
" )\n"
)
;
buffer
.
append
(
"[/Series]\n"
)
;
return
buffer
.
toString
(
)
;
}
public
int
serialize
(
int
offset
,
byte
[
]
data
)
{
LittleEndian
.
putShort
(
data
,
0
+
offset
,
sid
)
;
LittleEndian
.
putShort
(
data
,
2
+
offset
,
(
short
)
(
getRecordSize
(
)
-
4
)
)
;
LittleEndian
.
putShort
(
data
,
4
+
offset
,
field_1_categoryDataType
)
;
LittleEndian
.
putShort
(
data
,
6
+
offset
,
field_2_valuesDataType
)
;
LittleEndian
.
putShort
(
data
,
8
+
offset
,
field_3_numCategories
)
;
LittleEndian
.
putShort
(
data
,
10
+
offset
,
field_4_numValues
)
;
LittleEndian
.
putShort
(
data
,
12
+
offset
,
field_5_bubbleSeriesType
)
;
LittleEndian
.
putShort
(
data
,
14
+
offset
,
field_6_numBubbleValues
)
;
return
getRecordSize
(
)
;
}
public
int
getRecordSize
(
)
{
return
4
+
2
+
2
+
2
+
2
+
2
+
2
;
}
public
short
getSid
(
)
{
return
this
.
sid
;
}
public
short
getCategoryDataType
(
)
{
return
field_1_categoryDataType
;
}
public
void
setCategoryDataType
(
short
field_1_categoryDataType
)
{
this
.
field_1_categoryDataType
=
field_1_categoryDataType
;
}
public
short
getValuesDataType
(
)
{
return
field_2_valuesDataType
;
}
public
void
setValuesDataType
(
short
field_2_valuesDataType
)
{
this
.
field_2_valuesDataType
=
field_2_valuesDataType
;
}
public
short
getNumCategories
(
)
{
return
field_3_numCategories
;
}
public
void
setNumCategories
(
short
field_3_numCategories
)
{
this
.
field_3_numCategories
=
field_3_numCategories
;
}
public
short
getNumValues
(
)
{
return
field_4_numValues
;
}
public
void
setNumValues
(
short
field_4_numValues
)
{
this
.
field_4_numValues
=
field_4_numValues
;
}
public
short
getBubbleSeriesType
(
)
{
return
field_5_bubbleSeriesType
;
}
public
void
setBubbleSeriesType
(
short
field_5_bubbleSeriesType
)
{
this
.
field_5_bubbleSeriesType
=
field_5_bubbleSeriesType
;
}
public
short
getNumBubbleValues
(
)
{
return
field_6_numBubbleValues
;
}
public
void
setNumBubbleValues
(
short
field_6_numBubbleValues
)
{
this
.
field_6_numBubbleValues
=
field_6_numBubbleValues
;
}
}
