package
org
.
apache
.
poi
.
hpsf
;
import
java
.
util
.
*
;
import
org
.
apache
.
poi
.
hpsf
.
littleendian
.
*
;
import
org
.
apache
.
poi
.
hpsf
.
wellknown
.
*
;
public
class
Section
{
protected
Map
dictionary
;
private
ClassID
formatID
;
public
ClassID
getFormatID
(
)
{
return
formatID
;
}
private
int
offset
;
public
int
getOffset
(
)
{
return
offset
;
}
private
int
size
;
public
int
getSize
(
)
{
return
size
;
}
private
int
propertyCount
;
public
int
getPropertyCount
(
)
{
return
propertyCount
;
}
private
Property
[
]
properties
;
public
Property
[
]
getProperties
(
)
{
return
properties
;
}
public
Section
(
final
byte
[
]
src
,
int
offset
)
{
formatID
=
new
ClassID
(
src
,
offset
)
;
offset
+=
ClassID
.
LENGTH
;
this
.
offset
=
new
DWord
(
src
,
offset
)
.
intValue
(
)
;
offset
=
this
.
offset
;
size
=
new
DWord
(
src
,
offset
)
.
intValue
(
)
;
offset
+=
DWord
.
LENGTH
;
propertyCount
=
new
DWord
(
src
,
offset
)
.
intValue
(
)
;
offset
+=
DWord
.
LENGTH
;
properties
=
new
Property
[
propertyCount
]
;
for
(
int
i
=
0
;
i
<
properties
.
length
;
i
++
)
{
final
int
id
=
new
DWord
(
src
,
offset
)
.
intValue
(
)
;
offset
+=
DWord
.
LENGTH
;
final
int
sOffset
=
new
DWord
(
src
,
offset
)
.
intValue
(
)
;
offset
+=
DWord
.
LENGTH
;
int
length
;
if
(
i
==
properties
.
length
-
1
)
length
=
src
.
length
-
this
.
offset
-
sOffset
;
else
length
=
new
DWord
(
src
,
offset
+
DWord
.
LENGTH
)
.
intValue
(
)
-
sOffset
;
properties
[
i
]
=
new
Property
(
id
,
src
,
this
.
offset
+
sOffset
,
length
)
;
}
dictionary
=
(
Map
)
getProperty
(
0
)
;
}
protected
Object
getProperty
(
final
int
id
)
{
wasNull
=
false
;
for
(
int
i
=
0
;
i
<
properties
.
length
;
i
++
)
if
(
id
==
properties
[
i
]
.
getID
(
)
)
return
properties
[
i
]
.
getValue
(
)
;
wasNull
=
true
;
return
null
;
}
protected
int
getPropertyIntValue
(
final
int
id
)
{
final
Integer
i
=
(
Integer
)
getProperty
(
id
)
;
if
(
i
!=
null
)
return
i
.
intValue
(
)
;
else
return
0
;
}
private
boolean
wasNull
;
public
boolean
wasNull
(
)
{
return
wasNull
;
}
public
String
getPIDString
(
final
int
pid
)
{
String
s
=
null
;
if
(
dictionary
!=
null
)
s
=
(
String
)
dictionary
.
get
(
new
Integer
(
pid
)
)
;
if
(
s
==
null
)
s
=
SectionIDMap
.
getPIDString
(
getFormatID
(
)
.
getBytes
(
)
,
pid
)
;
if
(
s
==
null
)
s
=
SectionIDMap
.
UNDEFINED
;
return
s
;
}
}
