package
org
.
apache
.
poi
.
hssf
.
record
;
import
org
.
apache
.
poi
.
util
.
LittleEndian
;
import
org
.
apache
.
poi
.
util
.
StringUtil
;
public
class
WriteAccessRecord
extends
Record
{
public
final
static
short
sid
=
0x5c
;
private
String
field_1_username
;
public
WriteAccessRecord
(
)
{
}
public
WriteAccessRecord
(
short
id
,
short
size
,
byte
[
]
data
)
{
super
(
id
,
size
,
data
)
;
}
public
WriteAccessRecord
(
short
id
,
short
size
,
byte
[
]
data
,
int
offset
)
{
super
(
id
,
size
,
data
,
offset
)
;
}
protected
void
validateSid
(
short
id
)
{
if
(
id
!=
sid
)
{
throw
new
RecordFormatException
(
"NOT A WRITEACCESS RECORD"
)
;
}
}
protected
void
fillFields
(
byte
[
]
data
,
short
size
,
int
offset
)
{
field_1_username
=
new
String
(
data
,
3
+
offset
,
data
.
length
-
4
)
;
}
public
void
setUsername
(
String
username
)
{
field_1_username
=
username
;
}
public
String
getUsername
(
)
{
return
field_1_username
;
}
public
String
toString
(
)
{
StringBuffer
buffer
=
new
StringBuffer
(
)
;
buffer
.
append
(
"[WRITEACCESS]\n"
)
;
buffer
.
append
(
"    .name            = "
)
.
append
(
field_1_username
.
toString
(
)
)
.
append
(
"\n"
)
;
buffer
.
append
(
"[/WRITEACCESS]\n"
)
;
return
buffer
.
toString
(
)
;
}
public
int
serialize
(
int
offset
,
byte
[
]
data
)
{
String
username
=
getUsername
(
)
;
StringBuffer
temp
=
new
StringBuffer
(
0x70
-
(
0x3
)
)
;
temp
.
append
(
username
)
;
while
(
temp
.
length
(
)
<
0x70
-
0x3
)
{
temp
.
append
(
" "
)
;
}
username
=
temp
.
toString
(
)
;
UnicodeString
str
=
new
UnicodeString
(
)
;
str
.
setString
(
username
)
;
str
.
setOptionFlags
(
(
byte
)
0x0
)
;
str
.
setCharCount
(
(
short
)
0x4
)
;
byte
[
]
stringbytes
=
str
.
serialize
(
)
;
LittleEndian
.
putShort
(
data
,
0
+
offset
,
sid
)
;
LittleEndian
.
putShort
(
data
,
2
+
offset
,
(
short
)
(
stringbytes
.
length
)
)
;
System
.
arraycopy
(
stringbytes
,
0
,
data
,
4
+
offset
,
stringbytes
.
length
)
;
return
getRecordSize
(
)
;
}
public
int
getRecordSize
(
)
{
return
116
;
}
public
short
getSid
(
)
{
return
this
.
sid
;
}
}
