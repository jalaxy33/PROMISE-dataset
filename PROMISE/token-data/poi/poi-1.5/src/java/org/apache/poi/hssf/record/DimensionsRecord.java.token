package
org
.
apache
.
poi
.
hssf
.
record
;
import
org
.
apache
.
poi
.
util
.
LittleEndian
;
public
class
DimensionsRecord
extends
Record
{
public
final
static
short
sid
=
0x200
;
private
int
field_1_first_row
;
private
int
field_2_last_row
;
private
short
field_3_first_col
;
private
short
field_4_last_col
;
private
short
field_5_zero
;
public
DimensionsRecord
(
)
{
}
public
DimensionsRecord
(
short
id
,
short
size
,
byte
[
]
data
)
{
super
(
id
,
size
,
data
)
;
}
public
DimensionsRecord
(
short
id
,
short
size
,
byte
[
]
data
,
int
offset
)
{
super
(
id
,
size
,
data
,
offset
)
;
}
protected
void
validateSid
(
short
id
)
{
if
(
id
!=
sid
)
{
throw
new
RecordFormatException
(
"NOT A valid DIMENSIONS RECORD"
)
;
}
}
protected
void
fillFields
(
byte
[
]
data
,
short
size
,
int
offset
)
{
field_1_first_row
=
LittleEndian
.
getInt
(
data
,
0
+
offset
)
;
field_2_last_row
=
LittleEndian
.
getInt
(
data
,
4
+
offset
)
;
field_3_first_col
=
LittleEndian
.
getShort
(
data
,
8
+
offset
)
;
field_4_last_col
=
LittleEndian
.
getShort
(
data
,
10
+
offset
)
;
field_5_zero
=
LittleEndian
.
getShort
(
data
,
12
+
offset
)
;
}
public
void
setFirstRow
(
int
row
)
{
field_1_first_row
=
row
;
}
public
void
setLastRow
(
int
row
)
{
field_2_last_row
=
row
;
}
public
void
setFirstCol
(
short
col
)
{
field_3_first_col
=
col
;
}
public
void
setLastCol
(
short
col
)
{
field_4_last_col
=
col
;
}
public
int
getFirstRow
(
)
{
return
field_1_first_row
;
}
public
int
getLastRow
(
)
{
return
field_2_last_row
;
}
public
short
getFirstCol
(
)
{
return
field_3_first_col
;
}
public
short
getLastCol
(
)
{
return
field_4_last_col
;
}
public
String
toString
(
)
{
StringBuffer
buffer
=
new
StringBuffer
(
)
;
buffer
.
append
(
"[DIMENSIONS]\n"
)
;
buffer
.
append
(
"    .firstrow       = "
)
.
append
(
Integer
.
toHexString
(
getFirstRow
(
)
)
)
.
append
(
"\n"
)
;
buffer
.
append
(
"    .lastrow        = "
)
.
append
(
Integer
.
toHexString
(
getLastRow
(
)
)
)
.
append
(
"\n"
)
;
buffer
.
append
(
"    .firstcol       = "
)
.
append
(
Integer
.
toHexString
(
getFirstCol
(
)
)
)
.
append
(
"\n"
)
;
buffer
.
append
(
"    .lastcol        = "
)
.
append
(
Integer
.
toHexString
(
getLastCol
(
)
)
)
.
append
(
"\n"
)
;
buffer
.
append
(
"    .zero           = "
)
.
append
(
Integer
.
toHexString
(
field_5_zero
)
)
.
append
(
"\n"
)
;
buffer
.
append
(
"[/DIMENSIONS]\n"
)
;
return
buffer
.
toString
(
)
;
}
public
int
serialize
(
int
offset
,
byte
[
]
data
)
{
LittleEndian
.
putShort
(
data
,
0
+
offset
,
sid
)
;
LittleEndian
.
putShort
(
data
,
2
+
offset
,
(
short
)
14
)
;
LittleEndian
.
putInt
(
data
,
4
+
offset
,
getFirstRow
(
)
)
;
LittleEndian
.
putInt
(
data
,
8
+
offset
,
getLastRow
(
)
)
;
LittleEndian
.
putShort
(
data
,
12
+
offset
,
getFirstCol
(
)
)
;
LittleEndian
.
putShort
(
data
,
14
+
offset
,
getLastCol
(
)
)
;
LittleEndian
.
putShort
(
data
,
16
+
offset
,
(
short
)
0
)
;
return
getRecordSize
(
)
;
}
public
int
getRecordSize
(
)
{
return
18
;
}
public
short
getSid
(
)
{
return
this
.
sid
;
}
}
