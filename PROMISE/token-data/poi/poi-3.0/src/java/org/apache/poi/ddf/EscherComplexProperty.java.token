package
org
.
apache
.
poi
.
ddf
;
import
org
.
apache
.
poi
.
util
.
LittleEndian
;
import
org
.
apache
.
poi
.
util
.
HexDump
;
import
java
.
util
.
Arrays
;
import
java
.
io
.
ByteArrayOutputStream
;
import
java
.
io
.
IOException
;
public
class
EscherComplexProperty
extends
EscherProperty
{
byte
[
]
complexData
=
new
byte
[
0
]
;
public
EscherComplexProperty
(
short
id
,
byte
[
]
complexData
)
{
super
(
id
)
;
this
.
complexData
=
complexData
;
}
public
EscherComplexProperty
(
short
propertyNumber
,
boolean
isBlipId
,
byte
[
]
complexData
)
{
super
(
propertyNumber
,
true
,
isBlipId
)
;
this
.
complexData
=
complexData
;
}
public
int
serializeSimplePart
(
byte
[
]
data
,
int
pos
)
{
LittleEndian
.
putShort
(
data
,
pos
,
getId
(
)
)
;
LittleEndian
.
putInt
(
data
,
pos
+
2
,
complexData
.
length
)
;
return
6
;
}
public
int
serializeComplexPart
(
byte
[
]
data
,
int
pos
)
{
System
.
arraycopy
(
complexData
,
0
,
data
,
pos
,
complexData
.
length
)
;
return
complexData
.
length
;
}
public
byte
[
]
getComplexData
(
)
{
return
complexData
;
}
public
boolean
equals
(
Object
o
)
{
if
(
this
==
o
)
return
true
;
if
(
!
(
o
instanceof
EscherComplexProperty
)
)
return
false
;
final
EscherComplexProperty
escherComplexProperty
=
(
EscherComplexProperty
)
o
;
if
(
!
Arrays
.
equals
(
complexData
,
escherComplexProperty
.
complexData
)
)
return
false
;
return
true
;
}
public
int
getPropertySize
(
)
{
return
6
+
complexData
.
length
;
}
public
int
hashCode
(
)
{
return
getId
(
)
*
11
;
}
public
String
toString
(
)
{
String
dataStr
;
ByteArrayOutputStream
b
=
new
ByteArrayOutputStream
(
)
;
try
{
HexDump
.
dump
(
this
.
complexData
,
0
,
b
,
0
)
;
dataStr
=
b
.
toString
(
)
;
}
catch
(
Exception
e
)
{
dataStr
=
e
.
toString
(
)
;
}
finally
{
try
{
b
.
close
(
)
;
}
catch
(
IOException
e
)
{
e
.
printStackTrace
(
)
;
}
}
return
"propNum: "
+
getPropertyNumber
(
)
+
", propName: "
+
EscherProperties
.
getPropertyName
(
getPropertyNumber
(
)
)
+
", complex: "
+
isComplex
(
)
+
", blipId: "
+
isBlipId
(
)
+
", data: "
+
System
.
getProperty
(
"line.separator"
)
+
dataStr
;
}
}
