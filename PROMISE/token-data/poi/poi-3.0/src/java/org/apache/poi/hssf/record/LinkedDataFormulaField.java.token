package
org
.
apache
.
poi
.
hssf
.
record
;
import
org
.
apache
.
poi
.
hssf
.
record
.
formula
.
Ptg
;
import
org
.
apache
.
poi
.
util
.
LittleEndian
;
import
java
.
util
.
Stack
;
import
java
.
util
.
Iterator
;
public
class
LinkedDataFormulaField
implements
CustomField
{
Stack
formulaTokens
=
new
Stack
(
)
;
public
int
getSize
(
)
{
int
size
=
0
;
for
(
Iterator
iterator
=
formulaTokens
.
iterator
(
)
;
iterator
.
hasNext
(
)
;
)
{
Ptg
token
=
(
Ptg
)
iterator
.
next
(
)
;
size
+=
token
.
getSize
(
)
;
}
return
size
+
2
;
}
public
int
fillField
(
RecordInputStream
in
)
{
short
tokenSize
=
in
.
readShort
(
)
;
formulaTokens
=
Ptg
.
createParsedExpressionTokens
(
tokenSize
,
in
)
;
return
tokenSize
+
2
;
}
public
void
toString
(
StringBuffer
buffer
)
{
for
(
int
k
=
0
;
k
<
formulaTokens
.
size
(
)
;
k
++
)
{
buffer
.
append
(
"Formula "
)
.
append
(
k
)
.
append
(
"="
)
.
append
(
formulaTokens
.
get
(
k
)
.
toString
(
)
)
.
append
(
"\n"
)
.
append
(
(
(
Ptg
)
formulaTokens
.
get
(
k
)
)
.
toDebugString
(
)
)
.
append
(
"\n"
)
;
}
}
public
String
toString
(
)
{
StringBuffer
b
=
new
StringBuffer
(
)
;
toString
(
b
)
;
return
b
.
toString
(
)
;
}
public
int
serializeField
(
int
offset
,
byte
[
]
data
)
{
int
size
=
getSize
(
)
;
LittleEndian
.
putShort
(
data
,
offset
,
(
short
)
(
size
-
2
)
)
;
int
pos
=
offset
+
2
;
pos
+=
Ptg
.
serializePtgStack
(
formulaTokens
,
data
,
pos
)
;
return
size
;
}
public
Object
clone
(
)
{
try
{
return
super
.
clone
(
)
;
}
catch
(
CloneNotSupportedException
e
)
{
return
null
;
}
}
public
void
setFormulaTokens
(
Stack
formulaTokens
)
{
this
.
formulaTokens
=
(
Stack
)
formulaTokens
.
clone
(
)
;
}
public
Stack
getFormulaTokens
(
)
{
return
(
Stack
)
this
.
formulaTokens
.
clone
(
)
;
}
}
