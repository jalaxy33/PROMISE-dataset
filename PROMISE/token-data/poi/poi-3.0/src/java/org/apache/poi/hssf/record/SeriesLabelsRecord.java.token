package
org
.
apache
.
poi
.
hssf
.
record
;
import
org
.
apache
.
poi
.
util
.
*
;
public
class
SeriesLabelsRecord
extends
Record
{
public
final
static
short
sid
=
0x100c
;
private
short
field_1_formatFlags
;
private
BitField
showActual
=
BitFieldFactory
.
getInstance
(
0x1
)
;
private
BitField
showPercent
=
BitFieldFactory
.
getInstance
(
0x2
)
;
private
BitField
labelAsPercentage
=
BitFieldFactory
.
getInstance
(
0x4
)
;
private
BitField
smoothedLine
=
BitFieldFactory
.
getInstance
(
0x8
)
;
private
BitField
showLabel
=
BitFieldFactory
.
getInstance
(
0x10
)
;
private
BitField
showBubbleSizes
=
BitFieldFactory
.
getInstance
(
0x20
)
;
public
SeriesLabelsRecord
(
)
{
}
public
SeriesLabelsRecord
(
RecordInputStream
in
)
{
super
(
in
)
;
}
protected
void
validateSid
(
short
id
)
{
if
(
id
!=
sid
)
{
throw
new
RecordFormatException
(
"Not a SeriesLabels record"
)
;
}
}
protected
void
fillFields
(
RecordInputStream
in
)
{
field_1_formatFlags
=
in
.
readShort
(
)
;
}
public
String
toString
(
)
{
StringBuffer
buffer
=
new
StringBuffer
(
)
;
buffer
.
append
(
"[ATTACHEDLABEL]\n"
)
;
buffer
.
append
(
"    .formatFlags          = "
)
.
append
(
"0x"
)
.
append
(
HexDump
.
toHex
(
getFormatFlags
(
)
)
)
.
append
(
" ("
)
.
append
(
getFormatFlags
(
)
)
.
append
(
" )"
)
;
buffer
.
append
(
System
.
getProperty
(
"line.separator"
)
)
;
buffer
.
append
(
"         .showActual               = "
)
.
append
(
isShowActual
(
)
)
.
append
(
'\n'
)
;
buffer
.
append
(
"         .showPercent              = "
)
.
append
(
isShowPercent
(
)
)
.
append
(
'\n'
)
;
buffer
.
append
(
"         .labelAsPercentage        = "
)
.
append
(
isLabelAsPercentage
(
)
)
.
append
(
'\n'
)
;
buffer
.
append
(
"         .smoothedLine             = "
)
.
append
(
isSmoothedLine
(
)
)
.
append
(
'\n'
)
;
buffer
.
append
(
"         .showLabel                = "
)
.
append
(
isShowLabel
(
)
)
.
append
(
'\n'
)
;
buffer
.
append
(
"         .showBubbleSizes          = "
)
.
append
(
isShowBubbleSizes
(
)
)
.
append
(
'\n'
)
;
buffer
.
append
(
"[/ATTACHEDLABEL]\n"
)
;
return
buffer
.
toString
(
)
;
}
public
int
serialize
(
int
offset
,
byte
[
]
data
)
{
int
pos
=
0
;
LittleEndian
.
putShort
(
data
,
0
+
offset
,
sid
)
;
LittleEndian
.
putShort
(
data
,
2
+
offset
,
(
short
)
(
getRecordSize
(
)
-
4
)
)
;
LittleEndian
.
putShort
(
data
,
4
+
offset
+
pos
,
field_1_formatFlags
)
;
return
getRecordSize
(
)
;
}
public
int
getRecordSize
(
)
{
return
4
+
2
;
}
public
short
getSid
(
)
{
return
sid
;
}
public
Object
clone
(
)
{
SeriesLabelsRecord
rec
=
new
SeriesLabelsRecord
(
)
;
rec
.
field_1_formatFlags
=
field_1_formatFlags
;
return
rec
;
}
public
short
getFormatFlags
(
)
{
return
field_1_formatFlags
;
}
public
void
setFormatFlags
(
short
field_1_formatFlags
)
{
this
.
field_1_formatFlags
=
field_1_formatFlags
;
}
public
void
setShowActual
(
boolean
value
)
{
field_1_formatFlags
=
showActual
.
setShortBoolean
(
field_1_formatFlags
,
value
)
;
}
public
boolean
isShowActual
(
)
{
return
showActual
.
isSet
(
field_1_formatFlags
)
;
}
public
void
setShowPercent
(
boolean
value
)
{
field_1_formatFlags
=
showPercent
.
setShortBoolean
(
field_1_formatFlags
,
value
)
;
}
public
boolean
isShowPercent
(
)
{
return
showPercent
.
isSet
(
field_1_formatFlags
)
;
}
public
void
setLabelAsPercentage
(
boolean
value
)
{
field_1_formatFlags
=
labelAsPercentage
.
setShortBoolean
(
field_1_formatFlags
,
value
)
;
}
public
boolean
isLabelAsPercentage
(
)
{
return
labelAsPercentage
.
isSet
(
field_1_formatFlags
)
;
}
public
void
setSmoothedLine
(
boolean
value
)
{
field_1_formatFlags
=
smoothedLine
.
setShortBoolean
(
field_1_formatFlags
,
value
)
;
}
public
boolean
isSmoothedLine
(
)
{
return
smoothedLine
.
isSet
(
field_1_formatFlags
)
;
}
public
void
setShowLabel
(
boolean
value
)
{
field_1_formatFlags
=
showLabel
.
setShortBoolean
(
field_1_formatFlags
,
value
)
;
}
public
boolean
isShowLabel
(
)
{
return
showLabel
.
isSet
(
field_1_formatFlags
)
;
}
public
void
setShowBubbleSizes
(
boolean
value
)
{
field_1_formatFlags
=
showBubbleSizes
.
setShortBoolean
(
field_1_formatFlags
,
value
)
;
}
public
boolean
isShowBubbleSizes
(
)
{
return
showBubbleSizes
.
isSet
(
field_1_formatFlags
)
;
}
}
