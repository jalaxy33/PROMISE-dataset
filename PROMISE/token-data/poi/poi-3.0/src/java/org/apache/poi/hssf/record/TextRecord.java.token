package
org
.
apache
.
poi
.
hssf
.
record
;
import
org
.
apache
.
poi
.
util
.
*
;
public
class
TextRecord
extends
Record
{
public
final
static
short
sid
=
0x1025
;
private
byte
field_1_horizontalAlignment
;
public
final
static
byte
HORIZONTAL_ALIGNMENT_LEFT
=
1
;
public
final
static
byte
HORIZONTAL_ALIGNMENT_CENTER
=
2
;
public
final
static
byte
HORIZONTAL_ALIGNMENT_BOTTOM
=
3
;
public
final
static
byte
HORIZONTAL_ALIGNMENT_JUSTIFY
=
4
;
private
byte
field_2_verticalAlignment
;
public
final
static
byte
VERTICAL_ALIGNMENT_TOP
=
1
;
public
final
static
byte
VERTICAL_ALIGNMENT_CENTER
=
2
;
public
final
static
byte
VERTICAL_ALIGNMENT_BOTTOM
=
3
;
public
final
static
byte
VERTICAL_ALIGNMENT_JUSTIFY
=
4
;
private
short
field_3_displayMode
;
public
final
static
short
DISPLAY_MODE_TRANSPARENT
=
1
;
public
final
static
short
DISPLAY_MODE_OPAQUE
=
2
;
private
int
field_4_rgbColor
;
private
int
field_5_x
;
private
int
field_6_y
;
private
int
field_7_width
;
private
int
field_8_height
;
private
short
field_9_options1
;
private
BitField
autoColor
=
BitFieldFactory
.
getInstance
(
0x1
)
;
private
BitField
showKey
=
BitFieldFactory
.
getInstance
(
0x2
)
;
private
BitField
showValue
=
BitFieldFactory
.
getInstance
(
0x4
)
;
private
BitField
vertical
=
BitFieldFactory
.
getInstance
(
0x8
)
;
private
BitField
autoGeneratedText
=
BitFieldFactory
.
getInstance
(
0x10
)
;
private
BitField
generated
=
BitFieldFactory
.
getInstance
(
0x20
)
;
private
BitField
autoLabelDeleted
=
BitFieldFactory
.
getInstance
(
0x40
)
;
private
BitField
autoBackground
=
BitFieldFactory
.
getInstance
(
0x80
)
;
private
BitField
rotation
=
BitFieldFactory
.
getInstance
(
0x0700
)
;
public
final
static
short
ROTATION_NONE
=
0
;
public
final
static
short
ROTATION_TOP_TO_BOTTOM
=
1
;
public
final
static
short
ROTATION_ROTATED_90_DEGREES
=
2
;
public
final
static
short
ROTATION_ROTATED_90_DEGREES_CLOCKWISE
=
3
;
private
BitField
showCategoryLabelAsPercentage
=
BitFieldFactory
.
getInstance
(
0x800
)
;
private
BitField
showValueAsPercentage
=
BitFieldFactory
.
getInstance
(
0x1000
)
;
private
BitField
showBubbleSizes
=
BitFieldFactory
.
getInstance
(
0x2000
)
;
private
BitField
showLabel
=
BitFieldFactory
.
getInstance
(
0x4000
)
;
private
short
field_10_indexOfColorValue
;
private
short
field_11_options2
;
private
BitField
dataLabelPlacement
=
BitFieldFactory
.
getInstance
(
0x000F
)
;
public
final
static
short
DATA_LABEL_PLACEMENT_CHART_DEPENDENT
=
0
;
public
final
static
short
DATA_LABEL_PLACEMENT_OUTSIDE
=
1
;
public
final
static
short
DATA_LABEL_PLACEMENT_INSIDE
=
2
;
public
final
static
short
DATA_LABEL_PLACEMENT_CENTER
=
3
;
public
final
static
short
DATA_LABEL_PLACEMENT_AXIS
=
4
;
public
final
static
short
DATA_LABEL_PLACEMENT_ABOVE
=
5
;
public
final
static
short
DATA_LABEL_PLACEMENT_BELOW
=
6
;
public
final
static
short
DATA_LABEL_PLACEMENT_LEFT
=
7
;
public
final
static
short
DATA_LABEL_PLACEMENT_RIGHT
=
8
;
public
final
static
short
DATA_LABEL_PLACEMENT_AUTO
=
9
;
public
final
static
short
DATA_LABEL_PLACEMENT_USER_MOVED
=
10
;
private
short
field_12_textRotation
;
public
TextRecord
(
)
{
}
public
TextRecord
(
RecordInputStream
in
)
{
super
(
in
)
;
}
protected
void
validateSid
(
short
id
)
{
if
(
id
!=
sid
)
{
throw
new
RecordFormatException
(
"Not a Text record"
)
;
}
}
protected
void
fillFields
(
RecordInputStream
in
)
{
field_1_horizontalAlignment
=
in
.
readByte
(
)
;
field_2_verticalAlignment
=
in
.
readByte
(
)
;
field_3_displayMode
=
in
.
readShort
(
)
;
field_4_rgbColor
=
in
.
readInt
(
)
;
field_5_x
=
in
.
readInt
(
)
;
field_6_y
=
in
.
readInt
(
)
;
field_7_width
=
in
.
readInt
(
)
;
field_8_height
=
in
.
readInt
(
)
;
field_9_options1
=
in
.
readShort
(
)
;
field_10_indexOfColorValue
=
in
.
readShort
(
)
;
field_11_options2
=
in
.
readShort
(
)
;
field_12_textRotation
=
in
.
readShort
(
)
;
}
public
String
toString
(
)
{
StringBuffer
buffer
=
new
StringBuffer
(
)
;
buffer
.
append
(
"[TEXT]\n"
)
;
buffer
.
append
(
"    .horizontalAlignment  = "
)
.
append
(
"0x"
)
.
append
(
HexDump
.
toHex
(
getHorizontalAlignment
(
)
)
)
.
append
(
" ("
)
.
append
(
getHorizontalAlignment
(
)
)
.
append
(
" )"
)
;
buffer
.
append
(
System
.
getProperty
(
"line.separator"
)
)
;
buffer
.
append
(
"    .verticalAlignment    = "
)
.
append
(
"0x"
)
.
append
(
HexDump
.
toHex
(
getVerticalAlignment
(
)
)
)
.
append
(
" ("
)
.
append
(
getVerticalAlignment
(
)
)
.
append
(
" )"
)
;
buffer
.
append
(
System
.
getProperty
(
"line.separator"
)
)
;
buffer
.
append
(
"    .displayMode          = "
)
.
append
(
"0x"
)
.
append
(
HexDump
.
toHex
(
getDisplayMode
(
)
)
)
.
append
(
" ("
)
.
append
(
getDisplayMode
(
)
)
.
append
(
" )"
)
;
buffer
.
append
(
System
.
getProperty
(
"line.separator"
)
)
;
buffer
.
append
(
"    .rgbColor             = "
)
.
append
(
"0x"
)
.
append
(
HexDump
.
toHex
(
getRgbColor
(
)
)
)
.
append
(
" ("
)
.
append
(
getRgbColor
(
)
)
.
append
(
" )"
)
;
buffer
.
append
(
System
.
getProperty
(
"line.separator"
)
)
;
buffer
.
append
(
"    .x                    = "
)
.
append
(
"0x"
)
.
append
(
HexDump
.
toHex
(
getX
(
)
)
)
.
append
(
" ("
)
.
append
(
getX
(
)
)
.
append
(
" )"
)
;
buffer
.
append
(
System
.
getProperty
(
"line.separator"
)
)
;
buffer
.
append
(
"    .y                    = "
)
.
append
(
"0x"
)
.
append
(
HexDump
.
toHex
(
getY
(
)
)
)
.
append
(
" ("
)
.
append
(
getY
(
)
)
.
append
(
" )"
)
;
buffer
.
append
(
System
.
getProperty
(
"line.separator"
)
)
;
buffer
.
append
(
"    .width                = "
)
.
append
(
"0x"
)
.
append
(
HexDump
.
toHex
(
getWidth
(
)
)
)
.
append
(
" ("
)
.
append
(
getWidth
(
)
)
.
append
(
" )"
)
;
buffer
.
append
(
System
.
getProperty
(
"line.separator"
)
)
;
buffer
.
append
(
"    .height               = "
)
.
append
(
"0x"
)
.
append
(
HexDump
.
toHex
(
getHeight
(
)
)
)
.
append
(
" ("
)
.
append
(
getHeight
(
)
)
.
append
(
" )"
)
;
buffer
.
append
(
System
.
getProperty
(
"line.separator"
)
)
;
buffer
.
append
(
"    .options1             = "
)
.
append
(
"0x"
)
.
append
(
HexDump
.
toHex
(
getOptions1
(
)
)
)
.
append
(
" ("
)
.
append
(
getOptions1
(
)
)
.
append
(
" )"
)
;
buffer
.
append
(
System
.
getProperty
(
"line.separator"
)
)
;
buffer
.
append
(
"         .autoColor                = "
)
.
append
(
isAutoColor
(
)
)
.
append
(
'\n'
)
;
buffer
.
append
(
"         .showKey                  = "
)
.
append
(
isShowKey
(
)
)
.
append
(
'\n'
)
;
buffer
.
append
(
"         .showValue                = "
)
.
append
(
isShowValue
(
)
)
.
append
(
'\n'
)
;
buffer
.
append
(
"         .vertical                 = "
)
.
append
(
isVertical
(
)
)
.
append
(
'\n'
)
;
buffer
.
append
(
"         .autoGeneratedText        = "
)
.
append
(
isAutoGeneratedText
(
)
)
.
append
(
'\n'
)
;
buffer
.
append
(
"         .generated                = "
)
.
append
(
isGenerated
(
)
)
.
append
(
'\n'
)
;
buffer
.
append
(
"         .autoLabelDeleted         = "
)
.
append
(
isAutoLabelDeleted
(
)
)
.
append
(
'\n'
)
;
buffer
.
append
(
"         .autoBackground           = "
)
.
append
(
isAutoBackground
(
)
)
.
append
(
'\n'
)
;
buffer
.
append
(
"         .rotation                 = "
)
.
append
(
getRotation
(
)
)
.
append
(
'\n'
)
;
buffer
.
append
(
"         .showCategoryLabelAsPercentage     = "
)
.
append
(
isShowCategoryLabelAsPercentage
(
)
)
.
append
(
'\n'
)
;
buffer
.
append
(
"         .showValueAsPercentage     = "
)
.
append
(
isShowValueAsPercentage
(
)
)
.
append
(
'\n'
)
;
buffer
.
append
(
"         .showBubbleSizes          = "
)
.
append
(
isShowBubbleSizes
(
)
)
.
append
(
'\n'
)
;
buffer
.
append
(
"         .showLabel                = "
)
.
append
(
isShowLabel
(
)
)
.
append
(
'\n'
)
;
buffer
.
append
(
"    .indexOfColorValue    = "
)
.
append
(
"0x"
)
.
append
(
HexDump
.
toHex
(
getIndexOfColorValue
(
)
)
)
.
append
(
" ("
)
.
append
(
getIndexOfColorValue
(
)
)
.
append
(
" )"
)
;
buffer
.
append
(
System
.
getProperty
(
"line.separator"
)
)
;
buffer
.
append
(
"    .options2             = "
)
.
append
(
"0x"
)
.
append
(
HexDump
.
toHex
(
getOptions2
(
)
)
)
.
append
(
" ("
)
.
append
(
getOptions2
(
)
)
.
append
(
" )"
)
;
buffer
.
append
(
System
.
getProperty
(
"line.separator"
)
)
;
buffer
.
append
(
"         .dataLabelPlacement       = "
)
.
append
(
getDataLabelPlacement
(
)
)
.
append
(
'\n'
)
;
buffer
.
append
(
"    .textRotation         = "
)
.
append
(
"0x"
)
.
append
(
HexDump
.
toHex
(
getTextRotation
(
)
)
)
.
append
(
" ("
)
.
append
(
getTextRotation
(
)
)
.
append
(
" )"
)
;
buffer
.
append
(
System
.
getProperty
(
"line.separator"
)
)
;
buffer
.
append
(
"[/TEXT]\n"
)
;
return
buffer
.
toString
(
)
;
}
public
int
serialize
(
int
offset
,
byte
[
]
data
)
{
int
pos
=
0
;
LittleEndian
.
putShort
(
data
,
0
+
offset
,
sid
)
;
LittleEndian
.
putShort
(
data
,
2
+
offset
,
(
short
)
(
getRecordSize
(
)
-
4
)
)
;
data
[
4
+
offset
+
pos
]
=
field_1_horizontalAlignment
;
data
[
5
+
offset
+
pos
]
=
field_2_verticalAlignment
;
LittleEndian
.
putShort
(
data
,
6
+
offset
+
pos
,
field_3_displayMode
)
;
LittleEndian
.
putInt
(
data
,
8
+
offset
+
pos
,
field_4_rgbColor
)
;
LittleEndian
.
putInt
(
data
,
12
+
offset
+
pos
,
field_5_x
)
;
LittleEndian
.
putInt
(
data
,
16
+
offset
+
pos
,
field_6_y
)
;
LittleEndian
.
putInt
(
data
,
20
+
offset
+
pos
,
field_7_width
)
;
LittleEndian
.
putInt
(
data
,
24
+
offset
+
pos
,
field_8_height
)
;
LittleEndian
.
putShort
(
data
,
28
+
offset
+
pos
,
field_9_options1
)
;
LittleEndian
.
putShort
(
data
,
30
+
offset
+
pos
,
field_10_indexOfColorValue
)
;
LittleEndian
.
putShort
(
data
,
32
+
offset
+
pos
,
field_11_options2
)
;
LittleEndian
.
putShort
(
data
,
34
+
offset
+
pos
,
field_12_textRotation
)
;
return
getRecordSize
(
)
;
}
public
int
getRecordSize
(
)
{
return
4
+
1
+
1
+
2
+
4
+
4
+
4
+
4
+
4
+
2
+
2
+
2
+
2
;
}
public
short
getSid
(
)
{
return
sid
;
}
public
Object
clone
(
)
{
TextRecord
rec
=
new
TextRecord
(
)
;
rec
.
field_1_horizontalAlignment
=
field_1_horizontalAlignment
;
rec
.
field_2_verticalAlignment
=
field_2_verticalAlignment
;
rec
.
field_3_displayMode
=
field_3_displayMode
;
rec
.
field_4_rgbColor
=
field_4_rgbColor
;
rec
.
field_5_x
=
field_5_x
;
rec
.
field_6_y
=
field_6_y
;
rec
.
field_7_width
=
field_7_width
;
rec
.
field_8_height
=
field_8_height
;
rec
.
field_9_options1
=
field_9_options1
;
rec
.
field_10_indexOfColorValue
=
field_10_indexOfColorValue
;
rec
.
field_11_options2
=
field_11_options2
;
rec
.
field_12_textRotation
=
field_12_textRotation
;
return
rec
;
}
public
byte
getHorizontalAlignment
(
)
{
return
field_1_horizontalAlignment
;
}
public
void
setHorizontalAlignment
(
byte
field_1_horizontalAlignment
)
{
this
.
field_1_horizontalAlignment
=
field_1_horizontalAlignment
;
}
public
byte
getVerticalAlignment
(
)
{
return
field_2_verticalAlignment
;
}
public
void
setVerticalAlignment
(
byte
field_2_verticalAlignment
)
{
this
.
field_2_verticalAlignment
=
field_2_verticalAlignment
;
}
public
short
getDisplayMode
(
)
{
return
field_3_displayMode
;
}
public
void
setDisplayMode
(
short
field_3_displayMode
)
{
this
.
field_3_displayMode
=
field_3_displayMode
;
}
public
int
getRgbColor
(
)
{
return
field_4_rgbColor
;
}
public
void
setRgbColor
(
int
field_4_rgbColor
)
{
this
.
field_4_rgbColor
=
field_4_rgbColor
;
}
public
int
getX
(
)
{
return
field_5_x
;
}
public
void
setX
(
int
field_5_x
)
{
this
.
field_5_x
=
field_5_x
;
}
public
int
getY
(
)
{
return
field_6_y
;
}
public
void
setY
(
int
field_6_y
)
{
this
.
field_6_y
=
field_6_y
;
}
public
int
getWidth
(
)
{
return
field_7_width
;
}
public
void
setWidth
(
int
field_7_width
)
{
this
.
field_7_width
=
field_7_width
;
}
public
int
getHeight
(
)
{
return
field_8_height
;
}
public
void
setHeight
(
int
field_8_height
)
{
this
.
field_8_height
=
field_8_height
;
}
public
short
getOptions1
(
)
{
return
field_9_options1
;
}
public
void
setOptions1
(
short
field_9_options1
)
{
this
.
field_9_options1
=
field_9_options1
;
}
public
short
getIndexOfColorValue
(
)
{
return
field_10_indexOfColorValue
;
}
public
void
setIndexOfColorValue
(
short
field_10_indexOfColorValue
)
{
this
.
field_10_indexOfColorValue
=
field_10_indexOfColorValue
;
}
public
short
getOptions2
(
)
{
return
field_11_options2
;
}
public
void
setOptions2
(
short
field_11_options2
)
{
this
.
field_11_options2
=
field_11_options2
;
}
public
short
getTextRotation
(
)
{
return
field_12_textRotation
;
}
public
void
setTextRotation
(
short
field_12_textRotation
)
{
this
.
field_12_textRotation
=
field_12_textRotation
;
}
public
void
setAutoColor
(
boolean
value
)
{
field_9_options1
=
autoColor
.
setShortBoolean
(
field_9_options1
,
value
)
;
}
public
boolean
isAutoColor
(
)
{
return
autoColor
.
isSet
(
field_9_options1
)
;
}
public
void
setShowKey
(
boolean
value
)
{
field_9_options1
=
showKey
.
setShortBoolean
(
field_9_options1
,
value
)
;
}
public
boolean
isShowKey
(
)
{
return
showKey
.
isSet
(
field_9_options1
)
;
}
public
void
setShowValue
(
boolean
value
)
{
field_9_options1
=
showValue
.
setShortBoolean
(
field_9_options1
,
value
)
;
}
public
boolean
isShowValue
(
)
{
return
showValue
.
isSet
(
field_9_options1
)
;
}
public
void
setVertical
(
boolean
value
)
{
field_9_options1
=
vertical
.
setShortBoolean
(
field_9_options1
,
value
)
;
}
public
boolean
isVertical
(
)
{
return
vertical
.
isSet
(
field_9_options1
)
;
}
public
void
setAutoGeneratedText
(
boolean
value
)
{
field_9_options1
=
autoGeneratedText
.
setShortBoolean
(
field_9_options1
,
value
)
;
}
public
boolean
isAutoGeneratedText
(
)
{
return
autoGeneratedText
.
isSet
(
field_9_options1
)
;
}
public
void
setGenerated
(
boolean
value
)
{
field_9_options1
=
generated
.
setShortBoolean
(
field_9_options1
,
value
)
;
}
public
boolean
isGenerated
(
)
{
return
generated
.
isSet
(
field_9_options1
)
;
}
public
void
setAutoLabelDeleted
(
boolean
value
)
{
field_9_options1
=
autoLabelDeleted
.
setShortBoolean
(
field_9_options1
,
value
)
;
}
public
boolean
isAutoLabelDeleted
(
)
{
return
autoLabelDeleted
.
isSet
(
field_9_options1
)
;
}
public
void
setAutoBackground
(
boolean
value
)
{
field_9_options1
=
autoBackground
.
setShortBoolean
(
field_9_options1
,
value
)
;
}
public
boolean
isAutoBackground
(
)
{
return
autoBackground
.
isSet
(
field_9_options1
)
;
}
public
void
setRotation
(
short
value
)
{
field_9_options1
=
rotation
.
setShortValue
(
field_9_options1
,
value
)
;
}
public
short
getRotation
(
)
{
return
rotation
.
getShortValue
(
field_9_options1
)
;
}
public
void
setShowCategoryLabelAsPercentage
(
boolean
value
)
{
field_9_options1
=
showCategoryLabelAsPercentage
.
setShortBoolean
(
field_9_options1
,
value
)
;
}
public
boolean
isShowCategoryLabelAsPercentage
(
)
{
return
showCategoryLabelAsPercentage
.
isSet
(
field_9_options1
)
;
}
public
void
setShowValueAsPercentage
(
boolean
value
)
{
field_9_options1
=
showValueAsPercentage
.
setShortBoolean
(
field_9_options1
,
value
)
;
}
public
boolean
isShowValueAsPercentage
(
)
{
return
showValueAsPercentage
.
isSet
(
field_9_options1
)
;
}
public
void
setShowBubbleSizes
(
boolean
value
)
{
field_9_options1
=
showBubbleSizes
.
setShortBoolean
(
field_9_options1
,
value
)
;
}
public
boolean
isShowBubbleSizes
(
)
{
return
showBubbleSizes
.
isSet
(
field_9_options1
)
;
}
public
void
setShowLabel
(
boolean
value
)
{
field_9_options1
=
showLabel
.
setShortBoolean
(
field_9_options1
,
value
)
;
}
public
boolean
isShowLabel
(
)
{
return
showLabel
.
isSet
(
field_9_options1
)
;
}
public
void
setDataLabelPlacement
(
short
value
)
{
field_11_options2
=
dataLabelPlacement
.
setShortValue
(
field_11_options2
,
value
)
;
}
public
short
getDataLabelPlacement
(
)
{
return
dataLabelPlacement
.
getShortValue
(
field_11_options2
)
;
}
}
