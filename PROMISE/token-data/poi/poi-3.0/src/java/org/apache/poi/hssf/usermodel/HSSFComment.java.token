package
org
.
apache
.
poi
.
hssf
.
usermodel
;
import
org
.
apache
.
poi
.
hssf
.
record
.
EscherAggregate
;
import
org
.
apache
.
poi
.
hssf
.
record
.
NoteRecord
;
import
org
.
apache
.
poi
.
hssf
.
record
.
TextObjectRecord
;
import
org
.
apache
.
poi
.
ddf
.
*
;
import
java
.
util
.
Map
;
import
java
.
util
.
List
;
import
java
.
util
.
Iterator
;
public
class
HSSFComment
extends
HSSFTextbox
{
private
boolean
visible
;
private
short
col
,
row
;
private
String
author
;
private
NoteRecord
note
=
null
;
private
TextObjectRecord
txo
=
null
;
public
HSSFComment
(
HSSFShape
parent
,
HSSFAnchor
anchor
)
{
super
(
parent
,
anchor
)
;
setShapeType
(
OBJECT_TYPE_COMMENT
)
;
fillColor
=
0x08000050
;
visible
=
false
;
author
=
""
;
}
protected
HSSFComment
(
NoteRecord
note
,
TextObjectRecord
txo
)
{
this
(
(
HSSFShape
)
null
,
(
HSSFAnchor
)
null
)
;
this
.
txo
=
txo
;
this
.
note
=
note
;
}
public
void
setVisible
(
boolean
visible
)
{
if
(
note
!=
null
)
note
.
setFlags
(
visible
?
NoteRecord
.
NOTE_VISIBLE
:
NoteRecord
.
NOTE_HIDDEN
)
;
this
.
visible
=
visible
;
}
public
boolean
isVisible
(
)
{
return
this
.
visible
;
}
public
int
getRow
(
)
{
return
row
;
}
public
void
setRow
(
int
row
)
{
if
(
note
!=
null
)
note
.
setRow
(
(
short
)
row
)
;
this
.
row
=
(
short
)
row
;
}
public
short
getColumn
(
)
{
return
col
;
}
public
void
setColumn
(
short
col
)
{
if
(
note
!=
null
)
note
.
setColumn
(
col
)
;
this
.
col
=
col
;
}
public
String
getAuthor
(
)
{
return
author
;
}
public
void
setAuthor
(
String
author
)
{
if
(
note
!=
null
)
note
.
setAuthor
(
author
)
;
this
.
author
=
author
;
}
public
void
setString
(
HSSFRichTextString
string
)
{
if
(
string
.
numFormattingRuns
(
)
==
0
)
string
.
applyFont
(
(
short
)
0
)
;
if
(
txo
!=
null
)
{
int
frLength
=
(
string
.
numFormattingRuns
(
)
+
1
)
*
8
;
txo
.
setFormattingRunLength
(
(
short
)
frLength
)
;
txo
.
setTextLength
(
(
short
)
string
.
length
(
)
)
;
txo
.
setStr
(
string
)
;
}
super
.
setString
(
string
)
;
}
}
