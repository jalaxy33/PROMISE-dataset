package
org
.
apache
.
poi
.
hssf
.
record
;
import
org
.
apache
.
poi
.
util
.
*
;
public
class
LeftMarginRecord
extends
Record
implements
Margin
{
public
final
static
short
sid
=
0x26
;
private
double
field_1_margin
;
public
LeftMarginRecord
(
)
{
}
public
LeftMarginRecord
(
RecordInputStream
in
)
{
super
(
in
)
;
}
protected
void
validateSid
(
short
id
)
{
if
(
id
!=
sid
)
{
throw
new
RecordFormatException
(
"Not a LeftMargin record"
)
;
}
}
protected
void
fillFields
(
RecordInputStream
in
)
{
field_1_margin
=
in
.
readDouble
(
)
;
}
public
String
toString
(
)
{
StringBuffer
buffer
=
new
StringBuffer
(
)
;
buffer
.
append
(
"[LeftMargin]\n"
)
;
buffer
.
append
(
"    .margin               = "
)
.
append
(
" ("
)
.
append
(
getMargin
(
)
)
.
append
(
" )\n"
)
;
buffer
.
append
(
"[/LeftMargin]\n"
)
;
return
buffer
.
toString
(
)
;
}
public
int
serialize
(
int
offset
,
byte
[
]
data
)
{
LittleEndian
.
putShort
(
data
,
0
+
offset
,
sid
)
;
LittleEndian
.
putShort
(
data
,
2
+
offset
,
(
short
)
(
getRecordSize
(
)
-
4
)
)
;
LittleEndian
.
putDouble
(
data
,
4
+
offset
,
field_1_margin
)
;
return
getRecordSize
(
)
;
}
public
int
getRecordSize
(
)
{
return
4
+
8
;
}
public
short
getSid
(
)
{
return
sid
;
}
public
double
getMargin
(
)
{
return
field_1_margin
;
}
public
void
setMargin
(
double
field_1_margin
)
{
this
.
field_1_margin
=
field_1_margin
;
}
public
Object
clone
(
)
{
LeftMarginRecord
rec
=
new
LeftMarginRecord
(
)
;
rec
.
field_1_margin
=
this
.
field_1_margin
;
return
rec
;
}
}
