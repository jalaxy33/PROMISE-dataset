package
org
.
apache
.
poi
.
hssf
.
record
.
formula
;
import
org
.
apache
.
poi
.
util
.
LittleEndian
;
import
org
.
apache
.
poi
.
util
.
BitField
;
import
org
.
apache
.
poi
.
hssf
.
model
.
Workbook
;
import
org
.
apache
.
poi
.
hssf
.
record
.
RecordInputStream
;
public
class
AreaErrPtg
extends
AreaPtg
{
public
final
static
byte
sid
=
0x2b
;
private
AreaErrPtg
(
)
{
super
(
)
;
}
public
AreaErrPtg
(
RecordInputStream
in
)
{
super
(
in
)
;
}
public
String
toString
(
)
{
StringBuffer
buffer
=
new
StringBuffer
(
)
;
buffer
.
append
(
"AreaErrPtg\n"
)
;
buffer
.
append
(
"firstRow = "
+
getFirstRow
(
)
)
.
append
(
"\n"
)
;
buffer
.
append
(
"lastRow  = "
+
getLastRow
(
)
)
.
append
(
"\n"
)
;
buffer
.
append
(
"firstCol = "
+
getFirstColumn
(
)
)
.
append
(
"\n"
)
;
buffer
.
append
(
"lastCol  = "
+
getLastColumn
(
)
)
.
append
(
"\n"
)
;
buffer
.
append
(
"firstColRowRel= "
+
isFirstRowRelative
(
)
)
.
append
(
"\n"
)
;
buffer
.
append
(
"lastColRowRel = "
+
isLastRowRelative
(
)
)
.
append
(
"\n"
)
;
buffer
.
append
(
"firstColRel   = "
+
isFirstColRelative
(
)
)
.
append
(
"\n"
)
;
buffer
.
append
(
"lastColRel    = "
+
isLastColRelative
(
)
)
.
append
(
"\n"
)
;
return
buffer
.
toString
(
)
;
}
public
void
writeBytes
(
byte
[
]
array
,
int
offset
)
{
super
.
writeBytes
(
array
,
offset
)
;
array
[
offset
]
=
(
byte
)
(
sid
+
ptgClass
)
;
}
public
String
toFormulaString
(
Workbook
book
)
{
return
"#REF!"
;
}
public
Object
clone
(
)
{
AreaErrPtg
ptg
=
new
AreaErrPtg
(
)
;
ptg
.
setFirstRow
(
getFirstRow
(
)
)
;
ptg
.
setFirstColumn
(
getFirstColumn
(
)
)
;
ptg
.
setLastRow
(
getLastRow
(
)
)
;
ptg
.
setLastColumn
(
getLastColumn
(
)
)
;
ptg
.
setFirstColRelative
(
isFirstColRelative
(
)
)
;
ptg
.
setLastColRelative
(
isLastColRelative
(
)
)
;
ptg
.
setFirstRowRelative
(
isFirstRowRelative
(
)
)
;
ptg
.
setLastRowRelative
(
isLastRowRelative
(
)
)
;
ptg
.
setClass
(
ptgClass
)
;
return
ptg
;
}
}
