package
org
.
apache
.
poi
.
hssf
.
record
;
import
org
.
apache
.
poi
.
util
.
LittleEndian
;
public
class
DefaultColWidthRecord
extends
Record
{
public
final
static
short
sid
=
0x55
;
private
short
field_1_col_width
;
public
DefaultColWidthRecord
(
)
{
}
public
DefaultColWidthRecord
(
RecordInputStream
in
)
{
super
(
in
)
;
}
protected
void
validateSid
(
short
id
)
{
if
(
id
!=
sid
)
{
throw
new
RecordFormatException
(
"NOT A DefaultColWidth RECORD"
)
;
}
}
protected
void
fillFields
(
RecordInputStream
in
)
{
field_1_col_width
=
in
.
readShort
(
)
;
}
public
void
setColWidth
(
short
height
)
{
field_1_col_width
=
height
;
}
public
short
getColWidth
(
)
{
return
field_1_col_width
;
}
public
String
toString
(
)
{
StringBuffer
buffer
=
new
StringBuffer
(
)
;
buffer
.
append
(
"[DEFAULTCOLWIDTH]\n"
)
;
buffer
.
append
(
"    .colwidth      = "
)
.
append
(
Integer
.
toHexString
(
getColWidth
(
)
)
)
.
append
(
"\n"
)
;
buffer
.
append
(
"[/DEFAULTCOLWIDTH]\n"
)
;
return
buffer
.
toString
(
)
;
}
public
int
serialize
(
int
offset
,
byte
[
]
data
)
{
LittleEndian
.
putShort
(
data
,
0
+
offset
,
sid
)
;
LittleEndian
.
putShort
(
data
,
2
+
offset
,
(
short
)
0x2
)
;
LittleEndian
.
putShort
(
data
,
4
+
offset
,
getColWidth
(
)
)
;
return
getRecordSize
(
)
;
}
public
int
getRecordSize
(
)
{
return
6
;
}
public
short
getSid
(
)
{
return
sid
;
}
public
Object
clone
(
)
{
DefaultColWidthRecord
rec
=
new
DefaultColWidthRecord
(
)
;
rec
.
field_1_col_width
=
field_1_col_width
;
return
rec
;
}
}
