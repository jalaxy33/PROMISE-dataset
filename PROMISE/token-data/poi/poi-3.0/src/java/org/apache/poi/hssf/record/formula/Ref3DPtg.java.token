package
org
.
apache
.
poi
.
hssf
.
record
.
formula
;
import
org
.
apache
.
poi
.
util
.
LittleEndian
;
import
org
.
apache
.
poi
.
hssf
.
util
.
RangeAddress
;
import
org
.
apache
.
poi
.
hssf
.
util
.
CellReference
;
import
org
.
apache
.
poi
.
hssf
.
util
.
SheetReferences
;
import
org
.
apache
.
poi
.
hssf
.
model
.
Workbook
;
import
org
.
apache
.
poi
.
util
.
BitField
;
import
org
.
apache
.
poi
.
util
.
BitFieldFactory
;
import
org
.
apache
.
poi
.
hssf
.
model
.
Workbook
;
import
org
.
apache
.
poi
.
hssf
.
record
.
RecordInputStream
;
public
class
Ref3DPtg
extends
Ptg
{
public
final
static
byte
sid
=
0x3a
;
private
final
static
int
SIZE
=
7
;
private
short
field_1_index_extern_sheet
;
private
short
field_2_row
;
private
short
field_3_column
;
private
BitField
rowRelative
=
BitFieldFactory
.
getInstance
(
0x8000
)
;
private
BitField
colRelative
=
BitFieldFactory
.
getInstance
(
0x4000
)
;
public
Ref3DPtg
(
)
{
}
public
Ref3DPtg
(
RecordInputStream
in
)
{
field_1_index_extern_sheet
=
in
.
readShort
(
)
;
field_2_row
=
in
.
readShort
(
)
;
field_3_column
=
in
.
readShort
(
)
;
}
public
Ref3DPtg
(
String
cellref
,
short
externIdx
)
{
CellReference
c
=
new
CellReference
(
cellref
)
;
setRow
(
(
short
)
c
.
getRow
(
)
)
;
setColumn
(
(
short
)
c
.
getCol
(
)
)
;
setColRelative
(
!
c
.
isColAbsolute
(
)
)
;
setRowRelative
(
!
c
.
isRowAbsolute
(
)
)
;
setExternSheetIndex
(
externIdx
)
;
}
public
String
toString
(
)
{
StringBuffer
buffer
=
new
StringBuffer
(
)
;
buffer
.
append
(
"Ref3dPtg\n"
)
;
buffer
.
append
(
"Index to Extern Sheet = "
+
getExternSheetIndex
(
)
)
.
append
(
"\n"
)
;
buffer
.
append
(
"Row = "
+
getRow
(
)
)
.
append
(
"\n"
)
;
buffer
.
append
(
"Col  = "
+
getColumn
(
)
)
.
append
(
"\n"
)
;
buffer
.
append
(
"ColRowRel= "
+
isRowRelative
(
)
)
.
append
(
"\n"
)
;
buffer
.
append
(
"ColRel   = "
+
isColRelative
(
)
)
.
append
(
"\n"
)
;
return
buffer
.
toString
(
)
;
}
public
void
writeBytes
(
byte
[
]
array
,
int
offset
)
{
array
[
0
+
offset
]
=
(
byte
)
(
sid
+
ptgClass
)
;
LittleEndian
.
putShort
(
array
,
1
+
offset
,
getExternSheetIndex
(
)
)
;
LittleEndian
.
putShort
(
array
,
3
+
offset
,
getRow
(
)
)
;
LittleEndian
.
putShort
(
array
,
5
+
offset
,
getColumnRaw
(
)
)
;
}
public
int
getSize
(
)
{
return
SIZE
;
}
public
short
getExternSheetIndex
(
)
{
return
field_1_index_extern_sheet
;
}
public
void
setExternSheetIndex
(
short
index
)
{
field_1_index_extern_sheet
=
index
;
}
public
short
getRow
(
)
{
return
field_2_row
;
}
public
void
setRow
(
short
row
)
{
field_2_row
=
row
;
}
public
short
getColumn
(
)
{
return
(
short
)
(
field_3_column
&
0xFF
)
;
}
public
short
getColumnRaw
(
)
{
return
field_3_column
;
}
public
boolean
isRowRelative
(
)
{
return
rowRelative
.
isSet
(
field_3_column
)
;
}
public
void
setRowRelative
(
boolean
rel
)
{
field_3_column
=
rowRelative
.
setShortBoolean
(
field_3_column
,
rel
)
;
}
public
boolean
isColRelative
(
)
{
return
colRelative
.
isSet
(
field_3_column
)
;
}
public
void
setColRelative
(
boolean
rel
)
{
field_3_column
=
colRelative
.
setShortBoolean
(
field_3_column
,
rel
)
;
}
public
void
setColumn
(
short
column
)
{
field_3_column
&=
0xFF00
;
field_3_column
|=
column
&
0xFF
;
}
public
void
setColumnRaw
(
short
column
)
{
field_3_column
=
column
;
}
public
void
setArea
(
String
ref
)
{
RangeAddress
ra
=
new
RangeAddress
(
ref
)
;
String
from
=
ra
.
getFromCell
(
)
;
setColumn
(
(
short
)
(
ra
.
getXPosition
(
from
)
-
1
)
)
;
setRow
(
(
short
)
(
ra
.
getYPosition
(
from
)
-
1
)
)
;
}
public
String
toFormulaString
(
Workbook
book
)
{
StringBuffer
retval
=
new
StringBuffer
(
)
;
SheetReferences
refs
=
book
==
null
?
null
:
book
.
getSheetReferences
(
)
;
if
(
refs
!=
null
)
{
String
sheetName
=
refs
.
getSheetName
(
(
int
)
this
.
field_1_index_extern_sheet
)
;
boolean
appendQuotes
=
sheetName
.
indexOf
(
" "
)
>=
0
;
if
(
appendQuotes
)
retval
.
append
(
"'"
)
;
retval
.
append
(
sheetName
)
;
if
(
appendQuotes
)
retval
.
append
(
"'"
)
;
retval
.
append
(
'!'
)
;
}
retval
.
append
(
(
new
CellReference
(
getRow
(
)
,
getColumn
(
)
,
!
isRowRelative
(
)
,
!
isColRelative
(
)
)
)
.
toString
(
)
)
;
return
retval
.
toString
(
)
;
}
public
byte
getDefaultOperandClass
(
)
{
return
Ptg
.
CLASS_REF
;
}
public
Object
clone
(
)
{
Ref3DPtg
ptg
=
new
Ref3DPtg
(
)
;
ptg
.
field_1_index_extern_sheet
=
field_1_index_extern_sheet
;
ptg
.
field_2_row
=
field_2_row
;
ptg
.
field_3_column
=
field_3_column
;
ptg
.
setClass
(
ptgClass
)
;
return
ptg
;
}
}
