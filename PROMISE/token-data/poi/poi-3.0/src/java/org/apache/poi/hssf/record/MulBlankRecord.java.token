package
org
.
apache
.
poi
.
hssf
.
record
;
public
class
MulBlankRecord
extends
Record
{
public
final
static
short
sid
=
0xbe
;
private
int
field_1_row
;
private
short
field_2_first_col
;
private
short
[
]
field_3_xfs
;
private
short
field_4_last_col
;
public
MulBlankRecord
(
)
{
}
public
MulBlankRecord
(
RecordInputStream
in
)
{
super
(
in
)
;
}
public
int
getRow
(
)
{
return
field_1_row
;
}
public
short
getFirstColumn
(
)
{
return
field_2_first_col
;
}
public
short
getLastColumn
(
)
{
return
field_4_last_col
;
}
public
int
getNumColumns
(
)
{
return
field_4_last_col
-
field_2_first_col
+
1
;
}
public
short
getXFAt
(
int
coffset
)
{
return
field_3_xfs
[
coffset
]
;
}
protected
void
fillFields
(
RecordInputStream
in
)
{
field_1_row
=
in
.
readUShort
(
)
;
field_2_first_col
=
in
.
readShort
(
)
;
field_3_xfs
=
parseXFs
(
in
)
;
field_4_last_col
=
in
.
readShort
(
)
;
}
private
short
[
]
parseXFs
(
RecordInputStream
in
)
{
short
[
]
retval
=
new
short
[
(
in
.
remaining
(
)
-
2
)
/
2
]
;
for
(
int
idx
=
0
;
idx
<
retval
.
length
;
idx
++
)
{
retval
[
idx
]
=
in
.
readShort
(
)
;
}
return
retval
;
}
public
String
toString
(
)
{
StringBuffer
buffer
=
new
StringBuffer
(
)
;
buffer
.
append
(
"[MULBLANK]\n"
)
;
buffer
.
append
(
"row  = "
)
.
append
(
Integer
.
toHexString
(
getRow
(
)
)
)
.
append
(
"\n"
)
;
buffer
.
append
(
"firstcol  = "
)
.
append
(
Integer
.
toHexString
(
getFirstColumn
(
)
)
)
.
append
(
"\n"
)
;
buffer
.
append
(
" lastcol  = "
)
.
append
(
Integer
.
toHexString
(
getLastColumn
(
)
)
)
.
append
(
"\n"
)
;
for
(
int
k
=
0
;
k
<
getNumColumns
(
)
;
k
++
)
{
buffer
.
append
(
"xf"
)
.
append
(
k
)
.
append
(
"        = "
)
.
append
(
Integer
.
toHexString
(
getXFAt
(
k
)
)
)
.
append
(
"\n"
)
;
}
buffer
.
append
(
"[/MULBLANK]\n"
)
;
return
buffer
.
toString
(
)
;
}
protected
void
validateSid
(
short
id
)
{
if
(
id
!=
sid
)
{
throw
new
RecordFormatException
(
"Not a MulBlankRecord!"
)
;
}
}
public
short
getSid
(
)
{
return
sid
;
}
public
int
serialize
(
int
offset
,
byte
[
]
data
)
{
throw
new
RecordFormatException
(
"Sorry, you can't serialize a MulBlank in this release"
)
;
}
}
