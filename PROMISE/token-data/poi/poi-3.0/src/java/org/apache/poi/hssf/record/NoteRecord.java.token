package
org
.
apache
.
poi
.
hssf
.
record
;
import
org
.
apache
.
poi
.
util
.
LittleEndian
;
public
class
NoteRecord
extends
Record
{
public
final
static
short
sid
=
0x1C
;
public
final
static
short
NOTE_HIDDEN
=
0x0
;
public
final
static
short
NOTE_VISIBLE
=
0x2
;
private
short
field_1_row
;
private
short
field_2_col
;
private
short
field_3_flags
;
private
short
field_4_shapeid
;
private
String
field_5_author
;
public
NoteRecord
(
)
{
field_5_author
=
""
;
field_3_flags
=
0
;
}
public
NoteRecord
(
RecordInputStream
in
)
{
super
(
in
)
;
}
public
short
getSid
(
)
{
return
sid
;
}
protected
void
validateSid
(
short
id
)
{
if
(
id
!=
sid
)
{
throw
new
RecordFormatException
(
"Not a NoteRecord record"
)
;
}
}
protected
void
fillFields
(
RecordInputStream
in
)
{
field_1_row
=
in
.
readShort
(
)
;
field_2_col
=
in
.
readShort
(
)
;
field_3_flags
=
in
.
readShort
(
)
;
field_4_shapeid
=
in
.
readShort
(
)
;
int
length
=
in
.
readShort
(
)
;
byte
[
]
bytes
=
in
.
readRemainder
(
)
;
field_5_author
=
new
String
(
bytes
,
1
,
length
)
;
}
public
int
serialize
(
int
offset
,
byte
[
]
data
)
{
LittleEndian
.
putShort
(
data
,
0
+
offset
,
sid
)
;
LittleEndian
.
putShort
(
data
,
2
+
offset
,
(
short
)
(
getRecordSize
(
)
-
4
)
)
;
LittleEndian
.
putShort
(
data
,
4
+
offset
,
field_1_row
)
;
LittleEndian
.
putShort
(
data
,
6
+
offset
,
field_2_col
)
;
LittleEndian
.
putShort
(
data
,
8
+
offset
,
field_3_flags
)
;
LittleEndian
.
putShort
(
data
,
10
+
offset
,
field_4_shapeid
)
;
LittleEndian
.
putShort
(
data
,
12
+
offset
,
(
short
)
field_5_author
.
length
(
)
)
;
byte
[
]
str
=
field_5_author
.
getBytes
(
)
;
System
.
arraycopy
(
str
,
0
,
data
,
15
+
offset
,
str
.
length
)
;
return
getRecordSize
(
)
;
}
public
int
getRecordSize
(
)
{
int
retval
=
4
+
2
+
2
+
2
+
2
+
2
+
1
+
field_5_author
.
length
(
)
+
1
;
return
retval
;
}
public
String
toString
(
)
{
StringBuffer
buffer
=
new
StringBuffer
(
)
;
buffer
.
append
(
"[NOTE]\n"
)
;
buffer
.
append
(
"    .recordid = 0x"
+
Integer
.
toHexString
(
getSid
(
)
)
+
", size = "
+
getRecordSize
(
)
+
"\n"
)
;
buffer
.
append
(
"    .row =     "
+
field_1_row
+
"\n"
)
;
buffer
.
append
(
"    .col =     "
+
field_2_col
+
"\n"
)
;
buffer
.
append
(
"    .flags =   "
+
field_3_flags
+
"\n"
)
;
buffer
.
append
(
"    .shapeid = "
+
field_4_shapeid
+
"\n"
)
;
buffer
.
append
(
"    .author =  "
+
field_5_author
+
"\n"
)
;
buffer
.
append
(
"[/NOTE]\n"
)
;
return
buffer
.
toString
(
)
;
}
public
short
getRow
(
)
{
return
field_1_row
;
}
public
void
setRow
(
short
row
)
{
field_1_row
=
row
;
}
public
short
getColumn
(
)
{
return
field_2_col
;
}
public
void
setColumn
(
short
col
)
{
field_2_col
=
col
;
}
public
short
getFlags
(
)
{
return
field_3_flags
;
}
public
void
setFlags
(
short
flags
)
{
field_3_flags
=
flags
;
}
public
short
getShapeId
(
)
{
return
field_4_shapeid
;
}
public
void
setShapeId
(
short
id
)
{
field_4_shapeid
=
id
;
}
public
String
getAuthor
(
)
{
return
field_5_author
;
}
public
void
setAuthor
(
String
author
)
{
field_5_author
=
author
;
}
}
