package
org
.
apache
.
poi
.
hssf
.
record
;
import
org
.
apache
.
poi
.
util
.
LittleEndian
;
import
org
.
apache
.
poi
.
util
.
StringUtil
;
import
org
.
apache
.
poi
.
util
.
BitField
;
public
class
StyleRecord
extends
Record
{
public
final
static
short
sid
=
0x293
;
public
final
static
short
STYLE_USER_DEFINED
=
0
;
public
final
static
short
STYLE_BUILT_IN
=
1
;
private
short
field_1_xf_index
;
private
byte
field_2_builtin_style
;
private
byte
field_3_outline_style_level
;
private
short
field_2_name_length
;
private
byte
field_3_string_options
;
private
BitField
fHighByte
;
private
String
field_4_name
;
public
StyleRecord
(
)
{
}
public
StyleRecord
(
short
id
,
short
size
,
byte
[
]
data
)
{
super
(
id
,
size
,
data
)
;
}
public
StyleRecord
(
short
id
,
short
size
,
byte
[
]
data
,
int
offset
)
{
super
(
id
,
size
,
data
,
offset
)
;
}
protected
void
validateSid
(
short
id
)
{
if
(
id
!=
sid
)
{
throw
new
RecordFormatException
(
"NOT A STYLE RECORD"
)
;
}
}
protected
void
fillFields
(
byte
[
]
data
,
short
size
,
int
offset
)
{
fHighByte
=
new
BitField
(
0x01
)
;
field_1_xf_index
=
LittleEndian
.
getShort
(
data
,
0
+
offset
)
;
if
(
getType
(
)
==
STYLE_BUILT_IN
)
{
field_2_builtin_style
=
data
[
2
+
offset
]
;
field_3_outline_style_level
=
data
[
3
+
offset
]
;
}
else
if
(
getType
(
)
==
STYLE_USER_DEFINED
)
{
field_2_name_length
=
LittleEndian
.
getShort
(
data
,
2
+
offset
)
;
field_3_string_options
=
data
[
4
+
offset
]
;
if
(
fHighByte
.
isSet
(
field_3_string_options
)
)
{
field_4_name
=
StringUtil
.
getFromUnicode
(
data
,
offset
+
5
,
field_2_name_length
)
;
}
else
{
field_4_name
=
StringUtil
.
getFromCompressedUnicode
(
data
,
offset
+
5
,
field_2_name_length
)
;
}
}
}
public
void
setIndex
(
short
index
)
{
field_1_xf_index
=
index
;
}
public
void
setType
(
short
type
)
{
field_1_xf_index
=
setField
(
field_1_xf_index
,
type
,
0x8000
,
15
)
;
}
public
void
setXFIndex
(
short
index
)
{
field_1_xf_index
=
setField
(
field_1_xf_index
,
index
,
0x1FFF
,
0
)
;
}
public
void
setNameLength
(
byte
length
)
{
field_2_name_length
=
length
;
}
public
void
setName
(
String
name
)
{
field_4_name
=
name
;
}
public
void
setBuiltin
(
byte
builtin
)
{
field_2_builtin_style
=
builtin
;
}
public
void
setOutlineStyleLevel
(
byte
level
)
{
field_3_outline_style_level
=
level
;
}
public
short
getIndex
(
)
{
return
field_1_xf_index
;
}
public
short
getType
(
)
{
return
(
short
)
(
(
field_1_xf_index
&
0x8000
)
>
>
15
)
;
}
public
short
getXFIndex
(
)
{
return
(
short
)
(
field_1_xf_index
&
0x1FFF
)
;
}
public
short
getNameLength
(
)
{
return
field_2_name_length
;
}
public
String
getName
(
)
{
return
field_4_name
;
}
public
byte
getBuiltin
(
)
{
return
field_2_builtin_style
;
}
public
byte
getOutlineStyleLevel
(
)
{
return
field_3_outline_style_level
;
}
public
String
toString
(
)
{
StringBuffer
buffer
=
new
StringBuffer
(
)
;
buffer
.
append
(
"[STYLE]\n"
)
;
buffer
.
append
(
"    .xf_index_raw    = "
)
.
append
(
Integer
.
toHexString
(
getIndex
(
)
)
)
.
append
(
"\n"
)
;
buffer
.
append
(
"        .type        = "
)
.
append
(
Integer
.
toHexString
(
getType
(
)
)
)
.
append
(
"\n"
)
;
buffer
.
append
(
"        .xf_index    = "
)
.
append
(
Integer
.
toHexString
(
getXFIndex
(
)
)
)
.
append
(
"\n"
)
;
if
(
getType
(
)
==
STYLE_BUILT_IN
)
{
buffer
.
append
(
"    .builtin_style   = "
)
.
append
(
Integer
.
toHexString
(
getBuiltin
(
)
)
)
.
append
(
"\n"
)
;
buffer
.
append
(
"    .outline_level   = "
)
.
append
(
Integer
.
toHexString
(
getOutlineStyleLevel
(
)
)
)
.
append
(
"\n"
)
;
}
else
if
(
getType
(
)
==
STYLE_USER_DEFINED
)
{
buffer
.
append
(
"    .name_length     = "
)
.
append
(
Integer
.
toHexString
(
getNameLength
(
)
)
)
.
append
(
"\n"
)
;
buffer
.
append
(
"    .name            = "
)
.
append
(
getName
(
)
)
.
append
(
"\n"
)
;
}
buffer
.
append
(
"[/STYLE]\n"
)
;
return
buffer
.
toString
(
)
;
}
private
short
setField
(
int
fieldValue
,
int
new_value
,
int
mask
,
int
shiftLeft
)
{
return
(
short
)
(
(
fieldValue
&
~
mask
)
|
(
(
new_value
<<
shiftLeft
)
&
mask
)
)
;
}
public
int
serialize
(
int
offset
,
byte
[
]
data
)
{
LittleEndian
.
putShort
(
data
,
0
+
offset
,
sid
)
;
if
(
getType
(
)
==
STYLE_BUILT_IN
)
{
LittleEndian
.
putShort
(
data
,
2
+
offset
,
(
(
short
)
0x04
)
)
;
}
else
{
LittleEndian
.
putShort
(
data
,
2
+
offset
,
(
(
short
)
(
getRecordSize
(
)
-
4
)
)
)
;
}
LittleEndian
.
putShort
(
data
,
4
+
offset
,
getIndex
(
)
)
;
if
(
getType
(
)
==
STYLE_BUILT_IN
)
{
data
[
6
+
offset
]
=
getBuiltin
(
)
;
data
[
7
+
offset
]
=
getOutlineStyleLevel
(
)
;
}
else
{
LittleEndian
.
putShort
(
data
,
6
+
offset
,
getNameLength
(
)
)
;
data
[
8
+
offset
]
=
this
.
field_3_string_options
;
StringUtil
.
putCompressedUnicode
(
getName
(
)
,
data
,
9
+
offset
)
;
}
return
getRecordSize
(
)
;
}
public
int
getRecordSize
(
)
{
int
retval
;
if
(
getType
(
)
==
STYLE_BUILT_IN
)
{
retval
=
8
;
}
else
{
if
(
fHighByte
.
isSet
(
field_3_string_options
)
)
{
retval
=
9
+
2
*
getNameLength
(
)
;
}
else
{
retval
=
9
+
getNameLength
(
)
;
}
}
return
retval
;
}
public
short
getSid
(
)
{
return
this
.
sid
;
}
}
