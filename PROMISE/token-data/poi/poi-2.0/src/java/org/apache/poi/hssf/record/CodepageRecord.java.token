package
org
.
apache
.
poi
.
hssf
.
record
;
import
org
.
apache
.
poi
.
util
.
LittleEndian
;
public
class
CodepageRecord
extends
Record
{
public
final
static
short
sid
=
0x42
;
private
short
field_1_codepage
;
public
final
static
short
CODEPAGE
=
(
short
)
0x4b0
;
public
CodepageRecord
(
)
{
}
public
CodepageRecord
(
short
id
,
short
size
,
byte
[
]
data
)
{
super
(
id
,
size
,
data
)
;
}
public
CodepageRecord
(
short
id
,
short
size
,
byte
[
]
data
,
int
offset
)
{
super
(
id
,
size
,
data
,
offset
)
;
}
protected
void
validateSid
(
short
id
)
{
if
(
id
!=
sid
)
{
throw
new
RecordFormatException
(
"NOT A CODEPAGE RECORD"
)
;
}
}
protected
void
fillFields
(
byte
[
]
data
,
short
size
,
int
offset
)
{
field_1_codepage
=
LittleEndian
.
getShort
(
data
,
0
+
offset
)
;
}
public
void
setCodepage
(
short
cp
)
{
field_1_codepage
=
cp
;
}
public
short
getCodepage
(
)
{
return
field_1_codepage
;
}
public
String
toString
(
)
{
StringBuffer
buffer
=
new
StringBuffer
(
)
;
buffer
.
append
(
"[CODEPAGE]\n"
)
;
buffer
.
append
(
"    .codepage        = "
)
.
append
(
Integer
.
toHexString
(
getCodepage
(
)
)
)
.
append
(
"\n"
)
;
buffer
.
append
(
"[/CODEPAGE]\n"
)
;
return
buffer
.
toString
(
)
;
}
public
int
serialize
(
int
offset
,
byte
[
]
data
)
{
LittleEndian
.
putShort
(
data
,
0
+
offset
,
sid
)
;
LittleEndian
.
putShort
(
data
,
2
+
offset
,
(
(
short
)
0x02
)
)
;
LittleEndian
.
putShort
(
data
,
4
+
offset
,
getCodepage
(
)
)
;
return
getRecordSize
(
)
;
}
public
int
getRecordSize
(
)
{
return
6
;
}
public
short
getSid
(
)
{
return
this
.
sid
;
}
}
