package
org
.
apache
.
poi
.
hssf
.
record
;
import
org
.
apache
.
poi
.
util
.
LittleEndian
;
public
class
HCenterRecord
extends
Record
{
public
final
static
short
sid
=
0x83
;
private
short
field_1_hcenter
;
public
HCenterRecord
(
)
{
}
public
HCenterRecord
(
short
id
,
short
size
,
byte
[
]
data
)
{
super
(
id
,
size
,
data
)
;
}
public
HCenterRecord
(
short
id
,
short
size
,
byte
[
]
data
,
int
offset
)
{
super
(
id
,
size
,
data
,
offset
)
;
}
protected
void
validateSid
(
short
id
)
{
if
(
id
!=
sid
)
{
throw
new
RecordFormatException
(
"NOT A HCenter RECORD"
)
;
}
}
protected
void
fillFields
(
byte
[
]
data
,
short
size
,
int
offset
)
{
field_1_hcenter
=
LittleEndian
.
getShort
(
data
,
0
+
offset
)
;
}
public
void
setHCenter
(
boolean
hc
)
{
if
(
hc
==
true
)
{
field_1_hcenter
=
1
;
}
else
{
field_1_hcenter
=
0
;
}
}
public
boolean
getHCenter
(
)
{
return
(
field_1_hcenter
==
1
)
;
}
public
String
toString
(
)
{
StringBuffer
buffer
=
new
StringBuffer
(
)
;
buffer
.
append
(
"[HCENTER]\n"
)
;
buffer
.
append
(
"    .hcenter        = "
)
.
append
(
getHCenter
(
)
)
.
append
(
"\n"
)
;
buffer
.
append
(
"[/HCENTER]\n"
)
;
return
buffer
.
toString
(
)
;
}
public
int
serialize
(
int
offset
,
byte
[
]
data
)
{
LittleEndian
.
putShort
(
data
,
0
+
offset
,
sid
)
;
LittleEndian
.
putShort
(
data
,
2
+
offset
,
(
short
)
0x2
)
;
LittleEndian
.
putShort
(
data
,
4
+
offset
,
(
short
)
field_1_hcenter
)
;
return
getRecordSize
(
)
;
}
public
int
getRecordSize
(
)
{
return
6
;
}
public
short
getSid
(
)
{
return
this
.
sid
;
}
public
Object
clone
(
)
{
HCenterRecord
rec
=
new
HCenterRecord
(
)
;
rec
.
field_1_hcenter
=
field_1_hcenter
;
return
rec
;
}
}
