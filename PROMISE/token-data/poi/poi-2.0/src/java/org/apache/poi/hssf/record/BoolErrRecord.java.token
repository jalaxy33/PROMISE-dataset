package
org
.
apache
.
poi
.
hssf
.
record
;
import
org
.
apache
.
poi
.
util
.
LittleEndian
;
public
class
BoolErrRecord
extends
Record
implements
CellValueRecordInterface
,
Comparable
{
public
final
static
short
sid
=
0x205
;
private
int
field_1_row
;
private
short
field_2_column
;
private
short
field_3_xf_index
;
private
byte
field_4_bBoolErr
;
private
byte
field_5_fError
;
public
BoolErrRecord
(
)
{
}
public
BoolErrRecord
(
short
id
,
short
size
,
byte
[
]
data
)
{
super
(
id
,
size
,
data
)
;
}
public
BoolErrRecord
(
short
id
,
short
size
,
byte
[
]
data
,
int
offset
)
{
super
(
id
,
size
,
data
,
offset
)
;
}
protected
void
fillFields
(
byte
[
]
data
,
short
size
,
int
offset
)
{
field_1_row
=
LittleEndian
.
getUShort
(
data
,
0
+
offset
)
;
field_2_column
=
LittleEndian
.
getShort
(
data
,
2
+
offset
)
;
field_3_xf_index
=
LittleEndian
.
getShort
(
data
,
4
+
offset
)
;
field_4_bBoolErr
=
data
[
6
+
offset
]
;
field_5_fError
=
data
[
7
+
offset
]
;
}
public
void
setRow
(
int
row
)
{
field_1_row
=
row
;
}
public
void
setColumn
(
short
col
)
{
field_2_column
=
col
;
}
public
void
setXFIndex
(
short
xf
)
{
field_3_xf_index
=
xf
;
}
public
void
setValue
(
boolean
value
)
{
field_4_bBoolErr
=
value
?
(
byte
)
1
:
(
byte
)
0
;
field_5_fError
=
(
byte
)
0
;
}
public
void
setValue
(
byte
value
)
{
if
(
(
value
==
0
)
||
(
value
==
7
)
||
(
value
==
15
)
||
(
value
==
23
)
||
(
value
==
29
)
||
(
value
==
36
)
||
(
value
==
42
)
)
{
field_4_bBoolErr
=
value
;
field_5_fError
=
(
byte
)
1
;
}
else
{
throw
new
RuntimeException
(
"Error Value can only be 0,7,15,23,29,36 or 42. It cannot be "
+
value
)
;
}
}
public
int
getRow
(
)
{
return
field_1_row
;
}
public
short
getColumn
(
)
{
return
field_2_column
;
}
public
short
getXFIndex
(
)
{
return
field_3_xf_index
;
}
public
boolean
getBooleanValue
(
)
{
return
(
field_4_bBoolErr
!=
0
)
;
}
public
byte
getErrorValue
(
)
{
return
field_4_bBoolErr
;
}
public
boolean
isBoolean
(
)
{
return
(
field_5_fError
==
(
byte
)
0
)
;
}
public
void
setError
(
boolean
val
)
{
field_5_fError
=
(
byte
)
(
val
==
false
?
0
:
1
)
;
}
public
boolean
isError
(
)
{
return
(
field_5_fError
!=
(
byte
)
0
)
;
}
public
String
toString
(
)
{
StringBuffer
buffer
=
new
StringBuffer
(
)
;
buffer
.
append
(
"[BOOLERR]\n"
)
;
buffer
.
append
(
"    .row            = "
)
.
append
(
Integer
.
toHexString
(
getRow
(
)
)
)
.
append
(
"\n"
)
;
buffer
.
append
(
"    .col            = "
)
.
append
(
Integer
.
toHexString
(
getColumn
(
)
)
)
.
append
(
"\n"
)
;
buffer
.
append
(
"    .xfindex        = "
)
.
append
(
Integer
.
toHexString
(
getXFIndex
(
)
)
)
.
append
(
"\n"
)
;
if
(
isBoolean
(
)
)
{
buffer
.
append
(
"    .booleanValue   = "
)
.
append
(
getBooleanValue
(
)
)
.
append
(
"\n"
)
;
}
else
{
buffer
.
append
(
"    .errorValue     = "
)
.
append
(
getErrorValue
(
)
)
.
append
(
"\n"
)
;
}
buffer
.
append
(
"[/BOOLERR]\n"
)
;
return
buffer
.
toString
(
)
;
}
public
int
serialize
(
int
offset
,
byte
[
]
data
)
{
LittleEndian
.
putShort
(
data
,
0
+
offset
,
sid
)
;
LittleEndian
.
putShort
(
data
,
2
+
offset
,
(
short
)
8
)
;
LittleEndian
.
putShort
(
data
,
4
+
offset
,
(
short
)
getRow
(
)
)
;
LittleEndian
.
putShort
(
data
,
6
+
offset
,
getColumn
(
)
)
;
LittleEndian
.
putShort
(
data
,
8
+
offset
,
getXFIndex
(
)
)
;
data
[
10
+
offset
]
=
field_4_bBoolErr
;
data
[
11
+
offset
]
=
field_5_fError
;
return
getRecordSize
(
)
;
}
public
int
getRecordSize
(
)
{
return
12
;
}
protected
void
validateSid
(
short
id
)
{
if
(
id
!=
this
.
sid
)
{
throw
new
RecordFormatException
(
"Not a valid BoolErrRecord"
)
;
}
}
public
short
getSid
(
)
{
return
this
.
sid
;
}
public
boolean
isBefore
(
CellValueRecordInterface
i
)
{
if
(
this
.
getRow
(
)
>
i
.
getRow
(
)
)
{
return
false
;
}
if
(
(
this
.
getRow
(
)
==
i
.
getRow
(
)
)
&&
(
this
.
getColumn
(
)
>
i
.
getColumn
(
)
)
)
{
return
false
;
}
if
(
(
this
.
getRow
(
)
==
i
.
getRow
(
)
)
&&
(
this
.
getColumn
(
)
==
i
.
getColumn
(
)
)
)
{
return
false
;
}
return
true
;
}
public
boolean
isAfter
(
CellValueRecordInterface
i
)
{
if
(
this
.
getRow
(
)
<
i
.
getRow
(
)
)
{
return
false
;
}
if
(
(
this
.
getRow
(
)
==
i
.
getRow
(
)
)
&&
(
this
.
getColumn
(
)
<
i
.
getColumn
(
)
)
)
{
return
false
;
}
if
(
(
this
.
getRow
(
)
==
i
.
getRow
(
)
)
&&
(
this
.
getColumn
(
)
==
i
.
getColumn
(
)
)
)
{
return
false
;
}
return
true
;
}
public
boolean
isEqual
(
CellValueRecordInterface
i
)
{
return
(
(
this
.
getRow
(
)
==
i
.
getRow
(
)
)
&&
(
this
.
getColumn
(
)
==
i
.
getColumn
(
)
)
)
;
}
public
boolean
isInValueSection
(
)
{
return
true
;
}
public
boolean
isValue
(
)
{
return
true
;
}
public
int
compareTo
(
Object
obj
)
{
CellValueRecordInterface
loc
=
(
CellValueRecordInterface
)
obj
;
if
(
(
this
.
getRow
(
)
==
loc
.
getRow
(
)
)
&&
(
this
.
getColumn
(
)
==
loc
.
getColumn
(
)
)
)
{
return
0
;
}
if
(
this
.
getRow
(
)
<
loc
.
getRow
(
)
)
{
return
-
1
;
}
if
(
this
.
getRow
(
)
>
loc
.
getRow
(
)
)
{
return
1
;
}
if
(
this
.
getColumn
(
)
<
loc
.
getColumn
(
)
)
{
return
-
1
;
}
if
(
this
.
getColumn
(
)
>
loc
.
getColumn
(
)
)
{
return
1
;
}
return
-
1
;
}
public
boolean
equals
(
Object
obj
)
{
if
(
!
(
obj
instanceof
CellValueRecordInterface
)
)
{
return
false
;
}
CellValueRecordInterface
loc
=
(
CellValueRecordInterface
)
obj
;
if
(
(
this
.
getRow
(
)
==
loc
.
getRow
(
)
)
&&
(
this
.
getColumn
(
)
==
loc
.
getColumn
(
)
)
)
{
return
true
;
}
return
false
;
}
public
Object
clone
(
)
{
BoolErrRecord
rec
=
new
BoolErrRecord
(
)
;
rec
.
field_1_row
=
field_1_row
;
rec
.
field_2_column
=
field_2_column
;
rec
.
field_3_xf_index
=
field_3_xf_index
;
rec
.
field_4_bBoolErr
=
field_4_bBoolErr
;
rec
.
field_5_fError
=
field_5_fError
;
return
rec
;
}
}
