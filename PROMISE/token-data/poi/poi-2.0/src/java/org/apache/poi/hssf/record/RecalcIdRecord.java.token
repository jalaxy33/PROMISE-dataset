package
org
.
apache
.
poi
.
hssf
.
record
;
import
org
.
apache
.
poi
.
util
.
LittleEndian
;
public
class
RecalcIdRecord
extends
Record
{
public
final
static
short
sid
=
0x1c1
;
public
short
[
]
field_1_recalcids
;
private
boolean
isNeeded
=
false
;
public
RecalcIdRecord
(
)
{
}
public
RecalcIdRecord
(
short
id
,
short
size
,
byte
[
]
data
)
{
super
(
id
,
size
,
data
)
;
}
public
RecalcIdRecord
(
short
id
,
short
size
,
byte
[
]
data
,
int
offset
)
{
super
(
id
,
size
,
data
,
offset
)
;
}
protected
void
validateSid
(
short
id
)
{
if
(
id
!=
sid
)
{
throw
new
RecordFormatException
(
"NOT A RECALCID RECORD"
)
;
}
}
protected
void
fillFields
(
byte
[
]
data
,
short
size
,
int
offset
)
{
field_1_recalcids
=
new
short
[
size
/
2
]
;
for
(
int
k
=
0
;
k
<
field_1_recalcids
.
length
;
k
++
)
{
field_1_recalcids
[
k
]
=
LittleEndian
.
getShort
(
data
,
(
k
*
2
)
+
offset
)
;
}
}
public
void
setRecalcIdArray
(
short
[
]
array
)
{
field_1_recalcids
=
array
;
}
public
short
[
]
getRecalcIdArray
(
)
{
return
field_1_recalcids
;
}
public
void
setIsNeeded
(
boolean
isNeeded
)
{
this
.
isNeeded
=
isNeeded
;
}
public
boolean
isNeeded
(
)
{
return
isNeeded
;
}
public
String
toString
(
)
{
StringBuffer
buffer
=
new
StringBuffer
(
)
;
buffer
.
append
(
"[RECALCID]\n"
)
;
buffer
.
append
(
"    .elements        = "
)
.
append
(
field_1_recalcids
.
length
)
.
append
(
"\n"
)
;
for
(
int
k
=
0
;
k
<
field_1_recalcids
.
length
;
k
++
)
{
buffer
.
append
(
"    .element_"
+
k
+
"       = "
)
.
append
(
field_1_recalcids
[
k
]
)
.
append
(
"\n"
)
;
}
buffer
.
append
(
"[/RECALCID]\n"
)
;
return
buffer
.
toString
(
)
;
}
public
int
serialize
(
int
offset
,
byte
[
]
data
)
{
short
[
]
tabids
=
getRecalcIdArray
(
)
;
short
length
=
(
short
)
(
tabids
.
length
*
2
)
;
int
byteoffset
=
4
;
LittleEndian
.
putShort
(
data
,
0
+
offset
,
sid
)
;
LittleEndian
.
putShort
(
data
,
2
+
offset
,
(
(
short
)
length
)
)
;
for
(
int
k
=
0
;
k
<
(
length
/
2
)
;
k
++
)
{
LittleEndian
.
putShort
(
data
,
byteoffset
+
offset
,
tabids
[
k
]
)
;
byteoffset
+=
2
;
}
return
getRecordSize
(
)
;
}
public
int
getRecordSize
(
)
{
return
4
+
(
getRecalcIdArray
(
)
.
length
*
2
)
;
}
public
short
getSid
(
)
{
return
this
.
sid
;
}
}
