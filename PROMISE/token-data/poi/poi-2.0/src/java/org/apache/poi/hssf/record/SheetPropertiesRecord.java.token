package
org
.
apache
.
poi
.
hssf
.
record
;
import
org
.
apache
.
poi
.
util
.
*
;
public
class
SheetPropertiesRecord
extends
Record
{
public
final
static
short
sid
=
0x1044
;
private
short
field_1_flags
;
private
BitField
chartTypeManuallyFormatted
=
new
BitField
(
0x1
)
;
private
BitField
plotVisibleOnly
=
new
BitField
(
0x2
)
;
private
BitField
doNotSizeWithWindow
=
new
BitField
(
0x4
)
;
private
BitField
defaultPlotDimensions
=
new
BitField
(
0x8
)
;
private
BitField
autoPlotArea
=
new
BitField
(
0x10
)
;
private
byte
field_2_empty
;
public
final
static
byte
EMPTY_NOT_PLOTTED
=
0
;
public
final
static
byte
EMPTY_ZERO
=
1
;
public
final
static
byte
EMPTY_INTERPOLATED
=
2
;
public
SheetPropertiesRecord
(
)
{
}
public
SheetPropertiesRecord
(
short
id
,
short
size
,
byte
[
]
data
)
{
super
(
id
,
size
,
data
)
;
}
public
SheetPropertiesRecord
(
short
id
,
short
size
,
byte
[
]
data
,
int
offset
)
{
super
(
id
,
size
,
data
,
offset
)
;
}
protected
void
validateSid
(
short
id
)
{
if
(
id
!=
sid
)
{
throw
new
RecordFormatException
(
"Not a SheetProperties record"
)
;
}
}
protected
void
fillFields
(
byte
[
]
data
,
short
size
,
int
offset
)
{
int
pos
=
0
;
field_1_flags
=
LittleEndian
.
getShort
(
data
,
pos
+
0x0
+
offset
)
;
field_2_empty
=
data
[
pos
+
0x2
+
offset
]
;
}
public
String
toString
(
)
{
StringBuffer
buffer
=
new
StringBuffer
(
)
;
buffer
.
append
(
"[SHTPROPS]\n"
)
;
buffer
.
append
(
"    .flags                = "
)
.
append
(
"0x"
)
.
append
(
HexDump
.
toHex
(
getFlags
(
)
)
)
.
append
(
" ("
)
.
append
(
getFlags
(
)
)
.
append
(
" )"
)
;
buffer
.
append
(
System
.
getProperty
(
"line.separator"
)
)
;
buffer
.
append
(
"         .chartTypeManuallyFormatted     = "
)
.
append
(
isChartTypeManuallyFormatted
(
)
)
.
append
(
'\n'
)
;
buffer
.
append
(
"         .plotVisibleOnly          = "
)
.
append
(
isPlotVisibleOnly
(
)
)
.
append
(
'\n'
)
;
buffer
.
append
(
"         .doNotSizeWithWindow      = "
)
.
append
(
isDoNotSizeWithWindow
(
)
)
.
append
(
'\n'
)
;
buffer
.
append
(
"         .defaultPlotDimensions     = "
)
.
append
(
isDefaultPlotDimensions
(
)
)
.
append
(
'\n'
)
;
buffer
.
append
(
"         .autoPlotArea             = "
)
.
append
(
isAutoPlotArea
(
)
)
.
append
(
'\n'
)
;
buffer
.
append
(
"    .empty                = "
)
.
append
(
"0x"
)
.
append
(
HexDump
.
toHex
(
getEmpty
(
)
)
)
.
append
(
" ("
)
.
append
(
getEmpty
(
)
)
.
append
(
" )"
)
;
buffer
.
append
(
System
.
getProperty
(
"line.separator"
)
)
;
buffer
.
append
(
"[/SHTPROPS]\n"
)
;
return
buffer
.
toString
(
)
;
}
public
int
serialize
(
int
offset
,
byte
[
]
data
)
{
int
pos
=
0
;
LittleEndian
.
putShort
(
data
,
0
+
offset
,
sid
)
;
LittleEndian
.
putShort
(
data
,
2
+
offset
,
(
short
)
(
getRecordSize
(
)
-
4
)
)
;
LittleEndian
.
putShort
(
data
,
4
+
offset
+
pos
,
field_1_flags
)
;
data
[
6
+
offset
+
pos
]
=
field_2_empty
;
return
getRecordSize
(
)
;
}
public
int
getRecordSize
(
)
{
return
4
+
2
+
1
;
}
public
short
getSid
(
)
{
return
this
.
sid
;
}
public
Object
clone
(
)
{
SheetPropertiesRecord
rec
=
new
SheetPropertiesRecord
(
)
;
rec
.
field_1_flags
=
field_1_flags
;
rec
.
field_2_empty
=
field_2_empty
;
return
rec
;
}
public
short
getFlags
(
)
{
return
field_1_flags
;
}
public
void
setFlags
(
short
field_1_flags
)
{
this
.
field_1_flags
=
field_1_flags
;
}
public
byte
getEmpty
(
)
{
return
field_2_empty
;
}
public
void
setEmpty
(
byte
field_2_empty
)
{
this
.
field_2_empty
=
field_2_empty
;
}
public
void
setChartTypeManuallyFormatted
(
boolean
value
)
{
field_1_flags
=
chartTypeManuallyFormatted
.
setShortBoolean
(
field_1_flags
,
value
)
;
}
public
boolean
isChartTypeManuallyFormatted
(
)
{
return
chartTypeManuallyFormatted
.
isSet
(
field_1_flags
)
;
}
public
void
setPlotVisibleOnly
(
boolean
value
)
{
field_1_flags
=
plotVisibleOnly
.
setShortBoolean
(
field_1_flags
,
value
)
;
}
public
boolean
isPlotVisibleOnly
(
)
{
return
plotVisibleOnly
.
isSet
(
field_1_flags
)
;
}
public
void
setDoNotSizeWithWindow
(
boolean
value
)
{
field_1_flags
=
doNotSizeWithWindow
.
setShortBoolean
(
field_1_flags
,
value
)
;
}
public
boolean
isDoNotSizeWithWindow
(
)
{
return
doNotSizeWithWindow
.
isSet
(
field_1_flags
)
;
}
public
void
setDefaultPlotDimensions
(
boolean
value
)
{
field_1_flags
=
defaultPlotDimensions
.
setShortBoolean
(
field_1_flags
,
value
)
;
}
public
boolean
isDefaultPlotDimensions
(
)
{
return
defaultPlotDimensions
.
isSet
(
field_1_flags
)
;
}
public
void
setAutoPlotArea
(
boolean
value
)
{
field_1_flags
=
autoPlotArea
.
setShortBoolean
(
field_1_flags
,
value
)
;
}
public
boolean
isAutoPlotArea
(
)
{
return
autoPlotArea
.
isSet
(
field_1_flags
)
;
}
}
