package
org
.
apache
.
poi
.
hssf
.
record
;
import
org
.
apache
.
poi
.
util
.
*
;
public
class
UnitsRecord
extends
Record
{
public
final
static
short
sid
=
0x1001
;
private
short
field_1_units
;
public
UnitsRecord
(
)
{
}
public
UnitsRecord
(
short
id
,
short
size
,
byte
[
]
data
)
{
super
(
id
,
size
,
data
)
;
}
public
UnitsRecord
(
short
id
,
short
size
,
byte
[
]
data
,
int
offset
)
{
super
(
id
,
size
,
data
,
offset
)
;
}
protected
void
validateSid
(
short
id
)
{
if
(
id
!=
sid
)
{
throw
new
RecordFormatException
(
"Not a Units record"
)
;
}
}
protected
void
fillFields
(
byte
[
]
data
,
short
size
,
int
offset
)
{
int
pos
=
0
;
field_1_units
=
LittleEndian
.
getShort
(
data
,
pos
+
0x0
+
offset
)
;
}
public
String
toString
(
)
{
StringBuffer
buffer
=
new
StringBuffer
(
)
;
buffer
.
append
(
"[UNITS]\n"
)
;
buffer
.
append
(
"    .units                = "
)
.
append
(
"0x"
)
.
append
(
HexDump
.
toHex
(
getUnits
(
)
)
)
.
append
(
" ("
)
.
append
(
getUnits
(
)
)
.
append
(
" )"
)
;
buffer
.
append
(
System
.
getProperty
(
"line.separator"
)
)
;
buffer
.
append
(
"[/UNITS]\n"
)
;
return
buffer
.
toString
(
)
;
}
public
int
serialize
(
int
offset
,
byte
[
]
data
)
{
int
pos
=
0
;
LittleEndian
.
putShort
(
data
,
0
+
offset
,
sid
)
;
LittleEndian
.
putShort
(
data
,
2
+
offset
,
(
short
)
(
getRecordSize
(
)
-
4
)
)
;
LittleEndian
.
putShort
(
data
,
4
+
offset
+
pos
,
field_1_units
)
;
return
getRecordSize
(
)
;
}
public
int
getRecordSize
(
)
{
return
4
+
2
;
}
public
short
getSid
(
)
{
return
this
.
sid
;
}
public
Object
clone
(
)
{
UnitsRecord
rec
=
new
UnitsRecord
(
)
;
rec
.
field_1_units
=
field_1_units
;
return
rec
;
}
public
short
getUnits
(
)
{
return
field_1_units
;
}
public
void
setUnits
(
short
field_1_units
)
{
this
.
field_1_units
=
field_1_units
;
}
}
