package
org
.
apache
.
poi
.
util
;
import
org
.
apache
.
poi
.
util
.
LittleEndian
.
BufferUnderrunException
;
import
java
.
io
.
*
;
public
class
ShortField
implements
FixedField
{
private
short
_value
;
private
final
int
_offset
;
public
ShortField
(
final
int
offset
)
throws
ArrayIndexOutOfBoundsException
{
if
(
offset
<
0
)
{
throw
new
ArrayIndexOutOfBoundsException
(
"Illegal offset: "
+
offset
)
;
}
_offset
=
offset
;
}
public
ShortField
(
final
int
offset
,
final
short
value
)
throws
ArrayIndexOutOfBoundsException
{
this
(
offset
)
;
set
(
value
)
;
}
public
ShortField
(
final
int
offset
,
final
byte
[
]
data
)
throws
ArrayIndexOutOfBoundsException
{
this
(
offset
)
;
readFromBytes
(
data
)
;
}
public
ShortField
(
final
int
offset
,
final
short
value
,
final
byte
[
]
data
)
throws
ArrayIndexOutOfBoundsException
{
this
(
offset
)
;
set
(
value
,
data
)
;
}
public
short
get
(
)
{
return
_value
;
}
public
void
set
(
final
short
value
)
{
_value
=
value
;
}
public
void
set
(
final
short
value
,
final
byte
[
]
data
)
throws
ArrayIndexOutOfBoundsException
{
_value
=
value
;
writeToBytes
(
data
)
;
}
public
void
readFromBytes
(
final
byte
[
]
data
)
throws
ArrayIndexOutOfBoundsException
{
_value
=
LittleEndian
.
getShort
(
data
,
_offset
)
;
}
public
void
readFromStream
(
final
InputStream
stream
)
throws
IOException
,
BufferUnderrunException
{
_value
=
LittleEndian
.
readShort
(
stream
)
;
}
public
void
writeToBytes
(
final
byte
[
]
data
)
throws
ArrayIndexOutOfBoundsException
{
LittleEndian
.
putShort
(
data
,
_offset
,
_value
)
;
}
public
String
toString
(
)
{
return
String
.
valueOf
(
_value
)
;
}
}
