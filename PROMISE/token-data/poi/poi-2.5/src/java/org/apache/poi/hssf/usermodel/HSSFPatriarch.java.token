package
org
.
apache
.
poi
.
hssf
.
usermodel
;
import
java
.
util
.
ArrayList
;
import
java
.
util
.
Iterator
;
import
java
.
util
.
List
;
public
class
HSSFPatriarch
implements
HSSFShapeContainer
{
List
shapes
=
new
ArrayList
(
)
;
HSSFSheet
sheet
;
int
x1
=
0
;
int
y1
=
0
;
int
x2
=
1023
;
int
y2
=
255
;
HSSFPatriarch
(
HSSFSheet
sheet
)
{
this
.
sheet
=
sheet
;
}
public
HSSFShapeGroup
createGroup
(
HSSFClientAnchor
anchor
)
{
HSSFShapeGroup
group
=
new
HSSFShapeGroup
(
null
,
anchor
)
;
group
.
anchor
=
anchor
;
shapes
.
add
(
group
)
;
return
group
;
}
public
HSSFSimpleShape
createSimpleShape
(
HSSFClientAnchor
anchor
)
{
HSSFSimpleShape
shape
=
new
HSSFSimpleShape
(
null
,
anchor
)
;
shape
.
anchor
=
anchor
;
shapes
.
add
(
shape
)
;
return
shape
;
}
public
HSSFPolygon
createPolygon
(
HSSFClientAnchor
anchor
)
{
HSSFPolygon
shape
=
new
HSSFPolygon
(
null
,
anchor
)
;
shape
.
anchor
=
anchor
;
shapes
.
add
(
shape
)
;
return
shape
;
}
public
HSSFTextbox
createTextbox
(
HSSFClientAnchor
anchor
)
{
HSSFTextbox
shape
=
new
HSSFTextbox
(
null
,
anchor
)
;
shape
.
anchor
=
anchor
;
shapes
.
add
(
shape
)
;
return
shape
;
}
public
List
getChildren
(
)
{
return
shapes
;
}
public
int
countOfAllChildren
(
)
{
int
count
=
shapes
.
size
(
)
;
for
(
Iterator
iterator
=
shapes
.
iterator
(
)
;
iterator
.
hasNext
(
)
;
)
{
HSSFShape
shape
=
(
HSSFShape
)
iterator
.
next
(
)
;
count
+=
shape
.
countOfAllChildren
(
)
;
}
return
count
;
}
public
void
setCoordinates
(
int
x1
,
int
y1
,
int
x2
,
int
y2
)
{
this
.
x1
=
x1
;
this
.
y1
=
y1
;
this
.
x2
=
x2
;
this
.
y2
=
y2
;
}
public
int
getX1
(
)
{
return
x1
;
}
public
int
getY1
(
)
{
return
y1
;
}
public
int
getX2
(
)
{
return
x2
;
}
public
int
getY2
(
)
{
return
y2
;
}
}
