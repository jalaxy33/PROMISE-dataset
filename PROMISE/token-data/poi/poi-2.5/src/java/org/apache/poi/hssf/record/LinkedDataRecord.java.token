package
org
.
apache
.
poi
.
hssf
.
record
;
import
org
.
apache
.
poi
.
util
.
*
;
public
class
LinkedDataRecord
extends
Record
{
public
final
static
short
sid
=
0x1051
;
private
byte
field_1_linkType
;
public
final
static
byte
LINK_TYPE_TITLE_OR_TEXT
=
0
;
public
final
static
byte
LINK_TYPE_VALUES
=
1
;
public
final
static
byte
LINK_TYPE_CATEGORIES
=
2
;
private
byte
field_2_referenceType
;
public
final
static
byte
REFERENCE_TYPE_DEFAULT_CATEGORIES
=
0
;
public
final
static
byte
REFERENCE_TYPE_DIRECT
=
1
;
public
final
static
byte
REFERENCE_TYPE_WORKSHEET
=
2
;
public
final
static
byte
REFERENCE_TYPE_NOT_USED
=
3
;
public
final
static
byte
REFERENCE_TYPE_ERROR_REPORTED
=
4
;
private
short
field_3_options
;
private
BitField
customNumberFormat
=
new
BitField
(
0x1
)
;
private
short
field_4_indexNumberFmtRecord
;
private
LinkedDataFormulaField
field_5_formulaOfLink
;
public
LinkedDataRecord
(
)
{
}
public
LinkedDataRecord
(
short
id
,
short
size
,
byte
[
]
data
)
{
super
(
id
,
size
,
data
)
;
}
public
LinkedDataRecord
(
short
id
,
short
size
,
byte
[
]
data
,
int
offset
)
{
super
(
id
,
size
,
data
,
offset
)
;
}
protected
void
validateSid
(
short
id
)
{
if
(
id
!=
sid
)
{
throw
new
RecordFormatException
(
"Not a LinkedData record"
)
;
}
}
protected
void
fillFields
(
byte
[
]
data
,
short
size
,
int
offset
)
{
int
pos
=
0
;
field_1_linkType
=
data
[
pos
+
0x0
+
offset
]
;
field_2_referenceType
=
data
[
pos
+
0x1
+
offset
]
;
field_3_options
=
LittleEndian
.
getShort
(
data
,
pos
+
0x2
+
offset
)
;
field_4_indexNumberFmtRecord
=
LittleEndian
.
getShort
(
data
,
pos
+
0x4
+
offset
)
;
field_5_formulaOfLink
=
new
org
.
apache
.
poi
.
hssf
.
record
.
LinkedDataFormulaField
(
)
;
pos
+=
field_5_formulaOfLink
.
fillField
(
data
,
size
,
pos
+
offset
+
6
)
;
}
public
String
toString
(
)
{
StringBuffer
buffer
=
new
StringBuffer
(
)
;
buffer
.
append
(
"[AI]\n"
)
;
buffer
.
append
(
"    .linkType             = "
)
.
append
(
"0x"
)
.
append
(
HexDump
.
toHex
(
getLinkType
(
)
)
)
.
append
(
" ("
)
.
append
(
getLinkType
(
)
)
.
append
(
" )"
)
;
buffer
.
append
(
System
.
getProperty
(
"line.separator"
)
)
;
buffer
.
append
(
"    .referenceType        = "
)
.
append
(
"0x"
)
.
append
(
HexDump
.
toHex
(
getReferenceType
(
)
)
)
.
append
(
" ("
)
.
append
(
getReferenceType
(
)
)
.
append
(
" )"
)
;
buffer
.
append
(
System
.
getProperty
(
"line.separator"
)
)
;
buffer
.
append
(
"    .options              = "
)
.
append
(
"0x"
)
.
append
(
HexDump
.
toHex
(
getOptions
(
)
)
)
.
append
(
" ("
)
.
append
(
getOptions
(
)
)
.
append
(
" )"
)
;
buffer
.
append
(
System
.
getProperty
(
"line.separator"
)
)
;
buffer
.
append
(
"         .customNumberFormat       = "
)
.
append
(
isCustomNumberFormat
(
)
)
.
append
(
'\n'
)
;
buffer
.
append
(
"    .indexNumberFmtRecord = "
)
.
append
(
"0x"
)
.
append
(
HexDump
.
toHex
(
getIndexNumberFmtRecord
(
)
)
)
.
append
(
" ("
)
.
append
(
getIndexNumberFmtRecord
(
)
)
.
append
(
" )"
)
;
buffer
.
append
(
System
.
getProperty
(
"line.separator"
)
)
;
buffer
.
append
(
"    .formulaOfLink        = "
)
.
append
(
" ("
)
.
append
(
getFormulaOfLink
(
)
)
.
append
(
" )"
)
;
buffer
.
append
(
System
.
getProperty
(
"line.separator"
)
)
;
buffer
.
append
(
"[/AI]\n"
)
;
return
buffer
.
toString
(
)
;
}
public
int
serialize
(
int
offset
,
byte
[
]
data
)
{
int
pos
=
0
;
LittleEndian
.
putShort
(
data
,
0
+
offset
,
sid
)
;
LittleEndian
.
putShort
(
data
,
2
+
offset
,
(
short
)
(
getRecordSize
(
)
-
4
)
)
;
data
[
4
+
offset
+
pos
]
=
field_1_linkType
;
data
[
5
+
offset
+
pos
]
=
field_2_referenceType
;
LittleEndian
.
putShort
(
data
,
6
+
offset
+
pos
,
field_3_options
)
;
LittleEndian
.
putShort
(
data
,
8
+
offset
+
pos
,
field_4_indexNumberFmtRecord
)
;
pos
+=
field_5_formulaOfLink
.
serializeField
(
pos
+
10
+
offset
,
data
)
;
return
getRecordSize
(
)
;
}
public
int
getRecordSize
(
)
{
return
4
+
1
+
1
+
2
+
2
+
field_5_formulaOfLink
.
getSize
(
)
;
}
public
short
getSid
(
)
{
return
this
.
sid
;
}
public
Object
clone
(
)
{
LinkedDataRecord
rec
=
new
LinkedDataRecord
(
)
;
rec
.
field_1_linkType
=
field_1_linkType
;
rec
.
field_2_referenceType
=
field_2_referenceType
;
rec
.
field_3_options
=
field_3_options
;
rec
.
field_4_indexNumberFmtRecord
=
field_4_indexNumberFmtRecord
;
rec
.
field_5_formulaOfLink
=
(
(
org
.
apache
.
poi
.
hssf
.
record
.
LinkedDataFormulaField
)
field_5_formulaOfLink
.
clone
(
)
)
;
;
return
rec
;
}
public
byte
getLinkType
(
)
{
return
field_1_linkType
;
}
public
void
setLinkType
(
byte
field_1_linkType
)
{
this
.
field_1_linkType
=
field_1_linkType
;
}
public
byte
getReferenceType
(
)
{
return
field_2_referenceType
;
}
public
void
setReferenceType
(
byte
field_2_referenceType
)
{
this
.
field_2_referenceType
=
field_2_referenceType
;
}
public
short
getOptions
(
)
{
return
field_3_options
;
}
public
void
setOptions
(
short
field_3_options
)
{
this
.
field_3_options
=
field_3_options
;
}
public
short
getIndexNumberFmtRecord
(
)
{
return
field_4_indexNumberFmtRecord
;
}
public
void
setIndexNumberFmtRecord
(
short
field_4_indexNumberFmtRecord
)
{
this
.
field_4_indexNumberFmtRecord
=
field_4_indexNumberFmtRecord
;
}
public
LinkedDataFormulaField
getFormulaOfLink
(
)
{
return
field_5_formulaOfLink
;
}
public
void
setFormulaOfLink
(
LinkedDataFormulaField
field_5_formulaOfLink
)
{
this
.
field_5_formulaOfLink
=
field_5_formulaOfLink
;
}
public
void
setCustomNumberFormat
(
boolean
value
)
{
field_3_options
=
customNumberFormat
.
setShortBoolean
(
field_3_options
,
value
)
;
}
public
boolean
isCustomNumberFormat
(
)
{
return
customNumberFormat
.
isSet
(
field_3_options
)
;
}
}
