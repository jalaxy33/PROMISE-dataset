package
org
.
apache
.
poi
.
hssf
.
record
;
import
org
.
apache
.
poi
.
util
.
LittleEndian
;
public
class
SharedFormulaRecord
extends
Record
{
public
final
static
short
sid
=
0x4BC
;
private
short
size
=
0
;
private
byte
[
]
thedata
=
null
;
int
offset
=
0
;
public
SharedFormulaRecord
(
)
{
}
public
SharedFormulaRecord
(
short
id
,
short
size
,
byte
[
]
data
)
{
super
(
id
,
size
,
data
)
;
this
.
fillFields
(
data
,
size
,
0
)
;
}
public
int
serialize
(
int
offset
,
byte
[
]
data
)
{
if
(
thedata
==
null
)
{
thedata
=
new
byte
[
0
]
;
}
LittleEndian
.
putShort
(
data
,
0
+
offset
,
sid
)
;
LittleEndian
.
putShort
(
data
,
2
+
offset
,
(
short
)
(
thedata
.
length
)
)
;
if
(
thedata
.
length
>
0
)
{
System
.
arraycopy
(
thedata
,
0
,
data
,
4
+
offset
,
thedata
.
length
)
;
}
return
getRecordSize
(
)
;
}
public
int
getRecordSize
(
)
{
int
retval
=
4
;
if
(
thedata
!=
null
)
{
retval
+=
thedata
.
length
;
}
return
retval
;
}
protected
void
validateSid
(
short
id
)
{
if
(
id
!=
this
.
sid
)
{
throw
new
RecordFormatException
(
"Not a valid SharedFormula"
)
;
}
}
public
String
toString
(
)
{
StringBuffer
buffer
=
new
StringBuffer
(
)
;
buffer
.
append
(
"[SHARED FORMULA RECORD:"
+
Integer
.
toHexString
(
sid
)
+
"]\n"
)
;
buffer
.
append
(
"    .id        = "
)
.
append
(
Integer
.
toHexString
(
sid
)
)
.
append
(
"\n"
)
;
buffer
.
append
(
"[/SHARED FORMULA RECORD]\n"
)
;
return
buffer
.
toString
(
)
;
}
public
short
getSid
(
)
{
return
this
.
sid
;
}
protected
void
fillFields
(
byte
[
]
data
,
short
size
,
int
offset
)
{
thedata
=
new
byte
[
size
]
;
System
.
arraycopy
(
data
,
0
,
thedata
,
0
,
size
)
;
}
public
boolean
isInValueSection
(
)
{
return
true
;
}
public
boolean
isValue
(
)
{
return
true
;
}
public
Object
clone
(
)
{
SharedFormulaRecord
rec
=
new
SharedFormulaRecord
(
)
;
rec
.
offset
=
offset
;
rec
.
size
=
size
;
rec
.
thedata
=
thedata
;
return
rec
;
}
}
