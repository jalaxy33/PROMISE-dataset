package
org
.
apache
.
xpath
.
compiler
;
import
org
.
apache
.
xpath
.
functions
.
Function
;
public
class
FuncLoader
{
private
int
m_funcID
;
private
String
m_funcName
;
public
String
getName
(
)
{
return
m_funcName
;
}
public
FuncLoader
(
String
funcName
,
int
funcID
)
{
super
(
)
;
m_funcID
=
funcID
;
m_funcName
=
funcName
;
}
public
Function
getFunction
(
)
throws
javax
.
xml
.
transform
.
TransformerException
{
try
{
Class
function
;
if
(
m_funcName
.
indexOf
(
"."
)
<
0
)
{
String
classname
=
"org.apache.xpath.functions."
+
m_funcName
;
function
=
Class
.
forName
(
classname
)
;
}
else
function
=
Class
.
forName
(
m_funcName
)
;
Function
func
=
(
Function
)
function
.
newInstance
(
)
;
return
func
;
}
catch
(
ClassNotFoundException
e
)
{
throw
new
javax
.
xml
.
transform
.
TransformerException
(
e
)
;
}
catch
(
IllegalAccessException
e
)
{
throw
new
javax
.
xml
.
transform
.
TransformerException
(
e
)
;
}
catch
(
InstantiationException
e
)
{
throw
new
javax
.
xml
.
transform
.
TransformerException
(
e
)
;
}
}
}
