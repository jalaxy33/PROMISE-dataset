package
org
.
apache
.
xml
.
utils
.
synthetic
.
reflection
;
import
org
.
apache
.
xml
.
utils
.
synthetic
.
Class
;
import
org
.
apache
.
xml
.
utils
.
synthetic
.
SynthesisException
;
public
class
Field
extends
Object
implements
Member
{
public
String
name
,
initializer
=
null
;
int
modifiers
;
java
.
lang
.
reflect
.
Field
realfield
=
null
;
Class
declaringClass
,
type
;
public
Field
(
java
.
lang
.
reflect
.
Field
realfield
,
org
.
apache
.
xml
.
utils
.
synthetic
.
Class
declaringClass
)
{
this
(
realfield
.
getName
(
)
,
declaringClass
)
;
this
.
realfield
=
realfield
;
this
.
type
=
org
.
apache
.
xml
.
utils
.
synthetic
.
Class
.
forClass
(
realfield
.
getType
(
)
)
;
}
public
Field
(
String
name
,
org
.
apache
.
xml
.
utils
.
synthetic
.
Class
declaringClass
)
{
this
.
name
=
name
;
this
.
declaringClass
=
declaringClass
;
}
public
boolean
equals
(
Object
obj
)
{
if
(
realfield
!=
null
)
return
realfield
.
equals
(
obj
)
;
else
if
(
obj
instanceof
Field
)
{
Field
objf
=
(
Field
)
obj
;
return
(
declaringClass
.
equals
(
objf
.
declaringClass
)
&&
name
.
equals
(
objf
.
name
)
&&
type
.
equals
(
objf
.
type
)
)
;
}
else
return
false
;
}
public
Object
get
(
Object
obj
)
throws
IllegalArgumentException
,
IllegalAccessException
{
if
(
realfield
!=
null
)
return
realfield
.
get
(
obj
)
;
throw
new
java
.
lang
.
IllegalStateException
(
)
;
}
public
boolean
getBoolean
(
Object
obj
)
throws
IllegalArgumentException
,
IllegalAccessException
{
if
(
realfield
!=
null
)
return
realfield
.
getBoolean
(
obj
)
;
throw
new
java
.
lang
.
IllegalStateException
(
)
;
}
public
byte
getByte
(
Object
obj
)
throws
IllegalArgumentException
,
IllegalAccessException
{
if
(
realfield
!=
null
)
return
realfield
.
getByte
(
obj
)
;
throw
new
java
.
lang
.
IllegalStateException
(
)
;
}
public
char
getChar
(
Object
obj
)
throws
IllegalArgumentException
,
IllegalAccessException
{
if
(
realfield
!=
null
)
return
realfield
.
getChar
(
obj
)
;
throw
new
java
.
lang
.
IllegalStateException
(
)
;
}
public
org
.
apache
.
xml
.
utils
.
synthetic
.
Class
getDeclaringClass
(
)
{
if
(
realfield
!=
null
)
return
org
.
apache
.
xml
.
utils
.
synthetic
.
Class
.
forClass
(
realfield
.
getDeclaringClass
(
)
)
;
throw
new
java
.
lang
.
IllegalStateException
(
)
;
}
public
double
getDouble
(
Object
obj
)
throws
IllegalArgumentException
,
IllegalAccessException
{
if
(
realfield
!=
null
)
return
realfield
.
getDouble
(
obj
)
;
throw
new
java
.
lang
.
IllegalStateException
(
)
;
}
public
float
getFloat
(
Object
obj
)
throws
IllegalArgumentException
,
IllegalAccessException
{
if
(
realfield
!=
null
)
return
realfield
.
getFloat
(
obj
)
;
throw
new
java
.
lang
.
IllegalStateException
(
)
;
}
public
int
getInt
(
Object
obj
)
throws
IllegalArgumentException
,
IllegalAccessException
{
if
(
realfield
!=
null
)
return
realfield
.
getInt
(
obj
)
;
throw
new
java
.
lang
.
IllegalStateException
(
)
;
}
public
long
getLong
(
Object
obj
)
throws
IllegalArgumentException
,
IllegalAccessException
{
if
(
realfield
!=
null
)
return
realfield
.
getLong
(
obj
)
;
throw
new
java
.
lang
.
IllegalStateException
(
)
;
}
public
int
getModifiers
(
)
{
if
(
realfield
!=
null
)
modifiers
=
realfield
.
getModifiers
(
)
;
return
modifiers
;
}
public
String
getInitializer
(
)
{
return
initializer
;
}
public
void
setInitializer
(
String
i
)
throws
SynthesisException
{
if
(
realfield
!=
null
)
throw
new
SynthesisException
(
SynthesisException
.
REIFIED
)
;
initializer
=
i
;
}
public
java
.
lang
.
String
getName
(
)
{
return
name
;
}
public
short
getShort
(
Object
obj
)
throws
IllegalArgumentException
,
IllegalAccessException
{
if
(
realfield
!=
null
)
return
realfield
.
getShort
(
obj
)
;
throw
new
java
.
lang
.
IllegalStateException
(
)
;
}
public
Class
getType
(
)
{
if
(
realfield
!=
null
)
type
=
Class
.
forClass
(
realfield
.
getType
(
)
)
;
return
type
;
}
public
void
setType
(
org
.
apache
.
xml
.
utils
.
synthetic
.
Class
type
)
throws
SynthesisException
{
if
(
realfield
!=
null
)
throw
new
SynthesisException
(
SynthesisException
.
REIFIED
)
;
this
.
type
=
type
;
}
public
int
hashCode
(
)
{
if
(
realfield
!=
null
)
return
realfield
.
hashCode
(
)
;
else
return
declaringClass
.
getName
(
)
.
hashCode
(
)
^
name
.
hashCode
(
)
;
}
public
void
set
(
Object
obj
,
Object
value
)
throws
IllegalArgumentException
,
IllegalAccessException
{
if
(
realfield
!=
null
)
realfield
.
set
(
obj
,
value
)
;
throw
new
java
.
lang
.
IllegalStateException
(
)
;
}
public
void
setBoolean
(
Object
obj
,
boolean
z
)
throws
IllegalArgumentException
,
IllegalAccessException
{
if
(
realfield
!=
null
)
realfield
.
setBoolean
(
obj
,
z
)
;
throw
new
java
.
lang
.
IllegalStateException
(
)
;
}
public
void
setByte
(
Object
obj
,
byte
b
)
throws
IllegalArgumentException
,
IllegalAccessException
{
if
(
realfield
!=
null
)
realfield
.
setByte
(
obj
,
b
)
;
throw
new
java
.
lang
.
IllegalStateException
(
)
;
}
public
void
setChar
(
Object
obj
,
char
c
)
throws
IllegalArgumentException
,
IllegalAccessException
{
if
(
realfield
!=
null
)
realfield
.
setChar
(
obj
,
c
)
;
throw
new
java
.
lang
.
IllegalStateException
(
)
;
}
public
void
setDeclaringClass
(
org
.
apache
.
xml
.
utils
.
synthetic
.
Class
declaringClass
)
{
this
.
declaringClass
=
declaringClass
;
}
public
void
setDouble
(
Object
obj
,
double
d
)
throws
IllegalArgumentException
,
IllegalAccessException
{
if
(
realfield
!=
null
)
realfield
.
setDouble
(
obj
,
d
)
;
throw
new
java
.
lang
.
IllegalStateException
(
)
;
}
public
void
setFloat
(
Object
obj
,
float
f
)
throws
IllegalArgumentException
,
IllegalAccessException
{
if
(
realfield
!=
null
)
realfield
.
setFloat
(
obj
,
f
)
;
throw
new
java
.
lang
.
IllegalStateException
(
)
;
}
public
void
setInt
(
Object
obj
,
int
i
)
throws
IllegalArgumentException
,
IllegalAccessException
{
if
(
realfield
!=
null
)
realfield
.
setInt
(
obj
,
i
)
;
throw
new
java
.
lang
.
IllegalStateException
(
)
;
}
public
void
setLong
(
Object
obj
,
long
l
)
throws
IllegalArgumentException
,
IllegalAccessException
{
if
(
realfield
!=
null
)
realfield
.
setLong
(
obj
,
l
)
;
throw
new
java
.
lang
.
IllegalStateException
(
)
;
}
public
void
setModifiers
(
int
modifiers
)
throws
SynthesisException
{
if
(
realfield
!=
null
)
throw
new
SynthesisException
(
SynthesisException
.
REIFIED
)
;
this
.
modifiers
=
modifiers
;
}
public
void
setShort
(
Object
obj
,
short
s
)
throws
IllegalArgumentException
,
IllegalAccessException
{
if
(
realfield
!=
null
)
realfield
.
setShort
(
obj
,
s
)
;
throw
new
java
.
lang
.
IllegalStateException
(
)
;
}
public
String
toString
(
)
{
if
(
realfield
!=
null
)
return
realfield
.
toString
(
)
;
throw
new
java
.
lang
.
IllegalStateException
(
)
;
}
public
String
toSource
(
)
{
StringBuffer
sb
=
new
StringBuffer
(
java
.
lang
.
reflect
.
Modifier
.
toString
(
getModifiers
(
)
)
)
.
append
(
' '
)
.
append
(
getType
(
)
.
getJavaName
(
)
)
.
append
(
' '
)
.
append
(
getName
(
)
)
;
String
i
=
getInitializer
(
)
;
if
(
i
!=
null
&&
i
.
length
(
)
>
0
)
sb
.
append
(
'='
)
.
append
(
i
)
;
sb
.
append
(
';'
)
;
return
sb
.
toString
(
)
;
}
}
