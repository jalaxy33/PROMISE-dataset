package
org
.
apache
.
xml
.
serializer
;
import
java
.
util
.
Vector
;
import
org
.
xml
.
sax
.
Attributes
;
import
org
.
xml
.
sax
.
ContentHandler
;
import
org
.
xml
.
sax
.
ErrorHandler
;
import
org
.
xml
.
sax
.
SAXException
;
import
org
.
xml
.
sax
.
SAXParseException
;
import
org
.
xml
.
sax
.
ext
.
LexicalHandler
;
abstract
public
class
ToSAXHandler
extends
SerializerBase
{
public
ToSAXHandler
(
)
{
}
public
ToSAXHandler
(
ContentHandler
hdlr
,
LexicalHandler
lex
,
String
encoding
)
{
setContentHandler
(
hdlr
)
;
setLexHandler
(
lex
)
;
setEncoding
(
encoding
)
;
}
public
ToSAXHandler
(
ContentHandler
handler
,
String
encoding
)
{
setContentHandler
(
handler
)
;
setEncoding
(
encoding
)
;
}
protected
ContentHandler
m_saxHandler
;
protected
LexicalHandler
m_lexHandler
;
protected
TransformStateSetter
m_state
=
null
;
protected
void
startDocumentInternal
(
)
throws
SAXException
{
if
(
m_needToCallStartDocument
)
{
super
.
startDocumentInternal
(
)
;
m_saxHandler
.
startDocument
(
)
;
m_needToCallStartDocument
=
false
;
}
}
public
void
startDTD
(
String
arg0
,
String
arg1
,
String
arg2
)
throws
SAXException
{
}
public
void
characters
(
String
characters
)
throws
SAXException
{
characters
(
characters
.
toCharArray
(
)
,
0
,
characters
.
length
(
)
)
;
}
public
void
comment
(
String
comment
)
throws
SAXException
{
if
(
m_startTagOpen
)
{
closeStartTag
(
)
;
}
else
if
(
m_cdataTagOpen
)
{
closeCDATA
(
)
;
}
if
(
m_lexHandler
!=
null
)
{
m_lexHandler
.
comment
(
comment
.
toCharArray
(
)
,
0
,
comment
.
length
(
)
)
;
super
.
fireCommentEvent
(
comment
.
toCharArray
(
)
,
0
,
comment
.
length
(
)
)
;
}
}
public
void
processingInstruction
(
String
target
,
String
data
)
throws
SAXException
{
}
protected
void
closeStartTag
(
)
throws
SAXException
{
}
protected
void
closeCDATA
(
)
throws
SAXException
{
}
public
void
startElement
(
String
arg0
,
String
arg1
,
String
arg2
,
Attributes
arg3
)
throws
SAXException
{
if
(
m_state
!=
null
)
{
m_state
.
resetState
(
getTransformer
(
)
)
;
}
super
.
fireStartElem
(
arg2
)
;
}
public
void
setLexHandler
(
LexicalHandler
_lexHandler
)
{
this
.
m_lexHandler
=
_lexHandler
;
}
public
void
setContentHandler
(
ContentHandler
_saxHandler
)
{
this
.
m_saxHandler
=
_saxHandler
;
if
(
m_lexHandler
==
null
&&
_saxHandler
instanceof
LexicalHandler
)
{
m_lexHandler
=
(
LexicalHandler
)
_saxHandler
;
}
}
public
void
setCdataSectionElements
(
Vector
URI_and_localNames
)
{
}
public
void
flushPending
(
)
{
try
{
if
(
m_needToCallStartDocument
)
{
startDocumentInternal
(
)
;
m_needToCallStartDocument
=
false
;
}
if
(
m_startTagOpen
)
{
closeStartTag
(
)
;
m_startTagOpen
=
false
;
}
if
(
m_cdataTagOpen
)
{
closeCDATA
(
)
;
m_cdataTagOpen
=
false
;
}
}
catch
(
SAXException
e
)
{
}
}
public
void
setTransformState
(
TransformStateSetter
ts
)
{
this
.
m_state
=
ts
;
}
public
void
startElement
(
String
uri
,
String
localName
,
String
qName
)
throws
SAXException
{
if
(
m_state
!=
null
)
{
m_state
.
resetState
(
getTransformer
(
)
)
;
}
super
.
fireStartElem
(
qName
)
;
}
public
void
startElement
(
String
qName
)
throws
SAXException
{
if
(
m_state
!=
null
)
{
m_state
.
resetState
(
getTransformer
(
)
)
;
}
super
.
fireStartElem
(
qName
)
;
}
public
void
characters
(
org
.
w3c
.
dom
.
Node
node
)
throws
org
.
xml
.
sax
.
SAXException
{
if
(
m_state
!=
null
)
{
m_state
.
setCurrentNode
(
node
)
;
}
super
.
characters
(
node
)
;
}
public
void
fatalError
(
SAXParseException
exc
)
throws
SAXException
{
super
.
fatalError
(
exc
)
;
m_needToCallStartDocument
=
false
;
if
(
m_saxHandler
instanceof
ErrorHandler
)
{
(
(
ErrorHandler
)
m_saxHandler
)
.
fatalError
(
exc
)
;
}
}
public
void
error
(
SAXParseException
exc
)
throws
SAXException
{
super
.
error
(
exc
)
;
if
(
m_saxHandler
instanceof
ErrorHandler
)
(
(
ErrorHandler
)
m_saxHandler
)
.
error
(
exc
)
;
}
public
void
warning
(
SAXParseException
exc
)
throws
SAXException
{
super
.
warning
(
exc
)
;
if
(
m_saxHandler
instanceof
ErrorHandler
)
(
(
ErrorHandler
)
m_saxHandler
)
.
warning
(
exc
)
;
}
}
