package
org
.
apache
.
xalan
.
templates
;
import
javax
.
xml
.
transform
.
TransformerException
;
import
org
.
apache
.
xalan
.
res
.
XSLTErrorResources
;
import
org
.
apache
.
xalan
.
transformer
.
TransformerImpl
;
import
org
.
apache
.
xml
.
serializer
.
SerializationHandler
;
import
org
.
apache
.
xml
.
utils
.
QName
;
import
org
.
apache
.
xpath
.
XPathContext
;
import
org
.
xml
.
sax
.
SAXException
;
public
class
ElemElement
extends
ElemUse
{
protected
AVT
m_name_avt
=
null
;
public
void
setName
(
AVT
v
)
{
m_name_avt
=
v
;
}
public
AVT
getName
(
)
{
return
m_name_avt
;
}
protected
AVT
m_namespace_avt
=
null
;
public
void
setNamespace
(
AVT
v
)
{
m_namespace_avt
=
v
;
}
public
AVT
getNamespace
(
)
{
return
m_namespace_avt
;
}
public
void
compose
(
StylesheetRoot
sroot
)
throws
TransformerException
{
super
.
compose
(
sroot
)
;
StylesheetRoot
.
ComposeState
cstate
=
sroot
.
getComposeState
(
)
;
java
.
util
.
Vector
vnames
=
cstate
.
getVariableNames
(
)
;
if
(
null
!=
m_name_avt
)
m_name_avt
.
fixupVariables
(
vnames
,
cstate
.
getGlobalsSize
(
)
)
;
if
(
null
!=
m_namespace_avt
)
m_namespace_avt
.
fixupVariables
(
vnames
,
cstate
.
getGlobalsSize
(
)
)
;
}
public
int
getXSLToken
(
)
{
return
Constants
.
ELEMNAME_ELEMENT
;
}
public
String
getNodeName
(
)
{
return
Constants
.
ELEMNAME_ELEMENT_STRING
;
}
protected
boolean
validateNodeName
(
String
nodeName
)
{
if
(
nodeName
==
null
)
return
false
;
int
len
=
nodeName
.
length
(
)
;
if
(
len
==
0
)
return
false
;
int
indexOfNSSep
=
nodeName
.
indexOf
(
':'
)
;
if
(
indexOfNSSep
+
1
==
len
)
return
false
;
if
(
indexOfNSSep
==
0
)
return
false
;
String
localName
=
QName
.
getLocalPart
(
nodeName
)
;
if
(
isValidNCName
(
localName
)
)
{
String
prefix
=
QName
.
getPrefixPart
(
nodeName
)
;
if
(
prefix
.
length
(
)
==
0
)
return
true
;
if
(
isValidNCName
(
prefix
)
)
return
true
;
}
return
false
;
}
protected
String
resolvePrefix
(
SerializationHandler
rhandler
,
String
prefix
,
String
nodeNamespace
)
throws
TransformerException
{
return
prefix
;
}
public
void
execute
(
TransformerImpl
transformer
)
throws
TransformerException
{
if
(
TransformerImpl
.
S_DEBUG
)
transformer
.
getTraceManager
(
)
.
fireTraceEvent
(
this
)
;
SerializationHandler
rhandler
=
transformer
.
getSerializationHandler
(
)
;
XPathContext
xctxt
=
transformer
.
getXPathContext
(
)
;
int
sourceNode
=
xctxt
.
getCurrentNode
(
)
;
String
nodeName
=
m_name_avt
==
null
?
null
:
m_name_avt
.
evaluate
(
xctxt
,
sourceNode
,
this
)
;
String
prefix
=
null
;
String
nodeNamespace
=
""
;
if
(
(
nodeName
!=
null
)
&&
(
!
m_name_avt
.
isSimple
(
)
)
&&
(
!
validateNodeName
(
nodeName
)
)
)
{
transformer
.
getMsgMgr
(
)
.
warn
(
this
,
XSLTErrorResources
.
WG_ILLEGAL_ATTRIBUTE_VALUE
,
new
Object
[
]
{
Constants
.
ATTRNAME_NAME
,
nodeName
}
)
;
nodeName
=
null
;
}
else
if
(
nodeName
!=
null
)
{
prefix
=
QName
.
getPrefixPart
(
nodeName
)
;
if
(
null
!=
m_namespace_avt
)
{
nodeNamespace
=
m_namespace_avt
.
evaluate
(
xctxt
,
sourceNode
,
this
)
;
if
(
null
==
nodeNamespace
||
(
prefix
!=
null
&&
prefix
.
length
(
)
>
0
&&
nodeNamespace
.
length
(
)
==
0
)
)
transformer
.
getMsgMgr
(
)
.
error
(
this
,
XSLTErrorResources
.
ER_NULL_URI_NAMESPACE
)
;
else
{
prefix
=
resolvePrefix
(
rhandler
,
prefix
,
nodeNamespace
)
;
if
(
null
==
prefix
)
prefix
=
""
;
if
(
prefix
.
length
(
)
>
0
)
nodeName
=
(
prefix
+
":"
+
QName
.
getLocalPart
(
nodeName
)
)
;
else
nodeName
=
QName
.
getLocalPart
(
nodeName
)
;
}
}
else
{
try
{
nodeNamespace
=
getNamespaceForPrefix
(
prefix
)
;
if
(
(
null
==
nodeNamespace
)
&&
(
prefix
.
length
(
)
==
0
)
)
nodeNamespace
=
""
;
else
if
(
null
==
nodeNamespace
)
{
transformer
.
getMsgMgr
(
)
.
warn
(
this
,
XSLTErrorResources
.
WG_COULD_NOT_RESOLVE_PREFIX
,
new
Object
[
]
{
prefix
}
)
;
nodeName
=
null
;
}
}
catch
(
Exception
ex
)
{
transformer
.
getMsgMgr
(
)
.
warn
(
this
,
XSLTErrorResources
.
WG_COULD_NOT_RESOLVE_PREFIX
,
new
Object
[
]
{
prefix
}
)
;
nodeName
=
null
;
}
}
}
constructNode
(
nodeName
,
prefix
,
nodeNamespace
,
transformer
)
;
if
(
TransformerImpl
.
S_DEBUG
)
transformer
.
getTraceManager
(
)
.
fireTraceEndEvent
(
this
)
;
}
void
constructNode
(
String
nodeName
,
String
prefix
,
String
nodeNamespace
,
TransformerImpl
transformer
)
throws
TransformerException
{
boolean
shouldAddAttrs
;
try
{
SerializationHandler
rhandler
=
transformer
.
getResultTreeHandler
(
)
;
if
(
null
==
nodeName
)
{
shouldAddAttrs
=
false
;
}
else
{
executeNSDecls
(
transformer
,
prefix
)
;
if
(
null
!=
prefix
)
{
rhandler
.
startPrefixMapping
(
prefix
,
nodeNamespace
,
true
)
;
}
rhandler
.
startElement
(
nodeNamespace
,
QName
.
getLocalPart
(
nodeName
)
,
nodeName
)
;
super
.
execute
(
transformer
)
;
shouldAddAttrs
=
true
;
}
transformer
.
executeChildTemplates
(
this
,
shouldAddAttrs
)
;
if
(
null
!=
nodeName
)
{
rhandler
.
endElement
(
nodeNamespace
,
QName
.
getLocalPart
(
nodeName
)
,
nodeName
)
;
if
(
null
!=
prefix
)
{
rhandler
.
endPrefixMapping
(
prefix
)
;
}
unexecuteNSDecls
(
transformer
,
prefix
)
;
}
}
catch
(
SAXException
se
)
{
throw
new
TransformerException
(
se
)
;
}
}
protected
void
callChildVisitors
(
XSLTVisitor
visitor
,
boolean
callAttrs
)
{
if
(
callAttrs
)
{
if
(
null
!=
m_name_avt
)
m_name_avt
.
callVisitors
(
visitor
)
;
if
(
null
!=
m_namespace_avt
)
m_namespace_avt
.
callVisitors
(
visitor
)
;
}
super
.
callChildVisitors
(
visitor
,
callAttrs
)
;
}
}
