package
org
.
apache
.
xalan
.
templates
;
import
org
.
w3c
.
dom
.
*
;
import
org
.
xml
.
sax
.
*
;
import
org
.
apache
.
xalan
.
trace
.
SelectionEvent
;
import
org
.
apache
.
xml
.
utils
.
QName
;
import
org
.
apache
.
xalan
.
res
.
XSLTErrorResources
;
import
org
.
apache
.
xalan
.
transformer
.
TransformerImpl
;
import
javax
.
xml
.
transform
.
TransformerException
;
public
class
ElemFallback
extends
ElemTemplateElement
{
public
int
getXSLToken
(
)
{
return
Constants
.
ELEMNAME_FALLBACK
;
}
public
String
getNodeName
(
)
{
return
Constants
.
ELEMNAME_FALLBACK_STRING
;
}
public
void
execute
(
TransformerImpl
transformer
)
throws
TransformerException
{
}
public
void
executeFallback
(
TransformerImpl
transformer
)
throws
TransformerException
{
if
(
Constants
.
ELEMNAME_EXTENSIONCALL
==
m_parentNode
.
getXSLToken
(
)
)
{
if
(
TransformerImpl
.
S_DEBUG
)
transformer
.
getTraceManager
(
)
.
fireTraceEvent
(
this
)
;
transformer
.
executeChildTemplates
(
this
,
true
)
;
if
(
TransformerImpl
.
S_DEBUG
)
transformer
.
getTraceManager
(
)
.
fireTraceEndEvent
(
this
)
;
}
else
{
System
.
out
.
println
(
"Error!  parent of xsl:fallback must be an extension element!"
)
;
}
}
}
