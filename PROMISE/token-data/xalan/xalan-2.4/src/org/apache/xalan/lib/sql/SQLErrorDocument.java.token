package
org
.
apache
.
xalan
.
lib
.
sql
;
import
org
.
apache
.
xml
.
dtm
.
DTMManager
;
import
org
.
apache
.
xml
.
dtm
.
DTM
;
import
java
.
sql
.
SQLException
;
public
class
SQLErrorDocument
extends
DTMDocument
{
private
static
final
String
S_EXT_ERROR
=
"ext-error"
;
private
static
final
String
S_SQL_ERROR
=
"sql-error"
;
private
static
final
String
S_MESSAGE
=
"message"
;
private
static
final
String
S_CODE
=
"code"
;
private
int
m_ErrorExt_TypeID
=
DTM
.
NULL
;
private
int
m_Message_TypeID
=
DTM
.
NULL
;
private
int
m_Code_TypeID
=
DTM
.
NULL
;
private
int
m_SQLError_TypeID
=
DTM
.
NULL
;
private
int
m_rootID
=
DTM
.
NULL
;
private
int
m_extErrorID
=
DTM
.
NULL
;
private
int
m_MainMessageID
=
DTM
.
NULL
;
public
SQLErrorDocument
(
DTMManager
mgr
,
int
ident
,
SQLException
error
)
{
super
(
mgr
,
ident
)
;
createExpandedNameTable
(
)
;
buildBasicStructure
(
error
)
;
int
sqlError
=
addElement
(
2
,
m_SQLError_TypeID
,
m_extErrorID
,
m_MainMessageID
)
;
int
element
=
DTM
.
NULL
;
element
=
addElementWithData
(
new
Integer
(
error
.
getErrorCode
(
)
)
,
3
,
m_Code_TypeID
,
sqlError
,
element
)
;
element
=
addElementWithData
(
error
.
getLocalizedMessage
(
)
,
3
,
m_Message_TypeID
,
sqlError
,
element
)
;
}
public
SQLErrorDocument
(
DTMManager
mgr
,
int
ident
,
Exception
error
)
{
super
(
mgr
,
ident
)
;
createExpandedNameTable
(
)
;
buildBasicStructure
(
error
)
;
}
private
void
buildBasicStructure
(
Exception
e
)
{
m_rootID
=
addElement
(
0
,
m_Document_TypeID
,
DTM
.
NULL
,
DTM
.
NULL
)
;
m_extErrorID
=
addElement
(
1
,
m_ErrorExt_TypeID
,
m_rootID
,
DTM
.
NULL
)
;
m_MainMessageID
=
addElementWithData
(
e
.
getLocalizedMessage
(
)
,
2
,
m_Message_TypeID
,
m_extErrorID
,
DTM
.
NULL
)
;
}
protected
void
createExpandedNameTable
(
)
{
super
.
createExpandedNameTable
(
)
;
m_ErrorExt_TypeID
=
m_expandedNameTable
.
getExpandedTypeID
(
S_NAMESPACE
,
S_EXT_ERROR
,
DTM
.
ELEMENT_NODE
)
;
m_SQLError_TypeID
=
m_expandedNameTable
.
getExpandedTypeID
(
S_NAMESPACE
,
S_SQL_ERROR
,
DTM
.
ELEMENT_NODE
)
;
m_Message_TypeID
=
m_expandedNameTable
.
getExpandedTypeID
(
S_NAMESPACE
,
S_MESSAGE
,
DTM
.
ELEMENT_NODE
)
;
m_Code_TypeID
=
m_expandedNameTable
.
getExpandedTypeID
(
S_NAMESPACE
,
S_CODE
,
DTM
.
ELEMENT_NODE
)
;
}
}
