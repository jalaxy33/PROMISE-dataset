package
org
.
apache
.
xalan
.
processor
;
import
org
.
apache
.
xalan
.
templates
.
StylesheetRoot
;
import
org
.
apache
.
xalan
.
templates
.
Stylesheet
;
import
org
.
apache
.
xalan
.
templates
.
StylesheetComposed
;
import
javax
.
xml
.
transform
.
TransformerException
;
import
org
.
xml
.
sax
.
Attributes
;
import
javax
.
xml
.
transform
.
TransformerConfigurationException
;
class
ProcessorStylesheetElement
extends
XSLTElementProcessor
{
public
void
startElement
(
StylesheetHandler
handler
,
String
uri
,
String
localName
,
String
rawName
,
Attributes
attributes
)
throws
org
.
xml
.
sax
.
SAXException
{
super
.
startElement
(
handler
,
uri
,
localName
,
rawName
,
attributes
)
;
try
{
int
stylesheetType
=
handler
.
getStylesheetType
(
)
;
Stylesheet
stylesheet
;
if
(
stylesheetType
==
StylesheetHandler
.
STYPE_ROOT
)
{
try
{
stylesheet
=
new
StylesheetRoot
(
handler
.
getSchema
(
)
,
handler
.
getStylesheetProcessor
(
)
.
getErrorListener
(
)
)
;
}
catch
(
TransformerConfigurationException
tfe
)
{
throw
new
TransformerException
(
tfe
)
;
}
}
else
{
Stylesheet
parent
=
handler
.
getStylesheet
(
)
;
if
(
stylesheetType
==
StylesheetHandler
.
STYPE_IMPORT
)
{
StylesheetComposed
sc
=
new
StylesheetComposed
(
parent
)
;
parent
.
setImport
(
sc
)
;
stylesheet
=
sc
;
}
else
{
stylesheet
=
new
Stylesheet
(
parent
)
;
parent
.
setInclude
(
stylesheet
)
;
}
}
stylesheet
.
setDOMBackPointer
(
handler
.
getOriginatingNode
(
)
)
;
stylesheet
.
setLocaterInfo
(
handler
.
getLocator
(
)
)
;
stylesheet
.
setPrefixes
(
handler
.
getNamespaceSupport
(
)
)
;
handler
.
pushStylesheet
(
stylesheet
)
;
setPropertiesFromAttributes
(
handler
,
rawName
,
attributes
,
handler
.
getStylesheet
(
)
)
;
handler
.
pushElemTemplateElement
(
handler
.
getStylesheet
(
)
)
;
}
catch
(
TransformerException
te
)
{
throw
new
org
.
xml
.
sax
.
SAXException
(
te
)
;
}
}
public
void
endElement
(
StylesheetHandler
handler
,
String
uri
,
String
localName
,
String
rawName
)
throws
org
.
xml
.
sax
.
SAXException
{
super
.
endElement
(
handler
,
uri
,
localName
,
rawName
)
;
handler
.
popElemTemplateElement
(
)
;
handler
.
popStylesheet
(
)
;
}
}
