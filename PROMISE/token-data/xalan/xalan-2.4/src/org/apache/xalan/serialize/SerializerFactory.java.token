package
org
.
apache
.
xalan
.
serialize
;
import
javax
.
xml
.
transform
.
OutputKeys
;
import
java
.
util
.
Enumeration
;
import
java
.
util
.
Hashtable
;
import
java
.
util
.
Properties
;
import
java
.
util
.
StringTokenizer
;
import
java
.
io
.
IOException
;
import
java
.
io
.
InputStream
;
import
org
.
apache
.
xalan
.
templates
.
OutputProperties
;
import
org
.
apache
.
xml
.
utils
.
WrappedRuntimeException
;
public
abstract
class
SerializerFactory
{
private
static
Hashtable
_formats
=
new
Hashtable
(
)
;
public
static
Serializer
getSerializer
(
Properties
format
)
{
Serializer
ser
=
null
;
try
{
Class
cls
;
String
method
=
format
.
getProperty
(
OutputKeys
.
METHOD
)
;
if
(
method
==
null
)
throw
new
IllegalArgumentException
(
"The output format has a null method name"
)
;
cls
=
null
;
if
(
cls
==
null
)
{
String
className
=
format
.
getProperty
(
OutputProperties
.
S_KEY_CONTENT_HANDLER
)
;
if
(
null
==
className
)
{
throw
new
IllegalArgumentException
(
"The output format must have a '"
+
OutputProperties
.
S_KEY_CONTENT_HANDLER
+
"' property!"
)
;
}
cls
=
Class
.
forName
(
className
)
;
}
ser
=
(
Serializer
)
cls
.
newInstance
(
)
;
ser
.
setOutputFormat
(
format
)
;
}
catch
(
Exception
e
)
{
throw
new
org
.
apache
.
xml
.
utils
.
WrappedRuntimeException
(
e
)
;
}
return
ser
;
}
}
