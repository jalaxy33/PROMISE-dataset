package
org
.
apache
.
xpath
.
objects
;
import
org
.
apache
.
xml
.
dtm
.
DTM
;
import
org
.
apache
.
xml
.
dtm
.
DTMIterator
;
import
org
.
apache
.
xml
.
dtm
.
DTMFilter
;
import
org
.
apache
.
xml
.
utils
.
XMLString
;
import
org
.
apache
.
xpath
.
DOMHelper
;
import
org
.
apache
.
xpath
.
XPathContext
;
import
org
.
apache
.
xpath
.
Expression
;
import
org
.
apache
.
xalan
.
res
.
XSLMessages
;
import
org
.
apache
.
xpath
.
res
.
XPATHErrorResources
;
public
class
XRTreeFragSelectWrapper
extends
XRTreeFrag
implements
Cloneable
{
XObject
m_selected
;
public
XRTreeFragSelectWrapper
(
Expression
expr
)
{
super
(
expr
)
;
}
public
void
fixupVariables
(
java
.
util
.
Vector
vars
,
int
globalsSize
)
{
(
(
Expression
)
m_obj
)
.
fixupVariables
(
vars
,
globalsSize
)
;
}
public
XObject
execute
(
XPathContext
xctxt
)
throws
javax
.
xml
.
transform
.
TransformerException
{
try
{
m_selected
=
(
(
Expression
)
m_obj
)
.
execute
(
xctxt
)
;
m_selected
.
allowDetachToRelease
(
m_allowRelease
)
;
XRTreeFragSelectWrapper
xrtf
=
(
XRTreeFragSelectWrapper
)
this
.
clone
(
)
;
return
xrtf
;
}
catch
(
CloneNotSupportedException
cnse
)
{
throw
new
javax
.
xml
.
transform
.
TransformerException
(
cnse
)
;
}
}
public
void
detach
(
)
{
if
(
m_allowRelease
)
{
m_selected
.
detach
(
)
;
m_selected
=
null
;
}
super
.
detach
(
)
;
}
public
double
num
(
)
throws
javax
.
xml
.
transform
.
TransformerException
{
return
m_selected
.
num
(
)
;
}
public
XMLString
xstr
(
)
{
return
m_selected
.
xstr
(
)
;
}
public
String
str
(
)
{
return
m_selected
.
str
(
)
;
}
public
int
getType
(
)
{
return
CLASS_STRING
;
}
public
int
rtf
(
)
{
throw
new
RuntimeException
(
XSLMessages
.
createXPATHMessage
(
XPATHErrorResources
.
ER_RTF_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER
,
null
)
)
;
}
public
DTMIterator
asNodeIterator
(
)
{
throw
new
RuntimeException
(
XSLMessages
.
createXPATHMessage
(
XPATHErrorResources
.
ER_RTF_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER
,
null
)
)
;
}
}
