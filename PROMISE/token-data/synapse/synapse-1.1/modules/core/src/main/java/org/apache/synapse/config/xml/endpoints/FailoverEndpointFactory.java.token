package
org
.
apache
.
synapse
.
config
.
xml
.
endpoints
;
import
org
.
apache
.
axiom
.
om
.
OMElement
;
import
org
.
apache
.
synapse
.
SynapseConstants
;
import
org
.
apache
.
synapse
.
SynapseException
;
import
org
.
apache
.
synapse
.
endpoints
.
Endpoint
;
import
org
.
apache
.
synapse
.
endpoints
.
FailoverEndpoint
;
import
org
.
apache
.
axis2
.
util
.
JavaUtils
;
import
javax
.
xml
.
namespace
.
QName
;
import
java
.
util
.
List
;
import
java
.
util
.
Properties
;
public
class
FailoverEndpointFactory
extends
EndpointFactory
{
private
static
FailoverEndpointFactory
instance
=
new
FailoverEndpointFactory
(
)
;
private
FailoverEndpointFactory
(
)
{
}
public
static
FailoverEndpointFactory
getInstance
(
)
{
return
instance
;
}
protected
Endpoint
createEndpoint
(
OMElement
epConfig
,
boolean
anonymousEndpoint
,
Properties
properties
)
{
OMElement
failoverElement
=
epConfig
.
getFirstChildWithName
(
new
QName
(
SynapseConstants
.
SYNAPSE_NAMESPACE
,
"failover"
)
)
;
if
(
failoverElement
!=
null
)
{
FailoverEndpoint
failoverEndpoint
=
new
FailoverEndpoint
(
)
;
String
name
=
epConfig
.
getAttributeValue
(
new
QName
(
"name"
)
)
;
if
(
name
!=
null
)
{
failoverEndpoint
.
setName
(
name
)
;
}
List
<
Endpoint
>
childEndpoints
=
getEndpoints
(
failoverElement
,
failoverEndpoint
,
properties
)
;
if
(
childEndpoints
==
null
||
childEndpoints
.
size
(
)
==
0
)
{
String
msg
=
"Invalid Synapse configuration.\n"
+
"A FailOver must have child elements, but the FailOver "
+
"'"
+
failoverEndpoint
.
getName
(
)
+
"' does not have any child elements."
;
log
.
error
(
msg
)
;
throw
new
SynapseException
(
msg
)
;
}
failoverEndpoint
.
setChildren
(
getEndpoints
(
failoverElement
,
failoverEndpoint
,
properties
)
)
;
String
dynamicFO
=
failoverElement
.
getAttributeValue
(
new
QName
(
"dynamic"
)
)
;
if
(
dynamicFO
!=
null
&&
JavaUtils
.
isFalseExplicitly
(
dynamicFO
)
)
{
failoverEndpoint
.
setDynamic
(
false
)
;
}
processProperties
(
failoverEndpoint
,
epConfig
)
;
return
failoverEndpoint
;
}
return
null
;
}
}
