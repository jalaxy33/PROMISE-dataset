package
org
.
apache
.
synapse
.
config
.
xml
;
import
org
.
apache
.
axiom
.
om
.
OMElement
;
import
org
.
apache
.
axiom
.
om
.
OMAttribute
;
import
org
.
apache
.
synapse
.
Mediator
;
import
org
.
apache
.
synapse
.
SynapseConstants
;
import
org
.
apache
.
synapse
.
mediators
.
db
.
DBReportMediator
;
import
javax
.
xml
.
namespace
.
QName
;
import
java
.
util
.
Properties
;
public
class
DBReportMediatorFactory
extends
AbstractDBMediatorFactory
{
private
static
final
QName
DBREPORT_Q
=
new
QName
(
SynapseConstants
.
SYNAPSE_NAMESPACE
,
"dbreport"
)
;
private
static
final
QName
DBREPORT_USE_TX
=
new
QName
(
"useTransaction"
)
;
public
Mediator
createSpecificMediator
(
OMElement
elem
,
Properties
properties
)
{
DBReportMediator
mediator
=
new
DBReportMediator
(
)
;
OMAttribute
useTx
=
elem
.
getAttribute
(
DBREPORT_USE_TX
)
;
if
(
useTx
!=
null
&&
useTx
.
getAttributeValue
(
)
!=
null
)
{
String
useTxValue
=
useTx
.
getAttributeValue
(
)
;
if
(
useTxValue
.
equals
(
"true"
)
)
{
mediator
.
setUseTransaction
(
true
)
;
}
else
{
mediator
.
setUseTransaction
(
false
)
;
}
}
buildDataSource
(
elem
,
mediator
)
;
processStatements
(
elem
,
mediator
)
;
return
mediator
;
}
public
QName
getTagQName
(
)
{
return
DBREPORT_Q
;
}
}
