package
org
.
apache
.
synapse
.
endpoints
;
import
org
.
apache
.
synapse
.
MessageContext
;
import
org
.
apache
.
synapse
.
SynapseConstants
;
import
org
.
apache
.
synapse
.
mediators
.
MediatorProperty
;
import
java
.
util
.
Map
;
import
java
.
util
.
Set
;
public
class
FailoverEndpoint
extends
AbstractEndpoint
{
private
Endpoint
currentEndpoint
=
null
;
private
boolean
dynamic
=
true
;
public
void
send
(
MessageContext
synCtx
)
{
if
(
log
.
isDebugEnabled
(
)
)
{
log
.
debug
(
"Failover Endpoint : "
+
getName
(
)
)
;
}
boolean
isARetry
=
false
;
if
(
synCtx
.
getProperty
(
SynapseConstants
.
LAST_ENDPOINT
)
==
null
)
{
if
(
log
.
isDebugEnabled
(
)
)
{
log
.
debug
(
this
+
" Building the SoapEnvelope"
)
;
}
synCtx
.
getEnvelope
(
)
.
build
(
)
;
}
else
{
isARetry
=
true
;
}
if
(
getChildren
(
)
.
isEmpty
(
)
)
{
informFailure
(
synCtx
,
SynapseConstants
.
ENDPOINT_FO_NONE_READY
,
"FailoverLoadbalance endpoint : "
+
getName
(
)
+
" - no child endpoints"
)
;
return
;
}
evaluateProperties
(
synCtx
)
;
if
(
dynamic
)
{
boolean
foundEndpoint
=
false
;
for
(
Endpoint
endpoint
:
getChildren
(
)
)
{
if
(
endpoint
.
readyToSend
(
)
)
{
foundEndpoint
=
true
;
if
(
isARetry
&&
metricsMBean
!=
null
)
{
metricsMBean
.
reportSendingFault
(
SynapseConstants
.
ENDPOINT_FO_FAIL_OVER
)
;
}
synCtx
.
pushFaultHandler
(
this
)
;
endpoint
.
send
(
synCtx
)
;
break
;
}
}
if
(
!
foundEndpoint
)
{
String
msg
=
"Failover endpoint : "
+
(
getName
(
)
!=
null
?
getName
(
)
:
SynapseConstants
.
ANONYMOUS_ENDPOINT
)
+
" - no ready child endpoints"
;
log
.
warn
(
msg
)
;
informFailure
(
synCtx
,
SynapseConstants
.
ENDPOINT_FO_NONE_READY
,
msg
)
;
}
}
else
{
if
(
currentEndpoint
==
null
)
{
currentEndpoint
=
getChildren
(
)
.
get
(
0
)
;
}
if
(
currentEndpoint
.
readyToSend
(
)
)
{
if
(
isARetry
&&
metricsMBean
!=
null
)
{
metricsMBean
.
reportSendingFault
(
SynapseConstants
.
ENDPOINT_FO_FAIL_OVER
)
;
}
synCtx
.
pushFaultHandler
(
this
)
;
currentEndpoint
.
send
(
synCtx
)
;
}
else
{
boolean
foundEndpoint
=
false
;
for
(
Endpoint
endpoint
:
getChildren
(
)
)
{
if
(
endpoint
.
readyToSend
(
)
)
{
foundEndpoint
=
true
;
currentEndpoint
=
endpoint
;
if
(
isARetry
&&
metricsMBean
!=
null
)
{
metricsMBean
.
reportSendingFault
(
SynapseConstants
.
ENDPOINT_FO_FAIL_OVER
)
;
}
synCtx
.
pushFaultHandler
(
this
)
;
currentEndpoint
.
send
(
synCtx
)
;
break
;
}
}
if
(
!
foundEndpoint
)
{
String
msg
=
"Failover endpoint : "
+
(
getName
(
)
!=
null
?
getName
(
)
:
SynapseConstants
.
ANONYMOUS_ENDPOINT
)
+
" - no ready child endpoints"
;
log
.
warn
(
msg
)
;
informFailure
(
synCtx
,
SynapseConstants
.
ENDPOINT_FO_NONE_READY
,
msg
)
;
}
}
}
}
public
void
onChildEndpointFail
(
Endpoint
endpoint
,
MessageContext
synMessageContext
)
{
logOnChildEndpointFail
(
endpoint
,
synMessageContext
)
;
if
(
!
(
(
AbstractEndpoint
)
endpoint
)
.
isRetryDisabled
(
synMessageContext
)
)
{
if
(
log
.
isDebugEnabled
(
)
)
{
log
.
debug
(
this
+
" Retry Attempt for Request with [Message ID : "
+
synMessageContext
.
getMessageID
(
)
+
"], [To : "
+
synMessageContext
.
getTo
(
)
+
"]"
)
;
}
send
(
synMessageContext
)
;
}
else
{
String
msg
=
"Failover endpoint : "
+
(
getName
(
)
!=
null
?
getName
(
)
:
SynapseConstants
.
ANONYMOUS_ENDPOINT
)
+
" - one of the child endpoints encounterd a non-retry error, "
+
"not sending message to another endpoint"
;
log
.
warn
(
msg
)
;
informFailure
(
synMessageContext
,
SynapseConstants
.
ENDPOINT_FO_NONE_READY
,
msg
)
;
}
}
public
boolean
readyToSend
(
)
{
for
(
Endpoint
endpoint
:
getChildren
(
)
)
{
if
(
endpoint
.
readyToSend
(
)
)
{
currentEndpoint
=
endpoint
;
return
true
;
}
}
return
false
;
}
public
boolean
isDynamic
(
)
{
return
dynamic
;
}
public
void
setDynamic
(
boolean
dynamic
)
{
this
.
dynamic
=
dynamic
;
}
}
