package
org
.
apache
.
synapse
;
import
org
.
apache
.
commons
.
logging
.
Log
;
import
org
.
apache
.
commons
.
logging
.
LogFactory
;
import
java
.
util
.
concurrent
.
CountDownLatch
;
public
class
SynapseServer
{
private
static
final
Log
log
=
LogFactory
.
getLog
(
SynapseServer
.
class
)
;
private
static
final
String
USAGE_TXT
=
"Usage: SynapseServer <axis2_repository> <axis2_xml> <synapse_home> <synapse_xml> "
+
"<resolve_root> <deployment mode>"
+
"\n Opts: -? this message"
;
private
static
ServerManager
serverManager
;
public
static
void
printUsage
(
)
{
System
.
out
.
println
(
USAGE_TXT
)
;
System
.
exit
(
1
)
;
}
public
static
void
main
(
String
[
]
args
)
throws
Exception
{
if
(
args
.
length
<=
0
||
args
.
length
==
2
||
args
.
length
==
3
||
args
.
length
>=
8
)
{
printUsage
(
)
;
}
log
.
info
(
"Starting Apache Synapse..."
)
;
ServerConfigurationInformation
configurationInformation
=
ServerConfigurationInformationFactory
.
createServerConfigurationInformation
(
args
)
;
serverManager
=
new
ServerManager
(
)
;
serverManager
.
init
(
configurationInformation
,
null
)
;
try
{
serverManager
.
start
(
)
;
addShutdownHook
(
)
;
log
.
info
(
"Apache Synapse started successfully"
)
;
new
CountDownLatch
(
1
)
.
await
(
)
;
}
catch
(
SynapseException
e
)
{
log
.
error
(
"Error starting Apache Synapse, trying a clean shutdown..."
,
e
)
;
serverManager
.
shutdown
(
)
;
}
}
private
static
void
addShutdownHook
(
)
{
Thread
shutdownHook
=
new
Thread
(
)
{
public
void
run
(
)
{
log
.
info
(
"Shutting down Apache Synapse..."
)
;
try
{
serverManager
.
shutdown
(
)
;
log
.
info
(
"Apache Synapse shutdown complete"
)
;
log
.
info
(
"Halting JVM"
)
;
}
catch
(
Exception
e
)
{
log
.
error
(
"Error occurred while shutting down Apache Synapse, "
+
"it may not be a clean shutdown"
,
e
)
;
}
}
}
;
Runtime
.
getRuntime
(
)
.
addShutdownHook
(
shutdownHook
)
;
}
}
