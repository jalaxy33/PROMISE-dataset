package
org
.
apache
.
synapse
.
config
.
xml
.
endpoints
;
import
org
.
apache
.
axiom
.
om
.
OMAttribute
;
import
org
.
apache
.
axiom
.
om
.
OMElement
;
import
org
.
apache
.
synapse
.
SynapseConstants
;
import
org
.
apache
.
synapse
.
config
.
xml
.
XMLConfigConstants
;
import
org
.
apache
.
synapse
.
endpoints
.
AddressEndpoint
;
import
org
.
apache
.
synapse
.
endpoints
.
Endpoint
;
import
org
.
apache
.
synapse
.
endpoints
.
EndpointDefinition
;
import
javax
.
xml
.
namespace
.
QName
;
import
java
.
util
.
Properties
;
public
class
AddressEndpointFactory
extends
DefaultEndpointFactory
{
private
static
AddressEndpointFactory
instance
=
new
AddressEndpointFactory
(
)
;
private
AddressEndpointFactory
(
)
{
}
public
static
AddressEndpointFactory
getInstance
(
)
{
return
instance
;
}
@
Override
protected
Endpoint
createEndpoint
(
OMElement
epConfig
,
boolean
anonymousEndpoint
,
Properties
properties
)
{
AddressEndpoint
addressEndpoint
=
new
AddressEndpoint
(
)
;
OMAttribute
name
=
epConfig
.
getAttribute
(
new
QName
(
XMLConfigConstants
.
NULL_NAMESPACE
,
"name"
)
)
;
if
(
name
!=
null
)
{
addressEndpoint
.
setName
(
name
.
getAttributeValue
(
)
)
;
}
OMElement
addressElement
=
epConfig
.
getFirstChildWithName
(
new
QName
(
SynapseConstants
.
SYNAPSE_NAMESPACE
,
"address"
)
)
;
if
(
addressElement
!=
null
)
{
EndpointDefinition
definition
=
createEndpointDefinition
(
addressElement
)
;
addressEndpoint
.
setDefinition
(
definition
)
;
processAuditStatus
(
definition
,
addressEndpoint
.
getName
(
)
,
addressElement
)
;
}
processProperties
(
addressEndpoint
,
epConfig
)
;
return
addressEndpoint
;
}
@
Override
public
EndpointDefinition
createEndpointDefinition
(
OMElement
elem
)
{
OMAttribute
address
=
elem
.
getAttribute
(
new
QName
(
"uri"
)
)
;
DefinitionFactory
fac
=
getEndpointDefinitionFactory
(
)
;
EndpointDefinition
endpointDefinition
;
if
(
fac
==
null
)
{
fac
=
new
EndpointDefinitionFactory
(
)
;
endpointDefinition
=
fac
.
createDefinition
(
elem
)
;
}
else
{
endpointDefinition
=
fac
.
createDefinition
(
elem
)
;
}
if
(
address
!=
null
)
{
endpointDefinition
.
setAddress
(
address
.
getAttributeValue
(
)
.
trim
(
)
)
;
}
extractSpecificEndpointProperties
(
endpointDefinition
,
elem
)
;
return
endpointDefinition
;
}
}
