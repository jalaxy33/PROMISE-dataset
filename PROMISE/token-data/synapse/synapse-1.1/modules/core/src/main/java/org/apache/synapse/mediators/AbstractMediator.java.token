package
org
.
apache
.
synapse
.
mediators
;
import
org
.
apache
.
commons
.
logging
.
Log
;
import
org
.
apache
.
commons
.
logging
.
LogFactory
;
import
org
.
apache
.
synapse
.
*
;
import
org
.
apache
.
synapse
.
aspects
.
AspectConfigurable
;
import
org
.
apache
.
synapse
.
aspects
.
AspectConfiguration
;
public
abstract
class
AbstractMediator
implements
Mediator
,
AspectConfigurable
{
protected
Log
log
;
protected
static
final
Log
trace
=
LogFactory
.
getLog
(
SynapseConstants
.
TRACE_LOGGER
)
;
protected
int
traceState
=
SynapseConstants
.
TRACING_UNSET
;
private
AspectConfiguration
aspectConfiguration
;
private
String
description
;
protected
AbstractMediator
(
)
{
log
=
LogFactory
.
getLog
(
this
.
getClass
(
)
)
;
}
public
String
getType
(
)
{
String
cls
=
getClass
(
)
.
getName
(
)
;
int
p
=
cls
.
lastIndexOf
(
"."
)
;
if
(
p
==
-
1
)
return
cls
;
else
return
cls
.
substring
(
p
+
1
)
;
}
public
int
getTraceState
(
)
{
return
traceState
;
}
public
void
setTraceState
(
int
traceState
)
{
this
.
traceState
=
traceState
;
}
public
void
setDescription
(
String
description
)
{
this
.
description
=
description
;
}
public
String
getDescription
(
)
{
return
this
.
description
;
}
public
void
setEffectiveTraceState
(
MessageContext
synCtx
)
{
if
(
traceState
!=
SynapseConstants
.
TRACING_UNSET
)
{
synCtx
.
setTracingState
(
traceState
)
;
}
}
protected
SynapseLog
getLog
(
MessageContext
synCtx
)
{
return
new
MediatorLog
(
log
,
isTraceOn
(
synCtx
)
,
synCtx
)
;
}
public
boolean
shouldTrace
(
int
parentTraceState
)
{
return
(
traceState
==
SynapseConstants
.
TRACING_ON
)
||
(
traceState
==
SynapseConstants
.
TRACING_UNSET
&&
parentTraceState
==
SynapseConstants
.
TRACING_ON
)
;
}
@
Deprecated
protected
boolean
isTraceOn
(
MessageContext
msgCtx
)
{
return
(
traceState
==
SynapseConstants
.
TRACING_ON
)
||
(
traceState
==
SynapseConstants
.
TRACING_UNSET
&&
msgCtx
.
getTracingState
(
)
==
SynapseConstants
.
TRACING_ON
)
;
}
@
Deprecated
protected
boolean
isTraceOrDebugOn
(
boolean
isTraceOn
)
{
return
isTraceOn
||
log
.
isDebugEnabled
(
)
;
}
@
Deprecated
protected
void
traceOrDebug
(
boolean
traceOn
,
String
msg
)
{
if
(
traceOn
)
{
trace
.
info
(
msg
)
;
}
if
(
log
.
isDebugEnabled
(
)
)
{
log
.
debug
(
msg
)
;
}
}
@
Deprecated
protected
void
traceOrDebugWarn
(
boolean
traceOn
,
String
msg
)
{
if
(
traceOn
)
{
trace
.
warn
(
msg
)
;
}
if
(
log
.
isDebugEnabled
(
)
)
{
log
.
warn
(
msg
)
;
}
}
@
Deprecated
protected
void
auditLog
(
String
msg
,
MessageContext
msgContext
)
{
log
.
info
(
msg
)
;
if
(
msgContext
.
getServiceLog
(
)
!=
null
)
{
msgContext
.
getServiceLog
(
)
.
info
(
msg
)
;
}
if
(
shouldTrace
(
msgContext
.
getTracingState
(
)
)
)
{
trace
.
info
(
msg
)
;
}
}
protected
void
handleException
(
String
msg
,
MessageContext
msgContext
)
{
log
.
error
(
msg
)
;
if
(
msgContext
.
getServiceLog
(
)
!=
null
)
{
msgContext
.
getServiceLog
(
)
.
error
(
msg
)
;
}
if
(
shouldTrace
(
msgContext
.
getTracingState
(
)
)
)
{
trace
.
error
(
msg
)
;
}
throw
new
SynapseException
(
msg
)
;
}
@
Deprecated
protected
void
auditWarn
(
String
msg
,
MessageContext
msgContext
)
{
log
.
warn
(
msg
)
;
if
(
msgContext
.
getServiceLog
(
)
!=
null
)
{
msgContext
.
getServiceLog
(
)
.
warn
(
msg
)
;
}
if
(
shouldTrace
(
msgContext
.
getTracingState
(
)
)
)
{
trace
.
warn
(
msg
)
;
}
}
protected
void
handleException
(
String
msg
,
Exception
e
,
MessageContext
msgContext
)
{
log
.
error
(
msg
,
e
)
;
if
(
msgContext
.
getServiceLog
(
)
!=
null
)
{
msgContext
.
getServiceLog
(
)
.
error
(
msg
,
e
)
;
}
if
(
shouldTrace
(
msgContext
.
getTracingState
(
)
)
)
{
trace
.
error
(
msg
,
e
)
;
}
throw
new
SynapseException
(
msg
,
e
)
;
}
public
boolean
isStatisticsEnable
(
)
{
return
this
.
aspectConfiguration
!=
null
&&
this
.
aspectConfiguration
.
isStatisticsEnable
(
)
;
}
public
void
disableStatistics
(
)
{
if
(
this
.
aspectConfiguration
!=
null
)
{
this
.
aspectConfiguration
.
disableStatistics
(
)
;
}
}
public
void
enableStatistics
(
)
{
if
(
this
.
aspectConfiguration
!=
null
)
{
this
.
aspectConfiguration
.
enableStatistics
(
)
;
}
}
public
void
configure
(
AspectConfiguration
aspectConfiguration
)
{
this
.
aspectConfiguration
=
aspectConfiguration
;
}
public
AspectConfiguration
getAspectConfiguration
(
)
{
return
aspectConfiguration
;
}
public
boolean
isContentAware
(
)
{
return
true
;
}
}
