package
org
.
apache
.
synapse
.
config
.
xml
;
import
org
.
apache
.
axiom
.
om
.
OMElement
;
import
org
.
apache
.
synapse
.
Mediator
;
import
org
.
apache
.
synapse
.
mediators
.
eip
.
splitter
.
CloneMediator
;
import
org
.
apache
.
synapse
.
mediators
.
eip
.
Target
;
import
java
.
util
.
Iterator
;
public
class
CloneMediatorSerializer
extends
AbstractMediatorSerializer
{
public
OMElement
serializeSpecificMediator
(
Mediator
m
)
{
OMElement
cloneElem
=
fac
.
createOMElement
(
"clone"
,
synNS
)
;
saveTracingState
(
cloneElem
,
m
)
;
CloneMediator
clone
=
(
CloneMediator
)
m
;
if
(
clone
.
isContinueParent
(
)
)
{
cloneElem
.
addAttribute
(
"continueParent"
,
Boolean
.
toString
(
true
)
,
nullNS
)
;
}
if
(
clone
.
getId
(
)
!=
null
)
{
cloneElem
.
addAttribute
(
"id"
,
clone
.
getId
(
)
,
nullNS
)
;
}
if
(
clone
.
isSequential
(
)
)
{
cloneElem
.
addAttribute
(
"sequential"
,
"true"
,
nullNS
)
;
}
for
(
Target
o
:
clone
.
getTargets
(
)
)
{
cloneElem
.
addChild
(
TargetSerializer
.
serializeTarget
(
o
)
)
;
}
return
cloneElem
;
}
public
String
getMediatorClassName
(
)
{
return
CloneMediator
.
class
.
getName
(
)
;
}
}
