package
org
.
apache
.
synapse
.
mediators
.
filters
;
import
org
.
apache
.
synapse
.
ManagedLifecycle
;
import
org
.
apache
.
synapse
.
MessageContext
;
import
org
.
apache
.
synapse
.
SynapseLog
;
import
org
.
apache
.
synapse
.
config
.
xml
.
SwitchCase
;
import
org
.
apache
.
synapse
.
core
.
SynapseEnvironment
;
import
org
.
apache
.
synapse
.
mediators
.
AbstractMediator
;
import
org
.
apache
.
synapse
.
util
.
xpath
.
SynapseXPath
;
import
java
.
util
.
ArrayList
;
import
java
.
util
.
List
;
public
class
SwitchMediator
extends
AbstractMediator
implements
ManagedLifecycle
{
private
SynapseXPath
source
=
null
;
private
final
List
<
SwitchCase
>
cases
=
new
ArrayList
<
SwitchCase
>
(
)
;
private
SwitchCase
defaultCase
=
null
;
public
void
init
(
SynapseEnvironment
se
)
{
for
(
ManagedLifecycle
swCase
:
cases
)
{
swCase
.
init
(
se
)
;
}
if
(
defaultCase
!=
null
)
{
defaultCase
.
init
(
se
)
;
}
}
public
void
destroy
(
)
{
for
(
ManagedLifecycle
swCase
:
cases
)
{
swCase
.
destroy
(
)
;
}
if
(
defaultCase
!=
null
)
{
defaultCase
.
destroy
(
)
;
}
}
public
boolean
mediate
(
MessageContext
synCtx
)
{
SynapseLog
synLog
=
getLog
(
synCtx
)
;
if
(
synLog
.
isTraceOrDebugEnabled
(
)
)
{
synLog
.
traceOrDebug
(
"Start : Switch mediator"
)
;
if
(
synLog
.
isTraceTraceEnabled
(
)
)
{
synLog
.
traceTrace
(
"Message : "
+
synCtx
.
getEnvelope
(
)
)
;
}
}
int
parentsEffectiveTraceState
=
synCtx
.
getTracingState
(
)
;
setEffectiveTraceState
(
synCtx
)
;
String
sourceText
=
source
.
stringValueOf
(
synCtx
)
;
if
(
synLog
.
isTraceOrDebugEnabled
(
)
)
{
synLog
.
traceOrDebug
(
"XPath : "
+
source
+
" evaluates to : "
+
sourceText
)
;
}
try
{
if
(
(
sourceText
==
null
||
cases
.
isEmpty
(
)
)
&&
defaultCase
!=
null
)
{
synLog
.
traceOrDebug
(
"Source XPath evaluated to : null or no switch "
+
"cases found. Executing the default case"
)
;
return
defaultCase
.
mediate
(
synCtx
)
;
}
else
{
for
(
SwitchCase
swCase
:
cases
)
{
if
(
swCase
!=
null
)
{
if
(
swCase
.
matches
(
sourceText
)
)
{
if
(
synLog
.
isTraceOrDebugEnabled
(
)
)
{
synLog
.
traceOrDebug
(
"Matching case found : "
+
swCase
.
getRegex
(
)
)
;
}
return
swCase
.
mediate
(
synCtx
)
;
}
}
}
if
(
defaultCase
!=
null
)
{
synLog
.
traceOrDebug
(
"None of the switch cases matched - executing default"
)
;
return
defaultCase
.
mediate
(
synCtx
)
;
}
else
{
synLog
.
traceOrDebug
(
"None of the switch cases matched - no default case"
)
;
}
}
}
finally
{
synCtx
.
setTracingState
(
parentsEffectiveTraceState
)
;
}
synLog
.
traceOrDebug
(
"End : Switch mediator"
)
;
return
true
;
}
public
void
addCase
(
SwitchCase
m
)
{
cases
.
add
(
m
)
;
}
public
List
<
SwitchCase
>
getCases
(
)
{
return
cases
;
}
public
SynapseXPath
getSource
(
)
{
return
source
;
}
public
void
setSource
(
SynapseXPath
source
)
{
this
.
source
=
source
;
}
public
SwitchCase
getDefaultCase
(
)
{
return
defaultCase
;
}
public
void
setDefaultCase
(
SwitchCase
defaultCase
)
{
this
.
defaultCase
=
defaultCase
;
}
}
