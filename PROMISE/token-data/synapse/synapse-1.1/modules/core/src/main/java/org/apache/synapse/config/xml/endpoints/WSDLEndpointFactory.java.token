package
org
.
apache
.
synapse
.
config
.
xml
.
endpoints
;
import
org
.
apache
.
axiom
.
om
.
OMAttribute
;
import
org
.
apache
.
axiom
.
om
.
OMElement
;
import
org
.
apache
.
axiom
.
om
.
OMNamespace
;
import
org
.
apache
.
axiom
.
om
.
OMNode
;
import
org
.
apache
.
axis2
.
description
.
WSDL2Constants
;
import
org
.
apache
.
axis2
.
util
.
JavaUtils
;
import
org
.
apache
.
synapse
.
SynapseConstants
;
import
org
.
apache
.
synapse
.
config
.
SynapseConfigUtils
;
import
org
.
apache
.
synapse
.
config
.
xml
.
endpoints
.
utils
.
WSDL11EndpointBuilder
;
import
org
.
apache
.
synapse
.
endpoints
.
Endpoint
;
import
org
.
apache
.
synapse
.
endpoints
.
WSDLEndpoint
;
import
org
.
apache
.
synapse
.
endpoints
.
EndpointDefinition
;
import
javax
.
xml
.
namespace
.
QName
;
import
java
.
io
.
File
;
import
java
.
net
.
URI
;
import
java
.
net
.
URL
;
import
java
.
util
.
Properties
;
public
class
WSDLEndpointFactory
extends
DefaultEndpointFactory
{
public
static
final
String
SKIP_WSDL_PARSING
=
"skip.wsdl.parsing"
;
private
static
WSDLEndpointFactory
instance
=
new
WSDLEndpointFactory
(
)
;
private
WSDLEndpointFactory
(
)
{
}
public
static
WSDLEndpointFactory
getInstance
(
)
{
return
instance
;
}
protected
Endpoint
createEndpoint
(
OMElement
epConfig
,
boolean
anonymousEndpoint
,
Properties
properties
)
{
WSDLEndpoint
wsdlEndpoint
=
new
WSDLEndpoint
(
)
;
OMAttribute
name
=
epConfig
.
getAttribute
(
new
QName
(
org
.
apache
.
synapse
.
config
.
xml
.
XMLConfigConstants
.
NULL_NAMESPACE
,
"name"
)
)
;
if
(
name
!=
null
)
{
wsdlEndpoint
.
setName
(
name
.
getAttributeValue
(
)
)
;
}
OMElement
wsdlElement
=
epConfig
.
getFirstChildWithName
(
new
QName
(
SynapseConstants
.
SYNAPSE_NAMESPACE
,
"wsdl"
)
)
;
if
(
wsdlElement
!=
null
)
{
DefinitionFactory
fac
=
getEndpointDefinitionFactory
(
)
;
EndpointDefinition
endpoint
;
if
(
fac
==
null
)
{
fac
=
new
EndpointDefinitionFactory
(
)
;
endpoint
=
fac
.
createDefinition
(
wsdlElement
)
;
}
else
{
endpoint
=
fac
.
createDefinition
(
wsdlElement
)
;
}
extractSpecificEndpointProperties
(
endpoint
,
wsdlElement
)
;
wsdlEndpoint
.
setDefinition
(
endpoint
)
;
processAuditStatus
(
endpoint
,
wsdlEndpoint
.
getName
(
)
,
wsdlElement
)
;
String
serviceName
=
wsdlElement
.
getAttributeValue
(
new
QName
(
"service"
)
)
;
String
portName
=
wsdlElement
.
getAttributeValue
(
new
QName
(
"port"
)
)
;
String
wsdlURI
=
wsdlElement
.
getAttributeValue
(
new
QName
(
"uri"
)
)
;
wsdlEndpoint
.
setServiceName
(
serviceName
)
;
wsdlEndpoint
.
setPortName
(
portName
)
;
String
noParsing
=
properties
.
getProperty
(
SKIP_WSDL_PARSING
)
;
if
(
wsdlURI
!=
null
)
{
wsdlEndpoint
.
setWsdlURI
(
wsdlURI
.
trim
(
)
)
;
if
(
noParsing
==
null
||
!
JavaUtils
.
isTrueExplicitly
(
noParsing
)
)
{
String
synapseHome
=
properties
.
get
(
SynapseConstants
.
SYNAPSE_HOME
)
!=
null
?
properties
.
get
(
SynapseConstants
.
SYNAPSE_HOME
)
.
toString
(
)
:
""
;
try
{
OMNode
wsdlOM
=
SynapseConfigUtils
.
getOMElementFromURL
(
new
URL
(
wsdlURI
)
.
toString
(
)
,
synapseHome
)
;
if
(
wsdlOM
!=
null
&&
wsdlOM
instanceof
OMElement
)
{
OMElement
omElement
=
(
OMElement
)
wsdlOM
;
OMNamespace
ns
=
omElement
.
getNamespace
(
)
;
if
(
ns
!=
null
)
{
String
nsUri
=
omElement
.
getNamespace
(
)
.
getNamespaceURI
(
)
;
if
(
org
.
apache
.
axis2
.
namespace
.
Constants
.
NS_URI_WSDL11
.
equals
(
nsUri
)
)
{
URI
baseURI
=
SynapseConfigUtils
.
resolveRelativeURI
(
new
URI
(
wsdlURI
)
,
synapseHome
)
;
new
WSDL11EndpointBuilder
(
)
.
populateEndpointDefinitionFromWSDL
(
endpoint
,
baseURI
.
toString
(
)
,
omElement
,
serviceName
,
portName
)
;
}
else
if
(
WSDL2Constants
.
WSDL_NAMESPACE
.
equals
(
nsUri
)
)
{
handleException
(
"WSDL 2.0 Endpoints are currently not supported"
)
;
}
}
}
}
catch
(
Exception
e
)
{
handleException
(
"Couldn't create endpoint from the given WSDL URI : "
+
e
.
getMessage
(
)
,
e
)
;
}
}
}
OMElement
definitionElement
=
wsdlElement
.
getFirstChildWithName
(
new
QName
(
org
.
apache
.
axis2
.
namespace
.
Constants
.
NS_URI_WSDL11
,
"definitions"
)
)
;
if
(
endpoint
==
null
&&
definitionElement
!=
null
)
{
wsdlEndpoint
.
setWsdlDoc
(
definitionElement
)
;
if
(
noParsing
==
null
||
!
JavaUtils
.
isTrueExplicitly
(
noParsing
)
)
{
String
resolveRoot
=
properties
.
get
(
SynapseConstants
.
RESOLVE_ROOT
)
.
toString
(
)
;
String
baseUri
=
"file:./"
;
if
(
resolveRoot
!=
null
)
{
baseUri
=
resolveRoot
.
trim
(
)
;
}
if
(
!
baseUri
.
endsWith
(
File
.
separator
)
)
{
baseUri
=
baseUri
+
File
.
separator
;
}
new
WSDL11EndpointBuilder
(
)
.
populateEndpointDefinitionFromWSDL
(
endpoint
,
baseUri
,
definitionElement
,
serviceName
,
portName
)
;
}
else
{
endpoint
=
new
EndpointDefinition
(
)
;
}
}
OMElement
descriptionElement
=
wsdlElement
.
getFirstChildWithName
(
new
QName
(
WSDL2Constants
.
WSDL_NAMESPACE
,
"description"
)
)
;
if
(
endpoint
==
null
&&
descriptionElement
!=
null
)
{
handleException
(
"WSDL 2.0 Endpoints are currently not supported."
)
;
}
}
processProperties
(
wsdlEndpoint
,
epConfig
)
;
return
wsdlEndpoint
;
}
}
