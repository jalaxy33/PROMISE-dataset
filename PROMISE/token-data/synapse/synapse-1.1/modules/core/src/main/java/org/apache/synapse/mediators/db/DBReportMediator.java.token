package
org
.
apache
.
synapse
.
mediators
.
db
;
import
org
.
apache
.
synapse
.
MessageContext
;
import
org
.
apache
.
synapse
.
SynapseLog
;
import
java
.
sql
.
PreparedStatement
;
import
java
.
sql
.
SQLException
;
import
java
.
sql
.
Connection
;
public
class
DBReportMediator
extends
AbstractDBMediator
{
public
boolean
isUseTransaction
(
)
{
return
useTransaction
;
}
public
void
setUseTransaction
(
boolean
useTransaction
)
{
this
.
useTransaction
=
useTransaction
;
}
boolean
useTransaction
=
false
;
protected
void
processStatement
(
Statement
stmnt
,
MessageContext
msgCtx
)
{
SynapseLog
synLog
=
getLog
(
msgCtx
)
;
Connection
con
=
null
;
try
{
con
=
this
.
getDataSource
(
)
.
getConnection
(
)
;
PreparedStatement
ps
=
getPreparedStatement
(
stmnt
,
con
,
msgCtx
)
;
con
=
ps
.
getConnection
(
)
;
int
count
=
ps
.
executeUpdate
(
)
;
if
(
count
>
0
)
{
if
(
synLog
.
isTraceOrDebugEnabled
(
)
)
{
synLog
.
traceOrDebug
(
"Inserted "
+
count
+
" row/s using statement : "
+
stmnt
.
getRawStatement
(
)
)
;
}
}
else
{
if
(
synLog
.
isTraceOrDebugEnabled
(
)
)
{
synLog
.
traceOrDebug
(
"No rows were inserted for statement : "
+
stmnt
.
getRawStatement
(
)
)
;
}
}
if
(
!
useTransaction
)
{
if
(
!
con
.
getAutoCommit
(
)
)
{
con
.
commit
(
)
;
}
}
}
catch
(
SQLException
e
)
{
handleException
(
"Error execuring insert statement : "
+
stmnt
.
getRawStatement
(
)
+
" against DataSource : "
+
getDSName
(
)
,
e
,
msgCtx
)
;
}
finally
{
if
(
con
!=
null
)
{
try
{
con
.
close
(
)
;
}
catch
(
SQLException
ignore
)
{
}
}
}
}
}
