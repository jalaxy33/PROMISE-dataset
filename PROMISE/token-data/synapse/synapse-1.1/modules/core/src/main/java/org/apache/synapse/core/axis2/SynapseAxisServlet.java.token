package
org
.
apache
.
synapse
.
core
.
axis2
;
import
org
.
apache
.
axiom
.
util
.
UIDGenerator
;
import
org
.
apache
.
axis2
.
context
.
ConfigurationContext
;
import
org
.
apache
.
axis2
.
context
.
MessageContext
;
import
org
.
apache
.
axis2
.
transport
.
http
.
AxisServlet
;
import
org
.
apache
.
axis2
.
transport
.
http
.
ListingAgent
;
import
org
.
apache
.
synapse
.
ServerManager
;
import
javax
.
servlet
.
ServletConfig
;
import
javax
.
servlet
.
ServletContext
;
import
javax
.
servlet
.
ServletException
;
import
javax
.
servlet
.
http
.
HttpServletRequest
;
import
javax
.
servlet
.
http
.
HttpServletResponse
;
import
java
.
io
.
IOException
;
public
class
SynapseAxisServlet
extends
AxisServlet
{
public
void
init
(
ServletConfig
config
)
throws
ServletException
{
ServletContext
servletContext
=
config
.
getServletContext
(
)
;
ServerManager
serverManager
=
(
ServerManager
)
config
.
getServletContext
(
)
.
getAttribute
(
SynapseStartUpServlet
.
SYNAPSE_SERVER_MANAGER
)
;
if
(
serverManager
!=
null
)
{
this
.
configContext
=
(
ConfigurationContext
)
serverManager
.
getServerContextInformation
(
)
.
getServerContext
(
)
;
this
.
axisConfiguration
=
this
.
configContext
.
getAxisConfiguration
(
)
;
servletContext
.
setAttribute
(
this
.
getClass
(
)
.
getName
(
)
,
this
)
;
this
.
servletConfig
=
config
;
agent
=
new
ListingAgent
(
configContext
)
;
initParams
(
)
;
}
}
public
void
initContextRoot
(
HttpServletRequest
req
)
{
this
.
configContext
.
setContextRoot
(
"/"
)
;
}
protected
MessageContext
createMessageContext
(
HttpServletRequest
request
,
HttpServletResponse
response
,
boolean
invocationType
)
throws
IOException
{
MessageContext
msgCtx
=
super
.
createMessageContext
(
request
,
response
,
invocationType
)
;
msgCtx
.
setMessageID
(
UIDGenerator
.
generateURNString
(
)
)
;
return
msgCtx
;
}
}
