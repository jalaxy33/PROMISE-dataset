package
org
.
apache
.
synapse
.
mediators
.
filters
;
import
org
.
apache
.
commons
.
logging
.
Log
;
import
org
.
apache
.
commons
.
logging
.
LogFactory
;
import
org
.
apache
.
synapse
.
Constants
;
import
org
.
apache
.
synapse
.
MessageContext
;
import
org
.
apache
.
synapse
.
mediators
.
AbstractListMediator
;
public
class
InMediator
extends
AbstractListMediator
implements
org
.
apache
.
synapse
.
mediators
.
FilterMediator
{
private
static
final
Log
log
=
LogFactory
.
getLog
(
InMediator
.
class
)
;
private
static
final
Log
trace
=
LogFactory
.
getLog
(
Constants
.
TRACE_LOGGER
)
;
public
boolean
mediate
(
MessageContext
synCtx
)
{
log
.
debug
(
"In mediator mediate()"
)
;
boolean
shouldTrace
=
shouldTrace
(
synCtx
.
getTracingState
(
)
)
;
try
{
if
(
shouldTrace
)
{
trace
.
trace
(
"Start : In mediator"
)
;
}
if
(
test
(
synCtx
)
)
{
log
.
debug
(
"Current message is incoming.. executing child mediators"
)
;
return
super
.
mediate
(
synCtx
)
;
}
else
{
log
.
debug
(
"Current message is not incoming.. skipping child mediators"
)
;
return
true
;
}
}
finally
{
if
(
shouldTrace
)
{
trace
.
trace
(
"End : In mediator"
)
;
}
}
}
public
boolean
test
(
MessageContext
synCtx
)
{
return
!
synCtx
.
isResponse
(
)
;
}
}
