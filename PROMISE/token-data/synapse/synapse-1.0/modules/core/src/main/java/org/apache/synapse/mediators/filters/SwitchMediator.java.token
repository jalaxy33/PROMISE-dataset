package
org
.
apache
.
synapse
.
mediators
.
filters
;
import
org
.
apache
.
axiom
.
om
.
xpath
.
AXIOMXPath
;
import
org
.
apache
.
commons
.
logging
.
Log
;
import
org
.
apache
.
commons
.
logging
.
LogFactory
;
import
org
.
apache
.
synapse
.
Constants
;
import
org
.
apache
.
synapse
.
MessageContext
;
import
org
.
apache
.
synapse
.
config
.
xml
.
SwitchCase
;
import
org
.
apache
.
synapse
.
config
.
xml
.
AnonymousListMediator
;
import
org
.
apache
.
synapse
.
core
.
axis2
.
Axis2MessageContext
;
import
org
.
apache
.
synapse
.
mediators
.
AbstractMediator
;
import
java
.
util
.
ArrayList
;
import
java
.
util
.
Iterator
;
import
java
.
util
.
List
;
public
class
SwitchMediator
extends
AbstractMediator
{
private
static
final
Log
log
=
LogFactory
.
getLog
(
SwitchMediator
.
class
)
;
private
static
final
Log
trace
=
LogFactory
.
getLog
(
Constants
.
TRACE_LOGGER
)
;
private
AXIOMXPath
source
=
null
;
private
List
cases
=
new
ArrayList
(
)
;
private
SwitchCase
defaultCase
=
null
;
public
boolean
mediate
(
MessageContext
synCtx
)
{
log
.
debug
(
"Switch mediator :: mediate()"
)
;
boolean
shouldTrace
=
shouldTrace
(
synCtx
.
getTracingState
(
)
)
;
if
(
shouldTrace
)
{
trace
.
trace
(
"Start : Switch mediator"
)
;
}
String
sourceText
=
Axis2MessageContext
.
getStringValue
(
source
,
synCtx
)
;
log
.
debug
(
"Applying switch case regex patterns against evaluated source value : "
+
sourceText
)
;
try
{
saveAndSetTraceState
(
synCtx
)
;
if
(
shouldTrace
)
{
trace
.
trace
(
"Source Value : "
+
sourceText
)
;
trace
.
trace
(
"Start Case mediator list"
)
;
}
if
(
sourceText
!=
null
)
{
Iterator
iter
=
cases
.
iterator
(
)
;
while
(
iter
.
hasNext
(
)
)
{
SwitchCase
swCase
=
(
SwitchCase
)
iter
.
next
(
)
;
if
(
swCase
!=
null
)
{
if
(
swCase
.
matches
(
sourceText
)
)
{
if
(
shouldTrace
)
{
trace
.
trace
(
"Executing case for : "
+
swCase
.
getRegex
(
)
)
;
}
return
swCase
.
mediate
(
synCtx
)
;
}
}
}
if
(
shouldTrace
)
{
trace
.
trace
(
"End Case mediator list"
)
;
}
}
else
{
log
.
warn
(
"Source has been evaluated to Null...Default Case will be run"
)
;
}
if
(
defaultCase
!=
null
)
{
log
.
debug
(
"Executing default case"
)
;
if
(
shouldTrace
)
{
trace
.
trace
(
"Executing default case"
)
;
}
return
defaultCase
.
mediate
(
synCtx
)
;
}
}
finally
{
restoreTracingState
(
synCtx
)
;
if
(
shouldTrace
)
{
trace
.
trace
(
"End : Switch mediator"
)
;
}
}
return
true
;
}
public
void
addCase
(
SwitchCase
m
)
{
cases
.
add
(
m
)
;
}
public
List
getCases
(
)
{
return
cases
;
}
public
AXIOMXPath
getSource
(
)
{
return
source
;
}
public
void
setSource
(
AXIOMXPath
source
)
{
this
.
source
=
source
;
}
public
SwitchCase
getDefaultCase
(
)
{
return
defaultCase
;
}
public
void
setDefaultCase
(
SwitchCase
defaultCase
)
{
this
.
defaultCase
=
defaultCase
;
}
}
