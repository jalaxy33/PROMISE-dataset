package
org
.
apache
.
synapse
.
config
.
xml
;
import
org
.
apache
.
axiom
.
om
.
OMElement
;
import
org
.
apache
.
axiom
.
om
.
OMNode
;
import
org
.
apache
.
commons
.
logging
.
Log
;
import
org
.
apache
.
commons
.
logging
.
LogFactory
;
import
org
.
apache
.
synapse
.
SynapseException
;
import
org
.
apache
.
synapse
.
Mediator
;
import
org
.
apache
.
synapse
.
config
.
xml
.
XSLTMediatorFactory
;
import
org
.
apache
.
synapse
.
config
.
xml
.
ValidateMediatorFactory
;
import
org
.
apache
.
synapse
.
config
.
XMLToObjectMapper
;
import
sun
.
misc
.
Service
;
import
javax
.
xml
.
namespace
.
QName
;
import
java
.
util
.
HashMap
;
import
java
.
util
.
Iterator
;
import
java
.
util
.
Map
;
public
class
MediatorFactoryFinder
implements
XMLToObjectMapper
{
private
static
final
Log
log
=
LogFactory
.
getLog
(
MediatorFactoryFinder
.
class
)
;
private
static
final
Class
[
]
mediatorFactories
=
{
SequenceMediatorFactory
.
class
,
LogMediatorFactory
.
class
,
SendMediatorFactory
.
class
,
FilterMediatorFactory
.
class
,
SynapseMediatorFactory
.
class
,
DropMediatorFactory
.
class
,
HeaderMediatorFactory
.
class
,
FaultMediatorFactory
.
class
,
PropertyMediatorFactory
.
class
,
SwitchMediatorFactory
.
class
,
InMediatorFactory
.
class
,
OutMediatorFactory
.
class
,
RMSequenceMediatorFactory
.
class
,
ClassMediatorFactory
.
class
,
ValidateMediatorFactory
.
class
,
XSLTMediatorFactory
.
class
}
;
private
static
MediatorFactoryFinder
instance
=
null
;
private
static
Map
factoryMap
=
new
HashMap
(
)
;
public
static
synchronized
MediatorFactoryFinder
getInstance
(
)
{
if
(
instance
==
null
)
{
instance
=
new
MediatorFactoryFinder
(
)
;
}
return
instance
;
}
public
synchronized
void
reset
(
)
{
factoryMap
.
clear
(
)
;
instance
=
null
;
}
private
MediatorFactoryFinder
(
)
{
factoryMap
=
new
HashMap
(
)
;
for
(
int
i
=
0
;
i
<
mediatorFactories
.
length
;
i
++
)
{
Class
c
=
mediatorFactories
[
i
]
;
try
{
MediatorFactory
fac
=
(
MediatorFactory
)
c
.
newInstance
(
)
;
factoryMap
.
put
(
fac
.
getTagQName
(
)
,
c
)
;
}
catch
(
Exception
e
)
{
throw
new
SynapseException
(
"Error instantiating "
+
c
.
getName
(
)
,
e
)
;
}
}
registerExtensions
(
)
;
}
private
void
handleException
(
String
msg
,
Exception
e
)
{
log
.
error
(
msg
,
e
)
;
throw
new
SynapseException
(
msg
,
e
)
;
}
private
void
handleException
(
String
msg
)
{
log
.
error
(
msg
)
;
throw
new
SynapseException
(
msg
)
;
}
private
void
registerExtensions
(
)
{
Iterator
it
=
Service
.
providers
(
MediatorFactory
.
class
)
;
while
(
it
.
hasNext
(
)
)
{
MediatorFactory
mf
=
(
MediatorFactory
)
it
.
next
(
)
;
QName
tag
=
mf
.
getTagQName
(
)
;
factoryMap
.
put
(
tag
,
mf
.
getClass
(
)
)
;
log
.
debug
(
"Added MediatorFactory "
+
mf
.
getClass
(
)
+
" to handle "
+
tag
)
;
}
}
public
Mediator
getMediator
(
OMElement
element
)
{
String
localName
=
element
.
getLocalName
(
)
;
QName
qName
=
null
;
if
(
element
.
getNamespace
(
)
!=
null
)
{
qName
=
new
QName
(
element
.
getNamespace
(
)
.
getNamespaceURI
(
)
,
localName
)
;
}
else
{
qName
=
new
QName
(
localName
)
;
}
log
.
debug
(
"getMediator("
+
qName
+
")"
)
;
Class
cls
=
(
Class
)
factoryMap
.
get
(
qName
)
;
if
(
cls
==
null
&&
localName
.
indexOf
(
'.'
)
>
-
1
)
{
String
newLocalName
=
localName
.
substring
(
0
,
localName
.
indexOf
(
'.'
)
)
;
qName
=
new
QName
(
element
.
getNamespace
(
)
.
getNamespaceURI
(
)
,
newLocalName
)
;
log
.
debug
(
"getMediator.2("
+
qName
+
")"
)
;
cls
=
(
Class
)
factoryMap
.
get
(
qName
)
;
}
if
(
cls
==
null
)
{
String
msg
=
"Unknown mediator referenced by configuration element : "
+
qName
;
log
.
error
(
msg
)
;
throw
new
SynapseException
(
msg
)
;
}
try
{
MediatorFactory
mf
=
(
MediatorFactory
)
cls
.
newInstance
(
)
;
return
mf
.
createMediator
(
element
)
;
}
catch
(
InstantiationException
e
)
{
String
msg
=
"Error initializing mediator factory : "
+
cls
;
log
.
error
(
msg
)
;
throw
new
SynapseException
(
msg
,
e
)
;
}
catch
(
IllegalAccessException
e
)
{
String
msg
=
"Error initializing mediator factory : "
+
cls
;
log
.
error
(
msg
)
;
throw
new
SynapseException
(
msg
,
e
)
;
}
}
public
Map
getFactoryMap
(
)
{
return
factoryMap
;
}
public
Object
getObjectFromOMNode
(
OMNode
om
)
{
if
(
om
instanceof
OMElement
)
{
return
getMediator
(
(
OMElement
)
om
)
;
}
else
{
handleException
(
"Invalid mediator configuration XML : "
+
om
)
;
}
return
null
;
}
}
