package
org
.
apache
.
synapse
.
config
;
import
org
.
apache
.
commons
.
logging
.
Log
;
import
org
.
apache
.
commons
.
logging
.
LogFactory
;
import
org
.
apache
.
synapse
.
Constants
;
import
org
.
apache
.
synapse
.
SynapseException
;
import
org
.
apache
.
synapse
.
config
.
xml
.
XMLConfigurationBuilder
;
import
org
.
apache
.
synapse
.
mediators
.
base
.
SynapseMediator
;
import
org
.
apache
.
synapse
.
mediators
.
builtin
.
SendMediator
;
import
java
.
io
.
FileInputStream
;
import
java
.
io
.
FileNotFoundException
;
import
java
.
io
.
File
;
public
class
SynapseConfigurationBuilder
implements
Constants
{
private
static
Log
log
=
LogFactory
.
getLog
(
SynapseConfigurationBuilder
.
class
)
;
public
static
SynapseConfiguration
getDefaultConfiguration
(
)
{
SynapseConfiguration
config
=
new
SynapseConfiguration
(
)
;
SynapseMediator
mainmediator
=
new
SynapseMediator
(
)
;
mainmediator
.
addChild
(
new
SendMediator
(
)
)
;
config
.
addSequence
(
"main"
,
mainmediator
)
;
return
config
;
}
public
static
SynapseConfiguration
getConfiguration
(
String
configFile
)
{
try
{
SynapseConfiguration
synCfg
=
XMLConfigurationBuilder
.
getConfiguration
(
new
FileInputStream
(
configFile
)
)
;
log
.
info
(
"Loaded Synapse configuration from : "
+
configFile
)
;
synCfg
.
setPathToConfigFile
(
new
File
(
configFile
)
.
getAbsolutePath
(
)
)
;
return
synCfg
;
}
catch
(
FileNotFoundException
fnf
)
{
handleException
(
"Cannot load Synapse configuration from : "
+
configFile
,
fnf
)
;
}
catch
(
Exception
e
)
{
handleException
(
"Could not initialize Synapse : "
+
e
.
getMessage
(
)
,
e
)
;
}
return
null
;
}
private
static
void
handleException
(
String
msg
,
Exception
e
)
{
log
.
error
(
msg
,
e
)
;
throw
new
SynapseException
(
msg
,
e
)
;
}
}
