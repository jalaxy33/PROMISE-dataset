package
org
.
apache
.
synapse
.
endpoints
.
dispatch
;
import
org
.
apache
.
synapse
.
endpoints
.
Endpoint
;
import
org
.
apache
.
synapse
.
MessageContext
;
import
org
.
apache
.
synapse
.
core
.
axis2
.
Axis2MessageContext
;
import
java
.
util
.
HashMap
;
import
java
.
util
.
Map
;
import
java
.
util
.
Collections
;
public
class
HttpSessionDispatcher
implements
Dispatcher
{
Map
sessionMap
=
Collections
.
synchronizedMap
(
new
HashMap
(
)
)
;
public
Endpoint
getEndpoint
(
MessageContext
synCtx
)
{
Endpoint
endpoint
=
null
;
org
.
apache
.
axis2
.
context
.
MessageContext
axis2MessageContext
=
(
(
Axis2MessageContext
)
synCtx
)
.
getAxis2MessageContext
(
)
;
Object
o
=
axis2MessageContext
.
getProperty
(
"TRANSPORT_HEADERS"
)
;
if
(
o
!=
null
&&
o
instanceof
Map
)
{
Map
headerMap
=
(
Map
)
o
;
Object
cookie
=
headerMap
.
get
(
"Cookie"
)
;
if
(
cookie
!=
null
)
{
Object
e
=
sessionMap
.
get
(
cookie
)
;
if
(
e
!=
null
)
{
endpoint
=
(
Endpoint
)
e
;
}
}
}
return
endpoint
;
}
public
void
updateSession
(
MessageContext
synCtx
,
Endpoint
endpoint
)
{
org
.
apache
.
axis2
.
context
.
MessageContext
axis2MessageContext
=
(
(
Axis2MessageContext
)
synCtx
)
.
getAxis2MessageContext
(
)
;
Object
o
=
axis2MessageContext
.
getProperty
(
"TRANSPORT_HEADERS"
)
;
if
(
o
!=
null
&&
o
instanceof
Map
)
{
Map
headerMap
=
(
Map
)
o
;
Object
cookie
=
headerMap
.
get
(
"Set-Cookie"
)
;
if
(
cookie
!=
null
)
{
synchronized
(
sessionMap
)
{
if
(
!
sessionMap
.
containsKey
(
cookie
)
)
{
sessionMap
.
put
(
cookie
,
endpoint
)
;
}
}
}
}
}
public
void
unbind
(
MessageContext
synCtx
)
{
org
.
apache
.
axis2
.
context
.
MessageContext
axis2MessageContext
=
(
(
Axis2MessageContext
)
synCtx
)
.
getAxis2MessageContext
(
)
;
Object
o
=
axis2MessageContext
.
getProperty
(
"TRANSPORT_HEADERS"
)
;
if
(
o
!=
null
&&
o
instanceof
Map
)
{
Map
headerMap
=
(
Map
)
o
;
Object
cookie
=
headerMap
.
get
(
"Cookie"
)
;
if
(
cookie
!=
null
)
{
sessionMap
.
remove
(
cookie
)
;
}
}
}
public
boolean
isServerInitiatedSession
(
)
{
return
true
;
}
}
