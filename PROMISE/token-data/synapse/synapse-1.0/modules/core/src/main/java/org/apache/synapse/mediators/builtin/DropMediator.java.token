package
org
.
apache
.
synapse
.
mediators
.
builtin
;
import
org
.
apache
.
commons
.
logging
.
Log
;
import
org
.
apache
.
commons
.
logging
.
LogFactory
;
import
org
.
apache
.
synapse
.
Constants
;
import
org
.
apache
.
synapse
.
MessageContext
;
import
org
.
apache
.
synapse
.
statistics
.
StatisticsUtils
;
import
org
.
apache
.
synapse
.
mediators
.
AbstractMediator
;
public
class
DropMediator
extends
AbstractMediator
{
private
static
final
Log
log
=
LogFactory
.
getLog
(
DropMediator
.
class
)
;
private
static
final
Log
trace
=
LogFactory
.
getLog
(
Constants
.
TRACE_LOGGER
)
;
public
boolean
mediate
(
MessageContext
synCtx
)
{
log
.
debug
(
"Drop mediator :: mediate()"
)
;
StatisticsUtils
.
processProxyServiceStatistics
(
synCtx
)
;
StatisticsUtils
.
processAllSequenceStatistics
(
synCtx
)
;
boolean
shouldTrace
=
shouldTrace
(
synCtx
.
getTracingState
(
)
)
;
if
(
shouldTrace
)
{
trace
.
trace
(
"Start : Drop mediator"
)
;
}
if
(
synCtx
.
getTo
(
)
==
null
)
{
if
(
shouldTrace
)
{
trace
.
trace
(
"End : Drop mediator"
)
;
}
return
false
;
}
else
{
synCtx
.
setTo
(
null
)
;
if
(
shouldTrace
)
{
trace
.
trace
(
"End : Drop mediator"
)
;
}
return
false
;
}
}
}
