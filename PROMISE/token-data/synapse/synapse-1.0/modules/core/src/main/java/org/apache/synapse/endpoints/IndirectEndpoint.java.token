package
org
.
apache
.
synapse
.
endpoints
;
import
org
.
apache
.
synapse
.
MessageContext
;
import
org
.
apache
.
synapse
.
SynapseException
;
import
org
.
apache
.
synapse
.
FaultHandler
;
import
org
.
apache
.
commons
.
logging
.
Log
;
import
org
.
apache
.
commons
.
logging
.
LogFactory
;
public
class
IndirectEndpoint
implements
Endpoint
{
private
static
final
Log
log
=
LogFactory
.
getLog
(
IndirectEndpoint
.
class
)
;
private
String
name
=
null
;
private
String
key
=
null
;
private
boolean
active
=
true
;
private
Endpoint
parentEndpoint
=
null
;
private
MessageContext
currentMsgCtx
=
null
;
public
void
send
(
MessageContext
synMessageContext
)
{
Endpoint
endpoint
=
synMessageContext
.
getEndpoint
(
key
)
;
if
(
endpoint
==
null
)
{
handleException
(
"Reference to non-existent endpoint for key : "
+
key
)
;
}
if
(
endpoint
.
isActive
(
synMessageContext
)
)
{
endpoint
.
send
(
synMessageContext
)
;
}
else
{
if
(
parentEndpoint
!=
null
)
{
parentEndpoint
.
onChildEndpointFail
(
this
,
synMessageContext
)
;
}
else
{
Object
o
=
synMessageContext
.
getFaultStack
(
)
.
pop
(
)
;
if
(
o
!=
null
)
{
(
(
FaultHandler
)
o
)
.
handleFault
(
synMessageContext
)
;
}
}
}
}
public
String
getName
(
)
{
return
name
;
}
public
void
setName
(
String
name
)
{
this
.
name
=
name
.
trim
(
)
;
}
public
String
getKey
(
)
{
return
key
;
}
public
void
setKey
(
String
key
)
{
this
.
key
=
key
;
}
public
boolean
isActive
(
MessageContext
synMessageContext
)
{
Endpoint
endpoint
=
synMessageContext
.
getEndpoint
(
key
)
;
if
(
endpoint
==
null
)
{
handleException
(
"Reference to non-existent endpoint for key : "
+
key
)
;
}
return
endpoint
.
isActive
(
synMessageContext
)
;
}
public
void
setActive
(
boolean
active
,
MessageContext
synMessageContext
)
{
Endpoint
endpoint
=
synMessageContext
.
getEndpoint
(
key
)
;
if
(
endpoint
==
null
)
{
handleException
(
"Reference to non-existent endpoint for key : "
+
key
)
;
}
endpoint
.
setActive
(
active
,
synMessageContext
)
;
}
public
void
setParentEndpoint
(
Endpoint
parentEndpoint
)
{
this
.
parentEndpoint
=
parentEndpoint
;
}
public
void
onChildEndpointFail
(
Endpoint
endpoint
,
MessageContext
synMessageContext
)
{
if
(
parentEndpoint
!=
null
)
{
parentEndpoint
.
onChildEndpointFail
(
this
,
synMessageContext
)
;
}
else
{
Object
o
=
synMessageContext
.
getFaultStack
(
)
.
pop
(
)
;
if
(
o
!=
null
)
{
(
(
FaultHandler
)
o
)
.
handleFault
(
synMessageContext
)
;
}
}
}
private
void
handleException
(
String
msg
)
{
log
.
error
(
msg
)
;
throw
new
SynapseException
(
msg
)
;
}
}
