package
org
.
apache
.
synapse
.
config
.
xml
;
import
org
.
apache
.
axiom
.
om
.
OMElement
;
import
org
.
apache
.
commons
.
logging
.
Log
;
import
org
.
apache
.
commons
.
logging
.
LogFactory
;
import
org
.
apache
.
synapse
.
SynapseException
;
import
org
.
apache
.
synapse
.
Mediator
;
import
org
.
apache
.
synapse
.
config
.
xml
.
endpoints
.
EndpointSerializer
;
import
org
.
apache
.
synapse
.
config
.
xml
.
endpoints
.
EndpointAbstractSerializer
;
import
org
.
apache
.
synapse
.
mediators
.
builtin
.
SendMediator
;
import
org
.
apache
.
synapse
.
endpoints
.
Endpoint
;
public
class
SendMediatorSerializer
extends
AbstractMediatorSerializer
{
private
static
final
Log
log
=
LogFactory
.
getLog
(
SendMediatorSerializer
.
class
)
;
public
OMElement
serializeMediator
(
OMElement
parent
,
Mediator
m
)
{
if
(
!
(
m
instanceof
SendMediator
)
)
{
handleException
(
"Unsupported mediator passed in for serialization : "
+
m
.
getType
(
)
)
;
}
SendMediator
mediator
=
(
SendMediator
)
m
;
OMElement
send
=
fac
.
createOMElement
(
"send"
,
synNS
)
;
finalizeSerialization
(
send
,
mediator
)
;
Endpoint
activeEndpoint
=
mediator
.
getEndpoint
(
)
;
if
(
activeEndpoint
!=
null
)
{
EndpointSerializer
serializer
=
EndpointAbstractSerializer
.
getEndpointSerializer
(
activeEndpoint
)
;
OMElement
endpointElement
=
serializer
.
serializeEndpoint
(
activeEndpoint
)
;
send
.
addChild
(
endpointElement
)
;
}
if
(
parent
!=
null
)
{
parent
.
addChild
(
send
)
;
}
return
send
;
}
public
String
getMediatorClassName
(
)
{
return
SendMediator
.
class
.
getName
(
)
;
}
private
void
handleException
(
String
msg
)
{
log
.
error
(
msg
)
;
throw
new
SynapseException
(
msg
)
;
}
}
