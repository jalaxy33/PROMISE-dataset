package
org
.
apache
.
synapse
.
endpoints
;
import
org
.
apache
.
synapse
.
FaultHandler
;
import
org
.
apache
.
synapse
.
MessageContext
;
import
java
.
util
.
List
;
public
class
FailoverEndpoint
implements
Endpoint
{
private
String
name
=
null
;
private
volatile
boolean
active
=
true
;
private
List
endpoints
=
null
;
private
Endpoint
currentEndpoint
=
null
;
private
Endpoint
parentEndpoint
=
null
;
public
void
send
(
MessageContext
synMessageContext
)
{
synMessageContext
.
getEnvelope
(
)
.
build
(
)
;
if
(
currentEndpoint
.
isActive
(
synMessageContext
)
)
{
currentEndpoint
.
send
(
synMessageContext
)
;
}
else
{
Endpoint
liveEndpoint
=
null
;
boolean
foundEndpoint
=
false
;
for
(
int
i
=
0
;
i
<
endpoints
.
size
(
)
;
i
++
)
{
liveEndpoint
=
(
Endpoint
)
endpoints
.
get
(
i
)
;
if
(
liveEndpoint
.
isActive
(
synMessageContext
)
)
{
foundEndpoint
=
true
;
currentEndpoint
=
liveEndpoint
;
currentEndpoint
.
send
(
synMessageContext
)
;
break
;
}
}
if
(
!
foundEndpoint
)
{
setActive
(
false
,
synMessageContext
)
;
if
(
parentEndpoint
!=
null
)
{
parentEndpoint
.
onChildEndpointFail
(
this
,
synMessageContext
)
;
}
else
{
Object
o
=
synMessageContext
.
getFaultStack
(
)
.
pop
(
)
;
if
(
o
!=
null
)
{
(
(
FaultHandler
)
o
)
.
handleFault
(
synMessageContext
)
;
}
}
}
}
}
public
String
getName
(
)
{
return
this
.
name
;
}
public
void
setName
(
String
name
)
{
this
.
name
=
name
.
trim
(
)
;
}
public
boolean
isActive
(
MessageContext
synMessageContext
)
{
if
(
!
active
)
{
for
(
int
i
=
0
;
i
<
endpoints
.
size
(
)
;
i
++
)
{
Endpoint
endpoint
=
(
Endpoint
)
endpoints
.
get
(
i
)
;
if
(
endpoint
.
isActive
(
synMessageContext
)
)
{
active
=
true
;
}
}
}
return
active
;
}
public
void
setActive
(
boolean
active
,
MessageContext
synMessageContext
)
{
this
.
active
=
active
;
}
public
List
getEndpoints
(
)
{
return
endpoints
;
}
public
void
setEndpoints
(
List
endpoints
)
{
this
.
endpoints
=
endpoints
;
if
(
endpoints
.
size
(
)
>
0
)
{
currentEndpoint
=
(
Endpoint
)
endpoints
.
get
(
0
)
;
}
}
public
void
onChildEndpointFail
(
Endpoint
endpoint
,
MessageContext
synMessageContext
)
{
send
(
synMessageContext
)
;
}
public
void
setParentEndpoint
(
Endpoint
parentEndpoint
)
{
this
.
parentEndpoint
=
parentEndpoint
;
}
}
