package
org
.
apache
.
synapse
.
config
.
xml
;
import
org
.
apache
.
axiom
.
om
.
OMAttribute
;
import
org
.
apache
.
axiom
.
om
.
OMElement
;
import
org
.
apache
.
synapse
.
Mediator
;
import
org
.
apache
.
synapse
.
mediators
.
eip
.
splitter
.
CloneMediator
;
import
javax
.
xml
.
namespace
.
QName
;
import
java
.
util
.
Iterator
;
public
class
CloneMediatorFactory
extends
AbstractMediatorFactory
{
private
static
final
QName
CLONE_Q
=
new
QName
(
XMLConfigConstants
.
SYNAPSE_NAMESPACE
,
"clone"
)
;
private
static
final
QName
ATT_CONTPAR
=
new
QName
(
"continueParent"
)
;
private
static
final
QName
TARGET_Q
=
new
QName
(
XMLConfigConstants
.
SYNAPSE_NAMESPACE
,
"target"
)
;
public
Mediator
createMediator
(
OMElement
elem
)
{
CloneMediator
mediator
=
new
CloneMediator
(
)
;
processTraceState
(
mediator
,
elem
)
;
OMAttribute
continueParent
=
elem
.
getAttribute
(
ATT_CONTPAR
)
;
if
(
continueParent
!=
null
)
{
mediator
.
setContinueParent
(
Boolean
.
valueOf
(
continueParent
.
getAttributeValue
(
)
)
.
booleanValue
(
)
)
;
}
Iterator
targetElements
=
elem
.
getChildrenWithName
(
TARGET_Q
)
;
while
(
targetElements
.
hasNext
(
)
)
{
mediator
.
addTarget
(
TargetFactory
.
createTarget
(
(
OMElement
)
targetElements
.
next
(
)
)
)
;
}
return
mediator
;
}
public
QName
getTagQName
(
)
{
return
CLONE_Q
;
}
}
