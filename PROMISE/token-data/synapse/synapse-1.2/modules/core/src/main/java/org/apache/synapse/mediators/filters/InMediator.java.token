package
org
.
apache
.
synapse
.
mediators
.
filters
;
import
org
.
apache
.
commons
.
logging
.
Log
;
import
org
.
apache
.
commons
.
logging
.
LogFactory
;
import
org
.
apache
.
synapse
.
SynapseConstants
;
import
org
.
apache
.
synapse
.
MessageContext
;
import
org
.
apache
.
synapse
.
mediators
.
AbstractListMediator
;
public
class
InMediator
extends
AbstractListMediator
implements
org
.
apache
.
synapse
.
mediators
.
FilterMediator
{
public
boolean
mediate
(
MessageContext
synCtx
)
{
boolean
traceOn
=
isTraceOn
(
synCtx
)
;
boolean
traceOrDebugOn
=
isTraceOrDebugOn
(
traceOn
)
;
if
(
traceOrDebugOn
)
{
traceOrDebug
(
traceOn
,
"Start : In mediator"
)
;
if
(
traceOn
&&
trace
.
isTraceEnabled
(
)
)
{
trace
.
trace
(
"Message : "
+
synCtx
.
getEnvelope
(
)
)
;
}
}
boolean
result
=
true
;
if
(
test
(
synCtx
)
)
{
if
(
traceOrDebugOn
)
{
traceOrDebug
(
traceOn
,
"Current message is incoming - executing child mediators"
)
;
}
result
=
super
.
mediate
(
synCtx
)
;
}
else
{
if
(
traceOrDebugOn
)
{
traceOrDebug
(
traceOn
,
"Current message is a response - skipping child mediators"
)
;
}
}
if
(
traceOrDebugOn
)
{
traceOrDebug
(
traceOn
,
"End : In mediator"
)
;
}
return
result
;
}
public
boolean
test
(
MessageContext
synCtx
)
{
return
!
synCtx
.
isResponse
(
)
;
}
}
