package
fr
.
jayasoft
.
ivy
.
ant
;
import
fr
.
jayasoft
.
ivy
.
Ivy
;
import
fr
.
jayasoft
.
ivy
.
ModuleId
;
import
java
.
io
.
File
;
import
org
.
apache
.
tools
.
ant
.
BuildException
;
public
class
IvyRetrieve
extends
IvyTask
{
private
String
_organisation
;
private
String
_module
;
private
String
_conf
;
private
File
_cache
;
private
String
_pattern
;
private
boolean
_haltOnFailure
=
true
;
public
File
getCache
(
)
{
return
_cache
;
}
public
void
setCache
(
File
cache
)
{
_cache
=
cache
;
}
public
String
getConf
(
)
{
return
_conf
;
}
public
void
setConf
(
String
conf
)
{
_conf
=
conf
;
}
public
String
getModule
(
)
{
return
_module
;
}
public
void
setModule
(
String
module
)
{
_module
=
module
;
}
public
String
getOrganisation
(
)
{
return
_organisation
;
}
public
void
setOrganisation
(
String
organisation
)
{
_organisation
=
organisation
;
}
public
String
getPattern
(
)
{
return
_pattern
;
}
public
void
setPattern
(
String
pattern
)
{
_pattern
=
pattern
;
}
public
boolean
isHaltonfailure
(
)
{
return
_haltOnFailure
;
}
public
void
setHaltonfailure
(
boolean
haltOnFailure
)
{
_haltOnFailure
=
haltOnFailure
;
}
public
void
execute
(
)
throws
BuildException
{
Ivy
ivy
=
getIvyInstance
(
)
;
ensureResolved
(
isHaltonfailure
(
)
)
;
_organisation
=
getProperty
(
_organisation
,
ivy
,
"ivy.organisation"
)
;
_module
=
getProperty
(
_module
,
ivy
,
"ivy.module"
)
;
if
(
_cache
==
null
)
{
_cache
=
ivy
.
getDefaultCache
(
)
;
}
_pattern
=
getProperty
(
_pattern
,
ivy
,
"ivy.retrieve.pattern"
)
;
_conf
=
getProperty
(
_conf
,
ivy
,
"ivy.resolved.configurations"
)
;
if
(
_conf
.
equals
(
"*"
)
)
{
_conf
=
getProperty
(
ivy
,
"ivy.resolved.configurations"
)
;
}
if
(
_organisation
==
null
||
_module
==
null
)
{
throw
new
BuildException
(
"no module id provided for retrieve: either call resolve, give paramaters to ivy:retrieve, or provide ivy.module and ivy.organisation properties"
)
;
}
try
{
ivy
.
retrieve
(
new
ModuleId
(
_organisation
,
_module
)
,
splitConfs
(
_conf
)
,
_cache
,
_pattern
)
;
}
catch
(
Exception
ex
)
{
throw
new
BuildException
(
"impossible to ivy retrieve: "
+
ex
.
getMessage
(
)
,
ex
)
;
}
}
}
