package
fr
.
jayasoft
.
ivy
.
repository
;
import
java
.
io
.
File
;
import
fr
.
jayasoft
.
ivy
.
Ivy
;
import
fr
.
jayasoft
.
ivy
.
event
.
IvyEvent
;
public
class
TransferEvent
extends
IvyEvent
{
public
static
final
int
TRANSFER_INITIATED
=
0
;
public
final
static
int
TRANSFER_STARTED
=
1
;
public
final
static
int
TRANSFER_COMPLETED
=
2
;
public
final
static
int
TRANSFER_PROGRESS
=
3
;
public
final
static
int
TRANSFER_ERROR
=
4
;
public
final
static
int
REQUEST_GET
=
5
;
public
final
static
int
REQUEST_PUT
=
6
;
public
static
final
String
TRANSFER_INITIATED_NAME
=
"transfer-initiated"
;
public
static
final
String
TRANSFER_STARTED_NAME
=
"transfer-started"
;
public
static
final
String
TRANSFER_PROGRESS_NAME
=
"transfer-progress"
;
public
static
final
String
TRANSFER_COMPLETED_NAME
=
"transfer-completed"
;
public
static
final
String
TRANSFER_ERROR_NAME
=
"transfer-error"
;
private
Resource
_resource
;
private
int
_eventType
;
private
int
_requestType
;
private
Exception
_exception
;
private
File
_localFile
;
private
Repository
_repository
;
private
long
_length
;
private
long
_totalLength
;
private
boolean
_isTotalLengthSet
=
false
;
public
TransferEvent
(
Ivy
ivy
,
final
Repository
repository
,
final
Resource
resource
,
final
int
eventType
,
final
int
requestType
)
{
super
(
ivy
,
getName
(
eventType
)
)
;
_repository
=
repository
;
addAttribute
(
"repository"
,
_repository
.
getName
(
)
)
;
_resource
=
resource
;
addAttribute
(
"resource"
,
_resource
.
getName
(
)
)
;
setEventType
(
eventType
)
;
setRequestType
(
requestType
)
;
addAttribute
(
"request-type"
,
requestType
==
REQUEST_GET
?
"get"
:
"put"
)
;
}
public
TransferEvent
(
Ivy
ivy
,
final
Repository
repository
,
final
Resource
resource
,
final
Exception
exception
,
final
int
requestType
)
{
this
(
ivy
,
repository
,
resource
,
TRANSFER_ERROR
,
requestType
)
;
_exception
=
exception
;
}
public
TransferEvent
(
Ivy
ivy
,
final
Repository
repository
,
final
Resource
resource
,
long
length
,
final
int
requestType
)
{
this
(
ivy
,
repository
,
resource
,
TRANSFER_PROGRESS
,
requestType
)
;
_length
=
length
;
_totalLength
=
length
;
}
private
static
String
getName
(
int
eventType
)
{
switch
(
eventType
)
{
case
TRANSFER_INITIATED
:
return
TRANSFER_INITIATED_NAME
;
case
TRANSFER_STARTED
:
return
TRANSFER_STARTED_NAME
;
case
TRANSFER_PROGRESS
:
return
TRANSFER_PROGRESS_NAME
;
case
TRANSFER_COMPLETED
:
return
TRANSFER_COMPLETED_NAME
;
case
TRANSFER_ERROR
:
return
TRANSFER_ERROR_NAME
;
}
return
null
;
}
public
Resource
getResource
(
)
{
return
_resource
;
}
public
Exception
getException
(
)
{
return
_exception
;
}
public
int
getRequestType
(
)
{
return
_requestType
;
}
protected
void
setRequestType
(
final
int
requestType
)
{
switch
(
requestType
)
{
case
REQUEST_PUT
:
break
;
case
REQUEST_GET
:
break
;
default
:
throw
new
IllegalArgumentException
(
"Illegal request type: "
+
requestType
)
;
}
_requestType
=
requestType
;
}
public
int
getEventType
(
)
{
return
_eventType
;
}
protected
void
setEventType
(
final
int
eventType
)
{
switch
(
eventType
)
{
case
TRANSFER_INITIATED
:
break
;
case
TRANSFER_STARTED
:
break
;
case
TRANSFER_COMPLETED
:
break
;
case
TRANSFER_PROGRESS
:
break
;
case
TRANSFER_ERROR
:
break
;
default
:
throw
new
IllegalArgumentException
(
"Illegal event type: "
+
eventType
)
;
}
this
.
_eventType
=
eventType
;
}
protected
void
setResource
(
final
Resource
resource
)
{
_resource
=
resource
;
}
public
File
getLocalFile
(
)
{
return
_localFile
;
}
protected
void
setLocalFile
(
File
localFile
)
{
_localFile
=
localFile
;
}
public
long
getLength
(
)
{
return
_length
;
}
protected
void
setLength
(
long
length
)
{
_length
=
length
;
}
public
long
getTotalLength
(
)
{
return
_totalLength
;
}
protected
void
setTotalLength
(
long
totalLength
)
{
_totalLength
=
totalLength
;
}
public
void
setException
(
Exception
exception
)
{
_exception
=
exception
;
}
public
boolean
isTotalLengthSet
(
)
{
return
_isTotalLengthSet
;
}
public
void
setTotalLengthSet
(
boolean
isTotalLengthSet
)
{
_isTotalLengthSet
=
isTotalLengthSet
;
}
}
