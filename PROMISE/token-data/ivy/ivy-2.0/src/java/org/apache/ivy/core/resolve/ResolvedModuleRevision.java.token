package
org
.
apache
.
ivy
.
core
.
resolve
;
import
java
.
util
.
Date
;
import
org
.
apache
.
ivy
.
core
.
module
.
descriptor
.
ModuleDescriptor
;
import
org
.
apache
.
ivy
.
core
.
module
.
id
.
ModuleRevisionId
;
import
org
.
apache
.
ivy
.
core
.
report
.
MetadataArtifactDownloadReport
;
import
org
.
apache
.
ivy
.
plugins
.
resolver
.
DependencyResolver
;
public
class
ResolvedModuleRevision
{
private
DependencyResolver
resolver
;
private
DependencyResolver
artifactResolver
;
private
ModuleDescriptor
descriptor
;
private
MetadataArtifactDownloadReport
report
;
private
boolean
force
=
false
;
public
ResolvedModuleRevision
(
DependencyResolver
resolver
,
DependencyResolver
artifactResolver
,
ModuleDescriptor
descriptor
,
MetadataArtifactDownloadReport
report
)
{
this
.
resolver
=
resolver
;
this
.
artifactResolver
=
artifactResolver
;
this
.
descriptor
=
descriptor
;
this
.
report
=
report
;
}
public
ResolvedModuleRevision
(
DependencyResolver
resolver
,
DependencyResolver
artifactResolver
,
ModuleDescriptor
descriptor
,
MetadataArtifactDownloadReport
report
,
boolean
force
)
{
this
.
resolver
=
resolver
;
this
.
artifactResolver
=
artifactResolver
;
this
.
descriptor
=
descriptor
;
this
.
report
=
report
;
this
.
force
=
force
;
}
public
ModuleRevisionId
getId
(
)
{
return
descriptor
.
getResolvedModuleRevisionId
(
)
;
}
public
Date
getPublicationDate
(
)
{
return
descriptor
.
getResolvedPublicationDate
(
)
;
}
public
ModuleDescriptor
getDescriptor
(
)
{
return
descriptor
;
}
public
DependencyResolver
getResolver
(
)
{
return
resolver
;
}
public
DependencyResolver
getArtifactResolver
(
)
{
return
artifactResolver
;
}
public
MetadataArtifactDownloadReport
getReport
(
)
{
return
report
;
}
public
boolean
isForce
(
)
{
return
force
;
}
public
boolean
equals
(
Object
obj
)
{
if
(
!
(
obj
instanceof
ResolvedModuleRevision
)
)
{
return
false
;
}
return
(
(
ResolvedModuleRevision
)
obj
)
.
getId
(
)
.
equals
(
getId
(
)
)
;
}
public
int
hashCode
(
)
{
return
getId
(
)
.
hashCode
(
)
;
}
public
String
toString
(
)
{
return
getId
(
)
.
toString
(
)
;
}
}
