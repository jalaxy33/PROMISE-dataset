package
net
.
sourceforge
.
pbeans
.
data
;
import
java
.
sql
.
*
;
import
javax
.
sql
.
*
;
public
class
DefaultDatabaseFactory
implements
DatabaseFactory
{
private
int
maxConnections
=
100
;
private
int
timeout
=
10
*
60
*
1000
;
private
boolean
deleteFields
;
public
void
setMaxConnections
(
int
maxConnections
)
{
this
.
maxConnections
=
maxConnections
;
}
public
void
setConnectionTimeout
(
int
timeout
)
{
this
.
timeout
=
timeout
;
}
public
void
setDeleteFields
(
boolean
value
)
{
this
.
deleteFields
=
value
;
}
public
Database
getDatabase
(
DataSource
store
)
throws
SQLException
{
Connection
c
=
store
.
getConnection
(
)
;
try
{
DatabaseMetaData
dmd
=
c
.
getMetaData
(
)
;
String
name
=
dmd
.
getDatabaseProductName
(
)
;
Database
db
;
if
(
name
.
equalsIgnoreCase
(
"mysql"
)
)
{
db
=
new
MySQLDatabase
(
store
)
;
}
else
if
(
name
.
toLowerCase
(
)
.
indexOf
(
"sql server"
)
!=
-
1
)
{
db
=
new
SQLServerDatabase
(
store
)
;
}
else
{
System
.
out
.
println
(
"WARN: DatabaseFactory: Unknown database name: "
+
name
+
". Will use GenericDatabase, but it might not work properly."
)
;
db
=
new
GenericDatabase
(
store
)
;
}
if
(
db
instanceof
AbstractDatabase
)
{
AbstractDatabase
bdb
=
(
AbstractDatabase
)
db
;
bdb
.
setMaxConnections
(
this
.
maxConnections
)
;
bdb
.
setConnectionTimeout
(
this
.
timeout
)
;
}
return
db
;
}
finally
{
c
.
close
(
)
;
}
}
}
