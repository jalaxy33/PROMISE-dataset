package
org
.
apache
.
velocity
.
util
.
introspection
;
import
java
.
util
.
Iterator
;
import
org
.
apache
.
velocity
.
runtime
.
RuntimeConstants
;
import
org
.
apache
.
velocity
.
runtime
.
RuntimeServices
;
import
org
.
apache
.
velocity
.
util
.
RuntimeServicesAware
;
public
class
SecureUberspector
extends
UberspectImpl
implements
RuntimeServicesAware
{
RuntimeServices
runtimeServices
;
public
SecureUberspector
(
)
{
super
(
)
;
}
public
void
init
(
)
{
String
[
]
badPackages
=
runtimeServices
.
getConfiguration
(
)
.
getStringArray
(
RuntimeConstants
.
INTROSPECTOR_RESTRICT_PACKAGES
)
;
String
[
]
badClasses
=
runtimeServices
.
getConfiguration
(
)
.
getStringArray
(
RuntimeConstants
.
INTROSPECTOR_RESTRICT_CLASSES
)
;
introspector
=
new
SecureIntrospectorImpl
(
badClasses
,
badPackages
,
log
)
;
}
public
Iterator
getIterator
(
Object
obj
,
Info
i
)
throws
Exception
{
if
(
obj
!=
null
)
{
SecureIntrospectorControl
sic
=
(
SecureIntrospectorControl
)
introspector
;
if
(
sic
.
checkObjectExecutePermission
(
obj
.
getClass
(
)
,
null
)
)
{
return
super
.
getIterator
(
obj
,
i
)
;
}
else
{
log
.
warn
(
"Cannot retrieve iterator from "
+
obj
.
getClass
(
)
+
" due to security restrictions."
)
;
}
}
return
null
;
}
public
void
setRuntimeServices
(
RuntimeServices
rs
)
{
this
.
runtimeServices
=
rs
;
}
}
