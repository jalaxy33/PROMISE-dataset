package
org
.
apache
.
velocity
.
context
;
import
java
.
util
.
HashSet
;
import
java
.
util
.
Set
;
import
java
.
util
.
List
;
import
org
.
apache
.
velocity
.
VelocityContext
;
import
org
.
apache
.
velocity
.
app
.
event
.
EventCartridge
;
import
org
.
apache
.
velocity
.
runtime
.
RuntimeConstants
;
import
org
.
apache
.
velocity
.
runtime
.
RuntimeServices
;
import
org
.
apache
.
velocity
.
runtime
.
resource
.
Resource
;
import
org
.
apache
.
velocity
.
util
.
ClassUtils
;
import
org
.
apache
.
velocity
.
util
.
introspection
.
IntrospectionCacheData
;
public
abstract
class
ChainedInternalContextAdapter
implements
InternalContextAdapter
{
protected
InternalContextAdapter
innerContext
=
null
;
public
ChainedInternalContextAdapter
(
InternalContextAdapter
inner
)
{
innerContext
=
inner
;
}
public
Context
getInternalUserContext
(
)
{
return
innerContext
.
getInternalUserContext
(
)
;
}
public
InternalContextAdapter
getBaseContext
(
)
{
return
innerContext
.
getBaseContext
(
)
;
}
public
Object
get
(
String
key
)
{
return
innerContext
.
get
(
key
)
;
}
public
Object
put
(
String
key
,
Object
value
)
{
return
innerContext
.
put
(
key
,
value
)
;
}
public
boolean
containsKey
(
Object
key
)
{
return
innerContext
.
containsKey
(
key
)
;
}
public
Object
[
]
getKeys
(
)
{
return
innerContext
.
getKeys
(
)
;
}
public
Object
remove
(
Object
key
)
{
return
innerContext
.
remove
(
key
)
;
}
public
void
pushCurrentTemplateName
(
String
s
)
{
innerContext
.
pushCurrentTemplateName
(
s
)
;
}
public
void
popCurrentTemplateName
(
)
{
innerContext
.
popCurrentTemplateName
(
)
;
}
public
String
getCurrentTemplateName
(
)
{
return
innerContext
.
getCurrentTemplateName
(
)
;
}
public
Object
[
]
getTemplateNameStack
(
)
{
return
innerContext
.
getTemplateNameStack
(
)
;
}
public
void
pushCurrentMacroName
(
String
s
)
{
innerContext
.
pushCurrentMacroName
(
s
)
;
}
public
void
popCurrentMacroName
(
)
{
innerContext
.
popCurrentMacroName
(
)
;
}
public
String
getCurrentMacroName
(
)
{
return
innerContext
.
getCurrentMacroName
(
)
;
}
public
int
getCurrentMacroCallDepth
(
)
{
return
innerContext
.
getCurrentMacroCallDepth
(
)
;
}
public
Object
[
]
getMacroNameStack
(
)
{
return
innerContext
.
getMacroNameStack
(
)
;
}
public
IntrospectionCacheData
icacheGet
(
Object
key
)
{
return
innerContext
.
icacheGet
(
key
)
;
}
public
Object
localPut
(
final
String
key
,
final
Object
value
)
{
return
innerContext
.
put
(
key
,
value
)
;
}
public
void
icachePut
(
Object
key
,
IntrospectionCacheData
o
)
{
innerContext
.
icachePut
(
key
,
o
)
;
}
public
boolean
getAllowRendering
(
)
{
return
innerContext
.
getAllowRendering
(
)
;
}
public
void
setAllowRendering
(
boolean
v
)
{
innerContext
.
setAllowRendering
(
v
)
;
}
public
void
setMacroLibraries
(
List
macroLibraries
)
{
innerContext
.
setMacroLibraries
(
macroLibraries
)
;
}
public
List
getMacroLibraries
(
)
{
return
innerContext
.
getMacroLibraries
(
)
;
}
public
EventCartridge
attachEventCartridge
(
EventCartridge
ec
)
{
return
innerContext
.
attachEventCartridge
(
ec
)
;
}
public
EventCartridge
getEventCartridge
(
)
{
return
innerContext
.
getEventCartridge
(
)
;
}
public
void
setCurrentResource
(
Resource
r
)
{
innerContext
.
setCurrentResource
(
r
)
;
}
public
Resource
getCurrentResource
(
)
{
return
innerContext
.
getCurrentResource
(
)
;
}
}
