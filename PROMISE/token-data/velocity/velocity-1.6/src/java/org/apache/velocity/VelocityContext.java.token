package
org
.
apache
.
velocity
;
import
java
.
util
.
HashMap
;
import
java
.
util
.
Map
;
import
org
.
apache
.
velocity
.
context
.
AbstractContext
;
import
org
.
apache
.
velocity
.
context
.
Context
;
public
class
VelocityContext
extends
AbstractContext
implements
Cloneable
{
private
static
final
long
serialVersionUID
=
9033846851064645037L
;
private
Map
context
=
null
;
public
VelocityContext
(
)
{
this
(
null
,
null
)
;
}
public
VelocityContext
(
Map
context
)
{
this
(
context
,
null
)
;
}
public
VelocityContext
(
Context
innerContext
)
{
this
(
null
,
innerContext
)
;
}
public
VelocityContext
(
Map
context
,
Context
innerContext
)
{
super
(
innerContext
)
;
this
.
context
=
(
context
==
null
?
new
HashMap
(
)
:
context
)
;
}
public
Object
internalGet
(
String
key
)
{
return
context
.
get
(
key
)
;
}
public
Object
internalPut
(
String
key
,
Object
value
)
{
return
context
.
put
(
key
,
value
)
;
}
public
boolean
internalContainsKey
(
Object
key
)
{
return
context
.
containsKey
(
key
)
;
}
public
Object
[
]
internalGetKeys
(
)
{
return
context
.
keySet
(
)
.
toArray
(
)
;
}
public
Object
internalRemove
(
Object
key
)
{
return
context
.
remove
(
key
)
;
}
public
Object
clone
(
)
{
VelocityContext
clone
=
null
;
try
{
clone
=
(
VelocityContext
)
super
.
clone
(
)
;
clone
.
context
=
new
HashMap
(
context
)
;
}
catch
(
CloneNotSupportedException
ignored
)
{
}
return
clone
;
}
}
