package
org
.
apache
.
velocity
.
util
.
introspection
;
import
java
.
util
.
Iterator
;
public
abstract
class
AbstractChainableUberspector
extends
UberspectImpl
implements
ChainableUberspector
{
protected
Uberspect
inner
;
public
void
wrap
(
Uberspect
inner
)
{
this
.
inner
=
inner
;
}
public
void
init
(
)
throws
Exception
{
if
(
this
.
inner
!=
null
)
{
this
.
inner
.
init
(
)
;
}
}
public
Iterator
getIterator
(
Object
obj
,
Info
i
)
throws
Exception
{
return
(
this
.
inner
!=
null
)
?
this
.
inner
.
getIterator
(
obj
,
i
)
:
null
;
}
public
VelMethod
getMethod
(
Object
obj
,
String
methodName
,
Object
[
]
args
,
Info
i
)
throws
Exception
{
return
(
this
.
inner
!=
null
)
?
this
.
inner
.
getMethod
(
obj
,
methodName
,
args
,
i
)
:
null
;
}
public
VelPropertyGet
getPropertyGet
(
Object
obj
,
String
identifier
,
Info
i
)
throws
Exception
{
return
(
this
.
inner
!=
null
)
?
this
.
inner
.
getPropertyGet
(
obj
,
identifier
,
i
)
:
null
;
}
public
VelPropertySet
getPropertySet
(
Object
obj
,
String
identifier
,
Object
arg
,
Info
i
)
throws
Exception
{
return
(
this
.
inner
!=
null
)
?
this
.
inner
.
getPropertySet
(
obj
,
identifier
,
arg
,
i
)
:
null
;
}
}
