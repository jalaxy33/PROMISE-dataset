package
org
.
apache
.
velocity
.
util
.
introspection
;
import
java
.
util
.
Iterator
;
import
org
.
apache
.
velocity
.
runtime
.
RuntimeServices
;
import
org
.
apache
.
velocity
.
util
.
RuntimeServicesAware
;
public
class
LinkingUberspector
extends
AbstractChainableUberspector
{
private
Uberspect
leftUberspect
;
private
Uberspect
rightUberspect
;
public
LinkingUberspector
(
Uberspect
left
,
Uberspect
right
)
{
leftUberspect
=
left
;
rightUberspect
=
right
;
}
public
void
init
(
)
throws
Exception
{
leftUberspect
.
init
(
)
;
rightUberspect
.
init
(
)
;
}
public
Iterator
getIterator
(
Object
obj
,
Info
i
)
throws
Exception
{
Iterator
it
=
leftUberspect
.
getIterator
(
obj
,
i
)
;
return
it
!=
null
?
it
:
rightUberspect
.
getIterator
(
obj
,
i
)
;
}
public
VelMethod
getMethod
(
Object
obj
,
String
methodName
,
Object
[
]
args
,
Info
i
)
throws
Exception
{
VelMethod
method
=
leftUberspect
.
getMethod
(
obj
,
methodName
,
args
,
i
)
;
return
method
!=
null
?
method
:
rightUberspect
.
getMethod
(
obj
,
methodName
,
args
,
i
)
;
}
public
VelPropertyGet
getPropertyGet
(
Object
obj
,
String
identifier
,
Info
i
)
throws
Exception
{
VelPropertyGet
getter
=
leftUberspect
.
getPropertyGet
(
obj
,
identifier
,
i
)
;
return
getter
!=
null
?
getter
:
rightUberspect
.
getPropertyGet
(
obj
,
identifier
,
i
)
;
}
public
VelPropertySet
getPropertySet
(
Object
obj
,
String
identifier
,
Object
arg
,
Info
i
)
throws
Exception
{
VelPropertySet
setter
=
leftUberspect
.
getPropertySet
(
obj
,
identifier
,
arg
,
i
)
;
return
setter
!=
null
?
setter
:
rightUberspect
.
getPropertySet
(
obj
,
identifier
,
arg
,
i
)
;
}
}
