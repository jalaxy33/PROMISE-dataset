package
org
.
apache
.
velocity
.
runtime
.
log
;
import
java
.
io
.
StringWriter
;
import
java
.
io
.
PrintWriter
;
import
javax
.
servlet
.
ServletContext
;
import
org
.
apache
.
velocity
.
runtime
.
RuntimeServices
;
public
class
ServletLogChute
implements
LogChute
{
public
static
final
String
RUNTIME_LOG_LEVEL_KEY
=
"runtime.log.logsystem.servlet.level"
;
private
int
enabled
=
TRACE_ID
;
protected
ServletContext
servletContext
=
null
;
public
static
final
String
PREFIX
=
" Velocity "
;
public
ServletLogChute
(
)
{
}
public
void
init
(
RuntimeServices
rs
)
throws
Exception
{
Object
obj
=
rs
.
getApplicationAttribute
(
ServletContext
.
class
.
getName
(
)
)
;
if
(
obj
==
null
)
{
throw
new
UnsupportedOperationException
(
"Could not retrieve ServletContext from application attributes"
)
;
}
servletContext
=
(
ServletContext
)
obj
;
String
level
=
(
String
)
rs
.
getProperty
(
RUNTIME_LOG_LEVEL_KEY
)
;
if
(
level
!=
null
)
{
setEnabledLevel
(
toLevel
(
level
)
)
;
}
}
protected
int
toLevel
(
String
level
)
{
if
(
level
.
equalsIgnoreCase
(
"debug"
)
)
{
return
DEBUG_ID
;
}
else
if
(
level
.
equalsIgnoreCase
(
"info"
)
)
{
return
INFO_ID
;
}
else
if
(
level
.
equalsIgnoreCase
(
"warn"
)
)
{
return
WARN_ID
;
}
else
if
(
level
.
equalsIgnoreCase
(
"error"
)
)
{
return
ERROR_ID
;
}
else
{
return
TRACE_ID
;
}
}
public
void
setEnabledLevel
(
int
level
)
{
this
.
enabled
=
level
;
}
public
int
getEnabledLevel
(
)
{
return
this
.
enabled
;
}
public
boolean
isLevelEnabled
(
int
level
)
{
return
(
level
>=
this
.
enabled
)
;
}
public
void
log
(
int
level
,
String
message
)
{
if
(
!
isLevelEnabled
(
level
)
)
{
return
;
}
switch
(
level
)
{
case
WARN_ID
:
servletContext
.
log
(
PREFIX
+
WARN_PREFIX
+
message
)
;
break
;
case
INFO_ID
:
servletContext
.
log
(
PREFIX
+
INFO_PREFIX
+
message
)
;
break
;
case
DEBUG_ID
:
servletContext
.
log
(
PREFIX
+
DEBUG_PREFIX
+
message
)
;
break
;
case
TRACE_ID
:
servletContext
.
log
(
PREFIX
+
TRACE_PREFIX
+
message
)
;
break
;
case
ERROR_ID
:
servletContext
.
log
(
PREFIX
+
ERROR_PREFIX
+
message
)
;
break
;
default
:
servletContext
.
log
(
PREFIX
+
" : "
+
message
)
;
break
;
}
}
public
void
log
(
int
level
,
String
message
,
Throwable
t
)
{
if
(
!
isLevelEnabled
(
level
)
)
{
return
;
}
message
+=
" - "
+
t
.
toString
(
)
;
if
(
level
>=
ERROR_ID
)
{
StringWriter
sw
=
new
StringWriter
(
)
;
t
.
printStackTrace
(
new
PrintWriter
(
sw
)
)
;
message
+=
"\n"
+
sw
.
toString
(
)
;
}
log
(
level
,
message
)
;
}
}
