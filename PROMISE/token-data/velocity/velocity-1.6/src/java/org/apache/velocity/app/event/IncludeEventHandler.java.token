package
org
.
apache
.
velocity
.
app
.
event
;
import
org
.
apache
.
velocity
.
context
.
Context
;
import
org
.
apache
.
velocity
.
util
.
ContextAware
;
public
interface
IncludeEventHandler
extends
EventHandler
{
public
String
includeEvent
(
String
includeResourcePath
,
String
currentResourcePath
,
String
directiveName
)
;
static
class
IncludeEventExecutor
implements
EventHandlerMethodExecutor
{
private
Context
context
;
private
String
includeResourcePath
;
private
String
currentResourcePath
;
private
String
directiveName
;
private
boolean
executed
=
false
;
IncludeEventExecutor
(
Context
context
,
String
includeResourcePath
,
String
currentResourcePath
,
String
directiveName
)
{
this
.
context
=
context
;
this
.
includeResourcePath
=
includeResourcePath
;
this
.
currentResourcePath
=
currentResourcePath
;
this
.
directiveName
=
directiveName
;
}
public
void
execute
(
EventHandler
handler
)
{
IncludeEventHandler
eh
=
(
IncludeEventHandler
)
handler
;
if
(
eh
instanceof
ContextAware
)
(
(
ContextAware
)
eh
)
.
setContext
(
context
)
;
executed
=
true
;
includeResourcePath
=
(
(
IncludeEventHandler
)
handler
)
.
includeEvent
(
includeResourcePath
,
currentResourcePath
,
directiveName
)
;
}
public
Object
getReturnValue
(
)
{
return
includeResourcePath
;
}
public
boolean
isDone
(
)
{
return
executed
&&
(
includeResourcePath
==
null
)
;
}
}
}
