package
org
.
apache
.
velocity
.
runtime
.
resource
;
import
java
.
io
.
StringWriter
;
import
java
.
io
.
BufferedReader
;
import
java
.
io
.
InputStreamReader
;
import
org
.
apache
.
velocity
.
exception
.
ResourceNotFoundException
;
import
org
.
apache
.
velocity
.
exception
.
VelocityException
;
public
class
ContentResource
extends
Resource
{
public
ContentResource
(
)
{
super
(
)
;
setType
(
ResourceManager
.
RESOURCE_CONTENT
)
;
}
public
boolean
process
(
)
throws
ResourceNotFoundException
{
BufferedReader
reader
=
null
;
try
{
StringWriter
sw
=
new
StringWriter
(
)
;
reader
=
new
BufferedReader
(
new
InputStreamReader
(
resourceLoader
.
getResourceStream
(
name
)
,
encoding
)
)
;
char
buf
[
]
=
new
char
[
1024
]
;
int
len
=
0
;
while
(
(
len
=
reader
.
read
(
buf
,
0
,
1024
)
)
!=
-
1
)
sw
.
write
(
buf
,
0
,
len
)
;
setData
(
sw
.
toString
(
)
)
;
return
true
;
}
catch
(
ResourceNotFoundException
e
)
{
throw
e
;
}
catch
(
Exception
e
)
{
String
msg
=
"Cannot process content resource"
;
rsvc
.
getLog
(
)
.
error
(
msg
,
e
)
;
throw
new
VelocityException
(
msg
,
e
)
;
}
finally
{
if
(
reader
!=
null
)
{
try
{
reader
.
close
(
)
;
}
catch
(
Exception
ignored
)
{
}
}
}
}
}
