package
org
.
apache
.
velocity
.
runtime
.
log
;
import
org
.
apache
.
velocity
.
runtime
.
RuntimeLogger
;
public
class
RuntimeLoggerLog
extends
Log
{
private
RuntimeLogger
rlog
;
public
RuntimeLoggerLog
(
RuntimeLogger
rlog
)
{
if
(
rlog
==
null
)
{
throw
new
NullPointerException
(
"RuntimeLogger cannot be null!"
)
;
}
this
.
rlog
=
rlog
;
}
protected
void
setLogChute
(
LogChute
newLogChute
)
{
throw
new
UnsupportedOperationException
(
"RuntimeLoggerLog does not support this method."
)
;
}
protected
LogChute
getLogChute
(
)
{
throw
new
UnsupportedOperationException
(
"RuntimeLoggerLog does not support this method."
)
;
}
protected
void
setShowStackTraces
(
boolean
showStacks
)
{
throw
new
UnsupportedOperationException
(
"RuntimeLoggerLog does not support this method."
)
;
}
public
boolean
getShowStackTraces
(
)
{
throw
new
UnsupportedOperationException
(
"RuntimeLoggerLog does not support this method."
)
;
}
public
boolean
isTraceEnabled
(
)
{
return
true
;
}
public
void
trace
(
Object
message
)
{
debug
(
message
)
;
}
public
void
trace
(
Object
message
,
Throwable
t
)
{
debug
(
message
,
t
)
;
}
public
boolean
isDebugEnabled
(
)
{
return
true
;
}
public
void
debug
(
Object
message
)
{
rlog
.
debug
(
message
)
;
}
public
void
debug
(
Object
message
,
Throwable
t
)
{
rlog
.
debug
(
message
)
;
rlog
.
debug
(
t
)
;
}
public
boolean
isInfoEnabled
(
)
{
return
true
;
}
public
void
info
(
Object
message
)
{
rlog
.
info
(
message
)
;
}
public
void
info
(
Object
message
,
Throwable
t
)
{
rlog
.
info
(
message
)
;
rlog
.
info
(
t
)
;
}
public
boolean
isWarnEnabled
(
)
{
return
true
;
}
public
void
warn
(
Object
message
)
{
rlog
.
warn
(
message
)
;
}
public
void
warn
(
Object
message
,
Throwable
t
)
{
rlog
.
warn
(
message
)
;
rlog
.
warn
(
t
)
;
}
public
boolean
isErrorEnabled
(
)
{
return
true
;
}
public
void
error
(
Object
message
)
{
rlog
.
error
(
message
)
;
}
public
void
error
(
Object
message
,
Throwable
t
)
{
rlog
.
error
(
message
)
;
rlog
.
error
(
t
)
;
}
}
