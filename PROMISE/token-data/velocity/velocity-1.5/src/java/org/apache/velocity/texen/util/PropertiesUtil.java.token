package
org
.
apache
.
velocity
.
texen
.
util
;
import
java
.
io
.
FileInputStream
;
import
java
.
io
.
InputStream
;
import
java
.
util
.
Properties
;
import
java
.
util
.
StringTokenizer
;
import
org
.
apache
.
velocity
.
texen
.
Generator
;
public
class
PropertiesUtil
{
public
Properties
load
(
final
String
propertiesFile
)
{
Properties
properties
=
null
;
String
templatePath
=
Generator
.
getInstance
(
)
.
getTemplatePath
(
)
;
try
{
if
(
templatePath
!=
null
)
{
properties
=
loadFromTemplatePath
(
propertiesFile
)
;
}
else
{
properties
=
loadFromClassPath
(
propertiesFile
)
;
}
}
catch
(
RuntimeException
e
)
{
throw
e
;
}
catch
(
Exception
e
)
{
throw
new
RuntimeException
(
"Could not load properties: "
+
e
.
getMessage
(
)
)
;
}
return
properties
;
}
protected
Properties
loadFromTemplatePath
(
final
String
propertiesFile
)
throws
Exception
{
Properties
properties
=
new
Properties
(
)
;
String
templatePath
=
Generator
.
getInstance
(
)
.
getTemplatePath
(
)
;
StringTokenizer
st
=
new
StringTokenizer
(
templatePath
,
","
)
;
while
(
st
.
hasMoreTokens
(
)
)
{
String
templateDir
=
st
.
nextToken
(
)
;
InputStream
stream
=
null
;
try
{
String
fullPath
=
propertiesFile
;
if
(
!
fullPath
.
startsWith
(
templateDir
)
)
{
fullPath
=
templateDir
+
"/"
+
propertiesFile
;
}
stream
=
new
FileInputStream
(
fullPath
)
;
properties
.
load
(
stream
)
;
break
;
}
finally
{
if
(
stream
!=
null
)
{
stream
.
close
(
)
;
}
}
}
return
properties
;
}
protected
Properties
loadFromClassPath
(
final
String
propertiesName
)
throws
Exception
{
Properties
properties
=
new
Properties
(
)
;
ClassLoader
classLoader
=
this
.
getClass
(
)
.
getClassLoader
(
)
;
InputStream
inputStream
=
null
;
try
{
String
propertiesFile
=
propertiesName
.
startsWith
(
"$generator"
)
?
propertiesName
.
substring
(
"$generator.templatePath/"
.
length
(
)
)
:
propertiesName
;
inputStream
=
classLoader
.
getResourceAsStream
(
propertiesFile
)
;
properties
.
load
(
inputStream
)
;
}
finally
{
if
(
inputStream
!=
null
)
{
inputStream
.
close
(
)
;
}
}
return
properties
;
}
}
