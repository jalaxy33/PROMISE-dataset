package
org
.
apache
.
velocity
.
runtime
.
parser
.
node
;
import
java
.
util
.
Map
;
import
org
.
apache
.
velocity
.
runtime
.
log
.
Log
;
public
class
MapSetExecutor
extends
SetExecutor
{
private
final
String
property
;
public
MapSetExecutor
(
final
Log
log
,
final
Class
clazz
,
final
String
property
)
{
this
.
log
=
log
;
this
.
property
=
property
;
discover
(
clazz
)
;
}
protected
void
discover
(
final
Class
clazz
)
{
Class
[
]
interfaces
=
clazz
.
getInterfaces
(
)
;
for
(
int
i
=
0
;
i
<
interfaces
.
length
;
i
++
)
{
if
(
interfaces
[
i
]
.
equals
(
Map
.
class
)
)
{
try
{
if
(
property
!=
null
)
{
setMethod
(
Map
.
class
.
getMethod
(
"put"
,
new
Class
[
]
{
Object
.
class
,
Object
.
class
}
)
)
;
}
}
catch
(
RuntimeException
e
)
{
throw
e
;
}
catch
(
Exception
e
)
{
log
.
error
(
"While looking for get('"
+
property
+
"') method:"
,
e
)
;
}
break
;
}
}
}
public
Object
execute
(
final
Object
o
,
final
Object
arg
)
{
return
(
(
Map
)
o
)
.
put
(
property
,
arg
)
;
}
}
