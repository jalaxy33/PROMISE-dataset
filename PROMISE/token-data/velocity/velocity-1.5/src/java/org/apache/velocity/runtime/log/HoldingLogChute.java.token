package
org
.
apache
.
velocity
.
runtime
.
log
;
import
java
.
util
.
Vector
;
import
java
.
util
.
Iterator
;
import
org
.
apache
.
velocity
.
runtime
.
RuntimeServices
;
class
HoldingLogChute
implements
LogChute
{
private
Vector
pendingMessages
=
new
Vector
(
)
;
public
void
init
(
RuntimeServices
rs
)
throws
Exception
{
}
public
void
log
(
int
level
,
String
message
)
{
synchronized
(
this
)
{
Object
[
]
data
=
new
Object
[
2
]
;
data
[
0
]
=
new
Integer
(
level
)
;
data
[
1
]
=
message
;
pendingMessages
.
addElement
(
data
)
;
}
}
public
void
log
(
int
level
,
String
message
,
Throwable
t
)
{
synchronized
(
this
)
{
Object
[
]
data
=
new
Object
[
3
]
;
data
[
0
]
=
new
Integer
(
level
)
;
data
[
1
]
=
message
;
data
[
2
]
=
t
;
pendingMessages
.
addElement
(
data
)
;
}
}
public
boolean
isLevelEnabled
(
int
level
)
{
return
true
;
}
public
void
transferTo
(
LogChute
newChute
)
{
synchronized
(
this
)
{
if
(
!
pendingMessages
.
isEmpty
(
)
)
{
for
(
Iterator
i
=
pendingMessages
.
iterator
(
)
;
i
.
hasNext
(
)
;
)
{
Object
[
]
data
=
(
Object
[
]
)
i
.
next
(
)
;
int
level
=
(
(
Integer
)
data
[
0
]
)
.
intValue
(
)
;
String
message
=
(
String
)
data
[
1
]
;
if
(
data
.
length
==
2
)
{
newChute
.
log
(
level
,
message
)
;
}
else
{
newChute
.
log
(
level
,
message
,
(
Throwable
)
data
[
2
]
)
;
}
}
}
}
}
}
