package
org
.
apache
.
velocity
.
context
;
import
java
.
util
.
HashMap
;
import
java
.
util
.
Stack
;
import
org
.
apache
.
velocity
.
app
.
event
.
EventCartridge
;
import
org
.
apache
.
velocity
.
runtime
.
resource
.
Resource
;
import
org
.
apache
.
velocity
.
util
.
introspection
.
IntrospectionCacheData
;
class
InternalContextBase
implements
InternalHousekeepingContext
,
InternalEventContext
{
private
static
final
long
serialVersionUID
=
-
245905472770843470L
;
private
HashMap
introspectionCache
=
new
HashMap
(
33
)
;
private
Stack
templateNameStack
=
new
Stack
(
)
;
private
EventCartridge
eventCartridge
=
null
;
private
Resource
currentResource
=
null
;
private
boolean
allowRendering
=
true
;
public
void
pushCurrentTemplateName
(
String
s
)
{
templateNameStack
.
push
(
s
)
;
}
public
void
popCurrentTemplateName
(
)
{
templateNameStack
.
pop
(
)
;
}
public
String
getCurrentTemplateName
(
)
{
if
(
templateNameStack
.
empty
(
)
)
return
"<undef>"
;
else
return
(
String
)
templateNameStack
.
peek
(
)
;
}
public
Object
[
]
getTemplateNameStack
(
)
{
return
templateNameStack
.
toArray
(
)
;
}
public
IntrospectionCacheData
icacheGet
(
Object
key
)
{
return
(
IntrospectionCacheData
)
introspectionCache
.
get
(
key
)
;
}
public
void
icachePut
(
Object
key
,
IntrospectionCacheData
o
)
{
introspectionCache
.
put
(
key
,
o
)
;
}
public
void
setCurrentResource
(
Resource
r
)
{
currentResource
=
r
;
}
public
Resource
getCurrentResource
(
)
{
return
currentResource
;
}
public
boolean
getAllowRendering
(
)
{
return
allowRendering
;
}
public
void
setAllowRendering
(
boolean
v
)
{
allowRendering
=
v
;
}
public
EventCartridge
attachEventCartridge
(
EventCartridge
ec
)
{
EventCartridge
temp
=
eventCartridge
;
eventCartridge
=
ec
;
return
temp
;
}
public
EventCartridge
getEventCartridge
(
)
{
return
eventCartridge
;
}
}
