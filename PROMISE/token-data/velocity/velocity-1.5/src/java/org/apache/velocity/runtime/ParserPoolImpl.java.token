package
org
.
apache
.
velocity
.
runtime
;
import
org
.
apache
.
velocity
.
runtime
.
parser
.
Parser
;
import
org
.
apache
.
velocity
.
util
.
SimplePool
;
public
class
ParserPoolImpl
implements
ParserPool
{
RuntimeServices
rsvc
=
null
;
SimplePool
pool
=
null
;
int
max
=
RuntimeConstants
.
NUMBER_OF_PARSERS
;
public
void
initialize
(
RuntimeServices
rsvc
)
{
this
.
rsvc
=
rsvc
;
max
=
rsvc
.
getInt
(
RuntimeConstants
.
PARSER_POOL_SIZE
,
RuntimeConstants
.
NUMBER_OF_PARSERS
)
;
pool
=
new
SimplePool
(
max
)
;
for
(
int
i
=
0
;
i
<
max
;
i
++
)
{
pool
.
put
(
rsvc
.
createNewParser
(
)
)
;
}
if
(
rsvc
.
getLog
(
)
.
isDebugEnabled
(
)
)
{
rsvc
.
getLog
(
)
.
debug
(
"Created '"
+
max
+
"' parsers."
)
;
}
}
public
Parser
get
(
)
{
Parser
parser
=
(
Parser
)
pool
.
get
(
)
;
if
(
parser
==
null
)
{
rsvc
.
getLog
(
)
.
debug
(
"Created new "
+
"parser (pool exhausted).  Consider "
+
"increasing pool size."
)
;
parser
=
rsvc
.
createNewParser
(
)
;
}
return
parser
;
}
public
void
put
(
Parser
parser
)
{
pool
.
put
(
parser
)
;
}
}
