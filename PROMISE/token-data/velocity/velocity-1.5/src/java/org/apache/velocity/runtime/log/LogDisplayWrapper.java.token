package
org
.
apache
.
velocity
.
runtime
.
log
;
public
class
LogDisplayWrapper
extends
Log
{
private
final
String
prefix
;
private
final
boolean
outputMessages
;
private
final
Log
log
;
public
LogDisplayWrapper
(
final
Log
log
,
final
String
prefix
,
final
boolean
outputMessages
)
{
super
(
log
.
getLogChute
(
)
)
;
this
.
log
=
log
;
this
.
prefix
=
prefix
;
this
.
outputMessages
=
outputMessages
;
}
protected
LogChute
getLogChute
(
)
{
return
log
.
getLogChute
(
)
;
}
protected
void
log
(
final
int
level
,
final
Object
message
)
{
log
(
outputMessages
,
level
,
message
)
;
}
protected
void
log
(
final
boolean
doLogging
,
final
int
level
,
final
Object
message
)
{
if
(
doLogging
)
{
getLogChute
(
)
.
log
(
level
,
prefix
+
String
.
valueOf
(
message
)
)
;
}
}
protected
void
log
(
final
int
level
,
final
Object
message
,
final
Throwable
t
)
{
log
(
outputMessages
,
level
,
message
)
;
}
protected
void
log
(
final
boolean
doLogging
,
final
int
level
,
final
Object
message
,
final
Throwable
t
)
{
if
(
doLogging
)
{
getLogChute
(
)
.
log
(
level
,
prefix
+
String
.
valueOf
(
message
)
,
t
)
;
}
}
public
void
trace
(
final
boolean
doLogging
,
final
Object
message
)
{
log
(
doLogging
,
LogChute
.
TRACE_ID
,
message
)
;
}
public
void
trace
(
final
boolean
doLogging
,
final
Object
message
,
final
Throwable
t
)
{
log
(
doLogging
,
LogChute
.
TRACE_ID
,
message
,
t
)
;
}
public
void
debug
(
final
boolean
doLogging
,
final
Object
message
)
{
log
(
doLogging
,
LogChute
.
DEBUG_ID
,
message
)
;
}
public
void
debug
(
final
boolean
doLogging
,
final
Object
message
,
final
Throwable
t
)
{
log
(
doLogging
,
LogChute
.
DEBUG_ID
,
message
,
t
)
;
}
public
void
info
(
final
boolean
doLogging
,
final
Object
message
)
{
log
(
doLogging
,
LogChute
.
INFO_ID
,
message
)
;
}
public
void
info
(
final
boolean
doLogging
,
final
Object
message
,
final
Throwable
t
)
{
log
(
doLogging
,
LogChute
.
INFO_ID
,
message
,
t
)
;
}
public
void
warn
(
final
boolean
doLogging
,
final
Object
message
)
{
log
(
doLogging
,
LogChute
.
WARN_ID
,
message
)
;
}
public
void
warn
(
final
boolean
doLogging
,
final
Object
message
,
final
Throwable
t
)
{
log
(
doLogging
,
LogChute
.
WARN_ID
,
message
,
t
)
;
}
public
void
error
(
final
boolean
doLogging
,
final
Object
message
)
{
log
(
doLogging
,
LogChute
.
ERROR_ID
,
message
)
;
}
public
void
error
(
final
boolean
doLogging
,
final
Object
message
,
final
Throwable
t
)
{
log
(
doLogging
,
LogChute
.
ERROR_ID
,
message
,
t
)
;
}
}
