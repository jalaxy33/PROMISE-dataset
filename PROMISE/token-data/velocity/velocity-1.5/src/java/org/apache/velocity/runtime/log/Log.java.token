package
org
.
apache
.
velocity
.
runtime
.
log
;
public
class
Log
{
private
LogChute
chute
;
public
Log
(
)
{
setLogChute
(
new
HoldingLogChute
(
)
)
;
}
public
Log
(
final
LogChute
chute
)
{
setLogChute
(
chute
)
;
}
protected
void
setLogChute
(
final
LogChute
chute
)
{
if
(
chute
==
null
)
{
throw
new
NullPointerException
(
"The LogChute cannot be set to null!"
)
;
}
this
.
chute
=
chute
;
}
protected
LogChute
getLogChute
(
)
{
return
this
.
chute
;
}
protected
void
log
(
int
level
,
Object
message
)
{
getLogChute
(
)
.
log
(
level
,
String
.
valueOf
(
message
)
)
;
}
protected
void
log
(
int
level
,
Object
message
,
Throwable
t
)
{
getLogChute
(
)
.
log
(
level
,
String
.
valueOf
(
message
)
,
t
)
;
}
public
boolean
isTraceEnabled
(
)
{
return
getLogChute
(
)
.
isLevelEnabled
(
LogChute
.
TRACE_ID
)
;
}
public
void
trace
(
Object
message
)
{
log
(
LogChute
.
TRACE_ID
,
message
)
;
}
public
void
trace
(
Object
message
,
Throwable
t
)
{
log
(
LogChute
.
TRACE_ID
,
message
,
t
)
;
}
public
boolean
isDebugEnabled
(
)
{
return
getLogChute
(
)
.
isLevelEnabled
(
LogChute
.
DEBUG_ID
)
;
}
public
void
debug
(
Object
message
)
{
log
(
LogChute
.
DEBUG_ID
,
message
)
;
}
public
void
debug
(
Object
message
,
Throwable
t
)
{
log
(
LogChute
.
DEBUG_ID
,
message
,
t
)
;
}
public
boolean
isInfoEnabled
(
)
{
return
getLogChute
(
)
.
isLevelEnabled
(
LogChute
.
INFO_ID
)
;
}
public
void
info
(
Object
message
)
{
log
(
LogChute
.
INFO_ID
,
message
)
;
}
public
void
info
(
Object
message
,
Throwable
t
)
{
log
(
LogChute
.
INFO_ID
,
message
,
t
)
;
}
public
boolean
isWarnEnabled
(
)
{
return
getLogChute
(
)
.
isLevelEnabled
(
LogChute
.
WARN_ID
)
;
}
public
void
warn
(
Object
message
)
{
log
(
LogChute
.
WARN_ID
,
message
)
;
}
public
void
warn
(
Object
message
,
Throwable
t
)
{
log
(
LogChute
.
WARN_ID
,
message
,
t
)
;
}
public
boolean
isErrorEnabled
(
)
{
return
getLogChute
(
)
.
isLevelEnabled
(
LogChute
.
ERROR_ID
)
;
}
public
void
error
(
Object
message
)
{
log
(
LogChute
.
ERROR_ID
,
message
)
;
}
public
void
error
(
Object
message
,
Throwable
t
)
{
log
(
LogChute
.
ERROR_ID
,
message
,
t
)
;
}
}
