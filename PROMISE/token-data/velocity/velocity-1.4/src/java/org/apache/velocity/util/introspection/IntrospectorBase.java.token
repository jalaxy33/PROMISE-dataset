package
org
.
apache
.
velocity
.
util
.
introspection
;
import
java
.
util
.
Map
;
import
java
.
util
.
Set
;
import
java
.
util
.
HashMap
;
import
java
.
util
.
HashSet
;
import
java
.
lang
.
reflect
.
Method
;
public
class
IntrospectorBase
{
protected
Map
classMethodMaps
=
new
HashMap
(
)
;
protected
Set
cachedClassNames
=
new
HashSet
(
)
;
public
Method
getMethod
(
Class
c
,
String
name
,
Object
[
]
params
)
throws
Exception
{
if
(
c
==
null
)
{
throw
new
Exception
(
"Introspector.getMethod(): Class method key was null: "
+
name
)
;
}
ClassMap
classMap
=
null
;
synchronized
(
classMethodMaps
)
{
classMap
=
(
ClassMap
)
classMethodMaps
.
get
(
c
)
;
if
(
classMap
==
null
)
{
if
(
cachedClassNames
.
contains
(
c
.
getName
(
)
)
)
{
clearCache
(
)
;
}
classMap
=
createClassMap
(
c
)
;
}
}
return
classMap
.
findMethod
(
name
,
params
)
;
}
protected
ClassMap
createClassMap
(
Class
c
)
{
ClassMap
classMap
=
new
ClassMap
(
c
)
;
classMethodMaps
.
put
(
c
,
classMap
)
;
cachedClassNames
.
add
(
c
.
getName
(
)
)
;
return
classMap
;
}
protected
void
clearCache
(
)
{
classMethodMaps
.
clear
(
)
;
cachedClassNames
=
new
HashSet
(
)
;
}
}
