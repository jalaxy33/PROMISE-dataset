package
org
.
apache
.
velocity
.
test
;
import
java
.
io
.
BufferedWriter
;
import
java
.
io
.
FileOutputStream
;
import
java
.
io
.
OutputStreamWriter
;
import
java
.
io
.
StringWriter
;
import
java
.
util
.
Vector
;
import
org
.
apache
.
velocity
.
VelocityContext
;
import
org
.
apache
.
velocity
.
Template
;
import
org
.
apache
.
velocity
.
app
.
Velocity
;
import
org
.
apache
.
velocity
.
test
.
provider
.
TestProvider
;
import
org
.
apache
.
velocity
.
util
.
StringUtils
;
import
org
.
apache
.
velocity
.
app
.
Velocity
;
import
junit
.
framework
.
TestCase
;
public
class
VelocimacroTestCase
extends
TestCase
{
private
String
template1
=
"#macro(foo $a)$a#end #macro(bar $b)#foo($b)#end #foreach($i in [1..3])#bar($i)#end"
;
private
String
result1
=
"  123"
;
public
VelocimacroTestCase
(
)
{
super
(
"VelocimacroTestCase"
)
;
try
{
Velocity
.
setProperty
(
Velocity
.
VM_PERM_INLINE_LOCAL
,
Boolean
.
TRUE
)
;
Velocity
.
init
(
)
;
}
catch
(
Exception
e
)
{
System
.
err
.
println
(
"Cannot setup VelocimacroTestCase!"
)
;
System
.
exit
(
1
)
;
}
}
public
static
junit
.
framework
.
Test
suite
(
)
{
return
new
VelocimacroTestCase
(
)
;
}
public
void
runTest
(
)
{
VelocityContext
context
=
new
VelocityContext
(
)
;
try
{
StringWriter
writer
=
new
StringWriter
(
)
;
Velocity
.
evaluate
(
context
,
writer
,
"vm_chain1"
,
template1
)
;
String
out
=
writer
.
toString
(
)
;
if
(
!
result1
.
equals
(
out
)
)
{
fail
(
"output incorrect."
)
;
}
}
catch
(
Exception
e
)
{
fail
(
e
.
getMessage
(
)
)
;
}
}
}
