package
org
.
apache
.
velocity
.
runtime
.
log
;
import
java
.
util
.
List
;
import
java
.
util
.
ArrayList
;
import
java
.
util
.
Iterator
;
import
org
.
apache
.
velocity
.
runtime
.
RuntimeServices
;
import
org
.
apache
.
velocity
.
runtime
.
RuntimeConstants
;
public
class
LogManager
{
public
static
LogSystem
createLogSystem
(
RuntimeServices
rsvc
)
throws
Exception
{
Object
o
=
rsvc
.
getProperty
(
RuntimeConstants
.
RUNTIME_LOG_LOGSYSTEM
)
;
if
(
o
!=
null
&&
o
instanceof
LogSystem
)
{
(
(
LogSystem
)
o
)
.
init
(
rsvc
)
;
return
(
LogSystem
)
o
;
}
List
classes
=
null
;
Object
obj
=
rsvc
.
getProperty
(
RuntimeConstants
.
RUNTIME_LOG_LOGSYSTEM_CLASS
)
;
if
(
obj
instanceof
List
)
{
classes
=
(
List
)
obj
;
}
else
if
(
obj
instanceof
String
)
{
classes
=
new
ArrayList
(
)
;
classes
.
add
(
obj
)
;
}
for
(
Iterator
ii
=
classes
.
iterator
(
)
;
ii
.
hasNext
(
)
;
)
{
String
claz
=
(
String
)
ii
.
next
(
)
;
if
(
claz
!=
null
&&
claz
.
length
(
)
>
0
)
{
rsvc
.
info
(
"Trying to use logger class "
+
claz
)
;
try
{
o
=
Class
.
forName
(
claz
)
.
newInstance
(
)
;
if
(
o
instanceof
LogSystem
)
{
(
(
LogSystem
)
o
)
.
init
(
rsvc
)
;
rsvc
.
info
(
"Using logger class "
+
claz
)
;
return
(
LogSystem
)
o
;
}
else
{
rsvc
.
error
(
"The specifid logger class "
+
claz
+
" isn't a valid LogSystem"
)
;
}
}
catch
(
NoClassDefFoundError
ncdfe
)
{
rsvc
.
debug
(
"Couldn't find class "
+
claz
+
" or necessary supporting classes in "
+
"classpath. Exception : "
+
ncdfe
)
;
}
}
}
LogSystem
als
=
null
;
try
{
als
=
new
AvalonLogSystem
(
)
;
als
.
init
(
rsvc
)
;
}
catch
(
NoClassDefFoundError
ncdfe
)
{
String
errstr
=
"PANIC : Velocity cannot find any of the"
+
" specified or default logging systems in the classpath,"
+
" or the classpath doesn't contain the necessary classes"
+
" to support them."
+
" Please consult the documentation regarding logging."
+
" Exception : "
+
ncdfe
;
System
.
out
.
println
(
errstr
)
;
System
.
err
.
println
(
errstr
)
;
throw
ncdfe
;
}
rsvc
.
info
(
"Using AvalonLogSystem as logger of final resort."
)
;
return
als
;
}
}
