package
org
.
apache
.
velocity
.
runtime
.
log
;
import
java
.
util
.
Vector
;
import
java
.
util
.
Enumeration
;
import
org
.
apache
.
velocity
.
runtime
.
RuntimeServices
;
public
class
PrimordialLogSystem
implements
LogSystem
{
private
Vector
pendingMessages
=
new
Vector
(
)
;
private
RuntimeServices
rsvc
=
null
;
public
PrimordialLogSystem
(
)
{
}
public
void
init
(
RuntimeServices
rs
)
throws
Exception
{
rsvc
=
rs
;
}
public
void
logVelocityMessage
(
int
level
,
String
message
)
{
synchronized
(
this
)
{
Object
[
]
data
=
new
Object
[
2
]
;
data
[
0
]
=
new
Integer
(
level
)
;
data
[
1
]
=
message
;
pendingMessages
.
addElement
(
data
)
;
}
}
public
void
dumpLogMessages
(
LogSystem
newLogger
)
{
synchronized
(
this
)
{
if
(
!
pendingMessages
.
isEmpty
(
)
)
{
for
(
Enumeration
e
=
pendingMessages
.
elements
(
)
;
e
.
hasMoreElements
(
)
;
)
{
Object
[
]
data
=
(
Object
[
]
)
e
.
nextElement
(
)
;
newLogger
.
logVelocityMessage
(
(
(
Integer
)
data
[
0
]
)
.
intValue
(
)
,
(
String
)
data
[
1
]
)
;
}
}
}
}
}
