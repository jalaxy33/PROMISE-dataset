package
org
.
apache
.
velocity
.
runtime
.
visitor
;
import
org
.
apache
.
velocity
.
runtime
.
parser
.
Token
;
import
org
.
apache
.
velocity
.
runtime
.
parser
.
node
.
*
;
public
class
NodeViewMode
extends
BaseVisitor
{
private
int
indent
=
0
;
private
boolean
showTokens
=
true
;
private
String
indentString
(
)
{
StringBuffer
sb
=
new
StringBuffer
(
)
;
for
(
int
i
=
0
;
i
<
indent
;
++
i
)
{
sb
.
append
(
"  "
)
;
}
return
sb
.
toString
(
)
;
}
private
Object
showNode
(
Node
node
,
Object
data
)
{
String
tokens
=
""
;
String
special
=
""
;
Token
t
;
if
(
showTokens
)
{
t
=
node
.
getFirstToken
(
)
;
if
(
t
.
specialToken
!=
null
&&
!
t
.
specialToken
.
image
.
startsWith
(
"##"
)
)
special
=
t
.
specialToken
.
image
;
tokens
=
" -> "
+
special
+
t
.
image
;
}
System
.
out
.
println
(
indentString
(
)
+
node
+
tokens
)
;
++
indent
;
data
=
node
.
childrenAccept
(
this
,
data
)
;
--
indent
;
return
data
;
}
public
Object
visit
(
SimpleNode
node
,
Object
data
)
{
return
showNode
(
node
,
data
)
;
}
public
Object
visit
(
ASTprocess
node
,
Object
data
)
{
return
showNode
(
node
,
data
)
;
}
public
Object
visit
(
ASTExpression
node
,
Object
data
)
{
return
showNode
(
node
,
data
)
;
}
public
Object
visit
(
ASTAssignment
node
,
Object
data
)
{
return
showNode
(
node
,
data
)
;
}
public
Object
visit
(
ASTOrNode
node
,
Object
data
)
{
return
showNode
(
node
,
data
)
;
}
public
Object
visit
(
ASTAndNode
node
,
Object
data
)
{
return
showNode
(
node
,
data
)
;
}
public
Object
visit
(
ASTEQNode
node
,
Object
data
)
{
return
showNode
(
node
,
data
)
;
}
public
Object
visit
(
ASTNENode
node
,
Object
data
)
{
return
showNode
(
node
,
data
)
;
}
public
Object
visit
(
ASTLTNode
node
,
Object
data
)
{
return
showNode
(
node
,
data
)
;
}
public
Object
visit
(
ASTGTNode
node
,
Object
data
)
{
return
showNode
(
node
,
data
)
;
}
public
Object
visit
(
ASTLENode
node
,
Object
data
)
{
return
showNode
(
node
,
data
)
;
}
public
Object
visit
(
ASTGENode
node
,
Object
data
)
{
return
showNode
(
node
,
data
)
;
}
public
Object
visit
(
ASTAddNode
node
,
Object
data
)
{
return
showNode
(
node
,
data
)
;
}
public
Object
visit
(
ASTSubtractNode
node
,
Object
data
)
{
return
showNode
(
node
,
data
)
;
}
public
Object
visit
(
ASTMulNode
node
,
Object
data
)
{
return
showNode
(
node
,
data
)
;
}
public
Object
visit
(
ASTDivNode
node
,
Object
data
)
{
return
showNode
(
node
,
data
)
;
}
public
Object
visit
(
ASTModNode
node
,
Object
data
)
{
return
showNode
(
node
,
data
)
;
}
public
Object
visit
(
ASTNotNode
node
,
Object
data
)
{
return
showNode
(
node
,
data
)
;
}
public
Object
visit
(
ASTNumberLiteral
node
,
Object
data
)
{
return
showNode
(
node
,
data
)
;
}
public
Object
visit
(
ASTStringLiteral
node
,
Object
data
)
{
return
showNode
(
node
,
data
)
;
}
public
Object
visit
(
ASTIdentifier
node
,
Object
data
)
{
return
showNode
(
node
,
data
)
;
}
public
Object
visit
(
ASTMethod
node
,
Object
data
)
{
return
showNode
(
node
,
data
)
;
}
public
Object
visit
(
ASTReference
node
,
Object
data
)
{
return
showNode
(
node
,
data
)
;
}
public
Object
visit
(
ASTTrue
node
,
Object
data
)
{
return
showNode
(
node
,
data
)
;
}
public
Object
visit
(
ASTFalse
node
,
Object
data
)
{
return
showNode
(
node
,
data
)
;
}
public
Object
visit
(
ASTBlock
node
,
Object
data
)
{
return
showNode
(
node
,
data
)
;
}
public
Object
visit
(
ASTText
node
,
Object
data
)
{
return
showNode
(
node
,
data
)
;
}
public
Object
visit
(
ASTIfStatement
node
,
Object
data
)
{
return
showNode
(
node
,
data
)
;
}
public
Object
visit
(
ASTElseStatement
node
,
Object
data
)
{
return
showNode
(
node
,
data
)
;
}
public
Object
visit
(
ASTElseIfStatement
node
,
Object
data
)
{
return
showNode
(
node
,
data
)
;
}
public
Object
visit
(
ASTObjectArray
node
,
Object
data
)
{
return
showNode
(
node
,
data
)
;
}
public
Object
visit
(
ASTDirective
node
,
Object
data
)
{
return
showNode
(
node
,
data
)
;
}
public
Object
visit
(
ASTWord
node
,
Object
data
)
{
return
showNode
(
node
,
data
)
;
}
public
Object
visit
(
ASTSetDirective
node
,
Object
data
)
{
return
showNode
(
node
,
data
)
;
}
}
