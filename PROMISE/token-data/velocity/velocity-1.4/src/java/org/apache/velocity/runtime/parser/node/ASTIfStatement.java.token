package
org
.
apache
.
velocity
.
runtime
.
parser
.
node
;
import
java
.
io
.
Writer
;
import
java
.
io
.
IOException
;
import
org
.
apache
.
velocity
.
context
.
InternalContextAdapter
;
import
org
.
apache
.
velocity
.
runtime
.
parser
.
*
;
import
org
.
apache
.
velocity
.
exception
.
MethodInvocationException
;
import
org
.
apache
.
velocity
.
exception
.
ParseErrorException
;
import
org
.
apache
.
velocity
.
exception
.
ResourceNotFoundException
;
public
class
ASTIfStatement
extends
SimpleNode
{
public
ASTIfStatement
(
int
id
)
{
super
(
id
)
;
}
public
ASTIfStatement
(
Parser
p
,
int
id
)
{
super
(
p
,
id
)
;
}
public
Object
jjtAccept
(
ParserVisitor
visitor
,
Object
data
)
{
return
visitor
.
visit
(
this
,
data
)
;
}
public
boolean
render
(
InternalContextAdapter
context
,
Writer
writer
)
throws
IOException
,
MethodInvocationException
,
ResourceNotFoundException
,
ParseErrorException
{
if
(
jjtGetChild
(
0
)
.
evaluate
(
context
)
)
{
jjtGetChild
(
1
)
.
render
(
context
,
writer
)
;
return
true
;
}
int
totalNodes
=
jjtGetNumChildren
(
)
;
for
(
int
i
=
2
;
i
<
totalNodes
;
i
++
)
{
if
(
jjtGetChild
(
i
)
.
evaluate
(
context
)
)
{
jjtGetChild
(
i
)
.
render
(
context
,
writer
)
;
return
true
;
}
}
return
true
;
}
public
void
process
(
InternalContextAdapter
context
,
ParserVisitor
visitor
)
{
}
}
