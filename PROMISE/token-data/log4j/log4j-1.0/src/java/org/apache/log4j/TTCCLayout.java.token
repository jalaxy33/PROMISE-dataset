package
org
.
apache
.
log4j
;
import
org
.
apache
.
log4j
.
Priority
;
import
org
.
apache
.
log4j
.
helpers
.
OptionConverter
;
import
org
.
apache
.
log4j
.
helpers
.
LogLog
;
import
org
.
apache
.
log4j
.
helpers
.
DateLayout
;
import
org
.
apache
.
log4j
.
helpers
.
RelativeTimeDateFormat
;
import
org
.
apache
.
log4j
.
helpers
.
AbsoluteTimeDateFormat
;
import
org
.
apache
.
log4j
.
helpers
.
DateTimeDateFormat
;
import
org
.
apache
.
log4j
.
helpers
.
ISO8601DateFormat
;
import
org
.
apache
.
log4j
.
spi
.
LoggingEvent
;
public
class
TTCCLayout
extends
DateLayout
{
final
static
public
String
THREAD_PRINTING_OPTION
=
"ThreadPrinting"
;
final
static
public
String
CATEGORY_PREFIXING_OPTION
=
"CategoryPrefixing"
;
final
static
public
String
CONTEXT_PRINTING_OPTION
=
"ContextPrinting"
;
private
boolean
threadPrinting
=
true
;
private
boolean
categoryPrefixing
=
true
;
private
boolean
contextPrinting
=
true
;
protected
final
StringBuffer
buf
=
new
StringBuffer
(
256
)
;
public
TTCCLayout
(
)
{
this
.
setDateFormat
(
RELATIVE_TIME_DATE_FORMAT
,
null
)
;
}
public
TTCCLayout
(
String
dateFormatType
)
{
this
.
setDateFormat
(
dateFormatType
)
;
}
public
String
format
(
LoggingEvent
event
)
{
buf
.
setLength
(
0
)
;
dateFormat
(
buf
,
event
)
;
if
(
this
.
threadPrinting
)
{
buf
.
append
(
'['
)
;
buf
.
append
(
event
.
getThreadName
(
)
)
;
buf
.
append
(
"] "
)
;
}
buf
.
append
(
event
.
priority
.
toString
(
)
)
;
buf
.
append
(
' '
)
;
if
(
this
.
categoryPrefixing
)
{
buf
.
append
(
event
.
categoryName
)
;
buf
.
append
(
' '
)
;
}
if
(
this
.
contextPrinting
)
{
event
.
getNDC
(
)
;
if
(
event
.
ndc
!=
null
)
{
buf
.
append
(
event
.
ndc
)
;
buf
.
append
(
' '
)
;
}
}
buf
.
append
(
"- "
)
;
buf
.
append
(
event
.
message
)
;
buf
.
append
(
LINE_SEP
)
;
return
buf
.
toString
(
)
;
}
public
String
[
]
getOptionStrings
(
)
{
return
OptionConverter
.
concatanateArrays
(
super
.
getOptionStrings
(
)
,
new
String
[
]
{
THREAD_PRINTING_OPTION
,
CATEGORY_PREFIXING_OPTION
,
CONTEXT_PRINTING_OPTION
}
)
;
}
public
boolean
ignoresThrowable
(
)
{
return
true
;
}
public
void
setOption
(
String
key
,
String
value
)
{
super
.
setOption
(
key
,
value
)
;
if
(
key
.
equalsIgnoreCase
(
THREAD_PRINTING_OPTION
)
)
threadPrinting
=
OptionConverter
.
toBoolean
(
value
,
threadPrinting
)
;
else
if
(
key
.
equalsIgnoreCase
(
CATEGORY_PREFIXING_OPTION
)
)
categoryPrefixing
=
OptionConverter
.
toBoolean
(
value
,
categoryPrefixing
)
;
else
if
(
key
.
equalsIgnoreCase
(
CONTEXT_PRINTING_OPTION
)
)
contextPrinting
=
OptionConverter
.
toBoolean
(
value
,
contextPrinting
)
;
}
public
void
setCategoryPrefixing
(
boolean
categoryPrefixing
)
{
this
.
categoryPrefixing
=
categoryPrefixing
;
}
public
void
setThreadPrinting
(
boolean
threadPrinting
)
{
this
.
threadPrinting
=
threadPrinting
;
}
}
