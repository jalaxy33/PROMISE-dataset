package
org
.
apache
.
log4j
.
helpers
;
import
java
.
util
.
Calendar
;
import
java
.
util
.
TimeZone
;
import
java
.
util
.
Date
;
import
java
.
text
.
FieldPosition
;
import
java
.
text
.
ParsePosition
;
import
java
.
text
.
DateFormat
;
import
java
.
text
.
DateFormatSymbols
;
public
class
ISO8601DateFormat
extends
AbsoluteTimeDateFormat
{
public
ISO8601DateFormat
(
)
{
}
public
ISO8601DateFormat
(
TimeZone
timeZone
)
{
super
(
timeZone
)
;
}
public
StringBuffer
format
(
Date
date
,
StringBuffer
sbuf
,
FieldPosition
fieldPosition
)
{
calendar
.
setTime
(
date
)
;
int
year
=
calendar
.
get
(
Calendar
.
YEAR
)
;
sbuf
.
append
(
year
)
;
String
month
;
switch
(
calendar
.
get
(
Calendar
.
MONTH
)
)
{
case
Calendar
.
JANUARY
:
month
=
"-01-"
;
break
;
case
Calendar
.
FEBRUARY
:
month
=
"-02-"
;
break
;
case
Calendar
.
MARCH
:
month
=
"-03-"
;
break
;
case
Calendar
.
APRIL
:
month
=
"-04-"
;
break
;
case
Calendar
.
MAY
:
month
=
"-05-"
;
break
;
case
Calendar
.
JUNE
:
month
=
"-06-"
;
break
;
case
Calendar
.
JULY
:
month
=
"-07-"
;
break
;
case
Calendar
.
AUGUST
:
month
=
"-08-"
;
break
;
case
Calendar
.
SEPTEMBER
:
month
=
"-09-"
;
break
;
case
Calendar
.
OCTOBER
:
month
=
"-10-"
;
break
;
case
Calendar
.
NOVEMBER
:
month
=
"-11-"
;
break
;
case
Calendar
.
DECEMBER
:
month
=
"-12-"
;
break
;
default
:
month
=
"-NA-"
;
break
;
}
sbuf
.
append
(
month
)
;
int
day
=
calendar
.
get
(
Calendar
.
DAY_OF_MONTH
)
;
if
(
day
<
10
)
sbuf
.
append
(
'0'
)
;
sbuf
.
append
(
day
)
;
sbuf
.
append
(
' '
)
;
return
super
.
format
(
date
,
sbuf
,
fieldPosition
)
;
}
public
Date
parse
(
java
.
lang
.
String
s
,
ParsePosition
pos
)
{
return
null
;
}
}
