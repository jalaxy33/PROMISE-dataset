package
org
.
apache
.
log4j
;
public
class
Priority
{
int
level
;
String
levelStr
;
int
syslogEquivalent
;
final
static
int
FATAL_INT
=
50000
;
final
static
int
ERROR_INT
=
40000
;
final
static
int
WARN_INT
=
30000
;
final
static
int
INFO_INT
=
20000
;
final
static
int
DEBUG_INT
=
10000
;
final
static
public
Priority
FATAL
=
new
Priority
(
FATAL_INT
,
"FATAL"
,
0
)
;
final
static
public
Priority
ERROR
=
new
Priority
(
ERROR_INT
,
"ERROR"
,
3
)
;
final
static
public
Priority
WARN
=
new
Priority
(
WARN_INT
,
"WARN"
,
4
)
;
final
static
public
Priority
INFO
=
new
Priority
(
INFO_INT
,
"INFO"
,
5
)
;
final
static
public
Priority
DEBUG
=
new
Priority
(
DEBUG_INT
,
"DEBUG"
,
6
)
;
protected
Priority
(
int
level
,
String
levelStr
,
int
syslogEquivalent
)
{
this
.
level
=
level
;
this
.
levelStr
=
levelStr
;
this
.
syslogEquivalent
=
syslogEquivalent
;
}
public
final
int
getSyslogEquivalent
(
)
{
return
syslogEquivalent
;
}
final
public
String
toString
(
)
{
return
levelStr
;
}
public
final
int
toInt
(
)
{
return
level
;
}
public
boolean
isGreaterOrEqual
(
Priority
r
)
{
return
level
>=
r
.
level
;
}
public
static
Priority
[
]
getAllPossiblePriorities
(
)
{
return
new
Priority
[
]
{
Priority
.
FATAL
,
Priority
.
ERROR
,
Priority
.
WARN
,
Priority
.
INFO
,
Priority
.
DEBUG
}
;
}
public
static
Priority
toPriority
(
String
sArg
)
{
return
toPriority
(
sArg
,
Priority
.
DEBUG
)
;
}
public
static
Priority
toPriority
(
int
val
)
{
switch
(
val
)
{
case
DEBUG_INT
:
return
DEBUG
;
case
INFO_INT
:
return
INFO
;
case
WARN_INT
:
return
WARN
;
case
ERROR_INT
:
return
ERROR
;
case
FATAL_INT
:
return
FATAL
;
default
:
return
DEBUG
;
}
}
public
static
Priority
toPriority
(
String
sArg
,
Priority
defaultPriority
)
{
if
(
sArg
==
null
)
return
defaultPriority
;
String
s
=
sArg
.
toUpperCase
(
)
;
if
(
s
.
equals
(
"DEBUG"
)
)
return
Priority
.
DEBUG
;
if
(
s
.
equals
(
"INFO"
)
)
return
Priority
.
INFO
;
if
(
s
.
equals
(
"WARN"
)
)
return
Priority
.
WARN
;
if
(
s
.
equals
(
"ERROR"
)
)
return
Priority
.
ERROR
;
if
(
s
.
equals
(
"FATAL"
)
)
return
Priority
.
FATAL
;
return
defaultPriority
;
}
}
