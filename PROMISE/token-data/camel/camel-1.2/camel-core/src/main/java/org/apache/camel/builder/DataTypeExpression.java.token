package
org
.
apache
.
camel
.
builder
;
import
org
.
apache
.
camel
.
model
.
ProcessorType
;
import
org
.
apache
.
camel
.
model
.
dataformat
.
ArtixDSContentType
;
import
org
.
apache
.
camel
.
model
.
dataformat
.
ArtixDSDataFormat
;
import
org
.
apache
.
camel
.
model
.
dataformat
.
DataFormatType
;
import
org
.
apache
.
camel
.
model
.
dataformat
.
JaxbDataFormat
;
import
org
.
apache
.
camel
.
model
.
dataformat
.
SerializationDataFormat
;
import
org
.
apache
.
camel
.
model
.
dataformat
.
XMLBeansDataFormat
;
import
org
.
apache
.
camel
.
spi
.
DataFormat
;
public
class
DataTypeExpression
<
T
extends
ProcessorType
>
{
private
final
ProcessorType
<
T
>
processorType
;
private
final
Operation
operation
;
public
enum
Operation
{
Marshal
,
Unmarshal
}
;
public
DataTypeExpression
(
ProcessorType
<
T
>
processorType
,
Operation
operation
)
{
this
.
processorType
=
processorType
;
this
.
operation
=
operation
;
}
public
T
serialization
(
)
{
return
dataFormat
(
new
SerializationDataFormat
(
)
)
;
}
public
T
jaxb
(
)
{
return
dataFormat
(
new
JaxbDataFormat
(
)
)
;
}
public
T
jaxb
(
boolean
prettyPrint
)
{
return
dataFormat
(
new
JaxbDataFormat
(
prettyPrint
)
)
;
}
public
T
xmlBeans
(
)
{
return
dataFormat
(
new
XMLBeansDataFormat
(
)
)
;
}
public
T
artixDS
(
)
{
return
dataFormat
(
new
ArtixDSDataFormat
(
)
)
;
}
public
T
artixDS
(
Class
<
?
>
dataObjectType
)
{
return
dataFormat
(
new
ArtixDSDataFormat
(
dataObjectType
)
)
;
}
public
T
artixDS
(
Class
<
?
>
elementType
,
ArtixDSContentType
contentType
)
{
return
dataFormat
(
new
ArtixDSDataFormat
(
elementType
,
contentType
)
)
;
}
public
T
artixDS
(
ArtixDSContentType
contentType
)
{
return
dataFormat
(
new
ArtixDSDataFormat
(
contentType
)
)
;
}
private
T
dataFormat
(
DataFormatType
dataFormatType
)
{
switch
(
operation
)
{
case
Unmarshal
:
return
processorType
.
unmarshal
(
dataFormatType
)
;
case
Marshal
:
return
processorType
.
marshal
(
dataFormatType
)
;
default
:
throw
new
IllegalArgumentException
(
"Unknown value: "
+
operation
)
;
}
}
}
