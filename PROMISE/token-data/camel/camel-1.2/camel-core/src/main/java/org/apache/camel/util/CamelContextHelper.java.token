package
org
.
apache
.
camel
.
util
;
import
org
.
apache
.
camel
.
CamelContext
;
import
org
.
apache
.
camel
.
Endpoint
;
import
org
.
apache
.
camel
.
NoSuchEndpointException
;
import
org
.
apache
.
camel
.
spi
.
Injector
;
import
static
org
.
apache
.
camel
.
util
.
ObjectHelper
.
notNull
;
public
class
CamelContextHelper
{
private
CamelContextHelper
(
)
{
}
public
static
Endpoint
getMandatoryEndpoint
(
CamelContext
camelContext
,
String
uri
)
throws
NoSuchEndpointException
{
Endpoint
endpoint
=
camelContext
.
getEndpoint
(
uri
)
;
if
(
endpoint
==
null
)
{
throw
new
NoSuchEndpointException
(
uri
)
;
}
else
{
return
endpoint
;
}
}
public
static
<
T
>
T
convertTo
(
CamelContext
context
,
Class
<
T
>
type
,
Object
value
)
{
notNull
(
context
,
"camelContext"
)
;
return
context
.
getTypeConverter
(
)
.
convertTo
(
type
,
value
)
;
}
public
static
<
T
>
T
mandatoryConvertTo
(
CamelContext
context
,
Class
<
T
>
type
,
Object
value
)
{
T
answer
=
convertTo
(
context
,
type
,
value
)
;
if
(
answer
==
null
)
{
throw
new
IllegalArgumentException
(
"Value "
+
value
+
" converted to "
+
type
.
getName
(
)
+
" cannot be null"
)
;
}
return
answer
;
}
public
static
<
T
>
T
newInstance
(
CamelContext
context
,
Class
<
T
>
beanType
)
{
return
context
.
getInjector
(
)
.
newInstance
(
beanType
)
;
}
}
