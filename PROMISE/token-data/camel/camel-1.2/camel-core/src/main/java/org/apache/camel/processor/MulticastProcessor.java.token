package
org
.
apache
.
camel
.
processor
;
import
java
.
util
.
ArrayList
;
import
java
.
util
.
Collection
;
import
org
.
apache
.
camel
.
Endpoint
;
import
org
.
apache
.
camel
.
Exchange
;
import
org
.
apache
.
camel
.
Processor
;
import
org
.
apache
.
camel
.
impl
.
ServiceSupport
;
import
org
.
apache
.
camel
.
util
.
ServiceHelper
;
public
class
MulticastProcessor
extends
ServiceSupport
implements
Processor
{
private
Collection
<
Processor
>
processors
;
public
MulticastProcessor
(
Collection
<
Processor
>
processors
)
{
this
.
processors
=
processors
;
}
public
static
<
E
extends
Exchange
>
Collection
<
Processor
>
toProducers
(
Collection
<
Endpoint
>
endpoints
)
throws
Exception
{
Collection
<
Processor
>
answer
=
new
ArrayList
<
Processor
>
(
)
;
for
(
Endpoint
endpoint
:
endpoints
)
{
answer
.
add
(
endpoint
.
createProducer
(
)
)
;
}
return
answer
;
}
@
Override
public
String
toString
(
)
{
return
"Multicast"
+
getProcessors
(
)
;
}
public
void
process
(
Exchange
exchange
)
throws
Exception
{
for
(
Processor
producer
:
processors
)
{
Exchange
copy
=
copyExchangeStrategy
(
producer
,
exchange
)
;
producer
.
process
(
copy
)
;
}
}
protected
void
doStop
(
)
throws
Exception
{
ServiceHelper
.
stopServices
(
processors
)
;
}
protected
void
doStart
(
)
throws
Exception
{
ServiceHelper
.
startServices
(
processors
)
;
}
public
Collection
<
Processor
>
getProcessors
(
)
{
return
processors
;
}
protected
Exchange
copyExchangeStrategy
(
Processor
processor
,
Exchange
exchange
)
{
return
exchange
.
copy
(
)
;
}
}
