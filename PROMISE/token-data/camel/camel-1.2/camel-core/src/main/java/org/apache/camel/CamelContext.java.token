package
org
.
apache
.
camel
;
import
java
.
util
.
Collection
;
import
java
.
util
.
List
;
import
java
.
util
.
concurrent
.
Callable
;
import
org
.
apache
.
camel
.
builder
.
RouteBuilder
;
import
org
.
apache
.
camel
.
spi
.
ExchangeConverter
;
import
org
.
apache
.
camel
.
spi
.
Injector
;
import
org
.
apache
.
camel
.
spi
.
Language
;
import
org
.
apache
.
camel
.
spi
.
LifecycleStrategy
;
import
org
.
apache
.
camel
.
spi
.
Registry
;
import
org
.
apache
.
camel
.
model
.
RouteType
;
public
interface
CamelContext
extends
Service
{
String
getName
(
)
;
void
addComponent
(
String
componentName
,
Component
component
)
;
Component
getComponent
(
String
componentName
)
;
<
T
extends
Component
>
T
getComponent
(
String
name
,
Class
<
T
>
componentType
)
;
Component
removeComponent
(
String
componentName
)
;
Component
getOrCreateComponent
(
String
componentName
,
Callable
<
Component
>
factory
)
;
Endpoint
getEndpoint
(
String
uri
)
;
<
T
extends
Endpoint
>
T
getEndpoint
(
String
name
,
Class
<
T
>
endpointType
)
;
Collection
<
Endpoint
>
getSingletonEndpoints
(
)
;
Endpoint
addSingletonEndpoint
(
String
uri
,
Endpoint
endpoint
)
throws
Exception
;
Endpoint
removeSingletonEndpoint
(
String
uri
)
throws
Exception
;
List
<
RouteType
>
getRouteDefinitions
(
)
;
List
<
Route
>
getRoutes
(
)
;
void
setRoutes
(
List
<
Route
>
routes
)
;
void
addRoutes
(
Collection
<
Route
>
routes
)
throws
Exception
;
void
addRoutes
(
RouteBuilder
builder
)
throws
Exception
;
void
addRouteDefinitions
(
Collection
<
RouteType
>
routeDefinitions
)
throws
Exception
;
ExchangeConverter
getExchangeConverter
(
)
;
TypeConverter
getTypeConverter
(
)
;
Registry
getRegistry
(
)
;
Injector
getInjector
(
)
;
LifecycleStrategy
getLifecycleStrategy
(
)
;
Language
resolveLanguage
(
String
language
)
;
}
