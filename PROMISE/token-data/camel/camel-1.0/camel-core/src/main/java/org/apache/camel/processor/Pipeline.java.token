package
org
.
apache
.
camel
.
processor
;
import
org
.
apache
.
camel
.
Endpoint
;
import
org
.
apache
.
camel
.
Exchange
;
import
org
.
apache
.
camel
.
Processor
;
import
org
.
apache
.
camel
.
Producer
;
import
java
.
util
.
Collection
;
public
class
Pipeline
extends
MulticastProcessor
implements
Processor
{
public
Pipeline
(
Collection
<
Endpoint
>
endpoints
)
throws
Exception
{
super
(
endpoints
)
;
}
public
void
process
(
Exchange
exchange
)
throws
Exception
{
Exchange
nextExchange
=
exchange
;
boolean
first
=
true
;
for
(
Producer
producer
:
getProducers
(
)
)
{
if
(
first
)
{
first
=
false
;
}
else
{
nextExchange
=
createNextExchange
(
producer
,
nextExchange
)
;
}
producer
.
process
(
nextExchange
)
;
}
}
protected
Exchange
createNextExchange
(
Producer
producer
,
Exchange
previousExchange
)
{
Exchange
answer
=
producer
.
createExchange
(
previousExchange
)
;
Object
output
=
previousExchange
.
getOut
(
)
.
getBody
(
)
;
if
(
output
!=
null
)
{
answer
.
getIn
(
)
.
setBody
(
output
)
;
}
return
answer
;
}
protected
Exchange
copyExchangeStrategy
(
Exchange
exchange
)
{
return
exchange
.
copy
(
)
;
}
@
Override
public
String
toString
(
)
{
return
"Pipeline"
+
getEndpoints
(
)
;
}
}
