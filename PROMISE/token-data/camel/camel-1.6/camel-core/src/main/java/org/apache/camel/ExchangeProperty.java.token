package
org
.
apache
.
camel
;
import
java
.
util
.
ArrayList
;
import
java
.
util
.
HashMap
;
import
java
.
util
.
List
;
import
java
.
util
.
Map
;
public
class
ExchangeProperty
<
T
>
{
private
static
final
List
<
ExchangeProperty
<
?
>
>
VALUES
=
new
ArrayList
<
ExchangeProperty
<
?
>
>
(
)
;
private
static
final
Map
<
String
,
ExchangeProperty
<
?
>
>
LITERAL_MAP
=
new
HashMap
<
String
,
ExchangeProperty
<
?
>
>
(
)
;
private
static
final
Map
<
String
,
ExchangeProperty
<
?
>
>
NAME_MAP
=
new
HashMap
<
String
,
ExchangeProperty
<
?
>
>
(
)
;
private
final
String
literal
;
private
final
String
name
;
private
final
Class
<
T
>
type
;
public
ExchangeProperty
(
String
literal
,
String
name
,
Class
<
T
>
type
)
{
this
.
literal
=
literal
;
this
.
name
=
name
;
this
.
type
=
type
;
register
(
this
)
;
}
public
String
literal
(
)
{
return
literal
;
}
public
String
name
(
)
{
return
name
;
}
public
Class
<
T
>
type
(
)
{
return
type
;
}
public
T
get
(
Exchange
exchange
)
{
return
exchange
.
getProperty
(
name
,
type
)
;
}
public
static
ExchangeProperty
<
?
>
get
(
String
literal
)
{
return
LITERAL_MAP
.
get
(
literal
)
;
}
public
static
ExchangeProperty
<
?
>
getByName
(
String
name
)
{
return
NAME_MAP
.
get
(
name
)
;
}
public
T
set
(
Exchange
exchange
,
T
value
)
{
T
oldValue
=
get
(
exchange
)
;
exchange
.
setProperty
(
name
,
value
)
;
return
oldValue
;
}
public
T
remove
(
Exchange
exchange
)
{
T
oldValue
=
get
(
exchange
)
;
exchange
.
removeProperty
(
name
)
;
return
oldValue
;
}
@
Override
public
String
toString
(
)
{
return
type
(
)
.
getCanonicalName
(
)
+
" "
+
name
+
" ("
+
literal
(
)
+
")"
;
}
public
static
synchronized
void
register
(
ExchangeProperty
<
?
>
property
)
{
ExchangeProperty
<
?
>
existingProperty
=
LITERAL_MAP
.
get
(
property
.
literal
(
)
)
;
if
(
existingProperty
!=
null
&&
existingProperty
!=
property
)
{
throw
new
RuntimeCamelException
(
"An Exchange Property '"
+
property
.
literal
(
)
+
"' has already been registered; its traits are: "
+
existingProperty
.
toString
(
)
)
;
}
VALUES
.
add
(
property
)
;
LITERAL_MAP
.
put
(
property
.
literal
(
)
,
property
)
;
NAME_MAP
.
put
(
property
.
name
(
)
,
property
)
;
}
public
static
synchronized
void
deregister
(
ExchangeProperty
<
?
>
property
)
{
if
(
property
!=
null
)
{
VALUES
.
remove
(
property
)
;
LITERAL_MAP
.
remove
(
property
.
literal
(
)
)
;
NAME_MAP
.
put
(
property
.
name
(
)
,
property
)
;
}
}
public
static
synchronized
void
deregister
(
String
literal
)
{
ExchangeProperty
<
?
>
property
=
LITERAL_MAP
.
get
(
literal
)
;
if
(
property
!=
null
)
{
VALUES
.
remove
(
property
)
;
LITERAL_MAP
.
remove
(
property
.
literal
(
)
)
;
NAME_MAP
.
put
(
property
.
name
(
)
,
property
)
;
}
}
public
static
synchronized
ExchangeProperty
<
?
>
[
]
values
(
)
{
return
VALUES
.
toArray
(
new
ExchangeProperty
[
0
]
)
;
}
}
