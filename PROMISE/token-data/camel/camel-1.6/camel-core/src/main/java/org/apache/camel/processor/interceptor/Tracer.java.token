package
org
.
apache
.
camel
.
processor
.
interceptor
;
import
java
.
util
.
List
;
import
org
.
apache
.
camel
.
CamelContext
;
import
org
.
apache
.
camel
.
Exchange
;
import
org
.
apache
.
camel
.
Predicate
;
import
org
.
apache
.
camel
.
Processor
;
import
org
.
apache
.
camel
.
impl
.
DefaultCamelContext
;
import
org
.
apache
.
camel
.
model
.
LoggingLevel
;
import
org
.
apache
.
camel
.
model
.
ProcessorType
;
import
org
.
apache
.
camel
.
spi
.
InterceptStrategy
;
public
class
Tracer
implements
InterceptStrategy
{
private
TraceFormatter
formatter
=
new
TraceFormatter
(
)
;
private
boolean
enabled
=
true
;
private
String
logName
;
private
LoggingLevel
logLevel
;
private
Predicate
<
Exchange
>
traceFilter
;
private
boolean
traceInterceptors
;
private
boolean
traceExceptions
=
true
;
private
boolean
traceOutExchanges
;
public
static
Tracer
getTracer
(
CamelContext
context
)
{
if
(
context
instanceof
DefaultCamelContext
)
{
DefaultCamelContext
defaultCamelContext
=
(
DefaultCamelContext
)
context
;
List
<
InterceptStrategy
>
list
=
defaultCamelContext
.
getInterceptStrategies
(
)
;
for
(
InterceptStrategy
interceptStrategy
:
list
)
{
if
(
interceptStrategy
instanceof
Tracer
)
{
return
(
Tracer
)
interceptStrategy
;
}
}
}
return
null
;
}
public
Processor
wrapProcessorInInterceptors
(
ProcessorType
processorType
,
Processor
target
)
throws
Exception
{
String
id
=
processorType
.
idOrCreate
(
)
;
return
new
TraceInterceptor
(
processorType
,
target
,
this
)
;
}
public
TraceFormatter
getFormatter
(
)
{
return
formatter
;
}
public
void
setFormatter
(
TraceFormatter
formatter
)
{
this
.
formatter
=
formatter
;
}
public
void
setEnabled
(
boolean
flag
)
{
enabled
=
flag
;
}
public
boolean
isEnabled
(
)
{
return
enabled
;
}
public
boolean
isTraceInterceptors
(
)
{
return
traceInterceptors
;
}
public
void
setTraceInterceptors
(
boolean
traceInterceptors
)
{
this
.
traceInterceptors
=
traceInterceptors
;
}
public
Predicate
getTraceFilter
(
)
{
return
traceFilter
;
}
public
void
setTraceFilter
(
Predicate
traceFilter
)
{
this
.
traceFilter
=
traceFilter
;
}
public
LoggingLevel
getLogLevel
(
)
{
return
logLevel
;
}
public
void
setLogLevel
(
LoggingLevel
logLevel
)
{
this
.
logLevel
=
logLevel
;
}
public
boolean
isTraceExceptions
(
)
{
return
traceExceptions
;
}
public
void
setTraceExceptions
(
boolean
traceExceptions
)
{
this
.
traceExceptions
=
traceExceptions
;
}
public
String
getLogName
(
)
{
return
logName
;
}
public
void
setLogName
(
String
logName
)
{
this
.
logName
=
logName
;
}
public
void
setTraceOutExchanges
(
boolean
traceOutExchanges
)
{
this
.
traceOutExchanges
=
traceOutExchanges
;
}
public
boolean
isTraceOutExchanges
(
)
{
return
traceOutExchanges
;
}
}
