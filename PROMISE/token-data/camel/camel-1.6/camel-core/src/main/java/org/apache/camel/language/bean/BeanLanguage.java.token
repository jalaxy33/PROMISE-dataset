package
org
.
apache
.
camel
.
language
.
bean
;
import
org
.
apache
.
camel
.
Exchange
;
import
org
.
apache
.
camel
.
Expression
;
import
org
.
apache
.
camel
.
Predicate
;
import
org
.
apache
.
camel
.
builder
.
PredicateBuilder
;
import
org
.
apache
.
camel
.
spi
.
Language
;
import
org
.
apache
.
camel
.
util
.
ObjectHelper
;
public
class
BeanLanguage
implements
Language
{
public
static
Expression
bean
(
String
expression
)
{
BeanLanguage
language
=
new
BeanLanguage
(
)
;
return
language
.
createExpression
(
expression
)
;
}
public
static
Expression
bean
(
Class
beanType
,
String
method
)
{
Object
bean
=
ObjectHelper
.
newInstance
(
beanType
)
;
return
bean
(
bean
,
method
)
;
}
public
static
Expression
bean
(
Object
bean
,
String
method
)
{
BeanLanguage
language
=
new
BeanLanguage
(
)
;
return
language
.
createExpression
(
bean
,
method
)
;
}
public
Predicate
<
Exchange
>
createPredicate
(
String
expression
)
{
return
PredicateBuilder
.
toPredicate
(
createExpression
(
expression
)
)
;
}
public
Expression
<
Exchange
>
createExpression
(
String
expression
)
{
ObjectHelper
.
notNull
(
expression
,
"expression"
)
;
int
idx
=
expression
.
lastIndexOf
(
'.'
)
;
String
beanName
=
expression
;
String
method
=
null
;
if
(
idx
>
0
)
{
beanName
=
expression
.
substring
(
0
,
idx
)
;
method
=
expression
.
substring
(
idx
+
1
)
;
}
return
new
BeanExpression
(
beanName
,
method
)
;
}
public
Expression
<
Exchange
>
createExpression
(
Object
bean
,
String
method
)
{
ObjectHelper
.
notNull
(
bean
,
"bean"
)
;
return
new
BeanExpression
(
bean
,
method
)
;
}
}
