package
org
.
apache
.
camel
.
util
;
import
org
.
apache
.
camel
.
Message
;
import
org
.
apache
.
camel
.
NoTypeConversionAvailableException
;
import
org
.
apache
.
camel
.
converter
.
stream
.
StreamCache
;
public
final
class
MessageHelper
{
private
MessageHelper
(
)
{
}
public
static
String
extractBodyAsString
(
Message
message
)
{
if
(
message
==
null
)
{
return
null
;
}
StreamCache
newBody
=
null
;
try
{
newBody
=
message
.
getBody
(
StreamCache
.
class
)
;
if
(
newBody
!=
null
)
{
message
.
setBody
(
newBody
)
;
}
}
catch
(
NoTypeConversionAvailableException
ex
)
{
}
Object
answer
;
try
{
answer
=
message
.
getBody
(
String
.
class
)
;
}
catch
(
NoTypeConversionAvailableException
ex
)
{
answer
=
message
.
getBody
(
)
;
}
if
(
newBody
!=
null
)
{
newBody
.
reset
(
)
;
}
return
answer
!=
null
?
answer
.
toString
(
)
:
null
;
}
public
static
String
getBodyTypeName
(
Message
message
)
{
if
(
message
==
null
)
{
return
null
;
}
String
answer
=
ObjectHelper
.
classCanonicalName
(
message
.
getBody
(
)
)
;
if
(
answer
!=
null
&&
answer
.
startsWith
(
"java.lang."
)
)
{
return
answer
.
substring
(
10
)
;
}
return
answer
;
}
public
static
void
resetStreamCache
(
Message
message
)
{
if
(
message
==
null
)
{
return
;
}
if
(
message
.
getBody
(
)
instanceof
StreamCache
)
{
(
(
StreamCache
)
message
.
getBody
(
)
)
.
reset
(
)
;
}
}
}
