package
org
.
apache
.
camel
.
builder
;
import
java
.
util
.
Map
;
import
org
.
apache
.
camel
.
Expression
;
import
org
.
apache
.
camel
.
builder
.
xml
.
Namespaces
;
import
org
.
apache
.
camel
.
model
.
ExpressionNode
;
import
org
.
apache
.
camel
.
model
.
language
.
ExpressionType
;
import
org
.
apache
.
camel
.
model
.
language
.
MethodCallExpression
;
import
org
.
apache
.
camel
.
model
.
language
.
XPathExpression
;
import
org
.
apache
.
camel
.
model
.
language
.
XQueryExpression
;
public
class
ExpressionClause
<
T
>
extends
ExpressionType
{
private
T
result
;
private
String
language
;
public
ExpressionClause
(
T
result
)
{
this
.
result
=
result
;
}
public
static
<
T
extends
ExpressionNode
>
ExpressionClause
<
T
>
createAndSetExpression
(
T
result
)
{
ExpressionClause
<
T
>
clause
=
new
ExpressionClause
<
T
>
(
result
)
;
result
.
setExpression
(
clause
)
;
return
clause
;
}
public
T
expression
(
Expression
expression
)
{
setExpressionValue
(
expression
)
;
return
result
;
}
public
T
constant
(
Object
value
)
{
return
expression
(
ExpressionBuilder
.
constantExpression
(
value
)
)
;
}
public
T
exchange
(
)
{
return
expression
(
ExpressionBuilder
.
exchangeExpression
(
)
)
;
}
public
T
inMessage
(
)
{
return
expression
(
ExpressionBuilder
.
inMessageExpression
(
)
)
;
}
public
T
outMessage
(
)
{
return
expression
(
ExpressionBuilder
.
outMessageExpression
(
)
)
;
}
public
T
body
(
)
{
return
expression
(
ExpressionBuilder
.
bodyExpression
(
)
)
;
}
public
T
body
(
Class
expectedType
)
{
return
expression
(
ExpressionBuilder
.
bodyExpression
(
expectedType
)
)
;
}
public
T
outBody
(
)
{
return
expression
(
ExpressionBuilder
.
outBodyExpression
(
)
)
;
}
public
T
outBody
(
Class
expectedType
)
{
return
expression
(
ExpressionBuilder
.
outBodyExpression
(
expectedType
)
)
;
}
public
T
header
(
String
name
)
{
return
expression
(
ExpressionBuilder
.
headerExpression
(
name
)
)
;
}
public
T
headers
(
)
{
return
expression
(
ExpressionBuilder
.
headersExpression
(
)
)
;
}
public
T
outHeader
(
String
name
)
{
return
expression
(
ExpressionBuilder
.
outHeaderExpression
(
name
)
)
;
}
public
T
outHeaders
(
)
{
return
expression
(
ExpressionBuilder
.
outHeadersExpression
(
)
)
;
}
public
T
property
(
String
name
)
{
return
expression
(
ExpressionBuilder
.
propertyExpression
(
name
)
)
;
}
public
T
properties
(
)
{
return
expression
(
ExpressionBuilder
.
propertiesExpression
(
)
)
;
}
public
T
method
(
String
bean
)
{
MethodCallExpression
expression
=
new
MethodCallExpression
(
bean
)
;
setExpressionType
(
expression
)
;
return
result
;
}
public
T
method
(
String
bean
,
String
method
)
{
MethodCallExpression
expression
=
new
MethodCallExpression
(
bean
,
method
)
;
setExpressionType
(
expression
)
;
return
result
;
}
public
T
el
(
String
text
)
{
return
language
(
"el"
,
text
)
;
}
public
T
groovy
(
String
text
)
{
return
language
(
"groovy"
,
text
)
;
}
public
T
javaScript
(
String
text
)
{
return
language
(
"js"
,
text
)
;
}
public
T
jxpath
(
String
text
)
{
return
language
(
"jxpath"
,
text
)
;
}
public
T
ognl
(
String
text
)
{
return
language
(
"ognl"
,
text
)
;
}
public
T
php
(
String
text
)
{
return
language
(
"php"
,
text
)
;
}
public
T
python
(
String
text
)
{
return
language
(
"python"
,
text
)
;
}
public
T
ruby
(
String
text
)
{
return
language
(
"ruby"
,
text
)
;
}
public
T
sql
(
String
text
)
{
return
language
(
"sql"
,
text
)
;
}
public
T
simple
(
String
text
)
{
return
language
(
"simple"
,
text
)
;
}
public
T
xpath
(
String
text
)
{
return
language
(
"xpath"
,
text
)
;
}
public
T
xpath
(
String
text
,
Class
resultType
)
{
XPathExpression
expression
=
new
XPathExpression
(
text
)
;
expression
.
setResultType
(
resultType
)
;
setExpressionType
(
expression
)
;
return
result
;
}
public
T
xpath
(
String
text
,
Class
resultType
,
Namespaces
namespaces
)
{
return
xpath
(
text
,
resultType
,
namespaces
.
getNamespaces
(
)
)
;
}
public
T
xpath
(
String
text
,
Class
resultType
,
Map
<
String
,
String
>
namespaces
)
{
XPathExpression
expression
=
new
XPathExpression
(
text
)
;
expression
.
setResultType
(
resultType
)
;
expression
.
setNamespaces
(
namespaces
)
;
setExpressionType
(
expression
)
;
return
result
;
}
public
T
xpath
(
String
text
,
Namespaces
namespaces
)
{
return
xpath
(
text
,
namespaces
.
getNamespaces
(
)
)
;
}
public
T
xpath
(
String
text
,
Map
<
String
,
String
>
namespaces
)
{
XPathExpression
expression
=
new
XPathExpression
(
text
)
;
expression
.
setNamespaces
(
namespaces
)
;
setExpressionType
(
expression
)
;
return
result
;
}
public
T
xquery
(
String
text
)
{
return
language
(
"xquery"
,
text
)
;
}
public
T
xquery
(
String
text
,
Class
resultType
)
{
XQueryExpression
expression
=
new
XQueryExpression
(
text
)
;
expression
.
setResultType
(
resultType
)
;
setExpressionType
(
expression
)
;
return
result
;
}
public
T
xquery
(
String
text
,
Class
resultType
,
Namespaces
namespaces
)
{
return
xquery
(
text
,
resultType
,
namespaces
.
getNamespaces
(
)
)
;
}
public
T
xquery
(
String
text
,
Class
resultType
,
Map
<
String
,
String
>
namespaces
)
{
XQueryExpression
expression
=
new
XQueryExpression
(
text
)
;
expression
.
setResultType
(
resultType
)
;
expression
.
setNamespaces
(
namespaces
)
;
setExpressionType
(
expression
)
;
return
result
;
}
public
T
xquery
(
String
text
,
Namespaces
namespaces
)
{
return
xquery
(
text
,
namespaces
.
getNamespaces
(
)
)
;
}
public
T
xquery
(
String
text
,
Map
<
String
,
String
>
namespaces
)
{
XQueryExpression
expression
=
new
XQueryExpression
(
text
)
;
expression
.
setNamespaces
(
namespaces
)
;
setExpressionType
(
expression
)
;
return
result
;
}
public
T
language
(
String
language
,
String
expression
)
{
setLanguage
(
language
)
;
setExpression
(
expression
)
;
return
result
;
}
public
String
getLanguage
(
)
{
return
language
;
}
public
void
setLanguage
(
String
language
)
{
this
.
language
=
language
;
}
}
