package
org
.
apache
.
camel
.
processor
.
resequencer
;
import
java
.
util
.
TreeSet
;
public
class
Sequence
<
E
>
extends
TreeSet
<
E
>
{
private
static
final
long
serialVersionUID
=
5647393631147741711L
;
private
SequenceElementComparator
<
E
>
comparator
;
public
Sequence
(
SequenceElementComparator
<
E
>
comparator
)
{
super
(
comparator
)
;
this
.
comparator
=
comparator
;
}
public
E
predecessor
(
E
e
)
{
E
elem
=
lower
(
e
)
;
if
(
elem
==
null
)
{
return
null
;
}
if
(
comparator
.
predecessor
(
elem
,
e
)
)
{
return
elem
;
}
return
null
;
}
public
E
successor
(
E
e
)
{
E
elem
=
higher
(
e
)
;
if
(
elem
==
null
)
{
return
null
;
}
if
(
comparator
.
successor
(
elem
,
e
)
)
{
return
elem
;
}
return
null
;
}
public
SequenceElementComparator
<
E
>
comparator
(
)
{
return
comparator
;
}
public
E
higher
(
E
e
)
{
boolean
found
=
false
;
for
(
E
current
:
this
)
{
if
(
found
)
{
return
current
;
}
if
(
comparator
.
compare
(
e
,
current
)
==
0
)
{
found
=
true
;
}
}
return
null
;
}
public
E
lower
(
E
e
)
{
E
last
=
null
;
for
(
E
current
:
this
)
{
if
(
comparator
.
compare
(
e
,
current
)
==
0
)
{
return
last
;
}
last
=
current
;
}
return
last
;
}
}
