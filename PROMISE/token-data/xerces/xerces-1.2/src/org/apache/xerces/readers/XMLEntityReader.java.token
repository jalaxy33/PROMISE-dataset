package
org
.
apache
.
xerces
.
readers
;
import
org
.
apache
.
xerces
.
framework
.
XMLErrorReporter
;
abstract
class
XMLEntityReader
implements
XMLEntityHandler
.
EntityReader
{
protected
XMLEntityHandler
fEntityHandler
=
null
;
protected
XMLErrorReporter
fErrorReporter
=
null
;
protected
boolean
fSendCharDataAsCharArray
;
protected
XMLEntityHandler
.
CharDataHandler
fCharDataHandler
=
null
;
protected
boolean
fInCDSect
=
false
;
private
boolean
fStillActive
=
true
;
protected
int
fCarriageReturnCounter
=
1
;
protected
int
fLinefeedCounter
=
1
;
protected
int
fCharacterCounter
=
1
;
protected
int
fCurrentOffset
=
0
;
protected
XMLEntityReader
(
XMLEntityHandler
entityHandler
,
XMLErrorReporter
errorReporter
,
boolean
sendCharDataAsCharArray
)
{
fEntityHandler
=
entityHandler
;
fErrorReporter
=
errorReporter
;
fSendCharDataAsCharArray
=
sendCharDataAsCharArray
;
fCharDataHandler
=
fEntityHandler
.
getCharDataHandler
(
)
;
}
protected
XMLEntityReader
(
XMLEntityHandler
entityHandler
,
XMLErrorReporter
errorReporter
,
boolean
sendCharDataAsCharArray
,
int
lineNumber
,
int
columnNumber
)
{
fEntityHandler
=
entityHandler
;
fErrorReporter
=
errorReporter
;
fSendCharDataAsCharArray
=
sendCharDataAsCharArray
;
fCharDataHandler
=
fEntityHandler
.
getCharDataHandler
(
)
;
fLinefeedCounter
=
lineNumber
;
fCharacterCounter
=
columnNumber
;
}
protected
void
init
(
XMLEntityHandler
entityHandler
,
XMLErrorReporter
errorReporter
,
boolean
sendCharDataAsCharArray
,
int
lineNumber
,
int
columnNumber
)
{
fEntityHandler
=
entityHandler
;
fErrorReporter
=
errorReporter
;
fSendCharDataAsCharArray
=
sendCharDataAsCharArray
;
fCharDataHandler
=
fEntityHandler
.
getCharDataHandler
(
)
;
fLinefeedCounter
=
lineNumber
;
fCharacterCounter
=
columnNumber
;
fStillActive
=
true
;
fInCDSect
=
false
;
fCarriageReturnCounter
=
1
;
fCurrentOffset
=
0
;
}
public
int
currentOffset
(
)
{
return
fCurrentOffset
;
}
public
int
getLineNumber
(
)
{
if
(
fLinefeedCounter
>
1
)
return
fLinefeedCounter
;
else
return
fCarriageReturnCounter
;
}
public
int
getColumnNumber
(
)
{
return
fCharacterCounter
;
}
public
void
setInCDSect
(
boolean
inCDSect
)
{
fInCDSect
=
inCDSect
;
}
public
boolean
getInCDSect
(
)
{
return
fInCDSect
;
}
protected
XMLEntityHandler
.
EntityReader
changeReaders
(
)
throws
Exception
{
XMLEntityHandler
.
EntityReader
nextReader
=
null
;
if
(
fStillActive
)
{
nextReader
=
fEntityHandler
.
changeReaders
(
)
;
fStillActive
=
false
;
}
return
nextReader
;
}
}
