package
org
.
apache
.
xerces
.
utils
;
public
class
NamespacesScope
{
public
interface
NamespacesHandler
{
public
void
startNamespaceDeclScope
(
int
prefix
,
int
uri
)
throws
Exception
;
public
void
endNamespaceDeclScope
(
int
prefix
)
throws
Exception
;
}
public
NamespacesScope
(
NamespacesHandler
handler
)
{
fHandler
=
handler
;
fNamespaceMappings
[
0
]
=
new
int
[
9
]
;
fNamespaceMappings
[
0
]
[
0
]
=
1
;
}
public
void
setNamespaceForPrefix
(
int
prefix
,
int
namespace
)
throws
Exception
{
int
offset
=
fNamespaceMappings
[
fElementDepth
]
[
0
]
;
if
(
offset
==
fNamespaceMappings
[
fElementDepth
]
.
length
)
{
int
[
]
newMappings
=
new
int
[
offset
+
8
]
;
System
.
arraycopy
(
fNamespaceMappings
[
fElementDepth
]
,
0
,
newMappings
,
0
,
offset
)
;
fNamespaceMappings
[
fElementDepth
]
=
newMappings
;
}
fNamespaceMappings
[
fElementDepth
]
[
offset
++
]
=
prefix
;
fNamespaceMappings
[
fElementDepth
]
[
offset
++
]
=
namespace
;
fNamespaceMappings
[
fElementDepth
]
[
0
]
=
offset
;
if
(
fElementDepth
>
0
)
fHandler
.
startNamespaceDeclScope
(
prefix
,
namespace
)
;
}
public
int
getNamespaceForPrefix
(
int
prefix
)
{
for
(
int
depth
=
fElementDepth
;
depth
>=
0
;
depth
--
)
{
int
offset
=
fNamespaceMappings
[
depth
]
[
0
]
;
for
(
int
i
=
1
;
i
<
offset
;
i
+=
2
)
{
if
(
prefix
==
fNamespaceMappings
[
depth
]
[
i
]
)
{
return
fNamespaceMappings
[
depth
]
[
i
+
1
]
;
}
}
}
return
-
1
;
}
public
void
increaseDepth
(
)
throws
Exception
{
fElementDepth
++
;
if
(
fElementDepth
==
fNamespaceMappings
.
length
)
{
int
[
]
[
]
newMappings
=
new
int
[
fElementDepth
+
8
]
[
]
;
System
.
arraycopy
(
fNamespaceMappings
,
0
,
newMappings
,
0
,
fElementDepth
)
;
fNamespaceMappings
=
newMappings
;
}
if
(
fNamespaceMappings
[
fElementDepth
]
==
null
)
fNamespaceMappings
[
fElementDepth
]
=
new
int
[
9
]
;
fNamespaceMappings
[
fElementDepth
]
[
0
]
=
1
;
}
public
void
decreaseDepth
(
)
throws
Exception
{
if
(
fElementDepth
>
0
)
{
int
offset
=
fNamespaceMappings
[
fElementDepth
]
[
0
]
;
while
(
offset
>
1
)
{
offset
-=
2
;
fHandler
.
endNamespaceDeclScope
(
fNamespaceMappings
[
fElementDepth
]
[
offset
]
)
;
}
}
fElementDepth
--
;
}
private
NamespacesHandler
fHandler
=
null
;
private
int
fElementDepth
=
0
;
private
int
[
]
[
]
fNamespaceMappings
=
new
int
[
8
]
[
]
;
}
