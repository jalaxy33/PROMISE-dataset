package
org
.
apache
.
xerces
.
framework
;
import
org
.
apache
.
xerces
.
utils
.
StringPool
;
public
class
XMLContentSpec
{
public
static
final
int
CONTENTSPECNODE_LEAF
=
0
;
public
static
final
int
CONTENTSPECNODE_ZERO_OR_ONE
=
1
;
public
static
final
int
CONTENTSPECNODE_ZERO_OR_MORE
=
2
;
public
static
final
int
CONTENTSPECNODE_ONE_OR_MORE
=
3
;
public
static
final
int
CONTENTSPECNODE_CHOICE
=
4
;
public
static
final
int
CONTENTSPECNODE_SEQ
=
5
;
public
static
final
int
CONTENTSPECNODE_ANY
=
6
;
public
static
final
int
CONTENTSPECNODE_ANY_OTHER
=
7
;
public
static
final
int
CONTENTSPECNODE_ANY_LOCAL
=
8
;
public
static
final
int
CONTENTSPECNODE_ANY_LAX
=
22
;
public
static
final
int
CONTENTSPECNODE_ANY_OTHER_LAX
=
23
;
public
static
final
int
CONTENTSPECNODE_ANY_LOCAL_LAX
=
24
;
public
static
final
int
CONTENTSPECNODE_ANY_SKIP
=
38
;
public
static
final
int
CONTENTSPECNODE_ANY_OTHER_SKIP
=
39
;
public
static
final
int
CONTENTSPECNODE_ANY_LOCAL_SKIP
=
40
;
public
int
type
;
public
int
value
;
public
int
otherValue
;
public
XMLContentSpec
(
)
{
clear
(
)
;
}
public
XMLContentSpec
(
int
type
,
int
value
,
int
otherValue
)
{
setValues
(
type
,
value
,
otherValue
)
;
}
public
XMLContentSpec
(
XMLContentSpec
contentSpec
)
{
setValues
(
contentSpec
)
;
}
public
XMLContentSpec
(
XMLContentSpec
.
Provider
provider
,
int
contentSpecIndex
)
{
setValues
(
provider
,
contentSpecIndex
)
;
}
public
void
clear
(
)
{
type
=
-
1
;
value
=
-
1
;
otherValue
=
-
1
;
}
public
void
setValues
(
int
type
,
int
value
,
int
otherValue
)
{
this
.
type
=
type
;
this
.
value
=
value
;
this
.
otherValue
=
otherValue
;
}
public
void
setValues
(
XMLContentSpec
contentSpec
)
{
type
=
contentSpec
.
type
;
value
=
contentSpec
.
value
;
otherValue
=
contentSpec
.
otherValue
;
}
public
void
setValues
(
XMLContentSpec
.
Provider
provider
,
int
contentSpecIndex
)
{
if
(
!
provider
.
getContentSpec
(
contentSpecIndex
,
this
)
)
{
clear
(
)
;
}
}
public
static
String
toString
(
XMLContentSpec
.
Provider
provider
,
StringPool
stringPool
,
int
contentSpecIndex
)
{
XMLContentSpec
contentSpec
=
new
XMLContentSpec
(
)
;
if
(
provider
.
getContentSpec
(
contentSpecIndex
,
contentSpec
)
)
{
StringBuffer
str
=
new
StringBuffer
(
)
;
int
parentContentSpecType
=
contentSpec
.
type
&
0x0f
;
int
nextContentSpec
;
switch
(
parentContentSpecType
)
{
case
XMLContentSpec
.
CONTENTSPECNODE_LEAF
:
{
str
.
append
(
'('
)
;
if
(
contentSpec
.
value
==
-
1
&&
contentSpec
.
otherValue
==
-
1
)
{
str
.
append
(
"#PCDATA"
)
;
}
else
if
(
contentSpec
.
otherValue
!=
-
1
)
{
str
.
append
(
"##any:uri="
+
stringPool
.
toString
(
contentSpec
.
otherValue
)
)
;
}
else
if
(
contentSpec
.
value
==
-
1
)
{
str
.
append
(
"##any"
)
;
}
else
{
str
.
append
(
stringPool
.
toString
(
contentSpec
.
value
)
)
;
}
str
.
append
(
')'
)
;
break
;
}
case
XMLContentSpec
.
CONTENTSPECNODE_ZERO_OR_ONE
:
{
provider
.
getContentSpec
(
contentSpec
.
value
,
contentSpec
)
;
nextContentSpec
=
contentSpec
.
type
;
if
(
nextContentSpec
==
XMLContentSpec
.
CONTENTSPECNODE_LEAF
)
{
str
.
append
(
'('
)
;
str
.
append
(
stringPool
.
toString
(
contentSpec
.
value
)
)
;
str
.
append
(
')'
)
;
}
else
if
(
nextContentSpec
==
XMLContentSpec
.
CONTENTSPECNODE_ONE_OR_MORE
||
nextContentSpec
==
XMLContentSpec
.
CONTENTSPECNODE_ZERO_OR_MORE
||
nextContentSpec
==
XMLContentSpec
.
CONTENTSPECNODE_ZERO_OR_ONE
)
{
str
.
append
(
'('
)
;
appendContentSpec
(
provider
,
stringPool
,
contentSpec
,
str
,
true
,
parentContentSpecType
)
;
str
.
append
(
')'
)
;
}
else
{
appendContentSpec
(
provider
,
stringPool
,
contentSpec
,
str
,
true
,
parentContentSpecType
)
;
}
str
.
append
(
'?'
)
;
break
;
}
case
XMLContentSpec
.
CONTENTSPECNODE_ZERO_OR_MORE
:
{
provider
.
getContentSpec
(
contentSpec
.
value
,
contentSpec
)
;
nextContentSpec
=
contentSpec
.
type
;
if
(
nextContentSpec
==
XMLContentSpec
.
CONTENTSPECNODE_LEAF
)
{
str
.
append
(
'('
)
;
if
(
contentSpec
.
value
==
-
1
&&
contentSpec
.
otherValue
==
-
1
)
{
str
.
append
(
"#PCDATA"
)
;
}
else
if
(
contentSpec
.
otherValue
!=
-
1
)
{
str
.
append
(
"##any:uri="
+
stringPool
.
toString
(
contentSpec
.
otherValue
)
)
;
}
else
if
(
contentSpec
.
value
==
-
1
)
{
str
.
append
(
"##any"
)
;
}
else
{
appendContentSpec
(
provider
,
stringPool
,
contentSpec
,
str
,
true
,
parentContentSpecType
)
;
}
str
.
append
(
')'
)
;
}
else
if
(
nextContentSpec
==
XMLContentSpec
.
CONTENTSPECNODE_ONE_OR_MORE
||
nextContentSpec
==
XMLContentSpec
.
CONTENTSPECNODE_ZERO_OR_MORE
||
nextContentSpec
==
XMLContentSpec
.
CONTENTSPECNODE_ZERO_OR_ONE
)
{
str
.
append
(
'('
)
;
appendContentSpec
(
provider
,
stringPool
,
contentSpec
,
str
,
true
,
parentContentSpecType
)
;
str
.
append
(
')'
)
;
}
else
{
appendContentSpec
(
provider
,
stringPool
,
contentSpec
,
str
,
true
,
parentContentSpecType
)
;
}
str
.
append
(
'*'
)
;
break
;
}
case
XMLContentSpec
.
CONTENTSPECNODE_ONE_OR_MORE
:
{
provider
.
getContentSpec
(
contentSpec
.
value
,
contentSpec
)
;
nextContentSpec
=
contentSpec
.
type
;
if
(
nextContentSpec
==
XMLContentSpec
.
CONTENTSPECNODE_LEAF
)
{
str
.
append
(
'('
)
;
if
(
contentSpec
.
value
==
-
1
&&
contentSpec
.
otherValue
==
-
1
)
{
str
.
append
(
"#PCDATA"
)
;
}
else
if
(
contentSpec
.
otherValue
!=
-
1
)
{
str
.
append
(
"##any:uri="
+
stringPool
.
toString
(
contentSpec
.
otherValue
)
)
;
}
else
if
(
contentSpec
.
value
==
-
1
)
{
str
.
append
(
"##any"
)
;
}
else
{
str
.
append
(
stringPool
.
toString
(
contentSpec
.
value
)
)
;
}
str
.
append
(
')'
)
;
}
else
if
(
nextContentSpec
==
XMLContentSpec
.
CONTENTSPECNODE_ONE_OR_MORE
||
nextContentSpec
==
XMLContentSpec
.
CONTENTSPECNODE_ZERO_OR_MORE
||
nextContentSpec
==
XMLContentSpec
.
CONTENTSPECNODE_ZERO_OR_ONE
)
{
str
.
append
(
'('
)
;
appendContentSpec
(
provider
,
stringPool
,
contentSpec
,
str
,
true
,
parentContentSpecType
)
;
str
.
append
(
')'
)
;
}
else
{
appendContentSpec
(
provider
,
stringPool
,
contentSpec
,
str
,
true
,
parentContentSpecType
)
;
}
str
.
append
(
'+'
)
;
break
;
}
case
XMLContentSpec
.
CONTENTSPECNODE_CHOICE
:
case
XMLContentSpec
.
CONTENTSPECNODE_SEQ
:
{
appendContentSpec
(
provider
,
stringPool
,
contentSpec
,
str
,
true
,
parentContentSpecType
)
;
break
;
}
case
XMLContentSpec
.
CONTENTSPECNODE_ANY
:
{
str
.
append
(
"##any"
)
;
if
(
contentSpec
.
otherValue
!=
-
1
)
{
str
.
append
(
":uri="
)
;
str
.
append
(
stringPool
.
toString
(
contentSpec
.
otherValue
)
)
;
}
break
;
}
case
XMLContentSpec
.
CONTENTSPECNODE_ANY_OTHER
:
{
str
.
append
(
"##other:uri="
)
;
str
.
append
(
stringPool
.
toString
(
contentSpec
.
otherValue
)
)
;
break
;
}
case
XMLContentSpec
.
CONTENTSPECNODE_ANY_LOCAL
:
{
str
.
append
(
"##local"
)
;
break
;
}
default
:
{
str
.
append
(
"???"
)
;
}
}
return
str
.
toString
(
)
;
}
return
null
;
}
public
int
hashCode
(
)
{
return
type
<<
16
|
value
<<
8
|
otherValue
;
}
public
boolean
equals
(
Object
object
)
{
if
(
object
!=
null
&&
object
instanceof
XMLContentSpec
)
{
XMLContentSpec
contentSpec
=
(
XMLContentSpec
)
object
;
return
type
==
contentSpec
.
type
&&
value
==
contentSpec
.
value
&&
otherValue
==
contentSpec
.
otherValue
;
}
return
false
;
}
private
static
void
appendContentSpec
(
XMLContentSpec
.
Provider
provider
,
StringPool
stringPool
,
XMLContentSpec
contentSpec
,
StringBuffer
str
,
boolean
parens
,
int
parentContentSpecType
)
{
int
thisContentSpec
=
contentSpec
.
type
&
0x0f
;
switch
(
thisContentSpec
)
{
case
XMLContentSpec
.
CONTENTSPECNODE_LEAF
:
{
if
(
contentSpec
.
value
==
-
1
&&
contentSpec
.
otherValue
==
-
1
)
{
str
.
append
(
"#PCDATA"
)
;
}
else
if
(
contentSpec
.
value
==
-
1
&&
contentSpec
.
otherValue
!=
-
1
)
{
str
.
append
(
"##any:uri="
+
stringPool
.
toString
(
contentSpec
.
otherValue
)
)
;
}
else
if
(
contentSpec
.
value
==
-
1
)
{
str
.
append
(
"##any"
)
;
}
else
{
str
.
append
(
stringPool
.
toString
(
contentSpec
.
value
)
)
;
}
break
;
}
case
XMLContentSpec
.
CONTENTSPECNODE_ZERO_OR_ONE
:
{
if
(
parentContentSpecType
==
XMLContentSpec
.
CONTENTSPECNODE_ONE_OR_MORE
||
parentContentSpecType
==
XMLContentSpec
.
CONTENTSPECNODE_ZERO_OR_MORE
||
parentContentSpecType
==
XMLContentSpec
.
CONTENTSPECNODE_ZERO_OR_ONE
)
{
provider
.
getContentSpec
(
contentSpec
.
value
,
contentSpec
)
;
str
.
append
(
'('
)
;
appendContentSpec
(
provider
,
stringPool
,
contentSpec
,
str
,
true
,
thisContentSpec
)
;
str
.
append
(
')'
)
;
}
else
{
provider
.
getContentSpec
(
contentSpec
.
value
,
contentSpec
)
;
appendContentSpec
(
provider
,
stringPool
,
contentSpec
,
str
,
true
,
thisContentSpec
)
;
}
str
.
append
(
'?'
)
;
break
;
}
case
XMLContentSpec
.
CONTENTSPECNODE_ZERO_OR_MORE
:
{
if
(
parentContentSpecType
==
XMLContentSpec
.
CONTENTSPECNODE_ONE_OR_MORE
||
parentContentSpecType
==
XMLContentSpec
.
CONTENTSPECNODE_ZERO_OR_MORE
||
parentContentSpecType
==
XMLContentSpec
.
CONTENTSPECNODE_ZERO_OR_ONE
)
{
provider
.
getContentSpec
(
contentSpec
.
value
,
contentSpec
)
;
str
.
append
(
'('
)
;
appendContentSpec
(
provider
,
stringPool
,
contentSpec
,
str
,
true
,
thisContentSpec
)
;
str
.
append
(
')'
)
;
}
else
{
provider
.
getContentSpec
(
contentSpec
.
value
,
contentSpec
)
;
appendContentSpec
(
provider
,
stringPool
,
contentSpec
,
str
,
true
,
thisContentSpec
)
;
}
str
.
append
(
'*'
)
;
break
;
}
case
XMLContentSpec
.
CONTENTSPECNODE_ONE_OR_MORE
:
{
if
(
parentContentSpecType
==
XMLContentSpec
.
CONTENTSPECNODE_ONE_OR_MORE
||
parentContentSpecType
==
XMLContentSpec
.
CONTENTSPECNODE_ZERO_OR_MORE
||
parentContentSpecType
==
XMLContentSpec
.
CONTENTSPECNODE_ZERO_OR_ONE
)
{
str
.
append
(
'('
)
;
provider
.
getContentSpec
(
contentSpec
.
value
,
contentSpec
)
;
appendContentSpec
(
provider
,
stringPool
,
contentSpec
,
str
,
true
,
thisContentSpec
)
;
str
.
append
(
')'
)
;
}
else
{
provider
.
getContentSpec
(
contentSpec
.
value
,
contentSpec
)
;
appendContentSpec
(
provider
,
stringPool
,
contentSpec
,
str
,
true
,
thisContentSpec
)
;
}
str
.
append
(
'+'
)
;
break
;
}
case
XMLContentSpec
.
CONTENTSPECNODE_CHOICE
:
case
XMLContentSpec
.
CONTENTSPECNODE_SEQ
:
{
if
(
parens
)
{
str
.
append
(
'('
)
;
}
int
type
=
contentSpec
.
type
;
int
otherValue
=
contentSpec
.
otherValue
;
provider
.
getContentSpec
(
contentSpec
.
value
,
contentSpec
)
;
appendContentSpec
(
provider
,
stringPool
,
contentSpec
,
str
,
contentSpec
.
type
!=
type
,
thisContentSpec
)
;
if
(
type
==
XMLContentSpec
.
CONTENTSPECNODE_CHOICE
)
{
str
.
append
(
'|'
)
;
}
else
{
str
.
append
(
','
)
;
}
provider
.
getContentSpec
(
otherValue
,
contentSpec
)
;
appendContentSpec
(
provider
,
stringPool
,
contentSpec
,
str
,
true
,
thisContentSpec
)
;
if
(
parens
)
{
str
.
append
(
')'
)
;
}
break
;
}
case
XMLContentSpec
.
CONTENTSPECNODE_ANY
:
{
str
.
append
(
"##any"
)
;
if
(
contentSpec
.
otherValue
!=
-
1
)
{
str
.
append
(
":uri="
)
;
str
.
append
(
stringPool
.
toString
(
contentSpec
.
otherValue
)
)
;
}
break
;
}
case
XMLContentSpec
.
CONTENTSPECNODE_ANY_OTHER
:
{
str
.
append
(
"##other:uri="
)
;
str
.
append
(
stringPool
.
toString
(
contentSpec
.
otherValue
)
)
;
break
;
}
case
XMLContentSpec
.
CONTENTSPECNODE_ANY_LOCAL
:
{
str
.
append
(
"##local"
)
;
break
;
}
default
:
{
str
.
append
(
"???"
)
;
break
;
}
}
}
public
interface
Provider
{
public
boolean
getContentSpec
(
int
contentSpecIndex
,
XMLContentSpec
contentSpec
)
;
}
}
