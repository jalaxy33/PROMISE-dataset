package
javax
.
xml
.
parsers
;
import
java
.
io
.
File
;
import
java
.
io
.
InputStream
;
import
java
.
io
.
IOException
;
import
org
.
xml
.
sax
.
EntityResolver
;
import
org
.
xml
.
sax
.
ErrorHandler
;
import
org
.
xml
.
sax
.
InputSource
;
import
org
.
xml
.
sax
.
SAXException
;
import
org
.
w3c
.
dom
.
Document
;
public
abstract
class
DocumentBuilder
{
protected
DocumentBuilder
(
)
{
super
(
)
;
}
public
Document
parse
(
InputStream
stream
)
throws
SAXException
,
IOException
,
IllegalArgumentException
{
if
(
stream
==
null
)
throw
new
IllegalArgumentException
(
)
;
return
(
this
.
parse
(
new
InputSource
(
stream
)
)
)
;
}
public
Document
parse
(
String
uri
)
throws
SAXException
,
IOException
,
IllegalArgumentException
{
if
(
uri
==
null
)
throw
new
IllegalArgumentException
(
)
;
return
(
this
.
parse
(
new
InputSource
(
uri
)
)
)
;
}
public
Document
parse
(
File
file
)
throws
SAXException
,
IOException
,
IllegalArgumentException
{
if
(
file
==
null
)
throw
new
IllegalArgumentException
(
)
;
return
(
this
.
parse
(
new
InputSource
(
file
.
getName
(
)
)
)
)
;
}
public
abstract
Document
parse
(
InputSource
source
)
throws
SAXException
,
IOException
,
IllegalArgumentException
;
public
abstract
Document
newDocument
(
)
;
public
abstract
boolean
isNamespaceAware
(
)
;
public
abstract
boolean
isValidating
(
)
;
public
abstract
void
setEntityResolver
(
EntityResolver
er
)
;
public
abstract
void
setErrorHandler
(
ErrorHandler
eh
)
;
}
