package
javax
.
xml
.
parsers
;
import
java
.
io
.
File
;
import
java
.
io
.
InputStream
;
import
java
.
io
.
IOException
;
import
org
.
xml
.
sax
.
HandlerBase
;
import
org
.
xml
.
sax
.
InputSource
;
import
org
.
xml
.
sax
.
Parser
;
import
org
.
xml
.
sax
.
SAXException
;
public
abstract
class
SAXParser
{
protected
SAXParser
(
)
{
super
(
)
;
}
public
void
parse
(
InputStream
stream
,
HandlerBase
base
)
throws
SAXException
,
IOException
,
IllegalArgumentException
{
if
(
stream
==
null
)
throw
new
IllegalArgumentException
(
)
;
this
.
parse
(
new
InputSource
(
stream
)
,
base
)
;
}
public
void
parse
(
String
uri
,
HandlerBase
base
)
throws
SAXException
,
IOException
,
IllegalArgumentException
{
if
(
uri
==
null
)
throw
new
IllegalArgumentException
(
)
;
this
.
parse
(
new
InputSource
(
uri
)
,
base
)
;
}
public
void
parse
(
File
file
,
HandlerBase
base
)
throws
SAXException
,
IOException
,
IllegalArgumentException
{
if
(
file
==
null
)
throw
new
IllegalArgumentException
(
)
;
String
path
=
file
.
getAbsolutePath
(
)
;
if
(
File
.
separatorChar
!=
'/'
)
{
path
=
path
.
replace
(
File
.
separatorChar
,
'/'
)
;
}
if
(
!
path
.
startsWith
(
"/"
)
)
{
path
=
"/"
+
path
;
}
if
(
!
path
.
endsWith
(
"/"
)
&&
file
.
isDirectory
(
)
)
{
path
=
path
+
"/"
;
}
java
.
net
.
URL
url
=
new
java
.
net
.
URL
(
"file"
,
""
,
path
)
;
this
.
parse
(
new
InputSource
(
url
.
toString
(
)
)
,
base
)
;
}
public
void
parse
(
InputSource
source
,
HandlerBase
base
)
throws
SAXException
,
IOException
,
IllegalArgumentException
{
if
(
source
==
null
)
throw
new
IllegalArgumentException
(
)
;
Parser
p
=
this
.
getParser
(
)
;
if
(
base
!=
null
)
{
p
.
setDocumentHandler
(
base
)
;
p
.
setDTDHandler
(
base
)
;
p
.
setEntityResolver
(
base
)
;
p
.
setErrorHandler
(
base
)
;
}
p
.
parse
(
source
)
;
}
public
abstract
Parser
getParser
(
)
throws
SAXException
;
public
abstract
boolean
isNamespaceAware
(
)
;
public
abstract
boolean
isValidating
(
)
;
}
