package
org
.
xml
.
sax
.
helpers
;
import
java
.
io
.
IOException
;
import
java
.
util
.
Locale
;
import
org
.
xml
.
sax
.
Configurable
;
import
org
.
xml
.
sax
.
SAXNotSupportedException
;
import
org
.
xml
.
sax
.
SAXNotRecognizedException
;
import
org
.
xml
.
sax
.
Parser
;
import
org
.
xml
.
sax
.
InputSource
;
import
org
.
xml
.
sax
.
EntityResolver
;
import
org
.
xml
.
sax
.
DTDHandler
;
import
org
.
xml
.
sax
.
DocumentHandler
;
import
org
.
xml
.
sax
.
ErrorHandler
;
import
org
.
xml
.
sax
.
SAXException
;
public
class
ConfigurableParserAdapter
implements
Parser
,
Configurable
{
public
ConfigurableParserAdapter
(
Parser
parser
)
{
super
(
)
;
this
.
parser
=
parser
;
if
(
parser
instanceof
org
.
xml
.
sax
.
Configurable
)
{
configurable
=
(
Configurable
)
parser
;
}
}
public
void
setLocale
(
Locale
locale
)
throws
SAXException
{
parser
.
setLocale
(
locale
)
;
}
public
void
setEntityResolver
(
EntityResolver
resolver
)
{
parser
.
setEntityResolver
(
resolver
)
;
}
public
void
setDTDHandler
(
DTDHandler
handler
)
{
parser
.
setDTDHandler
(
handler
)
;
}
public
void
setDocumentHandler
(
DocumentHandler
handler
)
{
parser
.
setDocumentHandler
(
handler
)
;
}
public
void
setErrorHandler
(
ErrorHandler
handler
)
{
parser
.
setErrorHandler
(
handler
)
;
}
public
void
parse
(
InputSource
source
)
throws
SAXException
,
IOException
{
parser
.
parse
(
source
)
;
}
public
void
parse
(
String
systemId
)
throws
SAXException
,
IOException
{
parser
.
parse
(
systemId
)
;
}
public
void
setFeature
(
String
featureId
,
boolean
state
)
throws
SAXException
{
if
(
configurable
==
null
)
{
throw
new
SAXNotRecognizedException
(
"Feature: "
+
featureId
)
;
}
else
{
configurable
.
setFeature
(
featureId
,
state
)
;
}
}
public
boolean
getFeature
(
String
featureId
)
throws
SAXException
{
if
(
configurable
==
null
)
{
throw
new
SAXNotRecognizedException
(
"Feature: "
+
featureId
)
;
}
else
{
return
configurable
.
getFeature
(
featureId
)
;
}
}
public
void
setProperty
(
String
propertyId
,
Object
value
)
throws
SAXException
{
if
(
configurable
==
null
)
{
throw
new
SAXNotRecognizedException
(
"Property: "
+
propertyId
)
;
}
else
{
configurable
.
setProperty
(
propertyId
,
value
)
;
}
}
public
Object
getProperty
(
String
propertyId
)
throws
SAXException
{
if
(
configurable
==
null
)
{
throw
new
SAXNotRecognizedException
(
"Property: "
+
propertyId
)
;
}
else
{
return
configurable
.
getProperty
(
propertyId
)
;
}
}
private
Parser
parser
=
null
;
private
Configurable
configurable
=
null
;
}
