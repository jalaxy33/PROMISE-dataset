package
org
.
apache
.
xerces
.
validators
.
datatype
;
import
java
.
util
.
Hashtable
;
import
java
.
util
.
Locale
;
public
class
BooleanValidator
implements
InternalDatatypeValidator
{
private
Locale
fLocale
=
null
;
private
DatatypeMessageProvider
fMessageProvider
=
new
DatatypeMessageProvider
(
)
;
public
void
validate
(
String
content
)
throws
InvalidDatatypeValueException
{
if
(
!
content
.
equals
(
"true"
)
&&
!
content
.
equals
(
"false"
)
)
throw
new
InvalidDatatypeValueException
(
getErrorString
(
DatatypeMessageProvider
.
NotBoolean
,
DatatypeMessageProvider
.
MSG_NONE
,
new
Object
[
]
{
content
}
)
)
;
}
public
void
validate
(
int
contentIndex
)
throws
InvalidDatatypeValueException
{
}
public
void
setFacets
(
Hashtable
facets
)
throws
UnknownFacetException
,
IllegalFacetException
,
IllegalFacetValueException
{
throw
new
IllegalFacetException
(
)
;
}
public
void
setFacets
(
int
facets
[
]
)
throws
UnknownFacetException
,
IllegalFacetException
,
IllegalFacetValueException
{
throw
new
IllegalFacetException
(
)
;
}
public
void
setBasetype
(
DatatypeValidator
base
)
{
}
public
void
setLocale
(
Locale
locale
)
{
}
private
String
getErrorString
(
int
major
,
int
minor
,
Object
args
[
]
)
{
try
{
return
fMessageProvider
.
createMessage
(
fLocale
,
major
,
minor
,
args
)
;
}
catch
(
Exception
e
)
{
return
"Illegal Errorcode "
+
minor
;
}
}
}
