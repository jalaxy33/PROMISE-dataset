package
org
.
apache
.
xerces
.
validators
.
datatype
;
import
java
.
util
.
ListResourceBundle
;
import
java
.
util
.
Locale
;
import
java
.
util
.
ResourceBundle
;
import
org
.
apache
.
xerces
.
utils
.
XMLMessageProvider
;
public
class
DatatypeMessageProvider
implements
XMLMessageProvider
{
public
static
final
String
DATATYPE_DOMAIN
=
"http://www.w3.org/TR/xml-schema-2"
;
public
void
setLocale
(
Locale
locale
)
{
fLocale
=
locale
;
}
public
Locale
getLocale
(
)
{
return
fLocale
;
}
public
String
createMessage
(
Locale
locale
,
int
majorCode
,
int
minorCode
,
Object
args
[
]
)
{
boolean
throwex
=
false
;
if
(
fResourceBundle
==
null
||
locale
!=
fLocale
)
{
if
(
locale
!=
null
)
fResourceBundle
=
ListResourceBundle
.
getBundle
(
"org.apache.xerces.msg.DatatypeMessages"
,
locale
)
;
if
(
fResourceBundle
==
null
)
fResourceBundle
=
ListResourceBundle
.
getBundle
(
"org.apache.xerces.msg.DatatypeMessages"
)
;
}
if
(
majorCode
<
0
||
majorCode
>=
fgMessageKeys
.
length
)
{
majorCode
=
MSG_BAD_MAJORCODE
;
throwex
=
true
;
}
String
msgKey
=
fgMessageKeys
[
majorCode
]
;
String
msg
=
fResourceBundle
.
getString
(
msgKey
)
;
if
(
args
!=
null
)
{
try
{
msg
=
java
.
text
.
MessageFormat
.
format
(
msg
,
args
)
;
}
catch
(
Exception
e
)
{
msg
=
fResourceBundle
.
getString
(
fgMessageKeys
[
MSG_FORMAT_FAILURE
]
)
;
msg
+=
" "
+
fResourceBundle
.
getString
(
msgKey
)
;
}
}
if
(
throwex
)
{
throw
new
RuntimeException
(
msg
)
;
}
return
msg
;
}
private
Locale
fLocale
=
null
;
private
ResourceBundle
fResourceBundle
=
null
;
public
static
final
int
MSG_BAD_MAJORCODE
=
0
,
MSG_FORMAT_FAILURE
=
1
,
NotBoolean
=
2
,
NotDecimal
=
3
,
FacetsInconsistent
=
4
,
IllegalFacetValue
=
5
,
IllegalDecimalFacet
=
6
,
UnknownFacet
=
7
,
InvalidEnumValue
=
8
,
OutOfBounds
=
9
,
NotAnEnumValue
=
10
,
NotInteger
=
11
,
IllegalIntegerFacet
=
12
,
NotReal
=
13
,
IllegalRealFacet
=
14
,
MSG_MAX_CODE
=
15
;
public
static
final
int
MSG_NONE
=
0
;
public
static
final
String
[
]
fgMessageKeys
=
{
"BadMajorCode"
,
"FormatFailed"
,
"NotBoolean"
,
"NotDecimal"
,
"FacetsInconsistent"
,
"IllegalFacetValue"
,
"IllegalDecimalFacet"
,
"UnknownFacet"
,
"InvalidEnumValue"
,
"OutOfBounds"
,
"NotAnEnumValue"
,
"NotInteger"
,
"IllegalIntegerFacet"
,
"NotReal"
,
"IllegalRealFacet"
,
}
;
}
