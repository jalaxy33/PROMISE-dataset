package
org
.
apache
.
xerces
.
validators
.
dtd
;
import
org
.
apache
.
xerces
.
framework
.
XMLContentSpecNode
;
import
org
.
apache
.
xerces
.
utils
.
ImplementationMessages
;
public
class
SimpleContentModel
implements
XMLContentModel
{
public
SimpleContentModel
(
int
firstChildIndex
,
int
secondChildIndex
,
int
cmOp
)
{
fFirstChild
=
firstChildIndex
;
fSecondChild
=
secondChildIndex
;
fOp
=
cmOp
;
}
public
int
validateContent
(
int
childCount
,
int
[
]
children
)
throws
Exception
{
switch
(
fOp
)
{
case
XMLContentSpecNode
.
CONTENTSPECNODE_LEAF
:
if
(
childCount
==
0
)
return
0
;
if
(
children
[
0
]
!=
fFirstChild
)
return
0
;
if
(
childCount
>
1
)
return
1
;
break
;
case
XMLContentSpecNode
.
CONTENTSPECNODE_ZERO_OR_ONE
:
if
(
(
childCount
==
1
)
&&
(
children
[
0
]
!=
fFirstChild
)
)
return
0
;
if
(
childCount
>
1
)
return
1
;
break
;
case
XMLContentSpecNode
.
CONTENTSPECNODE_ZERO_OR_MORE
:
if
(
childCount
>
0
)
{
for
(
int
index
=
0
;
index
<
childCount
;
index
++
)
{
if
(
children
[
index
]
!=
fFirstChild
)
return
index
;
}
}
break
;
case
XMLContentSpecNode
.
CONTENTSPECNODE_ONE_OR_MORE
:
if
(
childCount
==
0
)
return
0
;
for
(
int
index
=
0
;
index
<
childCount
;
index
++
)
{
if
(
children
[
index
]
!=
fFirstChild
)
return
index
;
}
break
;
case
XMLContentSpecNode
.
CONTENTSPECNODE_CHOICE
:
if
(
childCount
==
0
)
return
0
;
if
(
(
children
[
0
]
!=
fFirstChild
)
&&
(
children
[
0
]
!=
fSecondChild
)
)
return
0
;
if
(
childCount
>
1
)
return
1
;
break
;
case
XMLContentSpecNode
.
CONTENTSPECNODE_SEQ
:
if
(
childCount
==
2
)
{
if
(
children
[
0
]
!=
fFirstChild
)
return
0
;
if
(
children
[
1
]
!=
fSecondChild
)
return
1
;
}
else
{
if
(
childCount
>
2
)
{
return
2
;
}
return
childCount
;
}
break
;
default
:
throw
new
CMException
(
ImplementationMessages
.
VAL_CST
)
;
}
return
-
1
;
}
public
int
whatCanGoHere
(
boolean
fullyValid
,
InsertableElementsInfo
info
)
throws
Exception
{
for
(
int
index
=
info
.
insertAt
;
index
<
info
.
childCount
;
index
++
)
info
.
curChildren
[
index
]
=
info
.
curChildren
[
index
+
1
]
;
info
.
childCount
--
;
final
int
failedIndex
=
validateContent
(
info
.
childCount
,
info
.
curChildren
)
;
if
(
(
failedIndex
!=
-
1
)
&&
(
failedIndex
<
info
.
insertAt
)
)
return
failedIndex
;
info
.
canHoldPCData
=
false
;
if
(
(
fOp
==
XMLContentSpecNode
.
CONTENTSPECNODE_LEAF
)
||
(
fOp
==
XMLContentSpecNode
.
CONTENTSPECNODE_ZERO_OR_ONE
)
||
(
fOp
==
XMLContentSpecNode
.
CONTENTSPECNODE_ZERO_OR_MORE
)
||
(
fOp
==
XMLContentSpecNode
.
CONTENTSPECNODE_ONE_OR_MORE
)
)
{
info
.
resultsCount
=
1
;
}
else
if
(
(
fOp
==
XMLContentSpecNode
.
CONTENTSPECNODE_CHOICE
)
||
(
fOp
==
XMLContentSpecNode
.
CONTENTSPECNODE_SEQ
)
)
{
info
.
resultsCount
=
2
;
}
else
{
throw
new
CMException
(
ImplementationMessages
.
VAL_CST
)
;
}
if
(
(
info
.
results
==
null
)
||
(
info
.
results
.
length
<
info
.
resultsCount
)
)
info
.
results
=
new
boolean
[
info
.
resultsCount
]
;
if
(
(
info
.
possibleChildren
==
null
)
||
(
info
.
possibleChildren
.
length
<
info
.
resultsCount
)
)
{
info
.
possibleChildren
=
new
int
[
info
.
resultsCount
]
;
}
info
.
possibleChildren
[
0
]
=
fFirstChild
;
info
.
results
[
0
]
=
false
;
if
(
info
.
resultsCount
==
2
)
{
info
.
possibleChildren
[
1
]
=
fSecondChild
;
info
.
results
[
1
]
=
false
;
}
info
.
isValidEOC
=
false
;
switch
(
fOp
)
{
case
XMLContentSpecNode
.
CONTENTSPECNODE_LEAF
:
case
XMLContentSpecNode
.
CONTENTSPECNODE_ZERO_OR_ONE
:
if
(
info
.
childCount
==
0
)
{
info
.
results
[
0
]
=
true
;
}
else
if
(
info
.
childCount
>
0
)
{
if
(
!
fullyValid
&&
(
info
.
insertAt
==
0
)
)
info
.
results
[
0
]
=
true
;
}
if
(
fOp
==
XMLContentSpecNode
.
CONTENTSPECNODE_LEAF
)
{
if
(
info
.
insertAt
==
0
)
info
.
isValidEOC
=
true
;
}
else
{
info
.
isValidEOC
=
true
;
}
break
;
case
XMLContentSpecNode
.
CONTENTSPECNODE_ZERO_OR_MORE
:
case
XMLContentSpecNode
.
CONTENTSPECNODE_ONE_OR_MORE
:
info
.
results
[
0
]
=
true
;
if
(
(
fOp
==
XMLContentSpecNode
.
CONTENTSPECNODE_ZERO_OR_MORE
)
||
(
info
.
insertAt
>
0
)
)
{
info
.
isValidEOC
=
true
;
}
break
;
case
XMLContentSpecNode
.
CONTENTSPECNODE_CHOICE
:
if
(
info
.
insertAt
==
0
)
{
if
(
!
fullyValid
&&
(
info
.
childCount
==
0
)
)
{
info
.
results
[
0
]
=
true
;
info
.
results
[
1
]
=
true
;
}
}
if
(
info
.
insertAt
==
1
)
info
.
isValidEOC
=
true
;
break
;
case
XMLContentSpecNode
.
CONTENTSPECNODE_SEQ
:
if
(
info
.
insertAt
==
0
)
{
if
(
fullyValid
)
{
if
(
info
.
childCount
==
1
)
info
.
results
[
0
]
=
info
.
curChildren
[
0
]
==
fSecondChild
;
}
else
{
info
.
results
[
0
]
=
true
;
}
}
else
if
(
info
.
insertAt
==
1
)
{
if
(
!
fullyValid
||
(
info
.
childCount
==
1
)
)
info
.
results
[
1
]
=
true
;
}
if
(
info
.
insertAt
==
2
)
info
.
isValidEOC
=
true
;
break
;
default
:
throw
new
CMException
(
ImplementationMessages
.
VAL_CST
)
;
}
return
-
1
;
}
int
fFirstChild
;
int
fSecondChild
;
int
fOp
;
}
;
