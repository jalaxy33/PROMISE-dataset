package
org
.
apache
.
xerces
.
jaxp
;
import
java
.
io
.
IOException
;
import
javax
.
xml
.
parsers
.
DocumentBuilder
;
import
javax
.
xml
.
parsers
.
ParserConfigurationException
;
import
org
.
apache
.
xerces
.
parsers
.
DOMParser
;
import
org
.
xml
.
sax
.
EntityResolver
;
import
org
.
xml
.
sax
.
ErrorHandler
;
import
org
.
xml
.
sax
.
InputSource
;
import
org
.
xml
.
sax
.
SAXException
;
import
org
.
w3c
.
dom
.
Document
;
public
class
DocumentBuilderImpl
extends
DocumentBuilder
{
private
boolean
namespaces
=
false
;
private
boolean
validation
=
false
;
private
DOMParser
parser
=
null
;
private
DocumentBuilderImpl
(
)
{
super
(
)
;
}
protected
DocumentBuilderImpl
(
boolean
namespaces
,
boolean
validation
)
throws
ParserConfigurationException
{
this
(
)
;
DOMParser
p
=
new
DOMParser
(
)
;
try
{
p
.
setFeature
(
"http://xml.org/sax/features/namespaces"
,
namespaces
)
;
}
catch
(
SAXException
e
)
{
throw
new
ParserConfigurationException
(
"Cannot set namespace "
+
"awareness to "
+
namespaces
)
;
}
try
{
p
.
setFeature
(
"http://xml.org/sax/features/validation"
,
validation
)
;
}
catch
(
SAXException
e
)
{
throw
new
ParserConfigurationException
(
"Cannot set validation to "
+
validation
)
;
}
this
.
namespaces
=
namespaces
;
this
.
validation
=
validation
;
this
.
parser
=
p
;
}
public
Document
parse
(
InputSource
source
)
throws
SAXException
,
IOException
,
IllegalArgumentException
{
if
(
source
==
null
)
throw
new
IllegalArgumentException
(
)
;
this
.
parser
.
parse
(
source
)
;
return
(
this
.
parser
.
getDocument
(
)
)
;
}
public
Document
newDocument
(
)
{
return
(
new
org
.
apache
.
xerces
.
dom
.
DocumentImpl
(
)
)
;
}
public
boolean
isNamespaceAware
(
)
{
return
(
this
.
namespaces
)
;
}
public
boolean
isValidating
(
)
{
return
(
this
.
validation
)
;
}
public
void
setEntityResolver
(
EntityResolver
er
)
{
this
.
parser
.
setEntityResolver
(
er
)
;
}
public
void
setErrorHandler
(
ErrorHandler
eh
)
{
this
.
parser
.
setErrorHandler
(
eh
)
;
}
}
