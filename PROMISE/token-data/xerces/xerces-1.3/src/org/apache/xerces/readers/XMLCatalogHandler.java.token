package
org
.
apache
.
xerces
.
readers
;
import
java
.
io
.
IOException
;
import
java
.
util
.
Enumeration
;
import
java
.
util
.
Hashtable
;
import
org
.
xml
.
sax
.
EntityResolver
;
import
org
.
xml
.
sax
.
InputSource
;
import
org
.
xml
.
sax
.
SAXException
;
public
abstract
class
XMLCatalogHandler
implements
EntityResolver
{
public
abstract
void
loadCatalog
(
InputSource
source
)
throws
Exception
;
private
Hashtable
publicMap
=
new
Hashtable
(
)
;
private
Hashtable
systemMap
=
new
Hashtable
(
)
;
public
void
addPublicMapping
(
String
publicId
,
String
systemId
)
{
publicMap
.
put
(
publicId
,
systemId
)
;
}
public
void
removePublicMapping
(
System
publicId
)
{
publicMap
.
remove
(
publicId
)
;
}
public
Enumeration
getPublicMappingKeys
(
)
{
return
publicMap
.
keys
(
)
;
}
public
String
getPublicMapping
(
String
publicId
)
{
return
(
String
)
publicMap
.
get
(
publicId
)
;
}
public
void
addSystemMapping
(
String
systemId1
,
String
systemId2
)
{
systemMap
.
put
(
systemId1
,
systemId2
)
;
}
public
void
removeSystemMapping
(
String
systemId
)
{
systemMap
.
remove
(
systemId
)
;
}
public
Enumeration
getSystemMappingKeys
(
)
{
return
systemMap
.
keys
(
)
;
}
public
String
getSystemMapping
(
String
systemId
)
{
return
(
String
)
systemMap
.
get
(
systemId
)
;
}
public
InputSource
resolveEntity
(
String
publicId
,
String
systemId
)
throws
SAXException
,
IOException
{
if
(
publicId
!=
null
)
{
String
value
=
getPublicMapping
(
publicId
)
;
if
(
value
!=
null
)
{
return
new
InputSource
(
value
)
;
}
}
if
(
systemId
!=
null
)
{
String
value
=
getSystemMapping
(
systemId
)
;
if
(
value
==
null
)
{
value
=
systemId
;
}
return
new
InputSource
(
value
)
;
}
return
null
;
}
}
