package
org
.
apache
.
xerces
.
utils
;
import
org
.
apache
.
xerces
.
readers
.
XMLEntityHandler
;
public
final
class
ChunkyCharArray
implements
XMLEntityHandler
.
CharBuffer
{
public
ChunkyCharArray
(
StringPool
stringPool
)
{
fStringPool
=
stringPool
;
fCurrentChunk
=
CharDataChunk
.
createChunk
(
stringPool
,
null
)
;
}
public
int
length
(
)
{
return
fLength
;
}
public
void
append
(
char
ch
)
{
try
{
fCurrentData
[
fCurrentIndex
]
=
ch
;
}
catch
(
ArrayIndexOutOfBoundsException
ex
)
{
if
(
fCurrentIndex
==
CharDataChunk
.
CHUNK_SIZE
)
{
fCurrentChunk
=
CharDataChunk
.
createChunk
(
fStringPool
,
fCurrentChunk
)
;
fCurrentData
=
new
char
[
INITIAL_CHUNK_SIZE
]
;
fCurrentIndex
=
0
;
}
else
{
char
[
]
newData
=
new
char
[
fCurrentIndex
*
2
]
;
System
.
arraycopy
(
fCurrentData
,
0
,
newData
,
0
,
fCurrentIndex
)
;
fCurrentData
=
newData
;
}
fCurrentChunk
.
setCharArray
(
fCurrentData
)
;
fCurrentData
[
fCurrentIndex
]
=
ch
;
}
catch
(
NullPointerException
ex
)
{
fCurrentData
=
new
char
[
INITIAL_CHUNK_SIZE
]
;
fCurrentChunk
.
setCharArray
(
fCurrentData
)
;
fCurrentData
[
fCurrentIndex
]
=
ch
;
}
fCurrentIndex
++
;
fLength
++
;
}
public
void
append
(
String
s
)
{
int
slen
=
s
.
length
(
)
;
for
(
int
i
=
0
;
i
<
slen
;
i
++
)
append
(
s
.
charAt
(
i
)
)
;
}
public
void
append
(
char
[
]
ch
,
int
offset
,
int
length
)
{
while
(
length
--
>
0
)
append
(
ch
[
offset
++
]
)
;
}
public
void
append
(
ChunkyCharArray
charArray
,
int
offset
,
int
length
)
{
fCurrentChunk
.
append
(
charArray
,
offset
,
length
)
;
}
public
int
addString
(
int
offset
,
int
length
)
{
if
(
length
==
0
)
return
0
;
return
fCurrentChunk
.
addString
(
offset
,
length
)
;
}
public
int
addSymbol
(
int
offset
,
int
length
)
{
if
(
length
==
0
)
return
0
;
return
fCurrentChunk
.
addSymbol
(
offset
,
length
,
0
)
;
}
private
static
final
int
INITIAL_CHUNK_SHIFT
=
7
;
private
static
final
int
INITIAL_CHUNK_SIZE
=
(
1
<<
INITIAL_CHUNK_SHIFT
)
;
private
StringPool
fStringPool
=
null
;
private
CharDataChunk
fCurrentChunk
=
null
;
private
char
[
]
fCurrentData
=
null
;
private
int
fCurrentIndex
=
0
;
private
int
fLength
=
0
;
}
