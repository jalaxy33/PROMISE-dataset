package
org
.
apache
.
xerces
.
jaxp
;
import
java
.
io
.
File
;
import
java
.
io
.
InputStream
;
import
java
.
io
.
IOException
;
import
javax
.
xml
.
parsers
.
ParserConfigurationException
;
import
org
.
apache
.
xerces
.
parsers
.
SAXParser
;
import
org
.
xml
.
sax
.
HandlerBase
;
import
org
.
xml
.
sax
.
InputSource
;
import
org
.
xml
.
sax
.
Parser
;
import
org
.
xml
.
sax
.
XMLReader
;
import
org
.
xml
.
sax
.
SAXException
;
import
org
.
xml
.
sax
.
SAXNotRecognizedException
;
import
org
.
xml
.
sax
.
SAXNotSupportedException
;
public
class
SAXParserImpl
extends
javax
.
xml
.
parsers
.
SAXParser
{
private
boolean
namespaces
=
false
;
private
boolean
validation
=
false
;
private
Parser
parser
=
null
;
private
SAXParserImpl
(
)
{
super
(
)
;
}
protected
SAXParserImpl
(
boolean
namespaces
,
boolean
validation
)
throws
ParserConfigurationException
{
this
(
)
;
SAXParser
p
=
new
SAXParser
(
)
;
try
{
p
.
setFeature
(
"http://xml.org/sax/features/namespaces"
,
namespaces
)
;
}
catch
(
SAXException
e
)
{
throw
new
ParserConfigurationException
(
"Cannot set namespace "
+
"awareness to "
+
namespaces
)
;
}
try
{
p
.
setFeature
(
"http://xml.org/sax/features/validation"
,
validation
)
;
}
catch
(
SAXException
e
)
{
throw
new
ParserConfigurationException
(
"Cannot set validation to "
+
validation
)
;
}
this
.
namespaces
=
namespaces
;
this
.
validation
=
validation
;
this
.
parser
=
p
;
}
public
Parser
getParser
(
)
{
return
(
this
.
parser
)
;
}
public
XMLReader
getXMLReader
(
)
throws
SAXException
{
return
(
XMLReader
)
parser
;
}
public
boolean
isNamespaceAware
(
)
{
return
(
this
.
namespaces
)
;
}
public
boolean
isValidating
(
)
{
return
(
this
.
validation
)
;
}
public
void
setProperty
(
String
name
,
Object
value
)
throws
SAXNotRecognizedException
,
SAXNotSupportedException
{
throw
new
SAXNotRecognizedException
(
"Feature: "
+
name
)
;
}
public
Object
getProperty
(
String
name
)
throws
SAXNotRecognizedException
,
SAXNotSupportedException
{
throw
new
SAXNotRecognizedException
(
"Feature: "
+
name
)
;
}
}
